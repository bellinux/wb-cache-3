132|7762|Public
2500|$|A smartSD {{memory card}} is a microSD card with an {{internal}} [...] "secure element" [...] {{that allows the}} transfer of ISO 7816 Application <b>Protocol</b> <b>Data</b> <b>Unit</b> commands to, for example, JavaCard applets running on the internal secure element through the SD bus.|$|E
50|$|Media {{access control}} <b>protocol</b> <b>data</b> <b>unit</b> or MPDU {{is a message}} (<b>protocol</b> <b>data</b> <b>unit)</b> {{exchanged}} between media access control (MAC) entities in a communication system based on the layered Open Systems Interconnection model.|$|E
5000|$|The seven SNMP <b>protocol</b> <b>data</b> <b>unit</b> (PDU) {{types are}} as follows: ...|$|E
5000|$|APDU - Allows the {{communication}} between web application and a smart card {{by using the}} Application <b>Protocol</b> <b>Data</b> <b>Units</b> (APDUs).|$|R
5000|$|Aggregation of MAC <b>protocol</b> <b>data</b> <b>units</b> (MPDUs) at {{the bottom}} of the MAC (referred to as MPDU {{aggregation}} or A-MPDU) ...|$|R
5000|$|Transfer {{of upper}} layer <b>Protocol</b> <b>Data</b> <b>Units</b> (PDUs) {{in one of}} three modes: Acknowledged Mode (AM), Unacknowledged Mode (UM) and Transparent Mode (TM) ...|$|R
5000|$|... #Caption: Ethernet Synchronization Message Channel (ESMC) <b>protocol</b> <b>data</b> <b>unit</b> rec. ITU-T G.8264 ...|$|E
5000|$|Each Frame Relay <b>protocol</b> <b>data</b> <b>unit</b> (PDU) {{consists}} of the following fields: ...|$|E
5000|$|In telecommunications, {{the term}} <b>protocol</b> <b>data</b> <b>unit</b> (PDU) has the {{following}} meanings: ...|$|E
50|$|A frame control (FC) {{field in}} 8 bits {{carrying}} a fixed value. This field exists for compatibility with other protocols using similar <b>protocol</b> <b>data</b> <b>units</b> (PDUs).|$|R
50|$|SNMPv1 {{specifies}} five core <b>protocol</b> <b>data</b> <b>units</b> (PDUs). Two other PDUs, GetBulkRequest and InformRequest {{were added}} in SNMPv2 and the Report PDU was added in SNMPv3.|$|R
50|$|In practice, MPLS {{is mainly}} used to forward IP <b>protocol</b> <b>data</b> <b>units</b> (PDUs) and Virtual Private LAN Service (VPLS) Ethernet traffic. Major {{applications}} of MPLS are telecommunications traffic engineering, and MPLS VPN.|$|R
5000|$|A Modbus {{frame is}} {{composed}} of an Application Data Unit (ADU), which encloses a <b>Protocol</b> <b>Data</b> <b>Unit</b> (PDU): ...|$|E
50|$|In {{the context}} of packet-switched data networks, a <b>protocol</b> <b>data</b> <b>unit</b> (PDU) is best {{understood}} {{in relation to a}} service data unit (SDU).|$|E
5000|$|The {{data to be}} {{transmitted}} is composed at the topmost layer of the transmitting device (layer N) into a <b>protocol</b> <b>data</b> <b>unit</b> (PDU).|$|E
50|$|At {{each level}} N, two {{entities}} at the communicating devices (layer N peers) exchange <b>protocol</b> <b>data</b> <b>units</b> (PDUs) {{by means of}} a layer N protocol. Each PDU contains a payload, called the service <b>data</b> <b>unit</b> (SDU), along with protocol-related headers or footers.|$|R
5000|$|ISO/IEC 7816-3 {{defines the}} {{transmission}} protocol between chip cards and readers. Using this <b>protocol,</b> <b>data</b> is exchanged in application <b>protocol</b> <b>data</b> <b>units</b> (APDUs). This comprises sending a command to a card, the card processing it, and sending a response. EMV uses the following commands: ...|$|R
40|$|Abstract- This paper {{presents}} our black-box approach (Tsert Method ©®™) {{in testing}} objectoriented programs {{based on the}} use of <b>protocol</b> <b>data</b> <b>units</b> to communicate with a test-harness, which are built by processing the methods of a given class. Testing object-oriented programs has always been difficult, especially in handling inheritance and polymorphism. The approach to be presented, allows the tester, to test classes in a bottom-up manner, thereby handling inheritance and polymorphism, as the subclasses and classes are processed. The use of <b>Protocol</b> <b>Data</b> <b>Units</b> (PDUs) eliminates the need to generate stubs for classes and constructors. Our black-box approach, by handling only publicly accessible constructs, retain the mai...|$|R
5000|$|Assuming {{a message}} that {{complies}} with the Foo Protocol {{and that will be}} sent to the receiving party, this particular message (<b>protocol</b> <b>data</b> <b>unit</b> (PDU)) is: ...|$|E
50|$|TPDU (Transport <b>Protocol</b> <b>Data</b> <b>Unit)</b> is {{a message}} {{encapsulation}} format where there are several bytes of routing header added {{to the front of}} the payload message.|$|E
50|$|Typical network {{steganography}} methods involve {{modification of}} the properties of a single network protocol. Such modification {{can be applied to}} the PDU (<b>Protocol</b> <b>Data</b> <b>Unit),</b> to the time relations between the exchanged PDUs, or both (hybrid methods).|$|E
5000|$|The Application Protocol Convergence (APC) Layer, which accepts frames (usually in Ethernet format) {{from the}} upper layer (Application Entity) and encapsulates them into G.hn APC <b>protocol</b> <b>data</b> <b>units</b> (APDUs). The maximum payload of each APDU is 214 bytes.|$|R
30|$|OAI stores UEs’ key {{performance}} indicators, e.g. total {{data rates}} {{offered to the}} UEs in downlink. The following group-based statistics {{have been added to}} OAI, per sub-frame: MAC <b>Protocol</b> <b>Data</b> <b>Units</b> (PDUs), transferred size, download data rate, MCS, and active/scheduled UEs.|$|R
50|$|The {{presentation}} layer establishes context between application-layer entities, {{in which the}} application-layer entities may use different syntax and semantics if the presentation service provides a mapping between them. If a mapping is available, presentation service <b>data</b> <b>units</b> are encapsulated into session <b>protocol</b> <b>data</b> <b>units</b> and passed down the protocol stack.|$|R
5000|$|The term TCP packet {{appears in}} both {{informal}} and formal usage, whereas in more precise terminology segment {{refers to the}} TCP <b>protocol</b> <b>data</b> <b>unit</b> (PDU), datagram to the IP PDU, and frame to the data link layer PDU: ...|$|E
50|$|In {{the context}} of smart cards, an {{application}} <b>protocol</b> <b>data</b> <b>unit</b> (APDU) is the communication unit between a smart card reader and a smart card. The structure of the APDU is defined by ISO/IEC 7816-4 Organization, security and commands for interchange.|$|E
50|$|The {{protocol}} is simple: the Controller originates {{the signal}} and sends out a PDU (<b>Protocol</b> <b>Data</b> <b>Unit)</b> to a Responder {{along with its}} address and the command to be processed. The Responder sends a PDU back to the Controller in response.|$|E
50|$|The {{protocol}} {{is based}} on pairs of request/response PDUs (<b>protocol</b> <b>data</b> <b>units,</b> or packets) exchanged over OSI layer 4 (TCP session or X.25 SVC3) connections. The well-known port assigned by the IANA for SMPP when operating over TCP is 2775, but multiple arbitrary port numbers are often used in messaging environments.|$|R
30|$|In this work, one encoded symbol {{is placed}} into one UDP/internet {{protocol}} (IP) packet {{and hence the}} terms packet and symbol can be used interchangeably. Also, 802.11 multicast/broadcast packets cannot be fragmented at the MAC layer, resulting in a 1 : 1 mapping between encoded symbol and PHY layer <b>protocol</b> <b>data</b> <b>units</b> (PPDU).|$|R
50|$|SNAP {{is usually}} used with Unnumbered Information 802.2 <b>protocol</b> <b>data</b> <b>units</b> (PDUs), with a control field value of 3, and the LSAP values are usually {{hexadecimal}} AA, so the 802.2 LLC header for a SNAP packet is usually AA AA 03; however, SNAP {{can be used}} with other PDU types as well.|$|R
5000|$|A smartSD {{memory card}} is a microSD card with an {{internal}} [...] "secure element" [...] {{that allows the}} transfer of ISO 7816 Application <b>Protocol</b> <b>Data</b> <b>Unit</b> commands to, for example, JavaCard applets running on the internal secure element through the SD bus.|$|E
5000|$|<b>Protocol</b> <b>Data</b> <b>Unit</b> (PDU). The {{string of}} octets {{exchanged}} among the Protocol Machines (PM). PDUs contain two parts: the PCI, which is understood and {{interpreted by the}} DIF, and User-Data, that is incomprehensible to this PM and is passed to its user.|$|E
50|$|Where PA is the preamble, SD is a start delimiter, FC is frame control, DA is the {{destination}} address, SA {{is the source}} address, PDU is the <b>protocol</b> <b>data</b> <b>unit</b> (or packet data unit), FCS is the frame check Sequence (or checksum), and ED/FS are the end delimiter and frame status.The Internet Engineering Task Force defined a standard for transmission of the Internet Protocol (which would be the <b>protocol</b> <b>data</b> <b>unit</b> in this case) over FDDI.It was first proposed in June 1989 and revised in 1990.Some aspects of the protocol were compatible with the IEEE 802.2 standard for logical link control. For example, the 48-bit MAC addresses that became popular with the Ethernet family. Thus other protocols such as the Address Resolution Protocol (ARP) could be common as well.|$|E
50|$|Bridge <b>Protocol</b> <b>Data</b> <b>Units</b> (BPDUs) are frames {{that contain}} {{information}} about the Spanning tree protocol (STP). Switches send BPDUs using a unique MAC address from its origin port and a multicast address as destination MAC (01:80:C2:00:00:00, or 01:00:0C:CC:CC:CD for Per VLAN Spanning Tree).For STP algorithms to function, the switches need to share {{information about the}}mselves and their connections. What they share are bridge <b>protocol</b> <b>data</b> <b>units</b> (BPDUs). BPDUs are sent out as multicast frames to which only other layer 2 switches or bridges are listening. If any loops (multiple possible paths between switches) {{are found in the}} network topology, the switches will co-operate to disable a port or ports to ensure that there are no loops; that is, from one device to any other device in the layer 2 network, only one path can be taken.|$|R
40|$|The {{field of}} data and {{computer}} communications networking uses an array of abstract concepts such as encapsulation, <b>protocol</b> <b>data</b> <b>units,</b> virtual circuits etc. to describe and explain the underlying processes. Various studies, together with our own observations, strongly indicate that students often find these concepts difficult to learn, as they cannot easily be demonstrated...|$|R
50|$|The GGSN is {{the anchor}} point {{that enables the}} {{mobility}} of the user terminal in the GPRS/UMTS networks. In essence, it carries out the role in GPRS equivalent to the home agent in Mobile IP. It maintains routing necessary to tunnel the <b>protocol</b> <b>data</b> <b>units</b> (PDUs) to the SGSN that services a particular MS (mobile station).|$|R
