0|134|Public
50|$|In 2011, Lock Laces {{became a}} {{national}} sponsor of the Special Olympics’ Healthy Athletes Fit Feet <b>program.</b> <b>Lock</b> Laces has also partnered with the American Indoor Football Association.|$|R
5|$|One thread will {{successfully}} lock variable V, {{while the}} other thread will be locked out—unable to proceed until V is unlocked again. This guarantees correct execution of the <b>program.</b> <b>Locks,</b> while necessary to ensure correct program execution, can greatly slow a program.|$|R
50|$|She {{was also}} the co-hosts for popular radio <b>program</b> Girls <b>Locks</b> in 2010-2012.|$|R
5000|$|... 16 (not {{suitable}} {{for children under}} 16), access to these <b>programs</b> is <b>locked</b> by a personal password.|$|R
40|$|The {{emergence}} of applied mathematics {{as a discipline}} in the United States is traditionally associated with World War II. Hungarian-born Theodore von Kármán {{was among those who}} had waged a long and vigorous campaign well before the war to make applied mathematics respectable to engineers and mathematicians. While advocating the use of mathematics and physics to solve applied problems, he challenged the prevailing philosophy of engineering <b>programs,</b> <b>locked</b> horns with recalcitrant journal editors, and generally encountered the obstacles to building a discipline that cuts across conventional boundaries...|$|R
40|$|Applied {{mathematics}} as {{a discipline}} scarcely existed in the U. S. fifty years ago. Although its rise in America is traditionally associated with World War II, Theodore von Karman had waged a long and vigorous campaign well before Pearl Harbor to make applied mathematics respectable to engineers and mathematicians. In the course of advocating the use of mathematics and physics to solve applied problems, he challenged the prevailing philosophy of engineering <b>programs,</b> <b>locked</b> horns with recalcitrant journal editors, and generally encountered the obstacles to building a discipline that cuts across conventional boundaries...|$|R
5000|$|... 18 [...] Não recomendado para menores de 18 anos - Content {{suitable}} for viewers {{over the age}} of 18, access to these <b>programs</b> is <b>locked</b> by a personal password.|$|R
50|$|The music <b>program</b> at <b>Lock</b> Haven {{offers several}} extracurricular {{activities}} {{for students to}} participate in including but not limited to marching band, concert band, percussion ensemble, choral ensembles and jazz ensembles.|$|R
40|$|Abstract Read-write locking is an {{important}} mecha-nism to improve concurrent granularity, {{but it is difficult}} to reason about the safety of concurrent <b>programs</b> with read-write <b>locks.</b> Concurrent Separation Logic(CSL) provides a simple but powerful technique for locally rea-soning about concurrent programs with mutual exclusive locks. Unfortunately, CSL cannot be directly applied to reason about concurrent <b>programs</b> with read-write <b>locks</b> due to the different concurrent control mechanisms. This paper focuses on extending CSL and present a proof-carrying code(PCC) system for reasoning about concurrent <b>programs</b> with read-write <b>locks.</b> We extend the heap model with a writing permission set, denoted as logical heap, then define "strong separation " and "weak separation " over logical heap. Following CSL’s local-reasoning idea, we develop a novel program logic to enforces weak separations of heap between different threads and support verification of concurrent <b>programs</b> with read-write <b>locks...</b>|$|R
40|$|Concurrent {{programs}} {{are notorious for}} containing errors {{that are difficult to}} reproduce and diagnose. A common kind of concurrency error is deadlock, which occurs when some threads are permanently blocked. This paper defines a runtime notion of potential deadlock in <b>programs</b> with <b>locks,</b> semaphores, and condition variables. Informally, an execution has potential for a deadlock if some feasible permutation of the execution results in a deadlock. Feasibility of a permutation is determined by ordering constraints amongst events in the execution. Previous work on run-time detection of potential deadlocks are for <b>programs</b> that use <b>locks.</b> This paper presents run-time algorithms to detect potential deadlocks in <b>programs</b> that use <b>locks</b> (block structured as well as non block structured), semaphores, and condition variables...|$|R
5000|$|Déconseillé aux moins de 18 ans (English: not {{recommended}} for persons under 18) - allowed between midnight and 5 a.m. and only in some channels, access to these <b>programs</b> is <b>locked</b> by a personal password.|$|R
5000|$|A [...] Adulto (adult) - {{programs}} {{suitable for}} adult audiences only (ages 18 or older), may contain coarse language, and sexual or explicit situations (used after 10 p.m. local time), {{access to these}} <b>programs</b> is <b>locked</b> by a personal password.|$|R
40|$|Writing {{correct and}} {{efficient}} parallel programs is an unavoidable challenge; the challenge becomes arduous with lock-free programming. This paper presents an automated approach, Automatic Lock-free Programming (ALP) that avoids the <b>programming</b> difficulties via <b>locks</b> {{for an average}} programmer. ALP synthesizes parallel lock-free recursive programs that are directly compilable on multi-core processors. ALP attains the dual objective of evolving parallel lock-free programs and optimizing their performance. These programs perform (in terms of execution time) significantly better {{than that of the}} parallel <b>programs</b> with <b>locks,</b> while they are competitive with that of the human developed programs...|$|R
5000|$|The Wine project itself {{responds}} to these complaints {{on one of}} its wiki pages: For most people there remain a handful of <b>programs</b> <b>locking</b> them in to Windows. It's obvious {{there will never be}} a Microsoft Office ported to Linux, however older versions of programs like TurboTax won't be ported either. Similarly, there are tens of thousands of games and internal corporate applications which will never be ported. If you want to use Linux and rely on any legacy Windows application, something like Wine is essential... Wine makes Linux more useful and allows for millions of users to switch who couldn't otherwise. This greatly raises Linux marketshare, drawing more commercial and community developers to Linux.|$|R
40|$|Abstract In this paper, {{we apply}} discrete-event system {{techniques}} to model {{and analyze the}} execution of concurrent software. The problem of interest is deadlock avoidance in shared-memory multithreaded programs. We employ Petri nets to systematically model multithreaded <b>programs</b> with <b>lock</b> acquisition and releas...|$|R
50|$|Grave Encounters is a 2011 Canadian supernatural horror film, shot {{found footage}} style. The footage follows {{the crew of}} a paranormal reality {{television}} <b>program</b> who <b>lock</b> themselves in a haunted psychiatric hospital in search of evidence of paranormal activity as they shoot what ends up becoming their final episode.|$|R
50|$|The band {{appeared}} on the Tokyo FM radio <b>program</b> School of <b>Lock!</b> on January 13, 2011, as a show separate from their regular Radlocks! show.|$|R
50|$|Radwimps {{took part}} in Tower Records' No Music, No Life? {{advertisement}} campaign from March 8 until March 21, and were featured on in-store posters in Tower Records stores across Japan. The band will also make two appearances on Tokyo FM's School of Lock! on their regular <b>program</b> Rad <b>Locks!,</b> airing in April and May 2011.|$|R
5000|$|... "Nee" [...] ("Hey") is {{the seventeenth}} single {{released}} by Japanese girl group Perfume. [...] "Nee" [...] {{is used in}} a tie-in campaign with Japanese apparel brand Natural Beauty Basic. The full version of [...] "Nee" [...] was aired on Perfume's radio <b>program</b> Perfume <b>Locks</b> on 21 October 2010. The single was released on November 10, 2010 in Japan.|$|R
50|$|Yaohua High School has {{friendly}} and cooperative relations with many schools abroad, {{such as a}} women's college in Hakodate, Japan, as well as high schools in Taiwan, Melbourne, Australia and Nagasaki, Japan. International interactive programs include educational group exchanges and non-governmental delegation visits. Yaohua has sent 20 students to Singapore to for further studies. The school also has ongoing exchange <b>programs</b> with <b>Lock</b> Haven University of Pennsylvania.|$|R
50|$|The Mosman Daily {{reported}} that on 28 October 2009, the station's {{board of directors}} appointed an administrator to the licensee, Northside Broadcasting Cooperative, following a period of financial difficulty. The station switched to a full-time relay of the BBC World Service, canceled all <b>programming</b> and <b>locked</b> all volunteers out of the studio. The relay of the BBC World Service was to ensure the station met all conditions of its licence with the Australian Communications and Media Authority.|$|R
40|$|In multithreaded <b>programming,</b> <b>locks</b> are {{frequently}} {{used as a}} mechanism for synchronization. Because today’s oper-ating systems do not consider lock usage as a scheduling criterion, scheduling decisions can be unfavorable to multi-threaded applications, leading to performance issues such as convoying and heavy lock contention in systems with multi-ple processors. Previous efforts {{to address these issues}} (e. g., transactional memory, lock-free data structure) often treat scheduling decisions as “a fact of life, ” and therefore these solutions try to cope with the consequences of undesirable scheduling instead of dealing with the problem directly. In this paper, we introduce Contention-Aware Scheduler (CA-Scheduler), which is designed to support efficient ex-ecution of large multithreaded Java applications in mul-tiprocessor systems. Our proposed scheduler employs a scheduling policy that reduces lock contention. As will be shown in this paper, our prototype implementation of the CA-Scheduler in Linux and Sun HotSpot virtual machine only incurs 3. 5 % runtime overhead, while the overall per-formance differences, when compared with a system with no contention awareness, range from a degradation of 3 % in a small multithreaded benchmark to an improvement of 15 % in a large Java application server benchmark...|$|R
5000|$|The {{curriculum}} of any Marketing Research program requires {{a student to}} complete the required prerequisites to accommodate the deficiency for non business background students. After {{that there are a}} series of core classes and electives. Some of the <b>programs</b> are <b>lock</b> step method <b>programs</b> following a particular sequence of series of courses lined up one after another. Other programs are open programs giving the students to chance to select their own courses. The courses are mainly divided into two genres qualitative and quantitative ...|$|R
50|$|The first IC3 set was {{delivered}} in 1988, but unfortunately {{suffered from a}} number of teething problems, primarily due to its (at the time very advanced) computer systems. One example was that it would lock the toilet door with no apparent reason (it was <b>programmed</b> to <b>lock</b> the door when either someone was in there and requested so via a button, or when the toilet-system suffered a problem). By late 1990, the majority of these problems had been solved, and so the train entered service in 1991.|$|R
2500|$|Yojiro Noda {{appeared}} {{by himself}} on Tokyo FM radio <b>program</b> School of <b>Lock!</b> on February 2, 2011, as {{a revival of}} the band's Radlocks! radio show. The band were also interviewed in Rockin' On Japans March issue to promote the single, as well as [...] "Dada." ...|$|R
40|$|In {{this section}} we review {{the concept of}} {{transactional}} memories from [1]. A traditional way to make threads communicating and synchronizing with each other is by using locks and condition variables. These methods of synchronization are fundamentally flawed, since they do not compose well. Concurrent <b>programs</b> based on <b>locking</b> are also hard to follow and debug. In many cases, <b>programming</b> with <b>locks</b> sounds to be absurdly hard, e. g. for a scalable doubleended queue when the queue size is small. The problem in a sequential settings is easy to solve, but when the calls become concurrent {{it turns out to}} be an academic challenge to solve it. The transactional memory approach is an easy way to look at the synchronization problem. Similar to databases, we use transactions in order to access the memory. A set of instructions are wrapped with an atomic command to show that they obey the “all or nothing ” semantics. So whenever an exception occurs in the middle of executing a transaction none of the instructions in the transaction can affect the state of the program. A direct consequenc...|$|R
25|$|The {{architecture}} {{defined a}} set of 32 integer registers and {{a set of}} 32 floating-point registers in addition to a <b>program</b> counter, two <b>lock</b> registers and a floating-point control register (FPCR). It also defined registers that were optional, implemented only if the implementation required them. Lastly, registers for PALcode were defined.|$|R
50|$|The <b>program</b> uses secure, <b>locked</b> bins {{that have}} a narrow slot opening to {{maintain}} privacy and thwart the potential of discarded mail being tampered with. If someone accidentally drops an item into the slot, they cannot reach in to retrieve it; instead, they must contact a postal worker for access.|$|R
50|$|People convicted to the ISD <b>program</b> can be <b>locked</b> up for {{a period}} of two years, even when the normal {{sentence}} for that crime is much shorter. The relative new ISD punishment was set up to protect the society for a longer period from these criminals and offer special treatment to these criminals.|$|R
40|$|The aim of {{this thesis}} is to present novel {{techniques}} for reasoning about the dynamic and static semantics of concurrent <b>programs</b> that use <b>locks</b> and transactions to isolate accesses to shared memory. We use moverness to characterise the observational semantics of reads issued by locks and transactions under the simpler semantics of free, left, right and both movers. The second contribution is guaranteed transactions which are a safer alternative to locks and the privatisation/publication idioms for specific scenarios. Guaranteed transactions facilitate a simpler pessimistic coordination semantics than locks, but offer most of the conveniences that have made transactions appealing. Finally, we present a static analysis for reasoning about the isolation of a <b>program</b> that uses <b>locks</b> and transactions. If our isolation algorithm determines that all the accesses issued by a program are isolated, then the program is declared data-race-free...|$|R
50|$|A futex {{consists}} of a kernelspace wait queue that is attached to an aligned integer in userspace. Multiple processes or threads operate on the integer entirely in userspace (using atomic operations to avoid interfering with one another), and only resort to relatively expensive system calls to request operations on the wait queue (for example to wake up waiting processes, or to put the current process on the wait queue). A properly <b>programmed</b> futex-based <b>lock</b> will not use system calls except when the lock is contended; since most operations do not require arbitration between processes, this will not happen in most cases.|$|R
50|$|Major General West, is {{a fictional}} {{character}} in the Stargate SG-1 universe, played by Leon Rippy. West headed the USAF's Project Giza (also known as the Stargate Project), the forerunner of the SGC. He oversaw Dr. Catherine Langford's experiments with the Stargate until selecting, recalling, and delegating Colonel Jack O'Neil as military commander when Dr. Daniel Jackson joined the team. Upon the successful connection of the Earth Stargate to Abydos, West immediately militarized the <b>program</b> and <b>locked</b> {{out most of the}} civilian team previously under Dr. Langford. He then authorized the initial excursion to Abydos (in the original movie).|$|R
40|$|In this paper, {{we propose}} a new {{technique}} for the verification of concurrent multi-threaded programs. In general, the problem {{is known to be}} undecidable even for programs with just two threads [1]. However, we exploit the observation that, in practice, a large fraction of concurrent programs can either be modeled as Pushdown Systems communicating solely using locks or can be reduced to such systems by applying standard abstract interpretation techniques or by exploiting separation of data from control. Moreover, standard programming practice guidelines typically recommend that <b>programs</b> use <b>locks</b> in a nested fashion. In fact, in languages like Java and C#, locks are guaranteed to be nested. For such a framework, we show, by using the new concept of Lock Constrained Multi-Automata Pair (LMAP), that pre ∗-closures of regular sets of states can be computed efficiently. This is accomplished by reducing the pre ∗-closure computation for a regular set of states of a concurrent <b>program</b> with nested <b>locks</b> to those for its individual threads. Leveraging this new technique then allows us to formulate a fully automatic, efficient and exact (sound and complete) decision procedure for model checking threads communicating via nested locks for indexed linear-time temporal logic formulae...|$|R
50|$|In {{order to}} {{maintain}} the security of the home many home automation systems integrate features such as remote keyless entry systems which will allow seniors to view who is at the door and then remotely open the door. Home networks can also be <b>programmed</b> to automatically <b>lock</b> doors and shut blinds in {{order to maintain}} privacy.|$|R
25|$|The single's {{announcement}} {{was less than}} two weeks before the first episode of 37-sai de Isha ni Natta Boku: Kenshui Junjō Monogatari aired on April 10. The song was debuted on the Tokyo FM radio <b>program</b> School of <b>Lock!</b> on April 25, On May 2, Sakanaction held a special live streaming event on the video service Ustream, where they recorded the song's music video live.|$|R
25|$|The single was {{announced}} on December 1, 2012, when Yamaguchi was still recording the song {{at his home}} studio, while the song's usage as the theme song for Dinner {{was announced}} two weeks later. A ringtone of the song was released on January 13, {{the same day that}} the first episode of Dinner aired. Yamaguchi debuted the song in full the next day on his radio <b>program</b> Sakana <b>Locks,</b> a part of Tokyo FM's School of Lock. Composer Toshihiko Sahashi arranged two instrumental versions of the song for use as interstitial music in Dinner: a string version and a piano version. Both of these recordings were included on Dinners original soundtrack, released on February 27.|$|R
