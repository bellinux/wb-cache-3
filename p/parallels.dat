10000|10000|Public
5|$|August 18, 1879- A Category2 {{hurricane}} <b>parallels</b> the Delmarva Peninsula after striking North Carolina, though effects, if any, are unknown.|$|E
5|$|August 18, 1986- Hurricane Charley <b>parallels</b> the Mid-Atlantic {{coastline}} offshore, producing hurricane-force wind gusts {{and light}} rainfall in Delaware.|$|E
5|$|August 19, 1991– Hurricane Bob <b>parallels</b> {{the state}} offshore, causing up to 3inches (8cm) of rain across the state; damage is minimal.|$|E
40|$|In this paper, {{with the}} help of {{spectral}} integral, we show a quantitative version of the Bishop-Phelps theorem for operators in complex Hilbert spaces. Precisely, let H be a complex Hilbert space and 0 H and x(0) epsilon H with <b>parallel</b> to T <b>parallel</b> to = 1 = <b>parallel</b> to x (0) <b>parallel</b> to such that <b>parallel</b> to Tx (0) <b>parallel</b> to > 1 - epsilon, there exist x epsilon epsilon H and a bounded linear operator S : H -> H with <b>parallel</b> to S <b>parallel</b> to = 1 = <b>parallel</b> to x epsilon <b>parallel</b> to such that <b>parallel</b> to Sx epsilon <b>parallel</b> to = 1, <b>parallel</b> to x epsilon - x 0 <b>parallel</b> to <= root 2 epsilon + 4 root 2 epsilon, <b>parallel</b> to S - T <b>parallel</b> to <= root 2 epsilonNatural Science Foundation of China [11071201, 11001231...|$|R
40|$|<b>Parallel</b> divide-and-conquer <b>parallel</b> {{algorithms}} {{are very}} common in the litterature on <b>parallel</b> algorithms. In order to ease their implementation in Minimally Synchronous <b>Parallel</b> ML (MSPML), we add a new primitive to this asynchronous <b>parallel</b> functional language. MSPML {{is based on a}} <b>parallel</b> data structure called <b>parallel</b> vectors and operations to manipulate them. This paper presents semantics and an implementation of MSPML with <b>parallel</b> composition...|$|R
40|$|In {{this paper}} we have defined the {{language}} theoretical properties of <b>Parallel</b> languages and series <b>parallel</b> languages. <b>Parallel</b> languages and Series <b>parallel</b> languages {{play vital roles}} in <b>parallel</b> processing and many applications in computer programming. We have defined regular expressions and context free grammar for <b>parallel</b> and series <b>parallel</b> languages based on sequential languages [2]. We have also discussed the recognizability of <b>parallel</b> and series <b>parallel</b> languages using regular expression and regular grammar. Comment: 9 Pages, 2 figure...|$|R
5|$|August 20, 1856- A {{tropical}} storm <b>parallels</b> the coastline of the Delmarva Peninsula, though impact, if any, is unknown.|$|E
5|$|August 20, 1887– A major {{hurricane}} <b>parallels</b> {{the coastline}} offshore, destroying several houses and wrecking several boats.|$|E
5|$|August 23, 1988- Tropical Storm Chris <b>parallels</b> {{the east}} coast of the state and drops over 3inches (75mm) of {{precipitation}} in various locations.|$|E
40|$|In {{this paper}} a survey on current trends in <b>parallel</b> {{computing}} {{has been studied}} that depicts all the aspects of <b>parallel</b> computing system. A large computational problem {{that can not be}} solved by a single CPU can be divided into a chunk of small enough subtasks which are processed simultaneously by a <b>parallel</b> computer. The <b>parallel</b> computer consists of <b>parallel</b> computing hardware, <b>parallel</b> computing model, software support for <b>parallel</b> programming. <b>Parallel</b> performance measurement parameters and <b>parallel</b> benchmarks are used to measure the performance of a <b>parallel</b> computing system. The hardware and the software are specially designed for <b>parallel</b> algorithm and programming. This paper explores all the aspects of <b>parallel</b> computing and its usefulness...|$|R
40|$|We {{consider}} <b>parallel</b> algorithms {{working in}} sequential global time, for example circuits or <b>parallel</b> random access machines (PRAMs). <b>Parallel</b> abstract state machines (<b>parallel</b> ASMs) are such <b>parallel</b> algorithms, and the <b>parallel</b> ASM thesis asserts that every <b>parallel</b> algorithm is behaviorally {{equivalent to a}} <b>parallel</b> ASM. In an earlier paper, we axiomatized <b>parallel</b> algorithms, proved the ASM thesis and proved that every <b>parallel</b> ASM satisfies the axioms. It turned out that we were too timid in formulating the axioms; they did not allow a <b>parallel</b> algorithm to create components on the fly. This restriction did not hinder us from proving that the usual <b>parallel</b> models, like circuits or PRAMs or even alternating Turing machines, satisfy the postulates. But it resulted in an error in our attempt to prove that <b>parallel</b> ASMs always satisfy the postulates. To correct the error, we liberalize our axioms and allow on-the-fly creation of new <b>parallel</b> components. We believe that the improved axioms accurately express what <b>parallel</b> algorithms ought to be. We prove the <b>parallel</b> thesis for the new, corrected notion of <b>parallel</b> algorithms, and we check that <b>parallel</b> ASMs satisfy the new axioms. Categories and Subject Descriptors: D. 1. 3 [PROGRAMMING TECHNIQUES]: Concurren...|$|R
5000|$|<b>Parallel</b> Extensions {{to improve}} support for <b>parallel</b> computing, which target {{multi-core}} or distributed systems. To this end, technologies like PLINQ (<b>Parallel</b> LINQ), a <b>parallel</b> {{implementation of the}} LINQ engine, and Task <b>Parallel</b> Library, which exposes <b>parallel</b> constructs via method calls, are included.|$|R
5|$|August 24, 1887– Just {{days after}} the {{previous}} storm, another major hurricane <b>parallels</b> the coastline, though information is scarce due to downed communications from the previous storm.|$|E
5|$|August 28–31, 1839- Several {{ships are}} washed ashore in Lewes during a {{hurricane}} that <b>parallels</b> the East Coast of the United States.|$|E
5|$|August 29, 1871– A {{tropical}} storm <b>parallels</b> the coastline just offshore.|$|E
40|$|In this article, we {{prove the}} {{generalized}} Hyers-Ulam {{stability of the}} following Pexider functional inequalities <b>parallel</b> to f(x) + g(y) + kh(z) <b>parallel</b> to ?= <b>parallel</b> to kp(x+y/k +z) <b>parallel</b> to, <b>parallel</b> to f(x) + g(y) + h(z) <b>parallel</b> to ?= <b>parallel</b> to kp(x+y+z/k) <b>parallel</b> to in non-Archimedean Banach spaces. (C) 2015 All rights reserved. The first author was supported by Hallym University Research Fund, 2014 (HRF- 201403 - 008) ...|$|R
5000|$|Avoid <b>parallel</b> perfect {{intervals}} such as <b>parallel</b> unisons, <b>parallel</b> 5ths and <b>parallel</b> octaves {{between any}} two voices to promote voice independence.|$|R
40|$|We {{investigate}} the generalized Hyers-Ulam {{stability of the}} functional inequalities <b>parallel</b> to f((x+y+z) / 4) + f((3 x-y- 4 z) / 4) + f((4 x+ 3 z) / 4) <b>parallel</b> to <= <b>parallel</b> to 2 f(x) <b>parallel</b> to and <b>parallel</b> to f((y-x) / 3) + f((x- 3 z) / 3) + f((3 x+ 3 z-y) / 3) <b>parallel</b> to <= <b>parallel</b> to f(x) <b>parallel</b> to in non-Archimedean normed spaces {{in the spirit of}} the Th. M. Rassias stability approach...|$|R
5|$|Hungary – Hungarian {{opposition}} leader Viktor Orbán drew <b>parallels</b> between the Russian intervention and the crushing of the Hungarian Revolution of 1956.|$|E
5|$|It <b>parallels</b> {{the route}} to the north between Tilbury and Woodstock.|$|E
5|$|July 30, 1960– Tropical Storm Brenda <b>parallels</b> the {{coastline}} {{as a moderate}} tropical storm, causing no known damage.|$|E
40|$|If L 0 0 is a {{continuous}} symmetric n-linear form on a Banach space and (L) over cap is the associated continuous n-homogeneous polynomial, the ratio <b>parallel</b> to L <b>parallel</b> to//parallel to(L) over bar <b>parallel</b> to always lies between 1 and n(n) /n!. At one extreme, if L is defined on Hilbert space, then <b>parallel</b> to L <b>parallel</b> to/parallel to(L) over bar <b>parallel</b> to = 1. If L attains norm on Hilbert space, then L also attains norm; in this case, we give an explicit construction {{to provide a}} unit vector x(0) with <b>parallel</b> to(L) over bar <b>parallel</b> to = vertical bar(L) over bar (x(0)) vertical bar = <b>parallel</b> to L <b>parallel</b> to. At the other extreme, if <b>parallel</b> to L <b>parallel</b> to/parallel to(L) over bar <b>parallel</b> to = n(n) /n! and L attains norm, then (L) over cap attains norm. We prove that in general the converse is not true...|$|R
40|$|The {{use of the}} DEEP {{development}} environment to analyze <b>parallel</b> program performance is described. The full integrated environment contains tools for the creation, analysis and debugging of <b>parallel</b> programs. All information is related {{back to the original}} <b>parallel</b> source code. This paper describes the program analysis portion of DEEP, with examples of its use on data <b>parallel</b> programs (HPF and Data <b>Parallel</b> C) and shared memory <b>parallel</b> (SMP) programs. 1. Introduction The DEEP system provides an integrated <b>parallel</b> program {{development environment}} that binds debugging and performance tools back to the original <b>parallel</b> source code. DEEP includes many useful tools in a highly interactive integrated GUI interface. DEEP provides a simple and intuitive way to understand and investigate <b>parallel</b> program structure, performance, and behavior. DEEP supports both data <b>parallel</b> and shared memory <b>parallel</b> programming. 1. 1 Data <b>Parallel</b> Programming. Data <b>parallel</b> programming allows the user to [...] ...|$|R
40|$|It {{is shown}} that a normed vector lattice (E; <b>parallel</b> to. <b>parallel</b> to) is order {{continuous}} if and only if, for every lattice norm rho on E with rho {{less than or equal}} to <b>parallel</b> to. <b>parallel</b> to, the <b>parallel</b> to. <b>parallel</b> to-topology and rho-topology coincide on every order interval of E. published_or_final_versio...|$|R
5|$|June 11, 1966– Hurricane Alma <b>parallels</b> the {{coastline}} offshore, producing above normal tides and moderate precipitation.|$|E
5|$|May 24, 1976– Subtropical Storm One drops light {{rainfall}} {{near the}} coastline as <b>parallels</b> the coastline.|$|E
5|$|October 5, 1868– A {{tropical}} storm <b>parallels</b> the entire coastline just offshore.|$|E
50|$|<b>Parallel</b> {{programs}} {{can be divided into}} two general categories: explicitly and implicitly <b>parallel.</b> Using <b>parallel</b> language constructs defined for process creation, communication and synchronization make an application explicitly <b>parallel.</b> Using a tool or parallelizing compiler to convert a serial program into a <b>parallel</b> one, makes it implicitly <b>parallel.</b> Both categories are equally bug-prone.|$|R
40|$|International audienceThe Bulk Synchronous <b>Parallel</b> ML (BSML) {{library is}} a library for Bulk Synchronous <b>Parallel</b> (BSP) {{programming}} with the functional language Objective Caml. It {{is based on}} an extension of the lambda-calculus by <b>parallel</b> operations on a <b>parallel</b> data structure named <b>parallel</b> vector. This paper presents the execution model, given as a distributed semantics, of the <b>parallel</b> juxtaposition, a primitive of <b>parallel</b> composition for BSML. It also presents an implementation, which follows the semantics, and experiments using the <b>parallel</b> juxtaposition...|$|R
40|$|Abstract. <b>Parallel</b> {{computing}} is in <b>parallel</b> {{computer system}} for <b>parallel</b> {{processing of data}} and information, often {{also known as the}} high performance computing or super computing. The content of <b>parallel</b> computing were introduced, the realization of <b>parallel</b> computing and MPI <b>parallel</b> programming under Linux environment were described. The <b>parallel</b> algorithm based on divide and conquer method to solve rectangle placemen problem was designed and implemented with two processors. Finally, Through the performance testing and comparison, we verified the efficiency of <b>parallel</b> computing...|$|R
5|$|October 7, 1842– Several {{ships are}} {{destroyed}} as a hurricane <b>parallels</b> the coastline offshore.|$|E
5|$|October 8, 1954 - Hurricane Hazel <b>parallels</b> {{the north}} coasts of Venezuela and Colombia around 100miles (160km) {{offshore}} as a Category3 hurricane, though effects, if any, are unknown.|$|E
5|$|October 8, 1974– The fourth {{subtropical}} {{storm of}} the season produces rainfall in the eastern portion of the state as it <b>parallels</b> offshore.|$|E
5000|$|Men's gymnastics1980 Phil Cahoy <b>Parallel</b> bars1980 Phil Cahoy Horizontal bar1980 Jim Hartung All Around1980 Jim Hartung Still Rings1980 Steve Elliott Floor Exercise1981 Phil Cahoy <b>Parallel</b> bars1981 Phil Cahoy Horizontal bar1981 Jim Hartung <b>Parallel</b> bars1981 Jim Hartung Still Rings1981 Jim Hartung All Round1982 Jim Hartung <b>Parallel</b> bars1982 Jim Hartung Still Rings1982 Steve Elliott Floor Exercise1982 Steve Elliott Vault1983 Scott Johnson Floor Exercise1983 Scott Johnson Horizontal bar1983 Scott Johnson <b>Parallel</b> bars1983 Chris Riegel Vault1984 Chris Riegel Vault1985 Wes Suter Horizontal bar1985 Wes Suter Floor Exercise1985 Wes Suter All Around1987 Tom Schlesinger <b>Parallel</b> bars1987 Tom Schlesinger All Around1987 Kevin Davis <b>Parallel</b> bars1988 Kevin Davis All Around1988 Kevin Davis <b>Parallel</b> bars1989 Patrick Kirksey All Around1990 Patrick Kirksey <b>Parallel</b> bars1992 Che Bowers Pommel Horse1993 Richard Grace Floor Exercise1994 Richard Grace <b>Parallel</b> bars1994 Dennis Harrison All Around1995 Rick Kieffer Horizontal bar1995 Richard Grace <b>Parallel</b> bars1995 Richard Grace All Around1997 Marshall Nelson <b>Parallel</b> bars1997 Marshall Nelson Horizontal bar1998 Marshall Nelson <b>Parallel</b> bars1999 Jason Hardabura All Around1999 Jason Hardabura Floor Exercise ...|$|R
40|$|Let 0 <j<m {{less than}} or equal to n be integers. Denote by <b>parallel</b> to. <b>parallel</b> to the norm <b>parallel</b> to f <b>parallel</b> to(2) = integral(-infinity) (infinity) f(2) (x) exp(-x(2)) dx. For various {{positive}} values of A and B we establish Kolmogoroff type inequalitiesparallel to f((f)) <b>parallel</b> to(2) {{less than or}} equal to A <b>parallel</b> to f(m) <b>parallel</b> to + B <b>parallel</b> to f <b>parallel</b> to/ A theta(k) + B mu(k),with certain constants theta(k) e mu(k), which hold for every f is an element of pi(n) (pi(n) denotes the space of real algebraic polynomials of degree not exceeding n). For the particular case j= 1 and m= 2, we provide a complete characterisation of the positive constants A and B, for which the corresponding Landau type polynomial inequalities <b>parallel</b> to f'parallel to {{less than or equal}} toA <b>parallel</b> to f <b>parallel</b> to + B <b>parallel</b> to f <b>parallel</b> to/ A theta(k) + B mu(k) hold. In each case we determine the corresponding extremal polynomials for which equalities are attained...|$|R
50|$|<b>Parallel</b> Processing Letters is {{a journal}} {{published}} by World Scientific since 1991. It covers {{the field of}} <b>parallel</b> processing, including topics such as design and analysis of <b>parallel</b> and distributed algorithms, <b>parallel</b> programming languages and <b>parallel</b> architectures and VLSI circuits.|$|R
