18|12|Public
40|$|A {{frame-based}} {{reasoning system}} is extended {{to deal with}} <b>procedural</b> <b>attachment.</b> Arguments are given why <b>procedural</b> <b>attachment</b> is needed in a symbolic reasoner. The notion of an infinitary concept is introduced. Conventions for representing procedures and a control structure regulating their execution is discussed. Examples from electrical engineering and music illustrate arithmetic constraints and constraints over properties of strings and sequences...|$|E
40|$|STROBE is {{a system}} that {{provides}} object-oriented programming support tools for INTERLISP. It offers a primitive foundation with which more complex structured object representation schemes can be constructed. STROBE implements multiple resident knowledge bases, tangled generalization hierarchies, flexible inheritance of properties, <b>procedural</b> <b>attachment,</b> and event-sensitive procedure invocation. 1...|$|E
40|$|The {{development}} of expert systems (ES) for manufacturing problems indicates {{a need to}} interact with potentially large amounts of data, much of which resides elsewhere in the ES user's organization. A large amount of information required for planning, design, and control operations can be made available through an existing database management system (DBMS). The need for an ES to access that data is critical. This paper presents two approaches to the {{development of}} ES-DBMS interfaces, both query-language based. One approach uses a <b>procedural</b> <b>attachment</b> to the ES language to obtain the required data via the DBMS query language, while the other one uses a separate interface program between the ES and the query language of the DBMS. The <b>procedural</b> <b>attachment</b> is able to acquire data from a DBMS at a faster rate than the interface program, however, the <b>procedural</b> <b>attachment</b> lacks knowledge of the DBMS schema. On the other hand, the interface program sacrifices speed but promotes flexibility, as it has the capability of selecting which DBMS to extract the required data from and allowing augmentation of schema knowledge outside of the ES. A disadvantage of the interface approach is the amount of time involved in data retrieval. The process of writing information to disk files is I/O intensive. This can be quite slow, particularly in PROLOG, the language used to implement the ES. Thus the use of such an interface is only suitable in applications such as design, where extremely fast I/O is not require...|$|E
50|$|The {{simplified}} {{structures of}} frames allow for easy analogical reasoning, a much prized feature in any intelligent agent. The <b>procedural</b> <b>attachments</b> provided by frames also allow {{a degree of}} flexibility that makes for a more realistic representation and gives a natural affordance for programming applications.|$|R
40|$|The {{purpose of}} this paper is to provide an {{introduction}} to the OWL Web ontology language, a survey focused on the current state of the art in OWL inferencing capabilities, and a historical perspective on <b>procedural</b> <b>attachments.</b> The perspective is aligned with current OWL research. Several limitations of the OWL language and proposed extensions to overcome these limitations are discussed. A framework that provides empirical testing support for evaluating the effects of <b>procedural</b> <b>attachments</b> to the OWL inferencing capabilities is outlined. The examples presented suggest that it is possible to provide rule-based extensibility support for OWL that does not limit the ability of an OWL reasoner to perform consistency checking. Specifically, the framework is used to demonstrate with an example experiment the ability to provide support for the compound sub-property axiom...|$|R
40|$|Abstract. Diverse domains need {{an ability}} to express computations, and <b>procedural</b> <b>attachments</b> are not the final answer, because of {{problems}} regarding semantics, verifiability, extensibility, and evaluation. Rules {{do not have enough}} expressiveness, and a naive use of first-order logic suffers from a number of serious problems. The main problem stems from the difficulty of reconciling OWL’s underlying relational knowledge representation with effective (and efficient) computation. We propose to use Hilbert’s ɛ construct as an extension to SWRL, which solves or alleviates many of the problems we have run into. We hope that this paper will feed overdue discussions about computation on the Semantic Web, which goes beyond just Semantic Web Services. ...|$|R
40|$|This paper {{describes}} an analogy ontology, a formal representation of some key ideas in analogical processing, {{that supports the}} integration of analogical processing with first-principles reasoners. The ontology is based on Gentner's structure-mapping theory, a psychological account of analogy and similarity. The semantics of the ontology are enforced via <b>procedural</b> <b>attachment,</b> using cognitive simulations of structure-mapping to provide analogical processing services. Queries that include analogical operations can be formulated {{in the same way}} as standard logical inference, and analogical processing systems in turn can call on the services of first-principles reasoners for creating cases and validating their conjectures...|$|E
40|$|An {{approach}} to question answering through automated deduction is advocated. Answers to questions are extracted from proofs of associated conjectures over an axiomatic {{theory of the}} subject domain. External knowledge resources, including data and software, are consulted through a mechanism known as <b>procedural</b> <b>attachment.</b> A researcher ignorant of the subject domain theory or its logical language can formulate questions via a query elicitation facility. A similar device allows an expert to extend the theory. An English explanation for each answer, and a justification for its correctness, is constructed automatically from the proof by which it was extracted. A deductive approach has been applied in planetary astronomy, geography, intelligence analysis, and, mos...|$|E
40|$|An {{object-oriented}} {{knowledge-based system}} developed {{on a new}} knowledge representation paradigm is presented. The high-level architecture includes a problem-solving engine, a user interface, and tools. The low-level architecture is described by more than fifty different kinds of objects that are implemented in the system as Smalltalk classes. A problem-solving engine implements a knowledge source and rule-based deduction with metaknowledge control. A <b>procedural</b> <b>attachment</b> mechanism, bidirectional data exchange between the inference engine and procedure calls with a broad interface to the Smalltalk environment are basic mechanisms used for integration of declarative and procedural knowledge bases. The {{emphasis is on the}} object-oriented integration of declarative and procedural knowledge bases in the context of engineering applications...|$|E
40|$|We {{overview}} our foundational work on {{a knowledge}} representation (KR) approach of web rules that are semantically interoperable between {{all four of the}} currently most commercially important families of rule systems, including production rules, relational database management systems, event-condition-action rules, and Prolog. Called here Production Logic Programs (PLP), the approach combines high degrees of expressiveness, scaleability, and incremental/modular implementability. Its KR is based on declarative logic programs, extending Datalog with several major web-izing and expressive features. These include, notably, a new approach to actions and tests via <b>procedural</b> <b>attachments</b> – in the manner of production rules but with declarative semantics. The PLP approach includes smoothly and powerfully combining rules with ontologies drawn from the currently most commercially important kinds of web-shared semantic ontologies...|$|R
40|$|Knowledge representation, in {{particular}} logic, combined together with database and information retrieval techniques may {{play an important}} role in the development of so-called intelligent multimedia retrieval systems. In this paper we will present a logic-based framework in which multimedia objects' medium dependent properties (objects' low level features) and multimedia objects' medium independent properties (abstract objects' features, or objects' semantics) are addressed in a principled way. The framework is logic-based as it relies on the use of a four-valued fuzzy Description Logics for (i) representing the semantics of multimedia objects and (ii) for defining the retrieval process in terms of logical entailment. Low level features are not represented explicitly within the logic, but may be addressed by means of <b>procedural</b> <b>attachments</b> over a concrete domain. Description Logics are object-oriented representation formalisms capturing the most popular features of structured represen [...] ...|$|R
40|$|This study {{addresses}} {{the problem of}} injecting semantics into image retrieval by presenting an image data model in which images are represented both at the form and at the content level. The data model is logic-based, {{in the sense that}} the representation of image content is based on a {em description logic} (DL). Features of images pertaining to form impact on retrieval through a mechanism of <b>procedural</b> <b>attachments,</b> which implements the connection between (logical) reasoning about content and (non-logical) reasoning about form. The DL-based query language of the model thus allows the expression of image retrieval requests addressing both visual and conceptual similarity, and its underlying logic permits, among other things, to bring to bear domain and contextual knowledge in the retrieval process. The model is extensible, in that the set of symbols representing similarity can be enriched at will...|$|R
40|$|Abstract. We {{present a}} model for image {{retrieval}} in which images are represented both at the form level, as sets of physical features of the representing objects, and at the content level, as sets of logical assertions about the represented entities as well as about facts {{of the subject matter}} that are deemed as relevant for retrieval. A uniform and powerful query language allows queries to be issued that transparently combine features pertaining to form and content. Queries are expressions of a fuzzy logical language. While that part of the query that pertains to (medium-independent) content is “directly ” processed by an inferential engine, that part that pertains to (medium-dependent) form is entrusted to specialised signal processing procedures linked to the logical language by a <b>procedural</b> <b>attachment</b> mechanism. ...|$|E
40|$|Abstract- BaseVISor is a forward-chaining {{inference}} engine {{based on a}} Rete network optimized for the processing of RDF triples. A clause within the body and head of a rule either represents an RDF triple or invokes a <b>procedural</b> <b>attachment</b> (either built-in or user defined). This paper describes how BaseVISor has been outfitted to process RuleML and R-Entailment rules. In the case of RuleML, n-ary predicates are automatically translated into binary predicates and reified statements that encapsulate the n-ary predicate's arguments. For R-Entailment rules, the appropriate R-Entailment axioms, axiomatic triples and consistency rules are automatically imported into the engine and then used to derive all triples entailed by any set of triples asserted into the fact base. Operation {{of the system is}} illustrated using sample rule sets for both RuleML and R-Entailment and instructions are provided on how to obtain the BaseVISor beta release and process the examples...|$|E
40|$|We {{present a}} model for complex {{documents}} possibly consisting of a hierarchically structured set of images or texts. Documents are represented both at the form level (as sets of physical features of the representing objects), at the content level (as sets of properties of the represented entities), and at the structure level. A uniform and powerful query language allows queries to be issued that transparently combine features pertaining to form, content and structure alike. Queries are expressions of a (fuzzy) logical language. While {{that part of the}} query that pertains to (medium-independent) content is "directly" processed by an inferential engine, that part that pertains to (medium-dependent) form is entrusted to specialised document processing procedures linked to the logical language by a <b>procedural</b> <b>attachment</b> mechanism. The model thus combines the power of state-of-the-art document processing techniques with the advantages of a clean, logically defined framework for [...] ...|$|E
40|$|We give an {{overview}} of current efforts to standardize e-business rules knowledge representation (KR) in XML {{as part of the}} Semantic Web. We focus especially on the design approach and criteria of RuleML, an emerging standard that we co-lead. We discuss the issues of standardization and Webizing which RuleML addresses. We extend, for the first time, RuleML's definition from the ordinary logic programs KR to situated courteous logic programs (SCLP), an expressively general KR that supports prioritized conflict handling and <b>procedural</b> <b>attachments</b> for actions and queries. We give {{an overview}} of our prototype SweetRules, (Semantic WEb Enabling Technology [...] Rules component), a set of tools which enable, for the first time, communication and inferencing of e-business rules represented in SCLP RuleML. We illustrate SCLP RuleML by giving example rulesets from the realm of e-commerce business policies in supply chain management...|$|R
40|$|In {{addition}} to the existing standards, Web of Data programmers would {{take advantage of a}} dedicated programming language enabling them to define functions on RDF terms, triples and graphs as well as SPARQL query results. In particular, this is the case when defining SPARQL extension functions, and the ability to capitalize complex SPARQL filter expressions into extension functions or to define and reuse dedicated aggregates would support modularity and maintenance of the code. Another use case is the definition of functional properties associated to RDF resources and the definition of <b>procedural</b> <b>attachments</b> as functions assigned to RDFS or OWL classes with the selection of the function to be applied to a resource {{depending on the type of}} the resource. To address these needs we define a Linked Data Script language on top of the SPARQL filter expression language. We provide the syntax and the semantics of the LDScript language...|$|R
40|$|Abstract — Today’s robots {{are still}} lacking {{comprehensive}} knowledge bases about objects and their properties. Yet, {{a lot of}} knowledge is required when performing manipulation tasks to identify abstract concepts like a “handle ” or the “blade of a spatula ” and to ground them into concrete coordinate frames {{that can be used}} to parametrize the robot’s actions. In this paper, we present a system that enables robots to use CAD models of objects as a knowledge source and to perform logical inference about object components that have automatically been identified in these models. The system includes several algorithms for mesh segmentation and geometric primitive fitting which are integrated into the robot’s knowledge base as <b>procedural</b> <b>attachments</b> to the semantic representation. Bottom-up segmentation methods are complemented by top-down, knowledge-based analysis of the identified components. The evaluation on a diverse set of object models, downloaded from the Internet, shows that the algorithms are able to reliably detect several kinds of object parts. I...|$|R
40|$|Views are an {{important}} feature of database management systems. In this paper. we describe an implementation of views based on the ENCORE data model supplemented by two extensions. The first extension allows for the definition of multiple interfaces {{for a set of}} objects in the database. The second extension is a mechanism for collecting objects into sets based on queries formed using EN CORE's query algebra. The extents of these sets are dynamically maintained to always reflect the result of the query used to define the set, We use a combination of function application and <b>procedural</b> <b>attachment</b> to implement the maintenance of these sets. Our extended ENCORE model includes the necessary features to define flexible database views which provide a. context in which a user can access an ENCORE database. An important goal of our definition is the maintenance of strong typing of the objects visible within a view. ...|$|E
40|$|Abstract. We {{present a}} model for complex {{documents}} possibly consisting of a hierarchically structured set of images or texts. Documents are represented both at the form level (as sets of physical features of the representing objects), at the content level (as sets of properties of the represented entities), and at the structure level. A uniform and powerful query language allows queries to be issued that transparently combine features pertaining to form, content and structure alike. Queries are expressions of a (fuzzy) logical language. While {{that part of the}} query that pertains to (medium-independent) content is “directly ” processed by an inferential engine, that part that pertains to (medium-dependent) form is entrusted to specialised document processing procedures linked to the logical language by a <b>procedural</b> <b>attachment</b> mechanism. The model thus combines the power of state-of-the-art document processing techniques with the advantages of a clean, logically defined framework for understanding multimedia document retrieval. ...|$|E
40|$|We {{present a}} model for image {{retrieval}} in which images are represented both at the form level, as sets of physical features of the representing objects, and at the content level, as sets of logical assertions about the represented entities as well as about facts {{of the subject matter}} that are deemed as relevant for retrieval. A uniform and powerful query language allows queries to be issued that transparently combine features pertaining to form and content. Queries are expressions of a fuzzy logical language. While that part of the query that pertains to (medium-independent) content is "directly" processed by an inferential engine, that part that pertains to (medium-dependent) form is entrusted to specialised signal processing procedures linked to the logical language by a <b>procedural</b> <b>attachment</b> mechanism. 1 Introduction Due to the pervasive role of images in nowadays information systems, a vast amount of research has been carried out {{in the last few years}} on methods for [...] ...|$|E
40|$|International audienceIn {{addition}} to the existing standards dedicated to representation or querying, Semantic Web programmers could really benefit from a dedicated programming language enabling them to directly define functions on RDF terms, RDF graphs or SPARQL results. This is especially the case, for instance, when defining SPARQL extension functions. The ability to capitalize complex SPARQL filter expressions into extension functions or to define and reuse dedicated aggregates are real cases where a dedicated language can support modularity and maintenance of the code. Other families of use cases include the definition of functional properties associated to RDF resources or the definition of <b>procedural</b> <b>attachments</b> as functions assigned to RDFS or OWL classes with {{the selection of the}} function to be applied to a resource {{depending on the type of}} the resource. To address these needs we define LDScript, a Linked Data script language on top of the SPARQL filter expression language. We provide the formal grammar of the syntax and the Natural Semantics inference rules of the semantics of the language. We also provide a benchmark and perform an evaluation using real test bases from W 3 C with different implementations and approaches comparing, in particular, script interpretation and Java compilation...|$|R
40|$|We {{describe}} the innovative design of our prototyped SweetJess tool for RuleML inferencing. Our first contribution {{is to give}} a new, implemented translation from a broad but restricted case of SCLP RuleML into Jess rules, and an inverse translation from a broad but further restricted case of Jess rules into SCLP RuleML. SCLP stands for the Situated Courteous Logic Programs knowledge representation; this is expressively powerful and features prioritized conflict handling and <b>procedural</b> <b>attachments.</b> The translation is intended to preserve semantic equivalence [...] i. e., for a given rulebase, to entail the same conclusions. The translation often preserves semantic equivalence; in current work, we are developing formal guarantees for the equivalence, including necessary expressive restrictions in each direction. Our second contribution, building upon the translation, is a new, implemented architecture to perform (a broad case of) SCLP RuleML inferencing using the Jess rule engine. Our approach translates from SCLP RuleML rules into Jess rules, runs the Jess rule engine to generate conclusions (and actions), and then translates the concluded Jess facts back into SCLP RuleML. Our third new contribution is to enable bi-directional implemented inter-operability, via RuleML, between several other heterogeneous rule systems (e. g., XSB Prolog and IBM CommonRules) and Jess. For example, to our knowledge, {{this is the first}} tool to enable inter-operability between a Prolog and any "production"/"reactive" rule system descended from OPS 5 heritage. The prototype implementation of SweetJess is publicly available for Web download...|$|R
40|$|Procedural memory {{refers to}} {{retrieval}} of information through performance,and is distinct from declarative memory which is representable in language or image. This article discusses seeing interpersonal behavior {{as a kind of}} <b>procedural</b> memory. Some <b>attachment</b> theorists and psychoanalysts have realized the significance of introducing ideas on cognitive science into their theory and clinical fields. In their view,procedural memory which is characterized by implicitness (unconsciousness) and developmental earliness is a key concept in explaining the infant-mother dyad and patient-therapist dyad. Change Process Study Group of Boston terms this procedural memory “implicit relational knowing”. Furthermore,some discussions suggest that the interaction through procedural memory continues during life. From the perspective of cognitive psychology,we should be prudent in applying widely the concept of procedural memory to intersubjective relation...|$|R
40|$|This paper {{presents}} {{a programming language}} which includes paradigms that are usually associated with declarative languages, such as sets, rules and search, into an imperative (functional) language. Although these paradigms are separately well known and are available under various programming environments, the originality of the CLAIRE language comes from the tight integration, which yields interesting run-time performances, and from the richness of this combination, which yields new ways in which to express complex algorithmic patterns with few elegant lines. To achieve the opposite goals of a high abstraction level (conciseness and readability) and run-time performance (CLAIRE {{is used as a}} C++ preprocessor), we have developed two kinds of compiler: first, a pattern pre-processor handles iterations over both concrete and abstract sets (data types and program fragments), in a completely user-extensible manner; secondly, an inference compiler transforms a set of logical rules into a set of functions (demons that are used through <b>procedural</b> <b>attachment).</b> Comment: Appeared in Theory and Practice of Logic Programming, vol. 2, no. 6, 200...|$|E
40|$|Abstract. In this paper, we {{describe}} our {{effort to build}} an inference engine for OWL reasoning based on the rule engine paradigm. Rule engines are very practical and effective for their representational simplicity and optimized performance, but their limited expressiveness and web unfriendliness restrict their usability for OWL reasoning. We enumerate and succinctly describe extended features implemented in our rule engine, Bossam, and show that these features are necessary to promote the effectiveness of any ordinary rule engine’s OWL reasoning capability. URI referencing and URI-based <b>procedural</b> <b>attachment</b> enhance web-friendliness. OWL importing, support for classical negation and relieved range restrictedness help correctly capture the semantics of OWL. Remote binding enables collaborated reasoning among multiple Bossam engines, which enhances the engine’s usability on the distributed semantic web environment. By applying our engine to the W 3 C’s OWL test cases, we got a plausible 70 % average success rate for the three OWL species. Our contribution with {{this paper is to}} suggest a set of extended features that can enhance the reasoning capabilities of ordinary rule engines on the semantic web. ...|$|E
40|$|This thesis {{presents}} {{the development of}} an intelligent CAD system (ICADS) for DC machines. This system was implemented on a PC using Common Lisp provided by Gold Works II and connected with a Sun Workstation working under the Unix system for file transfer. Both frame-based and rule-based knowledge representation techniques have been used to capture the knowledge about the design of electric machines. The system has its own inference engine specially designed to handle both decision making and numerical computation. Forward-chain reasoning and <b>procedural</b> <b>attachment</b> were used to construct this inference engine. The knowledge base management system provides a user interface for knowledge acquisition, knowledge representation, man-machine communication, design document preparation, etc. The design results are translated to a finite element analysis file and sent to MagNet 2 D, a powerful electromagnetic field analysis package for design checking and refinement. The system provides different levels of design automation to suit the needs of the system user. As examples the design results of a series of universal motors and a small DC motor are provided in the thesis...|$|E
40|$|This paper {{describes}} an analogy ontology, a formal representation of some key ideas in analogical processing, {{that supports the}} integration of analogical processing with first-principles reasoners. The ontology is based on Gentner’s structure-mapping theory, a psychological account of analogy and similarity. The semantics of the ontology are enforced via <b>procedural</b> <b>attachment,</b> using cognitive simulations of structure-mapping to provide analogical processing services. Queries that include analogical operations can be formulated {{in the same way}} as standard logical inference, and analogical processing systems in turn can call on the services of first-principles reasoners for creating cases and validating their conjectures. We illustrate the utility of the analogy ontology by demonstrating how it has been used in three systems: A crisis management analogical reasoner that answers questions about international incidents, a course of action analogical critiquer that provides feedback about military plans, and a comparison question-answering system for knowledge capture. These systems rely on large, general-purpose knowledge bases created by other research groups, thus demonstrating the generality and utility of these ideas...|$|E
40|$|C. H. Orgill, N. W. Hardy, M. H. Lee, and K. A. I. Sharpe. An {{application}} of a multiple agent system for flexible assemble tasks. In Knowledge based envirnments for industrial applications including cooperating expert systems in control. IEE London, 1989. Describes a communication framework which enables knowledge-based computing resources to act cooperatively over a high bandwidth data path. The system {{has been designed to}} allow unrestricted access to an agent's local knowledge base by a well-defined interface. It also minimises unnecessary traffic through the establishment of an automatically maintained knowledge base in a central serving node of a star-connected architecture. This knowledge base allows a client expert to treat the remainder of the system as an homogeneous knowledge-whole, avoiding the necessity of local, a priori, meta-knowledge, whilst retaining efficiency of knowledge search. A client expert maintains a local knowledge base or, more properly, belief base, which is structured in schemata form. The notion of <b>procedural</b> <b>attachment</b> to schema slots is implemented, as is the concept of assumptive dependency. The fact that more than one expert exists in a system introduces the problem of conflict resolution, where two or more experts may present conflicting truth-functional assertions. A simple pattern-matching query language is extended via two operators, allowing simple combination of belief. The system operates using the TCP-IP protocols over a proprietary CSMA/CD broadband local-area network. The high-level interface is implemented in CommonLis...|$|E
40|$|This paper {{describes}} KRL, a Knowledge Representation Language {{designed for}} use in understander systems. It outlines both the general concepts which underlie the research and the details of KRL-O, an experimental implementation {{of some of these}} concepts. KRL is an attempt to integrate procedural knowledge with a broad base of declarative forms. These forms provide a variety of ways to express the logical structure of the knowledge, in order to give flexibility in associating procedures (for memory and reasoning) with specific pieces of knowledge, and to control the relative accessibility of different facts and descriptions. The formalism for declarative knowledge is based on structured conceptual objects with associated descriptions. These objects form a network of memory units with several different sorts of linkages, each having well-specified implications for the retrieval process. Procedures can be associated directly with the internal structure of a conceptual object. This <b>procedural</b> <b>attachment</b> allows the steps for a particular operation to be determined by characteristics of the specific entities involved. The control structure of KRL is {{based on the belief that}} the next generation of intelligent programs will integrate data-directed and goal-directed processing by using multiprocessing. It provides for a priority-ordered multiprocess agenda with explicit (user-provided) strategies for scheduling and resource allocation. It provides procedure directories which operate along with process frameworks to allow procedural parametrization of the fundamental system processes for building, comparing, and retrieving memory structures. Future development of KRL will include integrating procedure definition with the descriptive formalis...|$|E

