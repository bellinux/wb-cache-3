15|139|Public
5000|$|... #Subtitle level 2: Execute and writeback {{decoupling}} allows <b>program</b> <b>restart</b> ...|$|E
50|$|A second (and slower) {{alternative}} {{shown below}} {{which does not}} require a <b>program</b> <b>restart</b> is to open the BSAVED Graphic as a file. The program example below is functionally the same as the one above.|$|E
5000|$|In August 2016, San Jose State University {{announcement}} the reinstatement of men's {{track and}} field, {{with the official}} <b>program</b> <b>restart</b> date of October 16, 2018 on the 50th anniversary of Tommie Smith and John Carlos demonstration on the Olympic Games podium ...|$|E
50|$|The <b>program</b> <b>restarted</b> {{with some}} changes, taking both Kim Gun-mo (who was {{originally}} eliminated) and Jung Yeob (who was newly eliminated) {{out of the}} competition. Baek Ji-young withdrew, citing {{that she had to}} prepare for her upcoming album, and three new singers were introduced.This was an exhibition episode; no one was eliminated.|$|R
5|$|The global oil-shale {{industry}} {{began to}} revive {{at the beginning}} of the 21st century. In 2003, an oil-shale development <b>program</b> <b>restarted</b> in the United States. Authorities introduced a commercial leasing program permitting the extraction of oil shale and oil sands on federal lands in 2005, in accordance with the Energy Policy Act of 2005.|$|R
50|$|In 2013, due {{to extreme}} drought conditions, the Evangelical Lutheran church in Namibia {{provided}} a monthly cash grant of $100 to 6,000 individuals in four communities, {{modeled after the}} initial pilot program, from September 2013 to May 2014. In June 2014, the <b>program</b> <b>restarted</b> thanks to support from the Waldensian Church in Italy, lasting until June 2015.|$|R
50|$|The Lamar Lady Cardinals {{softball}} team represents Lamar University in NCAA Division I college softball. The team {{participates in the}} Southland Conference. The Lady Cardinals are currently led by head coach Holly Bruder. The team played its home games at the off-campus Ford Park {{for the first two}} seasons following the <b>program</b> <b>restart.</b> The Lady Cardinals began playing home games at the Lamar Softball Complex located on the university's campus starting with the 2015 season.|$|E
50|$|In 1964, {{one season}} after joining the Southland Conference, the Cardinals {{moved to the}} new on-campus Cardinal Stadium. Cardinal Stadium had an {{original}} capacity of 17,500. Capacity remained at 17,500 until renovations and improvements prior to the football <b>program</b> <b>restart</b> in 2010. In preparation {{for the return of}} play the University did extensive work on the facilities including, Provost Umphrey Stadium, a new Athletic complex, and high class suites built into the existing Montagne Center.|$|E
50|$|PL-4 {{program began}} in March 1966, {{as the primary}} weapon {{that would be used}} by the {{proposed}} Chengdu J-9. The primary contractor was the 612th Research Institute of Chinese Aeronautical Ministry, more commonly known as the Luoyang Electro-Optics Technology Development Center (洛阳光电技术发展中心) nowadays, which became the China Air-to-Air Guided Missile Research Institute (中国空空导弹研究院) in 2002. The primary subcontractor for the propulsion was the 331st Factory, which would later become Zhuzhou Aero-engine Factory (株洲航空发动机厂). PL-4 is based on the American AIM-7D Sparrow IIIa AAM North Vietnam provided to China, after obtaining samples from downed American fighters during Vietnam War. However, barely two month after the program begun, Cultural Revolution started and due to this political turmoil, PL-4 program was disrupted to a complete stop, and it would not be until more than a decade later, well after the end of Cultural Revolution, would the <b>program</b> <b>restart</b> again.|$|E
50|$|After Austria became {{independent}} {{again in}} 1955, programming {{consisted of three}} national radio stations, transmitted via mediumwave and FM. Because the government refused to raise the radio fees, the third program had to be closed {{due to lack of}} money in 1962. Only in 1966, after a new law was enacted, could <b>programming</b> <b>restart</b> with three <b>programs</b> - Ö1, Ö2 and Ö3.|$|R
5000|$|Jumping to {{the proper}} {{location}} in the user <b>program</b> to <b>restart</b> that <b>program</b> indicated by its new state.|$|R
50|$|On January 25, 2017, the Secure Communities <b>program</b> was <b>restarted</b> by the Department of Homeland Security per an {{executive}} order signed by President Donald Trump.|$|R
40|$|This {{artifact}} {{is based}} on Staccato, a tool for finding errors in dynamic configuration update (DCU) implementations. Dynamic configuration update refers to configuration changes that occur at runtime without <b>program</b> <b>restart.</b> Errors in DCU implementations occur when stale data - computed from old configurations - or inconsistent data - computed from different configurations - are used. Staccato uses a dynamic analysis {{in the style of}} taint analysis to detect these errors. Staccato supports concurrent programs running on commodity JVMs. We evaluated Staccato on three open-source applications and found errors in all of them...|$|E
40|$|This archive was {{designed}} with three purposes in mind. First, it {{was designed}} as a medium for providing our program deliverables to our customers-NASA and the industry team. Secondly, {{it was designed}} to be "The" critical resource for a <b>program</b> <b>restart.</b> Finally, the archive should serve as an invaluable technical resource for aerodynamic and wind tunnel science. The documents are stored in both native format and, {{for the majority of the}} documents, in scanned format. The end user is responsible for having applications for viewing and using native and scanned format documents...|$|E
40|$|Many {{applications}} demand availability. Unfortunately, software failures {{greatly reduce}} system availability. Prior work on surviving software failures suffers {{from one or}} more of the following limitations: Required application restructuring, inability to address deterministic software bugs, unsafe speculation on program execution, and long recovery time. This paper proposes an innovative safe technique, called Rx, which can quickly recover programs from many types of software bugs, both deterministic and non-deterministic. Our idea, inspired from allergy treatment in real life, is to rollback the program to a recent checkpoint upon a software failure, and then to re-execute the program in a modified environment. We base this idea on the observation that many bugs are correlated with the execution environment, and therefore can be avoided by removing the “allergen” from the environment. Rx requires few to no modifications to applications and provides programmers with additional feedback for bug diagnosis. We have implemented Rx on Linux. Our experiments with four server applications that contain six bugs of various types show that Rx can survive all the six software failures and provide transparent fast recovery within 0. 017 - 0. 16 seconds, 21 - 53 times faster than the whole <b>program</b> <b>restart</b> approach for all but one case (CVS). In contrast, the two tested alternatives, a whole <b>program</b> <b>restart</b> approach and a simple rollback and re-execution without environmental changes, cannot successfully recover the three servers (Squid, Apache, and CVS) that contain deterministic bugs, and have only a 40 % recovery rate for the server (MySQL) that contains a nondeterministic concurrency bug. Additionally, Rx’s checkpointing system is lightweight, imposing small time and space overheads...|$|E
50|$|The Secretaries of Agriculture and the Interior {{convened a}} fire policy review team to {{evaluate}} the National Park Service and Forest Service wilderness fire policies. The team reaffirmed the fundamental importance of fire’s natural role but recommended that fire management plans be strengthened by establishing clear decision criteria and accountability, and that interagency cooperation be improved. Wildland fire use <b>programs</b> <b>restarted</b> slowly after the 1989 review. Eventually the Forest Service and National Park Service programs began to grow {{as the number of}} fires and area burned increased.|$|R
5000|$|Dr. Joseph {{credited}} activists such as Yolanda Serrano, {{the head}} of the Association for Drug Abuse Prevention and Treatment (ADAPT) for calling attention to how the problem of addiction was far less dire than the overwhelming number of deaths from the rapidly spreading AIDS epidemic. However, at the start of Mayor David Dinkins administration in 1990, the only legal needle exchange program was shut down. Following new studies that demonstrated reduction in HIV infection rates, new <b>programs</b> <b>restarted</b> in New York City in 1992.|$|R
5000|$|Keith Shamrock - Owner of Shamrock Homes in Lake County, Florida (did {{the coin}} toss at the college's first {{football}} game after the football <b>program</b> was <b>restarted)</b> ...|$|R
40|$|Many {{large-scale}} production applications often have very long executions times and require periodic data checkpoints {{in order to}} save the state of the computation for <b>program</b> <b>restart</b> and/or tracing application progress. These write-only operations often dominate the overall application runtime, which makes them a good optimization target. Existing approaches for write-behind data buffering at the MPI I/O level have been proposed, but challenges still exist for addressing system-level I/O issues. We propose a twostage write-behind buffering scheme for handing checkpoint operations. The first-stage of buffering accumulates write data for better network utilization and the second-stage of buffering enables the alignment for the write requests to the file stripe boundaries. Aligned I/O requests avoid file lock contention that can seriously degrade I/O performance. We present our performance evaluation using BTIO benchmarks on both GPFS and Lustre file systems. With the twostage buffering, the performance of BTIO through MPI independent I/O is significantly improved and even surpasses that of collective I/O. 1...|$|E
40|$|Abstract. Many {{large-scale}} production parallel programs often {{run for a}} very long time and require data checkpoint periodically to save the state of the computation for <b>program</b> <b>restart</b> and/or tracing the progress. Such a write-only pattern has become a dominant part of an application’s I/O workload and implies the importance of its optimization. Existing approaches for write-behind data buffering at both file system and MPI I/O levels have been proposed, but challenges still exist for efficient design to maintain data consistency among distributed buffers. To address this problem, we propose a buffering scheme that coordinates the compute processes to achieve the consistency control. Different from other earlier work, our design can be applied to files opened in read-write mode and handle the patterns with mixed MPI collective and independent I/O calls. Performance evaluation using BTIO and FLASH IO benchmarks is presented, which shows a significant improvement over the method without buffering. Keywords: Write behind, MPI I/O, file consistency, data buffering, I/O thread...|$|E
40|$|Abstract—Massively {{parallel}} applications {{often require}} periodic data checkpointing for <b>program</b> <b>restart</b> and post-run data analysis. Although high performance computing systems provide massive parallelism and computing power {{to fulfill the}} crucial requirements of the scientific applications, the I/O tasks of high-end applications do not scale. Strict data consistency semantics adopted from traditional file systems are inadequate for homogeneous parallel computing platforms. For high performance parallel applications independent I/O is critical, particularly if checkpointing data are dynamically created or irregularly partitioned. In particular, parallel programs generating {{a large number of}} unrelated I/O accesses on large-scale systems often face serious I/O serializations introduced by lock contention and conflicts at file system layer. As these applications {{may not be able to}} utilize the I/O optimizations requiring process synchronization, they pose a great challenge for parallel I/O architecture and software designs. We propose an I/O mechanism to bridge the gap between scientific applications and parallel storage systems. A static file domain partitioning method is developed to align the I/O requests and produce a client-server mapping that minimizes the file lock acquisition costs and eliminates the lock contention. Our performance evaluations of production application I/O kernels demonstrate scalable performance and achieve high I/O bandwidths...|$|E
5000|$|Edit and {{continue}} support, enabling source code {{to be modified}} and recompiled on-the-fly without having to exit the current running <b>program</b> or <b>restart</b> the debugger (32 bit applications only).|$|R
50|$|From the 1970s to {{the early}} 1990s, Highway 102 was {{actively}} patrolled by the RCMP using aerial surveillance for speed limit violations. The aerial surveillance <b>program</b> was <b>restarted</b> in 2005.|$|R
30|$|Wildland fire use <b>{{programs}}</b> <b>restarted</b> slowly {{after the}} 1989 review. The programs at Yosemite, Sequoia, and Kings Canyon national parks, {{as well as}} several national forest wilderness areas, came back on line in 1990, but progress was slow to recover in other areas. A complete review and update of the federal wildland fire management policy and program was conducted, and wildland fire use was reaffirmed as a legitimate program (USDS and USDI 1989). After the review, the Forest Service and National Park Service programs began to grow as the number of fires and area burned increased.|$|R
40|$|Abstract: Many {{large-scale}} parallel {{scientific and}} engineering applications, especially climate modeling, often run for lengthy periods and require data checkpointing periodically {{to save the}} state of the computation for a <b>program</b> <b>restart.</b> In addition, such applications need to write data to disks for post-processing, e. g., visualization. Both these scenarios involve a write-only pattern using Hierarchal Data Format (HDF) files. In this paper, we study the scalability of CXFS by HDF based Structured Adaptive Mesh Refinement (AMR) application for three different block sizes. The code used is a block-structured AMR hydrodynamics code that solves compressible, reactive hydrodynamic equations and characterizes physics and mathematical algorithms used in studying nuclear flashes on neutron stars and white dwarfs. The computational domain is divided into blocks distributed across the processors. Typically, a block contains 8 zones in each coordinate direction (x, y, and z) and a perimeter of guard cells (in this case, 4 zones deep) to hold information from the neighbors. We used three different block sizes of 8 x 8 x 8, 16 x 16 x 16, and 32 x 32 x 32. Results of parallel I/O bandwidths (checkpoint file and two plot files) are presented for all three-block sizes {{on a wide range of}} processor counts, ranging from 1 to 508 processors of the Columbia system. Key words: parallel I/O, clustered file system (CXFS), benchmarking, performance evaluation, HDF 5, adaptiv...|$|E
40|$|The Active Gear, Flexible Aircraft Takeoff and Landing Analysis program, AGFATL, was {{developed}} to provide a complete simulation of the aircraft takeoff and landing dynamics problem. AGFATL can represent an airplane either as a rigid body with {{six degrees of freedom}} or as a flexible body with multiple degrees of freedom. The airframe flexibility is represented by the superposition of up to twenty free vibration modes on the rigid-body motions. The analysis includes maneuver logic and autopilots programmed to control the aircraft during glide slope, flare, landing, and takeoff. The program is modular so that performance of the aircraft in flight and during landing and ground maneuvers can be studied separately or in combination. A <b>program</b> <b>restart</b> capability is included in AGFATL. Effects simulated in the AGFATL program include: (1) flexible aircraft control and performance during glide slope, flare, landing roll, and takeoff roll under conditions of changing winds, engine failures, brake failures, control system failures, strut failures, restrictions due to runway length, and control variable limits and time lags; (2) landing gear loads and dynamics for up to five gears; (3) single and multiple engines (maximum of four) including selective engine reversing and failure; (4) drag chute and spoiler effects; (5) wheel braking (including skid-control) and selective brake failure; (6) aerodynamic ground effects; (7) aircraft carrier operations; (8) inclined runways and runway perturbations; (9) flexible or rigid airframes; 10) rudder and nose gear steering; and 11) actively controlled landing gear shock struts. Input to the AGFATL program includes data which describe runway roughness; vehicle geometry, flexibility and aerodynamic characteristics; landing gear(s); propulsion; and initial conditions such as attitude, attitude change rates, and velocities. AGFATL performs a time integration of the equations of motion and outputs comprehensive information on the airframe, state-of-maneuver logic, autopilots, control response, and aircraft loads from impact, runway roll-out, and ground operations. Flexible-body and total (elastic plus rigid-body) displacements, velocities, and accelerations are also output in the flexible-body option for up to twenty points on the aircraft. The AGFATL program is written in FORTRAN IV for batch execution and has been implemented on a CDC CYBER 170 series computer with an overlayed central memory requirement of approximately 141 (octal) of 60 bit words. The AGFATL program was last updated in 1984...|$|E
40|$|As {{hardware}} {{performance and}} dependability have dramatically improved {{in the past}} few decades, the software dependability issues are becoming increasingly important. Unfortunately, many studies show that software bugs, which inevitably slip through various bug detection methods and even the strictest testing before releasing, can greatly affect software dependability during production runs. To improve software dependability during production runs, this dissertation proposes to address software bugs at multiple levels by leveraging support from the underlying hardware, the OS kernel, and the middle-layer runtime. The proposed multi-level defenses address software bugs and their effects at different stages of program execution. The first-level defense detects software bugs once they are triggered. The detection at the earliest stage can effectively prevent further propagation of errors that are caused by the software bugs. It would be perfect if we could detect all the software bugs at the first-level defense. However, some bugs may still slip through the first-level defense and may be exploited by security attacks. The second-level defense is to detect the exploitation of software bugs in order to control the system damage caused by the potentially exploited bugs. Due to the limitation of the tools or methods deployed in the first-level and second-level defenses, some bugs may still escape them. Additionally, without any further actions for the detected bugs or exploitations at the previous two levels of defenses, what the target system can do is to shut down itself to prevent potential damages, thus is unavailable to users. At this point, the third-level defense recovers the program from software bugs and their effects, thus providing non-stop services. In short, the multi-level defenses complement each other to effectively address software bugs during production runs. More specifically, in each level of defense, this dissertation proposes a novel low-overhead method to address software bugs during production runs by leveraging support from the hardware, OS, or the runtime. In the first-level defense, this dissertation proposes a low-overhead tool, called SafeMem, to detect memory leaks and memory corruption bugs, two major forms of software bugs that severely threaten system availability and security. It does not require any new hardware extensions. Instead, SafeMem makes a novel use of existing ECC memory technology and exploits intelligent dynamic memory usage behavior analysis to detect memory leak and corruption bugs. The experiments with seven real-world applications show that SafeMem detects all tested bugs with very low overhead (only 1. 6 %- 14. 4 %). In the second-level defense, this dissertation proposes a low-overhead, software-only information flow tracking system, called LIFT, to detect the exploitation of software bugs. Without requiring any hardware changes, LIFT minimizes runtime overhead by exploiting dynamic binary translation and optimizations for detecting various types of security attacks. More specifically, LIFT aggressively eliminates unnecessary dynamic information tracking, coalesces information checks, and efficiently switches between target programs and instrumented information flow tracking code. The experiments with two real-world server applications, one client application and eighteen attack benchmarks show that LIFT can effectively detect various types of security attacks. LIFT also incurs very low overhead, only 6. 2 % for server applications, and 3. 6 times on average for seven SPEC INT 2000 applications. The proposed dynamic optimizations effectively reduce the overhead by a factor of 5 - 12 times. In the third-level defense, this dissertation proposes an innovative technique, called Rx, which can quickly recover programs from many types of software bugs, both deterministic and non-deterministic. The idea, inspired from allergy treatment in real life, is to roll back the program to a recent checkpoint once failure, triggering or exploitation of software bugs that are detected at the first two level of defenses, and then re-execute the program in a modified environment. This idea is based on the observation that many bugs are correlated with their execution environments, and therefore can be avoided by removing the ``allergen'' from the environment. Rx requires few to no modification to applications and provides programmers with additional feedback for bug diagnosis. The experiments with four server applications that contain six bugs of various types show that Rx can survive all the six software failures and provide transparent fast recovery within 0. 017 - 0. 16 seconds, 21 - 51 times faster than the whole system <b>program</b> <b>restart</b> approach for all but one case (CVS) ...|$|E
50|$|Further {{funding was}} {{provided}} by NASA and the Advanced Research Projects Agency however, and the test <b>program</b> <b>restarted</b> on 20 June 1994 with a 136-second flight. The next flight, 27 June 1994, suffered an inflight (minor) explosion, but the craft successfully executed an abort and autoland. Testing restarted after this damage was fixed, and three more flights were carried out on 16 May 1995, 12 June, and 7 July. On the last flight a hard landing cracked the aeroshell. By this point funding for the program had already been cut, {{and there were no}} funds for the needed repairs.|$|R
25|$|<b>Restart</b> <b>programs</b> for {{reconstruction}} and creating {{jobs for the}} Iraqi people.|$|R
50|$|Wilson's wrestling {{program has}} been intermittent. In 2005, Wilson ended its wrestling program, {{becoming}} the last public school in Washington DC to have a wrestling team. However, in 2012, the <b>program</b> was <b>restarted.</b>|$|R
50|$|The Turnaround Model {{is one of}} four {{strategies}} {{available to}} American local education agencies (LEAs) under the Race to the Top and School Improvement Grants programs of the Obama administration. The other three <b>programs</b> include <b>Restart,</b> Transformation, and School Closures.|$|R
5000|$|A similar <b>program</b> was <b>restarted</b> in August 2015, when Raytheon, Boeing, and Lockheed Martin were {{contracted}} {{to design a}} Multi-Object Kill Vehicle concept. Raytheon released information that seemed to indicate they were exclusively involved in this work, but it was incorrect.|$|R
50|$|In 2001, {{as part of}} {{a program}} {{established}} by the United States Government and the United Nations High Commissioner for Refugees (UNHCR), approximately 3800 Lost Boys were allowed to resettle in the United States. They are now scattered over at least 38 cities. Halted after 9/11 for security reasons, the <b>program</b> <b>restarted</b> in 2004. As of 2006, the largest population of Sudanese refugees in the United States is in Omaha, Nebraska, which hosts about 7,000 people. Numerous resettlement agencies, such as Catholic Charities, Lutheran Social Services, the IRC (International Rescue Committee), World Relief and others assisted in the resettlement process. A variety of programs have been initiated to help these displaced people, in areas of education, medical assistance, reconnecting with families in South Sudan and in rebuilding efforts and providing humanitarian aid in Southern Sudan.|$|R
50|$|Eccleston {{became the}} fifth {{head coach at}} Providence (the second since the <b>program</b> <b>restarted</b> after World War II) and {{immediately}} provided the school with its best record in 1956-57 at 11-7. Eccleston continued to keep the Friars in a strong position {{for the duration of}} his tenure, including its transition into ECAC Hockey in the early 1960s, recruiting players like Lou Lamoriello, Bob Bellemore and Larry Kish. In eight seasons behind the bench Eccleston had only one losing season and in 1963-64 gave Providence its first conference title and NCAA tournament appearance. The '64 season was the best in Providence's history to that point and only 1982-83 has topped it. For the outstanding year Eccleston received the Spencer Penrose Award and then stepped down from his position to devote more attention to being the school superintendent in Burrillville.|$|R
5000|$|The U.S. <b>programs</b> <b>restarted</b> in the Korean War. In the 1960s, the {{electro-optical}} bomb (or camera bomb) was reintroduced. They were {{equipped with}} television cameras and flare sights, {{by which the}} bomb would be steered until the flare superimposed the target. The camera bombs transmitted a [...] "bomb's eye view" [...] of the target back to a controlling aircraft. An operator in this aircraft then transmitted control signals to steerable fins fitted to the bomb. Such weapons were used increasingly by the USAF {{in the last few}} years of the Vietnam War because the political climate was increasingly intolerant of civilian casualties, and because it was possible to strike difficult targets (such as bridges) effectively with a single mission; the Thanh Hoa Bridge, for instance, was attacked repeatedly with gravity bombs, to no effect, only to be dropped in one mission with PGMs.|$|R
50|$|Rollin/rollout {{allows the}} {{computer}} operator to interrupt a running batch program, execute an inquiry <b>program,</b> and then <b>restart</b> the batch job {{where it was}} interrupted.|$|R
