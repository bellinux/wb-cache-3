102|117|Public
2500|$|Ajax has {{prompted}} {{the development of}} Web sites that mimic desktop applications, such as word processing, the spreadsheet, and slide-show presentation. WYSIWYG wiki and blogging sites replicate many features of PC authoring applications. Several browser-based services have emerged, including EyeOS and YouOS.(No longer active.) Although named operating systems, many of these services are application platforms. They mimic the user experience of desktop operating-systems, offering features and applications similar to a <b>PC</b> <b>environment,</b> {{and are able to}} run within any modern browser. However, these so-called [...] "operating systems" [...] do not directly control the hardware on the client's computer. Numerous web-based application services appeared during the dot-com bubble of 1997–2001 and then vanished, having failed to gain a critical mass of customers.|$|E
5000|$|... 1991 Establishment of {{the first}} {{subsidiary}} in London (UK); development {{of the first}} d2 SCSI card for <b>PC</b> <b>environment.</b>|$|E
50|$|Emulator High-level Language Application Program Interface (EHLLAPI) is an {{enhanced}} version of HLLAPI. It {{was introduced in}} 1986 by the IBM company {{in association with the}} IBM 3270 PC to provide access from a DOS <b>PC</b> <b>environment</b> to data on an IBM mainframe.|$|E
40|$|X 3 D (Extensible 3 D) is a {{standard}} description language for describing 3 D scenes on the web environment {{and can be used}} to establish 3 DVR e-commerce systems, such as virtual shopping malls. However, due to the CPU and memory limitations of mobile devices, the 3 DVR e-commerce systems described by using X 3 D scene language cannot be used on mobile devices. This limitation delays the growth of 3 DVR e-commerce systems, since the population and influence of mobile devices are more powerful than <b>PC</b> <b>environments.</b> To make X 3 D to be really cross platform, we provide a cross-platform X 3 D (CP-X 3 D) environment in this paper, which including a modified X 3 D scene language suitable for mobile devices and a cross-platform CP-X 3 D engine for both of mobile devices and <b>PC</b> <b>environments.</b> Through the CP-X 3 D environment, the 3 DVR e-commerce systems described in CP-X 3 D scene language or developed with CP-X 3 D engine can be used on both of PCs and mobile devices...|$|R
30|$|As the {{hardware}} performance of mobile devices have been noticeably increased, not only new applications with utilizing the advanced performance of mobile devices {{have been developed}} but also many traditional applications that were already developed based on <b>PC</b> <b>environments</b> have been converted to mobile devices [1]. Mobile devices provide big advantages in mobility and portability compared with general PC or workstations, so that many people can use them to access and to handle information almost anytime and anywhere. The hardware performance of mobile devices has become smaller and fast recently, so many people desire to feel the realistic and immersive virtual experience on mobile devices like <b>PC</b> or Console <b>environments</b> [2, 3].|$|R
50|$|Douglas Engelbart's first mouse had {{a single}} button; Xerox PARC soon {{designed}} a three-button model, but reduced the count to two for Xerox products. Apple decided on one button for their GUI environments on commercial release in 1983, while most other <b>PC</b> <b>environments</b> standardized on two, and most professional workstation environments used three. Aside from such OEM bundled mice, usually having between one and three buttons, many aftermarket mice have always had five or more, with varying amounts of additional software included to support them.|$|R
50|$|In Volume 24, Issue 02 of MacTech, {{the editors}} {{published}} {{the results of}} one-step and task tests between VMware Fusion 1.0, Parallels Desktop 3.0 and Boot Camp and used a PC running Windows XP as a baseline comparison in a native <b>PC</b> <b>environment.</b>|$|E
5000|$|Artemis Sync/Artemis Sync for Windows {{were the}} {{replacements}} Artemis Link. Rather than terminal emulators, {{they used the}} IBM defined EHLLAPI interface to allow Artemis 9000 {{to interact with the}} <b>PC</b> <b>environment</b> allowing file transfer and the use of Artemis Plot/Artemis Plot for Windows.|$|E
50|$|Editors {{used in the}} <b>PC</b> <b>environment</b> {{typically}} {{operate in}} a significantly different manner than those in operation on large Mainframe systems. PC editors are almost universally character stream oriented while mainframe editors are typically text line oriented. Users who {{need to work on}} both PCs and mainframes thus need to become productive in two differing work styles.|$|E
40|$|On-line {{signature}} verification for Tablet PC devices is studied. The on-line {{signature verification}} algorithm {{presented by the}} authors at the First International Signature Verification Competition (SVC 2004) is adapted to work in Tablet <b>PC</b> <b>environments.</b> An example prototype of securing access and securing document application using this Tablet PC system is also reported. Two different commercial Tablet PCs are evaluated, including information of interest for signature verification systems such as sampling and pressure statistics. Authentication performance experiments are reported considering both random and skilled forgeries by using a new database with over 3000 signatures. 1...|$|R
5000|$|... #Caption: Rick wields {{a weapon}} in the 2D game <b>environment</b> (<b>PC</b> Engine) ...|$|R
40|$|International Telemetering Conference Proceedings / October 26 - 29, 1998 / Town & Country Resort Hotel and Convention Center, San Diego, CaliforniaThis {{paper will}} discuss the design and {{performance}} of a multi-mode receiver. The receiver is designed to operate in standard VME and <b>PC</b> <b>environments</b> and will support data rates up to 20 Mbps. The paper will discuss new digital demodulation techniques that support PCM-FM, PCM-PM, FM, PM, BPSK, QPSK and O-QPSK modulation. This new demodulator also includes a built in bit sync with soft decision outputs. This paper will provide an overview on digital filtering used in the second IF filter which provides dynamic changing of the IF bandwidth...|$|R
50|$|Memory module testers can be broadly {{categorized}} {{into two}} types, hardware memory testers and software diagnostic programs that {{run in a}} <b>PC</b> <b>environment.</b> Hardware memory testers have more sophisticated and comprehensive test features built into the tester as compared to software diagnostic testing program. Software diagnostic does allow for detection of possible problems when memory modules are already installed on the computer system.|$|E
50|$|Automatic Code Generation tool {{can be used}} {{to insert}} the {{controller}} code in a Linux Real-time operating system (RTOS) (in two available versions, namely, Linux RTAI and Linux RT with kernel preemption), in order to test the control algorithm in the <b>PC</b> <b>environment</b> instead of the final target hardware, performing Rapid Control Prototyping (RCP) tests. EICASLAB RCP includes a real-time scheduler based on multithreading programming techniques and able to run on a multi-core processor.|$|E
5000|$|The desktop was EPEAT Gold rated and met Energy Star requirements. The M58e {{was also}} {{compatible}} with solar charger packs. PC Mag summarized its {{review of the}} desktop by saying [...] "The Lenovo ThinkCentre M58e is a middle-of-the-road business PC, both in performance and features, though it does have the added benefits of Intel vPro and IT-friendly features. It's certainly worth a look {{if you need a}} <b>PC</b> <b>environment</b> that can grow with your business." ...|$|E
40|$|Real-time aspects are {{becoming}} more important in standard desktop <b>PC</b> <b>environments</b> and x 86 based processors are being utilized in embedded systems more often. While these processors were not created for use in hard real time systems, they are fast and inexpensive {{and can be used}} if it is possible to determine the worst case execution time. Information on CPU caches (L 1, L 2) and branch prediction architecture is necessary to simulate best and worst cases in execution timing, but is often not detailed enough and sometimes not published at all. This document describes how the underlying hardware can be analysed to obtain this information...|$|R
40|$|This {{contribution}} describes {{recent development}} in ongoing work focused on point cloud rendering algorithm implementation usable in environments containing programmable or custom hardware. The approach {{described in this}} paper {{is based on the}} idea that direct point cloud rendering, which is in the principle not too complicated, can be efficiently implemented in programmable or custom hardware. Such implementation can be useful not only for its performance but especially for the possibility to include it into solutions that require 3 D graphics output in non <b>PC</b> <b>environments</b> and in embedded solutions with low power consumption, etc. This contribution describes the overall approach and the current results...|$|R
40|$|We present sppc, a {{high-performance}} system for intelligent text extraction and navigation from German free text documents. sppc {{consists of a}} set of domainindependent shallow core components which are realized by means of cascaded weighted finite state machines and generic dynamic tries. All extracted information is represented uniformly in one data structure (called the text chart) in a highly compact and linked form in order to support indexing and navigation through the set of solutions. German text processing includes (among others) compound processing, high performance named entity recognition and chunk parsing based on a divide-and-conquer strategy. sppc has a good performance (4380 words per second on standard <b>PC</b> <b>environments)</b> and high linguistic coverage. ...|$|R
5000|$|Development for Spectrum and CPC games {{took place}} on a commercially {{available}} cross-assembler development environment (PDS) hosted on an IBM PC clone which was electronically connected to a Spectrum. This allowed the game to be authored on the stable <b>PC</b> <b>environment</b> (complete with disk backup), then [...] "blasted" [...] directly into the Spectrum memory to allow for immediate testing. Developing in this manner allowed for significantly higher development speeds than could be achieved by native development on the Spectrum.|$|E
50|$|In 1982, STSC {{released}} APL*Plus/PC, {{which was}} an extremely successful APL interpreter for the IBM personal computer. In the mid 1980s, STSC developed the APL*PLUS/Unix interpreter, a full 32 bit interpreter which was the basis of further APL development, notably APL*PLUS/386, which was later available for Intel 386 class machines and higher. Arguably, the APL*Plus/386 interpreter fostered the exodus of APL applications from the mainframe to the <b>PC</b> <b>environment,</b> as the hardware and software were finally correctly matched to facilitate a straightforward migration of medium- to large sized applications away from the mainframe.|$|E
50|$|The project {{started as}} tool {{development}} {{work for the}} IT Security group at Macquarie University in 2003, with an initial team that included Rob Dartnell, Ian Latter and Ty Miller. There was a need to demonstrate the weakness in one particular application's security via its one hashed, network transmitted, password. The openMosix cluster software, at that time, was available via a number of Linux distributions, but these were neither secure nor dynamic enough to support the campus <b>PC</b> <b>environment</b> that the cluster software was to be deployed into.|$|E
50|$|Originally TCP was {{designed}} for unreliable low speed networks (such as early dial-up modems) but {{with the growth of}} the Internet in terms of backbone transmission speeds (using Optical Carrier, Gigabit Ethernet and 10 Gigabit Ethernet links) and faster and more reliable access mechanisms (such as DSL and cable modems) it is frequently used in data centers and desktop <b>PC</b> <b>environments</b> at speeds of over 1 Gigabit per second. The TCP software implementations on host systems require extensive computing power. In the early 2000s, full duplex gigabit TCP communication could consume more than 80% of a 2.4 GHz Pentium 4 processor (see freed-up CPU cycles), resulting in small or no processing resources left for the applications to run on the system.|$|R
40|$|Package name: Discover_v 00. 21 _ 20140718 Platform requirements: This package {{contains}} {{a tool to}} “discover ” Barix devices within a local environment. It is implemented in Java, requiring Java Standard Edition 5 or later. As the application has a GUI, the X-Window system is required when running on Linux/FreeBSD and other *NIX systems. Release Note © 2014 Barix AG, all rights reserved. All information is subject to change without notice. All mentioned trademarks belong to their respective owners and are used for reference only. 1 Hardware Compatibility This Software is intended to run on all <b>PC</b> <b>environments</b> for which Java Edition 5 JRE or later is supported. For Edition 5 the support for the “start browser ” feature is more specifically targeted at the following operating systems...|$|R
50|$|A second {{explanation}} for the complexity of JCL is the different expectations for running a job than are found in a <b>PC</b> or unix <b>environment.</b>|$|R
5000|$|Ajax has {{prompted}} {{the development of}} Web sites that mimic desktop applications, such as word processing, the spreadsheet, and slide-show presentation. WYSIWYG wiki and blogging sites replicate many features of PC authoring applications. Several browser-based services have emerged, including EyeOS and YouOS.(No longer active.) Although named operating systems, many of these services are application platforms. They mimic the user experience of desktop operating-systems, offering features and applications similar to a <b>PC</b> <b>environment,</b> {{and are able to}} run within any modern browser. However, these so-called [...] "operating systems" [...] do not directly control the hardware on the client's computer. Numerous web-based application services appeared during the dot-com bubble of 1997-2001 and then vanished, having failed to gain a critical mass of customers.|$|E
50|$|Although {{there is}} no way to {{natively}} load a WBFS partition in a <b>PC</b> <b>environment,</b> they can be run in a Wii emulator, such as Dolphin. There are also several applications, such as WBFS managers (Mac OS X, Linux and Windows), that allow the transfer of ISO image files to a WBFS formatted drive. The main advantage of this is the reduction in file size the WBFS format allows, as Wii discs are filled with padding data that must be present in the ISO but that the WBFS file system can strip away. This can allow some smaller games to go from a 4.7 GB (4.37 GiB) ISO file to less than a hundred megabytes as any unused space on the disk will be filled by this padding data.|$|E
5000|$|The public beta was {{released}} on July 14, 2011 on the Xbox 360 exclusively for Black Ops. Invites for the PlayStation 3 version began being sent out on September 17, 2011. Call of Duty: Elite officially launched on November 8, 2011 {{to coincide with the}} release of Modern Warfare 3. The PC version however, will be delayed for an unknown date. In a statement by Beachhead Studios' studio head, Chacko Sonny, the PC version needs to [...] "Ensure a safe <b>PC</b> <b>environment.</b> It’s really extensive. We need more time to get there, so Elite on PC will not launch on Day 1." [...] It is not available on the Wii console, due to its lack of internet capabilities. Activison confirmed March 15, 2012 that they are still working on an Elite version for PC players.|$|E
40|$|We present 1 sppc, a {{high-performance}} system for intelligent extraction of structured data from free text documents. sppc {{consists of a}} set of domain-adaptive shallow core components which are realized by means of cascaded weighted finite state machines and generic dynamic tries. The system has been fully implemented for German which includes morphological and on-line compound analysis, e#cient POS-filtering, high performance named entity recognition and chunk parsing based on a novel divideand -conquer strategy. The whole approach proved to be very useful for processing of free word order languages like German. sppc has a good performance (more than 6000 words per second on standard <b>PC</b> <b>environments)</b> and achieves high linguistic coverage. Especially for the divide-and-conquer parsing strategy we obtained an f-measure of 87. 14 % on unseen data. Key words: natural language processing, shallow free text processing, German language, finite-state technology, information extract [...] ...|$|R
40|$|Distance {{education}} {{suffers from}} a number of limitations including administrative perceptions of on-line instruction as a cost saver, lack of pedagogical underpinning and the lack of richness of media used to offset the missing classroom experience. This presentation explores one approach to providing part of the classroom experience on-line. Through the development of podcasts, both a supplement to the classroom for traditional courses and a means of conveying the classroom experience to on-line students have been provided. The concept of the podcast frees the teacher from the time and geography constraints of the classroom, and at the same time, potentially freeing the student from the time and cable constraints of computerbased on-line instruction. A demonstration on the construction of podcasts will be provided using free or inexpensive software for both Mac and <b>PC</b> <b>environments</b> as well as providing existing designed examples for conference attendees to review...|$|R
40|$|In this paper, {{we propose}} {{a method for}} {{automatically}} detecting the times during which game players exhibit specific behavior, such as when players commonly show excitement, concentration, immersion, and surprise. The proposed method detects such outlying behavior based on the game players’ characteristics. These characteristics are captured non-invasively in a general game environment. In this paper, cameras were used to analyze observed data such as facial expressions and player movements. Moreover, multimodal data from the game players (i. e., data regarding adjustments to the volume {{and the use of}} the keyboard and mouse) was used to analyze high-dimensional game-player data. A support vector machine was used to efficiently detect outlying behaviors. We verified the effectiveness of the proposed method using games from several genres. The recall rate of the outlying behavior pre-identified by industry experts was approximately 70 %. The proposed method can also be used for feedback analysis of various interactive content provided in <b>PC</b> <b>environments...</b>|$|R
40|$|Abstract- Semantics {{represent}} {{the next level}} in computing. It builds upon the current computing level by introducing the concept of data synthesis and its semantic interpretation. It is done autonomously based on certain inference rules, which are programmed into the system. Pervasive Computing (PC) as the name suggests is ubiquitous computing i. e. computing everywhere and at all times with an added dimension of seamless Human-Computer Interaction (HCI). This paper discusses basic features of a <b>PC</b> <b>Environment</b> like context awareness, location sensitivity sensors etc. and methodology of applying the semantic framework to generate intelligent content for driving the <b>PC</b> <b>Environment</b> and seamles...|$|E
40|$|This paper {{describes}} an algorithm for the Gouraud-shading of triangles and its realization in hardware. First, different realizations using span-shading hardware are discussed. Their drawbacks then {{lead to the}} design of a triangle-shader as an ASIC. This chip, together with a signal processor for the geometry computations, will provide an effective and low-cost graphics subsystem for the <b>PC</b> <b>environment...</b>|$|E
40|$|Computer {{analysis}} and {{monitoring of the}} exercise electrocardiograms (ECG) have been advantageously applied for a longer time. Recently, an overwhelming influence of personal computers (PCs) has a visible impact in this field as well. Such <b>PC</b> <b>environment</b> {{has been used in}} development of a software package for the on-line exercise ECG analysis. This paper reveals the core of the application, i. e., a built-in real-time executive. A three-phase design approach is described: first, recognition of the tasks and their structure, second, evaluation of the task time complexities, and third, allocation of the tasks and implementation in C++ in the MS-DOS <b>PC</b> <b>environment.</b> Performance of the built real-time multitasking environment is finally studied for the worst-case situation using a prototype PC installation. Keywords: real-time executive, multitasking, on-line exercise ECG analysis, performance evaluation 1 Introduction The exercise ECG [1] has evolved into a diagnostic and therapeutic means [...] ...|$|E
5000|$|Automatic code {{generation}} {{is based on}} use case-oriented, configurable and tested SW components, DAVE Apps. They are comparable to executable and configurable application notes that can be downloaded form the web just like apps for smart phones or tablet <b>PCs.</b> This <b>environment</b> is based on Eclipse, beside the [...] "App approach" [...] ordinary program development using C/C++ is available as well. Targets are XMC1xxx and XMC4xxx microcontrollers using ARM Cortex-M processors.|$|R
40|$|Digital {{games have}} often been viewed as anti-social. However, this view has been {{recently}} changing as social aspects of games are gaining more emphasis. We explore the usage of physical space to enable socially richer game experiences. In particular, we utilize the spatial relationship between portable gaming devices to show multiple views into a shared game world. Similar multi-display systems have been studied in desktop <b>PC</b> <b>environments</b> to address the usability problems caused by gaps and bezels between the displays. In this paper, we demonstrate that this source of problems in utility applications can be a design opportunity in games. We implemented and evaluated two games that are played by two players using touch-screen controlled portable devices on a table. Results of our qualitative study show that the displayless space between the devices {{can be used to}} increase challenge, create positive surprises, stimulate imagination, and provoke social interaction in games. We also identified some design pitfalls that may break the illusion of a coherent space. Author Keywords handheld games, game design, displayless space, amodal completio...|$|R
40|$|In {{this paper}} we present 1 sppc, a {{high-performance}} system for intelligent extraction of structured data from free text documents. sppc {{consists of a}} set of domain-adaptive shallow core components that are realized by means of cascaded weighted finite state machines and generic dynamic tries. The system has been fully implemented for Ger-man; it includes morphological and on-line compound analysis, efficient POS-filtering, high performance named entity recognition and chunk parsing based on a novel divide-and-conquer strategy. The whole approach proved to be very useful for processing free word order languages like German. sppc has a good performance (more than 6000 words per second on standard <b>PC</b> <b>environments)</b> and achieves high linguistic coverage, especially for the divide-and-conquer parsing strategy, where we obtained an f-measure of 87. 14 % on unseen data. Key words: natural language processing, shallow free text processing, German language, finite-state technology, information extraction, divide-and-conquer parsing 1 The paper is based on previous work described in (Piskorski and Neumann, 2000) and (Neumann, Braun, and Piskorski, 2000), but presents substantial improvements and new results. 2...|$|R
