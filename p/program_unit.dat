121|1097|Public
5|$|By 1939, Aquinas Hall {{dormitory}} {{had been}} built to accommodate more students enrolling in general studies, but {{with the impact of}} World War II upon enrollment, President John J. Dillon, O.P. (1936–1944) lobbied Rhode Island's congressional delegation to pressure the War Department to assign Providence College an Army Specialized Training <b>Program</b> <b>unit.</b> Unit #1188 arrived on campus in the Summer of 1943, allowing the college to continue operation. A class of approximately 380 soldiers-in-training studied engineering at Providence College for a year before going overseas.|$|E
25|$|Each <b>program</b> <b>unit</b> reports {{directly}} to The Jewish Agency's Director General. Additionally, The Agency’s support units – such as human resources, marketing, and finance—which had until 2009 existed independently for each department, were trimmed and consolidated into single units that serve the entire organization.|$|E
25|$|After {{his tour}} as CAG, he was {{assigned}} to Washington, D.C. for staff tours, serving in the Aviation Plans Division of the office of the deputy chief of naval operations from 1944 to 1946 and as head of the Integrated Aeronautic <b>Program</b> <b>Unit</b> with additional duty as secretary of the Air Planning Group from 1946 to 1947.|$|E
40|$|Constructive {{alignment}} {{has been}} widely accepted as a strong pedagogical approach that promotes deep learning, however its application to <b>programming</b> <b>units</b> in higher education has not been widely reported. A constructively aligned introductory <b>programming</b> <b>unit</b> with portfolio assessment {{provides an opportunity for}} students to reflect on their learning. These reflections provide a rich source of information for educators looking to identify topical and pedagogical issues influencing student outcomes. In this work we applied thematic analysis to the reflective reports presented by students as part of their portfolio submission for an introductory <b>programming</b> <b>unit.</b> The analysis indicates several interesting aspects related to both topical and pedagogical issues. These results can be used to inform the development of constructively aligned <b>programming</b> <b>units,</b> and inform future research...|$|R
5000|$|Roland JX-8P, {{together}} with the Roland PG-800 <b>programming</b> <b>unit</b> ...|$|R
5000|$|Libraries and {{independent}} processes are written as independent <b>programming</b> <b>units</b> ...|$|R
2500|$|Like {{most modern}} {{programming}} languages and unlike earlier Lisps such as Maclisp, Scheme is lexically scoped: all possible variable bindings in a <b>program</b> <b>unit</b> {{can be analyzed}} by reading {{the text of the}} <b>program</b> <b>unit</b> without consideration of the contexts in which it may be called. This contrasts with dynamic scoping which was characteristic of early Lisp dialects, because of the processing costs associated with the primitive textual substitution methods used to implement lexical scoping algorithms in compilers and interpreters of the day. [...] In those Lisps, it was perfectly possible for a reference to a free variable inside a procedure to refer to quite distinct bindings external to the procedure, depending on the context of the call.|$|E
2500|$|David Watt's 2004 {{textbook}} also analyzes {{exception handling}} {{in the framework}} of sequencers (introduced in this article in the section on early exits from loops). Watt notes that an abnormal situation, generally exemplified with arithmetic overflows or input/output failures like file not found, is a kind of error that [...] "is detected in some low-level <b>program</b> <b>unit,</b> but [...] a handler is more naturally located in a high-level program unit". For example, a program might contain several calls to read files, but the action to perform when a file is not found depends on the meaning (purpose) of the file in question to the program and thus a handling routine for this abnormal situation cannot be located in low-level system code. Watts further notes that introducing status flags testing in the caller, as single-exit structured programming or even (multi-exit) return sequencers would entail, results in a situation where [...] "the application code tends to get cluttered by tests of status flags" [...] and that [...] "the programmer might forgetfully or lazily omit to test a status flag. In fact, abnormal situations represented by status flags are by default ignored!" [...] Watt notes that in contrast to status flags testing, exceptions have the opposite default behavior, causing the program to terminate unless the programmer explicitly deals with the exception in some way, possibly by adding explicit code to ignore it. Based on these arguments, Watt concludes that jump sequencers or escape sequencers aren't as suitable as a dedicated exception sequencer with the semantics discussed above.|$|E
50|$|Departments at the PGF {{include the}} Finance and Administrative department, the Programs Department - which is further broken into the Governance <b>Program</b> <b>Unit</b> and the Legislative <b>Program</b> <b>Unit),</b> and the Communications Department.|$|E
5000|$|... 1974 The Master <b>Program</b> <b>Units</b> Azcapotzalco, Iztapalapa and Xochimilco of Autonomous Metropolitan University.|$|R
5000|$|Mark Starowicz - head of CBC Television Documentary <b>Programming</b> <b>unit,</b> {{journalist}} and TV producer ...|$|R
50|$|An AWE {{application}} {{can enhance}} the interactive console window menu items {{that can be used}} to execute <b>program</b> <b>units</b> and exit, providing a GUI for an interactive application. The <b>program</b> <b>units</b> can operate using pop-ups, menus, and display windows, so that the traditional console I/O is not used at all, and thus providing an all-Fortran GUI driven application on all three supported platforms.|$|R
5000|$|Non-standard {{extensions}} to {{the language}} include macroactions: i.e. actions inside a <b>program</b> <b>unit</b> that influence the state of another <b>program</b> <b>unit.</b> The most relevant such macroaction is [...] "forcing", in which a POU can decide the active steps of another POU.|$|E
50|$|The same year, FEP {{established}} External <b>Program</b> <b>Unit</b> and Distance Learning Unit in 2001.|$|E
5000|$|Hewamadduma, Amara; Wijeranthna, W.G.; Ariyadasa, Edwin; Kailasanathan, Rajalakshmi; Wajirasena, Wissvanath; Kanagamurthi, Sinnaiah; Edmund, K.B.A.; Jayasuriya, Edmund. Dhammapada. Sri Lanka: National Integration <b>Program</b> <b>Unit,</b> 2002.|$|E
40|$|This paper {{shows how}} maximum {{possible}} configuration efficiency of an indefinitely large software system is constrained by chosing a fixed upper {{limit to the}} number of <b>program</b> <b>units</b> per subsystem. It is then shown how the configuration efficiency of an indefinitely large software system depends on the ratio {{of the total number of}} informaiton hiding violational software units divided by the total number of <b>program</b> <b>units.</b> Comment: 7 pages, 2 figure...|$|R
5000|$|Programming unit: The <b>programming</b> <b>unit</b> is used {{solely by}} the doctor for device check-ups or {{in case of}} {{technical}} problems. The stimulation signal of the pulse generator can be adjusted {{to the needs of}} each patient through the <b>programming</b> <b>unit.</b> For example, the programmer may be used to adjust the signal intensity and duration of the daily CCM application. The IPG can be programmed wirelessly through the skin by induction.|$|R
5000|$|... #Caption: The {{badge of}} the U.S. Coast Guard Auxiliary University <b>Programs</b> <b>unit</b> at the College of William and Mary.|$|R
50|$|Segal gave conference {{presentations and}} lectures internationally. He was a {{founding}} member of the Society of Biblical Literature <b>program</b> <b>unit</b> on Early Jewish and Christian Mysticism, and the SBL <b>program</b> <b>unit</b> on Divine Mediators in Antiquity. In 1988, he was the first Jewish member of the Society for New Testament Studies to address the society. He was elected a member of the American Society for the Study of Religion and the first American living outside Canada to be elected President of the Canadian Society for Biblical Studies.|$|E
50|$|However, it {{is a good}} {{practice}} to explicitly type all variables, and this can be forced by inserting the statement {{at the beginning of each}} <b>program</b> <b>unit.</b>|$|E
50|$|The First Aid Care Team (FACT) was a rapid-response {{emergency}} medical <b>program</b> <b>unit</b> serving areas of Chicago {{in conjunction with}} standard Emergency Medical Services units. The unit existed from 1984 to 2005.|$|E
40|$|The {{purpose of}} this study was to develop and test a <b>programmed</b> <b>unit</b> on the topic, The Principle of the Water Cycle. ” This was done in {{response}} to an educational problem that centers around the fact that children vary individually in their learning Capabilities. Prior to and in conjunction with the development of the <b>programmed</b> <b>unit</b> a review of literature and research related to programmed instruction in general was conducted. Also, it was hypothesized that the linear type program when augmented with support materials leads to different achievement and retention over a three week interval than the traditional lecture method of instruction. [...] The steps followed- in writing the- <b>programmed</b> <b>unit</b> were described and revisions were made on the basis of criticisms from a teacher, two graduate students a content specialist, and two grade seven students. Also, the <b>programmed</b> <b>unit</b> was subjected to the Thorndike-Lorge Word List and revisions were made where necessary in order to arrive at the grade seven level of reading. After the program was developed it was evaluated by comparing it to the traditional lecture method of instruction in an experimental versus a control group situation. [...] The limitations and findings of the study were listed and described briefly. Also, suggestions for future research were listed and described. It was concluded that the <b>programmed</b> <b>unit</b> on the topic, The Principle of the Water Cycle” might be able to be utilized as a substitute for- the teacher in presenting prerequisite material that is necessary for an understanding of the causes of relief rainfall and frontal rainfall. Also, the recommendation was offered that other areas of the social studies in which <b>programmed</b> <b>units,</b> could be utilized should be identified and programs developed to cope adequately with them. Furthermore, it was concluded that the findings were hot a function of the posttest or retention test...|$|R
5000|$|The Support Services Division oversees and {{educational}} and training {{aspects of the}} department, as well as volunteer <b>programs.</b> <b>Units</b> assigned include: ...|$|R
40|$|This paper {{proposes a}} theory of encapsulation, {{establishing}} a relationship between encapsulation and information hiding through the concept of potential structural complexity (P. S. C.), the maximum possible number of source code dependencies that can exist between <b>program</b> <b>units</b> in a software system. The P. S. C. of various, simple systems is examined {{in an attempt to}} demonstrate how P. S. C. changes as <b>program</b> <b>units</b> are encapsulated among different configurations of subsystems. Comment: 33 pages, 35 figure...|$|R
50|$|Open and Relational Theologies GroupThe Open and Relational Theologies Group is a <b>program</b> <b>unit</b> of the American Academy of Religion, {{which brings}} {{together}} scholars of diverse interests and concerns; {{many of whom}} identify with open theology as well as process thought.|$|E
5000|$|The work array can be {{propagated}} {{through the}} whole program via a [...] statement in each <b>program</b> <b>unit.</b> We may specify an explicit lower bound and allocate several entities in one statement. To free dead storage we write, for instance, ...|$|E
50|$|Like {{most modern}} {{programming}} languages and unlike earlier Lisps such as Maclisp, Scheme is lexically scoped: all possible variable bindings in a <b>program</b> <b>unit</b> {{can be analyzed}} by reading {{the text of the}} <b>program</b> <b>unit</b> without consideration of the contexts in which it may be called. This contrasts with dynamic scoping which was characteristic of early Lisp dialects, because of the processing costs associated with the primitive textual substitution methods used to implement lexical scoping algorithms in compilers and interpreters of the day. In those Lisps, it was perfectly possible for a reference to a free variable inside a procedure to refer to quite distinct bindings external to the procedure, depending on the context of the call.|$|E
50|$|The {{names of}} <b>program</b> <b>units</b> and {{external}} procedures are global, {{and the names}} of implied-DO variables have a scope of the statement that contains them.|$|R
40|$|Thesis (M. Ed.) [...] Memorial University of Newfoundland. EducationBibliography: leaves 97 - 103 The {{purpose of}} this study was to develop and test a <b>programmed</b> <b>unit</b> on the topic, "The Principle of the Water Cycle. ” This was done in {{response}} to an educational problem that centers around the fact that children vary individually in their learning Capabilities. Prior to and in conjunction with the development of the <b>programmed</b> <b>unit</b> a review of literature and research related to programmed instruction in general was conducted. Also, it was hypothesized that the linear type program when augmented with support materials leads to different achievement and retention over a three week interval than the traditional lecture method of instruction. [...] The steps followed- in writing the- <b>programmed</b> <b>unit</b> were described and revisions were made on the basis of criticisms from a teacher, two graduate students a content specialist, and two grade seven students. Also, the <b>programmed</b> <b>unit</b> was subjected to the Thorndike-Lorge Word List and revisions were made where necessary in order to arrive at the grade seven level of reading. After the program was developed it was evaluated by comparing it to the traditional lecture method of instruction in an experimental versus a control group situation. [...] The limitations and findings of the study were listed and described briefly. Also, suggestions for future research were listed and described. It was concluded that the <b>programmed</b> <b>unit</b> on the topic, "The Principle of the Water Cycle” might be able to be utilized as a substitute for- the teacher in presenting prerequisite material that is necessary for an understanding of the causes of relief rainfall and frontal rainfall. Also, the recommendation was offered that other areas of the social studies in which <b>programmed</b> <b>units,</b> could be utilized should be identified and programs developed to cope adequately with them. Furthermore, it was concluded that the findings were hot a function of the posttest or retention test...|$|R
40|$|A module system {{ought to}} enable assembly-line {{programming}} using separate compilation and an expressive linking language. Separate compilation allows programmers to develop {{parts of a}} program independently. A linking language gives programmers precise control over the assembly of parts into a whole. This paper presents models of <b>program</b> <b>units,</b> MzScheme's module language for assembly-line <b>programming.</b> <b>Units</b> support separate compilation, independent module reuse, cyclic dependencies, hierarchical structuring, and dynamic linking. The models explain how to integrate units with untyped and typed languages such as Scheme and ML. ...|$|R
5000|$|FORTRAN {{does not}} have a main {{subroutine}} or function. Instead a [...] statement as the first line can be used to specify that a <b>program</b> <b>unit</b> is a main program, as shown below. The [...] statement cannot be used for recursive calls.|$|E
50|$|Each <b>program</b> <b>unit</b> reports {{directly}} to The Jewish Agency's Director General. Additionally, The Agency’s support units - such as human resources, marketing, and finance—which had until 2009 existed independently for each department, were trimmed and consolidated into single units that serve the entire organization.|$|E
5000|$|U.S. RC {{personnel}} assigned or {{attached to}} a troop <b>program</b> <b>unit</b> in Germany when performing battle assemblies (formerly inactive duty training), rescheduled training, or equivalent training while in individual mobilization augmentation status or any other duty status under Title 10 of the United States Code.|$|E
5000|$|Martin Nakata - The first Torres Strait Islander to gain PhD qualifications, {{director}} of the University of New South Wales' Indigenous <b>Programs</b> <b>Unit,</b> known as Nura Gili ...|$|R
50|$|From an {{organizational}} point of view, however, a complete program consists of <b>program</b> <b>units.</b> These are either main programs, external subprograms or modules {{and can be}} separately compiled.|$|R
50|$|Community Based Corrections In Australia is a {{division}} of ACT Corrective Services and consists of the Probation and Parole <b>Unit</b> Rehabilitation <b>Programs</b> <b>Unit</b> and the Sentence Administration Board.|$|R
