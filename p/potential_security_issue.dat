8|10000|Public
50|$|The {{presence}} of the bug was announced to the public on , when Bash updates with the fix were ready for distribution, though {{it took some time}} for computers to be updated to close the <b>potential</b> <b>security</b> <b>issue.</b>|$|E
50|$|To enable {{automatic}} booting, SQL Server stores {{the lowest}} level encryption keys in persistent storage (using the DPAPI store). This presents a <b>potential</b> <b>security</b> <b>issue</b> because the stored keys can be directly recovered from a live system or from backups and used to decrypt the databases.|$|E
50|$|When the {{computers}} are joined into a domain (Active Directory or NT domain for instance), each computer {{has a unique}} Domain SID which is recomputed each time a computer enters a domain. Thus there are typically no significant problems with duplicated SIDs when {{the computers}} {{are members of a}} domain, especially if local user accounts are not used. If local user accounts are used, there is a <b>potential</b> <b>security</b> <b>issue</b> similar to the one described above, but the issue is limited to the files and resources protected by local users, as opposed to by domain users.|$|E
40|$|Network {{reprogramming}} {{allows for}} over-the-air application updates in sensor networks. We describe the op-eration {{of a number}} of network reprogramming protocols that have emerged for the TinyOS sensor network operating system. We go on to discuss <b>potential</b> <b>security</b> <b>issues</b> that arise from the operation of network reprogramming protocols...|$|R
5000|$|While the [...] {{feature is}} very useful in many cases, its {{improper}} use can pose a security risk if the [...] attribute {{is assigned to}} executable programs that are not carefully designed. Due to <b>potential</b> <b>security</b> <b>issues,</b> many operating systems ignore the [...] attribute when applied to executable shell scripts.|$|R
25|$|Prior to the tournament, three {{meetings}} were held by CONMEBOL authorities who {{were concerned about}} <b>potential</b> <b>security</b> <b>issues</b> in Colombia. On July 1 they announced the cancellation of the tournament. Venezuela offered to host the competition, but on July 6 CONMEBOL decided to reinstate the plans for Colombia, and the tournament was held on schedule.|$|R
5000|$|Whereas prior {{releases}} of Windows supported per-file encryption using Encrypting File System, the Enterprise and Ultimate editions of Vista include BitLocker Drive Encryption, which can protect entire volumes, notably {{the operating system}} volume. However, BitLocker requires approximately a 1.5-gigabyte partition to be permanently not encrypted and to contain system files in order for Windows to boot. In normal circumstances, the only time this partition is accessed is when the computer is booting, or {{when there is a}} Windows update that changes files in this area, which is a legitimate reason to access this section of the drive. The area can be a <b>potential</b> <b>security</b> <b>issue,</b> because a hexadecimal editor (such as dskprobe.exe), or malicious software running with administrator and/or kernel level privileges would be able to write to this [...] "Ghost Partition" [...] and allow a piece of malicious software to compromise the system, or disable the encryption. BitLocker can work in conjunction with a Trusted Platform Module (TPM) cryptoprocessor (version 1.2) embedded in a computer's motherboard, or with a USB key. However, as with other full disk encryption technologies, BitLocker is vulnerable to a cold boot attack, especially where TPM is used as a key protector without a boot PIN being required too.|$|E
40|$|This paper {{discusses}} a <b>potential</b> <b>security</b> <b>issue</b> {{in common}} operating system and application environments regarding dynamically attached devices and device interfaces. A set of countermeasures for the identified threats is de-scribed {{along with the}} integration of countermeasures into a policy-based security infrastructure; finally, an implemen-tation of the countermeasure {{in the form of}} a policy enforce-ment module integrated into the kernel of the Microsoft Win-dows 2000 /XP family of operating systems is described. ...|$|E
40|$|Spoofing is a {{very common}} {{security}} threat to email applications. Several powerful techniques {{have been developed to}} counteract spoofing, but most of them are server-oriented and transparent to the user. Making up {{for the vast majority of}} emails transmitted, spam is an annoyance and <b>potential</b> <b>security</b> <b>issue</b> for users, and moreover a superfluous burden to the internet. Despite the maturity of today’s email infrastructure, it is difficult to ensure the authenticity of a sender address for inbound mails. This shortcoming is used by spammers to bypass existing spam protection systems and furthermore poses a security risk to users. Due to this a vast majority of spam emails today are sent from botnets with forged sender addresses. This has attracted researchers over the years to develop email sender authentication mechanism as a promising way to verify identity of the senders. Therefore an urgent need to new mechanisms to circumvent the spoofing threat. KEYWORDS:Email Security,Spoofin...|$|E
40|$|Abstract. This paper {{addresses}} {{the idea of}} detecting some of the <b>potential</b> <b>security</b> <b>issues</b> concerning online voting in public elections. In particular, {{we focus on the}} issues of administrator authenticity, voter integrity and preventing multiple votes. We propose to use SCL to detect the presence of specific instructions within the source code for attaining these issues. ...|$|R
40|$|The SCADA system {{connectivity}} {{with several}} open networks using internet facility brought SCADA platform more vulnerable from attacks/threads. Therefore, the detail security review has been conducted, {{to find the}} <b>potential</b> <b>security</b> <b>issues</b> which are residing and warming the SCADA communication and also existing <b>potential</b> <b>security</b> solutions {{that are used to}} protect the SCADA communication. However, Security deployments are the future tread of this study. This security review is divided into four main sections: (1...|$|R
40|$|Abstract- The paper {{introduced}} the basic concept and background of Mobile Cloud Computing, analysed the inevitability and necessity to provide mobile internet services based on cloud computing technology, proposed the service framework for mobile cloud computing, analysed <b>potential</b> <b>security</b> <b>issues</b> and relevant technologies to protect privacy information of users under mobile cloud computing environment. Index Terms- mobile cloud computing, privacy security, framework, mobile internet, cloud security 1...|$|R
40|$|As the {{functionality}} {{that current}} computer network can provide is becoming complicated, a traditional router with {{application-specific integrated circuit}} (ASIC) implementation can 2 ̆ 7 t satisfy the flexibility requirements. Instead, a programmable packet forward system based on a general-purpose processor could provide the flexibility. While this system provides flexibility, a new <b>potential</b> <b>security</b> <b>issue</b> arises. Usually, software is involved as the packet forward system is programmable. The software 2 ̆ 7 s potential vulnerability, especially as to the remote exploits, becomes an issue of network security. In this thesis work, we proposed a software stack overflow vulnerability on click modular router and show how a disastrous denial-of-service attack on click modular router could be triggered by a single packet. In our research work, click modular router runs on Linux operating system based on general-purpose hardware. We actually showed that even a software router run within a modern operating system 2 ̆ 7 s protection is vulnerable by elaborate attack. And we checked the possible stack protection mechanisms on modern OS based on general-purpose hardware and proposed a possible stack protection mechanism for embedded OS...|$|E
40|$|Omeka 1. 0 was {{released}} on June 2, 2009. What's New in Omeka 1. 0 ? UI Improvements File metadata page on public themes Autocomplete for tags Pagination, filtering and sorting on the users admin panel Upgrade notification when new version is released 'Remember Me' option when logging in JSONP now available for JSON outputs Compatibility with 0. 10 Minor changes to config. ini Removed many deprecated helper functions Changed Dublin Core form inputs API improvements Plugin API New plugin API functions for item/file/collection ingest: insert_item, update_item, insert_files_for_item, insert_collection, insert_files_for_item, insert_element_set Theme API Additional options/arguments for display_files, including built in display of icons for specific file types New helpers for file metadata page: item_file, show_file_metadata, link_to_file_metadata Additional options for show_item_metadata() Additional argument for item() Additional argument for select_item_type, select_item_type_elements, select_element, select_user(), select_entity() Miscellaneous release_object() to help solve memory leak issues Security fixes Command Injection with ImageMagick Default JSON outputs Internal changes Overhaul of File model Upgraded to Zend Framework 1. 7. 5 List of bug fixes UI Improvements trac# 485, adds a file metadata page that will display on every public theme. This displays Dublin Core and other element metadata for the files that are attached to items. This can be accessed at the following relative URL in any Omeka installation: 'files/show/id', where ID is the unique numeric ID for the file (similar to items). See #Theme API improvements for more details. trac# 352, adds pagination capabilities to table classes and controllers. Omeka admin panel now shows pagination for lists of collections and users. Plugins can also use these improvements to implement pagination in a clean and simple fashion. trac# 65, implements autocomplete for adding tags via the admin interface. trac# 489, adds filtering/sorting criteria for users. Site administrators can now sort by username, first/last name, institution name, role, status (active/inactive). Can filter by role or status. trac# 459, adds an upgrade notification to the admin dashboard to tell users when {{a new version of}} Omeka is available (with a corresponding helper function, get_latest_omeka_version. trac# 158, enables JSONP for auto-serialized JSON requests. The javascript callback can be provided via the optional 'callback' parameter for any JSON request (output=json). JSONP responses are given the 'text/javascript' MIME type. This is different from the regular JSON MIME type ('application/json'). trac# 154, adds a 'Remember Me' option to the login form. This will maintain a user's session for 2 weeks from the moment of login. If 'Remember' is not checked, the session will expire when the browser session terminates. This also adds a 'session. name' field to the config. ini file and removes the pre-existing 'login. expire' setting. See Compatibility Issues for more details. If session name is not provided in the config file, the default session name will be automatically generated from the WEB_ROOT of the installation. A common use case for customizing the session name is so that session data could be shared across Omeka installations or with other applications running on the same server. Also added an 'initializeSession' phase to Omeka_Core, so that the session name could be properly configured prior to requests. Compatibility issues with 0. 10 'login. expire' setting was removed from the config. ini file. If you rely on this setting for determining the length of user sessions, tell your users instead to check 'Remember Me' when logging in through the admin. That is the same as setting login. expire to 2 weeks, and having the option of not extending the session is more secure on public computers. Many deprecated helper functions have been removed from the 1. 0 release of Omeka. Most of these were non-working as of 0. 10, but some {{may or may not have}} functioned correctly. In the interests of clarifying the API, these functions will not be available as of 1. 0. Using any of these functions within themes or plugins will now cause a fatal error: generate_url(options, name) dublin_core(type) metatext_form(item, input="textarea",metafields=null) items_rss_header() get_month(date) get_day(date) get_year(date) item_metadata(item, field, escape=true) type(id=null) types(array params = array()) tags(array params = array()) items(array params = array()) users(array params = array()) institutions(array params = array()) metafields(array params = array()) people(array params = array()) has_collection(item, name=null) has_files(item) item_types() collections(array params = array()) entities(array params = array()) has_collectors(collection) has_tags(item, array tags=array()) has_thumbnail(item) has_type(item, name=null) display_empty(val, alternative="[Empty]") get_base_url(use_relative_uri=false) is_current(link, req = null) link_to_thumbnail(item, props=array(), action='show', random=false) link_to_fullsize(item, props=array(), action='show', random=false) link_to_square_thumbnail(item, props=array(), action='show', random=false) _link_to_archive_image(item, props=array(), action='show', random=false, imageType = 'thumbnail') items_rss_uri(params=array()) item_permalink_url(item) define_metafield(name, description, type=null) add_theme_pages(dir, theme='both') add_controllers(dir='controllers') add_data_feed(format, options=array()) add_navigation(text, link, type='main', permissions=null) [3572] All Dublin Core elements on the items form are now plain text. The 'Language' and 'Date' elements are the ones affected by this change. The logic behind this change is that the previous form inputs (drop menu for language and YYYY/MM/DD date field) did not allow the full range of data entry that is implied by unqualified Dublin Core. In certain situations, data ingested from other systems may not have been possible to edit using Omeka. For example, if a date field containing 'May 10, 1932 ' was not converted to 1932 - 05 - 10 when ingested into the Omeka database, it would not be editable using the Omeka administrative interface. The value in 'path_to_convert' is changed from previous versions. This will not affect users with an up-to-date database. See Security Fixes for more details. API Improvements Plugin API Some helper functions have been added to simplify the task of ingesting data into Omeka from other systems. For more information about these helpers, see the codex or inline code documentation: insert_item(metadata = array(), elementTexts = array(), fileMetadata = array()) update_item(item, metadata = array(), elementTexts = array(), fileMetadata = array()) insert_collection(metadata = array()) trac# 488, insert_element_set(elementSet, array elements = array()) trac# 648, insert_files_for_item(item, transferStrategy, files, options = array()) [3710] release_object(var) : Can be used in plugins to avoid memory leaks. This encapsulates a workaround for PHP's built in garbage collection, which causes memory leaks when objects contain circular references. It does this by explicitly destroying an object instead of relying on PHP's garbage collection. Currently this only has a noticeable impact with record instances (classes extending Omeka_Record), though it may be extended to other classes in the future as needed. Caveats: This will destroy an object before automatic garbage collection would normally take over, so there may still be broken references to that object elsewhere in the application. This could cause problems when two plugins conflict with one another. For example, one plugin could store a reference to an Item record for future use, and a second plugin might release that record using release_object(). In this case, the first plugin would cease to work because of the second plugin's behavior. For this reason, release_object() should be avoided unless a memory leak crashes the plugin or otherwise interferes with its function. Example:item = insert_item(array('public'=>true), array()); release_object(item); Theme API trac# 479, a series of enhancements to display_files() : adds 'linkAttributes' and 'imgAttributes' options to display_files(). These are arrays that represent the XHTML attributes in the and tags, if applicable. adds support for displaying icons using display_files(). Users can now pass the 'icons' option as a keyed array of MIME types and paths to the respective icons. Here is a usage example from the code: changes the 3 rd argument of display files from a string (class attribute for the wrapping div) to an array (all attributes for the wrapping div). NOTE: This will break themes that relied on the previous behavior, but is easy to fix. the div that wraps each file now contains a class corresponding to the hyphenated MIME type of the file, i. e. learned 'linkToMetadata' option for the 'image', 'icon' and default callbacks. This is a boolean value that allows the theme writer to choose whether or not to link to the file's metadata page. This overrides the 'linkToFile' option and defaults to false. Here is an example of some of the new changes to display_files() : echo display_files_for_item(array('showFilename'=>false, 'linkToFile'=>false, 'linkAttributes'=>array('rel'=>'lightbox'), 'filenameAttributes'=>array('class'=>'random-class'), 'imgAttributes'=>array('class'=>'icon-image'), 'icons' => array('audio/mpeg'=>img('audio. gif')))); trac# 641, enhancements to show_item_metadata() : adds a 'show_element_sets' option. This allows a theme writer to choose to show specific element sets for an item. The theme writer can also choose to show all item type metadata for the item by putting 'Item Type Metadata' in the list (or the more specific name for certain item types, like 'Document Item Type Metadata'). adds a 'return_type' option. This option can be either 'array' or 'html' (default is 'html'). It allows a theme writer to retrieve the output from show_item_metadata() as an array to more easily enable custom markup. item() : Adds a fourth item argument to be able to display element metadata for an arbitrary Item record. Adds 'Permalink' metadata retrieval. Example: echo item('Permalink'); [...] > [URL] trac# 485, item_file(), show_file_metadata(), and the file metadata page: There is now a files/show page that can be displayed on every theme. By default, this page is located in the shared view scripts directory, application/views/scripts/files/show. php. If you would like to customize the markup for this file within your theme, copy this file from the shared directory to a files/ directory in your public theme and modify accordingly. item_file() helper has been added to facilitate display of metadata associated with files. It behaves similarly to item() when displaying Dublin Core or other element sets, though the arbitrary metadata associated with files is different than it is for files. The following metadata can be displayed for files: 'Id' 'Archive Filename' 'Original Filename' 'Size' 'Mime Type' 'Date Added' 'Date Modified' 'Authentication' 'Mime Type OS' 'File Type OS' 'Uri' 'Fullsize Uri' 'Thumbnail Uri' 'Square Thumbnail Uri' 'Permalink' show_file_metadata() helper has been added to facilitate listing file metadata in the same vein as show_item_metadata() for items. The main difference between this and show_item_metadata() is that it can display the 'MIME Type Metadata' element set, which displays all the metadata that was programmatically extracted from the file when it was first uploaded to Omeka. link_to_file_metadata() helper has been added to facilitate linking to the new file metadata page within themes. Security Fixes [3706] Fixed a security hole where the 'path_to_convert' admin setting could be replaced with an arbitrary command that would be executed when derivative images were created. The solution was to change the 'path_to_convert' setting so that it only represents the directory containing the ImageMagick binaries (not the binary itself). This should be fixed automatically when upgrading existing databases to 1. 0. [3587] Fixed a potential security hole involving JSON outputs. It was discovered that the default JSON output for users included the user's password hash. JSON outputs are protected by the ACL, so the password hash would only be available to super users, who can change passwords arbitrarily anyway. Still, this could have become a vulnerability in the future. The solution was to remove all default non-HTML outputs (including JSON) from controllers, thus forcing controller writers to enable alternative output formats explicitly using Zend Framework's ContextSwitch action helper. This reduces the chances of accidentally exposing sensitive data to the end user. The down side is that it may break plugins that rely on the existence of default 'JSON' outputs. Internal Changes Upgrades Zend Framework to 1. 7. 5. trac# 651, completely overhauled the File model. Prior to 1. 0, the File model handled everything to do with files, including uploading files, extracting metadata from the files, and creating derivative images. This splits those components into separate classes (Omeka_File_Ingest, Omeka_File_Info, and Omeka_File_Derivative_Image, respectively). The File model is now represented by the following 4 classes: Omeka_File_Ingest [...] In charge of ingesting files into Omeka, either through direct uploads (form POSTs), urls, or filesystem paths. This can also be extended to allow additional methods of file transfer by passing instances of classes that adhere to Omeka_File_Transfer_Adapter_Interface. Omeka_File_Info [...] Extracts additional metadata from files. This extracts the same metadata as in 0. 10. It has the most room for improvement of all the new file classes. Of particular interest in future development would be to revamp the algorithm that it uses to determine what metadata fields to populate. Omeka_File_Derivative_Image [...] Creates derivative images when given the path to the original file. Like Omeka_File_Info, this will run automatically when a file is inserted into the Omeka database. This is not meant to be invoked by plugin writers. List of Bugs Fixed in 1. 0 Fixes trac# 626 Images for items show have alt attribute for the display_files function. Fixes trac# 623 Make list tab on admin/items/browse appear selected when first going to the page. Fixes trac# 622 Alert on forgot password page breaks layout, adds images for submit-small and submit-extran small submit inputs. Fixes trac# 632, plugins should be able to add view scripts without adding controllers or a controllers directory. Fixes trac# 630, class autoloader needs to check entire include path. Fixes trac# 650, ElementSet::addElements() overwrites existing elements. Now, the order is relative to the other elements being added, which prevents overwriting. Fixes trac# 634, Dublin Core elements should be text areas, adds a migration. Fixes trac# 652, session namespace error using Zend Framework 1. 7. 4. Fixes a <b>potential</b> <b>security</b> <b>issue</b> where the database object was partially serialized into JSON for Omeka_Record objects. Fixes a potential security hole involving default JSON outputs for controllers. This removes the default action contexts from Omeka_Controller_Action and adds them to each relevant controller. The default action contexts were 'json', 'rss 2 ' and 'dc' for 'browse' actions, and 'json' and 'dc' for 'show' actions. This not make sense for most controllers, since RSS and Dublin Core are only for the ItemsController. It also opened up a security hole where sensitive data could have been passed to an attacker through the automatically serialized JSONP output. Note that this breaks backwards compatibility for any plugin controllers that extend off Omeka_Controller_Action, but only if those controllers rely on the default existence of the 'json' output for 'browse' and 'show' actions. Refs trac# 485, fixes a filter so that a plugin writer can do array('Display', 'File', [...] .) to filter element text displayed for files. Refs trac# 485, fixes a bug where filtering the element text so that it is blank should show the '[no text]' value for the RecordMetadataList helper. Refs trac# 485, fixes a bug in RecordMetadata helper where filters were not being properly invoked for arbitrary fields like 'Archive Filename' or 'Date Added'. Fixes styling on install form, adds closing tag to dashboard. Fixes trac# 613, query string vars not sent when redirecting users to the admin panel. Fixes trac# 647, Item view helper needs to be able to be called inside filters. Now item() can be called inside a filter that normally runs inside of another call to item(), so the API can be used to filter one element based on the value of another element. Fixes trac# 640 Themes admin panel layout busted with lots of themes in directory. Fixes trac# 657 Make uninstall button on plugins list red. Adds border above Save Item/Delete item on items/edit form, hides the Elements header on item-type/add if there are no element associated with an item-type. Fixes trac# 653 Hide the 'remove' link from single dublin core fields on item/add form. Fixes trac# 516 remove element button on item-types/edit doesn't prompt for confirm. Fixes trac# 665 'Use HTML' checkbox on items form was broken in IE 7. Fixes trac# 661 Link to Omeka archive in installer broken on subdomains. Fixed a bug in display_files() where GIF and BMP were not displaying derivative images [3722, 3724]...|$|E
5000|$|Many biker bars have {{rules on}} whether they allow patrons to wear [...] "colors", many biker bars do not allow [...] "colors" [...] as these are used to define one's {{position}} and/or alliance to one club over another. The [...] "No Colors" [...] club rules have become more popular {{over the years as}} a way to reduce tension between rival club members and <b>potential</b> <b>security</b> <b>issues.</b>|$|R
40|$|This memo {{discusses}} <b>potential</b> <b>security</b> <b>issues</b> {{that arise}} when using {{variable bit rate}} (VBR) audio with the secure RTP profile. Guidelines to mitigate these issues are suggested. Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|As users {{download}} {{applications to}} their mobile phones, {{security is a}} critical issue. In this paper we present a process for the security assurance of applications. It uses existing vulnerability databases and application development guidelines to identify <b>potential</b> <b>security</b> <b>issues.</b> The identified issues are then validated {{using a variety of}} techniques including black-box testing, unit testing code inspection and static analysis. This process is illustrated using an application for the Android platform...|$|R
50|$|A new {{standard}} was needed primarily because DES has {{a relatively small}} 56-bit key which was becoming vulnerable to brute force attacks. In addition, the DES was designed primarily for hardware and is relatively slow when implemented in software. While Triple-DES avoids the problem of a small key size, it is very slow even in hardware, it is unsuitable for limited-resource platforms, {{and it may be}} affected by <b>potential</b> <b>security</b> <b>issues</b> connected with the (today comparatively small) block size of 64 bits.|$|R
50|$|Bill is {{also the}} creator of a {{valuable}} database {{in which all the}} vampires in North America are listed along with their significant information. Vampires from other areas of the world, such as Peru, have also provided information for this database. The database itself has been controversial because of <b>potential</b> <b>security</b> <b>issues</b> and is only available for purchase to other vampires. While most older vampires have good memories, Bill's ability to recall precise details, faces and conversations is reputed to be exceptional, even among other long-lived supernaturals.|$|R
40|$|Abstract. Publish/Subscribe {{is often}} {{regarded}} as a promising paradigm for Future Internet architectures. Its information oriented nature and its particular security features have stimulated current research efforts which aim at applying publish/subscribe principles to a clean-slate Internet architecture. One of the core components of publish/subscribe architectures is the rendezvous network. Any security failure that a rendezvous network may face will probably jeopardize {{the operation of the}} whole (inter-) network. In this paper we highlight <b>security</b> requirements and <b>potential</b> <b>security</b> <b>issues</b> of rendezvous networks and we present security solutions that can be applied in order to shield them. Keywords: Future Internet, Publish/Subscribe, Security...|$|R
40|$|Abstract: The {{adoption}} of smart grids imposes {{a heavy burden}} on the current data network infrastructure. Although, {{there are a variety}} of solutions including certain protocols that might be capable of satisfying the introduced desires and constraints, there are certain <b>issues</b> concerning the <b>security</b> and privacy could and would emerge. In this talk we are going to analyses and review the <b>potential</b> <b>security</b> <b>issues</b> and attacks associated with the {{adoption of}} smart grids given the current IP public network infrastructure. We hope this talk help the researchers and developers to assist and mitigate the associated risks in their future work scope. إدارة المؤتمرا...|$|R
50|$|OpenSSH {{includes}} {{the ability to}} forward remote TCP ports over a secure tunnel, allowing that way arbitrary TCP ports on the server side and on the client side to be connected through an SSH tunnel. This is used to multiplex additional TCP connections over a single SSH connection, to conceal connections and encrypting protocols that are otherwise unsecured, and to circumvent firewalls what opens up space for <b>potential</b> <b>security</b> <b>issues.</b> An X Window System tunnel may be created automatically when using OpenSSH to connect to a remote host, and other protocols, such as HTTP and VNC, may be forwarded easily.|$|R
40|$|Abstract—Recently, {{wireless}} sensor networks (WSNs) {{have attracted}} {{a lot of attention}} from the network research community, especially in the aspect of event-driven {{wireless sensor networks}} (EWSNs), such as adversary locating, fire detection and so on. As the nature of importance of event monitoring, security has to be assured in both of communication and processing. However, due to the inherent resource constraints, security in EWSNs is faced different issues and challenges than traditional WSNs. In this paper, we attempt to give an outline on the <b>security</b> <b>issues</b> in the EWSNs. And then we propose a new secure architecture for it, which covers <b>potential</b> <b>security</b> <b>issues.</b> In this architecture, we analyze the possible threats and give out the corresponding countermeasures. Keywords-security; threat; issue; event-driven wireless sensor networks I...|$|R
40|$|Abstract. Use {{cases are}} widely used for {{functional}} requirements elicitation. However, security non-functional requirements are often neglected in this requirements analysis process. As systems become increasingly complex current means of analysis will probably prove ineffective. In the safety domain a variety of effective analysis techniques have emerged over many years. Since the safety and security domains share many similarities, various authors have suggested that safety techniques might usefully find application in security. This paper takes one such technique, HAZOP, and applies it to one widely used functional requirement elicitation component, UML use cases, {{in order to provide}} systematic analysis of <b>potential</b> <b>security</b> <b>issues</b> at the start of system development...|$|R
40|$|Abstract. Recently, {{wireless}} sensor networks (WSNs) {{have attracted}} {{a lot of attention}} from the network research community, especially in the aspect of event-driven {{wireless sensor networks}} (EWSNs), such as adversary locating, fire detection and so on. As the nature of importance of event monitoring, security has to be assured in both of communication and processing. However, due to the inherent resource constraints, security inEWSNs is faceddifferent issues and challenges than traditional WSNs. In this paper, we attempt to give an outline on the security issuesin the EWSNs. And then we propose a new secure architecture for it, which covers <b>potential</b> <b>security</b> <b>issues.</b> In this architecture, we analyze the possible threats and give out the correspondingcountermeasures...|$|R
40|$|This {{research}} {{delivers a}} multifaceted methodology that underpins a practical security analysis and system modelling framework applicable to critiquing modern critical infrastructure systems. The intent, to identify <b>potential</b> system <b>security</b> <b>issues</b> and gain operational insights that {{will contribute to}} improving system resilience, availability and ameliorate incident management responses for Australian critical infrastructure systems...|$|R
40|$|Today’s {{processors}} {{provide a}} rich source of statistical information on program execution characteristics through hardware counters. However, traditionally, operating system (OS) support for and utilization of the hardware counter statistics has been limited and ad hoc. In this paper, we make the case for direct OS management of hardware counter statistics. First, we show the utility of processor counter statistics in CPU scheduling (for improved performance and fairness) and in online workload modeling, both of which require online continuous statistics (as opposed to ad hoc infrequent uses). Second, we show that simultaneous system and user use of hardware counters is possible via time-division multiplexing. Finally, we highlight potential counter misuses to indicate that the OS should address <b>potential</b> <b>security</b> <b>issues</b> in utilizing processor counter statistics. ...|$|R
5000|$|The goal of Nova was {{to achieve}} [...] "sovereignty and {{technological}} independence" [...] {{and to have}} it installed on all computers in Cuba where Microsoft Windows still is {{the most widely used}} operating system. The system was central to the Cuban government's desire to replace Windows. Hector Rodriguez, Director of UCI, said that [...] "the free software movement is closer to the ideology of the Cuban people, above all for the independence and sovereignty." [...] Other cited reasons to develop the system include the United States embargo against Cuba which made it hard for Cubans to buy and update Windows, as well as <b>potential</b> <b>security</b> <b>issues</b> feared by the Cuban government because of the U.S. government's access to Microsoft's source code.|$|R
40|$|Abstract—This paper {{proposes a}} {{decision}} tree (DT) based systematic approach for cooperative online power system dynamic security assessment (DSA) and preventive control. This approach adopts a new methodology that trains two contingency oriented DTs on daily basis by the databases generated from power system simulations. Fed with real-time wide area measurements, one DT about measurable variables is employed for online DSA to identify <b>potential</b> <b>security</b> <b>issues</b> {{and the other}} DT about controllable variables provides online decision support on preventive control strategies against those issues. A cost effective algorithm is adopted in this proposed approach to optimize the trajectory of preventive control. The paper also proposes an importance sampling algorithm on database preparation for efficient DT training for power systems with high penetration of wind power and distributed generation. Th...|$|R
40|$|Data {{quality and}} high {{performance}} have joined forces. Today is {{an era of}} big data, extremely large data warehouses and <b>potential</b> <b>security</b> <b>issues</b> for moving data. Traditional data quality is performed with an ETL-like operation of extracting, processing, and publishing back to the source. Performance, or a <b>potential</b> for <b>security</b> <b>issues</b> associated with moving data, requires a call for a new approach. This paper explains how SAS ® data quality functions can be invoked in-database, eliminating the need to move data and thus delivering data quality that meets the need for near real-time performance for today’s business. Graphic results comparing performance metrics of traditional data quality operations against in-database data quality will be presented along with details illustrating how these results scale with database resources. BUSINESS EVOLUTION – BIG DATA Did you know in 2011 humans created 1. 8 zettabytes of data? That would be equivalent to 200 billion high-definition movies that are at least 120 minutes long. It would take one person 47 million years to watch all those movies. All of this data that humans create doubles every two years? 1 “Big Data is the frontier of a firm’s ability to store, process, and access … all the data it needs to operate effectively, make decisions, reduce risks, and serve customers. There are varying definitions of what “Big Data ” is relative to a given context. From a pragmatic or practical viewpoint,...|$|R
40|$|Abstract — Mobile ad-hoc network (MANET) {{is one of}} {{the most}} {{promising}} fields for research and development of wireless network. Mobile Ad hoc Network is a collection of wireless mobile nodes forming a network without using any existing infrastructure. The characteristics of MANETs such as, dynamic topology, node mobility, provides large number of degree of freedom and self-organizing capability of that make it completely different from other network. The migration to wireless network from wired network has been a worldwide trend within the past few decades. To amend to such trend, it is vital to strengthen its <b>potential</b> <b>security</b> <b>issues</b> [...] In this paper, a new routing mechanism to combat the common selective packet dropping attack. Associations between nodes are used to identify and isolate the malicious nodes. Simulation results show the effectiveness of new scheme compared with EAACK with respect to packet drop, packet delivery ratio and throughput...|$|R
5000|$|The {{problem with}} opening a {{continuous}} connection between two computers via {{a web browser}} using Web sockets is that it potentially opens up the link to something called cache poisoning, in which someone can directly introduce viruses or other malware to the link, compromising the system. [...] Here is a summary of other weaknesses: Security tool for Web Sockets). Originally, <b>potential</b> <b>security</b> <b>issues</b> led Mozilla and Opera to discontinue support for Web Sockets until the Internet Engineering Task Force (IETF) could produce a standardized Web Sockets protocol as part of HTML5. A work around based on Connect based handshakes (as opposed to upgrade- based handshakes) proved to be secure. The semantics of the handshake as coded into VWF will take this into account. Since late 2011 this has been largely addressed with latest builds and standards, and many web platforms do support Web Sockets.|$|R
50|$|The Copa América in 2001 {{was held}} in Colombia, from 11 to 29 July. It was {{organised}} by CONMEBOL, South America's football governing body. Prior to the tournament, three meetings were held by CONMEBOL authorities who were concerned about <b>potential</b> <b>security</b> <b>issues</b> in Colombia, for what Venezuela offered to host the competition. At the last minute, CONMEBOL decided to return the organization to Colombia, and the tournament was held on schedule. Complaining for the sudden decision, and claiming that Argentine players had received death threats from terrorist groups, the Argentine Football Association decided {{to withdraw from the}} competition. Because Canada and Argentina withdrew, on July 6 and July 10 respectively, Honduras and Costa Rica were invited. There were no terrorist incidents within the competition. Colombia was placed in Group A with Venezuela, Chile, and Ecuador, and they finished on top of the group with nine points.|$|R
40|$|Abstract — To {{overcome}} the drawbacks {{of the existing}} methods for traffic classification (by ports, Deep Packet Inspection, statistical classification), a new system was developed, in which the data are collected and classified directly by clients installed on machines belonging to volunteers. Our approach combines the information obtained from the system sockets, the HTTP content types, and the data transmitted through network interfaces. It allows to group packets into flows and associate them with particular applications or the types of service. This paper presents the design and implementation of our system, the testing phase and the obtained results. The performed threat assessment highlights <b>potential</b> <b>security</b> <b>issues</b> and proposes solutions in order to mitigate the risks. Furthermore, it proves {{that the system is}} feasible in terms of uptime and resource usage, assesses its performance and proposes future enhancements. We released the system under The GNU General Public License v 3. 0 and published it as a SourceForge project called Volunteer-Based System for Research on the Internet...|$|R
40|$|Many {{enterprises}} {{are using}} Enterprise Content Management (ECM) systems, {{in order to}} manage sensitive information related to the organization. This information needs {{to be protected from}} unauthorized users. The purpose of this research report is to investigate some of the security challenges faced by small and medium enterprises (SMEs). The first part of this research consists of identifying existing and relevant research papers on ECM security. Secondly, it is important to reflect on how the ECM architecture and content management systems are different from other information systems. As an ECM system may handle both structured and unstructured data, there are a wide range of <b>potential</b> <b>security</b> <b>issues.</b> ECM systems provide business related benefits such as accessibility, scalability, proper document management, better workflow management. On the other hand, ECM systems are also vulnerable to security threats aimed against those organizations and their documents. The literature review for this paper also covers the different types of security attacks and some of the preventative measures...|$|R
40|$|Abstract. In the {{software}} development lifecycle, code static analysis takes {{an important part}} in building secure software. To help discover the <b>potential</b> <b>security</b> <b>issues</b> in source code, large numbers of static analysis tools are developed. But the results generated by them display in the form of pure text, so it is time-consuming for developers to analyze these text messages, and it is difficult for developers to concentrate on the most interesting defects in huge data. In this paper, we have developed a visualization system oriented to Java source code, which presents the results in graphics from a developer’s point of view, to help developers to analysis code defects. A novel layout is proposed to visualize software source code in a hierarchy way, which shows the physical structure of {{the software}}. A visual overview and powerful interaction is provided in this system which allows the developer to focus on the most pressing defects within huge volumes of source code...|$|R
