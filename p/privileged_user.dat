50|112|Public
25|$|Internally, Western-style forums {{organize}} {{visitors and}} logged in members into user groups. Privileges and rights are given {{based on these}} groups. A user of the forum can automatically be promoted to a more <b>privileged</b> <b>user</b> group based on criteria set by the administrator. A person viewing a closed thread as a member will see a box saying {{he does not have}} the right to submit messages there, but a moderator will likely see the same box granting him access to more than just posting messages.|$|E
2500|$|This {{version of}} MDAC had a {{security}} flaw {{that made it}} vulnerable to an escalated privileges attack. The vulnerability caused systems that had both IIS and MDAC installed to give an unauthorized web user the ability to execute shell commands on the IIS system as a <b>privileged</b> <b>user.</b> This allowed the attacker to use MDAC to tunnel SQL and other ODBC data requests through the public connection to a private back-end network when on a multi-homed Internet-connected IIS system. It also allowed the user to gain unauthorized access to secured, non-published files on the IIS system ...|$|E
50|$|Catalogs are {{publicly}} readable, but {{cannot be}} altered by {{anyone other than}} a <b>privileged</b> <b>user.</b>|$|E
5000|$|Failed and/or {{successful}} logins, {{especially of}} higher <b>privileged</b> <b>users</b> ...|$|R
5000|$|Running the Cygwin with {{elevated}} rights because Windows {{restricts the}} creation of symbolic links to <b>privileged</b> <b>users</b> ...|$|R
50|$|Since most {{organizations}} are already protected at the perimeter level, indeed {{a major concern}} lies {{with the need to}} monitor and protect from <b>privileged</b> <b>users.</b> There is a high correlation therefore between Database Security and the need to protect from the insider threat. This is a complex task as most <b>privileged</b> <b>users</b> are capable of using sophisticated techniques to attack the database - stored procedures, triggers, views and obfuscated traffic - attacks that may be difficult to detect using traditional methods.|$|R
5000|$|Every {{program and}} every <b>{{privilege}}d</b> <b>user</b> {{of the system}} should operate using {{the least amount of}} privilege necessary to complete the job. Jerome Saltzer ...|$|E
50|$|<b>Privileged</b> <b>User</b> Monitoring: Monitoring privileged users (or superusers), such as {{database}} administrators (DBAs), systems administrators (or sysadmins), developers, help desk, and outsourced personnel - {{who typically}} have unfettered access to corporate databases - {{is essential for}} protecting against both external and internal threats. <b>Privileged</b> <b>user</b> monitoring includes auditing all activities and transactions; identifying anomalous activities (such as viewing sensitive data, or creating new accounts with superuser privileges); and reconciling observed activities (such as adding or deleting tables) with authorized change requests.|$|E
50|$|In addition, since {{targeted}} attacks frequently {{result in}} attackers gaining <b>privileged</b> <b>user</b> credentials, monitoring of privileged activities {{is also an}} effective way to identify compromised systems.|$|E
50|$|Users {{who have}} been {{delegated}} extra levels of control are called <b>privileged.</b> <b>Users</b> who lack most privileges are defined as unprivileged, regular, or normal users.|$|R
50|$|Xceedium, Inc., was {{a network}} {{security}} software company providing privileged identity and access management solutions which was subsequently acquired by CA Technologies. Their software {{is used to}} control and manage the risks that <b>privileged</b> <b>users,</b> <b>privileged</b> accounts (admin, root, etc.) and privileged credentials (passwords, certificates, digital keys, etc.) pose to systems and data.|$|R
50|$|Operator {{commands}} {{are available}} to change both the backlog and execution priorities of runs. As all operator commands are available by API to suitably <b>privileged</b> <b>users,</b> this can be automated or controlled by a remote administrator.|$|R
5000|$|According to Gartner, “DAM {{provides}} <b>privileged</b> <b>user</b> {{and application}} access monitoring that {{is independent of}} native database logging and audit functions. It can function as a compensating control for <b>privileged</b> <b>user</b> separation-of-duties issues by monitoring administrator activity. The technology also improves database security by detecting unusual database read and update activity from the application layer. Database event aggregation, correlation and reporting provide a database audit capability without the need to enable native database audit functions (which become resource-intensive {{as the level of}} auditing is increased).” ...|$|E
5000|$|As a result, {{auditors}} are now demanding {{monitoring of}} privileged users for security best practices {{as well as}} a wide range of regulations. <b>Privileged</b> <b>user</b> monitoring helps ensure: ...|$|E
5000|$|The {{installation}} {{is created}} by a <b>privileged</b> <b>user</b> of the host (i.e. username [...] "root"). However, the addition of software patches to the installation is performed by the installation owner (typically the user: ingres).|$|E
30|$|Lack of {{employee}} screening and poor hiring practices [16] – some cloud providers may not perform background screening {{of their employees}} or providers. <b>Privileged</b> <b>users</b> such as cloud administrators usually have unlimited access to the cloud data.|$|R
50|$|During execution, user {{programs}} are swapped to fixed-head drum memory. When not executing, user {{programs are}} stored on moving-head cartridge- or pack-loaded disk storage. <b>Privileged</b> <b>users</b> can also store {{programs on the}} much-faster drum. The hard drive was backed up to magnetic tape.|$|R
50|$|Gallery or Menalto Gallery is an {{open source}} project {{enabling}} management and publication of digital photographs and other media through a PHP-enabled web server. Photo manipulation includes automatic thumbnails, resizing, rotation, and flipping, among other things. Albums can be organized hierarchically and individually controlled by administrators or <b>privileged</b> <b>users.</b>|$|R
50|$|All of {{the fields}} on the @RUN {{statement}} may be overridden by corresponding fields on the @START statement. Except when the @START is executed by a <b>privileged</b> <b>user,</b> the userid and other security state are always taken from the run doing the @START.|$|E
50|$|The PDP-11 {{operated}} at {{a priority}} level from 0 through 7, declared by three bits in the Processor Status Word (PSW), and high-end models could {{operate in a}} choice of modes, Kernel (<b>privileged),</b> <b>User</b> (application), and sometimes Supervisor, according to two bits in the PSW.|$|E
50|$|The pmset {{command is}} able to {{schedule}} system sleep, shutdown, wakeup or power on events. The schedule argument is for setting up one-time power events, and repeat is for setting up daily or weekly events. Scheduling of events can only be done by a <b>privileged</b> <b>user.</b>|$|E
40|$|Abstract. A {{broadcast}} {{encryption system}} allows a center to communi-cate securely over a broadcast channel with selected sets of users. Each time {{the set of}} <b>privileged</b> <b>users</b> changes, the center enacts a protocol {{to establish a new}} broadcast key that only the <b>privileged</b> <b>users</b> can obtain, and subsequent transmissions by the center are encrypted using the new broadcast key. We study the inherent trade-off between the number of establishment keys held by each user and the number of transmissions needed to establish a new broadcast key. For every given upper bound on the number of establishment keys held by each user, we prove a lower bound on the number of transmissions needed to establish a new broad-cast key. We show that these bounds are essentially tight, by describing broadcast encryption systems that come close to these bounds. ...|$|R
50|$|The {{company was}} focused on identity, access, and {{password}} management for <b>privileged</b> <b>users</b> on UNIX systems. From 2003 - 2008 the company expanded in Spain, Portugal, Japan and Latin America. During {{the same time period}} they also grew almost 300 percent and were {{one of the fastest growing}} private companies in the L.A. area.|$|R
40|$|Abstract—Dealing {{with the}} insider threat in {{networked}} environments poses many challenges. <b>Privileged</b> <b>users</b> have great {{power over the}} systems they own in organizations. To mitigate the potential threat posed by insiders, we introduced in previous work a preliminary architecture for the Autonomic Violation Prevention System (AVPS), {{which is designed to}} self-protect applications from disgruntled <b>privileged</b> <b>users</b> via the network. This paper extends the architecture of the AVPS so that it can provide scalable protection in production environments. We conducted a series of experiments to asses the performance of the AVPS system on three different application environments: FTP, database, and Web servers. Our experimental results indicate that the AVPS introduces a very low overhead {{despite the fact that it}} is deployed in-line. We also developed an analytic queuing model to analyze the scalability of the AVPS framework as a function of the workload intensity. Keywords-insider threat; scalability; network security. I...|$|R
50|$|The pmset utility {{recognizes the}} {{following}} arguments. Arguments {{can be passed}} in serial form in any order. Any bad syntax or unrecognized argument will cause the entire command to fail, resulting in an error message and brief help screen. Power management settings can only be changed by a <b>privileged</b> <b>user.</b>|$|E
50|$|For {{the purpose}} of security, input that crosses a trust {{boundary}} is often the most interesting. For example, {{it is more important}} to fuzz code that handles the upload of a file by any user than it is to fuzz the code that parses a configuration file that is accessible only to a <b>privileged</b> <b>user.</b>|$|E
50|$|A <b>privileged</b> <b>user</b> running ngrep in {{a server}} or {{workstation}} {{connected to a}} device configured with port mirroring on a switch, router, or gateway, or connected to any other device used for network traffic capture on a LAN, MAN, or WAN, can watch all unencrypted information related to login ID's, passwords, or URLs and content of websites being viewed in that network.|$|E
50|$|The {{following}} example sets a repeating power event. The machine {{will wake}} or power on every weekday at 8:00 AM. Only <b>privileged</b> <b>users</b> can issue this command. If the command is issued successfully and is without syntax errors, pmset will exit silently with an exit code of 0. To {{verify that the}} system took the new configuration, issue the command pmset -g sched.|$|R
40|$|A {{broadcast}} {{encryption system}} allows a center to communicate securely over a broadcast channel with selected sets of users. Each time {{the set of}} <b>privileged</b> <b>users</b> changes, the center enacts a protocol {{to establish a new}} broadcast key that only the <b>privileged</b> <b>users</b> can obtain, and subsequent transmissions by the center are encrypted using the new broadcast key. We study the inherent trade-off between the number of establishment keys held by each user and the number of transmissions needed to establish a new broadcast key. For every given upper bound on the number of establishment keys held by each user, we prove a lower bound on the number of transmissions needed to establish a new broadcast key. We show that these bounds are essentially tight, by describing broadcast encryption systems that come close to these bounds. 1 Introduction Broadcast encryption addresses the problem of the allocation of secret keys to users in order to enable a center to broadcast to selected sub [...] ...|$|R
50|$|A virtual private {{database}} or VPD masks data in {{a larger}} database so that only {{a subset of the}} data appear to exist, without actually segregating data into different tables, schemas, databases. A typical application is constraining sites, departments, individuals, etc. to operate only on their own records {{and at the same time}} allowing more <b>privileged</b> <b>users</b> and operations (e.g. reports, data warehousing, etc.) to access on the whole table.|$|R
5000|$|It is also {{possible}} to write to [...] This allows any user to mix random data into the pool. Non-random data is harmless, because only a <b>privileged</b> <b>user</b> can issue the ioctl needed to increase the entropy estimate. The current amount of entropy {{and the size of}} the Linux kernel entropy pool are available in , which can be displayed by the command [...]|$|E
50|$|Internally, Western-style forums {{organize}} {{visitors and}} logged in members into user groups. Privileges and rights are given {{based on these}} groups. A user of the forum can automatically be promoted to a more <b>privileged</b> <b>user</b> group based on criteria set by the administrator. A person viewing a closed thread as a member will see a box saying {{he does not have}} the right to submit messages there, but a moderator will likely see the same box granting him access to more than just posting messages.|$|E
5000|$|As {{defined by}} Gartner, “DAM tools use several data {{collection}} mechanisms (such as server-based agent software and in-line or out-of-band network collectors), aggregate {{the data in}} a central location for analysis, and report based on behaviors that violate the security policies and/or signatures or indicate behavioral anomalies. DAM demand is driven primarily by the need for <b>privileged</b> <b>user</b> monitoring to address compliance-related audit findings, and by threat-management requirements to monitor database access. Enterprise DAM requirements are beginning to broaden, extending beyond basic functions, such as the capability to detect malicious activity or inappropriate or unapproved database administrator (DBA) access.” ...|$|E
50|$|Modern Linux systems use udev as an automounter {{to handle}} the hot {{swapping}} of devices (such as MP3 players or digital cameras) instead of relying on fstab. Programs such as pmount allow ordinary users to mount and unmount filesystems without a corresponding fstab entry; traditional Unix has always allowed <b>privileged</b> <b>users</b> (the root user and users in the wheel group) to mount or unmount devices without an fstab entry.|$|R
5000|$|All {{incoming}} submissions were {{checked for}} formal and factual correctness by <b>privileged</b> <b>users</b> called [...] "moderators", or [...] "mods" [...] for short, {{who had been}} selected by site management. Submissions and edits wouldn't become visible or searchable until they received a single positive vote from a [...] "mod". An even smaller pool of super-moderators called [...] "editors" [...] {{had the power to}} vote on proposed edits to artist & label data.|$|R
5000|$|Exploiting insider {{access and}} abusing {{the rights of}} <b>privileged</b> IT <b>users</b> to access {{personal}} data on their employers' systems ...|$|R
