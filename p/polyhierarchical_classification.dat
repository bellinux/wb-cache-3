1|1|Public
40|$|The {{knowledge}} of the individual employee within a company is {{getting more and more}} important. It is therefore necessary to collect this knowledge more efficiently and to distribute this knowledge {{in such a way that}} more employees can take advantage of this information. This document describes a possibility how this knowledge could be used by everyone in a company through collecting the information, documents and relevant data and to safe them in a "Collaborative information space" in useful hyperlink structures. The most important part of the construction of a "Collaborative information space" in the sense of a shared context is the shared application, for production, collection and the definitions by uniformed categories and subjects. It is essential that this index contains a shared, <b>polyhierarchical</b> <b>classification</b> system which makes it easier to make use of this knowledge...|$|E
40|$|A new {{approach}} {{to the construction of}} general persistent <b>polyhierarchical</b> <b>classifications</b> is proposed. It is based on implicit description of category polyhierarchy by a generating polyhierarchy of classification criteria. Similarly to existing approaches, the classification categories are defined by logical functions encoded by attributive expressions. However, the generating hierarchy explicitly predefines domains of criteria applicability, and the semantics of relations between categories is invariant to changes in the universe composition, extending variety of criteria, and increasing their cardinalities. The generating polyhierarchy is an independent, compact, portable, and re-usable information structure serving as a template classification. It can be associated with one or more particular sets of objects, included in more general classifications as a standard component, or used as a prototype for more comprehensive classifications. The approach dramatically simplifies development and unplanned modifications of persistent hierarchical classifications compared with tree, DAG, and faceted schemes. It can be efficiently implemented in common DBMS, while considerably reducing amount of computer resources required for storage, maintenance, and use of complex polyhierarchies. Comment: 11 pages; 1 figure; to be presented at the "Artificial Intelligence and Applications 2004 " conferenc...|$|R

