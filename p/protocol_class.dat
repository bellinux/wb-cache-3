34|248|Public
5000|$|... #Subtitle level 2: Transport <b>Protocol</b> <b>Class</b> 4 (TP4) in {{conjunction}} with CLNS ...|$|E
50|$|The SCCP Class 0 <b>{{protocol}}</b> <b>class</b> is {{the most}} basic of the SCCP protocol classes. Network Service Data Units passed by higher layers to the SCCP in the originating node are delivered by the SCCP to higher layers in the destination node. They are transferred independently of each other. Therefore, they may be delivered to the SCCP user out-of-sequence. Thus, this <b>protocol</b> <b>class</b> corresponds to a pure connectionless network service. As a connectionless protocol, no network connection is established between the sender and the receiver.|$|E
50|$|SCCP Class 1 {{builds on}} the {{capabilities}} of Class 0, {{with the addition of}} a sequence control parameter in the NSDU which allows the SCCP User to instruct the SCCP that a given stream of messages should be delivered in sequence. Therefore, <b>Protocol</b> <b>Class</b> 1 corresponds to an enhanced connectionless protocol with assurances of in-sequence delivery.|$|E
5000|$|The connection-oriented <b>protocol</b> <b>classes</b> (<b>protocol</b> <b>classes</b> 2 and 3) {{provide the}} means to set up {{signalling}} connections in order to exchange a number of related NSDUs. The connection-oriented <b>protocol</b> <b>classes</b> also provide a segmenting and reassembling capability. If an NSDU is longer than 255 octets, it is split into multiple segments at the originating node, prior to transfer in the [...] "data" [...] field of DT messages. Each segment is {{less than or equal}} to 255 octets. At the destination node, the NSDU is reassembled.|$|R
50|$|Use <b>protocol</b> <b>classes</b> {{to define}} public interfaces.|$|R
5000|$|The {{connectionless}} <b>protocol</b> <b>classes</b> {{provide the}} capabilities needed to transfer one Network Service Data Unit (NSDU) in the [...] "data" [...] field of an XUDT, LUDT or UDT message. When one connectionless message {{is not sufficient}} to convey the user data contained in one NSDU, a segmenting/reassembly function for <b>protocol</b> <b>classes</b> 0 and 1 is provided. In this case, the SCCP at the originating node or in a relay node provides segmentation of the information into multiple segments prior to transfer in the [...] "data" [...] field of XUDT (or as a network option LUDT) messages. At the destination node, the NSDU is reassembled.|$|R
5000|$|... 1,2-Dichlorotetrafluoroethane, or R-114, {{also known}} as {{cryofluorane}} (INN), is a chlorofluorocarbon (CFC) with the molecular formula ClF2CCF2Cl. Its primary use has been as a refrigerant. It is a non-flammable gas with a sweetish, chloroform-like odor with the critical point occurring at 145.6 °C and 3.26 MPa. When pressurized or cooled, it is a colorless liquid. It is listed on the Intergovernmental Panel on Climate Change's list of ozone depleting chemicals, and is classified as a Montreal <b>Protocol</b> <b>Class</b> I, group 1 ozone depleting substance.|$|E
50|$|CLNS {{is used by}} ISO Transport <b>Protocol</b> <b>Class</b> 4 (TP4), one of {{the five}} {{transport}} layer protocols in the OSI suite. TP4 offers error recovery, performs segmentation and reassembly, and supplies multiplexing and demultiplexing of data streams over a single virtual circuit. TP4 sequences PDUs and retransmits them or re-initiates the connection if an excessive number are unacknowledged. TP4 provides reliable transport service and functions with either connection-oriented or connectionless network service. TP4 is the most commonly used of all the OSI transport protocols and is similar to the Transmission Control Protocol (TCP) in the TCP/IP protocol suite.|$|E
40|$|Larger size {{networks}} require DSM coherence protocols which scale well. Fault-tolerance {{in terms}} of high availability is required for data access and for uninterrupted DSM service since large-scale environments have {{a greater number of}} potentially malfunctioning components. We present a new class of dynamic coherence protocols for DSM systems in error-prome network environments whose instances offer highly available access to DSM data at low operation costs. The approach is based on the highly scalable Boundary-Restricted (BR) coherence <b>protocol</b> <b>class.</b> The new <b>protocol</b> <b>class</b> is called the Dynamic Boundary-Restricted (DBR) coherence <b>protocol</b> <b>class.</b> The description of the new <b>protocol</b> <b>class</b> is accompanied by an analysis covering a large variety of workloads. This analysis presents the overall costs savings achieved by using a DBR coherence protocol instead of a static BR protocol. Keywords: Distributed Systems, Fault-Tolerance, Availability, Distributed Shared Memory, Dynamic Coherence P [...] ...|$|E
40|$|In this paper, {{we present}} Bast, an {{extensible}} library of <b>protocol</b> <b>classes.</b> The latter {{is aimed at}} helping system programmers to build distributed programming environments. <b>Protocol</b> <b>classes</b> constitute the basic structuring components for higher-level programming models, such as the transactional model, and add flexibility to distributed environments. We focus on classes that implement a generic agreement protocol named DTM (Dynamic-Terminating-Multicast). To the programmer, the DTM generic protocol appears {{as a set of}} classes that can be specialized to solve agreement problems in distributed systems. In particular, we show how those classes can be derived to build atomic commitment and reliable total order protocols. An overview of the Smalltalk design and implementation of the Bast library is also presented. 1 Introduction This paper describes Bast, an extensible class library of distributed protocols. Bast is aimed at assisting system programmers in building distributed programm [...] ...|$|R
5000|$|ISO/IEC 8073/ITU-T Recommendation X.224, [...] "Information Technology - Open Systems Interconnection - Protocol for {{providing}} the connection-mode transport service", defines five classes of connection-mode transport <b>protocols</b> designated <b>class</b> 0 (TP0) to class 4 (TP4). Class 0 contains no error recovery, and {{was designed for}} use on network layers that provide error-free connections. Class 4 is closest to TCP, although TCP contains functions, such as the graceful close, which OSI assigns to the session layer. All OSI connection-mode <b>protocol</b> <b>classes</b> provide expedited data and preservation of record boundaries. Detailed characteristics of the classes are shown in the following table: ...|$|R
5000|$|OSI defines five {{classes of}} connection-mode {{transport}} <b>protocols</b> ranging from <b>class</b> 0 (which {{is also known}} as TP0 and provides the fewest features) to class 4 (TP4, designed for less reliable networks, similar to the Internet). Class 0 contains no error recovery, and was designed for use on network layers that provide error-free connections. Class 4 is closest to TCP, although TCP contains functions, such as the graceful close, which OSI assigns to the session layer. Also, all OSI TP connection-mode <b>protocol</b> <b>classes</b> provide expedited data and preservation of record boundaries. Detailed characteristics of TP0-4 classes are shown in the following table: ...|$|R
40|$|ANALISIS DAN PENGUJIAN PENGGUNAAN TP 4 DAN IPV 6 DALAM KOMUNIKASI GROUND-TO-GROUND AERONAUTICAL TELECOMMUNICATION NETWORK PADA JALUR TRANSPORTASI UDARA MENGGUNAKAN SIMULATOR OPNET MODELER 8. 1 - Analisis, Simulasi, Aeronautical Telecommunication Network, Transport <b>Protocol</b> <b>class</b> 4, Internet Protocol version 6, OPNET Modeler 8. 1...|$|E
40|$|Many {{influential}} industrial {{players are}} currently pursuing {{the development of}} new protocols for federated identity management. The Security Assertion Markup Language (SAML) is an important standardized example of this new <b>protocol</b> <b>class</b> and will be widely used in business-to-business scenarios to reduce user-management costs. SAML utilizes a constraintbased specification that is a popular design technique of this <b>protocol</b> <b>class.</b> It does not include a general security analysis, but provides an attack-by-attack list of countermeasures as security consideration. We present a security analysis of the SAML Single Sign-on Browser/Artifact profile, which is the first one for such a protocol standard. Our analysis of the protocol design reveals several flaws in the specification that can lead to vulnerable implementations. To demonstrate their impact, we exploit some of these flaws to mount attacks on the protocol. 1...|$|E
40|$|We {{present a}} new class of dynamic {{coherence}} protocols, called Dynamic Boundary-Restricted (DBR) coherence <b>protocol</b> <b>class,</b> for DSM systems in error-prone networks whose instances offer highly available access to DSM data at low operation costs. The approach is based on the Boundary-Restricted (BR) coherence <b>protocol</b> <b>class.</b> Our analysis provides the overall cost savings by using a DBR coherence protocol instead of a static BR protocol. In addition, we analyze data availability increases using a DBR protocol over coherence protocols not originally designed for error-prone, large networks. 1 Introduction DSM systems have been extensively investigated during the past several years. Although a large number of approaches have been developed (see survey [3]) only a few of these solutions have taken aspects of faulttolerance into consideration [5, 2]. Fault-tolerance, in terms of high availability, is required for uninterrupted DSM service in a large-scale environment with a greater number of [...] ...|$|E
50|$|Novice SweepsParticipants {{should have}} {{successfully}} completed Intro to Rowing, or have comparable rowing experience {{and knowledge of}} safety <b>protocol.</b> <b>Classes</b> begin in the barge, reinforcing basic skills and knowledge of rowing, and then move into 8’s. Rowers take turns in the coxswain seat to help their classmates navigate the river safely and to improve {{their knowledge of the}} sport. A coach will be close beside you when it’s your turn to cox.|$|R
30|$|This study cephalometrically {{compared}} the dentoskeletal and soft tissue changes consequent {{to one and}} three-premolar extraction <b>protocols</b> of <b>class</b> II subdivision malocclusion treatment.|$|R
40|$|This paper investigates a {{discrete}} events simulation of {{wireless sensor networks}} routing protocols. We propose {{a discrete}} events simulator called SENSIM (SENsor networks SIMulator). In this simulator, Flooding and Gossiping of linear routing <b>class</b> <b>protocol,</b> PEGASSIS of hierarchical routing <b>class</b> <b>protocol,</b> and MFR of localization based routing <b>class</b> <b>protocol</b> are implemented. The implementation of these protocols {{is based on a}} system of a car parking application. Simulation results show that PEGASSIS is the best routing protocol which offered the best network lifetime. Keywords: cooperation, orthogonal protocol, non-orthogonal protocol, space-time codingFor further information, please visit this web site...|$|R
40|$|When {{analysing}} {{the behavior}} of complex networked systems, it {{is often the case}} that some components within that network are only known {{to the extent that they}} belong to one of a set of possible ”implementations ” – e. g., versions of a specific <b>protocol,</b> <b>class</b> of schedulers, etc. In this report we augment the specification language considered in BUCS...|$|E
40|$|We {{present a}} new {{coherence}} <b>protocol</b> <b>class</b> for DSM systems whose instances offer highly available access to shared data at low operation costs. The protocols proposed scale well; {{an increase in}} the number of client sites does not increase the operation costs after a certain threshold has been reached. The results presented give strong guidelines for the overall design of DSM systems which offer highly available, uninterrupted services...|$|E
40|$|We {{propose a}} method {{applicable}} {{to the design of}} large and abstract LOTOS specifications. More precisely, this method explains how to generate a constrain-oriented specification which is an adequate abstract and modular starting point of a complex design process leading to implementation. It is illustrated on a substantial part of the ISO Transport <b>Protocol</b> <b>class</b> 4 which is considered as a complex and stable case study. Having proved the feasibility of the method on this protocol, it was then used to specify (parts of) the new transport protocol TPX of OSI 95...|$|E
5000|$|American Bar Association, Litigation Section Working Group on <b>Protocols</b> for Parallel <b>Class</b> Actions; ...|$|R
40|$|We {{present the}} first static {{analysis}} technique for verifying implementations of cryptographic protocols based on zero-knowledge proofs. Protocols are implemented in RCF, a core cal-culus of ML, and cryptographic primitives are considered fully reliable building blocks and represented symbolically using a sealing mechanism. The {{statements of the}} zero-knowledge proofs are specified in a high-level language and automatically compiled down to a symbolic implementation using seals. An expressive type system combining refinement, union, and intersection types allows us to statically characterize the security properties offered by zero-knowledge proofs and, in general, to extend the scope of type-based analyses of protocol implementations to important <b>protocol</b> <b>classes</b> not covered so far. ...|$|R
50|$|Simple {{traffic shaping}} schemes shape all traffic uniformly by rate. More {{sophisticated}} shapers first classify traffic. Traffic classification categorises traffic (for example, based on port number or <b>protocol).</b> Different <b>classes</b> {{can then be}} shaped separately to achieve a desired effect.|$|R
40|$|When {{analysing}} {{the behavior}} of complex networked systems, it {{is often the case}} that some components within that network are only known {{to the extent that they}} belong to one of a set of possible "implementations" – e. g., versions of a specific <b>protocol,</b> <b>class</b> of schedulers, etc. In this report we augment the specification language considered in BUCSTR- 2004 - 021, BUCS-TR- 2005 - 014, BUCS-TR- 2005 - 015, and BUCS-TR- 2005 - 033, to include a non-deterministic multiple-choice let-binding, which allows us to consider compositions of networking subsystems that allow for looser component specifications. National Science Foundation (CCR- 0205294...|$|E
40|$|We present several locking {{synchronization}} protocols {{and associated}} schedulability conditions for Pfair-scheduled multiprocessor systems. We focus on {{two classes of}} protocols. The first class is only applicable in systems in which all critical sections are short relative {{to the length of}} the scheduling quantum. In this case, efficient synchronization can be achieved by ensuring that all locks have been released before tasks are preempted. The second and more general <b>protocol</b> <b>class</b> is applicable to any system. For this class, we propose the use of statically-weighted resource servers. We also discuss several inheritance-based protocols as possible alternatives...|$|E
40|$|We present several locking {{synchronization}} protocols for Pfair-scheduled multiprocessor systems. We {{focus on}} {{two classes of}} protocols. The first class is only applicable in systems in which all critical sections are short relative {{to the length of}} the scheduling quantum. In this case, efficient synchronization can be achieved by ensuring that all locks have been released before tasks are preempted. This is accomplished by exploiting the quantum-based nature of Pfair scheduling, which provides a priori knowledge of all possible preemption points. The second and more general <b>protocol</b> <b>class</b> is applicable to any system. For this class, we consider the use of a client-server model. We also discuss the viability of inheritance-based protocols in Pfair-scheduled systems...|$|E
40|$|An {{autonomic}} group protocol supports applications {{with enough}} {{quality of service}} (QoS) in change of QoS supported by networks and applications. An autonomic group service is supported for applications by cooperation of multiple au-tonomous agents. Each agent autonomously takes a <b>class</b> of each <b>protocol</b> function like retransmission. Classes taken by an agent are required {{to be consistent with}} but might be dif-ferent from the others. A group is composed of views each of which is a subset of agents and in each of which agents au-tonomously take <b>protocol</b> <b>classes</b> consistent with each other. We discuss a model of autonomic group protocol. We also present how to autonomously change retransmission ways in a group as an example. ...|$|R
40|$|Status of this Memo This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2001). All Rights Reserved. This document describes a framework for the standardization of bulkdata reliable multicast transport. It builds upon the experience gained during the deployment of several classes of contemporary reliable multicast transport, and attempts {{to pull out the}} commonalities between these <b>classes</b> of <b>protocols</b> into a number of building blocks. To that end, this document recommends that certain components that are common to multiple <b>protocol</b> <b>classes</b> be standardized as "building blocks". The remaining parts of th...|$|R
50|$|Clients {{that rely}} on the <b>protocols</b> of parent <b>classes</b> {{communicate}} with objects of the respective child class.|$|R
40|$|This paper {{describes}} {{the design of}} an eUART (enhanced Universal Asynchronous Receiver and Transmitter) that has been designed as an extension module for the SPEAR processor in order to interact with a TTP/A (Time-Triggered <b>Protocol</b> <b>Class</b> A) or LIN (Local Interconnect Network) network. The eUART is able to automatically synchronize its baud rate using a synchronization pattern from the message sender. Furthermore, to enhance the robustness of the communication, the eUART module {{is equipped with a}} filter state-machine and provides 16 fold oversampling. The interpretation of the samples can be configured in order to optimize towards fault detection or availability. The paper {{describes the}} capabilities and limits of this approach and shows the advantages of the eUART when used for real-time communication. 1...|$|E
40|$|We study {{a type of}} web single signon {{recently}} introduced by one of four proposed standard protocols of the Liberty Alliance. In contrast to the other three Liberty protocols and prior protocols like Microsoft Passport and the SAML standard, the client {{is not only a}} browser, but aware of the protocol, for instance a web-service client. We investigate how this protocol differs from standard three-party authentication, and possible benefits. We call the new <b>protocol</b> <b>class</b> token-based web single signon with enabled clients. We show a man-in-the-middle attack on the original Liberty V 1. 0 protocol and countermeasures against it. (Such a countermeasure was now added as an erratum, and no deployed implementation will use V 1. 0.) We also give general guidance for designing secure protocols in this class...|$|E
40|$|Recent {{advances}} in optical communications, VLSI, and fiber-optic technologies have created new horizons for high-speed protocols and applications seeking end-to-end data transport at Gb/s speeds. In this Ph. D dissertation, an itemized goodness definition consisting of six criteria is presented {{for evaluation of}} high speed transport protocols used in lightweight networking applications. Based on this goodness definition, a goodness measure is also defined in this dissertation to quantify the relative goodness of existing and future transport protocols. The goodness definition has been developed and enhanced {{as a result of}} analysis and characterization of nine transport protocols: 1) Delta-t, 2) Datakit Universal Receiver Protocol (Datakit URP), 3) Transmission Control Protocol (TCP), 4) Versatile Message Transaction Protocol (VMTP), 5) Open Systems Interconnection Transport <b>Protocol</b> <b>Class</b> 4 (OSI/TP 4), 6) Network Block Transfer Protocol (NETBLT), 7) Express Transfer Protocol (XTP), 8) Sa [...] ...|$|E
5000|$|Although {{there are}} many types of routing <b>protocols,</b> three major <b>classes</b> are in {{widespread}} use on IP networks: ...|$|R
40|$|We {{present a}} new type system for verifying the {{security}} of cryptographic protocol implementations. The type system combines prior work on refinement types, with union, intersection, and polymorphic types, and with the novel ability to reason statically about the disjointness of types. The increased expressivity enables the analysis of important <b>protocol</b> <b>classes</b> that were previously out of scope for the type-based analyses of protocol implementations. In particular, our types can statically characterize: (i) more usages of asymmetric cryptography, such as signatures of private data and encryptions of authenticated data; (ii) authenticity and integrity properties achieved by showing knowledge of secret data; (iii) applications based on zeroknowledge proofs. The type system comes with a mechanized proof of correctness and an efficient type-checker...|$|R
40|$|We {{present the}} first static {{analysis}} technique for verifying implementations of cryptographic protocols based on zero-knowledge proofs. Protocols are implemented in RCF ∀ ∧∨, a core calculus of ML with support for concurrency. Cryptographic primitives are considered as fully reliable building blocks and represented symbolically using a sealing mechanism. Zero-knowledge proofs, in particular, are specified in a high-level language and automatically compiled {{down to a}} symbolic implementation using seals. Security properties are formalized as authorization policies and statically enforced by a type system featuring refinement, union, intersection, and polymorphic types. The expressiveness of our type system allows us to analyze not only protocols based on zero-knowledge proofs but also other important <b>protocol</b> <b>classes</b> that {{were out of the}} scope of existing static analysis techniques...|$|R
