1861|10000|Public
25|$|In {{the case}} of Mars there have been {{terrestrial}} observations of radio emission spectra that {{have been associated with}} Schumann resonances. The reported radio emissions are not of the primary electromagnetic Schumann modes, but rather of secondary modulations of the nonthermal microwave emissions from the planet at approximately the expected Schumann frequencies, and have not been independently confirmed to be associated with lightning activity on Mars. There is the possibility that future lander missions could carry in situ instrumentation to perform the necessary measurements. Theoretical studies are primarily directed to <b>parameterizing</b> the problem for future planetary explorers.|$|E
2500|$|In {{curve fitting}} problems, the {{constraint}} that the interpolant {{has to go}} exactly through the data points is relaxed. It is only required to approach the data points {{as closely as possible}} (within some other constraints). [...] This requires <b>parameterizing</b> the potential interpolants and having some way of measuring the error. [...] In the simplest case this leads to least squares approximation.|$|E
50|$|The {{associated}} {{quantum number}} {{is the main}} total angular momentum quantum number j. It can take the following range of values, jumping only in integer steps:where ℓ is the azimuthal quantum number (<b>parameterizing</b> the orbital angular momentum) and s is the spin quantum number (<b>parameterizing</b> the spin).|$|E
40|$|A general {{framework}} for <b>parameterized</b> proof complexity {{was introduced by}} Dantchev et al. [2007]. There, the authors show important results on tree-like <b>Parameterized</b> Resolution [...] -a <b>parameterized</b> version of classical Resolution [...] -and their gap complexity theorem implies lower bounds for that system. The main result of this article significantly improves upon this by showing optimal lower bounds for a <b>parameterized</b> version of bounded-depth Frege. More precisely, we prove that the pigeonhole principle requires proofs of size nΩ(k) in <b>parameterized</b> bounded-depth Frege, and, as a special case, in dag-like <b>Parameterized</b> Resolution. This answers an open question posed in Dantchev et al. [2007]. In the opposite direction, we interpret a well-known technique for FPT algorithms as a DPLL procedure for <b>Parameterized</b> Resolution. Its generalization leads to a proof search algorithm for <b>Parameterized</b> Resolution that in particular shows that tree-like <b>Parameterized</b> Resolution allows short refutations of all <b>parameterized</b> contradictions given as bounded-width CNFs...|$|R
40|$|Based on a {{geometrical}} method, {{the internal}} relationships between locally <b>parameterized</b> curves {{and the local}} <b>parameterized</b> surfaces are analy z ed. A necessary and sufficient condition is derived for the local convexity of <b>parameterized</b> surfaces and functional surfaces. A criterion for local convexity (concavity) of <b>parameterized</b> surfaces is found, also, the criterion condition of binary function convex surfaces is obtained. Finally, the relationships between a globally <b>parameterized</b> curves surfaces is discussed, a necessary condition is presented for the global convexity of <b>parameterized</b> surfaces, and it is proved that locally convex <b>parameterized</b> surfaces are also globally convex. </p...|$|R
40|$|As an aid in {{software}} maintenance, {{it would be}} useful to be able to track down duplication in large software systems efficiently. Duplication in code is often in the form of sections of code that are the same except for a systematic change of parameters such as identifiers and constants. To model such <b>parameterized</b> duplication in code, this paper introduces the notions of <b>parameterized</b> strings and <b>parameterized</b> matches of <b>parameterized</b> strings. A data structure called a <b>parameterized</b> suffix tree is defined to aid in searching for <b>parameterized</b> matches. For fixed alphabets, algorithms are given to construct a <b>parameterized</b> suffix tree in linear time and to find all maximal <b>parameterized</b> matches over a threshold length in a <b>parameterized</b> p-string in time linear in the size of the input plus the number of matches reported. The algorithms have been implemente...|$|R
5000|$|Antechamber automates {{the process}} of <b>parameterizing</b> small organic {{molecules}} using GAFF.|$|E
5000|$|... #Caption: <b>Parameterizing</b> a ray in 3D {{space by}} {{position}} (x, y, z) and direction (θ, ϕ).|$|E
5000|$|The EM {{algorithm}} {{takes as}} complete data the vector-field coordinates <b>parameterizing</b> the mapping, [...] and compute iteratively the conditional-expectation ...|$|E
40|$|<b>Parameterized</b> Resolution and, moreover, {{a general}} {{framework}} for <b>parameterized</b> proof complexity {{was introduced by}} Dantchev, Martin, and Szeider (FOCS 2 ̆ 707). In that paper, Dantchev et al. show a complexity gap in tree-like <b>Parameterized</b> Resolution for propositional formulas arising from translations of first-order principles. We broadly investigate <b>Parameterized</b> Resolution obtaining the following main results: 1) We introduce a purely combinatorial approach to obtain lower bounds to the proof size in tree-like <b>Parameterized</b> Resolution. For this we devise a new asymmetric Prover-Delayer game which characterizes proofs in (<b>parameterized)</b> tree-like Resolution. By exhibiting good Delayer strategies we then show lower bounds for the pigeonhole principle {{as well as the}} order principle. 2) Interpreting a well-known FPT algorithm for vertex cover as a DPLL procedure for <b>Parameterized</b> Resolution, we devise a proof search algorithm for <b>Parameterized</b> Resolution and show that tree-like <b>Parameterized</b> Resolution allows short refutations of all <b>parameterized</b> contradictions given as bounded-width CNF 2 ̆ 7 s. 3) We answer a question posed by Dantchev, Martin, and Szeider showing that dag-like <b>Parameterized</b> Resolution is not fpt-bounded. We obtain this result by proving that the pigeonhole principle requires proofs of size n^Omega(k) in dag-like <b>Parameterized</b> Resolution. For this lower bound we use a different Prover-Delayer game which was developed for Resolution by Pudlák...|$|R
50|$|Frances Ann Novak Rosamond is an Australian {{computer}} scientist whose {{research interests include}} computer education and <b>parameterized</b> complexity. She {{is the editor of}} the <b>Parameterized</b> Complexity Newsletter, moderator of the <b>parameterized</b> complexity wiki, and publicity chair of the International Symposium on <b>Parameterized</b> and Exact Computation (IPEC).|$|R
40|$|<b>Parameterized</b> {{complexity}} theory measures {{the complexity of}} compu-tational problems predominantly {{in terms of their}} <b>parameterized</b> time complexity. The purpose of the present paper is to demonstrate that the study of <b>parameterized</b> space complexity can give new insights into the complexity of well-studied <b>parameterized</b> problems like the feedback vertex set problem. We show that the undirected and the directed feedback vertex set problems have different <b>parameterized</b> space complexities, unless L = NL. For a number of further natural <b>parameterized</b> problems, including the longest common subsequence problem, the acceptance problem for multi-head automata, and the associative generability problem we show that they lie in or are com-plete for different <b>parameterized</b> space classes. Our results explain why previous attempts at proving completeness of different problems for <b>parameterized</b> time classes have failed...|$|R
5000|$|A {{direct way}} to <b>parameterizing</b> the unit {{hyperbola}} {{starts with the}} hyperbola xy = 1 parameterized with the exponential function: ...|$|E
5000|$|By <b>{{parameter}}izing</b> a curve with a parameter λ, so that q(λ), the {{arc length}} of the curve between the points q(λ1) and q(λ2) is the integral: ...|$|E
5000|$|... {{which means}} that if we go from state A to state B then {{we will go to}} state A1. After <b>parameterizing</b> such a rule with a {{lookahead}} we have: ...|$|E
3000|$|... [*]=[*]{⊥}, and {{the input}} (x, ⊥) is denoted as x. A {{sequence}} of <b>parameterized</b> inputs {{is called a}} (<b>parameterized)</b> input sequence. An (<b>parameterized)</b> output sequence can be defined in a similar way.|$|R
5000|$|The {{operation}} maps a <b>parameterized</b> element {{onto another}} <b>parameterized</b> element, or symbolically, ...|$|R
40|$|We {{examine the}} proof-theoretic {{strength}} of <b>parameterized</b> tree-like resolution—a proof sys-tem for the coW[2]-complete set of <b>parameterized</b> tautologies. <b>Parameterized</b> resolution and, moreover, a general framework for <b>parameterized</b> proof complexity {{was introduced by}} Dantchev, Martin, and Szeider (FOCS’ 07). In that paper, Dantchev et al. show a complexity gap in param-eterized tree-like resolution for propositional formulas arising from translations of first-order principles. Here we pursue a purely combinatorial approach to obtain lower bounds to the proof size in <b>parameterized</b> tree-like resolution. For this we devise a prover-delayer game suitable for <b>parameterized</b> resolution. By exhibiting good delayer strategies we then show lower bounds for the pigeonhole principle {{as well as the}} order principle. On the other hand, we demonstrate that <b>parameterized</b> tree-like resolution is a very powerful system, as it allows short refutations of all <b>parameterized</b> contradictions given as bounded-width CNF’s. Thus, a number of principles such as Tseitin tautologies, pebbling contradictions, or random 3 -CNF’s which serve as hard examples for classical resolution become easy in the <b>parameterized</b> setting. ...|$|R
50|$|Typically, microphysics schemes {{will use}} a mass-weighted average for the fall velocity. McFarquhar and Black (2004) showed that {{different}} <b>parameterizing</b> methods results in dramatically different terminal velocities of the hydrometeors.|$|E
50|$|The (h,k)-paging {{problem is}} a way to measure how an online {{algorithm}} performs by comparing it with the performance of the optimal algorithm, specifically, separately <b>parameterizing</b> the cache size of the online algorithm and optimal algorithm.|$|E
50|$|Risk {{management}} tools allow planners to explicitly address uncertainty {{by identifying}} and generating metrics, <b>parameterizing,</b> prioritizing, and developing responses, and tracking risk. These activities {{may be difficult}} to track without tools and techniques, documentation and information systems.|$|E
3000|$|... {{denote the}} Marcinkiewicz integral, the <b>parameterized</b> area integral, and the <b>parameterized</b> Littlewood-Paley [...]...|$|R
40|$|The {{field of}} kernelization studies polynomial-time {{preprocessing}} routines for hard {{problems in the}} framework of <b>parameterized</b> complexity. In this article, we show that, unless the polynomial hierarchy collapses to its third level, the following <b>parameterized</b> problems do not admit a polynomial-time preprocessing algorithm that reduces the size of an instance to polynomial in the parameter: [...] -Edge Clique Cover, <b>parameterized</b> by the number of cliques, [...] -Directed Edge/Vertex Multiway Cut, <b>parameterized</b> {{by the size of the}} cutset, even in the case of two terminals, [...] -Edge/Vertex Multicut, <b>parameterized</b> by the size of the cutset, and [...] -k-Way Cut, <b>parameterized</b> by the size of the cutset...|$|R
40|$|International audienceAlgorithms {{specified}} for parametrically sized {{problems are}} more general purpose and more reusable than algorithms for fixed sized problems. For this reason, {{there is a need}} for representing and symbolically analyzing linearly <b>parameterized</b> algorithms. An important class of parallel algorithms can be described as systems of <b>parameterized</b> affine recurrence equations (PARE). In this representation, linearly <b>parameterized</b> polyhedra are used to describe the domains of variables. This paper describes an algorithm which computes the set of <b>parameterized</b> vertices of a polyhedron, given its representation as a system of <b>parameterized</b> inequalities. This provides an important tool for the symbolic analysis of the <b>parameterized</b> domains used to define variables and computation domains in PAREs. A library of operations on <b>parameterized</b> polyhedra based on the Polyhedral Library has been written in C and is freely distributed...|$|R
5000|$|... where pα is {{the linear}} 4-momentum of the particle, t is any time {{coordinate}} <b>parameterizing</b> the world {{line of the}} particle, Γβαγ is the Christoffel symbol (gravitational force field), and q is the electric charge of the particle.|$|E
5000|$|The {{compiler}} {{examines the}} arguments {{used to call}} max and determines {{that this is a}} call to max(int, int). It then instantiates a version of the function where the <b>parameterizing</b> type T is int, making the equivalent of the following function: ...|$|E
5000|$|BioMA (Biophysical Model Applications) is {{a public}} domain {{software}} framework designed and implemented for developing, <b>parameterizing</b> and running modelling solutions based on biophysical models in the domains of agriculture and environment. It is based on discrete conceptual units codified in freely extensible software components [...]|$|E
2500|$|Several {{authors have}} studied the <b>parameterized</b> {{complexity}} of graph algorithms on r-near-trees, <b>parameterized</b> by [...]|$|R
40|$|AbstractIn this paper, we mainly discuss several closure {{constructions of}} <b>parameterized</b> limit bisimulation and {{establish}} a family of <b>parameterized</b> bisimulation limit topologies. These topological structures are useful for us to understand and analyze the infinite evolution of <b>parameterized</b> bisimulation...|$|R
40|$|We {{study the}} theory and {{techniques}} developed in the research of <b>parameterized</b> intractability, emphasizing on <b>parameterized</b> hardness and completeness that imply (stronger) computational lower bounds for natural computational problems. Moreover, the fundamentals of the structural properties in <b>parameterized</b> complexity theory, relationships to classical complexity theory and more recent developments {{in the area are}} also introduced. Keywords: <b>Parameterized</b> computation, fixed parameter tractability, W-hierarchy, exact algorithm, lower boun...|$|R
50|$|The second {{method of}} <b>parameterizing</b> {{turbulent}} fluxes is nonlocal closure. Turbulence does not just depend on local values and gradients {{due to the}} superposition of many individual eddies. Unlike local closure, nonlocal closure links unknown turbulent quantities to known quantities at many points in space.|$|E
5000|$|... eCATT (extended Computer Aided Test Tool) is a {{tool for}} {{software}} test automation developed by SAP. eCATT offers a graphical user interface with ABAP script editor and its own command syntax. The capability for recording and for <b>parameterizing</b> the test components is also present.|$|E
50|$|A basic {{example is}} {{provided}} by quantum mechanics which is a quantum field theory in one dimension. It's a sigma model with a base manifold given by the real line <b>parameterizing</b> the time (or an interval, or the circle, etc.) and a target space {{that is the real}} line.|$|E
40|$|In this paper, an {{approach}} to the partitioning of <b>parameterized</b> 45 -degree polygons into <b>parameterized</b> trapezoids by using horizontal cuts is proposed. In the process of partitioning a <b>parameterized</b> 45 -degree polygon, the proposed approach invokes a mixed integer linear programming solver only once and can rapidly obtain results of comparing linear expressions. Compared with previous partitioning programs, the program implementing the proposed approach is very efficient and can achieve more than 100 × speed-up while partitioning large <b>parameterized</b> polygons or <b>parameterized</b> polygons with complex constraints. The approach {{can be used as}} the basis to build trapezoidal corner stitching data structures for <b>parameterized</b> 45 -degree layouts so that models of layout-induced parasitics can be generated automatically...|$|R
40|$|We study <b>parameterized</b> linear {{differential}} equations with coefficients depending meromorphically upon the parameters. As a main result, analogously to the unparameterized density theorem of Ramis, {{we show that}} the <b>parameterized</b> monodromy, the <b>parameterized</b> exponential torus and the <b>parameterized</b> Stokes operators are topological generators in Kolchin topology, for the <b>parameterized</b> differential Galois group introduced by Cassidy and Singer. We prove an analogous result for the global <b>parameterized</b> differential Galois group, which generalizes a result by Mitschi and Singer. These authors give also a necessary condition on a group for being a global <b>parameterized</b> differential Galois group; {{as a corollary of}} the density theorem, we prove that their condition is also sufficient. As an application, we give a characterization of completely integrable equations, and we give a partial answer to a question of Sibuya about the transcendence properties of a given Stokes matrix. Moreover, using a <b>parameterized</b> Hukuhara-Turrittin theorem, we show that the Galois group descends to a smaller field, whose field of constants is not differentially closed. Comment: To appear in Pacific Journal of Mathematic...|$|R
40|$|Algorithms {{specified}} for parametrically sized {{problems are}} more general purpose and more reusable than algorithms for fixed sized problems. For this reason, {{there is a need}} for representing and symbolically analyzing linearly <b>parameterized</b> algorithms. An important class of parallel algorithms can be described as systems of <b>parameterized</b> affine recurrence equations (PARE). In this representation, linearly <b>parameterized</b> polyhedra are used to describe the domains of variables. This paper describes an algorithm which computes the set of <b>parameterized</b> vertices of a polyhedron, given its representation as a system of <b>parameterized</b> inequalities. This provides an important tool for the symbolic analysis of the <b>parameterized</b> domains used to define variables and computation domains in PARE's. A library of operations on <b>parameterized</b> polyhedra based on the Polyhedral Library has been written in C and is freely distributed. 1 Introduction In order to improve the performance of scientific programs [...] ...|$|R
