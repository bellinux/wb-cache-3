15|10000|Public
2500|$|Epoxies {{are good}} at {{securing}} TC conductors to the profile board {{to keep them from}} becoming entangled in the oven during profiling. [...] Epoxies come in both insulator and conductor formulations The specs need to be checked otherwise an insulator can play a negative role in the collection of profile data. The ability to apply this adhesive in similar quantities and thicknesses is difficult to measure in quantitative terms. This decreases reproducibility. If epoxy is used, <b>properties</b> <b>and</b> <b>specifications</b> of that epoxy must be checked. Epoxy functions within a wide range of temperature tolerances.|$|E
30|$|Second, ramp rates also go for {{the energy}} storage system. Owing to the {{chemical}} <b>properties</b> <b>and</b> <b>specifications</b> by battery manufacturers, a battery energy storage system has the boundaries of maximum ramp rate as well. There is no limit to ramp rates in the supercapacitor energy storage system, which undoubtedly assumes the superiority of supercapacitor energy storage systems.|$|E
40|$|We {{present a}} logic for {{reasoning}} about licenses, which are ``terms of use'' for digital resources. The logic provides a language for writing both properties of licenses and specifications that govern a client's actions. We discuss {{the complexity of}} checking <b>properties</b> <b>and</b> <b>specifications</b> written in our logic and propose a technique for verification. A key feature of our approach {{is that it is}} essentially parameterized by the language in which the licenses are written, provided that this language can be given a trace-based semantics. We consider two license languages to illustrate this flexibility. Comment: 21 pages. Appeared in the Proceedings of the 15 th IEEE Computer Security Foundations Workshop, pp. 282 - 294, 200...|$|E
5000|$|Tapestry - A {{component}} object model based on JavaBeans <b>properties</b> <b>and</b> strong <b>specifications</b> ...|$|R
40|$|Interaction {{terms are}} {{constructed}} with georeferenced attribute variables and spatial filter eigenvectors, and {{then used to}} compute geographically varying regression coefficients. These coefficients, which are analogous to geographically weighted regression (GWR) coefficients, display preferable <b>properties,</b> <b>and</b> this <b>specification</b> is used to critique selected features of GWR. Comparisons are illustrated with the Georgia data appearing in the standard GWR tutorial. ...|$|R
40|$|Report {{issued by}} the U. S. Bureau of Mines {{discussing}} the building material, dimension stone. As stated in the introduction, "the pertinent <b>properties</b> <b>and</b> principal <b>specifications</b> for stone are described along with exploration, mining, finishing, and use technology. A brief history and geologic background are also included" (p. 2). This report includes maps, tables, illustrations, and photographs...|$|R
40|$|Requirements for product {{families}} {{are expressed in}} terms of commonality and variability. This distinction allows early identification of an appropriate software architecture and opportunities for software reuse. Feature diagrams provide intuitive notations and techniques for representing requirements in product line development. In this paper, we observe that feature diagrams tend to obfuscate three important descriptions: requirements, domain <b>properties</b> <b>and</b> <b>specifications.</b> As a result, feature diagrams do not adequately capture the problem structures that underlie variability, and inform the solution structures of their complexity. With its emphasis on separation of the three descriptions, the problem frames approach provides a conceptual framework for a more detailed analysis of variability and its structure. With illustrations from an example, we demonstrate how problem frames analysis of variability can augment feature diagrams. ...|$|E
40|$|This {{thesis is}} about {{essential}} digital cameras and technologies, {{which are used}} by directors of photography for shooting feature films, commercials and television content. I focused mainly on cameras, {{that are available to}} the public in your 2012, which are for example Arri Alexa, RED EPIC, Sony F 65, Phantom FLEX, Phantom 65 and few more semi-professional cameras. In my thesis I also look back on the beginnings and history of digital cameras from 1990 ?s, when first cameras emerged that were at least able to compete with film negative, and on the development of second generation of digital cameras as Panavision Genesis, Arri D 20 -D 21 and RED ONE. Part of my work is also devoted to technical <b>properties</b> <b>and</b> <b>specifications,</b> which are required from current high-end cameras...|$|E
40|$|The {{present study}} targets to {{investigate}} the solid particles settling {{in relation to the}} particle shape and fluid rheological properties. The power law model of non Newtonian fluid represents the fluid phase according to the drill mud definition. The particles and the fluid <b>properties</b> <b>and</b> <b>specifications</b> are selected from previous works. The results characterized the scenario of solid in liquid settling behavior obtained from Chein’s correlation of settling velocity for irregular shape. The result gives interpretation technique to design the drilling fluid with coordination to the cuttings sphericity concept to avoid bed formation problems. The final results sustain that settling increasing with the increasing on the shape factor. Small increase in fluid density can reduce particle settling velocity. Smaller particle size gives less settling velocity. Increasing of fluid viscosity will reduce a little bit in particle settling...|$|E
40|$|We {{propose the}} {{combination}} of two established models of computation (X-machines and CCS) to generate a new behavioural <b>specification</b> <b>and</b> modelling language, CCS-XM. We show that such a language {{could be used to}} represent object-oriented systems, reason about their behavioural <b>properties,</b> <b>and</b> refine <b>specifications</b> into designs which are correct-by-construction. We delineate some of the semantics of such a language, and suggest areas where further research would be necessary...|$|R
40|$|The blended of raw {{petroleum}} is {{an operation}} that can be optimized and {{it is based on}} a great quantity of knowledge and experience. The planning of these operations consists in obtaining a mixture of components with different <b>properties</b> <b>and</b> <b>specification</b> as octane, flow, level of sulfur etc., besides keeping in mind the existent capacities and the demand. This is considered important in this type of industries, since their profitability depends on finding the good mixture, due to the variability of the prices in the final products. The objective {{of this paper is to}} determine the good variant of production of the refinery PCK/Oder, Federal Republic of Germany that achieves the maximum of utilities, by means of the Parametric Lineal Programming. The preliminary validation, presents advantages in the utilities of until 4 %, in comparison with the use of the current method...|$|R
40|$|Algebraic {{properties}} specify {{some natural}} <b>properties</b> of programming <b>and</b> <b>specification</b> constructs. This paper {{provides an overview}} of techniques to guarantee or generate algebraic properties of language constructs by investigating the syntactic shape of the deduction rules defining their operational semantics. ...|$|R
40|$|Abstract- We {{discuss the}} {{performance}} of a feed-forward amplifier (FFA) at 10 GHz. The feed-forward method is primarily used to suppress intermodulation distortion in amplifiers to suppress up-converted near-DC noise. The main amplifier in this configuration is a low-noise array of eight amplifiers in parallel and having a phase noise of – 165 dBc/Hz at f = 10 kHz. By implementing a feed-forward scheme, we are able to suppress this noise, as well as close-to-carrier noise, by at least another 10 dB. This improved performance surpasses that of other present low-noise microwave amplifiers. We discuss this exceptional performance in the context of trade-offs with other amplifier <b>properties</b> <b>and</b> <b>specifications.</b> We also construct a 10 GHz oscillator using an air-dielectric resonator and the FFA as the loop amplifier. The phase modulated (PM) noise of this particular oscillator is either less than or comparable to the PM noise of several classes of commercial oscillators. Additionally, the AM noise performance is superior to existing oscillators. I...|$|E
40|$|Biodiesel {{is gaining}} {{more and more}} {{importance}} as an attractive fuel due to the depleting fossil fuel resources. Chemically biodiesel is monoalkyl esters of long chain fatty acids derived from renewable feed stock like vegetable oils and animal fats. It is produced by transesterification in which, oil or fat is reacted with a monohydric alcohol in presence of a catalyst. The process of transesterification {{is affected by the}} mode of reaction condition, molar ratio of alcohol to oil, type of alcohol, type and amount of catalysts, reaction time and temperature and purity of reactants. In the present paper various methods of preparation of biodiesel with different combination of oil and catalysts have been described. The technical tools and processes for monitoring the transesterification reactions like TLC, GC, HPLC, GPC, 1 H NMR and NIR have also been summarized. In addition, fuel <b>properties</b> <b>and</b> <b>specifications</b> provided by different countries are discussed. Transesterification Vegetable oil Biodiesel Fatty acid alkyl esters Reaction condition Analytical methods...|$|E
40|$|The current {{means of}} {{transferring}} architectural {{data to the}} construction site depends mainly on the drawing either manually or electronically drafted both in physical or digital formats. The printed or manually drafted drawing is being replaced with the digital version that can be accessed with a PDA. There are many benefits of the digital form over the physical form. However the full potential of this medium {{has not yet been}} fully exploited. The new CAD paradigm, BIM (Building Information Modelling), suggests that all the building information can be represented as a digital database that constitutes the information about the building elements as three-dimensional geometry, as well as, <b>properties</b> <b>and</b> <b>specifications</b> in the form of objects. This paper describes the process to convey the information about the CAD objects to the construction site through the web by extracting the properties of the objects into an XML file which can be queried for the needed data. ...|$|E
40|$|Abstract—We {{present the}} PRISM {{benchmark}} suite: {{a collection of}} probabilistic models <b>and</b> <b>property</b> <b>specifications,</b> designed to facilitate testing, benchmarking and comparisons of probabilistic verification tools and implementations. Keywords-Benchmarks; Probabilistic models; Probabilistic model checking; Probabilistic verification tools...|$|R
50|$|Property Misdescriptions Act 1991 is an Act of Parliament of the United Kingdom of Great Britain and Northern Ireland {{which makes}} the {{misidentification}} of various aspects of a <b>properties</b> <b>specifications</b> <b>and</b> particulars a crime.|$|R
40|$|Model {{checking}} {{has been}} extensively used to verify various systems. However, this usually {{has been done by}} experts who have a good understanding of model checking and who are familiar with the syntax of both modelling <b>and</b> <b>property</b> <b>specification</b> languages. Unfortunately, this is not an easy task for nonexperts to learn description languages for modelling and formal logics/languages for property specification. In particular, property specification is very daunting and error-prone for nonexperts. In this paper, we present a methodology to facilitate probabilistic model checking for nonexperts. The methodology helps nonexpert users model their systems and express their requirements without any knowledge of the modelling <b>and</b> <b>property</b> <b>specification</b> languages...|$|R
40|$|Many {{version control}} systems, {{including}} Git and Mercurial, rely on diff 3 to merge different {{revisions of the}} same file. More precisely diff 3 automatically merges two text files, given a common base version, comparing them line by line and raising conflicts when the changes made are irreconcilable. The program ignores the actual structure of the data stored in the files, hence it might generate spurious conflicts, which must be manually resolved by the user. In this paper, we present a state-based, three-way, persistent, data-type generic diff 3 algorithm whose increased precision in detecting changes reduces the number of false conflicts raised and improves its merging capabilities. We have implemented the algorithm in Agda, a proof assistant with dependent types, and developed a model to reason about “diffing” and merging. We have formalized sanity <b>properties</b> <b>and</b> <b>specifications</b> of diff 3 and proved that our algorithm meets them. Furthermore, we have identified the minimal conditions under which the merging algorithm raises a conflict and established a structural invariant preserved...|$|E
40|$|Reinforced {{concrete}} {{is a wide}} {{field for}} researches and studies in civil engineering subject. It {{is due to the}} fact that reinforced concrete is the most widely used material for the infrastructure in the world. Reinforced concrete consists of two main materials: reinforcing steel and concrete, each of those two materials has its own effect on the performance of the structure. In this thesis, the change in RC performance due to different steel <b>properties</b> <b>and</b> <b>specifications</b> will be investigated. The study focuses on the bond interaction between steel and concrete and the flexural behaviour of RC beams. Pull-out forces have been exerted on the reinforcing bars in RC blocks to examine the impact of steel properties on the bond strength and failure mode of the blocks. In addition to that, flexural tests have been conducted on simply supported RC beams to investigate how reinforcement properties can affect the ductility of reinforced concrete. Comparison of results of the previous two tests with codes and analytical models have been carried out to verify the outcome of this research. ...|$|E
40|$|The {{real-time}} {{system uses}} a recurrent neural network (RNN) with associative memory {{for training and}} recognition. This study attempts to use associative memory to apply pattern recognition (PR) technology to the real-time pattern recognition of engineering components in a web-based recognition system with a Client-Server network structure. Remote engineers can draw {{the shape of the}} engineering components using the browser, and the recognition system then searches the component database via the Internet. Component patterns are stored in the database system considered here. Moreover, the data fields of each component pattern contain the <b>properties</b> <b>and</b> <b>specifications</b> of that pattern, except in the case of engineering components. The database system approach significantly improves recognition system capacity. The recognition system examined here employs parallel computing, which increases system recognition rate. The recognition system used in this work is an Internet-based, client-server network structure. The final phase of the system recognition applies database matching technology to processing recognition, and can solve the problem of spurious states. The system considered here is implemented in the Yang-Fen Automation Electrical Engineering Company as a case study. The experiment is continued for four months, and engineers are also used to operating the web-based pattern recognition system. Therefore, the cooperative plan described above is analysed and discussed here...|$|E
50|$|It {{supports}} viewing architectural models, {{structural analysis}} models, distribution systems, work schedules, 4D construction animations, cost estimates, resource allocations, organizational structures, product templates, process templates, resource templates, <b>and</b> <b>property</b> set <b>specifications.</b>|$|R
40|$|National audienceThe emotion {{recognition}} {{field is}} a young but maturing field, for which needs for designing models begin to emerge. We consider emotion recognition to be a multimodal interaction with the machine. From this point of view, we designed a component-based architecture model for emotionnaly-wise interactive systems : the emotion branch. In this paper, we immerse our architecture model {{in the field of}} multimodal interaction. We redefine a modality within the frame of passive emotion recognition and show that doing so enables us to benefit from concepts from multimodal interaction (CARE <b>properties</b> <b>and</b> software <b>specifications)</b> <b>and</b> to highlight unexplored design spaces...|$|R
40|$|Statistical model {{checking}} is {{a powerful}} and flexible approach for formal verification of computational models like P systems, which can have very large search spaces. Various statistical model checking tools have been developed, but choosing between them and using the most appropriate one requires a significant degree of experience, not only because different tools have different modelling <b>and</b> <b>property</b> <b>specification</b> languages, {{but also because they}} may be designed to support only a certain subset of property types. Furthermore, their performance can vary depending on the <b>property</b> types <b>and</b> membrane systems being verified. In this paper we evaluate the performance of various common statistical model checkers against a pool of biological models. Our aim is to help users select the most suitable SMC tools from among the available options, by comparing their modelling <b>and</b> <b>property</b> <b>specification</b> languages, capabilities <b>and</b> performances...|$|R
40|$|Developing {{high quality}} {{requirements}} specifications is mandatory {{for a number}} of critical industrial systems. The KAOS goal-driven methodology has been designed to elicit and validate requirements and also to prove their consistency. This methodology has been successfully implemented in two integrated tools (Objectiver and FAUST) and has been validated in many industrial projects. All of these have shown how the quality of the requirements can be improved with KAOS/Objectiver due to the following factors:- a rigorous reasoning and decision making on the requirements,- the constructive nature of the goal-oriented method,- the tracing facilities automatically generated between <b>properties</b> <b>and</b> <b>specifications,</b> and- the automatic generation of reports based on the goal- oriented structure of the requirements. Another contribution to the quality of requirements is the tight integration between informal requirements and formalised requirements. One the one hand, the KAOS methodology allows the analyst to give a complete informal description of the specification. On the other hand, the FAUST extensions of the Objectiver environment allows to describe and analyse the formal aspects of the specification by making use of some of the best formal tools hidden behind the stakeholder view on the requirements. A recent report from the Standish Group estimates that a staggering 40 percent of all software projects fails. To a large degree, these failures are linked to requirements- either they are incorrectly defined from th...|$|E
40|$|The aim of {{the master}} thesis was to develop {{lightweight}} self-compacting concrete made of lightweight aggregate and with declared properties, such as compressive strength class and maximal target density. Self-compacting properties were determined by measuring rheological properties and selecting the optimum range of yield stresses and plastic viscosities {{as a result of}} these measurements. In the first part of the thesis <b>properties</b> <b>and</b> <b>specifications</b> of lightweight aggregate and lightweight concrete are given. The data were obtained using relevant literature and standards. Common explanations about rheology of concrete and models for the description of liquids are also given, along with presentation of ultrasound testing and thermal current measurements. The second part of the thesis, which is experimental, represents the main part of my work. First the used test methods are given and the testing protocols are described, with obtained results of the tests. After that the test results are analysed. Concrete mixtures were divided in two groups. Preliminary concrete mixtures were first tested in order to define the composition of the main group of the mixtures. For the main mixtures rheological properties were first measured for different influencing parameters and presented in the form of rheographs. Then selected mixture was used to cast a concrete wall of 100 cm x 230 cm x 6 cm. The homogeneity of concrete in the wall was evaluated using ultrasound testing. The thermal insulation properties of the concrete were evaluated using thermal flow measurements. The study was carried out in the framework of cooperation with an enterprise that uses such concretes in practice...|$|E
40|$|Abstract- We {{address the}} problem of {{implication}} of assertion graphs that occur in generalized symbolic trajectory evaluation (GSTE). GSTE has demonstrated its powerful capacity in formal verification of digital systems. Assertion graphs are used for <b>property</b> <b>and</b> model <b>specifications.</b> We present a novel implication technique for assertion graphs. It relies on direct Boolean reasoning on each edge (and vertex) of an assertion graph, thus avoiding the reachability computation in GSTE. We have successfully applied both model-based and language-based implications on real industrial circuits. Experimental results demonstrate the promising performance of our approach. I...|$|R
40|$|We {{prove that}} a C 1 -generic volume-preserving {{dynamical}} system (diffeomorphism or flow) has the shadowing property or is expansive or has the weak <b>specification</b> <b>property</b> if <b>and</b> {{only if it}} is Anosov. Finally, we prove that the C 1 -robustness, within the volume-preserving context, of the expansiveness <b>property</b> <b>and</b> the weak <b>specification</b> <b>property,</b> imply that the dynamical system (diffeomorphism or flow) is Anosov. Comment: 14 page...|$|R
40|$|Although model {{checking}} is extensively {{used for}} verification of single software systems, currently there is insufficient support for model checking in product lines. The presence of commonalities within the different {{products in the}} product line requires that the <b>properties</b> <b>and</b> the corresponding <b>specifications</b> for these properties be verified for every product in the product line. <b>Specification</b> <b>and</b> management of <b>properties</b> for every product in a product line can incur high overhead and make the task of model checking very difficult. It is hence essential to exploit the presence of commonalities to our advantage by providing reusability in model checking of product lines. Since different products in the product line need to be checked for same or similar properties, reuse of properties specified for one product for other products within a product line will significantly reduce the overall <b>property</b> <b>specification</b> <b>and</b> verification time. FormulaEditor is a <b>property</b> <b>specification</b> <b>and</b> management tool for enhancing the reusability of model checking of software product lines. The core of the technique is a product line-oriented user interface to guide users in generating, selecting, managing, and reusing useful product line <b>properties,</b> <b>and</b> patterns of <b>properties</b> for model checking. The previous version of the FormulaEditor tool supports Cadence SMV models, but not the typical CMU-SMV models. This work extends the FormulaEditor tool to allow verification of models written in CMU-SMV. The advantage of providing support to another model checker is twofold: first, it enhances the tool 2 ̆ 7 s capability to check design specifications written in different models; and second, it allows users to specify the same design in different modeling languages to detect problems...|$|R
40|$|Problem Frames are a {{systematic}} {{approach to the}} decomposition of problems {{that allows us to}} relate requirements, domain <b>properties,</b> <b>and</b> machine <b>specifications.</b> Having decomposed a problem, one approach to solving it is through a process of composing solutions to sub-problems. In this paper, we contribute to supporting such a process by providing a way to compose multiple Problem Frames. We develop {{a systematic}} approach to composing inconsistent requirements. We introduce Composition Frames, a requirements construct that models relevant aspects of composition and thus deals with unwanted effects, such as interference of overlapping reactions to events. Throughout the paper we use a simple case study to illustrate and validate our ideas. 1...|$|R
40|$|We {{illustrate}} {{two ways}} to address the <b>specification,</b> modelling <b>and</b> analysis of dynamic software architectures using: i) ordinary typed graph transformation techniques implemented in Alloy; ii) a process algebraic presentation of graph transformation implemented in Maude. The two approaches are compared by showing how different aspects can be tackled, including representation issues, modelling phases, <b>property</b> <b>specification</b> <b>and</b> analysis. ...|$|R
40|$|The article {{presents}} the results of studies of the composition of the reconstituted composite gypsum binding to integrated power plant ash waste Grozny. The character of the influence of man-made materials of the Chechen Republic on the processes of structure formation of the «gypsum - cement - ash and slag mineral supplement -dobavka - water» hardening. The effect of chemical additives on the properties of the composite binder to regulate the rheological <b>properties</b> of mixtures <b>and</b> <b>specification</b> of concrete...|$|R
40|$|The goal of {{software}} testing analysis is to validate that an implementation satis es its specifications. Many errors in software {{are caused by}} generalizable aws in the source code. Property-based testing assures that a given program is free of the specified generic aws. Property-based testing uses <b>property</b> <b>specifications</b> <b>and</b> a dataflow analysis of the program to guide evaluation of test executions for correctness and completeness...|$|R
40|$|System {{specification}} {{by state}} machines together with <b>property</b> <b>specification</b> <b>and</b> verification by temporal logics are by now standard techniques to reason about the control flow of hardware components, embedded systems and communication protocols. The techniques to reason about the dataflow within a system, however, are less well developed. This report adapts a UNITY-like formalism for <b>specification</b> <b>and</b> verification to systems of asynchronously communicating components. The components themselves are specified as state machines. The resulting proof techniques allows abstract and compositional reasoning about dataflow properties of systems...|$|R
40|$|In this paper, we {{show how}} {{separation}} (decomposing a verification problem into {{a collection of}} verification subproblems) {{can be used to}} improve the efficiency and precision of verification of safety properties. We present a simple language for specifying separation strategies for decomposing a single verification problem into a set of subproblems. (The strategy specification is distinct from the safety <b>property</b> <b>specification</b> <b>and</b> is specified separately.) We present a general framework of heterogeneous abstraction that allows different parts of the heap to be abstracted using different degrees of precision at different points during the analysis. We show how the goals of separation (i. e., more efficient verification) can be realized by first using a separation strategy to transform (instrument) a verification problem instance (consisting of a safety <b>property</b> <b>specification</b> <b>and</b> an input program), and by then utilizing heterogeneous abstraction during the verification of the transformed verification problem. Some tasks are best done by machine, while others are best done by human insight; and a properly designed system will find the right balance. – D. Knut...|$|R
40|$|Abstract: A {{description}} is given {{of the state}} of the art and the functionality of MAX, an expert system for supporting conceptual design of mechatronic systems. Three model building principles are combined in MAX: – embedding equations in networks: a tight coupling between the graphical model formulation and the underlying equations assists the user in model building and evaluation. – multiple model formulations: one system can be manipulated and inspected simultaneously in multiple formulations (languages). – polymorphic modelling: a submodel definition is divided into a type that defines essential <b>properties,</b> <b>and</b> a <b>specification</b> that defines incidental properties. One type generally has multiple <b>specifications,</b> <b>and</b> types are organised hierarchically inside the library. By means of a simple case study, the utility of these principles is demonstrated. It is shown that MAX is a powerful model building environment that is well adapted to usage by designers. ...|$|R
