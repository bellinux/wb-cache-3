3865|10000|Public
5|$|This {{shows in}} {{particular}} {{that the number of}} distinct Penrose tilings (of any type) is uncountably infinite. Up-down generation yields one method to <b>parameterize</b> the tilings, but other methods use Ammann bars, pentagrids, or cut and project schemes.|$|E
25|$|<b>Parameterize</b> {{the model}} by {{training}} on sequences/structures.|$|E
25|$|A {{comparison}} of commonly used transformations {{concluded that the}} biexponential and Box-Cox transformations, when optimally parameterized, provided the clearest visualization and least variance of cell populations across samples. However, a later {{comparison of}} the flowTrans package used in that comparison indicated {{that it did not}} <b>parameterize</b> the Logicle transformation {{in a manner consistent with}} other implementations, potentially calling those results into question.|$|E
40|$|A general {{framework}} for <b>parameterized</b> proof complexity {{was introduced by}} Dantchev et al. [2007]. There, the authors show important results on tree-like <b>Parameterized</b> Resolution [...] -a <b>parameterized</b> version of classical Resolution [...] -and their gap complexity theorem implies lower bounds for that system. The main result of this article significantly improves upon this by showing optimal lower bounds for a <b>parameterized</b> version of bounded-depth Frege. More precisely, we prove that the pigeonhole principle requires proofs of size nΩ(k) in <b>parameterized</b> bounded-depth Frege, and, as a special case, in dag-like <b>Parameterized</b> Resolution. This answers an open question posed in Dantchev et al. [2007]. In the opposite direction, we interpret a well-known technique for FPT algorithms as a DPLL procedure for <b>Parameterized</b> Resolution. Its generalization leads to a proof search algorithm for <b>Parameterized</b> Resolution that in particular shows that tree-like <b>Parameterized</b> Resolution allows short refutations of all <b>parameterized</b> contradictions given as bounded-width CNFs...|$|R
40|$|Based on a {{geometrical}} method, {{the internal}} relationships between locally <b>parameterized</b> curves {{and the local}} <b>parameterized</b> surfaces are analy z ed. A necessary and sufficient condition is derived for the local convexity of <b>parameterized</b> surfaces and functional surfaces. A criterion for local convexity (concavity) of <b>parameterized</b> surfaces is found, also, the criterion condition of binary function convex surfaces is obtained. Finally, the relationships between a globally <b>parameterized</b> curves surfaces is discussed, a necessary condition is presented for the global convexity of <b>parameterized</b> surfaces, and it is proved that locally convex <b>parameterized</b> surfaces are also globally convex. </p...|$|R
40|$|As an aid in {{software}} maintenance, {{it would be}} useful to be able to track down duplication in large software systems efficiently. Duplication in code is often in the form of sections of code that are the same except for a systematic change of parameters such as identifiers and constants. To model such <b>parameterized</b> duplication in code, this paper introduces the notions of <b>parameterized</b> strings and <b>parameterized</b> matches of <b>parameterized</b> strings. A data structure called a <b>parameterized</b> suffix tree is defined to aid in searching for <b>parameterized</b> matches. For fixed alphabets, algorithms are given to construct a <b>parameterized</b> suffix tree in linear time and to find all maximal <b>parameterized</b> matches over a threshold length in a <b>parameterized</b> p-string in time linear in the size of the input plus the number of matches reported. The algorithms have been implemente...|$|R
500|$|The {{amount of}} solar {{radiation}} reaching the ground, {{as well as}} the formation of cloud droplets occur on the molecular scale, and so they must be parameterized before they can be included in the model. [...] Atmospheric drag produced by mountains must also be parameterized, as the limitations in the resolution of elevation contours produce significant underestimates of the drag. [...] This method of parameterization is also done for the surface flux of energy between the ocean and the atmosphere, in order to determine realistic sea surface temperatures and type of sea ice found near the ocean's surface. [...] Sun angle {{as well as the}} impact of multiple cloud layers is taken into account. [...] Soil type, vegetation type, and soil moisture all determine how much radiation goes into warming and how much moisture is drawn up into the adjacent atmosphere, and thus it is important to <b>parameterize</b> their contribution to these processes. [...] Within air quality models, parameterizations take into account atmospheric emissions from multiple relatively tiny sources (e.g. roads, fields, factories) within specific grid boxes.|$|E
500|$|A {{simplified}} two-dimensional {{model for}} the spread of wildfires that used convection to represent the effects of wind and terrain, as well as radiative heat transfer as the dominant method of heat transport led to reaction-diffusion systems of partial differential equations. More complex models join numerical weather models or computational fluid dynamics models with a wildfire component which allow the feedback effects between the fire and the atmosphere to be estimated. [...] The additional complexity in the latter class of models translates to a corresponding increase in their computer power requirements. In fact, a full three-dimensional treatment of combustion via direct numerical simulation at scales relevant for atmospheric modeling is not currently practical because of the excessive computational cost such a simulation would require. [...] Numerical weather models have limited forecast skill at spatial resolutions under , forcing complex wildfire models to <b>parameterize</b> the fire in order to calculate how the winds will be modified locally by the wildfire, and to use those modified winds to determine {{the rate at which}} the fire will spread locally. [...] Although models such as Los Alamos' FIRETEC solve for the concentrations of fuel and oxygen, the computational grid cannot be fine enough to resolve the combustion reaction, so approximations must be made for the temperature distribution within each grid cell, as well as for the combustion reaction rates themselves.|$|E
500|$|Some {{meteorological}} {{processes are}} too small-scale or too complex to be explicitly included in {{numerical weather prediction}} models. Parameterization is a procedure for representing these processes by relating them to variables on the scales that the model resolves. For example, the gridboxes in weather and climate models have sides that are between [...] and [...] in length. [...] A typical cumulus cloud has a scale of less than , and would require a grid even finer than this to be represented physically by the equations of fluid motion. [...] Therefore, the processes that such clouds represent are parameterized, by processes of various sophistication. [...] In the earliest models, if a column of air within a model gridbox was conditionally unstable (essentially, the bottom was warmer and moister than the top) and the water vapor content at any point within the column became saturated {{then it would be}} overturned (the warm, moist air would begin rising), and the air in that vertical column mixed. [...] More sophisticated schemes recognize that only some portions of the box might convect and that entrainment and other processes occur. [...] Weather models that have gridboxes with sides between [...] can explicitly represent convective clouds, although they need to <b>parameterize</b> cloud microphysics which occur at a smaller scale. [...] The formation of large-scale (stratus-type) clouds is more physically based; they form when the relative humidity reaches some prescribed value. [...] Sub-grid scale processes need to be taken into account. [...] Rather than assuming that clouds form at 100% relative humidity, the cloud fraction can be related to a critical value of relative humidity less than 100%, reflecting the sub grid scale variation that occurs in the real world.|$|E
40|$|<b>Parameterized</b> Resolution and, moreover, {{a general}} {{framework}} for <b>parameterized</b> proof complexity {{was introduced by}} Dantchev, Martin, and Szeider (FOCS 2 ̆ 707). In that paper, Dantchev et al. show a complexity gap in tree-like <b>Parameterized</b> Resolution for propositional formulas arising from translations of first-order principles. We broadly investigate <b>Parameterized</b> Resolution obtaining the following main results: 1) We introduce a purely combinatorial approach to obtain lower bounds to the proof size in tree-like <b>Parameterized</b> Resolution. For this we devise a new asymmetric Prover-Delayer game which characterizes proofs in (<b>parameterized)</b> tree-like Resolution. By exhibiting good Delayer strategies we then show lower bounds for the pigeonhole principle {{as well as the}} order principle. 2) Interpreting a well-known FPT algorithm for vertex cover as a DPLL procedure for <b>Parameterized</b> Resolution, we devise a proof search algorithm for <b>Parameterized</b> Resolution and show that tree-like <b>Parameterized</b> Resolution allows short refutations of all <b>parameterized</b> contradictions given as bounded-width CNF 2 ̆ 7 s. 3) We answer a question posed by Dantchev, Martin, and Szeider showing that dag-like <b>Parameterized</b> Resolution is not fpt-bounded. We obtain this result by proving that the pigeonhole principle requires proofs of size n^Omega(k) in dag-like <b>Parameterized</b> Resolution. For this lower bound we use a different Prover-Delayer game which was developed for Resolution by Pudlák...|$|R
50|$|Frances Ann Novak Rosamond is an Australian {{computer}} scientist whose {{research interests include}} computer education and <b>parameterized</b> complexity. She {{is the editor of}} the <b>Parameterized</b> Complexity Newsletter, moderator of the <b>parameterized</b> complexity wiki, and publicity chair of the International Symposium on <b>Parameterized</b> and Exact Computation (IPEC).|$|R
40|$|<b>Parameterized</b> {{complexity}} theory measures {{the complexity of}} compu-tational problems predominantly {{in terms of their}} <b>parameterized</b> time complexity. The purpose of the present paper is to demonstrate that the study of <b>parameterized</b> space complexity can give new insights into the complexity of well-studied <b>parameterized</b> problems like the feedback vertex set problem. We show that the undirected and the directed feedback vertex set problems have different <b>parameterized</b> space complexities, unless L = NL. For a number of further natural <b>parameterized</b> problems, including the longest common subsequence problem, the acceptance problem for multi-head automata, and the associative generability problem we show that they lie in or are com-plete for different <b>parameterized</b> space classes. Our results explain why previous attempts at proving completeness of different problems for <b>parameterized</b> time classes have failed...|$|R
2500|$|... where [...] {{are complex}} numbers that <b>parameterize</b> the matrix, [...] is the {{identity}} matrix, and [...] denote the Pauli matrices. Then its two singular values are given by ...|$|E
2500|$|A surface {{integral}} [...] is a generalization of multiple integrals to integration over surfaces. It {{can be thought}} of as the double integral analog of the line integral. [...] To find an explicit formula for the {{surface integral}}, we need to <b>parameterize</b> the surface of interest, S, by considering a system of curvilinear coordinates on S, like the latitude and longitude on a sphere. Let such a parameterization be x(s, t), where (s, t) varies in some region T in the plane. Then, the surface integral is given by ...|$|E
2500|$|If R and P in {{the above}} flat torus form a unit vector (R,P) =(cos(η),sin(η)) then u, v, and η {{can be used to}} <b>parameterize</b> the unit 3-sphere in a {{parameterization}} associated with the Hopf map. [...] In particular, for certain very specific choices of a square flat torus in the 3-sphere S3, where η = /4 above, the torus will partition the 3-sphere into two congruent solid tori subsets with the aforesaid flat torus surface as their common boundary. [...] One example is the torus T defined by ...|$|E
3000|$|... [*]=[*]{⊥}, and {{the input}} (x, ⊥) is denoted as x. A {{sequence}} of <b>parameterized</b> inputs {{is called a}} (<b>parameterized)</b> input sequence. An (<b>parameterized)</b> output sequence can be defined in a similar way.|$|R
5000|$|The {{operation}} maps a <b>parameterized</b> element {{onto another}} <b>parameterized</b> element, or symbolically, ...|$|R
40|$|We {{examine the}} proof-theoretic {{strength}} of <b>parameterized</b> tree-like resolution—a proof sys-tem for the coW[2]-complete set of <b>parameterized</b> tautologies. <b>Parameterized</b> resolution and, moreover, a general framework for <b>parameterized</b> proof complexity {{was introduced by}} Dantchev, Martin, and Szeider (FOCS’ 07). In that paper, Dantchev et al. show a complexity gap in param-eterized tree-like resolution for propositional formulas arising from translations of first-order principles. Here we pursue a purely combinatorial approach to obtain lower bounds to the proof size in <b>parameterized</b> tree-like resolution. For this we devise a prover-delayer game suitable for <b>parameterized</b> resolution. By exhibiting good delayer strategies we then show lower bounds for the pigeonhole principle {{as well as the}} order principle. On the other hand, we demonstrate that <b>parameterized</b> tree-like resolution is a very powerful system, as it allows short refutations of all <b>parameterized</b> contradictions given as bounded-width CNF’s. Thus, a number of principles such as Tseitin tautologies, pebbling contradictions, or random 3 -CNF’s which serve as hard examples for classical resolution become easy in the <b>parameterized</b> setting. ...|$|R
2500|$|The {{amount of}} solar {{radiation}} reaching ground level in rugged terrain, or due to variable cloudiness, is parameterized as this process occurs on the molecular scale. [...] Also, the grid {{size of the}} models is large {{when compared to the}} actual size and roughness of clouds and topography. [...] Sun angle as well as the impact of multiple cloud layers is taken into account. [...] Soil type, vegetation type, and soil moisture all determine how much radiation goes into warming and how much moisture is drawn up into the adjacent atmosphere. [...] Thus, they are important to <b>parameterize.</b>|$|E
2500|$|Atom-based: Standard {{approaches}} of this type, using atomic contributions, {{have been named}} by those formulating them with a prefix letter: AlogP, XlogP, MlogP, etc. A conventional method for predicting log P through this type of method is to <b>parameterize</b> the distribution coefficient contributions of various atoms to the over-all molecular partition coefficient, which produces a parametric model. This parametric model can be estimated using constrained least-squares estimation, using a training set of compounds with experimentally measured partition coefficients. [...] In order to get reasonable correlations, the most common elements contained in drugs (hydrogen, carbon, oxygen, sulfur, nitrogen, and halogens) are divided into several different atom types depending on {{the environment of the}} atom within the molecule. [...] While this method is generally the least accurate, the advantage is that it is the most general, being able to provide at least a rough estimate {{for a wide variety of}} molecules.|$|E
2500|$|The {{shortest}} path between two {{points in a}} curved space can be found by writing the equation {{for the length of}} a curve (a function f from an open interval of R to the manifold), and then minimizing this length using the calculus of variations. This has some minor technical problems, because there is an infinite dimensional space of different ways to <b>parameterize</b> the {{shortest path}}. It is simpler to demand not only that the [...] curve locally minimizes length but also that it is parameterized [...] "with constant velocity", meaning that [...] the distance from f(s) to f(t) along the geodesic is proportional to |s't|. Equivalently, a different quantity may be defined, termed the energy of the curve; minimizing the energy leads to the same equations for a geodesic (here [...] "constant velocity" [...] is a consequence of minimisation). Intuitively, one can understand this second formulation by noting that an elastic band stretched between two points will contract its length, and in so doing will minimize its energy. [...] The resulting shape of the band is a geodesic.|$|E
3000|$|... {{denote the}} Marcinkiewicz integral, the <b>parameterized</b> area integral, and the <b>parameterized</b> Littlewood-Paley [...]...|$|R
40|$|The {{field of}} kernelization studies polynomial-time {{preprocessing}} routines for hard {{problems in the}} framework of <b>parameterized</b> complexity. In this article, we show that, unless the polynomial hierarchy collapses to its third level, the following <b>parameterized</b> problems do not admit a polynomial-time preprocessing algorithm that reduces the size of an instance to polynomial in the parameter: [...] -Edge Clique Cover, <b>parameterized</b> by the number of cliques, [...] -Directed Edge/Vertex Multiway Cut, <b>parameterized</b> {{by the size of the}} cutset, even in the case of two terminals, [...] -Edge/Vertex Multicut, <b>parameterized</b> by the size of the cutset, and [...] -k-Way Cut, <b>parameterized</b> by the size of the cutset...|$|R
40|$|International audienceAlgorithms {{specified}} for parametrically sized {{problems are}} more general purpose and more reusable than algorithms for fixed sized problems. For this reason, {{there is a need}} for representing and symbolically analyzing linearly <b>parameterized</b> algorithms. An important class of parallel algorithms can be described as systems of <b>parameterized</b> affine recurrence equations (PARE). In this representation, linearly <b>parameterized</b> polyhedra are used to describe the domains of variables. This paper describes an algorithm which computes the set of <b>parameterized</b> vertices of a polyhedron, given its representation as a system of <b>parameterized</b> inequalities. This provides an important tool for the symbolic analysis of the <b>parameterized</b> domains used to define variables and computation domains in PAREs. A library of operations on <b>parameterized</b> polyhedra based on the Polyhedral Library has been written in C and is freely distributed...|$|R
2500|$|Financial {{economics}} is {{the branch of}} economics studying the interrelation of financial variables, such as prices, interest rates and shares, as opposed to goods and services. Financial economics concentrates on influences of real economic variables on financial ones, in contrast to pure finance. [...] It centres on managing risk {{in the context of}} the financial markets, and the resultant economic and financial models. [...] It essentially explores how rational investors would apply risk and return to the problem of an investment policy. [...] Here, the twin assumptions of rationality and market efficiency lead to modern portfolio theory (the CAPM), and to the Black–Scholes theory for option valuation; it further studies phenomena and models where these assumptions do not hold, or are extended. [...] "Financial economics", at least formally, also considers investment under [...] "certainty" [...] (Fisher separation theorem, [...] "theory of investment value", Modigliani–Miller theorem) and hence also contributes to corporate finance theory. Financial econometrics is the branch of financial economics that uses econometric techniques to <b>parameterize</b> the relationships suggested.|$|E
2500|$|Weather {{and climate}} model gridboxes have sides of between [...] and [...] [...] A typical cumulus cloud has {{a scale of}} less than , and would require a grid even finer than this to be {{represented}} physically by the equations of fluid motion. [...] Therefore, the processes that such clouds represent are parameterized, by processes of various sophistication. [...] In the earliest models, if a column of air in a model gridbox was unstable (i.e., the bottom warmer than the top) {{then it would be}} overturned, and the air in that vertical column mixed. [...] More sophisticated schemes add enhancements, recognizing that only some portions of the box might convect and that entrainment and other processes occur. [...] Weather models that have gridboxes with sides between [...] and [...] can explicitly represent convective clouds, although they still need to <b>parameterize</b> cloud microphysics. [...] The formation of large-scale (stratus-type) clouds is more physically based, they form when the relative humidity reaches some prescribed value. [...] Still, sub grid scale processes need to be taken into account. [...] Rather than assuming that clouds form at 100% relative humidity, the cloud fraction can be related to a critical relative humidity of 70% for stratus-type clouds, and at or above 80% for cumuliform clouds, reflecting the sub grid scale variation that would occur in the real world.|$|E
5000|$|A domain-specific {{language}} can <b>parameterize</b> command line input.|$|E
2500|$|Several {{authors have}} studied the <b>parameterized</b> {{complexity}} of graph algorithms on r-near-trees, <b>parameterized</b> by [...]|$|R
40|$|AbstractIn this paper, we mainly discuss several closure {{constructions of}} <b>parameterized</b> limit bisimulation and {{establish}} a family of <b>parameterized</b> bisimulation limit topologies. These topological structures are useful for us to understand and analyze the infinite evolution of <b>parameterized</b> bisimulation...|$|R
40|$|We {{study the}} theory and {{techniques}} developed in the research of <b>parameterized</b> intractability, emphasizing on <b>parameterized</b> hardness and completeness that imply (stronger) computational lower bounds for natural computational problems. Moreover, the fundamentals of the structural properties in <b>parameterized</b> complexity theory, relationships to classical complexity theory and more recent developments {{in the area are}} also introduced. Keywords: <b>Parameterized</b> computation, fixed parameter tractability, W-hierarchy, exact algorithm, lower boun...|$|R
5000|$|The {{coordinates}} [...] are non-negative, {{and they}} <b>parameterize</b> a triangle because ...|$|E
5000|$|In {{bifurcation}} theory, lambda {{is used to}} <b>parameterize</b> {{a family}} of differential equations ...|$|E
5000|$|Functions {{encapsulate}} {{expressions and}} allow the programmer to <b>parameterize</b> them. For instance,function double (x) : 2 * x end ...|$|E
40|$|In this paper, an {{approach}} to the partitioning of <b>parameterized</b> 45 -degree polygons into <b>parameterized</b> trapezoids by using horizontal cuts is proposed. In the process of partitioning a <b>parameterized</b> 45 -degree polygon, the proposed approach invokes a mixed integer linear programming solver only once and can rapidly obtain results of comparing linear expressions. Compared with previous partitioning programs, the program implementing the proposed approach is very efficient and can achieve more than 100 × speed-up while partitioning large <b>parameterized</b> polygons or <b>parameterized</b> polygons with complex constraints. The approach {{can be used as}} the basis to build trapezoidal corner stitching data structures for <b>parameterized</b> 45 -degree layouts so that models of layout-induced parasitics can be generated automatically...|$|R
40|$|We study <b>parameterized</b> linear {{differential}} equations with coefficients depending meromorphically upon the parameters. As a main result, analogously to the unparameterized density theorem of Ramis, {{we show that}} the <b>parameterized</b> monodromy, the <b>parameterized</b> exponential torus and the <b>parameterized</b> Stokes operators are topological generators in Kolchin topology, for the <b>parameterized</b> differential Galois group introduced by Cassidy and Singer. We prove an analogous result for the global <b>parameterized</b> differential Galois group, which generalizes a result by Mitschi and Singer. These authors give also a necessary condition on a group for being a global <b>parameterized</b> differential Galois group; {{as a corollary of}} the density theorem, we prove that their condition is also sufficient. As an application, we give a characterization of completely integrable equations, and we give a partial answer to a question of Sibuya about the transcendence properties of a given Stokes matrix. Moreover, using a <b>parameterized</b> Hukuhara-Turrittin theorem, we show that the Galois group descends to a smaller field, whose field of constants is not differentially closed. Comment: To appear in Pacific Journal of Mathematic...|$|R
40|$|Algorithms {{specified}} for parametrically sized {{problems are}} more general purpose and more reusable than algorithms for fixed sized problems. For this reason, {{there is a need}} for representing and symbolically analyzing linearly <b>parameterized</b> algorithms. An important class of parallel algorithms can be described as systems of <b>parameterized</b> affine recurrence equations (PARE). In this representation, linearly <b>parameterized</b> polyhedra are used to describe the domains of variables. This paper describes an algorithm which computes the set of <b>parameterized</b> vertices of a polyhedron, given its representation as a system of <b>parameterized</b> inequalities. This provides an important tool for the symbolic analysis of the <b>parameterized</b> domains used to define variables and computation domains in PARE's. A library of operations on <b>parameterized</b> polyhedra based on the Polyhedral Library has been written in C and is freely distributed. 1 Introduction In order to improve the performance of scientific programs [...] ...|$|R
