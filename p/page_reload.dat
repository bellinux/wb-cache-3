11|29|Public
25|$|With {{the release}} of Chromium 12.0.742.0 on 19 April 2011 the {{interface}} incorporated many changes, the most significant since Chromium 6 was released. A multi-profile button was introduced allowing users to log into multiple Google and other accounts in the same browser instance. The new tab page was also redesigned and separated into four horizontally scrollable screens, providing access to most visited pages, Google apps, plus two identified pages. The <b>page</b> <b>reload</b> button was also redesigned along with {{minor changes to the}} URL bar. The first stable version of Chrome and Chromium 12 released was 12.0.742.91 which brought malware detection and support for hardware-accelerated 3D CSS transforms.|$|E
25|$|The {{client-side}} (Web browser) technologies used in Web 2.0 development include Ajax and JavaScript frameworks. Ajax programming uses JavaScript and the Document Object Model {{to update}} selected {{regions of the}} page area without undergoing a full <b>page</b> <b>reload.</b> To allow users to continue {{to interact with the}} page, communications such as data requests going to the server are separated from data coming back to the page (asynchronously). Otherwise, the user would have to routinely wait for the data to come back before they can do anything else on that page, just as a user has to wait for a page to complete the reload. This also increases overall performance of the site, as the sending of requests can complete quicker independent of blocking and queueing required to send data back to the client. The data fetched by an Ajax request is typically formatted in XML or JSON (JavaScript Object Notation) format, two widely used structured data formats. Since both of these formats are natively understood by JavaScript, a programmer can easily use them to transmit structured data in their Web application. When this data is received via Ajax, the JavaScript program then uses the Document Object Model (DOM) to dynamically update the Web page based on the new data, allowing for a rapid and interactive user experience. In short, using these techniques, Web designers can make their pages function like desktop applications. For example, Google Docs uses this technique to create a Web-based word processor.|$|E
5000|$|Confluence (software) WIKI has a PlantUML plug-in for Confluence Server, which renders {{diagrams}} on-the-fly {{during a}} <b>page</b> <b>reload.</b> There {{is an additional}} PlantUML plug-in for Confluence Cloud.|$|E
5000|$|AJAX-based browser DOM page refresh, i.e. no full <b>page</b> <b>reloads.</b>|$|R
5000|$|URL {{hash tag}} {{navigation}} (back/forward) within a web <b>page</b> without <b>page</b> <b>reloads</b> ...|$|R
5000|$|Dayfree Press was {{an online}} webcomic syndicate. Each Dayfree member {{had a special}} {{advertisement}} banner on their webpage that advertised the comics of another member-site. The ad was generated at random every time the <b>page</b> <b>reloaded</b> and sometimes showed an ad for the comics {{that were on the}} same webpage.|$|R
50|$|The {{executing}} script {{has access}} to the current page, which it may inspect and change. If the script returns an undefined type (rather than, for example, a string), the browser will not load a new page, with the result that the script simply runs against the current page content. This permits changes such as in-place font size and color changes without a <b>page</b> <b>reload.</b>|$|E
50|$|With {{the release}} of Chromium 12.0.742.0 on 19 April 2011 the {{interface}} incorporated many changes, the most significant since Chromium 6 was released. A multi-profile button was introduced allowing users to log into multiple Google and other accounts in the same browser instance. The new tab page was also redesigned and separated into four horizontally scrollable screens, providing access to most visited pages, Google apps, plus two identified pages. The <b>page</b> <b>reload</b> button was also redesigned along with {{minor changes to the}} URL bar. The first stable version of Chrome and Chromium 12 released was 12.0.742.91 which brought malware detection and support for hardware-accelerated 3D CSS transforms.|$|E
50|$|The {{client-side}} (Web browser) technologies used in Web 2.0 development include Ajax and JavaScript frameworks. Ajax programming uses JavaScript and the Document Object Model {{to update}} selected {{regions of the}} page area without undergoing a full <b>page</b> <b>reload.</b> To allow users to continue {{to interact with the}} page, communications such as data requests going to the server are separated from data coming back to the page (asynchronously). Otherwise, the user would have to routinely wait for the data to come back before they can do anything else on that page, just as a user has to wait for a page to complete the reload. This also increases overall performance of the site, as the sending of requests can complete quicker independent of blocking and queueing required to send data back to the client. The data fetched by an Ajax request is typically formatted in XML or JSON (JavaScript Object Notation) format, two widely used structured data formats. Since both of these formats are natively understood by JavaScript, a programmer can easily use them to transmit structured data in their Web application. When this data is received via Ajax, the JavaScript program then uses the Document Object Model (DOM) to dynamically update the Web page based on the new data, allowing for a rapid and interactive user experience. In short, using these techniques, Web designers can make their pages function like desktop applications. For example, Google Docs uses this technique to create a Web-based word processor.|$|E
50|$|Xuheki is {{a web-based}} IMAP client written in Perl. It is {{completely}} build upon Ajax technology, i.e. {{there are no}} <b>page</b> <b>reloads.</b> Xuheki is released under the GNU General Public License. It uses persistent IMAP connections. The IMAP operations are not handled by the webserver itself, but by a Perl daemon which maintains connection to the IMAP server.|$|R
50|$|Ajax is not {{a single}} technology, but rather a group of technologies. HTML and CSS can be used in {{combination}} to mark up and style information. The DOM is accessed with JavaScript to dynamically display - and allow the user to interact with - the information presented. JavaScript and the XMLHttpRequest object provide a method for exchanging data asynchronously between browser and server to avoid full <b>page</b> <b>reloads.</b>|$|R
40|$|There's no need {{to reinvent}} the wheel every time you run into a problem with ASP. NET's Model-View-Controller (MVC) framework. This concise {{cookbook}} provides recipes to help you solve tasks many web developers encounter every day. Each recipe includes the C# code you need, along with a complete working example of how to implement the solution. Learn practical techniques for applying user authentication, providing faster <b>page</b> <b>reloads,</b> validating user data, filtering search results, and many other issues related to MVC 3 development. These recipes help you: Restrict access to views with passwor...|$|R
40|$|RJS {{templates}} are {{an exciting}} and powerful {{new type of}} template added to Rails 1. 1. Unlike conventional Rails templates that generate HTML or XML, RJS templates generate JavaScript code that is executed when it is returned to the browser. This JavaScript generation allows you to perform multiple page updates in-place without a <b>page</b> <b>reload</b> using Ajax. All the JavaScript you need is generated from simple templates written in Ruby. This document helps you get acquainted with how RJS templates fit into the Rails framework and gets you started with a few easy-to-follow examples...|$|E
40|$|WebMole is a {{browser-based}} {{tool that}} automatically and exhaustively explores all pages inside a web application. Contrarily to classical web crawlers, which only explore pages accessible through regular anchors, WebMole can {{find its way}} through Ajax applications that use JavaScript-triggered links, and handles state changes that do not involve a <b>page</b> <b>reload.</b> User-defined functions called oracles {{can be used to}} bound the range of pages explored by WebMole to specific parts of an application, as well as to evaluate Boolean test conditions on all visited pages. Overall, WebMole can prove a more flexible alternative to automated testing suites such as Selenium WebDriver...|$|E
40|$|The aim of {{the thesis}} is that the users, who have no prior {{knowledge}} about web technologies or have no programming skills, can create their own website. When developing the web application we had to select the most appropriate technologies for development first. Next, we had to determine the required functionality, which {{was followed by the}} development of the application [...] The application offers an user interface, where the user can enter the content, design the appearance and change the structure of the components (themes). The changes are applied in real time, which enables a faster and easier workflow while creating the website, with no <b>page</b> <b>reload</b> needed for each change. Users can build their own website through the browser, which saves them the time and funds required, which would otherwise have to be invested in the development. The application, which was developed in the scope of the thesis, is primarily meant for small business owners, who would like to market their service on the internet, bloggers, product presentations and event presentations. The developed application serves as a prototype of a larger software as a service system...|$|E
50|$|Through Java, JavaScript, DHTML, Flash, Silverlight {{and other}} technologies, application-specific {{methods such as}} drawing on the screen, playing audio, {{and access to the}} {{keyboard}} and mouse are all possible. Many services have worked to combine all of these into a more familiar interface that adopts the appearance of an operating system. General purpose techniques such as drag and drop are also supported by these technologies. Web developers often use client-side scripting to add functionality, especially to create an interactive experience that does not require <b>page</b> <b>reloading.</b> Recently, technologies have been developed to coordinate client-side scripting with server-side technologies such as ASP.NET, J2EE, Perl/Plack and PHP.|$|R
25|$|While all of {{this was}} happening, the open source and {{developer}} communities set to work to revolutionize what could be done with JavaScript. This community effort was sparked in 2005 when Jesse James Garrett released a white paper in which he coined the term Ajax, and described a set of technologies, of which JavaScript was the backbone, used to create web applications where data can be loaded in the background, avoiding the need for full <b>page</b> <b>reloads</b> and leading to more dynamic applications. This resulted in a renaissance period of JavaScript usage spearheaded by open source libraries and the communities that formed around them, with libraries such as Prototype, jQuery, Dojo Toolkit, MooTools, and others being released.|$|R
50|$|The UpdatePanel is an ASP.NET server {{control that}} updates {{portions}} {{of a web}} <b>page</b> without <b>reloading</b> it. Through a mechanism called asynchronous postback, the HTML for {{the region of the}} page wrapped by the control is sent by the server asynchronously through an Ajax request.|$|R
40|$|Today web {{applications}} {{have become}} a necessity and many companies use them as a communication tool {{to keep in touch}} with their customers. The usage of Web Application in current time increases as the numberof internet users has been rised. For reason of Rich Internet Application, the desktop application developer wasmoved to web application developer with AJAX technology. BINUS School Serpong is a Cambridge Curriculum base International School that uses web application for access every information about the school. By usingAJAX, performance of web application should be improved and the bandwidth usage is decreased. Problems thatoccur at BINUS School Serpong is not all part of the web application that uses AJAX. This paper introducesusage of AJAX in ASP. NET with C# programming language in web application BINUS School Serpong. It is expected by using ASP. NET AJAX, BINUS School Serpong website performance will be faster because of reducing web <b>page</b> <b>reload.</b> The methodology used in this paper is literature study. Results from this study are to prove that the ASP. NET AJAX can be used easily and improve BINUS School Serpong website performance. Conclusion of this paper is the implementation of ASP. NET AJAX improves performance of web application in BINUS School Serpong...|$|E
40|$|Project (M. S., Computer Science) [...] California State University, Sacramento, 2010. In this project, I am {{planning}} {{to develop a}} plug in module that can {{be integrated into the}} web based application. The aim of this application is to provide email-services, calendar services and chat services dynamically within the browser. I am responsible for developing Chat Service and Calendar service. For example, in Google apps, the user can open the Gmail and while working on this, the user can see the friends who are online without changing a window or logging into another chat messenger and also will be able to open the calendar and see the contents. In a single browser window, the user is able to view and modify the different applications dynamically. The client-side/web browser technologies used in Web 2. 0 development are JavaScript and Ajax (XML). Ajax programming uses JavaScript to upload and download new data from the web server without undergoing a full <b>page</b> <b>reload.</b> Chat service is developed using Java and Ajax technology and the Mysql database. It has all the basic features that we see in general popular chat applications like Yahoo chat or Skype. Java technologies and Ajax framework makes the application more scalable and compatible to integrate with other application. The GUI part is greatly enhanced for better end user experiences. Calendar service application is provided with some of the basic features, such as ability to schedule one or more events on a particular day, a standard view that can show any month, with event times and titles listed in order and users will be able to open the application like any other application. Computer Scienc...|$|E
40|$|In {{this paper}} we present our {{experiences}} with the cleaning of Web client and proxy usage logs, based on a long-term browsing study with 25 participants. A detailed clickstream log, recorded using a Web intermediary, was combined with a second log of user interface actions, which was captured by a modified Firefox browser for {{a subset of the}} participants. The consolidated data from both records revealed many page requests that were not directly related to user actions. For participants who had no ad-filtering system installed, these artifacts made up one third of all transferred Web pages. Three major reasons could be identified: HTML Frames and iFrames, advertisements, and automatic <b>page</b> <b>reloads.</b> The experiences made during the data cleaning process might help other researchers to choose adequate filtering methods for their data...|$|R
40|$|The {{objective}} of this thesis project focuses on designing and implementing a game portal for web-based motion games whilst achieving high usability. Many systems lack the creativ- ity to design web-usability with all the technical requirements and this study addresses this problem by implementing a front-end system that uses agile methodology with competitive analysis and consumes the back-end system with RESTful architecture by using AngularJS web application framework. Users {{were involved in the}} implementation process repetitively and the usability test was done with think aloud protocol and System Usability Scale which involves a questionnaire on paper. It was concluded that a clear and interactive navigation bar made it very useful for users to hover through the website. Having the notifications fixed on the upper right side of the navigation bar made them easily perceived by the users and including all user-related functions under username helped the user reach them easily. It was also concluded that modal view prevented <b>page</b> <b>reloading</b> by gathering users, attention at one point. Adding visual feedback functions such as highlighting the hovered or clicked link were appreciated by the users. ...|$|R
5000|$|A {{prominent}} {{feature in}} version 5.1 is the workplan gantt editor. This is a [...]NET tool powered by RadiantQ designed {{to streamline the}} project management process. This improved the classic workplan management pages by reducing the need to <b>reload</b> <b>pages</b> and allowing a Project Manager to review the effects of their changes prior to saving them.|$|R
30|$|As already {{mentioned}} in “Review and comparison”, {{there are many}} web-based applications focusing on editing, research and analysis of cultural content, augmented reality views of monuments and Information Spaces for archaeological parks (Ardito et al. (2013). Nowadays, web technologies offer many new features that can be employed by applications assisting archaeological excavations. Digital Cultural Heritage Map (DCHM) (Mousouris and Styliaras 2013) is such an indicative application that has exploited many such features in order to implement a CMS for content experts to populate a digital map. DCHM may operate uniformly on all devices supporting HTML, without requiring installations or upgrades. Web sockets {{have been used for}} content communication, while extensive use of HTML 5 and AJAX has permitted continuous content editing and updating without requiring <b>page</b> <b>reloading.</b> Responsive design consideration has allowed the map to operate smoothly on any screen. HTML 5 ’s Geolocation API has been employed in order to integrate the web interface with map functionality. JavaScript is used to collect data from various components and handle errors, while OpenLayers are used to render a point on a vector layer. HTML 5 ’s localStorage API has been used to implement “My Favorites”, a list of preferred cultural locations. The video gallery uses the HTML 5 video tag that makes video embedding simpler, straightforward and plug-in independent. Editing of textual content is made via HTML 5 forms. The Drag and Drop API allows to drag and upload files on the browser via event listeners. Files are uploaded using the xmlHttpRequest 2 API.|$|R
50|$|Bandwidth: A stylesheet, {{internal}} or external, specifies the style once {{for a range}} of HTML elements selected by , type or relationship to others. This is much more efficient than repeating style information inline for each occurrence of the element. An external stylesheet is usually stored in the browser cache, and can therefore be used on multiple <b>pages</b> without being <b>reloaded,</b> further reducing data transfer over a network.|$|R
5000|$|The {{following}} 53 quarterbacks {{have led}} their team to an NFL or [...] AFL title. Super Bowls before the 1970 AFL-NFL merger {{are not included}} in total championship count.Sort chart by clicking on heading. <b>Reload</b> <b>page</b> to return to original form.Sorting Team in ascending order will list all champion quarterbacks for each team in the order they won the title game for their team.|$|R
5000|$|... "Better Than You" [...] {{is a song}} by American {{heavy metal}} band Metallica. It is the fifth track on their seventh album, ReLoad. The song was {{originally}} titled [...] "Better". It won the 1999 Grammy Award for Best Metal Performance, it was the band's fourth award in that category. The song is about somebody who's obsessed of the struggle {{to be better than}} somebody else. The band performed a jam of the song {{for the first time in}} London in 1995. The single cover features the same picture as the cover of Metallica's Cunning Stunts as well as on the final <b>page</b> of <b>Reload.</b> The song qualifies on all grounds, lyrics full of festering resentment, Hammett giving lengthy solo.|$|R
50|$|TM: Total {{minutes is}} a metric {{being used by}} Nielsen/NetRatings to measure total time spent on a Web page rather {{than the number of}} Web page views. On July 10, 2007, Nielsen {{announced}} that they would be relying on TM as their primary metric for measuring Web page popularity, due to changes in the way Web pages provide content through audio and video streaming and by refreshing the same <b>page</b> without totally <b>reloading</b> it. <b>Page</b> refreshes are one aspect of Rich Internet Applications (RIA). RIA technologies include AJAX (Asynchronous JavaScript and XML) and Microsoft Silverlight.|$|R
50|$|With {{the rise}} of royalty rates, Yahoo signed a deal with CBS Radio that {{effectively}} eliminated LAUNCHcast as it had previously existed, replacing it with 150 pre-programmed stations as well as CBS's local music, news/talk, and sports stations. Yahoo Q&A pages attempted to downplay loss of functionality these changes entailed. Personalized stations ceased to exist, though {{for a short time}} Yahoo! did save previous users' song, artist and album ratings. Since the new format organizes radio stations via genre, listeners have very limited range in what music they hear unless they regularly switch from station to station. This change also eliminated the feature that suggested songs and artists based on the user's ratings. Listeners have the option to listen to those stations in high quality (broadband) audio as well as using the 6 skips-per-hour (not applicable on local stations). One way around the inability to skip songs is to simply hit the browser's refresh button. While it did take time for the <b>page</b> to <b>reload,</b> it was faster than waiting for a song to finish.|$|R
50|$|Oppose to the {{traditional}} MageFront (read: Magento front-end) TheRake.com is built with a ReactJS front-end, running on a NodeJS server. A technology which makes sure that the full website is rendered on the server side. Next to all of this, the webshop is fully build as a Single Page Application. With a SPA all code is retrieved by your browser with a single page load. All the changing and dynamic parts {{are added to the}} page as necessary. The <b>page</b> does not <b>reload</b> at any point in the process, it just changes what is shown to the visitor, making the user experience faster then ever.|$|R
40|$|Ajax-enabled web {{applications}} {{represent a}} new breed of rich and interactive websites. Ajax prevents the reloading of entire web pages by transmitting small amounts of asynchronous data in the background, thereby allowing users to interact directly with a website without waiting for <b>page</b> <b>reloads.</b> This method masks the round trip and transmission latency of network connections. In response, {{attempts have been made to}} identify those factors that are associated with Ajax performance. Past research has studied Ajax performance and found varying degrees of performance improvement when compared with the traditional HTML request-response model. Current approaches measure the relative performance of Ajax applications against an equivalent non-Ajax application based on response size, service times, traffic patterns, response times, total byte size, and latency. Notable limitations with current approaches include the lack of a general measurement framework and empirical research examining end-to-end Ajax performance over high-delay bandwidth networks. As the use of Ajax increases, the development of a general framework for measuring end-to-end Ajax performance is warranted to better understand Ajax performance in high-delay bandwidth networks. This dissertation improves upon previous work in this field by introducing a measurement framework to facilitate the end-to-end measurement of Ajax performance in a satellite environment. This investigation 2 ̆ 7 s artifacts include the framework design and a proof of concept designed to validate the framework by using it to measure response time using application-level traces of actual HTTP request-response and XHR calls. This research included the development of a prototype used in conjunction with an active probing measurement tool to measure and compare overall response time of XHR and HTTP calls. The prototype was used in the proof of concept to evaluate the HTTP and XHR calls across an emulated satellite network. Subsequently, a statistical analysis was performed on the dataset collected from the proof of concept. The conclusion supported by a paired t-test indicated that Ajax performs better than HTML in two loss rates. In particular, use of DOM-based updates coupled with the XHR call in an Ajax application results in both lower mean response/request size, and lower mean user experience time. Recommendations for future research include the utilization of the framework to explore and compare additional Ajax components and/or explore the impacts of the existing work in different satellite environments...|$|R
40|$|Abstract: AJAX {{became one}} of the major topics in the last year. It is often {{mentioned}} together with the “web 2. 0 ” concept but isactually independent ofit. In this short article, asummary of experiences with AJAX is given. This article concentrates on the situation in web applications that are using AJAX and how they support the separation of business logic and design (i. e. view). 1 Introduction AJAX {{is probably one of the}} most important hypes that have appeared inthe last years. Today, the word “AJAX ” can beseen everywhere. Astudy by Gartner recently rated AJAX asone of the five most important technologies inthe next two years with high impact for the IT landscape (see [Co 06]). AJAX stands for A synchronous J avaScript a nd X ML. Itdescribes the idea tochange specific parts of aweb <b>page</b> without <b>reloading</b> the whole <b>page.</b> AJAX “helps speed up computer operations by cutting down onthe need to request fresh Web pages from a distant server computer. Instead, Ajax applications can request smaller chunks of data to update aWeb page already on auser’s screen. ” [MB 05]. Within the AJAX approach...|$|R
25|$|Like {{many other}} Google web applications, Google Maps uses JavaScript extensively. As the user drags the map, the grid squares are {{downloaded}} from the server and {{inserted into the}} page. When a user searches for a business, the results are downloaded in the background for insertion into the side panel and map; the <b>page</b> is not <b>reloaded.</b> Locations are drawn dynamically by positioning a red pin (composed of several partially transparent PNGs) {{on top of the}} map images. A hidden IFrame with form submission is used because it preserves browser history. The site also uses JSON for data transfer rather than XML, for performance reasons. These techniques both fall under the broad Ajax umbrella. The result is termed a slippy map and is implemented elsewhere in projects such as OpenLayers.|$|R
50|$|A single-page {{application}} (SPA) is a {{web application}} or {{web site that}} fits on a single web page {{with the goal of}} providing a user experience similar to that of a desktop application. In an SPA, either all necessary code - HTML, JavaScript, and CSS - is retrieved with a single page load, or the appropriate resources are dynamically loaded and added to the page as necessary, usually in response to user actions. The <b>page</b> does not <b>reload</b> at any point in the process, nor does control transfer to another page, although the location hash or the HTML5 History API can be used to provide the perception and navigability of separate logical pages in the application. Interaction with the single page application often involves dynamic communication with the web server behind the scenes.|$|R
50|$|A dynamic web <b>page</b> is then <b>reloaded</b> by {{the user}} or by a {{computer}} program to change some variable content. The updating information could come from the server, or from changes made to that page's DOM. This {{may or may not}} truncate the browsing history or create a saved version to go back to, but a dynamic web page update using Ajax technologies will neither create a page to go back to, nor truncate the web browsing history forward of the displayed page. Using Ajax technologies the end user gets one dynamic page managed as a single page in the web browser while the actual web content rendered on that page can vary. The Ajax engine sits only on the browser requesting parts of its DOM, the DOM, for its client, from an application server.|$|R
50|$|Like {{many other}} Google web applications, Google Maps uses JavaScript extensively. As the user drags the map, the grid squares are {{downloaded}} from the server and {{inserted into the}} page. When a user searches for a business, the results are downloaded in the background for insertion into the side panel and map; the <b>page</b> is not <b>reloaded.</b> Locations are drawn dynamically by positioning a red pin (composed of several partially transparent PNGs) {{on top of the}} map images. A hidden IFrame with form submission is used because it preserves browser history. The site also uses JSON for data transfer rather than XML, for performance reasons. These techniques both fall under the broad Ajax umbrella. The result is termed a slippy map and is implemented elsewhere in projects such as OpenLayers.|$|R
