7|226|Public
40|$|Under the fixed-path e-cube routing in mesh multicomputers, we {{evaluate}} {{the performance of}} several low-overhead <b>packet</b> <b>sequencing</b> and flit multiplexing methods. In the presence of concurrent inter-node communication traffic, we found that unless proper <b>packet</b> <b>sequencing</b> is employed, adding more communication resources, such as links and buffers, can actually degrade the network performance. A good packet-sequencing policy combined with proper flit multiplexing is shown to improve performance by more than 30 %. 1 Introduction The use of virtual channels multiplexed over each physical channel was introduced as a mechanism to accomplish deadlock-freedom by placing routing restrictions at intermediate nodes [1]. Virtual channels were also found to improve the network throughput via the increased sharing of each physical channel and the resulting reduction of packet blocking [2]. That is, when there are multiple virtual channels per physical channel, packets of these virtual channels are al [...] ...|$|E
40|$|Optimized data {{transfer}} services are highly demanded nowadays, {{due to the}} large amounts of data which are frequently being produced and accessed. In this paper we consider several {{data transfer}} service optimization problems (optimal server location in path networks, optimal <b>packet</b> <b>sequencing</b> and minimum makespan packet scheduling), for which we provide novel algorithmic solutions. Comment: Proceedings of the International Symposium on Sustainable Development in Conditions of Economic Instability, Satu Mare, 26 - 27 June, 200...|$|E
40|$|The {{paper was}} {{presented}} at the International Symposium on Sustainable Development in Conditions of Economic Instability, Satu Mare, 26 - 27 June, 2009. Some of the algorithms described in the paper provided the inspiration for some tasks in several contests where the authors were members of the scientific committee. International audienceOptimized data transfer services are highly demanded nowadays, due to the large amounts of data which are frequently being produced and accessed. In this paper we consider several data transfer service optimization problems (optimal server location in path networks, optimal <b>packet</b> <b>sequencing</b> and minimum makespan packet scheduling), for which we provide novel algorithmic solutions...|$|E
40|$|Website {{fingerprinting}} {{allows a}} local, passive observer monitoring a web-browsing client’s encrypted channel to determine her web activity. Previous attacks {{have shown that}} website fingerprinting could {{be a threat to}} anonymity networks such as Tor under laboratory conditions. However, there are significant differences between laboratory conditions and realistic conditions. First, in laboratory tests we collect the training data set together with the testing data set, so the training data set is fresh, but an attacker {{may not be able to}} maintain a fresh data set. Second, laboratory <b>packet</b> <b>sequences</b> correspond to a single page each, but for realistic <b>packet</b> <b>sequences</b> the split between pages is not obvious. Third, <b>packet</b> <b>sequences</b> may include background noise from other types of web traffic. These differences adversely affect website fingerprinting under realistic conditions. In this paper, we tackle these three problems to bridge the gap between laboratory and realistic conditions for website fingerprinting. We show that we can maintain a fresh training set with minimal resources. We demonstrate several classification-based techniques that allow us to split full <b>packet</b> <b>sequences</b> effectively into sequences corresponding to a single page each. We describe several new algorithms for tackling background noise. With our techniques, we are able to build the first website fingerprinting system that can operate directly on <b>packet</b> <b>sequences</b> collected in the wild...|$|R
5000|$|Each subproblem is {{extended}} by a <b>packet</b> <b>sequence</b> {{which we call}} [...] "tail", which must match {{one of the following}} patterns: ...|$|R
40|$|Web {{users of}} Tor protect their {{anonymity}} by communicating to web servers through proxy relays using layered encryption. Attackers and eavesdroppers {{situated at the}} user’s network or the first relay’s network cannot read the contents of these messages, including the destination, because of encryption. However, it has been known [1], [2], [3] that Tor traffic may be susceptible to website fingerprinting, wherein the attacker guesses the true destination by leveraging <b>packet</b> <b>sequence</b> patterns, such as size, order, and timing. In the above works, the attacker is given a <b>packet</b> <b>sequence</b> which corresponds to a single web page load, and asked which web page this sequence came from. This is an unfair assumption that benefits the attacker, as a practical attacker cannot trivially identify the start and end of each <b>packet</b> <b>sequence.</b> Real users may load partial pages, continuous pages...|$|R
40|$|Abstract—Available-bandwidth {{measurements}} {{determine the}} amount of spare capacity across a network connection without requiring access to intervening network elements, hence their value in supporting multi-provider service-level agreements and isolating network bottlenecks. However, examination of the various forms of available-bandwidth measurements currently being developed reveals areas for improvement in the way these metrics are measured. To obtain accurate results, existing measurement methodologies require precision in both the generation and capture of carefully structured sequences of packets. The Internet Monitoring Platform (IMP), described herein, addresses these concerns and expedites our comparisons of various available-bandwidth measurement techniques. IMP leverages operating system and hardware improvements, and incorporates a generalized form of <b>packet</b> <b>sequencing</b> that facilitates new measurement techniques. I...|$|E
40|$|Abstract — The Internet {{architecture}} {{provides an}} unsequenced datagram delivery service. Nevertheless, many higher-layer protocols, such as TCP, assume that packets are usually delivered in sequence, and consequently suffer significant degradation when packets are reordered in flight. While {{there have been}} several recent proposals to create protocols that adapt to reordering, evaluating their effectiveness requires understanding the dynamics of the reordering processes prevalent in the Internet. Unfortunately, Internet <b>packet</b> <b>sequencing</b> is a poorly characterized and understudied behavior. This failing can be largely attributed to the lack of accurate and universally applicable methods for measuring packet reordering. In this paper, we describe a new set of active measurement techniques that can reliably estimate one-way end-to-end reordering rates to and from arbitrary TCP-based servers. We validate these tools in a controlled setting and show how they can be used to measure the time-domain distribution of the reordering process along a given path. I...|$|E
40|$|This thesis {{includes}} two parts. In the first part, a new ATM switch architecture which employs multiple shared memory based switches as building modules is proposed. This architecture, called the Multiple Shared Memory (MSM) switch, {{has the best}} delay-throughput performance and permits global sharing of the total buffer space by all input/output ports. It also preserves <b>packet</b> <b>sequencing</b> and provides natural fault tolerance capability to module failures. One significance of this proposed switch is its substantial reduction of the buffer space. ^ In the second part, a new buffer management policy called Drop on Demand is proposed. This policy improves the switch performance {{when compared with the}} existing ones under all traffic conditions. The key idea of this policy is that it dynamically allocates buffer space on the demand of each output port. With its simplicity, this policy may be easily implemented in a shared memory based switch. The optimal policy problem is also addressed and it is shown that the optimal buffer management policy can be obtained by solving a linear programming problem in a recursive fashion. ...|$|E
40|$|In this paper, {{we propose}} an {{efficient}} method {{to estimate the}} end-to-end Available Bandwidth (AB) of a network path. This method employs multi-rate (MR) probe <b>packet</b> <b>sequences</b> with Kalman filtering. Our proposed method {{is an extension of}} the Bandwidth Available in Real Time (BART) method, so that the probe <b>packet</b> <b>sequences</b> are injected into the network path of interest. Using this technique, the probing rate within each probing sequence is varied. We show that by a marginal addition to the computation complexity compared to the conventional BART technique, the proposed method converges faster than that of BART and achieves a more accurate estimation. In addition, this method is more robust against inappropriate initial value of Kalman filter than the conventional BART method. Furthermore, we obtain the estimation error of MR-BART based on the parameters of the probe <b>packet</b> <b>sequences...</b>|$|R
5000|$|It {{is common}} to inform the {{transmitter}} immediately if {{a gap in the}} <b>packet</b> <b>sequence</b> is detected. HDLC has a special REJ (reject) packet for this.|$|R
30|$|Conversely, if the {{protocol}} used {{to transport the}} high-priority traffic classes is different to the TCP protocol, the ability to detect out-of-order delivery {{will depend on the}} upper-laying protocol (UDP/RTP/RTCP) used to reconstruct the sender’s <b>packet</b> <b>sequences</b> at the destined user application.|$|R
30|$|Data packet {{transmission}} on idle paths is simulated with the heartbeat mechanism. Heartbeat packets are enlarged to simulate real data packets; their packet type is changed to discriminate data packets for probing, and the sequence {{numbers of the}} packets are filled in the idle column. The transmission condition is determined from the <b>packet</b> <b>sequence</b> numbers.|$|R
5000|$|Many {{communication}} protocols apply serial number arithmetic to <b>packet</b> <b>sequence</b> numbers in their {{implementation of a}} sliding window protocol. Some versions of TCP use [...] protection against wrapped sequence numbers (PAWS). PAWS applies the same serial number arithmetic to packet timestamps, using the timestamp {{as an extension of}} the high-order bits of the sequence number.|$|R
40|$|Website {{fingerprinting}} attacks allow a local, passive eavesdropper {{to determine}} a client's web activity by leveraging features from her <b>packet</b> <b>sequence.</b> These attacks break the privacy expected by users of privacy technologies, including low-latency anonymity networks such as proxies, VPNs, or Tor. As a discipline, website fingerprinting is an application of machine learning techniques to the diverse field of privacy. To perform a website fingerprinting attack, the eavesdropping attacker passively records the time, direction, {{and size of the}} client's packets. Then, he uses a machine learning algorithm to classify the <b>packet</b> <b>sequence</b> so as to determine the web page it came from. In this work we construct and evaluate three new website fingerprinting attacks: Wa-OSAD, an attack using a modified edit distance as the kernel of a Support Vector Machine, achieving greater accuracy than attacks before it; Wa-FLev, an attack that quickly approximates an edit distance computation, allowing a low-resource attacker to deanonymize many clients at once; and Wa-kNN, the current state-of-the-art attack, which is effective and fast, with a very low false positive rate in the open-world scenario. While our new attacks perform well in theoretical scenarios, there are significant differences between the situation in the wild and in the laboratory. Specifically, we tackle concerns regarding the freshness of the training set, splitting <b>packet</b> <b>sequences</b> so that each part corresponds to one web page access (for easy classification), and removing misleading noise from the <b>packet</b> <b>sequence.</b> To defend ourselves against such attacks, we need defenses that are both efficient and provable. We rigorously define and motivate the notion of a provable defense in this work, and we present three new provable defenses: Tamaraw, which is a relatively efficient way to flood the channel with fixed-rate packet scheduling; Supersequence, which uses smallest common supersequences to save on bandwidth overhead; and Walkie-Talkie, which uses half-duplex communication to significantly reduce both bandwidth and time overhead, allowing a truly efficient yet provable defense...|$|R
40|$|Intrusion Detection is a {{broad and}} complex field in cybersecurity. There are {{varieties}} of existing methods {{with varying degrees of}} success, which attempt to classify various types of traffic as benign, or attacking. A tool that can do this consistently and reliably, and with minimal overhead is ideal, benefiting with respect to analysis overhead, as well as level of information privilege. This paper attempts to provide such a tool through <b>packet</b> <b>sequence</b> analysis. <b>Packet</b> <b>sequence,</b> as referred to in this paper, is the order and number of the exchange of packets. Sequential probability ratio test (SPRT) analysis is done on the sequence history of each pair of IP addresses in attempt to determine if the flow can be classified as an attack based solely on this. SPRT is performed for single class, two class, and with more specialized attack classes. Through manipulation of a large variety of parameters and analysis of results indicated that <b>packet</b> <b>sequence</b> can, under the right circumstances provide an indication of an attack. While this is true most of the attacks seen in the data tested, there is a high level of parameter tuning process involved. While likely not all attacks will be identifiable by this method, for those attacks which do not appear readily and obviously useful, there are several which show promise with different configurations of parameters, and could potentially be useful with a higher degree of tuning...|$|R
30|$|In {{order to}} find the {{suspicious}} packets, most of IDSs employ a pattern matching algorithm. The algorithm checks {{the presence of a}} signature in the incoming <b>packet</b> <b>sequence</b> and outputs the location of the string within the packet. The algorithm must be fast enough to detect the malicious behavior, and it must be scalable {{in order to meet the}} increase in both the number of signatures and the link speed.|$|R
50|$|A problem {{occurs with}} New Reno {{when there are}} no packet losses but instead, packets are reordered by more than 3 <b>packet</b> <b>sequence</b> numbers. When this happens, New Reno mistakenly enters fast recovery, but when the reordered packet is delivered, ACK sequence-number {{progress}} occurs and from there until the end of fast recovery, every bit of sequence-number progress produces a duplicate and needless retransmission that is immediately ACKed.|$|R
50|$|T.38 {{provides}} {{facilities to}} eliminate the effects of packet loss through data redundancy. When a packet is sent, either zero, one, two, three, or even more of the previously sent packets are repeated. (The specification does not impose a limit.) This increases the network bandwidth required (it’s still much less than not using T.38) but it allows the receiving gateway to reconstruct the complete <b>packet</b> <b>sequence,</b> even with a fairly high level of packet loss.|$|R
30|$|Figure 1 c {{shows the}} <b>packet</b> <b>sequence</b> number before/after an RTOexpires. In the figure, each dot {{indicates}} the sequence number of a data packetwhich is received {{at the time}} shown in x-axis, For example, two datapackets arrived at a TCP receiver in order at 153.14 s. Also, {{we can see that}} twoout-of-order packets are received at 153.16 s. After 1.2 s of the idle time, an RTOis expired at 154.34 s and 8 packets are retransmitted until 154.67 s.|$|R
40|$|This paper {{proposes a}} novel method {{to study the}} {{modelling}} problem of a networked control system. We first identify the minimum <b>packet</b> drop <b>sequences</b> for a given plant or controller using {{the dynamics of the}} plant or controller. Then we represent these minimum <b>packet</b> drop <b>sequences</b> as states of a Markov chain. The state transition of the Markov chain is triggered at each packet transmission. Finally, this new modelling technique is demonstrated using the most commonly employed PID controller...|$|R
30|$|To {{reconstruct}} the entire provenance graph when the BFP scheme is used, Sultana et al. [23] use a recursive backtracking algorithm with the neighboring information of nodes at the BS. Moreover, they chain the adjacent <b>packet</b> <b>sequence</b> numbers together along the packet path to detect provenance forgery and packet dropping attacks. We {{believe that such}} a method is applicable to the PPF scheme too, where the PPF needs to integrate the subgraphs instead of the node IDs to {{reconstruct the}} provenance.|$|R
30|$|We checked {{how much}} time the sender spent time on waiting to trigger RTOs. Figure 8 b shows the <b>packet</b> <b>sequence</b> number around when theback-off value reaches 32 in the scenario. As shown in the figure, successiveRTOs are {{triggered}} at 105.36, 108.76, 115.26, 127.65, and 151.30. In each RTO,the sender’s waiting time increases exponentially like about 2, 3, 6, 12,and 24 s. In other words, a TCP sender wastes 47 s during the time from 103 to 151 s in the scenario.|$|R
40|$|Automatic network {{recognition}} {{offers a}} promising {{framework for the}} integration of the cognitive concept at the network layer. This work addresses the problem of automatic classification of technologies operating in the ISM band, with particular focus on Wi-Fi vs. Bluetooth recognition. The proposed classifier is based on feature extraction related to time-varying patterns of <b>packet</b> <b>sequences,</b> i. e. MAC layer procedures, and adopts different linear classification algorithms. Results of classification confirmed the ability to reveal both technologies based on Mac layer feature identification...|$|R
5000|$|In {{all cases}} a TDMoIP packet commences with PSN headers. These are the {{standard}} headers {{used by the}} PSN technology, e.g. the 20-byte header of UDP/IP, or the label-stack of MPLS. After these headers come the [...] "PW label", a four-byte MPLS-like label that serves as to demultiplex different TDM PWs. After the PSN header comes the four-byte TDMoIP [...] "control word". The control word contains a 16-bit <b>packet</b> <b>sequence</b> number (needed to detect packet re-ordering and packet loss), payload length, and flags indicating defect conditions.|$|R
30|$|The two FEC streams shall use {{the same}} IP {{destination}} address (either unicast or multicast) for the associated media stream, but they must address different UDP destination ports {{in order to have}} independent <b>packet</b> <b>sequence</b> numbering for the two streams. This allows backward compatibility toward Level A receivers that are able to manage only one FEC stream. If the packet streams are sent to port N, the first FEC stream has to be sent to port N + 2, while the second FEC stream, when used, shall be sent to port N + 4.|$|R
30|$|At the {{receiver}} end, {{to detect the}} delivery of the out-of-order packets, two mechanisms were suggested. The first one is {{the addition of a}} two-bytes TCP option to the TCP header called a TCP <b>packet</b> <b>sequence</b> number (TPSN). If the initial value of the TPSN is zero, then it will be incremented with each data packet sent, including retransmitted data packets. Thus, in a case of retransmission, the TPSN will be different from the previous one. The second method is to add a time stamp to each data packet instead of a TPSN.|$|R
50|$|Because the timeout timer is reset {{whenever}} there is {{progress in the}} transmit buffer, this allows New Reno to fill large holes, or multiple holes, in the sequence space much like TCP SACK. Because New Reno can send new packets {{at the end of}} the congestion window during fast recovery, high throughput is maintained during the hole-filling process, even when there are multiple holes, of multiple packets each. When TCP enters fast recovery it records the highest outstanding unacknowledged <b>packet</b> <b>sequence</b> number. When this sequence number is acknowledged, TCP returns to the congestion avoidance state.|$|R
50|$|Another evasion {{technique}} is {{to craft a}} series of <b>packets</b> with TCP <b>sequence</b> numbers configured to overlap. For example, the first packet will include 80 bytes of payload but the second <b>packet's</b> <b>sequence</b> number will be 76 bytes {{after the start of}} the first packet. When the target computer reassembles the TCP stream, they must decide how to handle the four overlapping bytes. Some operating systems will take the older data, and some will take the newer data. If the IDS doesn't reassemble the TCP {{in the same way as}} the target, it can manipulated into either missing a portion of the attack payload or seeing benign data inserted into the malicious payload, breaking the attack signature. This technique can also be used with IP fragmentation in a similar manner.|$|R
40|$|Abstract. Routers perform {{expensive}} lookup {{operations in}} their router tables to find appropriate output interfaces to forward packets toward their final destinations. Over the years several works {{have been done}} to optimize the lookup operation. We {{consider that it is}} also equally important to decrease the number of lookup operations altogether. In this paper we promote the idea of niceness of an incoming <b>packet</b> <b>sequence</b> to show that some sequences are more likely to result in fewer lookup operations than others. In addition, we propose five new measures of difficulty to identify and measure the niceness of a sequence. ...|$|R
40|$|Abstract — Packet-level error {{models have}} great {{significance}} for the design and performance evaluation of higher layer wireless communication protocols. These models aim to characterize the statistical behavior of bursty <b>packet</b> error <b>sequences</b> encountered in digital wireless channels. In this paper, target <b>packet</b> error <b>sequences</b> are generated by computer simulations of a coded general packet radio service (GPRS) system with a typical urban (TU) channel and co-channel interference. A general design procedure of a generative model is then proposed by using a properly parameterized and sampled deterministic process with a threshold detector and two parallel mappers. Simulation {{results indicate that the}} proposed deterministic process based generative model (DPBGM) allows us to approximate very well the characteristics of the target <b>packet</b> error <b>sequences</b> with respect to the gap distribution (GD), error-free run distribution (EFRD), error cluster distribution (ECD), error burst distribution (EBD), error-free burst distribution (EFBD), block error probability distribution (BEPD), and packet error correlation function (PECF). Importantly, it is shown that both the accuracy and the efficiency of the suggested DPBGM outperform those of awidelyusedMarkovmodel...|$|R
25|$|Sequence number: (16 bits) The {{sequence}} number is incremented by {{one for each}} RTP data packet sent and {{is to be used}} by the receiver to detect packet loss and to restore <b>packet</b> <b>sequence.</b> The RTP does not specify any action on packet loss; it is left to the application to take appropriate action. For example, video applications may play the last known frame in place of the missing frame. According to , the initial value of the {{sequence number}} should be random to make known-plaintext attacks on encryption more difficult. RTP provides no guarantee of delivery, but the presence of sequence numbers makes it possible to detect missing packets.|$|R
30|$|Each node {{maintains}} a trust table {{based on the}} observed behavior of its neighbors. We do not record long observations for calculations of trust and trust table updates. Only the most recent m observed decisions are utilized to compute moving average of forwarding <b>packet</b> <b>sequences.</b> The value of m has to {{be large enough to}} obtain a fair evaluation of the forwarding rate but equally small enough to ensure that the forwarding rate actually corresponds to the current strategies [63]. The trust obtained above will be assumed as direct trust obtained as the first-hand information. Second-hand information is obtained from the recommendations from friend nodes and is derived by EigenTrust.|$|R
40|$|Network measurements, Statistics, Available Bandwidth. Available {{bandwidth}} (AB) {{defined as}} a minimum spare capacity of links constituting a network path is an important QoS characteristic of the path. We propose to improve {{a whole range of}} "probe-rate" AB measurement tools that send <b>sequences</b> of measurement <b>packets</b> (called "trains") across the network path. If transmission times of packets in the train, called One Way Delays (OWD), show an increasing trend as <b>packet</b> <b>sequence</b> number in the train increases, then AB is believed to be lower than {{the rate at which the}} train was sent. In contrast, an absence of a trend indicates that AB is higher than the rate of the train...|$|R
40|$|In this paper, {{we propose}} Multi-Rate Bandwidth Available in Real Time (MR-BART) to {{estimate}} the end-to-end Available Bandwidth (AB) of a network path. The proposed scheme {{is an extension of}} the Bandwidth Available in Real Time (BART) which employs multi-rate (MR) probe <b>packet</b> <b>sequences</b> with Kalman filtering. Comparing to BART, we show that the proposed method is more robust and converges faster than that of BART and achieves a more AB accurate estimation. Furthermore, we analyze the estimation error in MR-BART and obtain analytical formula and empirical expression for the AB estimation error based on the system parameters. Comment: 12 Pages (Two columns), 14 Figures, 4 Tables...|$|R
40|$|The WASPNET project {{proposed}} a <b>packet</b> <b>sequence</b> criterion to preserve end-to-end packet order in Optical Packet Switching (OPS) networks {{controlled by the}} Scattered Wavelength Path (SCWP) operational mode. This paper shows that this packet ordering methodology causes performance impairments, related to unbalanced wavelength usage in fiber links. This skewed usage is inherent to the WASPNET sequencing criterion. As a solution, a round-robin sequence criterion is proposed. The presented technique eliminates non-uniform wavelength utilization in fiber links for any traffic pattern, {{as well as the}} performance impairments associated. We also propose an optimum scheduling algorithm for OPS output-buffered switch fabrics, which preserves packet order by following the new sequencing criterion...|$|R
