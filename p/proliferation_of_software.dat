48|10000|Public
25|$|A {{wide variety}} of {{platforms}} has allowed different aspects of AI to develop, ranging from expert systems such as Cyc to deep-learning frameworks to robot platforms such as the Roomba with open interface. Recent advances in deep artificial neural networks and distributed computing {{have led to a}} <b>proliferation</b> <b>of</b> <b>software</b> libraries, including Deeplearning4j, TensorFlow, Theano and Torch.|$|E
5000|$|Data {{analysis}} services are offered by firms, {{also known as}} tab houses, that specialize in computer analysis of quantitative data such as those obtained in large surveys. Initially most data analysis firms supplied only tabulations (frequency counts) and cross tabulations (frequency counts that describe two or more variables simultaneously). With the <b>proliferation</b> <b>of</b> <b>software,</b> many firms now {{have the capability to}} analyze their own data, but, data analysis firms are still in demand.|$|E
5000|$|When {{existing}} {{software is}} mainly to in-house developments from the GDR. Machine-porting of programs western Z80-based home computer systems were very expensive due to technical {{differences in the}} rule. The easiest is the exchange program and the corresponding adaptation of software with the computers of the series Z 9001, KC 85/1 and KC 87The <b>proliferation</b> <b>of</b> <b>software</b> and the exchange of experiences carried out mainly through private contacts as well as newspaper ads, trade shows, by insertion of programs in magazines and broadcast on the radio, {{such as in the}} broadcast Rem [...] 27 From the state was the creation software, for example, about the Society for Sport and Technology (GST) with their computer section Sports promoted. Often, the GST {{was also one of the}} organizers of meetings and conferences.|$|E
5000|$|<b>Proliferation</b> <b>of</b> mass-market <b>software</b> {{meant that}} programmers {{would not want}} to compile for a {{specific}} pipeline structure. The algorithm can function with any pipeline architecture and thus software requires few architecture-specific modifications.|$|R
50|$|Marquis-Boire has {{conducted}} {{research on the}} global <b>proliferation</b> <b>of</b> targeted surveillance <b>software</b> and toolkits, including FinFisher and Hacking Team.|$|R
50|$|The Citizen Lab conducts {{groundbreaking}} {{research on}} the global <b>proliferation</b> <b>of</b> targeted surveillance <b>software</b> and toolkits, including FinFisher, Hacking Team and NSO Group.|$|R
40|$|In {{the present}} paper {{traditional}} software testing manners and technologies have been compared with the vibrant trends. The paper also discusses about the testing manners of today‟s trends that have been also changed due to <b>proliferation</b> <b>of</b> <b>software</b> and rapid change. Some complications in testing have also been highlighted and requirement of adopting advanced degree automation techniques have been discussed. The paper also describes different phases of testing techniques and its future prospects to make the testing a perfect remedy for a difficult and intractable problem...|$|E
30|$|Change {{is the new}} {{norm for}} the global {{healthcare}} sector. In fact, digitization of health and patient data is undergoing a dramatic and fundamental shift in the clinical, operating and business models and generally {{in the world of}} economy for the foreseeable future. This shift is being spurred by aging populations and lifestyle changes; the <b>proliferation</b> <b>of</b> <b>software</b> applications and mobile devices; innovative treatments; heightened focus on care quality and value; and evidence-based medicine as opposed to subjective clinical decisions—all of which are leading to offer significant opportunities for supporting clinical decision, improving healthcare delivery, management and policy making, surveilling disease, monitoring adverse events, and optimizing treatment for diseases affecting multiple organ systems [1, 2].|$|E
40|$|Nowadays, {{there is}} a huge <b>proliferation</b> <b>of</b> <b>software</b> based on {{traditional}} image-based 3 D reconstruction methods which use multiple images to extract 3 D models. However, sometimes {{it is not possible to}} obtain such images, mainly when damaged or destroyed buildings need to be documented and only single photographs or paintings exist or even when working with multiple images, parts of the scene appear in only one image due to occlusions or lack of features to match between images. This paper presents the sv 3 DVision software, a tool developed for the 3 D reconstruction and visualization from a single view which integrates approaches of Photogrammetry, Computer Vision and Computer Graphics. 1...|$|E
40|$|The {{increasing}} {{popularity of}} Qualitative Comparative Analysis (QCA) {{as a tool}} for social-scientific inquiry has also led to a <b>proliferation</b> <b>of</b> tailored <b>software.</b> Researchers now have the choice between three graphical interface (GUI) and three command line interface (CLI) solutions. In this article, we first present a brief overview <b>of</b> the QCA <b>software</b> market, following which we introduce the QCA package for the R environment by drawing operational parallels to fs/QCA, the most common GUI software...|$|R
50|$|The United States, {{several other}} American {{countries}} and the Philippines primarily use a different system of paper sizes compared {{to the rest of}} the world. The current standard sizes are unique to that continent, although due to the size of the North American market and <b>proliferation</b> <b>of</b> both <b>software</b> and printing hardware from the region, other parts of the world have become increasingly familiar with these sizes (though not necessarily the paper itself). Some traditional North American inch-based sizes differ from the Imperial British sizes described below.|$|R
40|$|The ready {{availability}} of computers, {{combined with the}} advent <b>of</b> sophisticated <b>software</b> development tools, {{has resulted in a}} <b>proliferation</b> <b>of</b> dental instructional <b>software.</b> The quality <b>of</b> these products varies widely. Working Group 5 of the Standards Committee for Dental Informatics has published an initial set of guidelines to help course designers develop high-quality instructional materials. In the future, these guidelines will evolve into standards. This article summarizes the guidelines and considers future actions that may be taken once the standards are in place...|$|R
40|$|Rapid {{advancement}} {{in computer technology}} in recent years, including easy accessibility, expansion of computer networks, and di. versity of applications, {{support the use of}} computer-assisted instruction (CAI) in second language education. All secondary schools in Japan now have computers and computer instruction. Misconceptions about computers and their capabilities persist, particularly among teachers. The <b>proliferation</b> <b>of</b> <b>software</b> makes many instructional applications feasible. In Japan, hardware is developing rapidly and becoming more affordable, but commercial educational softwa're is expensive and not well developed, despite interest among educators. Computers can be used in English-as-a-Second-Language instruction in many ways: preparation of lessons, instructional materials, and tests; professional information and materials exchange; classroom management; multi-media presentation; and for individualize...|$|E
40|$|Abstract. Open Source Software {{is often}} viewed as an anti-intellectual {{property}} regime. In contrast, we argue how intellectual property law {{is at the heart}} of open source model since licenses that organize the innovation and business relationships between developers, distributors and end-users are based on copyright law. The <b>proliferation</b> <b>of</b> <b>software</b> patents can, however be seen as a threat for the development and deployment of open source software. We present the nature of the threat and review a series of initiatives undertaken bytheopensourcecommunitytoaddressthemeffectively. These initiatives, such as the redesign of licenses and the creation of patent commons, are a testiment to a genuinely creative use of intellectual property law by the open source community, not its undermining. 1...|$|E
40|$|This paper {{provides}} a framework for evaluating healthcare software from a usability perspective. The framework {{is based on a}} review of both the healthcare software literature and the general literature on software usability and evaluation. The need for such a framework arises from the <b>proliferation</b> <b>of</b> <b>software</b> packages in the healthcare field, and from an historical focus on the technical and functional aspects, rather than on the usability, of these packages. Healthcare managers are generally unfamiliar with usability concepts, even though usability differences among software can {{play a significant role in}} the acceptance and effectiveness of systems. Six major areas of usability are described, and specific criteria which can be used in the software evaluation process are also presented...|$|E
40|$|Recent {{advances}} in geographic information systems (GIS) have {{made possible the}} spatial analysis of large datasets. The <b>proliferation</b> <b>of</b> GIS <b>software</b> {{has been accompanied by}} an increase in use of the systems by governments, businesses, nongovernmental organizations, and com-munity groups to analyze social issues. Potential analyses were initially limited by a lack of spatial data, however, and many development organizations began investing in the collection of such data. For example, numerous sur-veys of health-care facilities now use global positioning system (GPS) technology for georeferencing and map-ping of a country’s health facilities. The increasing availability of datasets that contain geographical identifiers and/or spatial coordinates has created new opportunities to perform spatial analysi...|$|R
40|$|Due to the <b>proliferation</b> <b>of</b> {{object-oriented}} <b>software</b> development, UML software {{designs are}} ubiquitous. The creation <b>of</b> <b>software</b> designs already enjoys wide software support through CASE (Computer-Aided Software Engineering) tools. However, {{there has been}} limited application of computer reasoning to software designs in other areas. Yet there is expert knowledge embedded in software design artefacts which could be useful if it were successfully retrieved. While the semantics tags are {{an important aspect of}} a class diagram, the approach formulated here uses only structural information. It is shown that by applying case-based reasoning and graph matching to measure similarity between class diagrams it is possible to identify proprieties of an implementation not encoded within the actual diagram, such as the domain, programming language, quality and implementation cost. The practical applicability of this research is demonstrated in the area of cost estimation...|$|R
40|$|In {{the current}} market there is a <b>proliferation</b> <b>of</b> {{knowledge}} management <b>software</b> solutions. The aim {{of this paper is}} to discuss issues concerned in selecting such a system to support knowledge workers. Soft Systems Methodology (SSM) and SISTeM (Cycle 1) were used as problem solving approaches within an action research framework to analyse KMS issues, human computer interaction, and developing criteria for selecting a system. Selection criteria for knowledge management systems are then outlined and applied to a case study in evidence based health care. 1...|$|R
40|$|International audienceOpen Source Software {{is often}} viewed as an anti-intellectual {{property}} regime. By contrast, we argue how IP law {{is at the heart}} of open source model since licenses that organize the innovation and business relationships between developers, distributors and end-users are based on copyright law. The <b>proliferation</b> <b>of</b> <b>software</b> patents can, however be seen as a threat for the development and deployment of open source software. We present the nature of the threat and review a series of initiatives undertaken by the open source community to address them effectively. These initiatives, such as the redesign of licenses and the creation of patent commons, are a testiment to a genuinely creative use of IP law by the open source community, not its undermining...|$|E
40|$|The <b>proliferation</b> <b>of</b> <b>software</b> {{technology}} {{and availability of}} commercial-off-the-shelf (COTS) components for just-in-time software development has revolutionised how software systems are built. The focus of this new approach is on development of new systems, by selecting and assembling a set of COTS components. One of the critical problems in this approach is how to handle selection of COTS components from the available pool of alternatives in an effective manner. In this paper, an integrated decision approach for COTS selection is proposed. An illustrative example is also given to describe the utility and dimension of the proposed approach. component-based software systems; CBSS; commercial-off-the-shelf; COTS components; multicriteria decision making; MCDM; analytical hierarchy process; AHP; technique for order preference by similarity to ideal solution; TOPSIS; just-in-time; JIT software development...|$|E
40|$|Open Source Software {{is often}} viewed as an anti-intellectual {{property}} regime. By contrast, we argue how IP law {{is at the heart}} of open source model since licenses that organize the innovation and business relationships between developers, distributors and end-users are based on copyright law. The <b>proliferation</b> <b>of</b> <b>software</b> patents can, however be seen as a threat for the development and deployment of open source software. We present the nature of the threat and review a series of initiatives undertaken by the open source community to address them effectively. These initiatives, such as the redesign of licenses and the creation of patent commons, are a testiment to a genuinely creative use of IP law by the open source community, not its undermining. Open Source Software; Patent; Hold-Up; Copyright; Copyleft; Intellectual Property...|$|E
40|$|While {{mass storage}} {{systems have been}} used for several decades to store large {{quantities}} of scientific data, there has been little work on devising standard ways of measuring them. Each system is hand-tuned using parameters that seem to work best, {{but it is difficult to}} gauge the potential effect of similar changes on other systems. The <b>proliferation</b> <b>of</b> storage management <b>software</b> and policies has made it difficult for users to make the best choices for their own systems. The introduction of benchmarks will make it possible to gather standard performance measurements across disparate systems, allowing users to make intelligent choices <b>of</b> hardware, <b>software,</b> and algorithms for their mass storage system...|$|R
40|$|Generally {{believed}} to be a problem belonging to the compiler and architecture communities, performance optimization has rarely gained attention in mainstream software engineering research. However, due to the <b>proliferation</b> <b>of</b> large-scale object-oriented <b>software</b> de-signed to solve increasingly complex problems, performance is-sues stand out, preventing applications from meeting their perfor-mance requirements. Many such issues result from design princi-ples adopted widely in the software research community, such as the idea <b>of</b> <b>software</b> reuse and design patterns. We argue that, in the modern era when Moore’s dividend becomes less obvious, per-formance optimization is more <b>of</b> a <b>software</b> engineering problem than ever and should receive much more attention in the future. We explain why this is the case, review what has been achieved in soft-ware bloat analysis, present challenges, and provide a road map for future work...|$|R
40|$|International audienceWith the {{increase}} in processing power <b>of</b> computers, <b>proliferation</b> <b>of</b> specialized <b>software</b> and hardware, {{and the availability of}} greater communications bandwidth, it is possible to deploy more demanding modern Distributed Interactive Multimedia Applications such as World Opera. The World Opera application realizes the vision of a distributed real-time opera performance in which artists who are distributed around the globe are interacting with each other as though they were co-located. The application is driven by the artistic consortium that encompasses several major opera houses worldwide. In this paper, we build a high-level reliability model to predict the system reliability of the deployed architecture for supporting World Opera. Furthermore, we conduct a sensitivity analysis to understand the reliability requirements that individual components need to meet in order to provide desired system reliability...|$|R
40|$|Desktop {{software}} {{agents are}} background processes that notify a computer user of certain predefined events. The complexity of desktop computing is increasing {{due to the}} <b>proliferation</b> <b>of</b> <b>software</b> agents. A desktop agent manager (DAM) may become {{an important component of}} desktop computing. This article focuses on the decision mechanism for the DAM to decide which agents should be allowed to access the user, which agents ' results should be stored for future review by the user, and which of the agents should be filtered out. We prove the validity of the concept of a DAM by developing an architecture that includes both a prototypeof the DAM and a simulator of various types of agents. In this article, we present the results of our simulations and analyses of the DAM decision mechanism. 1...|$|E
40|$|The {{widespread}} use of software tools {{in all aspects of}} life and work has now spread to the world of fundraising as well. In the last few years there has been a <b>proliferation</b> <b>of</b> <b>software</b> packages for raising funds and these tools have grown in sophistication with each passing year. This paper suggests ideas for an e-fundraising software product launch in the Greater Vancouver area. Marketing recommendations for the new software tool are suggested based on detailed primary and secondary research conducted by the authors of this paper. An industry analysis has also been done to reach the conclusions of this paper. Due to the limited scope of the market survey conducted for the specific purpose of this paper, further market research should be conducted before the official product launch...|$|E
40|$|Network and {{information}} Security {{has become an}} issue of uttermost concern for computer networks in recent times. The expansion in network sizes {{as a result of}} the emergence of the internet, coupled with the <b>proliferation</b> <b>of</b> <b>software</b> applications and the ingenuity of hackers makes this need more pertinent. Kerberos is an authentication service for computer networks based on symmetric cryptography that foils threats such as eavesdropping and impersonation. After years of development, Kerberos has seen several transitions and versions. In this review Kerberos versions IV and V are mainly discussed. Emphasis is made on a critical review of the modifications and threats addressed in the version IV-to-V transitions of Kerberos. Based on the review and analysis, a critical conclusion is made on the technique of implementation and efficiency of the threats addressed by each modification in Kerberos version 5...|$|E
40|$|Educators who are {{responsible}} for selecting micro-computer software for classroom use are faced with a difficult task. The dramatic increase of microcomputers in schools {{in recent years has been}} mirrored by a tremendous <b>proliferation</b> <b>of</b> educational <b>software.</b> There are now more than 7, 000 commercially produced educational soft-ware programs for microcomputers on the market (EPIE, 1986), and about 100 new programs are published each month (" New Releases, " 1985 - 1986). This vast array <b>of</b> <b>software</b> leaves many educators in a quandary as how best to select the most appropriate programs for their classrooms. In this article we describe the current state of evaluation research with educational software, and discuss how popular software review methods fall short of meeting our need to know how well specific programs work. Outcome Evaluations <b>of</b> Educational <b>Software</b> Surprisingly, there have been very few research studies of the educational effectiveness <b>of</b> individ-ual <b>software</b> programs for microcomputers. Re-search has shown that computer-assisted instruc-tion (CAl) is an effective medium for improving academic skills in significantly less time than conventional classroom methods (Kulik, Bangert, and Williams, 1983; Kulik, Kulik, and Cohen...|$|R
40|$|Abstract. Despite the <b>proliferation</b> <b>of</b> mature {{multimedia}} <b>software</b> technologies, radiology reports {{continue to}} lack image content and structure that {{would improve the}} ability of referring clinicians to fully interpret and analyze radiological findings. This paper introduces an intuitive and interactive radiology report authoring system that provides enhanced visual multimedia capabilities, structured content, and reduced report production time, using a well-known PDF program, Adobe Acrobat. The system, which we call the Multimedia Radiology Report System (MaRRS), allows radiologists to quickly and simply create and deliver effective interactive multimedia medical reports...|$|R
40|$|Abstract. People {{have begun}} to accept {{technology}} {{as a matter of}} course in the day-to-day areas of their lives. As a result, the development and <b>proliferation</b> <b>of</b> social <b>software</b> has enjoyed exponential growth in the past several years. In this paper we argue that as researchers and practitioners who create social technologies, we must take a “social engineering” approach, actively designing social applications to help users achieve their social goals. We then review current trends in innovation in social technologies, and discuss some of the hard problems that need to be addressed by the field in the next several years. We expect that as social technologies continue to innovate in areas such as social networks, social navigation, lightweight authoring, and mobile and ubiquitous computing, we must increasingly envision an integrated social computing experience: that is, a social computing platform...|$|R
40|$|This chapter {{considers}} {{the potential for}} absorptive capacity limitations to prevent SME manufacturers benefiting from the implementation of Ambient Intelligence (AmI) technologies. The chapter also examines the role of intermediary organisations in alleviating these absorptive capacity constraints. In {{order to understand the}} context of the research, a review of the role of SMEs in the Australian manufacturing industry, plus the impacts of government innovation policy and absorptive capacity constraints in SMEs in Australia is provided. Advances in the development of ICT industry standards, and the <b>proliferation</b> <b>of</b> <b>software</b> and support for the Windows/Intel platform have brought technology to SMEs without the need for bespoke development. The results from the joint European and Australian AmI- 4 -SME projects suggest that SMEs can successfully use "external research sub-units" in the form of industry networks, research organisations and technology providers to offset internal absorptive capacity limitations...|$|E
40|$|The {{growing demand}} for the exploitment of the {{increasing}} computing power led {{to the design of}} multiple solutions, covering different levels of abstraction (operating system[11], virtual embedding[10], programming interface[9], object oriented computing[1], graphic application[8, 4]). The idea proposed here consists in choosing the appropriate solution for the various levels and joining them in a unique framework supporting both the Parallel and the Object Oriented paradigms. 1 Introduction In the last years, there has been a <b>proliferation</b> <b>of</b> <b>software</b> architectures designed to support parallel programming in heterogeneous network systems. These instruments vary from distributed programming libraries to intrinsic parallel languages [5, 12] and parallel extensions of traditional sequential languages [7, 3]. Furthermore, the research seems now oriented in the development of higher level visual environments [8, 4], whose aim would be to alleviate the designer task from many of the proble [...] ...|$|E
40|$|International audienceWith the <b>proliferation</b> <b>of</b> <b>Software</b> {{systems and}} the rise of {{paradigms}} such the Internet of Things, Cyber-Physical Systems and Smart Cities to name a few, the energy consumed by software applications is emerging as a major concern. Hence, it has become vital that software engineers {{have a better understanding of}} the energy consumed by the code they write. At software level, work so far has focused on measuring the energy consumption at function and application level. In this paper, we propose a novel approach to measure energy consumption at a feature level, cross-cutting multiple functions, classes and systems. We argue the importance of such measurement and the new insight it provides to non-traditional stakeholders such as service providers. We then demonstrate, using an experiment, how the measurement can be done with a combination of tools, namely our program slicing tool (PORBS) and energy measurement tool (Jolinar) ...|$|E
40|$|The <b>proliferation</b> <b>of</b> {{open source}} <b>software</b> {{specialized}} in library and information science has solved many problems of automation of information units (libraries, archives, documentation centers) and created other ones, as the correct configuration, installation and operation thereof. The purpose <b>of</b> creating a <b>software</b> distribution document {{is to provide}} users an ecosystem of applications that potentially could be used immediately to manage files, web repositories, workflows, conferences, journals, publishers, web-crawler programs, systems ILS integrated library management systems CMS content management and content aggregators. For its development {{we have used a}} web distribution of portable type AMP server on which are installed various programs and applications that enable the combined information professionals focus any need for automated document management...|$|R
40|$|Applications are {{no longer}} {{monolithic}} files, but rather a collection of dynamically linked libraries, images, fonts, etc. For such applications to function correctly, all of the required files must be available and be the correct version. Missing files preclude application execution, and incorrect versions lead to mysterious and frustrating failures. This paper describes a simple scheme to address this problem: Content-Derived Names (CDNs). CDNs use digital signatures to automatically and uniquely name specific versions of files. Because Content-Derived Names are computed using a cryptographically strong hash over the text of a package, this process is safe from spoofing and other attacks based on providing the wrong library. We explain how CDNs ease the management of application distribution for clusters and grids. We also describe a prototype implementation of CDNs for the Tcl programming language. 1. Introduction The <b>proliferation</b> <b>of</b> complex <b>software</b> libraries has made development [...] ...|$|R
40|$|In this paper, I {{explain how}} globally-distributed {{software}} development subunits can coordinate their activities with information systems (IS). The {{basis of this}} explanation lies in the contemporary <b>proliferation</b> <b>of</b> global <b>software</b> development (GSD) activities which suggests an unexplained reality: that organizations practicing GSD are somehow regulating their IS to cope with increasing and varied uncertainties. Through an empirical example of an organization’s subunit’s regulating and coping, I {{make the case that}} requisite variety in a subunit’s information systems is a dependent variable for managing uncertainties leading to optimal coordination. In this example, I show varied uncertainties that faced the subunit; and I explain how variety in its information system was requisite for managing the uncertainties satisfactorily. Based on these explanations, I suggest four characteristics of variety in IS that will be requisite for managing uncertainties in GSD – developers’ agility, developers’ continuity and travelling, high frequency of communications, and varied communication modes and technologies...|$|R
