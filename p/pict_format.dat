10|1|Public
2500|$|PDF was {{selected}} as the [...] "native" [...] metafile format for Mac OS X, replacing the <b>PICT</b> <b>format</b> of the earlier classic Mac OS. The imaging model of the Quartz graphics layer is based on the model common to Display PostScript and PDF, leading to the nickname Display PDF. The Preview application can display PDF files, as can version 2.0 and later of the Safari web browser. System-level support for PDF allows Mac OS X applications to create PDF documents automatically, provided they support the OS-standard printing architecture. The files are then exported in PDF 1.3 format according to the file header. When taking a screenshot under Mac OS X versions 10.0 through 10.3, the image was also captured as a PDF; later versions save screen captures as a PNG file, though this behaviour can be set back to PDF if desired.|$|E
5000|$|Any {{series of}} {{graphics}} calls to QuickDraw can be recorded in a structure called a Picture. This {{can then be}} saved in memory and [...] "played back" [...] at any time, reproducing the graphics sequence. At playback time the picture may be placed at new coordinates or scaled. A picture can be saved to disk in which form it defines the Apple <b>PICT</b> <b>format.</b>|$|E
5000|$|Within a Mac application, any {{sequence}} of drawing operations could be simply recorded/encoded to the <b>PICT</b> <b>format</b> by opening a [...] "Picture", then closing it after issuing the required commands. By saving the resulting byte stream as a resource, a PICT resource resulted, {{which could be}} loaded and played back at any time. The same stream could be saved to a data file on disk (with 512 bytes of unused header space added) as a PICT file.|$|E
5000|$|The <b>PICT</b> file <b>format</b> {{consists}} essentially of serialized QuickDraw opcodes. The original version, PICT 1, {{was designed}} to be as compact as possible while describing vector graphics. To this end, it featured single byte opcodes, many of which embodied operations such as [...] "do the previous operation again". As such it was quite memory efficient, but not very expandable. With the introduction of the Macintosh II and Color QuickDraw, PICT was revised to version 2. This version featured 16-bit opcodes and numerous changes which enhanced its utility. PICT 1 opcodes were supported as a subset for backward compatibility.|$|R
5000|$|TeachText {{could only}} {{operate on a}} single {{document}} {{at a time and}} supported only the default text font (12-point Geneva at the time) in the MacRoman encoding, with formatting such as bold, italic and underline. It also included rudimentary support for embedded images; the images were stored in <b>PICT</b> <b>format</b> in the file's resource fork in ascending numbers from zero, instances of non-breaking spaces in the text loaded up the appropriately numbered image, the first instance loading image [...] "0", the second space loading image [...] "1", and so on.|$|E
5000|$|PDF was {{selected}} as the [...] "native" [...] metafile format for Mac OS X, replacing the <b>PICT</b> <b>format</b> of the earlier classic Mac OS. The imaging model of the Quartz graphics layer is based on the model common to Display PostScript and PDF, leading to the nickname Display PDF. The Preview application can display PDF files, as can version 2.0 and later of the Safari web browser. System-level support for PDF allows Mac OS X applications to create PDF documents automatically, provided they support the OS-standard printing architecture. The files are then exported in PDF 1.3 format according to the file header. When taking a screenshot under Mac OS X versions 10.0 through 10.3, the image was also captured as a PDF; later versions save screen captures as a PNG file, though this behaviour can be set back to PDF if desired.|$|E
50|$|Because {{of their}} fixed resolution, {{printing}} bitmap images can easily produce grainy, jaggy, or blurry results if the resolution is not {{ideally suited to}} the printer resolution. In addition, bitmap images become grainy when they are scaled larger than their intended resolution. A few bitmap file formats (such as Apple's <b>PICT</b> <b>format)</b> support alpha channels, which allow bitmap images to have transparent backgrounds or an image selection which uses antialiasing. Most common web-based file formats such as GIF, JPEG, and PNG are bitmap file formats. The GIF file format {{is one of the}} simplest, low-resolution bitmap file formats, only supporting 256 colors per image. As a result, however, GIF files can be extremely small in file size. Other common bitmap file formats are BMP (Windows bitmap), TGA, and TIFF. Most clip art is provided in a low resolution, bitmap file format which is unsuitable for scaling, transparent backgrounds, or good-quality printed materials. However, bitmap file formats are ideal for photos, especially when combined with lossy data compression algorithms such as those available for JPEG files.|$|E
40|$|Pixel Pusher is Macintosh {{application}} program for viewing and performing minor enhancements on imagery. Works with color images digitized to 8 bits. Reads image files in JPL's two primary image formats VICAR and PDS {{as well as}} in Macintosh <b>PICT</b> <b>format.</b> VICAR (NPO- 18076) handles array of image-processing capabilities used for variety of applications, including processing of biomedical images, cartography, imaging of Earth resources, and geological exploration. Pixel Pusher also imports color lookup tables in VICAR format for viewing images in pseudocolor (256 colors). Written in Symantec's Think C...|$|E
40|$|Pixel Pusher is a Macintosh {{application}} {{used for}} viewing and performing minor enhancements on imagery. It will read image files in JPL's two primary image formats- VICAR and PDS - {{as well as}} the Macintosh <b>PICT</b> <b>format.</b> VICAR (NPO- 18076) handles an array of image processing capabilities which may be used for a variety of applications including biomedical image processing, cartography, earth resources, and geological exploration. Pixel Pusher can also import VICAR format color lookup tables for viewing images in pseudocolor (256 colors). This program currently supports only eight bit images but will work on monitors with any number of colors. Arbitrarily large image files may be viewed in a normal Macintosh window. Color and contrast enhancement can be performed with a graphical "stretch" editor (as in contrast stretch). In addition, VICAR images may be saved as Macintosh PICT files for exporting into other Macintosh programs, and individual pixels can be queried to determine their locations and actual data values. Pixel Pusher is written in Symantec's Think C and was developed for use on a Macintosh SE 30, LC, or II series computer running System Software 6. 0. 3 or later and 32 bit QuickDraw. Pixel Pusher will only run on a Macintosh which supports color (whether a color monitor is being used or not). The standard distribution medium for this program is a set of three 3. 5 inch Macintosh format diskettes. The program price includes documentation. Pixel Pusher was developed in 1991 and is a copyrighted work with all copyright vested in NASA. Think C is a trademark of Symantec Corporation. Macintosh is a registered trademark of Apple Computer, Inc...|$|E
40|$|MacMultiview is an {{interactive}} {{tool for the}} Macintosh II family which allows one to display and make computations utilizing polarimetric radar data collected by the Jet Propulsion Laboratory's imaging SAR (synthetic aperture radar) polarimeter system. The system includes the single-frequency L-band sensor mounted on the NASA CV 990 aircraft and its replacement, the multi-frequency P-, L-, and C-band sensors mounted on the NASA DC- 8. MacMultiview provides two basic functions: computation of synthesized polarimetric images and computation of polarization signatures. The radar data {{can be used to}} compute a variety of images. The total power image displays the sum of the polarized and unpolarized components of the backscatter for each pixel. The magnitude/phase difference image displays the HH (horizontal transmit and horizontal receive polarization) to VV (vertical transmit and vertical receive polarization) phase difference using color. Magnitude is displayed using intensity. The user may also select any transmit and receive polarization combination from which an image is synthesized. This image displays the backscatter which would have been observed had the sensor been configured using the selected transmit and receive polarizations. MacMultiview {{can also be used to}} compute polarization signatures, three dimensional plots of backscatter versus transmit and receive polarizations. The standard co-polarization signatures (transmit and receive polarizations are the same) and cross-polarization signatures (transmit and receive polarizations are orthogonal) can be plotted for any rectangular subset of pixels within a radar data set. In addition, the ratio of co- and cross-polarization signatures computed from different subsets within the same data set can also be computed. Computed images can be saved in a variety of formats: byte format (headerless format which saves the image as a string of byte values), MacMultiview (a byte image preceded by an ASCII header), and PICT 2 format (standard format readable by MacMultiview and other image processing programs for the Macintosh). Images can also be printed on PostScript output devices. Polarization signatures can be saved in either a <b>PICT</b> <b>format</b> or as a text file containing PostScript commands and printed on any QuickDraw output device. The associated Stokes matrices can be stored in a text file. MacMultiview is written in C-language for Macintosh II series computers. MacMultiview will only run on Macintosh II series computers with 8 -bit video displays (gray shades or color). The program also requires a minimum configuration of System 6. 0, Finder 6. 1, and 1 Mb of RAM. MacMultiview is NOT compatible with System 7. 0. It requires 32 -Bit QuickDraw. Note: MacMultiview may not be fully compatible with preliminary versions of 32 -Bit QuickDraw. Macintosh Programmer's Workshop and Macintosh Programmer's Workshop C (version 3. 0) are required for recompiling and relinking. The standard distribution medium for this package is a set of three 800 K 3. 5 inch diskettes in Macintosh format. This program was developed in 1989 and updated in 1991. MacMultiview is a copyrighted work with all copyright vested in NASA. QuickDraw, Finder, Macintosh, and System 7 are trademarks of Apple Computer, Inc...|$|E
40|$|MacSigma 0 is an {{interactive}} {{tool for the}} Macintosh {{which allows you to}} display and make computations from radar data collected by the following sensors: the JPL AIRSAR, ERS- 1, JERS- 1, and Magellan. The JPL AIRSAR system is a multi-polarimetric airborne synthetic aperture radar developed and operated by the Jet Propulsion Laboratory. It includes the single-frequency L-band sensor mounted on the NASA CV 990 aircraft and its replacement, the multi-frequency P-, L-, and C-band sensors mounted on the NASA DC- 8. MacSigma 0 works with data in the standard JPL AIRSAR output product format, the compressed Stokes matrix format. ERS- 1 and JERS- 1 are single-frequency, single-polarization spaceborne synthetic aperture radars launched by the European Space Agency and NASDA respectively. To be usable by MacSigma 0, The data must have been processed at the Alaska SAR Facility and must be in the "low-resolution" format. Magellan is a spacecraft mission to map the surface of Venus with imaging radar. The project is managed by the Jet Propulsion Laboratory. The spacecraft carries a single-frequency, single-polarization synthetic aperture radar. MacSigma 0 works with framelets of the standard MIDR CD-ROM data products. MacSigma 0 provides four basic functions: synthesis of images (if necessary), statistical analysis of selected areas, analysis of corner reflectors as a calibration measure (if appropriate and possible), and informative mouse tracking. For instance, the JPL AIRSAR data can be used to synthesize a variety of images such as a total power image. The total power image displays the sum of the polarized and unpolarized components of the backscatter for each pixel. Other images which can be synthesized are HH, HV, VV, RL, RR, HHVV*, HHHV*, HVVV*, HHVV* phase and correlation coefficient images. For the complex and phase images, phase is displayed using color and magnitude is displayed using intensity. MacSigma 0 {{can also be used to}} compute statistics from within a selected area. The statistics computed depend on the image type. For JPL AIRSAR data, the HH, HV, VV, HHVV* phase, and correlation coefficient means and standard deviation measures are calculated. The mean, relative standard deviation, minimum, and maximum values are calculated for all other data types. A histogram of the selected area is also calculated and displayed. The selected area can be rectangular, linear, or polygonal in shape. The user is allowed to select multiple rectangular areas, but not multiple linear or polygonal areas. The statistics and histogram are displayed to the user and can either be printed or saved as a text file. MacSigma 0 can also be used to analyze corner reflectors as a measure of the calibration for JPL AIRSAR, ERS- 1, and JERS- 1 data types. It computes a theoretical radar cross section and the actual radar cross section for a selected trihedral corner reflector. The theoretical cross section, measured cross section, their ratio in dBs, and other information are displayed to the user and can be saved into a text file. For ERS- 1, JERS- 1, and Magellan data, MacSigma 0 simultaneously displays pixel location in data coordinates and in latitude, longitude coordinates. It also displays sigma 0, the incidence angle (for Magellan data), the original pixel value (for Magellan data), and the noise power value (for ERS- 1 and JERS- 1 data). Grey scale computed images can be saved in a byte format (a headerless format which saves the image as a string of byte values) or a <b>PICT</b> <b>format</b> (a standard format readable by other image processing programs for the Macintosh). Images can also be printed. MacSigma 0 is written in C-language for use on Macintosh series computers. The minimum configuration requirements for MacSigma 0 are System 6. 0, Finder 6. 1, 1 Mb of RAM, and at least a 4 -bit color or grey-scale graphics display. MacSigma 0 is also System 7 compatible. To compile the source code, Apple's Macintosh Programmers Workbench (MPW) 3. 2 and the MPW C language compiler version 3. 2 are required. The source code will not compile with a later version of the compiler; however, the compiled application which will run under the minimum hardware configuration is provided on the distribution medium. In addition, the distribution media includes an executable which runs significantly faster but requires a 68881 compatible math coprocessor and a 68020 compatible CPU. Since JPL AIRSAR data files can be very large, it is often desirable to reduce the size of a data file before transferring it to the Macintosh for use in MacSigma 0. A small FORTRAN program which can be used for this purpose is included on the distribution media. MacSigma 0 will print statistics on any output device which supports QuickDraw, and it will print images on any device which supports QuickDraw or PostScript. The standard distribution medium for MacSigma 0 is a set of five 1. 4 Mb Macintosh format diskettes. This program was developed in 1992 and is a copyrighted work with all copyright vested in NASA. Version 4. 2 of MacSigma 0 was released in 1993...|$|E

