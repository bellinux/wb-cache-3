782|21|Public
25|$|The {{strength}} of random passwords {{depends on the}} actual entropy of the underlying number generator; however, these are often not truly random, but <b>pseudo</b> <b>random.</b> Many publicly available password generators use random number generators found in programming libraries that offer limited entropy. However most modern operating systems offer cryptographically strong random number generators that are suitable for password generation. It is also possible to use ordinary dice to generate random passwords. See stronger methods. Random password programs often {{have the ability to}} ensure that the resulting password complies with a local password policy; for instance, by always producing a mix of letters, numbers and special characters.|$|E
2500|$|To {{test this}} hypothesis, Matsuhashi and Hallet had volunteers perform brisk finger {{movements}} at random intervals, while not counting or planning when {{to make such}} (future) movements, but rather immediately making a movement {{as soon as they}} thought about it. An externally controlled [...] "stop-signal" [...] sound was played at <b>pseudo</b> <b>random</b> intervals, and the volunteers had to cancel their intent to move if they heard a signal while being aware of their own immediate intention to move. Whenever there was an action (finger movement), the authors documented (and graphed) any tones that occurred before that action. The graph of tones before actions therefore only shows tones (a) before the subject is even aware of his [...] "movement genesis" [...] (or else they would have stopped or [...] "vetoed" [...] the movement), and (b) after it is too late to veto the action. This second set of graphed tones is of little importance here.|$|E
5000|$|Secure Channel Protocol 02 (SCP), <b>pseudo</b> <b>random,</b> C-MAC, C-ENC, R-MAC, R-ENC ...|$|E
40|$|This paper {{presents}} {{a new approach}} for designing test sequences to be generated on [...] chip. The proposed technique is based on machine learning, and provides a way to generate efficient patterns to be used during BIST test pattern generation. The main idea is that test patterns detecting random pattern resistant faults are not embedded in a <b>pseudo</b> [...] <b>random</b> sequence as in existing techniques, but rather are used to produce relevant features allowing to generate directed random test patterns that detect random pattern resistant faults as well as easy [...] to [...] test faults. A BIST implementation that uses a classical LFSR plus {{a small amount of}} mapping logic is also proposed in this paper. Results are shown for benchmark circuits which indicate that our technique can reduce the weighted or <b>pseudo</b> [...] <b>random</b> test length required for a particular fault coverage. Other results are given to show the possible trade off between hardware overhead and test sequence length. An encouraging point is that results presented in this paper, although they are comparable with those of existing mixed [...] mode techniques, have been obtained with a machine learning tool not specifically developed for BIST generation and therefore may significantly be improved...|$|R
40|$|Analysis signals, {{especially}} then pulsed {{signals and}} their next processing, today alreadyquaere to many different technological line. From communication engineering over telecommunication and acoustics, after {{as much as}} field - club application or multimedia. This work is introduction to the problems methods processing pulsed signals. Is distributive how {{from the standpoint of}} theory, so from look future application usage, by the help of programmatic analyses basic signals. Work bears basic description, notions, routes and method for work and analysis with widthspectral and ultraswidthspectral signals. Further be created tool for generation, filtration and near processing of several basic <b>pseudo</b> - <b>random</b> signals...|$|R
40|$|There {{have been}} many {{previous}} attempts to accelerate MT 19937 using FPGAs but {{we believe that we}} can substantially improve the previous implementations to develop a higher throughput and more area time efficient design. In this paper we first present a single port design and then present an enhanced 624 port hardware implementations of the MT 19937 algorithm that has a throughput of 119. 6 × 10 9 32 bit random numbers per second, which is more than 17 times that of the previously best published uniform random number generator. Furthermore it has the lowest area time metric of all the currently published FPGA based <b>pseudo</b> uniform <b>random</b> number generators. ...|$|R
5000|$|BB scrambling: a <b>Pseudo</b> <b>Random</b> Binary Sequence (PRBS) with {{generator}} [...] is used {{to scramble}} completely every BBFRAME ...|$|E
50|$|<b>Pseudo</b> <b>Random</b> Noise {{generator}} (providing a hissing sound can {{be mixed}} into each channel). Provides interesting sound effects for video games.|$|E
5000|$|... a 16-bit LFSR {{which is}} used during the {{authentication}} phase (which also serves as the <b>pseudo</b> <b>random</b> number generator on some card implementations).|$|E
40|$|In this paper, {{we present}} {{a new class of}} multivariate public-key cryptosystems, K(XIII) SE(2) PKC realizing the coding rate of exactly 1. 0, based on <b>random</b> <b>pseudo</b> cyclic codes. The K(XIII) SE(2) PKC is {{constructed}} on the basis of K(IX) SE(1) PKC, formerly presented by the author. We show that K(XIII) SE(2) PKC is secure against the various attacks including the attack based on the Gröbner bases calculaion (GB attack) and the rank attack...|$|R
40|$|We {{describe}} {{an experiment in}} which two non communicating computers, starting from a common input {{in the form of}} sequences of <b>pseudo</b> [...] <b>random</b> numbers in the interval [0, 2 π], and computing deterministic {± 1 } [...] valued functions, chosen at random and independently, produce sequences of numbers whose correlations coincide with the EPR correlations and therefore violate Bell's inequality. The experiment is the practical implementation of a mathematical model of a classical, deterministic system whose initial state is chosen at random from its state space, with a known initial probability distribution, and whose dynamics exhibits the chameleon effect described below. Such a system satisfies the constraints of pre [...] determination, locality, causality, local independent choices, singlet law and reproduces the EPR correlations. Comment: 19 pages, LaTe...|$|R
40|$|Most {{standard}} learning algorithms, such as Logistic Regression (LR) and the Support Vector Machine (SVM), {{are designed}} to deal with i. i. d. (independent and identically distributed) data. They therefore do not work effectively for tasks that involve non-i. i. d. data, such as “region segmentation”. (Eg, the “tumor vs non-tumor” labels in a medical image are correlated, in that adjacent pixels typically have the same label.) This has motivated the work in random fields, which has produced classifiers for such non-i. i. d. data that are significantly better than standard i. i. d. -based classifiers. However, these random field methods are often too slow to be trained for the tasks {{they were designed to}} solve. This paper presents a novel variant, <b>Pseudo</b> Conditional <b>Random</b> Fields (PCRFs), that is also based on i. i. d. learners, to allow efficient training but also incorporates correlations, like random fields. We demonstrate that this system is as accurate as other random fields variants, but significantly faster to train...|$|R
50|$|Although {{it seems}} to lack any {{definite}} pattern, <b>pseudo</b> <b>random</b> noise consists of a deterministic sequence of pulses that will repeat itself after its period.|$|E
50|$|In {{cryptographic}} devices, the <b>pseudo</b> <b>random</b> noise {{pattern is}} determined by a key and the repetition period can be very long, even millions of digits.|$|E
5000|$|In cryptography, <b>pseudo</b> <b>random</b> noise (PRN [...] ) is {{a signal}} similar to noise which {{satisfies}} {{one or more}} of the standard tests for statistical randomness.|$|E
40|$|So-called Random number {{generators}} {{on computers}} are deterministic functions producing {{a sequence of}} numbers which should mimic a sample of i. i. d. U(0; 1) random variables. Two classes of tests are commonly applied to such generators. Firstly, the theoretical tests, which look at the intrinsic structure of the generator to derive behavioral properties of the sequence of points, usually over the whole period. These theoretical tests are specific to each class of generators and include the lattice and spectral tests, discrepancy bounds calculations, period length calculations, etc [...] Secondly, the empirical goodness-of-fit tests, which try finding statistical evidence against the null hypothesis: "the sequence is a sample from i. i. d. U(0; 1) random variables". In this paper, we survey the main techniques from both classes, discuss their philosophy, and {{look at some of}} the most recent developments in that area. 1. INTRODUCTION Testing randomness, when speaking about (<b>pseudo)</b> - <b>random</b> numbe [...] ...|$|R
40|$|The thesis {{deals with}} issues of random numbers, their {{generating}} and use in cryptography. Introduction of work is aimed to resolution of random number generators and <b>pseudo</b> [...] <b>random</b> number generators. There is also included often used dividing generators on software and hardware. We mention {{advantages and disadvantages of}} each type and area of their use. Then we describe examples of random and pseudorandom numbers, mainly hardware based on physical phenomenon such as the decay of radioactive material or use atmospheric noise. The following part is devoted to suggestion own random number generator and a description of its functionality. In {{the second half of the}} work we devote to the field of cryptography. We know basic types of cryptographic systems, namely symmetric and asymmetric cryptosystems. We introduce a typical representant the various type and their properties. At the end of the work we again return to our random number generator and verify the randomness generated numbers and obtained cryptograms...|$|R
40|$|The paper {{presents}} a fast {{implementation of a}} constructive method to generate a special class of low [...] discrepancy sequences {{which are based on}} Van Neumann [...] Kakutani transformations. Such sequences can be used in various simulation codes where it is necessary to generate a certain number of uniformly distributed random numbers on the unit intervall. From a theoretical point of view the uniformity of a sequence is measured in terms of the discrepancy which is a special distance between a finite set of points and the uniform distribution on the unit intervall. Numerical results are given on the cost efficiency of different generators on different hardware architectures {{as well as on the}} corresponding uniformity of the sequences. As an example for the efficient use of low [...] discrepancy sequences in a complex simulation code results are presented for the simulation of a hypersonic rarefied gas flow. 1 Introduction The generation of <b>pseudo</b> [...] <b>random</b> numbers is one of the central parts in sta [...] ...|$|R
50|$|<b>Pseudo</b> <b>random</b> {{noise is}} used in some {{electronic}} musical instruments, either by itself or as an input to subtractive synthesis, and in many white noise machines.|$|E
5000|$|DNS Cache is scalable, highly secure {{recursive}} DNS {{software from}} Secure64 which provides built-in protection against high-volume {{denial of service}} attacks, including <b>Pseudo</b> <b>Random</b> Sub Domain (PRSD) attacks.|$|E
50|$|Rackoff {{currently}} {{works at}} the University of Toronto. His research interests are in computational complexity theory. For some time now he has been specializing in cryptography and security protocols. In 1988, he collaborated with Michael Luby in a widely cited analysis of the Feistel cipher construction (one important result shown there is {{the construction of a}} strongly <b>pseudo</b> <b>random</b> permutation generator from a <b>pseudo</b> <b>random</b> function generator). Rackoff was awarded the 1993 Gödel Prize for his work on interactive proof systems and for being one of the co-inventors of zero-knowledge proofs.|$|E
40|$|MAC level {{protocols}} in ad hoc networks {{must overcome}} the decentralized {{nature of the}} network and provide adequate throughput and fairness. This paper presents a new MAC protocol named Randomly Ranked Mini Slots (RRMS), which provides throughput at near channel capacity and good fairness as defined by a common sense criterion we develop. The protocol achieves this by utilizing <b>random</b> (<b>pseudo</b> noise) sequences, a receiver busy tone, and by sharing a minimal amount of information between two hop neighbouring nodes. The performance of our protocol is compared to the Dual Busy Tone Multiple Access (DBTMA) protocol in terms of throughput and fairness...|$|R
40|$|Includes bibliographical {{references}} (page 37). CDMA (Code Division Multiple Access) was a Military {{technology used}} during World War II where {{a technique called}} spread spectrum was used by which a signal (an electrical, electromagnetic or acoustic signals) generated with a particular bandwidth is deliberately spread in the frequency domain, resulting in a signal with a wider bandwidth. These techniques are used to have secure communications, increasing resistance to natural interference, noise and jamming. 	The signal is spread using <b>Pseudo</b> - <b>random</b> Noise (PN). It's a sequence of bits having 1 's and 0 's. The signal is then passed through the raised cosine filter for pulse shaping to minimize intersymbol interference. The thesis involved spreading of signal using two techniques and comparing their bit error rates. First spreading technique is by increasing the PN sequence (chip rate) and the second spreading technique is by increasing the roll-off factor (measure of excess bandwidth). The thesis is simulated using MATLAB for both the spreading techniques, results are obtained and compared...|$|R
40|$|The {{generation}} of large scale series of "Pseudo [...] random" numbers {{is essential to}} the use of Monte Carlo simulations. All good <b>Pseudo</b> [...] <b>random</b> number generators (PRNG's) have a very large period, for which they satisfy discreet mathematical principles of uniform distribution. The size of the period is important for us to consider. Since large amounts, on the order of 10 18 could be used in these simulations. We implemented a parallel PRNG for use in High Performance Fortran. 1 Introduction There are several PRNG's we wish to implement on parallel architectures and systematically test them using Monte Carlo simulations. The first algorithm we wish to use is a combined Multiplicate Linear Congruential Generator. (MLCG) [?]. A MLCG is a special case of a Linear Congruential Generator(LCG), the general from of an LCG is given in equation (1). X n is the n th element of the list, A and B are well chosen constants. X n = (AX nΓ 1 +B) mod M (1) It is possible to calculate values for a [...] ...|$|R
50|$|NSA {{promoted}} {{the inclusion of}} a random number generator called Dual EC DRBG in the U.S. National Institute of Standards and Technology's 2007 guidelines. This led to speculation of a backdoor which would allow NSA access to data encrypted by systems using that <b>pseudo</b> <b>random</b> number generator.|$|E
50|$|Free Pascal uses a Mersenne Twister as its default <b>pseudo</b> <b>random</b> number {{generator}} whereas Delphi uses a LCG. Here is a Delphi compatible {{example in}} Free Pascal {{based on the}} information in the table above.Given the same RandSeed value it generates the same sequence of random numbers as Delphi.|$|E
50|$|A {{pseudo noise}} code (PN code) or <b>pseudo</b> <b>random</b> noise code (PRN code) {{is one that has}} a {{spectrum}} similar to a random sequence of bits but is deterministically generated. The most commonly used sequences in direct-sequence spread spectrum systems are maximal length sequences, Gold codes, Kasami codes, and Barker codes.|$|E
40|$|Abstract—Wired Equivalent Privacy (WEP) is an IEEE 802. 11 {{standard}} {{implemented to}} provide security to data transmitted on wireless networks. In this paper we enhance the WEP security by improving the authenticity, integrity and confidentiality mechanisms. WEP uses static 40 bit as pre-shared secret key for pseudo noise sequence generation. Our method uses dynamic key which keeps changing time to time depending upon the traffic rate on the network. This approach results into more <b>random</b> <b>pseudo</b> noise sequence. A large number of different encryption keys are generated using this approach. The integrity check value of data generated using cyclic redundancy check polynomial has been modified by using message authentication code. This message authentication code technique allows access to authorized clients...|$|R
40|$|Abstract. The inverse pseudo {{excitation}} {{method is}} used in the identification of random loadings. For structures subjected to stationary random excitations, the power spectral density matrices of such loadings are identified experimentally. The identification is based on the measured acceleration responses and the structural frequency response functions. Numerical simulation {{is used in}} the optimal selection of sensor locations. The proposed method has been successfully applied to the loading identification experiments of three structural models, two uniform steel cantilever beams and a four-story plastic glass frame, subjected to uncorrelated or partially correlated random excitations. The identified loadings agree quite well with actual excitations. It is proved that the proposed method is quite accurate and efficient in addition to its ability to alleviate the ill conditioning of the structural frequency response functions. Key words: loading identification; inverse <b>pseudo</b> excitation method; <b>random</b> vibration; computer simulation. 1...|$|R
40|$|In {{this paper}} we propose a general model {{determination}} strategy based on Bayesian methods for the nonlinear mixed effects models. Adopting an exploratory data analysis viewpoint we develop diagnostic tools based on conditional predictive ordinates which conveniently tie in with Markov Chain Monte Carlo (MCMC) fitting of models. Sampling based methods are used to carry out these diagnostics. Two examples are presented to illustrate the effectiveness of these criteria. The first one is the famous Langmuir equation, commonly used in pharmacokinetic models wheras the second model is used in growth curve model for longitudinal data problem. Key words: Longitudinal data, Metropolis-within-Gibbs algorithm, noninformative prior, nonlinear models, predictive distributions, <b>pseudo</b> Bayes factor, <b>random</b> effects models. * D. K. Dey is Professor, Department of Statistics, University of Connecticut, Storrs, CT 062693120, and H. Chang is a Consultant at Coopers & Lybrand L. L. P., One International Plac [...] ...|$|R
50|$|In a frequency-hopping spread {{spectrum}} sequence, each {{value in the}} <b>pseudo</b> <b>random</b> sequence {{is known as a}} channel number and the inverse of its period as the hop rate. FCC Part 15 mandates at least 50 different channels and at least a 2.5 Hz hop rate for narrow band frequency-hopping systems.|$|E
5000|$|A large good <b>pseudo</b> <b>random</b> {{number is}} first obtained, {{and then is}} bit-masked with either 2i -1 or 2i+1 -1, but the latter only applies if x, the random number, bit-masked with the former, 2i - 1, is less than S, so the larger range of hash values only apply to buckets {{that have already been}} split.|$|E
50|$|HKDF {{extracts}} a <b>pseudo</b> <b>random</b> key (PRK) {{using an}} HMAC hash function (e.g. HMAC-SHA256) on an optional salt and any potentially weak input key material (IKM). It then generates similarly cryptographically strong output key material (OKM) of any desired length by repeatedly generating PRK-keyed hash-blocks and then appending {{them into the}} output key material, finally truncating to the desired length.|$|E
40|$|Turbo codes {{can deliver}} {{performance}} {{that is very}} close to the Shannon limit. This report investigates algorithms for convolutional turbo codes and block turbo codes. Both coding schemes can achieve performance near Shannon limit. The performance of the schemes is obtained using computer simulations. There are three sections in this report. First section is the introduction. The fundamental knowledge about coding, block coding and convolutional coding is discussed. In the second section, the basic concepts of convolutional turbo codes are introduced and the performance of turbo codes, especially high rate turbo codes, is provided from the simulation results. After introducing all the parameters that help turbo codes achieve such a good performance, it is concluded that output weight distribution should be the main consideration in designing turbo codes. Based on the output weight distribution, the performance bounds for turbo codes are given. Then, the relationships between the output weight distribution and the factors like generator polynomial, interleaver and puncturing pattern are examined. The criterion for the best selection of system components is provided. The puncturing pattern algorithm is discussed in detail. Different puncturing patterns are compared for each high rate. For most of the high rate codes, the puncturing pattern does not show any significant effect on the code performance if <b>pseudo</b> - <b>random</b> interleaver is used in the system. For some special rate codes with poor performance, an alternative puncturing algorithm is designed which restores their performance close to the Shannon limit. Finally, in section three, for iterative decoding of block codes, the method of building trellis for block codes, the structure of the iterative decoding system and the calculation of extrinsic values are discussed...|$|R
30|$|Pseudo {{observation}} data (d) {{are made}} for the tsunami forecast test. The tsunami signals at the observation points are calculated by the linear long-wave simulation of the Tokai-Tonankai-Nankai earthquake tsunami scenario (Fig.  2). Random noises {{are added to the}} tsunami signals, which are used as the <b>pseudo</b> observations. The <b>random</b> noises are generated by inverse Fourier transform with phase randomization of the power spectra of Fig.  1 d. The noises based on PPP are added to the tsunami time series, which is used as the ship height pseudo observation. Since the ship velocities are 100  m/s (Fig.  1 c), ship movements during the tsunami passing over the offshore ships (~ 30  min) are expected to be < 10  km, which is not considered in the present study. The pseudo observation data of the ships are thus generated at fixed points (Fig.  3 b). GPS buoy noises (Fig.  1 d) are added to the GPS buoy observation. No noise is added to the deep-sea pressure observation which is sensitive to subcentimeter tsunamis (Filloux 1982; Hino et al. 2001; Inazu and Saito 2014).|$|R
40|$|Junction {{temperature}} {{is the final}} temperature of any device, after that device became dead. In this paper, junction temperature of target device i. e. <b>Pseudo</b> Noise sequence <b>random</b> generator based optical transmitter is controlled using heat sink profile and airflow. Heat sink and airflow are the cooling techniques for thermal efficient design on FPGA. We operated target device at high speed transceiver logic (HSTL) on FPGA at 1, 10, 100 and 1000 (GHz) operating frequency. Each IO standard is examined with two airflow values (250 MFL and 500 MFL) and Heat sink values (Low profile, Medium profile and high profile). For HSTL_I the reduction in junction {{temperature is}} (4 %, 5 %, 16 % and 20 %), HSTL_III (2 %, 4 %, 40 %, and 67 %), HSTL_I_ 18 (2 %, 15 %, 59 %, and 68 %), HSTL_III_ 18 (2. 4 %, 19 %, 62 %, and 74 %) is recorded at respective frequencies. Significant reduction of 74 % in junction temperature is observed at 1000 GHz using HSTL_III_ 18. We conclude that for frequencies above 10 GHz the heat sink profile and air flow significantly reduces the junction temperature using HSTL_III_ 18. This design makes the target device, energy efficient, system will be integrated with other optical components to make optical communication system green. Xilinx ISE 14. 7. 1. 2 design tool is used to perform the experiment...|$|R
