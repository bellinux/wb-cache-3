10000|427|Public
5|$|Applications {{are often}} {{classified}} {{according to how}} often their subtasks need to synchronize or communicate with each other. An application exhibits fine-grained <b>parallelism</b> if its subtasks must communicate many times per second; it exhibits coarse-grained <b>parallelism</b> {{if they do not}} communicate many times per second, and it exhibits embarrassing <b>parallelism</b> if they rarely or never have to communicate. Embarrassingly parallel applications are considered the easiest to parallelize.|$|E
5|$|In April 1958, S. Gill (Ferranti) {{discussed}} {{parallel programming}} {{and the need}} for branching and waiting. Also in 1958, IBM researchers John Cocke and Daniel Slotnick discussed the use of <b>parallelism</b> in numerical calculations for the first time. Burroughs Corporation introduced the D825 in 1962, a four-processor computer that accessed up to 16 memory modules through a crossbar switch. In 1967, Amdahl and Slotnick published a debate about the feasibility of parallel processing at American Federation of Information Processing Societies Conference. It was during this debate that Amdahl's law was coined to define the limit of speed-up due to <b>parallelism.</b>|$|E
5|$|In {{some cases}} <b>parallelism</b> is {{transparent}} to the programmer, {{such as in}} bit-level or instruction-level <b>parallelism,</b> but explicitly parallel algorithms, particularly those that use concurrency, {{are more difficult to}} write than sequential ones, because concurrency introduces several new classes of potential software bugs, of which race conditions are the most common. Communication and synchronization between the different subtasks are typically some of the greatest obstacles to getting good parallel program performance.|$|E
40|$|AbstractA new {{construction}} of <b>parallelisms,</b> determined by Johnson, is valid {{for both the}} finite and infinite cases and gives a variety of partial <b>parallelisms</b> of deficiency one that admit a transitive group. Since there are extensions to <b>parallelisms,</b> one obtains <b>parallelisms</b> admitting a collineation group fixing one spread and transitive on the remaining spreads. The construction permits a counting of the isomorphism classes of the <b>parallelisms.</b> In this article, we enumerate the isomorphism classes of the <b>parallelisms</b> and show that {{there are at least}} 1 + [(q− 3) / 2 r] mutually non-isomorphic <b>parallelisms</b> in PG(3,q = pr), for p odd. Furthermore, we provide a group-theoretic characterization of the constructed <b>parallelisms...</b>|$|R
40|$|Abstract. Some new {{constructions of}} <b>parallelisms</b> in PG(3,q) are given that produce <b>parallelisms</b> {{consisting}} of one Desarguesian spread and q 2 + q derived Knuth semifield spreads {{and other types}} consisting of one Knuth semifield spread, one Hall spread and the remaining spreads are derived Knuth semifield spreads...|$|R
5000|$|<b>Parallelisms</b> with Evan Parker & Agustí Fernandez (Ruby Flower, 2007) ...|$|R
5|$|Parallel {{computing}} {{is closely}} related to concurrent computing—they are frequently used together, and often conflated, though the two are distinct: it is possible to have <b>parallelism</b> without concurrency (such as bit-level <b>parallelism),</b> and concurrency without <b>parallelism</b> (such as multitasking by time-sharing on a single-core CPU). In parallel computing, a computational task is typically broken down in several, often many, very similar subtasks that can be processed independently and whose results are combined afterwards, upon completion. In contrast, in concurrent computing, the various processes often do not address related tasks; when they do, as is typical in distributed computing, the separate tasks may have a varied nature and often require some inter-process communication during execution.|$|E
5|$|The {{origins of}} true (MIMD) <b>parallelism</b> {{go back to}} Luigi Federico Menabrea and his Sketch of the Analytic Engine Invented by Charles Babbage.|$|E
5|$|According to Intel, it skips the 45nm process {{technology}} {{and uses a}} 32nm {{process technology}}. It features eight cores and has a 12-wide issue architecture, multithreading enhancements, and new instructions {{to take advantage of}} <b>parallelism,</b> especially in virtualization.|$|E
50|$|The story arc {{has many}} <b>parallelisms</b> to the First Gulf War.|$|R
5000|$|The primary {{thematic}} {{material for}} the movement {{is presented in the}} Exposition. This section can be further divided into several sections. The same section in most sonata form movements has prominent harmonic and thematic <b>parallelisms</b> (although in some works from the 19th century and onward, some of these <b>parallelisms</b> are subject to considerable exceptions), which include: ...|$|R
5000|$|Various rhetorical {{forms are}} found in the <b>parallelisms</b> of Biblical poetry. These include: ...|$|R
5|$|Parallel {{computers}} can be roughly classified {{according to the}} level at which the hardware supports <b>parallelism,</b> with multi-core and multi-processor computers having multiple processing elements within a single machine, while clusters, MPPs, and grids use multiple computers to work on the same task. Specialized parallel computer architectures are sometimes used alongside traditional processors, for accelerating specific tasks.|$|E
5|$|Parallel {{computers}} can be roughly classified {{according to the}} level at which the hardware supports <b>parallelism.</b> This classification is broadly analogous to the distance between basic computing nodes. These are not mutually exclusive; for example, clusters of symmetric multiprocessors are relatively common.|$|E
5|$|Parallel {{computing}} {{is a type}} of computation {{in which}} many calculations or the execution of processes are carried out simultaneously. Large problems can often be divided into smaller ones, which can then be solved at the same time. There are several different forms of parallel computing: bit-level, instruction-level, data, and task <b>parallelism.</b> <b>Parallelism</b> has been employed for many years, mainly in high-performance computing, but interest in it has grown lately due to the physical constraints preventing frequency scaling. As power consumption (and consequently heat generation) by computers has become a concern in recent years, parallel computing has become the dominant paradigm in computer architecture, mainly in the form of multi-core processors.|$|E
40|$|K-State Book NetworkThis flier advertised {{the panel}} discussion, "A Contrast of <b>Parallelisms</b> and Confrontations: The Other Wes Moore Experiences on a PWI Campus", {{presented}} by Dr. Be Stoney from Kansas State University's Department of Education. A panel {{of students from}} the Phi Beta Sigma fraternity discussed their <b>parallelisms</b> and confrontations based on "The Other Wes Moore" and their experiences at a Predominately White Institutions (PWI) ...|$|R
5000|$|<b>Parallelisms</b> in artistic speech {{are common}} in some {{languages}} of Mesoamerica, such as Nahuatl (Aztec). [...] It has also been observed in a language of Indonesia (that Fox imprecisely referred to as [...] "Rotinese") and Navajo. Other research has found <b>parallelisms</b> in the languages of the Ural-Altaic area (including Finnish-Karelian folk poetry and the epics and songs of the Turkic and Mongolian peoples) and Toda, suggesting wider distribution among Dravidian languages.|$|R
50|$|Constraint 4: Projections of groups, {{especially}} at larger levels, depends on symmetry {{and on the}} establishment of musical <b>parallelisms.</b>|$|R
5|$|The chief {{device of}} ancient Hebrew Biblical poetry, {{including}} {{many of the}} psalms, was <b>parallelism,</b> a rhetorical structure in which successive lines reflected each other in grammatical structure, sound structure, notional content, or all three. <b>Parallelism</b> lent itself to antiphonal or call-and-response performance, which could also be reinforced by intonation. Thus, Biblical poetry relies much less on metrical feet to create rhythm, but instead creates rhythm based on much larger sound units of lines, phrases and sentences. Some classical poetry forms, such as Venpa of the Tamil language, had rigid grammars (to {{the point that they}} could be expressed as a context-free grammar) which ensured a rhythm. In Chinese poetry, tones as well as stresses create rhythm. Classical Chinese poetics identifies four tones: the level tone, rising tone, departing tone, and entering tone.|$|E
5|$|Cray {{had always}} {{attacked}} {{the problem of}} increased speed with three simultaneous advances; more execution units to give the system higher <b>parallelism,</b> tighter packaging to decrease signal delays, and faster components {{to allow for a}} higher clock speed. Of the three, Cray was normally least aggressive on the last; his designs tended to use components that were already in widespread use, as opposed to leading-edge designs.|$|E
5|$|Historical <b>parallelism</b> and the {{tradition}} of drawing inspiration from the Middle Ages have become keystones of Islamic ideology. Secular Arab Nationalism concentrates {{on the idea of}} Western Imperialism. Gamal Abdel Nasser likened himself to Saladin and imperialism to the Crusades. In his History of the Crusades Sa'id Ashur emphasised the similarity between the modern and medieval situation facing Muslims and the need to study the Crusades in depth. Sayyid Qutb declared there was an international Crusader conspiracy. The ideas of Jihad and a long struggle have developed some currency.|$|E
50|$|In 2016 Hans Havlicek {{showed that}} there is a {{one-to-one}} correspondence between Clifford <b>parallelisms</b> and planes external to the Klein quadric.|$|R
40|$|We {{explicitly}} {{determine the}} structure equations of 5 -dimensional Levi 2 -nondegenerate CR hypersurfaces, using our recently constructed canonical Cartan connection for {{this class of}} CR manifolds. We also give an outline of the basic properties of absolute <b>parallelisms</b> and Cartan connections, together with a brief discussion of the absolute <b>parallelisms</b> for such CR manifolds existing in the literature. Comment: 23 pages; in the new version Sect. 2 is slightly shorter; to appear on Rendiconti del Seminario Matematico-Università e Politecnico di Torin...|$|R
5000|$|Stylistically, it {{displays}} some of {{the best}} and worst excesses of Browne's at times labyrinthine and meandering baroque style, often involving <b>parallelisms</b> in its sentence construction.|$|R
5|$|Odaenathus behaved as a {{sovereign}} monarch; outside his kingdom, {{he had an}} overall administrative and military authority over the provincial governors of the Roman eastern provinces. Inside Palmyra, no Roman provincial official had any authority; the king filled the government with Palmyrene staffs. In <b>parallelism</b> to the Iranian practice of making the government appear as a family enterprise, Odaenathus bestowed his own gentilicium (Septimius) upon his leading generals and officials such as Zabdas, Zabbai and Worod.|$|E
5|$|Pigeonhole sort, {{counting}} sort, radix sort, and Van Emde Boas tree sorting {{all work}} best when the key size is small; for large enough keys, they become slower than comparison sorting algorithms. However, when the key size or the word size is very large {{relative to the}} number of items (or equivalently when the number of items is small), it may again become possible to sort quickly, using different algorithms that take advantage of the <b>parallelism</b> inherent in the ability to perform arithmetic operations on large words.|$|E
5|$|Prior to 1900, the {{similarity}} in {{shape of the}} shell of Amphidromus to that of South American tree snails in the family Bulimulidae had misled taxonomists. However, the dissections made by Wiegmann and Jacobi clearly showed that the inner anatomical features of Amphidromus {{were the same as}} those of the Asian-Indonesian Camaenidae, and that the resemblance of the shell of Amphidromus to that of bulimulids was merely an example of <b>parallelism.</b>|$|E
40|$|There are {{phenomena}} in language that share some properties with indefi-nites. I will establish <b>parallelisms</b> between indefinites and two apparently unrelated phenomena. These <b>parallelisms</b> allow for clarification and moti-vate a rethinking {{of the notion}} of contextual givenness vis a ̀ vis existential quantification, as well as the tools used in the literature to capture these phenomena. plain variable parametrized variable free variable ∃-closed variable domain restriction domain restriction plain indefinites certain indefinites de re names Table 1 : Preview of the final picture ∗Thanks to Anna Szabolcsi and Mike Solomon for useful discussion...|$|R
5000|$|However, current parallelizing compilers are {{not usually}} capable of {{bringing}} out these <b>parallelisms</b> automatically, and it is questionable whether this code would benefit from parallelization in the first place.|$|R
40|$|In signal {{processing}} area, applications involve {{a large amount}} of computation, suggesting the use of multiprocessors to speed up processing. However, obtaining good performance is not easy because the machine should take advantage of the potential <b>parallelisms</b> of the studied application. That is why several parallel implementation methods using mapping and scheduling algorithms has been developped. One of development shells aims is application partitioning so that every part will be processed by a different processor, like SynDEx [1] or Ptolemy[2]. These shells use some graph models to exhibit both potential <b>parallelisms</b> of the application and the available multiprocessor <b>parallelisms</b> [3], but the task granularity problem is not considered when the application is modelized. The {{purpose of this paper is}} to emphasize the problem of the task granularity when the application is modelized by means of a graph and to study the impact on speedup. As a solution for this problem, this paper pres [...] ...|$|R
5|$|Since {{the time}} of de Vaux, the default {{assumption}} {{has been that the}} Wicked Priest is a single individual, if only because of the appealing <b>parallelism</b> to the Teacher of Righteousness. The consensus time period for the founding of Qumran (150-140 BCE) includes five High Priests: three Hellenized and two Maccabean: Jason, Menelaus, Alcimus, Jonathan, and Simon, and also the various figures potentially associated with the intersacerdotium.|$|E
5|$|Other translators {{have placed}} much greater weight {{on trying to}} {{convey a sense of}} the poetic forms used by Du Fu. Vikram Seth in Three Chinese Poets uses English-style rhyme schemes, whereas Keith Holyoak in Facing the Moon approximates the Chinese rhyme scheme; both use end-stopped lines and {{preserve}} some degree of <b>parallelism.</b> In The Selected Poems of Du Fu, Burton Watson follows the parallelisms quite strictly, persuading the western reader to adapt to the poems rather than vice versa. Similarly, he deals with the allusion of the later works by combining literal translation with extensive annotation.|$|E
5|$|The Reformed {{confessions of}} faith, {{official}} {{statements of the}} beliefs of Reformed churches, followed the view that Christ is really present in the Supper. They either took Calvin's view that the signs of bread and wine are instrumental in communicating grace, or Bullinger's symbolic <b>parallelism.</b> Some of the German-language Reformed confessions seem hesitant to make the sacrament a means of grace, but they all maintain {{that there is a}} union between the outward signs of the sacrament and the inward grace signified. Reformed orthodox theologians also continued to insist on Christ's real presence in the Supper, while denying against Lutherans that his body is locally present.|$|E
30|$|In this paper, we {{introduce}} fuzzy rank {{functions for}} groupoids, and we investigate {{their roles in}} the semigroup of binary systems by using the notions of right <b>parallelisms</b> and ρ-shrinking groupoids.|$|R
6000|$|The reader {{must decide}} {{as to whether}} I have proved my <b>parallelisms,</b> denied by Dr. Munro, between the Clyde, Australian, and other markings, whether on rocks or on smaller stones. {80a} ...|$|R
50|$|Trasgredire (Transgressing or Cheeky) is a 2000 sex comedy {{directed}} by Tinto Brass, with Yuliya Mayarchuk {{in the lead}} role. Certain <b>parallelisms</b> are drawn between Nerosubianco (1969), another Tinto Brass film set in London.|$|R
