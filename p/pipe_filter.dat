8|102|Public
25|$|Compared to filters {{that hang}} {{on the back of}} the aquarium, canister-style {{external}} filters offer a greater quantity of filter materials to be used along with a greater degree of flexibility with respect to filter material choice. Water enters the canister filled with the chosen filter material through an intake pipe at the bottom of the canister, passes through the material, and is fed back to the aquarium through the return pipe. Water is forced to circulate through the filter by a pump typically installed at the top of the canister. It is important to note that canister filters are sealed, fully flooded systems, meaning that the aquarium, intake <b>pipe,</b> <b>filter</b> interior and the return pipe form a continuous body of water. In this configuration both the intake and return path form two siphons, which precisely counterbalance each other. Under these circumstances, the filter pump does not have to spend any effort to lift the water back to the aquarium, regardless of how high the latter is installed above the canister. The pump should only be powerful enough to push the water through the filtering material as well as overcome the drag in the intake and return pipes. This makes canister filter pumps virtually insensitive to the height difference between the aquarium and the filter (although exceeding the manufacturer-specified height limit can lead to leaks).|$|E
50|$|A {{more modern}} type of {{development}} environments {{that are currently}} favored in both industrial and scientific use {{are based on a}} component based paradigm. The neural network is constructed by connecting adaptive filter components in a <b>pipe</b> <b>filter</b> flow. This allows for greater flexibility as custom networks can be built as well as custom components used by the network. In many cases this allows a combination of adaptive and non-adaptive components to work together. The data flow is controlled by a control system which is exchangeable as well as the adaptation algorithms. The other important feature is deployment capabilities.|$|E
50|$|In design mode {{components}} {{are linked to}} construct a topology. Linked components enable a signal flow creating a <b>pipe</b> <b>filter</b> machine. When a signal is set on a component, it filters the signal in some way and the filtered signal can then be piped to the next component in the linked chain of components that form the topology. The components can be either static or adaptive. Besides regular filters, they can be sources or sinks (like plots or data loggers). The standard distribution of synapse comes {{with a variety of}} components, ranging from simple neural network components such as weight layers and function layers, to whole neural networks such as self-organizing maps and more complex static elements like for instance the fuzzy logic component. The control system is chosen and configured in design mode as well.|$|E
40|$|Abstract—Many {{applications}} {{process or}} transform {{a stream of}} data. Such applications are organized as a sequence of different stages, which may be independent enough to be simultaneously carried out. The original <b>Pipes</b> and <b>Filters</b> pattern and the Parallel <b>Pipes</b> and <b>Filters</b> pattern describe those actions. We present here the Secure <b>Pipes</b> and <b>Filters</b> pattern as a secure version of the original patterns, which contains a minimal set of security mechanisms to provide a set of basic security functions. The Secure <b>Pipes</b> and <b>Filters</b> pattern includes ways to add security controls at each stage of processing, controlling that only predefined operations are applied to data streams, as well as securing data movement. Keywords-Security; <b>Pipes</b> and <b>Filters</b> pattern; security controls I...|$|R
30|$|Mineral {{precipitates}} (scaling) {{from deep}} saline thermal waters often constitute {{a major problem}} during geothermal energy production. The occurrence of scale-fragments accumulating and clogging <b>pipes,</b> <b>filters,</b> and heat exchangers is of particular concern regarding an efficient energy extraction.|$|R
40|$|The Parallel <b>Pipes</b> and <b>Filters</b> {{pattern is}} an {{architectural}} pattern for parallel programming, used when a {{problem can be}} understood in terms of functional parallelism. It is an extension with aspects of parallelism of the original <b>Pipes</b> and <b>Filters</b> pattern presented in the Pattern-Oriented Software Architecture book, by Buschmann, Meunier, Rohnert, Sommerland, and Stal. The Parallel <b>Pipes</b> and <b>Filters</b> pattern proposes a solution in which different operations are actually simultaneously performed on different ordered pieces of data, that “flow ” through the operations. Operations carried out by each component depend only on the availability of results from preceding components. 1...|$|R
50|$|Compared to filters {{that hang}} {{on the back of}} the aquarium, canister-style {{external}} filters offer a greater quantity of filter materials to be used along with a greater degree of flexibility with respect to filter material choice. Water enters the canister filled with the chosen filter material through an intake pipe at the bottom of the canister, passes through the material, and is fed back to the aquarium through the return pipe. Water is forced to circulate through the filter by a pump typically installed at the top of the canister. It is important to note that canister filters are sealed, fully flooded systems, meaning that the aquarium, intake <b>pipe,</b> <b>filter</b> interior and the return pipe form a continuous body of water. In this configuration both the intake and return path form two siphons, which precisely counterbalance each other. Under these circumstances, the filter pump does not have to spend any effort to lift the water back to the aquarium, regardless of how high the latter is installed above the canister. The pump should only be powerful enough to push the water through the filtering material as well as overcome the drag in the intake and return pipes. This makes canister filter pumps virtually insensitive to the height difference between the aquarium and the filter (although exceeding the manufacturer-specified height limit can lead to leaks).|$|E
40|$|Cukanggenteng Village, Ciwidey, Bandung has {{problem with}} {{availability}} of clean water. The villagers use water from Cisondari River {{near the village}} and shallow well which has high turbidity. Usage of high turbidity water could cause various health problems, such as cholera, dysentery, typhus, and so on. There is some effort done by the villager to reduce the water turbidity, by utilizing sedimentation process. However the sedimentation process does not work effectively. In this community service project, a sand filter and <b>pipe</b> <b>filter</b> was utilized to solve the clean water scarcity problem. The sand filter was operated up flow, and its overflow was fed into the <b>pipe</b> <b>filter.</b> The <b>pipe</b> <b>filter</b> consisted of three 4 ” pipes with sand, coconut shell carbon, and sponge. This system was designed with easily obtained filter media, and simple construction, {{so that it could}} be taken care, operated, duplicated by the villagers. Analysis of the water showed that the filtration could remove 91. 06 % of water turbidity from 94. 55 NTU to 8. 445 NTU, with pH 6. 55. The water after this simple filtration process could be categorized as clean water, based on the standards in PERMENKES RI No. 416 /MENKES/PER/IX/ 1990. The results obtained showed that the filtration process has successfully implemented to reduce the water turbidity...|$|E
40|$|Section 7 - 01 {{describes}} work {{consisting of}} constructing subsurface drains {{in accordance with}} the Contract. This work shall include installation of solid and perforated <b>pipe,</b> <b>filter</b> Material, filter fabric (geotextile), sidewalk drains, and gravel drains. Subsurface drains shall be constructed of gravel filter Material and may include perforated pipe and filter fabric as detailed on the Drawings...|$|E
40|$|Architecture–based {{reliability}} analysis {{is necessary for}} a software application that is developed using the component–based software development paradigm. Preva-lent architecture–based analysis techniques represent the application architecture by a Markov process, which may be adequate {{in the context of}} an application with a general– purpose architecture. The Markov process, however, is not adequate to represent the architecture of an application which follows a specific architecture style, and hence preva-lent techniques cannot be used to analyze the reliability of such an application. In this paper we develop a {{reliability analysis}} methodology for an application which follows one such architecture style, namely, the <b>pipe</b> and <b>filter</b> archi-tecture style. We consider two variants of the topological organization of the <b>pipes</b> and <b>filters</b> in an application. In the first variant the <b>pipes</b> and <b>filters</b> are organized into a linear topology, whereas the second variant consists of a linear topology with a feedback loop. The objective of the reliability analysis methodology is to develop an analytical function which expresses the overall application reliability in terms of the reliabilities of the <b>pipes</b> and <b>filters,</b> and the characteristics of the topological organization of the <b>pipes</b> and <b>filters.</b> We illustrate the potential of the methodology to obtain a reliability estimate as well as to facilitate sensi-tivity analysis for a Document Analysis and Understanding Application which follows the <b>pipe</b> and <b>filter</b> architecture style. To the best of our knowledge, this is the first compre-hensive effort to combine two mature, yet independent re-search areas, namely, software reliability analysis and soft-ware architecture. 1 Introduction an...|$|R
30|$|Abatement is {{the access}} point for {{compilation}} {{and evaluation of}} different abatement options, at any relevant scale. It relates {{to a set of}} abatement strategies that can be applied to a chemical exposure problem, ranging from technical solutions to reduce emissions (end of <b>pipe</b> <b>filters)</b> to substitution and non-technical approaches such as the spatial planning of emissions vis a vis vulnerable receptors (e.g. protected ecosystems or drinking water production inlets).|$|R
50|$|In {{buildings}} with HVAC air handlers that admit outside air for ventilation, plumbing vents placed too closely to air intakes or windows {{can be a}} source of sewer gas odors. In some cases airflow around buildings and wind effects may contribute to sewer gas odor problems even with appropriately separated vents and air intakes. Increasing vent heights, adding vent <b>pipe</b> <b>filters,</b> or providing powered dilution and exhaust can help reduce occurrences.|$|R
40|$|Direct-conversion {{receivers}} {{are becoming}} more and more popular in wireless communication systems because they promise superior performance in power consumption, size, and cost over existing heterodyne-based receivers. Theoretically, direct-conversion receivers offer the advantage of omitting the intermediate stage required in heterodyne architectures, thereby greatly reducing the hardware complexity of receiver design. In this research, a higher order filtering technique is proposed to attenuate out-of-band blockers in a direct-conversion receiver without deteriorating the desired signal present in the band of interest. The proposed filter structure is based on a current-mode biquadratic <b>pipe</b> <b>filter</b> cell, which originally allows the implementation of only all-pole filter functions such as Butterworth. With the aim to achieve a flat magnitude response in pass-band and steep rate of attenuation in transition-band, the base structure is modified to implement higher order Inverse-Chebyshev transfer function, which requires realization of arbitrary complex zeros in the stopband. A third order prototype has been realized in a 0. 18 ?m CMOS process using 1. 8 V supply voltage...|$|E
30|$|To {{cope with}} this {{disastrous}} situation, different water treatment options and alternative strategies like rainwater harvesting (RWH) and pond sand filter (PSF) systems are tried to adopt in government and non-government sectors. A part of these, United Nations Children’s Emergency Fund (UNICEF) and Department of Public Health Engineering (DPHE) have been establishing PSF to purify pond water in saline affected coastal areas since 1983 (DPHE and UNICEF 1989). The PSFs which are made with brick, cement, sand, brick chips, net, hand tubewell, pvc <b>pipe,</b> <b>filter</b> media, etc. are established {{on the edge of}} pond to supply drinking water, in particular, in the salinity or arsenic-affected areas. Yokota et al. (2001) stated that PSFs can reduce both coliform and general bacteria, but it may not remove 100  % of pathogen from heavily contaminated surface water. Rahman et al. (2001) mentioned that the PSF system, being a low cost technology, with very high efficiency in turbidity, colour and bacterial removal, may be considered as an alternative water supply system for small rural communities.|$|E
40|$|<b>Pipes</b> and <b>filters</b> is {{a popular}} {{architecture}} which connects computational components (<b>filters)</b> through connectors (<b>pipes)</b> so that computations are performed in a stream like fashion. The data are transported through the <b>pipes</b> between <b>filters,</b> gradually transforming inputs to outputs. This kind of stream processing has been made popular through UNIX pipes that serially connect independent components for performing a sequence of tasks. We show in this paper how to foralize this architecture in terms of monads, hereby including relational specifications as special cases. The system is given through a directed acyclic graph the nodes of which carry the computational structure by being labelled with morphisms from the monad, and the edges provide the data for these operations. It is shown how fundamental compositional operations like combining <b>pipes</b> and <b>filters,</b> and refining a system by replacing simple parts through more elaborate ones, are supported through this construction. A notion of bisimular <b>pipes</b> and <b>filters</b> is introduced, it is shown that bisimilarity of components carries over to bisimilarity of entire systems...|$|R
50|$|In {{computing}} {{environments that}} support the <b>pipes</b> and <b>filters</b> model for interprocess communication, a FIFO is another name for a named pipe.|$|R
50|$|This {{feature of}} Unix was {{borrowed}} by other operating systems, such as Taos and MS-DOS, and eventually became the <b>pipes</b> and <b>filters</b> design pattern of software engineering.|$|R
50|$|<b>Pipes</b> and <b>filters</b> can {{be viewed}} as a form of {{functional}} programming, using byte streams as data objects; more specifically, they can be seen as a particular form of monad for I/O.|$|R
5000|$|... #Caption: Variant of midwakh <b>pipe</b> with stem-mounted <b>filter,</b> above, and {{traditional}} pipe, below.|$|R
50|$|In the 1980s, the Carter Center {{initiated}} {{a program to}} eradicate guinea worm. The Guinea Worm Eradication campaign began in 1980 at the US Centers for Disease Control and Prevention. In 1984, the CDC was appointed as the World Health Organization Collaborating Center for research, training, and eradication of Dracunculus medinensis. There were 20 countries in 1986 that were affected by guinea worms. That year, WHO started the eradication program and the Carter Center took the lead on the effort. The program included education of people in affected areas that the disease was caused by larvae in drinking water, isolation and support for sufferers, and - crucially - widespread distribution of net <b>filters</b> and <b>pipe</b> <b>filters</b> for drinking water, and education {{about the importance of}} using them.|$|R
40|$|This paper {{presents}} an initial {{evaluation of the}} performance characteristics of three architectural styles, i. e., the <b>pipes</b> & <b>filters,</b> the layered, and the blackboard style. The evaluation was performed using simulations and includes both analysis for each style {{as well as a}} comparative analysis between the styles...|$|R
5000|$|The Continuous Quality Assessment Toolkit (ConQAT) is a {{configurable}} software quality analysis engine. ConQAT {{is based on}} a <b>pipes</b> and <b>filters</b> architecture that enables flexible complex analysis configurations using a graphical configuration language. This architecture differs from other analysis tools that usually have a fixed data model and hard-wired analysis logics.|$|R
50|$|In computing, tee is {{a command}} in {{command-line}} interpreters (shells) using standard streams which reads standard input and writes it to both standard output {{and one or}} more files, effectively duplicating its input. It is primarily {{used in conjunction with}} <b>pipes</b> and <b>filters.</b> The command is named after the T-splitter used in plumbing.|$|R
5000|$|However, a 2000 NORML-MAPS {{cannabis}} {{study found}} that [...] "water <b>pipes</b> <b>filter</b> out more psychoactive THC than they do other tars, thereby requiring users to smoke more to reach their desired effect". In the study, smoke from cannabis supplied by the NIDA was drawn {{through a number of}} smoking devices and analyzed. This study looked at the tar to cannabinoid ratio in the gas in output by various bongs, as well as unfiltered and filtered joints, and vaporizers. The results showed that only vaporizers produced a better tar to cannabinoid ratio than unfiltered joints, but that within the cannabinoids produced, even vaporizers warped the ratio of THC (the psychoactive component of the smoke) to CBN (capable of producing medical benefits but is not psychoactive) in favor of CBN. This showed an unfiltered joint had the best tar to THC ratio of all, and bongs were actually seriously detrimental in this respect.|$|R
5000|$|Early modern Jewish {{law also}} {{addresses}} the Turkish narghile, or water <b>pipe,</b> which <b>filters</b> the smoke through water. Benveniste rules that the narghile violates even holy-day regulations {{because it may}} extinguish fire (which cannot be extinguished on a Jewish holy day). Gombiner forbids the naghile's use because its tobacco {{is analogous to the}} mugmar (spice incense) banned by Talmudic law.|$|R
5000|$|The jq {{language}} {{is based on}} the same concepts of streams, <b>pipes,</b> and <b>filters</b> that are familiar from the Unix shell. Filters can be constructed from valid JSON expressions using a JSON-oriented syntax and are connected using the pipe character [...] "". The identity filter is [...] "", so that for example the expression [...] would produce the JSON value: [...]|$|R
40|$|Software and {{hardware}} architectures {{are prone to}} modifications. We demonstrate how a mathematically founded powerful refinement calculus for a class of architectures, namely <b>pipe</b> and <b>filter</b> architectures, {{can be used to}} modify a system in a provably correct way. The calculus consists of basic rules to add and to remove <b>filters</b> (components) and <b>pipes</b> (channels) to a system. A networking example demonstrates some of the features of our calculus. The calculus is simple, flexible and compositional. Thus it allows us to build more complex and specific rules that e. g. embed models of existing architectures or define design patterns as transformation rules. 1 Introduction Only in recent years, fueled through the survey [10] and greatly enhanced by [16], notations to define software architectures have been developed (see [12] for an overview). One specific kind of architecture description style [...] - the <b>pipe</b> and <b>filter</b> approach [...] -, is especially useful for asynchronously communica [...] ...|$|R
30|$|The LCI of the ORC {{includes}} {{data regarding}} the electric generator, ORC turbine, circulation pump, air cooler, <b>filters,</b> <b>pipes,</b> and other surface elements {{as described in}} Lacirignola and Blanc (2013).|$|R
50|$|The {{idea that}} {{software}} should be componentized - built from prefabricated components - first became prominent with Douglas McIlroy's {{address at the}} NATO conference on software engineering in Garmisch, Germany, 1968, titled Mass Produced Software Components. The conference set out to counter the so-called software crisis. McIlroy's subsequent inclusion of <b>pipes</b> and <b>filters</b> into the Unix operating system was the first implementation of an infrastructure for this idea.|$|R
40|$|This {{research}} {{deals with}} {{an important issue}} in software development. It is concerned with software development {{with the help of}} software architecture styles. Software industry uses many architecture styles namely, <b>pipe</b> and <b>filter,</b> object oriented, event invocation, process control layered, data centered architecture etc. All these architecture styles have their own advantages and disadvantages as well. Therefore main objective of this research is to represent different architecture styles with their features and defects...|$|R
40|$|Along {{with our}} {{colleagues at the}} Oregon Graduate Institute and Georgia Institute of Technology, we have {{recently}} been experimenting with real-rate systems, that is, systems that are required to move data {{from one place to}} another at defined rates, such as 30 items per second. Audio conferencing or streaming video systems are typical: they are required to deliver video or audio frames from a source (a server or file system) in one place to a sink (a display or a sound generator) in another; the frames must arrive periodically, with constrained latency and jitter. We have successfully built such systems (for example, see reference [Walpole 1997]), but they are not simple to design or construct. Our current research seeks to capture our knowledge of this domain into an information flow framework, called InfoPipes. The goal of Infopipes is to make the task of building a system that moves data from one part of the Internet to another as simple as connecting pre-defined components such as buffers, <b>pipes,</b> <b>filters</b> and meters. The latency, jitter and data-rate properties of the resulting pipeline should follow by calculation from the properties of the components...|$|R
50|$|The modules in this {{category}} were used either to filter or to transform the data that is flowing in the <b>pipe.</b> It contained <b>filter,</b> count, location extractor, loop, regex, rename, reverse, sort, split, sub-element, tail, truncate, union, unique and web service modules.|$|R
25|$|The {{hydraulic}} circuit, {{which has}} hydraulic pumps, reservoirs, <b>filters,</b> <b>pipes,</b> valves and actuators. The actuators are {{powered by the}} hydraulic pressure generated by the pumps in the hydraulic circuit. The actuators convert hydraulic pressure into control surface movements. The electro-hydraulic servo valves control {{the movement of the}} actuators.|$|R
50|$|While {{the user}} {{interface}} of the editor {{is reminiscent of}} DOS editors, it also includes the typical Unix editor features such as internal command history, tab completion in file selection menus, regular expression search system {{and the ability to}} <b>filter</b> (<b>pipe)</b> arbitrary blocks of text through any external command.|$|R
50|$|The {{hydraulic}} circuit, {{which has}} hydraulic pumps, reservoirs, <b>filters,</b> <b>pipes,</b> valves and actuators. The actuators are {{powered by the}} hydraulic pressure generated by the pumps in the hydraulic circuit. The actuators convert hydraulic pressure into control surface movements. The electro-hydraulic servo valves control {{the movement of the}} actuators.|$|R
50|$|The Living Machine is an {{intensive}} bioremediation {{system that can}} also produce beneficial byproducts, such as reuse-quality water, ornamental plants and plant products—for building material, energy biomass, animal feed. Aquatic and wetland plants, bacteria, algae, protozoa, plankton, snails and other organisms {{are used in the}} system to provide specific cleansing or trophic functions. The tidal process operates outdoors in tropical and temperate climates. In colder climates, the system of tanks, <b>pipes</b> and <b>filters</b> may be housed in a greenhouse to prevent freezing and raise the rate of biological activity.|$|R
