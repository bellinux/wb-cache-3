44|81|Public
50|$|The S/360-67 {{operated}} {{with a basic}} internal {{cycle time}} of 200 nanoseconds and a basic 750 nanosecond magnetic core storage cycle, {{the same as the}} S/360-65. The 200 ns cycle time put the S/360-67 {{in the middle of the}} S/360 line, between the Model 30 at the low end and the Model 195 at the high end. From 1 to 8 bytes (8 data bits and 1 parity bit per byte) could be read or written to processor storage in a single cycle. A 60-bit <b>parallel</b> <b>adder</b> facilitated handling of long fractions in floating-point operations. An 8-bit serial adder enabled simultaneous execution of floating point exponent arithmetic, and also handled decimal arithmetic and variable field length (VFL) instructions.|$|E
40|$|Optimization {{techniques}} for decreasing {{the time and}} area of adder circuits have been extensively studied for years mostly in binary logic system. In this paper, we provide the necessary equations required to design a full adder in quaternary logic system. We develop the equations for single-stage <b>parallel</b> <b>adder</b> which works as a carry look-ahead adder. We also provide {{the design of a}} logarithmic stage <b>parallel</b> <b>adder</b> which can compute the carries within log 2 (n) time delay for n qudits. At last, we compare the designs and finally propose a hybrid adder which combines the advantages of serial and <b>parallel</b> <b>adder...</b>|$|E
40|$|Abstract:- The paper {{describes}} {{the design of}} all optical <b>parallel</b> <b>adder</b> and all optical arithmetic unit by using {{of a set of}} optical full adders and hard-limiters. The <b>parallel</b> <b>adder</b> and arithmetic unit are demonstrated via simulations and experiments. The optical Arithmetic unit can be used to perform a fast central processor unit using optical hardware components...|$|E
40|$|In this paper, {{we propose}} Kogge-Stone and Brent-Kung <b>parallel</b> prefix <b>adders</b> based on {{degenerate}} pass transistorlogic (PTL). Threshold loss problem {{are the main}} drawback inmost pass transistor logic family. This threshold loss problem canbe minimized by using the complementary control signals. Thesecomplementary control signals are obtained by 5 -TransistorXOR-XNOR module. By using these complementary outputs wedesigned <b>parallel</b> prefix <b>adders</b> based on 10 -Transistor full <b>adder.</b> <b>Parallel</b> prefix <b>adders</b> are used {{to speed up the}} binary additionand these adders are more flexible to perform addition of higherorder bits in complex circuits. The transistor levelimplementation of <b>parallel</b> prefix <b>adders</b> based on degeneratePTL gives better performance compared to CPL and DPL passtransistor logic...|$|R
40|$|<b>Parallel</b> prefix <b>adder</b> is {{the most}} {{flexible}} and widely used for binary addition. <b>Parallel</b> Prefix <b>adders</b> are best suited for VLSI implementation. Numbers of <b>parallel</b> prefix <b>adder</b> structures have been proposed {{over the past years}} intended to optimize area, fan-out, logic depth and inter connect count. This paper presents a new approach to redesign the basic operators used in parallel prefix architectures. The number of multiplexers contained in each Slice of an FPGA is considered here for the redesign of the basic operators used in parallel prefix tree. This new design is implemented with 128 -bit width operands of various <b>parallel</b> prefix <b>adders</b> on Xilinx Spartan FPGA. The experimental results indicate that the new approach of basic operators make some of the <b>parallel</b> prefix <b>adder’s</b> architectures faster and area efficient...|$|R
40|$|Abstract − In this paper, {{we propose}} Kogge-Stone and Brent-Kung <b>parallel</b> prefix <b>adders</b> based on {{degenerate}} pass transistor logic (PTL). Threshold loss problem {{are the main}} drawback in most pass transistor logic family. This threshold loss problem can be minimized by using the complementary control signals. These complementary control signals are obtained by 5 -Transistor XOR-XNOR module. By using these complementary outputs we designed <b>parallel</b> prefix <b>adders</b> based on 10 -Transistor full <b>adder.</b> <b>Parallel</b> prefix <b>adders</b> are used {{to speed up the}} binary addition and these adders are more flexible to perform addition of higher order bits in complex circuits. The transistor level implementation of <b>parallel</b> prefix <b>adders</b> based on degenerate PTL gives better performance compared to CPL and DPL pass transistor logic...|$|R
40|$|Includes bibliographical {{references}} (pages [96]- 97) This thesis {{presents a}} method to use complementary metal-oxidesemiconductor (CMOS) technology to design and simulate a 32 -bits high speed <b>parallel</b> <b>adder,</b> using CAD tools such as Mentor Graphics and CALMA (GDS II) systems. The method implemented to design this fast <b>parallel</b> <b>adder</b> is {{through the use of}} group increment. The design is carried out for a 32 -bit fast <b>parallel</b> <b>adder.</b> The simulation results show an overall circuit delay about 16 ns using CMOS 3 technology. This is much faster than carry look-ahead adder which is widely used as adder in a typical arithmetic logic unit (ALU). M. S. (Master of Science...|$|E
40|$|In this paper, we give {{a method}} to {{construct}} a <b>parallel</b> <b>adder</b> of m k-bit numbers based on the school method of addition. As a result, we get a <b>parallel</b> <b>adder</b> with depth 4 Δ log n + 12 and hardware cost k Δ m. We apply our method to develop a parallel multiplier with asymptotical depth c Δ log n and hardware cost n²...|$|E
40|$|In {{digital circuit}} {{addition}} process is biggest and very important process. With {{the help of}} this method digital equipment perform various types of operation such as addition multiplication etc. {{on the basis of}} working principle {{there are two types of}} adder (1) Serial adder (2) <b>Parallel</b> <b>Adder.</b> <b>Parallel</b> <b>adder</b> is faster rather then serial adder, generally this require more components but in this type of method all bits are added simultaneousl...|$|E
40|$|ABSTRACT: Adders {{are known}} to be the {{frequently}} used ones in VLSI designs. In digital design we have half adder and full adder, by using these adders we can implement ripple carry adder(RCA). RCA is used to perform any number of additions. In this RCA is serial adder and it has propagation delay problem. With increase in ha & fa circuits, delay also increases simultaneously. That’s the reason these <b>parallel</b> <b>adders</b> (<b>parallel</b> prefix <b>adders)</b> are preferred. The <b>parallel</b> prefix <b>adders</b> are KS adder(kogge-stone),SKS adder(sparse kogge-stone),Spanning tree and Brentkung adderS. These adders are designed and compared by using area and delay constraints. Simulation and synthesis by model sim 6. 4 b, Xilinx ise 10. 1 i. I...|$|R
40|$|High speed Finite Impulse Response filter (FIR) is {{designed}} using {{the concept of}} faithfully rounded truncated multiplier and <b>parallel</b> prefix <b>adder.</b> The bit width is also optimized without sacrificing the signal precision. A transposed form of FIR filter is implemented using an improved version of truncated multiplier and <b>parallel</b> prefix <b>adder.</b> Multiplication and addition is frequently required in Digital Signal Processing. <b>Parallel</b> prefix <b>adder</b> provides a high speed addition and the improved version of truncated multiplier also provides successive reduction in delay and the components used...|$|R
40|$|In this paper, {{we propose}} 128 -bit Kogge-Stone, Ladner-Fischer, Spanning tree <b>parallel</b> prefix <b>adders</b> and {{compared}} with Ripple carry adder. In general N-bit adders like Ripple Carry Adders (slow adders compare to other adders), and Carry Look Ahead adders (area consuming adders) {{are used in}} earlier days. But now the most Industries are using <b>parallel</b> prefix <b>adders</b> because of their advantages compare to other <b>adders.</b> <b>Parallel</b> prefix <b>adders</b> are faster and area efficient. <b>Parallel</b> prefix <b>adder</b> is a technique for increasing the speed in DSP processor while performing addition. While when we want to design any 128 -bit operating systems and processors we can use these adders in place of regular adders. We simulate and synthesis different types of 128 -bit prefix adders using Xilinx ISE 12. 3 tool. By using these synthesis results, we noted the performance parameters like number of LUTs and delay. We compare these three adders in terms of LUTs (represents area) and delay values...|$|R
40|$|A new modulo 2 n + 1 {{multiplier}} {{architecture is}} proposed for operands {{in the normal}} representation. The novel archi-tecture is derived by showing that all required correction factors can be merged into a single constant one and by treating this, partly as a partial product and partly by the final <b>parallel</b> <b>adder.</b> The proposed architecture utilizes a to-tal of (n+ 1) partial products, each n bits wide and is built using an inverted end-around-carry, carry-save adder tree and a final <b>parallel</b> <b>adder.</b> 1...|$|E
40|$|Abstract — A new modulo 2 k + 1 squarer {{architecture}} is proposed for operands {{in the normal}} representation. The novel {{architecture is}} derived by showing that all required correction factors can be merged into a single constant one and by treating this, partly as a partial product and partly by the final <b>parallel</b> <b>adder.</b> The proposed architecture utilizes a total of d k 2 e+ 1 partial products, each k bits wide and is built using an inverted end-around-carry, carry-save adder tree and a final <b>parallel</b> <b>adder.</b> Index Terms — Computer arithmetic, residue / modulo arith-metic, residue number system, modulo squarers. I...|$|E
40|$|AbstractDigital adder with optimum {{area and}} speed {{is one of}} the {{important}} areas of research in VLSI system design. This paper discusses about the efficient implementation of <b>parallel</b> <b>adder</b> with optimized area and propagation delay for FPGA applications. Our approach uses carry select adder configuration and <b>parallel</b> <b>adder</b> approach for the implementation of fast adder. There are different choices for implementing carry select adder. We compare some of these methods and choose the one appropriate for FPGA implementation. Two different approaches for implementing linear carry select adder using Kogge Stone configuration are discussed here and compared in terms of area and speed. Both approaches are implemented on an FPGA and the performance is compared. Simulation results are used to verify the theory...|$|E
40|$|Abstract　The {{high-speed}} redundant {{binary divider}} (RBD), a quasi-celluar array, which is built of <b>parallel</b> <b>adders,</b> multipliers, and decision circuits, uses a redundant binary fraction {{and has the}} almost minimum propagating time of a carry. It is clarified that RBD is faster than other dividers {{and is able to}} calculate the remainder. 　　冗長を有する高速除算器RBD-Iは並列加算器および乗算器より構成されるセル構造を持つ。冗長２進数を用いることにより桁上げ時間が非常に少ない高速の除算器が実現された。判別器を付加したRBD-IIでほ冗長２進数の桁数が少くなり，それだけ構成素子数が少くなっている。また，同種の除算器に比して，剰余が求まるという利点を持っている...|$|R
40|$|Abstract: This paper {{proposes a}} novel {{technique}} for the Chinese remainder theorem (CRT) with the moduli (2 n − 1, 2 n, 2 n+ 1). Hardware {{implementation of the}} proposed CRT algorithm utilizes two kinds of <b>parallel</b> <b>adders.</b> One {{is referred to as}} modulo signed-digit m adder (MSDA) which performs a fast propagation-free addition and allows for the annihilation of carry or borrow chains using redundant binary number representation. Another implements <b>parallel</b> prefix <b>adder</b> which is the evolution of carry-lookahead adder (CLA). Compared to 16 -digit Piestrak’s high-speed converter, the computation time is shorten by 34 %...|$|R
40|$|Fast {{addition}} {{is essential}} in many DSP algorithms. Various structures have been introduced {{to speed up the}} time critical carry propagation. For high throughput applications, however, {{it may be necessary to}} introduce pipelining. In this report the power consumption of four different adder structures, with varying word length and different number of pipeline cuts, is compared. Out of the four adder structures compared, the Kogge-Stone <b>parallel</b> prefix <b>adder</b> proves to be the best choice most of the time. The Brent-Kung <b>parallel</b> prefix <b>adder</b> is also a good choice, but the maximal throughput does not reach as high as the maximal throughput of the Kogge-Stone <b>parallel</b> prefix <b>adder...</b>|$|R
40|$|Abstract — Pipelining {{digital systems}} {{has been shown}} to provide {{significant}} performance gains over non-pipelined systems and remains a standard in microprocessor design. The desire for increased performance has seen a push for deeper pipelines, as well as the introduction of pipelining schemes such as wavepipelining and hybrid wave-pipelining. In this paper we present a hybrid wave-pipelined <b>parallel</b> <b>adder</b> that operates at 1. 79 GHz, � performance improvement compared to that of a superpipelined adder. The simulations have been performed using a modest 0. 25 �m technology. The three stage hybrid wavepipelined <b>parallel</b> <b>adder</b> sustains a total of 8 unrelated data waves within the pipe. Another performance benefit achieved by using the the hybrid wave-pipelining scheme is the lessening of delays associated with clock skew and clock distribution. I...|$|E
40|$|Springer Science+Business Media, LLC 2011 Abstract The RSA public-key {{cryptosystem}} is an algorithm {{that converts}} a plain-text to its corresponding cipher-text, and then converts the cipher-text {{back into its}} corresponding plain-text. In this article, we propose five DNA-based algorithms— <b>parallel</b> <b>adder,</b> parallel subtractor, parallel multiplier, parallel comparator, and parallel modular arithmetic—that construct molecular solutions for any (plain-text, cipher-text) pair for the RSA public-key cryptosystem. Furthermore, we demonstrate that a...|$|E
40|$|Quantum and {{reversible}} {{logic circuits}} have more advantages than the common circuits, like low power consumption. These circuits are good choice to design future computers. One {{of the important}} issues in reversible logic is parity preservation. If parity of inputs and outputs are equal in reversible gate, this gate will be parity preserve. Reversible circuits made by these gates are parity preserve. In this {{paper we propose a}} new fault tolerant reversible divider. The proposed fault tolerant reversible divider is the first effort to design fault tolerant reversible division circuit. In this circuit, we use some fault tolerant reversible components like fault tolerant reversible <b>parallel</b> <b>adder,</b> fault tolerant reversible shift register and fault tolerant reversible n-bit register. Hence, we also propose a new fault tolerant reversible full adder, a new fault tolerant reversible n+ 1 -bit <b>parallel</b> <b>adder</b> and a new basic cell for PIPO fault tolerant reversible left-shift register. These parity preserving reversible components are also proposed {{for the first time in}} the literature. All the scales are in the nanometric area...|$|E
3000|$|As {{far as the}} {{complexity}} is concerned, at first glance this solution seems to be preferable to Arch. V-B since it needs only two stages of <b>parallel</b> <b>adders</b> while the c 2 v memory is not split. However, {{the management of the}} reading ports of the v 2 c memory introduces significant overheads, since after the update of the soft outputs [...]...|$|R
40|$|<b>Parallel</b> prefix <b>adder</b> is {{the most}} {{flexible}} and widely used for binary addition. <b>Parallel</b> Prefix <b>adders</b> are best suited for VLSI implementation. Number of <b>parallel</b> prefix <b>adder</b> structures have been proposed {{over the past years}} intended to optimize area, fan-out, logic depth and inter connect count. This paper presents a new approach to redesign the basic operators used in parallel prefix architectures. The number of multiplexers contained in each Slice of an FPGA is considered here for the redesign of the basic operators used in parallel prefix tree. This new design is implemented with 16 -bit width operands of various <b>parallel</b> prefix <b>adders</b> on Xilinx Spartan FPGA. The experimental results indicate that the new approach of basic operators make some of the <b>parallel</b> prefix <b>adders</b> architectures faster and area efficient. The Parallel Prefix addition is done in three steps, which is shown in fig 1. The fundamental generate and propagate signals are used to generate the carry input for each adder. Two different operators black and gray are used here. The aim {{of this paper is to}} propose a new approach for the basic operators and make use of these operators in various <b>parallel</b> prefix <b>adders</b> to evaluate their performance with newly redesigned operators The rest of the paper is organized as follows: In section II, some background information about Parallel Prefix architecture is given. New design approach of basic operators is discussed in section III. Experimental results are presented in section IV. Conclusions are drawn in section V. I...|$|R
40|$|<b>Parallel</b> prefix <b>adder</b> is {{the most}} {{flexible}} and widely used for binary addition. <b>Parallel</b> Prefix <b>adders</b> are best suited for VLSI implementation. A number of <b>parallel</b> prefix <b>adder</b> structures have been proposed {{over the past years}} intended to optimize area, fan-out, logic depth and inter connect count. This paper presents a hybrid high speed and area efficient adder architecture, based on parallel prefix computation by using four operators namely black, gray, O 3 -black and O 3 -gray operators. These operators are designed using multiplexers. The proposed hybrid architecture is implemented with 16 -bit width operands on Xilinx Spartan 3 E FPGA. The experimental results indicate that the proposed architecture is much faster and area efficient. 1...|$|R
40|$|In this paper, we give {{a method}} to {{construct}} a <b>parallel</b> <b>adder</b> of m k-bit numbers based on the school method of addition. As a result, we get a <b>parallel</b> <b>adder</b> with depth 4 Δ log n + 12 and hardware cost k Δ m. We apply our method to develop a parallel multiplier with asymptotical depth c Δ log n and hardware cost n 2. I. Introduction The problem of addition of m k- bit keys has an old, rich history in computer science. Because of its importance in computer arithmetics and arithmetic units, fast and low- cost adders had been studied extensively. Mostly, it is studied {{in the context of}} VLSI design, where gate count and delay, as well as the limited fan- out are performance factors. In this paper, we show that the parallelized school method is efficient in terms of hardware cost (number of gates) and time (maximal delay). We represent the k- bit numbers i i = (¸ i 1; :::; ¸ ik); i = 1; :::; m as a matrix (¸ ij) and apply our ideas to it iteratively. In each big step [...] ...|$|E
40|$|This paper {{bring out}} a 32 X 32 bit {{reversible}} Vedic multiplier using "Urdhva Tiryakabhayam" sutra meaning vertical and crosswise, is designed using reversible logic gates, {{which is the first}} of its kind. Also in this paper we propose a new reversible unsigned division circuit. This circuit is designed using reversible components like reversible <b>parallel</b> <b>adder,</b> reversible left-shift register, reversible multiplexer, reversible n-bit register with parallel load line. The reversible vedic multiplier and reversible divider modules have been written in Verilog HDL and then synthesized and simulated using Xilinx ISE 9. 2 i. This reversible vedic multiplier results shows less delay and less power consumption by comparing with array multiplier...|$|E
40|$|This {{manuscript}} presents {{simulation results}} of energy dissipation in sub-threshold (sub-VT) of various 16 -bit adder structures. The architectures {{designed for the}} comparative experiments are, a bit-serial, an 8 -bit digit-serial and a 16 -bit <b>parallel</b> <b>adder</b> structures. The designs are synthesized in a 65 nm low-leakage high-threshold CMOS technology. The results show that an energy minimum operating voltage exists for all the three implementations, however the 8 -bit digit serial has the least energy minimum operating point. The advantage of the bit-serial structure is that by employing this technique we may save 88 % area when compared to parallel implementation and 66 % area when compared to digital-serial implementation...|$|E
5000|$|An Improved Optimization Techniques for <b>Parallel</b> Prefix <b>Adder</b> using FPGA- Vol. 3, Issue. 5, Sep - Oct. 2013 ...|$|R
40|$|Abstract- <b>Parallel</b> Prefix <b>adders</b> {{have been}} one of the most notable among several designs {{proposed}} in the past. The advantage of utilizing the flexibility in implementing the three structures based upon throughput requirements. Due to continuing integrating intensity and the growing needs of portable devices, low-power and high-performance designs are of prime importance. The classical <b>parallel</b> prefix <b>adder</b> structures presented in the literature over the years optimize for logic depth, area, and fan-out and interconnect count of logic circuits. In this paper, a new architecture for performing 128 -bit Parallel Prefix addition is proposed. In this proposed system kogge-stone adder which is one of types of <b>parallel</b> prefix <b>adder</b> is used. Kogge-stone is the fastest adder because of its minimum fan-out. The proposed 128 -bit prefix adder is compared with classical adders of same bit width in terms of power, delay. The results reveal that the proposed 128 -bit <b>Parallel</b> Prefix <b>adder</b> has the least power delay product when compared with its peer existing adder structures (ripple carry adder, carry save adders). Simulation results are verified using Xilinx 14. 3 software. Key Words: dot operator, power delay product, kogge-stone...|$|R
40|$|Abstract-Parallel Prefix Adder {{is one of}} {{the most}} fastest type of adder that had been created and developed. There are two types of <b>parallel</b> prefix <b>adders</b> are present. They Brent Kung and Kogge-Stone adders. This {{research}} involve an investigation of the performance of the Kogge-Stone adder in terms of computational power and delay. The investigation and comparison for Kogge-Stone adder was conducted for 8, 16, 32, 64, and 128 bits size. By using the Xilinx 10. 1 software, the design for the Kogge-Stone adder was developed. The simulation result produced the vector waveform which then shows the computational power delay for the adder. However, this project the proposed design 128 -bit Kogge-Stone adder has reduced more delay and power as compared with the regular other <b>parallel</b> prefix <b>adder.</b> Index terms —kogge stone, <b>parallel</b> prefix <b>adder,</b> carry generation, power delay product, xor gate...|$|R
40|$|One of {{the best}} {{approaches}} for designing future computers is that we use reversible logic. Reversible logic circuits have lower power consumption than the common circuits, used in computers nowadays. In this study we propose a new reversible division circuit. This reversible division circuit is signed divider and has an overflow checking capability. Among the designed and proposed reversible division circuits, our proposed division circuit is the first reversible signed divider with overflow checking capability which has been designed. In this circuit we use some reversible components like reversible <b>parallel</b> <b>adder,</b> reversible left-shift register, reversible multiplexer, reversible n-bit register and reversible n-bit register with parallel load line. In this paper all the scales are in the nanometric area...|$|E
40|$|Abstmct-In this paper, {{we present}} a {{systematic}} method of implementing a VLSI <b>parallel</b> <b>adder.</b> First, we define a family of adders, based on a modular design. Our design uses three types of component cells, which we implement in static CMOS. We then formulate the adder design as a dynamic programming problem, optimizing with respect to area and time. The result is an area-time optimal adder in our design family. We illustrate our approach by implementing a 66 -bit adder {{for use in a}} floating point processor. In addition, we indicate how to use our method for implementations in technologies and design styles other than static CMOS. Index Terms- Carry look-ahead adders, domino logic design, dynamic programming, parallel prefix circuits, static CMOS design, time-area optimization, TTL adder design, VLSI adders. I...|$|E
40|$|AbstractReversible Logic is {{becoming}} one of the potentialpower optimization techniquesin Low Power CMOS design,and also finds its application in Quantum Computing and Nanotechnology. With the advancement in VLSI design technology which offers exponentially shrinking of device dimensions and exponentially growing circuit complexities, device scaling is critically limited by the power dissipation; demanding for better power optimizations methods like Reversible Logic. The basic building block any computational unit is arithmetic unit. Hence in this paper Reversible Arithmetic which offers a high power optimization is built by using suitable control logic to one of the input variables of <b>parallel</b> <b>adder</b> anddifferent basic arithmetic operations areimplemented. In our design, the full Adders are realized using synthesizable, low quantum cost, low garbage output Peres gates andoperations such as data transfer, addition, subtraction, increment, decrementetc are realized using reversible gates...|$|E
40|$|A {{technology}} indepenent generator for CLA adders in BiCMOS and CMOS is presented. It allows {{full automatic}} construction of past <b>parallel</b> <b>adders</b> with arbitrary word length and device sizing. The automatic design cycle comprises the schematics and layout generation, netlist extraction from layout, and verification with pseudo random numbers. Also, the critical path is analyzed {{and the worst}} case delay time gained by simulation. An example of an 16 bit adder in a 0. 8 fm BiCMOS and in a 2 fm CMOS technolgy is included...|$|R
50|$|The carry-select adder design can be complemented with a carry-lookahead adder {{structure}} {{to generate the}} MUX inputs, thus gaining even greater performance as a <b>parallel</b> prefix <b>adder</b> while potentially reducing area.|$|R
40|$|International audienceIn {{this paper}} <b>parallel</b> <b>adders</b> with minimum delay and minimum {{complexity}} under left-to-right sequential input arrival are investigated. The delay {{is the result}} time after {{the arrival of the}} last input digits which are the least significant ones. An analytical model of the complexity is established and a synthesis algorithm is described. The algorithm is implemented on a powerful multiview layout synthesis tool called GenOptim. This CAD tool outputs a set of different descriptions including: a netlist view, a layout view, a VHDL behaviour view and finally a test view including functional and structural test patterns with a very high fault coverage...|$|R
