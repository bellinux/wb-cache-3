30|10000|Public
25|$|For exchanging the {{extracted}} models – {{in particular}} {{for use in}} predictive analytics– the key standard is the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML), which is an XML-based language developed by the Data Mining Group (DMG) and supported as exchange format by many data mining applications. As the name suggests, it only covers prediction models, a particular data mining task of high importance to business applications. However, extensions to cover (for example) subspace clustering have been proposed independently of the DMG.|$|E
50|$|As a {{predictive}} model interchange format {{developed by the}} Data Mining Group, PFA is complimentary to the DMGs XML-based standard called the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> or PMML.|$|E
50|$|The <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) was {{proposed}} for standard language for expressing predictive models. Such an XML-based language {{provides a way}} for the different tools to define predictive models and to share them. PMML 4.0 was released in June, 2009.|$|E
40|$|Abstract. Several {{knowledge}} discovery support engines (KDDSE) {{feature the}} export {{and in a}} few cases even the import of data mining <b>models</b> in the <b>Predictive</b> <b>Modeling</b> <b>Markup</b> <b>Language</b> (PMML) standard. A visualization tool for PMML models that is independent of a specific KDDSE is presented in this paper. An extension of the PMML model for association rules that allows the definition of propositional and first order rules is also presented in its document type description form (DTD). ...|$|R
50|$|In {{this type}} of in-database processing, a <b>predictive</b> <b>model</b> is {{converted}} from its source language into SQL that can run in the database usually in a stored procedure. Many analytic model-building tools {{have the ability to}} export their models in either SQL or PMML (<b>Predictive</b> <b>Modeling</b> <b>Markup</b> <b>Language).</b> Once the SQL is loaded into a stored procedure, values can be passed in through parameters and the model is executed natively in the database. Tools that can use this approach include SAS, SPSS, R and KXEN.|$|R
40|$|Description The <b>Predictive</b> <b>Modelling</b> <b>Markup</b> <b>Language</b> (PMML) is a {{language}} for representing models, in an application independent way. Such models {{can then be}} loaded into other applications supporting PMML, including ADAPA from Zementis, Teradata Warehouse Miner and IBM's DB 2. The package provides a generic pmml function to generate pmml for an object. Using a S 3 generic function the approriate method for the class of the supplied object is dispatched. The package currently supports the export of PMML for linear regression, SVMs, rpart classification trees, randomSurvivalForest forest models, and kmeans clusters. This package {{is part of the}} Rattle toolkit...|$|R
50|$|In {{order for}} neural network models {{to be shared}} by {{different}} applications, a common language is necessary. The <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) has been proposed to address this need. PMML is an XML-based language which provides a way for applications to define and share neural network models (and other data mining models) between PMML compliant applications.|$|E
50|$|For exchanging the {{extracted}} models - {{in particular}} {{for use in}} predictive analytics - the key standard is the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML), which is an XML-based language developed by the Data Mining Group (DMG) and supported as exchange format by many data mining applications. As the name suggests, it only covers prediction models, a particular data mining task of high importance to business applications. However, extensions to cover (for example) subspace clustering have been proposed independently of the DMG.|$|E
5000|$|The <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) is an XML-based {{predictive}} model interchange format conceived by Dr. Robert Lee Grossman, then {{the director of}} the National Center for Data Mining at the University of Illinois at Chicago. PMML provides a way for analytic applications to describe and exchange {{predictive model}}s produced by data mining and machine learning algorithms. It supports common models such as logistic regression and feedforward neural networks. Version 0.9 was published in 1998. [...] Subsequent versions have been developed by the Data Mining Group.|$|E
40|$|Gnome (RGtk 2) based {{interface}} to R functionality {{for data}} mining. The {{aim is to}} provide a simple and intuitive interface that allows a user to quickly load data from a CSV file (or via ODBC), transform and explore the data, build and evaluate models, and export <b>models</b> as PMML (<b>predictive</b> <b>modelling</b> <b>markup</b> <b>language)</b> or as scores. All of this with knowing little about R. All R commands are logged and commented through the log tab. Thus they are available to the user as a script file or as an aide for the user to learn R or to copy-and-paste directly into R itself. Rattle also exports a number of utility functions and the graphical user interface, invoked as rattle(), {{does not need to be}} run to deploy these. License GPL (> = 2...|$|R
40|$|The {{substantial}} {{amounts of}} information that must be gathered, preserved, and used to analyse environmental and ecological impacts on seaports such as the international standards, deserve a direct way to manage and improve those impacts in a seaport through a systematic environmental management system (EMS). We present an artefact called the conceptual intelligent decision-making support module (i-DMSS) to enhance cooperative seaport decision-making (COSEADM) in environmental and ecological sustainability. Three interrelated activities of data collection, descriptive and normative modelling, incorporate processes of handling the decision-making side and processes integrating engineering requirements to produce the conceptual i-DMSS module. We include two data-driven models to handle the decision-making side of this module and automatically induce domain knowledge. Besides, we deploy and standardise the data-driven models and use the <b>Predictive</b> <b>modelling</b> <b>markup</b> <b>language</b> (PMML) to show advantages of data interoperability. Finally, we offer the rationale of the ontological process to anticipate and provide illustration of how to describe concepts in regard to COSEADM for environmental and ecological sustainability. This module demonstrates how the capture and interoperation of information and decisional structures can be managed. 16 page(s...|$|R
40|$|AbstractTransferring <b>predictive</b> {{microbial}} <b>models</b> {{from research}} into real world food manufacturing or risk assessment applications {{is still a}} challenge {{for members of the}} food safety modelling community. Such knowledge transfer could be facilitated if publicly available food safety model repositories would exist. This research therefore aimed at identification of missing resources hampering the establishment of community driven food safety model repositories. Existing solutions in related scientific disciplines like Systems Biology and Data Mining were analyzed. On the basis of this analysis, some factors which would promote the establishment of community driven model repositories were identified – among them: a standardized information exchange format for models and rules for model annotation. As a consequence a proposal for a <b>Predictive</b> <b>Modelling</b> in Food <b>Markup</b> <b>Language</b> (PMF-ML) together with a prototypic implementation {{on the basis of the}} Systems Biology <b>Markup</b> <b>Language</b> (SBML) has been developed. In addition the adoption of MIRIAM guidelines for model annotation is proposed. In order to demonstrate the practicability of the proposed strategy, existing <b>predictive</b> <b>models</b> previously published in the scientific literature were re-implemented using an open source software tool called PMM-Lab. The models are made publicly available in the first community Food Safety Model Repository called openFSMR ([URL] work illustrates that a standardized information exchange format for <b>predictive</b> microbial <b>models</b> can be established by adoption of resources from Systems Biology. Harmonized description and annotation of <b>predictive</b> <b>models</b> will also contribute to increased transparency and quality of food safety models...|$|R
5000|$|From 1990-2010, he {{primarily}} {{worked in}} computer science, specifically, data mining and data intensive computing. With Stuart Bailey and Yunhong Gu, he developed {{open source software}} to move large datasets over wide area high performance networks (PTool and the UDP-based Data Transfer Protocol or UDT). [...] With Yunhong Gu, he also developed Sector/Sphere, a distributed platform for data intensive computing. [...] During this period, he also founded the Data Mining Group, which develops data mining standards, and led the technical working group that developed the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML), which is now the dominant standard in analytics.|$|E
40|$|The <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> or PMML is an XML markup {{language}} for statistical and data mining models {{that has been}} developed {{over the past several}} years by the Data Mining Group, a consortium of data mining vendors [DMG: 2006]. Expressing models in PMML provides several advantages when deploying and maintaining data minin...|$|E
40|$|The <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) {{data mining}} {{standard}} has arguably {{become one of}} the most widely adopted data mining standards in use today. Two years in the making, the latest release of PMML contains several new features and many enhancements to existing ones. This paper provides a primer on the PMML standard and its applications along with a description of the new features in PMML 4. 0 which was released in May 2009. Categories and Subject Descriptors H. 4 [Database Management]: Databas...|$|E
40|$|Abstract. We {{revisit the}} {{top-level}} ontology Gumo for the uniform management of user and context models in a semantic web environment. We discuss design decisions, while putting {{the focus on}} ontological issues. The structural integration into user model servers, especially into the U 2 M-UserModel&ContextService, is also presented. We show ubiquitous applications using the user model ontology Gumo together with the user <b>model</b> <b>markup</b> <b>language</b> UserML. Finally, we ask how data from Web 2. 0 and especially from a social tagging application like del. icio. us {{as a basis for}} user adaptation and context-awareness could influence the ontology. Keywords ubiquitous user modeling, semantic web, ontological engineering, web 2. 0, user <b>model</b> <b>markup</b> <b>language...</b>|$|R
40|$|We {{present a}} new {{architecture}} for decentralized user modeling and briefly discuss the user <b>model</b> <b>markup</b> <b>language</b> USERML, the general user model ontology GUMO for the uniform interpretation of decentralized user models, and {{the integration of}} ubiquitous applications with the u 2 m. org user model service. The motivation is that ubiquitous evaluation of user behavior {{with a variety of}} systems in the web or the physical world might lead to attractive new services...|$|R
40|$|Abstract. Ubiquitous {{computing}} offers new chances {{and challenges}} {{to the field of}} user <b>modeling.</b> With the <b>markup</b> <b>language</b> UserML, we try to contribute a platform for the communication about partial user mod-els in a ubiquitous computing environment, where all different kinds of systems work together to satisfy the user’s needs. We also present an im-plementation architecture of a general user model editor which is based on UserML. The keywords are ubiquitous computing, distributed user <b>modeling</b> and <b>markup</b> <b>languages.</b> ...|$|R
40|$|License GPL (> = 2) Description The <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) is an XML-based {{language}} {{which provides}} a way for applications to define statistical and data mining models and to share models between PMML compliant applications. More information about PMML and the Data Mining Group {{can be found at}} [URL] The generated PMML can be imported into any PMML consuming appli-cation,such as the Zementis ADAPA and UPPI scoring engines which allow for predictive models built in R to be deployed and executed on site, i...|$|E
30|$|A similar project, Cascading, {{offers an}} Application Programming Interface (API) that abstracts the {{traditional}} keys and values into tuples with field names {{and offers a}} number of operations on the tuples that help developers build complex applications more easily and in less time. They have also announced that upcoming releases will offer support for Spark, Storm, and Tez. Cascading primarily supports programming in Java, but also offers APIs for ANSI SQL, <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML), Scala, Clojure, JRuby, and Python. It also supports easy integration {{of a large number}} of different data sources.|$|E
40|$|PMML is an XML format {{describing}} {{data mining}} models. D-Miner is a data mining software system {{to carry out}} data mining projects. One feature of D-Miner is its plug in concept in order to easily integrate new software modules into the system. 1. 1 What is PMML? As statet above, the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) is an XML language in order to describing and storing data mining models. The first version (1. 0) was provided in July 1999 [1] by the Data Mining Group (DMG) [2]. The DMG is &quot;an independent, vendor led group which develops data mining standards&quot;. Currently the seve...|$|E
30|$|Kepler [16] is a {{scientific}} workflow system, adding provenance framework to manage links indicating the lineage of data generated by workflows. This provenance information is expressed and stored as file in <b>Modeling</b> <b>Markup</b> <b>Language</b> (MoML), {{a variant of}} XML. The stored provenance is searchable via a file system, but a high-level query language is not supported for the search. It is possible to reproduce experiment process based on the provenance data in the Kepler system. But it is little known about the provenance visualization, simulation result reuse, and data mining.|$|R
40|$|Morphogenetic {{modelling}} and simulation help {{to understand}} the processes by which the form and shapes of organs (organogenesis) and organisms (embryogenesis) emerge. This requires two mutually coupled entities: the biomolecular signalling network and the tissue. Whereas the modelling of the signalling has been discussed and used in a multitude of works, the realistic modelling of the tissue has only started {{on a larger scale}} in the last decade. Here, common tissue modelling techniques are reviewed. Besides the continuum approach, the principles and main applications of the spheroid, vertex, Cellular Potts, Immersed Boundary and Subcellular Element models are discussed in detail. In recent years, many software frameworks, implementing the aforementioned methods, have been developed. The most widely used frameworks and <b>modelling</b> <b>markup</b> <b>languages</b> and standards are presented...|$|R
40|$|In this report, we give an {{overview}} {{how to use}} XML based techniques in order to derive language independent Markov Chain Usage Models [1] given any popular FDT (Formal Description Techniques), such as MSC (Message Sequence Charts, ITU-T standard Z. 120) and UML/SD (Unified Modeling Language/Sequence Diagram, OMG Standard). In particular, we demonstrate and discuss the tool chain JUMBL (J Usage Model Builder Library) {{in order to achieve}} this target. JUMBL is a Java-based class library; user can create, modify and analyze the MCUMs (Markov Chain Usage Model). Within JUMBL MML (<b>Model</b> <b>Markup</b> <b>Language),</b> which is an XML extension for describing MCUMs may be used beside other input languages. In addition an XML-based language called TCML (Test Case <b>Markup</b> <b>Language)</b> can describe test cases generated from MCUMs. Therefore, we propose to use similar techniques for the MaTeLo tool set in order to develop a complete testing suite based on stochastic Markov chain methods, as well as XML-based input descriptions for the TTCN- 3 test case description...|$|R
40|$|This paper {{gives an}} {{overview}} {{of some of the}} changes in Version 3. 0 of the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML), which is expected to be released in 2004. PMML Version 3. 0 adds several new models, including models for rule sets and text mining. It also adds the ability to compose certain data mining operations. For example, in PMML Version 3. 0 the outputs of regression models can be used as the inputs to other models (model sequencing) and a decision tree or regression model can be used to combine the outputs of several embedded models (model selection). 1...|$|E
40|$|At KDD- 2009 in Paris, a {{panel on}} open {{standards}} and cloud computing addressed emerging trends for data mining applications {{in science and}} industry. This report summarizes the answers from a distinguished group of thought leaders representing key software vendors in the data mining industry. Supporting open standards and the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) in particular, the panel members discuss topics regarding the adoption of prevailing standards, benefits of interoperability for business users, and the practical application of predictive models. We conclude with an assessment of emerging technology trends and the impact that cloud computing will have on applications as well as licensing models for the predictive analytics industry...|$|E
40|$|Keywords: data mining, {{predictive}} modeling, data interchange formats, XML, SGML, ensemble learning, partitioned learning, {{distributed learning}} We introduce a markup language based upon XML {{for working with}} the predictive models produced by data mining systems. The language is called the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) {{and can be used}} to define predictive models and ensembles of predictive models. It provides a flexible mechanism for defining schema for predictive models and supports model selection and model averaging involving multiple predictive models. It has proved useful for applications requiring ensemble learning, partitioned learning, and distributed learning. In addition, it facilitates moving predictive models across applications and systems...|$|E
40|$|Domain-specific {{modeling}} {{has become}} a popular way of designing and developing systems. It generally involves a systematic use {{of a set of}} object-oriented models to represent various facets of a domain. However, manually creating instances of these models is time-consuming and errorprone when a system in the domain is complex. Automatic model synthesis tools are thus usually developed to free users from the model creation process. In practice, most of these tools would hard code knowledge about the domain specific models in the program. A biggest problem with tools is that their source code needs to be changed whenever the knowledge changes. In this paper, we define a <b>model</b> <b>markup</b> <b>language</b> (ModelML) to facilitate the development of automatic model synthesis tools. The language provides a complete self-describing representation of object-oriented models to be synthesized. Unlike other XML-based representations of models, ModelML reflects the structure of the models directly in the nesting of elements in the XML-based syntax. This feature allows the knowledge about the domain specific models to be decoupled from model synthesis tools. To demonstrate the usefulness of the <b>markup</b> <b>language,</b> we have developed a generic automatic model synthesis tool which is based on ModelML inputs. ...|$|R
40|$|This paper {{consists}} of three parts. In a first part, {{it is argued that}} generic <b>markup</b> <b>languages</b> such as SGML and XML, that have been developed primarily for modeling documents are also convenient for modeling general data. In a second part, XML and concepts related to XML are introduced. A third part presents a logic programming perspective to data <b>modeling</b> with generic <b>markup</b> <b>languages...</b>|$|R
40|$|Abstract — Computational modellers are {{becoming}} increas-ingly interested in building large, eclectic, biological models. These may integrate nervous system components {{at various levels}} of description, other biological components (e. g. muscles), non-biological components (e. g. statistical discriminators or control software) and, in embodied modelling, even hardware components, all potentially with different authors. There {{is a need for}} middleware to facilitate these integrated systems. BRAHMS, a Modular Execution Framework, fills that need by defining a supervisor-process interface and an (extensible) set of process-process interfaces; authors can write to these interfaces, and processes will integrate as required. Additional benefits include reuse (never code the same model twice), cross-user readability, system-level parallelisation on multi-core or multi-node environments, cross-language integration, data logging, performance analysis, and run-stop-examine-continue execution. BRAHMS employs the nascent, and similarly general purpose, <b>model</b> <b>markup</b> <b>language,</b> SystemML. This will, in future, also facilitate repeatability (same answers ten years from now), transparent automatic software distribution, and interfacing with other SystemML tools. I...|$|R
40|$|Abstract: The {{increasing}} of {{the database}} dimension creates many problems, {{especially when we}} need to access, use and analyze data. The data overflow phenomenon in database environments imposes the application of different data mining methods, in order to find relevant information from large databases. A lot of data mining tools emerged in the last years. The standardization of data mining languages become in the last years a very important topic. The paper presents <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> (PMML) standards from the Data Mining Group. PMML, a standard language for defining data mining models, which allows users to develop models within one vendor's application, and use other vendors ' applications to visualize, analyze, evaluate o...|$|E
40|$|In this note, we {{introduce}} Open DMIX, an {{open source}} collection of web {{services for the}} mining, integration, and exploration of remote and distributed data. We also describe some preliminary experimental results using Open DMIX. Open DMIX is layered: the top layer provides templated data mining and statistical algorithms, such as those defined by the <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>Language</b> [8]. The middle layer provides access and integration of remote and distributed data using the DataSpace Transfer Protocol (DSTP) [6]. The bottom layer provides specialized network protocols designed to work with large distributed data sets over wide area networks, which may have high bandwidth delay products (BDPs). Open DMIX clients interact with Open DMIX servers using a version of web services designed for high performance applications, which we call SOAP+...|$|E
40|$|Nowadays Semantic Web {{is widely}} adopted {{standard}} of knowledge representation. Hence, knowledge engineers are applying sophisticated methods to capture, discover and represent knowledge in Semantic Web form. Studies show that, to represent knowledge in Semantic Web standard, data mining {{techniques such as}} Decision Trees, Association Rules, etc., play an important role. These techniques are implemented in publicly available Data Mining tools. These tools represent knowledge discovered in human readable format and some tools use <b>Predictive</b> <b>Model</b> <b>Markup</b> <b>language</b> (PMML). PMML is an XML based model for data mining model representation that fails to address {{the representation of the}} semantics of the discovered knowledge. Hence, this thesis tries to research and give solutions to translate PMML to Semantic Web Rule Language (SWRL) format using Semantic Web technologies and data mining to cover the semantic gap in PMML...|$|E
40|$|The {{finite element}} <b>modeling</b> <b>Markup</b> <b>Language</b> (femML) effort is {{addressing}} {{the problems of}} data interpretation and application interoperability in the Fninite Element Modeling domain. This is achieved {{through the development of}} an extensible <b>markup</b> <b>language</b> (XML) for finite element model data that will permit the storage, transmission, and processing of finite element modeling data distributed via the World Wide Web and related infrastructure technologies. The focus of this work was to utilize the XML's power of semantic encapsulation along with the existing and continuously improving associated technology to develop a dialect for exchanging FEM data across various codes with heterogeneous input format syntactic specifications. The main aspects of a finite element definition have been used as archetypes for defining the XML element taxonomy definitions. Namely, the geometry, the material, and the loading aspects of a structural component specification are used to define the first level elements of the associated Document Type Definition (DTD). The element list has been amended with a behavior element specification that represents the solution data to be exchanged or visualized. Utilization of the MatML standard for material property data exchange is demonstrated. Various tools have been developed to demonstrate associated concepts along with the ANSYS set of tools. 1...|$|R
50|$|System {{models are}} {{composed}} in a graphical editor. These hierarchically structured block diagrams {{are stored in}} MML (<b>Model</b> <b>Markup</b> <b>Language),</b> a dialect of XML. Models may therefore also be generated automatically by XML-transformations from other XML based models descriptions e.g. UML (via XML Model Interchance, XMI), BoNES, Cossap or OPD/OPM (Object Process Diagram/Modeling) models. Executable models (systems) are composed of modules and primitives, which are connected via typed in- and out-put ports and/or attributes (parameters, resources, memories, events). Modules can be composed of other modules and/or primitives. Primitives are the smallest units in MLDesigner models. The behaviour of primitives is either coded in ANSI C/C++ or modeled using Finite State Machines (FSM) and/or may exchange information with other simulators, internet based systems or hardware. All modules and primitives of a simulation model may be dynamically instantiated (dynamic instance support), enabling simulation with dynamically changing architectures and architectural optimization. MLDesigner comes with more than 2000 library elements. For system modeling therefore {{the development of new}} primitives is generally not required.|$|R
40|$|Abstract. We {{present a}} service to model {{situations}} and retrieve contextual information in mobile and ubiquitous computing environments. We introduce the general user model and context ontology GUMO for the uniform interpretation of distributed situational information in intelligent semantic web enriched environments. Furthermore, we present the relation to the user <b>model</b> and context <b>markup</b> <b>language</b> USERML, {{that is used to}} exchange partial models between different adaptive applications. Our modeling and retrieval approach bases on semantic web technology and complex conflict resolution concepts...|$|R
