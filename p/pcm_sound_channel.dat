1|876|Public
50|$|The MMC5 is Nintendo's largest MMC. It was {{originally}} {{also the most}} expensive. Only Koei used this chip regularly. The chip has 1 KB of extra RAM, two extra square wave sound channels, one extra <b>PCM</b> <b>sound</b> <b>channel,</b> support for vertical split screen scrolling, improved graphics capabilities (making 16,384 different tiles available per screen rather than only 256, and allowing each individual 8x8-pixel background tile {{to have its own}} color assignment instead of being restricted to one color set per 2x2 tile group), highly configurable program ROM and character ROM bank switching, and a scanline-based IRQ counter.|$|E
50|$|Prior to version 3.5, AmigaOS only officially {{supported}} the Amigas native sound chip, via audio.device. This facilitates playback of sound samples on four DMA-driven 8-bit <b>PCM</b> <b>sound</b> <b>channels.</b> The only supported hardware sample format is signed linear 8-bit twos complement.|$|R
50|$|Paula is {{primarily}} the audio chip, with four independent hardware-mixed 8-bit <b>PCM</b> <b>sound</b> <b>channels,</b> {{each of which}} supports 65 volume levels (no sound to maximum volume) and waveform output rates from roughly 20 samples per second to almost 29,000 samples per second. Paula also handles interrupts and various I/O functions including the floppy disk drive, the serial port, and analog joysticks.|$|R
50|$|Paula {{has four}} DMA-driven 8-bit <b>PCM</b> sample <b>sound</b> <b>channels.</b> Two <b>sound</b> <b>channels</b> are mixed {{into the left}} audio output, {{and the other two}} are mixed into the right output, {{producing}} stereo audio output. The only supported hardware sample format is signed linear 8-bit two's complement. Each <b>sound</b> <b>channel</b> has an independent frequency and a 6-bit volume control (64 levels). Internally, the audio hardware is implemented by four state machines, each having eight different states.|$|R
5000|$|<b>PCM</b> <b>sound</b> chip: C352 @ 16.384 MHz that {{supports}} 8-bit linear and 8-bit muLaw PCM with four-channel output ...|$|R
5000|$|... 1988, Apple IIGS: Based on the 256K PC versions, adds <b>PCM</b> <b>sound</b> {{effects and}} new music {{composed}} by Al Lowe.|$|R
50|$|The TSP53C30 {{microcontroller}} product emulates a TMS5220 PE-LPC, {{but also}} has support for D6 LPC as well as <b>PCM</b> <b>sound</b> output.|$|R
5000|$|DMA sound chip with 2-channels stereo 8-bit <b>PCM</b> <b>sound</b> at 6.25/12.5/25/50 kHz and stereo RCA audio-out jacks (using {{enhancements}} to the Shifter video chip {{to support}} audio shifting) ...|$|R
50|$|Several programs, {{including}} MP (Module Player, 1989), ScreamTracker, Fast Tracker, Impulse Tracker, {{and even}} device drivers for Linux and Microsoft Windows, could play pulse-code modulation (<b>PCM)</b> <b>sound</b> through the PC speaker using special techniques explained {{later in this}} article.|$|R
50|$|Roland/Edirol Sound Canvas lineup is {{a series}} of General MIDI based <b>PCM</b> <b>sound</b> modules and PC sound cards {{primarily}} intended for computer music usage, created by Japanese manufacturer Roland Corporation. Some models include serial or USB connection to computer.|$|R
5000|$|U-110 <b>PCM</b> <b>Sound</b> Module: Rolands first rompler, a rack module {{intended}} to exploit Rolands large library of samples and contained good representations of acoustic instruments. Designed {{to compete with}} E-mus Proteus line, the U-110s successor U-220 {{found its way into}} many professional studio racks of the day.|$|R
5000|$|The Amiga {{version has}} a title music by Dave Lowe using {{digitized}} samples as instrument sounds (before {{the age of}} tracker music). Both ST and Amiga versions also have about 15-second long song - a single <b>PCM</b> <b>sound</b> file - with real vocals and synthesizers. A male voice sings: [...] "Starglider... by Rainbird".|$|R
50|$|Home console systems {{also had}} a {{comparable}} upgrade in sound ability beginning with the ColecoVision in 1982 capable of four channels. However, more notable was the Japanese release of the Famicom in 1983 which was later released in the US as the Nintendo Entertainment System in 1985. It was capable of five channels, one being capable of simple <b>PCM</b> sampled <b>sound.</b> The home computer Commodore 64 released in 1982 was capable of early forms of filtering effects, different types of waveforms and eventually the undocumented ability to play 4-bit samples on a pseudo fourth <b>sound</b> <b>channel.</b> Its comparatively low cost made it a popular alternative to other home computers, {{as well as its}} ability to use a TV for an affordable display monitor.|$|R
50|$|The diagram to {{the right}} could exemplify playing an MP3 file using GStreamer. The file source reads an MP3 file from a computer's hard-drive and sends it to the MP3 decoder. The decoder decodes the file data and {{converts}} it into PCM samples which then pass to the ALSA sound-driver. The ALSA sound-driver sends the <b>PCM</b> <b>sound</b> samples to the computer's speakers.|$|R
5000|$|SMAF resembles MIDI, {{but also}} {{supports}} graphics and <b>PCM</b> <b>sound</b> playback. Its MIDI playback is produced via FM synthesis or PCM sample-based synthesis, where instrument data (parameters and/or PCM samples) is stored within the [...]MMF file itself, similar to module files. This enables users to create custom instruments, which will sound {{exactly the same}} on devices with the same chip.|$|R
50|$|As {{with most}} Java ME specifications, {{implementations}} differ {{despite the best}} efforts of the specification authors to ensure consistency. Two obvious areas for differences are in the controls supported, and in the acceptable URI types in the first place. More obscure areas are whether mixing is supported; many games would like to play a MIDI music track and layer <b>PCM</b> <b>sound</b> effects on top.|$|R
50|$|Of {{particular}} interest were the different tactics {{used by the}} two entries. For graphics, Abuse used precious few high color images which he then applied transparency and rotation to at runtime. Jbanes, on the other hand, developed an imaging packing technique {{that allowed him to}} store twenty-one single-color images. Rather than applying rotation and transparency, he chose to use his larger number of images to produce pre-rendered animations. For sound, Abuse used clear chimes and other instruments from the MIDI soundbank. Jbanes chose to use runtime-generated <b>PCM</b> <b>sound</b> that sounded more like video games of the late 1970s and early 1980s.|$|R
50|$|The Audio Channel control {{registers}} provide {{volume and}} distortion control over individual <b>sound</b> <b>channels.</b> Audio {{may also be}} generated independently of the POKEY clock by direct volume manipulation of a <b>sound</b> <b>channel</b> which is useful for playing back digital samples.|$|R
40|$|We discuss {{inversion}} of vertical-slice ocean-acoustic tomography (travel-time) measurements, {{in which we}} use the adiabatic-invariant approximation to convert multi-loop measurements to single-loop ray properties before using an Abel transform. We demonstrate the inversion by applying it to a simulated pulse-arrival sequence for a uniform <b>sound</b> <b>channel</b> generated by a ray tracing program, and compare the recovered sound-speed profile with that used for the simulation. For a uniform <b>sound</b> <b>channel,</b> the inversion gives both the symmetric and antisymmetric parts of the <b>sound</b> <b>channel,</b> including the vertical displacement of the sound-channel axis...|$|R
50|$|As an example, in <b>PCM</b> <b>sound</b> {{encoding}} {{the first}} {{bit in the}} sample denotes {{the sign of the}} function, or in other words defines the half of the whole amplitude values range, and the last bit defines the precise value. Replacement of more significant bits result in more distortion than replacement of less significant bits. In lossy media compression that uses bit-planes it gives more freedom to encode less significant bit-planes and it is more critical to preserve the more significant ones.|$|R
50|$|PC {{software}} generated multitimbral {{music and}} sound effects through the AdLib card, although the acoustic quality was distinctly synthesized. Digital audio (PCM) was not supported, a key feature supported by later competition, particularly the Creative Labs Sound Blaster. It {{was possible to}} output <b>PCM</b> <b>sound</b> through the AdLib card with software by modulating the playback volume at an audio rate, as was done for example in the MicroProse game F-15 Strike Eagle II, and the multi-channel music editor Sound Club for MS-DOS.|$|R
50|$|Video8 was the {{earliest}} {{of the three}} formats, and is entirely analog. The 8mm tape width was chosen as smaller successor to the 12mm Betamax format, using similar technology (including U-shaped tape loading) but in a smaller configuration {{in response to the}} small configuration VHS-C compact camcorders introduced by the competition. It was followed by Hi8, a version with improved resolution. Although this was still analog, some professional Hi8 equipment could store additional digital stereo <b>PCM</b> <b>sound</b> on a special reserved track.|$|R
40|$|A {{computer}} simulation of long-range sound transmission processes in an underwater <b>sound</b> <b>channel</b> {{has been carried}} out, using the CTD data collected in the southern Japan Sea. The 24 sound rays, released from a source located at the axis of the <b>sound</b> <b>channel,</b> reached a receiver distanced horizontally by 100 km from the Source with no reflection at the surface and the 1200 -m depth. The arrival times for each ray served as data to reconstruct the profile of temperature in the <b>sound</b> <b>channel</b> where the rays passed through. The temperature profile reconstructed traced the initial profile obtained from the CTD data well...|$|R
5000|$|One digital mono <b>sound</b> <b>channel</b> and a 352 kbit/s data channel.|$|R
5000|$|... #Caption: Staff {{operating}} the eight <b>sound</b> <b>channels</b> {{located in the}} hall's basement ...|$|R
2500|$|Tomoe Shinohara; Deep <b>Sound</b> <b>Channel</b> (1999)– [...] "Voyage" [...] {{composed}} {{and produced}} by Sugizo ...|$|R
3000|$|... where ϑ =[*][2 (z[*]-[*]zaxis)]/S, C[*]is {{the speed}} of light, ε[*]is the {{perturbation}} coefficient, zaxis[*]is the depth of <b>sound</b> <b>channel,</b> z[*]is the depth of water in meters, and S[*]is the scale depth and ϑ [*]is the dimensionless distance beneath the <b>sound</b> <b>channel</b> axis. The values are as defined, zaxis[*]=[*] 1, 000 m, S[*]= [*] 1, 000 m, ε[*]=[*] 0.0057 and C[*]=[*] 1, 520 m/s.|$|R
5000|$|The {{first of}} these were basic systems with poor {{performance}} developed by Electro-Voice (EV-4/Stereo-4) and Dynaco (Dynaquad (DY)). A so-called matrix format, it utilized four <b>sound</b> <b>channels</b> which were [...] "encoded" [...] into two stereo album tracks. These were then [...] "decoded" [...] back into the original four <b>sound</b> <b>channels,</b> but with poor decode performance that failed to match the discrete formats.|$|R
5000|$|The {{first of}} these, known as QS, was {{developed}} by Sansui Electric. A so-called matrix format, it utilized four <b>sound</b> <b>channels,</b> which were [...] "encoded" [...] into two stereo album tracks. These were then [...] "decoded" [...] back into the original four <b>sound</b> <b>channels.</b> The QS system debuted in the United States in March 1971 and be improved by Vario-Matrix system in 1973.|$|R
5000|$|Tomoe Shinohara; Deep <b>Sound</b> <b>Channel</b> (1999) - [...] "Voyage" [...] {{composed}} {{and produced}} by Sugizo ...|$|R
50|$|Whereas the {{high-end}} OPN chips have dedicated ADPCM channels for playing sampled audio, the YM2612 does not. However, its sixth channel {{can act as}} a surrogate PCM channel by means of the 'DAC Enable' register, allowing the chip to play 8-bit <b>PCM</b> <b>sound</b> samples. This replaces (disables) FM output for that channel. PCM data is written to the channel via an 8-bit register. Unlike the other OPNs with ADPCM, the YM2612 does not provide any timing or buffering of samples, so all frequency control and buffering must be done in software by the host processor.|$|R
5000|$|Four {{independent}} <b>sound</b> <b>channels</b> (one {{noise and}} three melodic) using the Texas Instruments SN76489 sound chip ...|$|R
5000|$|The PSG {{provides}} 6 <b>sound</b> <b>channels,</b> {{which can}} be conveniently paired according to the functionality they provide: ...|$|R
50|$|The VRC6 (Virtual Rom Controller) is an {{advanced}} MMC chip from Konami, supporting bank switching for both program code and graphics {{as well as}} a CPU cycle-based IRQ counter, which can also act as a scanline counter. The chip also contains support for three extra <b>sound</b> <b>channels</b> (two square waves of eight duty cycles each, and one sawtooth wave). It is used in Akumajō Densetsu (the Japanese version of Castlevania III: Dracula's Curse), while the Western version uses the MMC5 from Nintendo. Since the Nintendo Entertainment System does not allow cartridges to add additional <b>sound</b> <b>channels,</b> the Famicom version's soundtrack was reworked to follow those specifications; thus, the soundtrack on the Western version is implemented by the five <b>sound</b> <b>channels</b> built into the stock NES.|$|R
5000|$|The upper {{frequency}} limit of a NICAM <b>sound</b> <b>channel</b> is 15 kHz due to anti-aliasing filters at the encoder.|$|R
5000|$|The [...]cda files do {{not contain}} the actual <b>PCM</b> <b>sound</b> wave data, but instead tell where on the disc each track starts and stops. If the file is [...] "copied" [...] from the CD to a computer, it cannot be used on its own because {{it is only a}} {{shortcut}} to part of the disc. However, some audio editing and CD creation programs will, from the user's perspective, load [...]cda files as though they are actual audio data files, and allow the user to listen to them. This {{should not be confused with}} the tracks actually containing the audio data on the CD.|$|R
