22|996|Public
500|$|Ground {{sassafras}} leaf, {{known as}} filé, {{is generally not}} added to the gravy until after the vegetables and meats or seafood have finished cooking and {{have been removed from}} the heat source. [...] If added during the boiling <b>process,</b> <b>filé</b> makes the gumbo too when added at the end, the gumbo gains a slightly stringy texture.|$|E
50|$|Plan 9 {{implemented}} a <b>process</b> <b>file</b> system, but went further than V8. V8's <b>process</b> <b>file</b> system {{implemented a}} single file per process. Plan 9 created {{a hierarchy of}} separate files to provide those functions, and made /proc a real {{part of the file}} system.|$|E
5000|$|... {{the device}} grants special {{rights to the}} <b>process</b> <b>file</b> handle whose auth token matches the {{received}} token from the DRM-Master ...|$|E
50|$|To <b>process</b> <b>files,</b> autoconf {{uses the}} GNU {{implementation}} of the m4 macro system.|$|R
5000|$|The {{variable}} [...] now {{contains the}} index of a file descriptor in the <b>process's</b> <b>file</b> descriptor table. This file descriptor is a capability. Its existence in the <b>process's</b> <b>file</b> descriptor table is sufficient {{to know that the}} process does indeed have legitimate access to the object. A key feature of this arrangement is that the file descriptor table is in kernel memory and cannot be directly manipulated by the user program.|$|R
50|$|For every {{application}} and/or user, {{the program}} is an autonomous OS, with its own registry, <b>process,</b> <b>files,</b> services and so on.|$|R
5000|$|Ground {{sassafras}} leaf, {{known as}} filé, {{is generally not}} added to the gravy until after the vegetables and meats or seafood have finished cooking and {{have been removed from}} the heat source. If added during the boiling <b>process,</b> <b>filé</b> makes the gumbo too when added at the end, the gumbo gains a slightly stringy texture.|$|E
50|$|Panasas {{developed}} an extension for managing parallel file access in the Network File System (NFS). This work was later integrated in Parallel NFS (pNFS), {{part of the}} NFS version 4.1 specification, published by the Internet Engineering Task Force as RFC 5661 in January, 2010. pNFS describes {{a way for the}} NFS protocol to <b>process</b> <b>file</b> requests to multiple servers or storage devices at once, instead of handling the requests serially.|$|E
5000|$|Roger Faulkner and Ron Gomes ported V8 /proc to SVR4, and {{published}} a paper called [...] "The <b>Process</b> <b>File</b> System and Process Model in UNIX System V" [...] at USENIX in January 1991. This kind of procfs supported {{the creation of}} ps, but the files could only be accessed with functions read (...) , write (...) , and ioctl (...) [...] Between 1995 and 1996, Roger Faulkner created the procfs-2 interface for Solaris-2.6 that offers a structured /proc filesystem with sub-directories.|$|E
5000|$|Most Word {{processors}} have integrated automated indexing functions. These tools build a concordance or word lists from <b>processed</b> <b>files.</b> They {{have often}} limited usage.|$|R
30|$|Steps S 2 and S 3, which {{process the}} DID and QID of the {{structured}} data, and U 2, {{which is used}} to <b>process</b> <b>files</b> separated by unstructured data, are described separately.|$|R
50|$|Example. — A {{computer}} program that <b>processes</b> <b>files</b> from disk. A {{part of that}} program may scan the directory of the disk and create a list of files internally in memory. After that, {{another part of the}} program passes each file to a separate thread for processing. The part that scans the directory and creates the file list cannot be sped up on a parallel computer, but the part that <b>processes</b> the <b>files</b> can.|$|R
5000|$|... #Caption: File {{descriptors}} for {{a single}} <b>process,</b> <b>file</b> table and inode table. Note that multiple file descriptors can refer to the same file table entry (e.g., {{as a result of}} the dup system call and that multiple file table entries can in turn refer to the same inode (if it has been opened multiple times; the table is still simplified because it represents inodes by file names, even though an inode can have multiple names). File descriptor 3 does not refer to anything in the file table, signifying that it has been closed.|$|E
50|$|At present, OpenESB {{comes with}} Glassfish V2 as a container. OpenESB on Glassfish is reliable, easily {{manageable}} and very scalable {{with or without}} Clusters. A benchmark on a 10 € per day machine on the cloud showed that OpenESB processes more than 10 million complex messages on an elaborate multichannel complex business-to-business <b>process</b> (<b>File,</b> FTP, SOAP, JMS). At the same time, it generates more than 12 million complex messages for external partners. With an extra configuration effort, OpenESB runs on JBoss V4 and V5 and set up for production uses. As of 2012, OpenESB development focused on new containers Glassfish V3-V4, JBoss V7, and OSGI. Next versions were planned for 2013.|$|E
50|$|Service choreography {{is better}} {{understood}} through the comparison with another paradigm of service composition: service orchestration. On one hand, in service choreographies {{the logic of}} the message-based interactions among the participants are specified from a global perspective. In service orchestration, on the other hand, the logic is specified from the local point of view of one single participant, called the orchestrator. In the service orchestration language BPEL, for example, the specification of the service orchestration (e.g. the BPEL <b>process</b> <b>file)</b> can be deployed on the service infrastructure (for example a BPEL execution engine like Apache ODE). The deployment of the service orchestration specification creates the composed service.|$|E
50|$|GNU unshar scans {{a set of}} mail {{messages}} {{looking for}} the start of shell archives. It will automatically strip off the mail headers and other introductory text. The archive bodies are then unpacked by a copy of the shell. unshar may also <b>process</b> <b>files</b> containing concatenated shell archives.|$|R
5000|$|Batch {{metadata}} removal tools, {{which can}} <b>process</b> multiple <b>files.</b>|$|R
5000|$|Hasselblad's Phocus {{relies on}} {{operating}} system support to <b>process</b> non-Hasselblad <b>files</b> ...|$|R
50|$|Streaming backup is {{a backup}} method where copies of all desired {{database}} files and the necessary log files are {{made during the}} backup <b>process.</b> <b>File</b> copies may be saved directly to tape or {{can be made to}} any other storage device. No quiescing of activity of any kind is required with streamed backups. Both the database and log files are check summed to ensure that no data corruptions exist within the data set during the backup process. Streaming backups may also be incremental backups. Incremental backups are ones in which only the log files are copied and which can be restored along with a previous full backup to bring all databases to a recent state.|$|E
40|$|Operating {{system is}} the heart of {{computing}} system. It is an important component of any computer system. Although there are several operating systems in desktop environment, in this study we will focus on Windows operating system (OS). Windows based applications have clearly come to dominate the desktop environment. Window OS offers the full power of a modern operating system, including virtual memory, <b>process,</b> <b>file</b> protection and networking. The objectives of this study are to identify the vulnerabilities based on Window OS and to classify the vulnerabilities based on Window OS. Severity rating system from Microsoft Security Response Center (MSRC) will be used in order to identify the vulnerabilities. Meanwhile, we will use the classification scheme of intrusion technique to classify the vulnerabilities. This research expose about security flaws in Windows OS and how they can arise...|$|E
40|$|Abstract—At {{the time}} of writing, {{one of the most}} {{pressing}} problems for forensic investigators is the huge amount of data to analyze per case. Not only the number of devices increases due to the advancing computerization of everydays life, but also the storage capacity of each and every device raises into multi-terabyte storage requirements per case for forensic working images. In this paper we improve the standardized forensic process by proposing to use file deduplication across devices as well as file whitelisting rigorously in investigations, {{to reduce the amount of}} data that needs to be stored for analysis as early as during data acquisition. These improvements happen in an automatic fashion and completely transparent to the forensic investigator. They furthermore be added without negative effects to the chain of custody or artefact validity in court, and are evaluated in a realistic use case. Keywords-digital forensics, forensic <b>process,</b> <b>file</b> deduplication, file whitelisting I...|$|E
5000|$|Objects like <b>processes</b> or <b>files</b> which {{security}} context or configuration changed ...|$|R
5000|$|... #Subtitle level 3: <b>Process</b> of <b>filing</b> {{an appeal}} with the Board ...|$|R
50|$|The Secretary of State's office {{also has}} a number of {{responsibilities}} related to corporations; the largest portion office is the Business Programs Division, which handles corporate filings. The Business Entities Section <b>processes,</b> <b>files</b> and maintains records related to corporations, limited liability companies, partnerships and other business entities conducting or planning to conduct business in California.|$|R
40|$|This paper {{describes}} a simulator that {{allows users to}} explore concurrent I/O in UNIX. UNIX I/O provides an interesting example of how a shared variable, {{in this case the}} file offset, can be affected by concurrent access. The examples given can run on the simulator or a real UNIX-like system such as Linux, Solaris for Mac OS X. The simulator can run programs written by the user and display pictorially the relationship among various data structures involved in I/O, including the <b>process</b> <b>file</b> descriptor table, the system open file table, the inodes, and the data stored on disk. The user can run the program slowly, or step forward or back through the program to examine the data structures in detail. The simulator supports the creation of both child processes and threads as well as open, close, read, write, wait, join and detach instructions. The simulator is freely available for download. It can be also be used directly from a browser without the need for installation...|$|E
40|$|The Linux Proc {{filesystem}} has precursors in the <b>Process</b> <b>file</b> {{system of}} UNIX System V Release 4 and has features {{in common with}} the/proc filesystem of the Plan 9 Operating System. Under the Linux Virtual File System, the Proc filesystem is mounted during boot at /proc and provides dynamically updated information about running processes. Although its abstract representation {{is that of a}} filesystem, or storage device, data read from /proc are generated on demand by the kernel when a user-level process issues open and read system calls on a file in the /proc directory tree. The data (typically kernel-level system information) are then passed into the address space of the user process. Since the Proc filesystem represents a window on the running kernel, researchers and system administrators (and, by extension, system users) will benefit from a general method of kernel instrumentation whereby statistics of interest may be generated, collected and reported. Because Linux kernel sou [...] ...|$|E
40|$|Offline {{programming}} (OLP) is a {{new method}} in robot programming which is used widely in the industry nowadays which is a simulation base method that can produce the robot codes for motion according to virtual world in the simulation software. In this project Delmia v 5 is used as simulation software. First the work cell component was modelled by Catia v 5 {{and all of them}} was imported to a <b>process</b> <b>file</b> in Delmia and placed roughly to form the virtual work cell. Then robot was added to the work cell from the Delmia library. Work cell was calibrated corresponding to real world work cell to have accurate code. Tool calibration is the first step of calibration scheme and then work cell equipment can be calibrated using 6 point calibration method. Finally generated code needs to be reformed to match related controller code instruction. At the last stage IO were set to accomplish robots cooperation and make their motion synchronized. The pros and cons also will be discussed to clarify the presented results show the feasibility of the method and its effect on production line efficiency. Finally the positive and negative points of the implementation will be discussed...|$|E
5000|$|The DPP {{launched}} a Compliance Programme in Mar 2014 {{to help the}} industry identify trusted products, such as Vidchecks Vidchecker software, which work with AS-11 DPP files and to speed {{the implementation of the}} file-based delivery process by ensuring products can correctly create, read and / or <b>process</b> <b>files</b> which meet the AS-11 DPP standard.|$|R
50|$|Firefox {{extensions}} {{exist that}} allow the users to <b>process</b> downloaded <b>files</b> with ClamWin.|$|R
40|$|Abstract. In this paper, {{a method}} of NC process {{information}} extraction and import to template <b>file</b> based on <b>Process</b> Recording <b>Files</b> and database was proposed, which provides an effective way for NC process information sharing and reuse, and made positive effect on current situation in CNC manufacturers, such as: type of product is relative stable, process of CAM programming has lots of duplication, process parameters are dependent on programmers, the processing quality is instable and so on. The <b>Process</b> Recording <b>Files</b> are from mainstream heterogeneous CAM softwares, such as: PowerMILL, UG/CAM, which used to record CAM programming <b>process,</b> macro <b>files</b> from PowerMILL and UG/CAM are belongs {{to this kind of}} file...|$|R
40|$|UPTD Market Region 1 Banjarnegara {{is one of}} the {{agencies}} that manage the administration of the data collection market as traders and market revenues data collection. Until now UPTD manages 10 markets, City Market, Wage Market, Gayam Market, Salak Market, Sayur Market, Wanadri Market, Tunggara Market, Madukara Market, Kuliner Market and Petambakaan Market. In the <b>process</b> <b>file</b> of market management is still using microsof excel. This makes the file collection process to be slower and less effective and less efficient. Market location information managed by UPTD also needed by society. Therefore, through the design and creation of web based information system that can display the location of the market is managed by the Region 1 market UPTD along with market information to the public. Presentation of information in the web form will be easier for people to access it. Systems development methodology used in this study is the method Waterfall. The design of the map is displayed in the system using the Google Maps, the software used in building this application is PHP (Pear Hypertext Prepocessor) as a programming language, MySQL as the database server. Web Based Market Information System is a system that provides information to the public about market and market locations managed by UPTD Market Region 1 Banjarnegara. ...|$|E
40|$|Abstract—At {{issue for}} any {{organization}} is the illicit dissemination of sensitive information using file sharing applications within a network, and tracking terrorist cells or criminal {{organizations that are}} covertly communicating using Voice over IP (VoIP) applications. This paper presents a {{field programmable gate array}} (FPGA) -based embedded software tool designed to <b>process</b> <b>file</b> transfers using the BitTorrent peer-to-peer protocol and VoIP phone calls made using the Session Initiation Protocol (SIP). The tool searches a network in real time for selected peer-to-peer control messages using payload analysis and compares the unique identifier of the file being shared or phone number being used against a list of known contraband files or phone numbers. If the identifier is found on the list, the control packet is added to a log file for later forensic analysis. Results show that the FPGA tool processes peer-to-peer packets of interest 92 % faster than a software-only configuration and is 99. 0 % accurate at capturing and processing BitTorrent Handshake messages under a network traffic load of at least 89. 6 Mbps. When SIP is added to the system, the probability of intercept for BitTorrent Handshake messages remains at 99. 0 % and the probability of intercept for SIP control packets is 97. 6 % under a network traffic load of at least 89. 6 Mbps, demonstrating that the tool can be expanded to process additional protocols with minimal impact on overall performance. Index Terms—P 2 P, network forensics, BitTorrent, VoIP, packet analysis. I...|$|E
40|$|Abstract: Leakage {{components}} is {{very important}} for estimation and reduction of leakage power, especially for low power applications. This provides the motivation to explore the design of low leakage SRAM cells. High leakage currents in deep submicron regimes are becoming a major contributor to total power dissipation of CMOS circuits as the threshold voltage, channel length and gate oxide thickness are scaled. Memory leakage suppression is critically important for the success of power-efficient designs, especially for ultra- low power applications. As the channel length of the MOSFET reduces, the leakage current in the SRAM increases. One method is to reduce the standby supply voltage (VDD) to its limit, which is the Data retention voltage (DRV), leakage power can be substantially reduced. Also, lower operating voltage will lower the stability of SRAM cell resulting in lower value of static noise margin. To reduce the sub-threshold leakage further, an adaptive voltage level (AVL) circuit is added to this cell, which controls the effective voltage across the SRAM cell in inactive mode. Two schemes are employed; one in which the supply voltage is reduced and the other in which the ground potential is increased. CADENCE Simulations are performed with 90 nm CMOS technology <b>process</b> <b>file</b> and the leakage currents of all the cells are measured and compared. Simulation results revealed that there is a significant reduction in leakage current for this proposed cell with the AVL circuit reducing the supply voltage...|$|E
40|$|The {{methods used}} in {{manufacturing}} Micarta propellers differ considerably from those employed with wood propellers {{on account of}} the hardness of the materials. The propellers must be formed accurately to size in a mold and afterwards balanced without the customary trimming of the material from the tips. Described here are the pressing and molding <b>processes,</b> <b>filing,</b> boring, balancing, and curing...|$|R
50|$|NetTracker stores its <b>processed</b> log <b>files</b> in an {{internal}} database {{which is based}} upon SQLite.|$|R
50|$|For example, a {{party that}} {{receives}} improper service of <b>process</b> may <b>file</b> a motion to quash.|$|R
