0|343|Public
5000|$|In {{the above}} pseudocode, the {{statement}} [...] "yield P" [...] means to output or record {{the set of}} <b>permuted</b> <b>indices</b> P. If the algorithm is implemented correctly, P will be yielded exactly n! times, each with {{a different set of}} <b>permuted</b> <b>indices.</b>|$|R
5000|$|... ptx is a Unix utility, {{named for}} the <b>permuted</b> <b>index</b> which can perform the {{function}} of the Keyword in Context (KWIC) search mode. There is a corresponding IBM mainframe utility which performs the same function. <b>permuted</b> <b>indexes</b> are often used in such places as bibliographic or medical databases, thesauruses, or web sites to aid in locating entries of interest.|$|R
5000|$|... where [...] is the {{subgroup}} of permutations such {{that for all}} i, and w acts on variables by <b>permuting</b> <b>indices.</b>|$|R
50|$|A KWIC {{index is}} a special case of a <b>permuted</b> <b>index.</b> This term refers {{to the fact that}} it indexes all cyclic {{permutations}} of the headings. Books composed of many short sections with their own descriptive headings, most notably collections of manual pages, often ended with a <b>permuted</b> <b>index</b> section, allowing the reader to easily find a section by any word from its heading. This practice, also known as KWOC (“Key Word Out of Context”), is no longer common.|$|R
5000|$|... {{and because}} cyclic {{permutations}} of indices in the ε symbol {{does not change}} its value, cyclically <b>permuting</b> <b>indices</b> in εkm to obtain εmk allows us to use the above δ-ε identity to convert the ε symbols into δ tensors: ...|$|R
40|$|Our {{contribution}} {{relates to}} lossless compression of pseudo color images (images with a palette). The proposed method is a preprocessing step preceeding actual compression. Indices in the palette are semioptimally permuted during preprocessing. For actual image compression, our own nonlinear predictor based method is used 1 but the proposed invisible palette modification {{is relevant to}} most of other compression techniques too. Experiments with numerous images show that indices reordering in the palette yields data savings from 10 to 50 % for typical images. We suggest a preprocessing phase that (a) analyses statistics of the adjacency relations of index values, (b) performs optimization, and (c) <b>permutes</b> <b>indices</b> to palette to achieve more smooth image. The smoother image causes that the lossless image compression methods yield less output data. The task to optimally <b>permute</b> <b>indices</b> is a NP complete combinatorial optimization. Instead of checking all possibilities, we propose a reasona [...] ...|$|R
5000|$|Against the <b>index</b> <b>entry</b> [...] a [...] in Table 8 {{copy the}} {{corresponding}} row in Table 1, against the <b>index</b> <b>entry</b> [...] b [...] copy the corresponding row in Table 1, etc., and construct Table 9.|$|R
40|$|The access vocabulary, {{which is}} {{essentially}} a <b>permuted</b> <b>index,</b> provides access to any word or number in authorized postable and nonpostable terms. Additional entries include postable and nonpostable terms, other word entries and pseudo-multiword terms that are permutations of words that contain words within words. The access vocabulary contains almost 42, 000 entries that give increased access to the hierarchies in Volume 1 - Hierarchical Listing...|$|R
5000|$|Replacing {{the matrix}} A by its {{transpose}} AT {{is equivalent to}} <b>permuting</b> the <b>indices</b> of its components: ...|$|R
30|$|In [36], a {{mechanism}} to update propagation mechanism on peer-to-peer networks (P 2 P) is proposed. In this model, intermediate client caches the <b>index</b> <b>entries</b> to locate the node where the contents are cached or stored {{in order to reduce}} the access latency and to balance the workload. Intermediate clients' <b>index</b> <b>entries</b> are maintained by propagating the updated <b>index</b> <b>entries.</b> However, cached <b>index</b> <b>entries</b> may become obsolete due to mobility of MTs (mobile terminals) that incurs changes in the network topology in mobile environments. In [53], a system for stateless server is proposed. Serversperiodically broadcast an invalidation report (IR), in which the updated data items are marked. On the other hand, {{in order to reduce the}} latency, a new type of packet is introduced between IR packets, the updated invalidation report (UIR).|$|R
30|$|Let I_U be an set of <b>index</b> <b>entries</b> over a {{sequence}} of periods of time U. We partition {{a period of time}} over which the workloads supposed to be found in to {{a sequence}} of time units F with the length of each time unit and distances between time units the same as in U. A sequence of time units F obtains a set of <b>index</b> <b>entries</b> I_F. Finally, U is mapped onto F in a way that maximizes the total number of identical <b>index</b> <b>entries</b> in I_U and I_F. For example, let I_F contains the <b>index</b> <b>entries</b> 〈 Monday, {F[5], F[12], F[19], F[26]}〉 and 〈 The first day of a month, {F[11]}〉 and let I_U contains the <b>index</b> <b>entries</b> listed above. Then the best mappings of U are at position F[12] and later on at position F[26] because a location F[11] is closer to F[12] and F[5]. The mappings of U onto F and a set of periodic patterns over U determine the future workloads in F.|$|R
40|$|Abstract — We study new {{hierarchical}} indexing {{approach to}} process XPATH queries. Here, a hierarchical index consists of <b>index</b> <b>entries</b> that are pairs of queries and their (full/partial) answers (called extents). With such an index, XPATH queries can be processed {{to extract the}} results if they match the queries maintained in those <b>index</b> <b>entries.</b> Existing XML path indexing approaches support either child-axis (/) only, or additional descendant-or-self-axis (/) {{but only in the}} query root. Different from them, we propose a novel indexing approach to process a large fragment of XPATH queries, which may use /, /, and wildcards (∗). The key issues are how {{to reduce the number of}} <b>index</b> <b>entries</b> and how to maintain non-overlapping extents among <b>index</b> <b>entries.</b> We show how to compress such index and how to evaluate XPATH queries on it. Experiments show the efficiency of our approaches...|$|R
50|$|Note (5): InnoDB {{automatically}} generates adaptive hash <b>index</b> <b>entries</b> as needed.|$|R
5000|$|However, the {{following}} ICD-10-CM <b>Index</b> <b>entries</b> contain back-references to ICD-10-CM F55.3: ...|$|R
5000|$|<b>Index</b> <b>Entries</b> {{are only}} to 'direct traffic', thus we can {{compress}} them.|$|R
5000|$|Understanding the {{audience}} and understand what kind of <b>index</b> <b>entries</b> they're likely to look for ...|$|R
5000|$|The <b>index</b> <b>entries</b> in {{the first}} column of Table 9 are now deleted to get Table 10: ...|$|R
40|$|We {{address the}} problem of pseudocolor image compression. Image values {{represent}} indices into a look up table (palette). Due to quantization, the neighbouring pixel values (indices) change too much. This deteriorates performance of both lossless and lossy image compression methods. We suggest a preprocessing phase that (a) analyses statistics of the adjacency relations of index values, (b) performs palette optimization, and (c) <b>permutes</b> <b>indices</b> to palette to achieve more smooth image. The smoother image causes that the lossless image compression methods yield less output data. The task to optimally <b>permute</b> palette <b>indices</b> is a NP complete combinatorial optimization. Instead of checking all possibilities, we propose a reasonable initial guess and a fast suboptimal hill climbing optimization. The proposed permutation of indices should enhance performance of most lossless compression method used after it. To our knowledge, the proposed reordering followed by our own nonlinear [...] ...|$|R
5000|$|... #Caption: Flow graph {{for three}} {{simultaneous}} equations. The edges incident on each node are colored differently just for emphasis. Rotating the figure by 120° simply <b>permutes</b> the <b>indices.</b>|$|R
40|$|An {{introduction}} to the {{theory and practice of}} cataloguing in Malayalam meant for the librarians and mangers of village libraries and community information centres. The paper covers objectives of the library catalogue, its physical forms, types of catalogues, kinds of catalogue entries, etc. A comparison of alphabetic catalogue and classified catalogue is provided. Cataloguing according to S. R. Ranganathan’s Classified Catalogue Code (CCC) is discussed in detail with examples. Preparing main <b>entry,</b> book <b>index</b> <b>entries</b> for authors, collaborators and series, class <b>index</b> <b>entries,</b> cross reference <b>index</b> <b>entries</b> etc according to CCC are explained in detail with examples of popular Malayalam books. The structure of personal names of Kerala has also been discussed in detail. It is intended as a course material for cataloguing in short library science courses to be conducted for rural developments activists...|$|R
40|$|Basic functionality: Takes {{an export}} of a PDF file's {{comments}} as a tab-delimited file with page numbers and comments Converts this into an <b>index</b> with <b>index</b> <b>entries</b> and a sorted list of page numbers Support for note referencing with manual entry using syntax (page*n*[number]), e. g., (135 n 3). Note number is optional {{in case of}} sole note on page. Note numbers output using the style 135 n 4 Page ranges supported with manual entry using the syntax (startPage-endPage) Elision of page numbers {{in accordance with the}} Chicago manual of style (enabled by -e/ [...] elide flag) Subheadings supported with manual entry using the syntax entry | subHeading, and exported as left-indented list of <b>index</b> <b>entries</b> Support for multiple index sorting styles including: letter or word sorting ignoring conjunctions such as and, of, and so forth ignoring the Support for grouping <b>index</b> <b>entries</b> by alphabetic order using -g/ [...] group flag Support for custom separator between <b>index</b> <b>entry</b> and locator using -s/ [...] separator flag Support for setting an offset to account for book frontmatter to ensure page numbers render properly, using -o/ [...] offset fla...|$|R
2500|$|Using {{that the}} symbols are {{symmetric}} {{in the lower}} two indices, one can solve explicitly for the Christoffel symbols {{as a function of}} the metric tensor by <b>permuting</b> the <b>indices</b> and resumming: ...|$|R
5000|$|See the <b>index</b> <b>entries</b> under [...] "spelling pronunciation" [...] from Leonard Bloomfield, Language (originally {{published}} 1933; current edition 1984, University of Chicago Press, Chicago; [...] ).|$|R
50|$|Unusually, his {{experimental}} scientific {{career is}} well documented. The extensive records and effects have been bequeathed to the National Library of Australia. The NLA <b>index</b> <b>entry</b> is http://catalogue.nla.gov.au/Record/5714531.|$|R
2500|$|Stanton, Jeffrey. (2005) Venice California: Coney Island of the Pacific California: Donahue Publishing[...] [...] De Lay {{has many}} book <b>index</b> <b>entry</b> pages: 114, 129, *140, *141, 148, 150 *=illustrated ...|$|R
5000|$|Goulart, Ron. Ron Goulart's Great History of Comic Books: The Definitive Illustrated History {{from the}} 1890s to the 1980s. NY: McGraw-Hill/Contemporary, 1986. [...] "Draza Mihajlovic", <b>index</b> <b>entry,</b> p. 202.|$|R
40|$|The alphabetization is character-by-character, {{including}} spaces. Numbers {{and symbols}} come first, {{with the exception}} of $. All fonts are treated equally. The <b>index</b> <b>entries</b> refer to the sections or subsections and are hyperlinked. The <b>index</b> <b>entry</b> for a subject from within the exercises and solutions are hyperlinked mostly to the exercises and not to the corresponding solutions. V. i stands for chapter i of the volume V (V œ 8 P, G, N, S<; P=Programming, G=Graphics, N=Numerics, and S=Symbolics), V. i. j stands for section j of chapter i of volume V. V. i. j. k stands for subsection j. k of chapter i of volume V. V. i. Ex. j stands for the jth Exercise from Chapter i of volume V and V. i. Sol. j stands for the jth Solution of Chapter i of volume V. Ov stands for Overview, A stands for Appendix, Pr stands for Preface, and In stands for Introduction. “subject in action ” refers to examples or solutions of exercises making very heavy use of subject, or could be considered archetypical use of subject. <b>Index</b> <b>entries</b> are grouped at most one level deep. <b>Index</b> <b>entries</b> containing compound names, such as Riemann–Siegel, are mentioned on their own and not as a subentry under the first name. Built-in functions are referenced to the section in which they are first discussed. Built-in functions and functions defined i...|$|R
40|$|Subject indexes were an {{important}} step forward for books because they enabled the comparison and correlations of information without extensive reading, re-reading and memorization. In this short paper, {{we focus on the}} user interaction and usage scenario of a new system called ScentIndex that enhances the subject index of an eBook by conceptually reorganizing it to suit particular information needs. Users first enter information needs via keywords describing the concepts they are trying to retrieve and comprehend. ScentIndex then computes what <b>index</b> <b>entries</b> are conceptually related, and reorganizes and displays these <b>index</b> <b>entries</b> on a single page...|$|R
40|$|Recently {{the problem}} of {{indexing}} and locating content in peer-to-peer networks has received much attention. Previous work suggests {{it is useful to}} cache <b>index</b> <b>entries</b> at intermediate nodes that lie on the paths taken by search queries, but until now there has been little focus on how to maintain these intermediate caches. This paper proposes CUP, a protocol for performing Controlled Update Propagation to maintain caches of <b>index</b> <b>entries</b> in peer-to-peer networks. CUP asynchronously builds and maintains caches while answering search queries. CUP is independent of the underlying search mechanism and therefore can be used in the context of any peer-to-peer network...|$|R
5000|$|... #Caption: Simplified {{illustration}} of hard links on typical UN*X filesystem. Note that files [...] "A" [...] and [...] "D" [...] both point to same <b>index</b> <b>entry</b> in filesystem's inode table, making its reference count 2.|$|R
5000|$|Let V be any {{vector space}} over the complex numbers. Consider then the tensor product vector space [...] (n times). Let Sn act on this tensor product space by <b>permuting</b> the <b>indices.</b> One then has a natural group algebra {{representation}} [...] on [...]|$|R
5000|$|The History of Ireland, by Geoffrey Keating, D.D. (1580-1644), {{written in}} the years prior to 1640, and known in the {{original}} Gaelic as , published by the Irish Texts Society, London, 1914. Volume IV. See <b>index</b> <b>entry</b> for Tír Chonaill ...|$|R
5000|$|... "From {{many points}} of view an index is synonymous with a catalogue, the {{principles}} of analysis used being identical, but whereas an <b>index</b> <b>entry</b> merely locates a subject, a catalogue entry includes descriptive specification of a document concerned with the subject".|$|R
40|$|A {{great deal}} of {{analytical}} work {{is done in the}} context of reading, in digesting the semantics of the material, the identification of important entities, and capturing the relationship between entities. Visual analytic environments, therefore, must encompass reading tools that enable the rapid digestion of large amount of reading material. Other than plain text search, subject indexes, and basic highlighting, tools are needed for rapid foraging of text. In this paper, we describe a technique that presents an enhanced subject index for a book by conceptually reorganizing it to suit particular expressed user information needs. Users first enter information needs via keywords describing the concepts they are trying to retrieve and comprehend. Then our system, called ScentIndex, computes what <b>index</b> <b>entries</b> are conceptually related, and reorganizes and displays these <b>index</b> <b>entries</b> on a single page. We also provide a number of navigational cues to help users peruse over this list of <b>index</b> <b>entries</b> and find relevant passages quickly. Compared to regular reading of a paper book, our study showed that users are more efficient and more accurate in finding, comparing, and comprehending material in our system...|$|R
40|$|Many {{scientific}} indexing structures {{thought to}} have been developed in the computer era were invented about a millennium earlier, in the domain of religion. Hans Wellisch traced the origins of alphabetical indexing to a fourth-century index to a compilation of sayings of the Greek Church fathers. The Masoretes standardized the text of the Hebrew Bible {{and in the course of}} their work created alphabetical lists of words and phrases. These tenth-century lists may be viewed as the predecessors of thirteenth-century Latin biblical concordances. Structurally, Masoretic lists and biblical concordances are analogous to KWOC (keyword out of context) indexes. Masoretic lists anticipated search features, including truncation and adjacency, developed in the latter half of the twentieth century. The Masoretes also created <b>permuted</b> <b>indexes</b> and produced frequenc...|$|R
40|$|This paper {{analyzes}} {{the most important}} proposals following the Shannon and Weaver's Mathematic Theory of Communication that have influenced in pro-ceedings of automatic content analysis. It's explained the methodological applica-tions of this theory in our discipline, especially about information retrieval. After this, describes the mathematical models applied to automatic content analysis: Laws of Zipf and Goffman, anti-dictionaries to <b>permuted</b> <b>indexes,</b> Statistical Inde-xation of terms by frequencies, n-grams and stemming algorisms. Also studies the methods of relation and classification like clusters by value of discrimination and by relevance of terms: for example, methods of relations based in Graph Theory, mass core, the K-means or incremental K-means, and the ISODATA algorism. Fi-nally, explains the scientometrics indicators as Chen's coowording and methods with learning systems...|$|R
