0|1152|Public
40|$|We use {{region growing}} {{technique}} to segment the images. Based on the segmented region, we then select {{the size of}} the region to construct <b>indexing</b> <b>keys.</b> By using region growing technique on DCT image we reduce the number of region which is on the segmented regions only. Based on these regions, we then construct the <b>indexing</b> <b>keys</b> to match the images. Our technique will reduce the process time of constructing <b>indexing</b> <b>keys.</b> The <b>indexing</b> <b>keys</b> will then be constructed by calculating the regions distance. Our proposed of recursive region growing is not a new technique but its application on DCT images to build <b>indexing</b> <b>keys</b> is quite new and has not been presented by many other authors. © 2007 Taylor & Francis Group...|$|R
40|$|In this letter, {{we propose}} a data hiding {{approach}} to embed the <b>indexing</b> <b>keys</b> inside the JPEG compressed images for their retrieval, inspired from {{the spirit of}} digital watermarking. At the stage of database population, the existing approach is to compress all images by standard JPEG {{in order to save}} their storage space, but ignored the compression of their <b>indexing</b> <b>keys</b> under the notion that the size of each <b>indexing</b> <b>key</b> is negligible. When a large image database is established, however, this part of storage space becomes non-trivial. By hiding the <b>indexing</b> <b>keys</b> inside the JPEG compressed codes, significant advantages are gained that the <b>indexing</b> <b>keys</b> can be compressed naturally by JPEG without any additional cost. Our experiments on hiding an <b>indexing</b> <b>key</b> of 256 bytes illustrate that: (a) no noticeable distortion is introduced in comparison with non-watermarked images; and (b) their storage space is reduced into the region of 7 %~ 27 % of their original size...|$|R
40|$|Given {{an image}} with N blocks of 8 x 8 pixels, we {{construct}} an <b>indexing</b> <b>key</b> by overlapping the N blocks into one combinational block and each block acting as one single plane inside the combinational block. Specific construction of each element inside the <b>indexing</b> <b>key</b> {{can have a}} range of alternatives based on such a common platform. These include: (i) average DCT value (ii) energy distributed in DCT domain to construct the <b>indexing</b> <b>key,</b> and (iii) DCT coefficients that can be polarized via exploiting their directional properties, and thus can be processed to construct an energy magnitude to highlight the texture of the input image. In this way, the dimension of the <b>indexing</b> <b>key</b> can be significantly reduced. In this paper we represent DCT descriptors as tools of generating <b>indexing</b> <b>key</b> in compress domain...|$|R
40|$|The {{objective}} {{of this study is}} the elaboration and showing of a digital <b>photo</b> <b>index</b> of the Corumbataí river´s basin at São Paulo state, reconstituted through the mosaic of aerial photographs existing in the analogical base of 1972, stored in the CEAPLA´s map collection (São Paulo State University). It will be possible to rescue historical information of use of the land, being able to analyze the urban standards of the cities that the area of the basin amongst other objectives. The elaboration of the digital <b>photo</b> <b>index</b> will make possible a large vision of the basin and could be used with material of support for education and research. Pages: 3935 - 394...|$|R
50|$|The society also {{produces}} an annual calendar featuring photographs of South Australian marine life taken by its members. The calendars are {{sold as a}} fundraising and outreach exercise. The society also hosts an online <b>photo</b> <b>index</b> of species native to South Australian waters on its website.|$|R
5000|$|... #Caption: Index map of Atlantic County (click to see <b>index</b> <b>key)</b> ...|$|R
5000|$|A central directory—i.e., {{a secure}} {{location}} {{in which to}} store and <b>index</b> <b>keys</b> ...|$|R
5000|$|... #Caption: Index map of Cape May County Municipalities (click to see <b>index</b> <b>key)</b> ...|$|R
5000|$|... #Caption: Index map of Ocean County {{municipalities}} (see <b>index</b> <b>key</b> {{in table}} below) ...|$|R
5000|$|<b>Index</b> <b>keys</b> {{are stored}} in {{normalized}} form which can be, in many cases, denormalized to the original column value. Normalization is not always reversible. For example, Text and Long Text column types cannot be denormalized [...] In addition, <b>index</b> <b>keys</b> may be truncated when column data is very long. In cases where columns cannot be retrieved directly from secondary indexes, the record can always be accessed to retrieve the necessary data.|$|R
40|$|In this paper, a quick table look-up {{optimization}} algorithm {{is presented to}} solve the problems of long table look-up time for CAVLC decoding in H. 264 /AVC. The achievement of the new algorithm rests that we make full use of the hash table query and index technology to improve the table look-up speed for CAVLC decoding. The basic idea of the new algorithm is that we take the number of zero in code prefix calculated from input bit-stream as <b>index</b> <b>key</b> of the first level, the value of codeword suffix as <b>index</b> <b>key</b> of the second level, then through <b>index</b> <b>key</b> of the one and second <b>index</b> <b>key</b> above, we can quickly get the decoded codeword located in the third level in a hash table built, which can reduce a lot of table look-up time for CAVLC decoding in H. 264 /AVC. The simulation results show that our proposed schemes based on hash-index method can reduce about 40 % table look up time for CAVLC decoding compared with TLSS method, without degrading video quality...|$|R
5000|$|Specialized {{versions}} of collections for thick indexes (indexes with many duplicates) and bit <b>indexes</b> (<b>keys</b> with a restricted {{number of possible}} values) ...|$|R
50|$|Given a new object, its <b>index</b> <b>key</b> is {{computed}} {{and then}} the object is inserted into the Bx-tree as in the B+ tree. An update consists of a deletion followed by an insertion. An auxiliary structure is employed to keep the latest <b>key</b> of each <b>index</b> so that an object can be deleted by searching for the <b>key.</b> The <b>indexing</b> <b>key</b> is computed before affecting the tree. In this way, the Bx-tree directly inherits the good properties of the B+ tree, and achieves efficient update performance.|$|R
500|$|Some SQL {{products}} do not <b>index</b> <b>keys</b> containing NULLs. For instance, PostgreSQL [...] versions {{prior to}} 8.3 did not, with the documentation for a B-tree index stating that ...|$|R
50|$|A BRIN is {{applicable}} to an index {{on a table}} that is large and where the <b>index</b> <b>key</b> value is easily sorted and evaluated with a MinMax function.|$|R
5000|$|Finally, {{with the}} {{combination}} of the partition number (time information) and the linear order (location information), an object is indexed in Bx-tree with a one-dimensional <b>index</b> <b>key</b> Bxvalue: ...|$|R
50|$|GIS uses spatio-temporal (space-time) {{location}} as the <b>key</b> <b>index</b> {{variable for}} all other information. Just as a relational database containing text or numbers can relate many different tables using common <b>key</b> <b>index</b> variables, GIS can relate otherwise unrelated information by using location as the <b>key</b> <b>index</b> variable. The <b>key</b> is the location and/or extent in space-time.|$|R
50|$|Also like CP-V, {{the design}} was an {{integrated}} file management system. Files were equally and compatibly available to programs executing in any mode. The files could be sorted in <b>indexed,</b> <b>keyed,</b> relative, or consecutive order.|$|R
3000|$|TrapGen([...] w, ik [...]). This {{algorithm}} takes {{a keyword}} w and <b>index</b> generation <b>key</b> ik. It encrypts the keyword w with <b>index</b> generation <b>key</b> ik and returns the encryption value, {{which is the}} trapdoor T [...]...|$|R
40|$|IEEE Computer Society Abstract—This paper {{proposes a}} method for reconstructing {{partially}} damaged faces based on a morphable face model. Faces are modeled by linear combinations of prototypes of shape and texture. With the shape and texture information from an undamaged region only, we can estimate optimal coefficients for linear combinations of prototypes of shape and texture by simple projection for least-square minimization (LSM). Our experimental results show that reconstructed faces are very natural and plausible like real <b>photos.</b> <b>Index</b> Terms—Face reconstruction, face synthesis, morphable face model, leastsquare minimization, damaged face. ...|$|R
50|$|A reverse <b>key</b> <b>index</b> {{reverses the}} <b>key</b> value before {{entering}} {{it in the}} index. E.g., the value 24538 becomes 83542 in the <b>index.</b> Reversing the <b>key</b> value is particularly useful for indexing data such as sequence numbers, where new key values monotonically increase.|$|R
5000|$|Lehrer, A.Z[...] Sarcophaginae et Paramacronychiinae du Proche Orient(Insecta, Diptera, Sarcophagidae). Pensoft Series Faunistica 60, ISSN 1312-0174. , Pensoft Publishers, Sofia-Moscow, 165x240, keys, species descriptions, b/w {{drawings}} and <b>photos,</b> references, <b>index.</b> In French.(2006).|$|R
40|$|With {{the spread}} of digital cameras, {{shooting}} photos has been becoming an everyday affair. However, there are few meth-ods or systems to manage photos simply, and {{a huge amount of}} photo data remains unorganized. Although it is possi-ble to add appropriate words explaining the contents of the photo as one of the methods to manage photos, it requires much time and effort to input such indexes manually. It is also difficult to add indexes intended by a user automati-cally. This paper proposes a semi-automatic <b>photo</b> <b>indexing</b> system that enables users to generate indexes simply and browse a <b>photo</b> library efficiently. <b>Index</b> candidates are ac-quired from map database retrieval and relevant word ex-traction using web retrieval based on shooting position and orientation information. We have implemented an indexing system prototype based on the proposed method, and have carried out some experiments. 1...|$|R
50|$|A Central <b>Index</b> <b>Key</b> or CIK {{number is}} a number given to an {{individual}} or company by the United States Securities and Exchange Commission. The number is used to identify the filings of a company, person, or entity in several online databases, including EDGAR.|$|R
3000|$|... combine <b>key</b> <b>indices</b> with {{auxiliary}} indices (direction {{of change}} as <b>key</b> <b>indices,</b> {{rate of change}} as auxiliary indices); and [...]...|$|R
30|$|For convenience, we {{will call}} {{a person who}} authors or retransmits an MBP a sender. For each MBP, we will include in one string its sender’s {{location}} and gender, the posting time, and the OSN this MBP is transmitting within. This string is used as the <b>indexing</b> <b>key</b> of the MBP.|$|R
40|$|Abstract. A new {{algorithm}} for compressed image retrieval {{is proposed}} {{in this paper}} based on DCT block edge patterns. This algorithm directly extract three edge patterns from compressed image data to construct an edge pattern histo-gram as an <b>indexing</b> <b>key</b> to retrieve images based on their content features. Three feature-based <b>indexing</b> <b>keys</b> are described, which include: (i) the first two features are represented by 3 -D and 4 -D histograms respectively; and (ii) the third feature is constructed by following the spirit of run-length coding, which is performed on consecutive horizontal and vertical edges. To test and evaluate the proposed algorithms, we carried out two-stage experiments. The results show that our proposed methods are robust to color changes and varied noise. In comparison with existing representative techniques, the proposed algorithms achieves superior performances in terms of retrieval precision and processing speed. ...|$|R
40|$|Index data {{structures}} {{are used in}} databases to get scalable access to rows in large tables for search conditions over indexed attributes. For each value of an indexed attribute, called the <b>index</b> <b>key,</b> the <b>index</b> associates a set of pointers, called the index list, to the rows where {{the value of the}} indexed attribute matches the <b>key.</b> If an <b>index</b> <b>key</b> over a very large collection has many duplicated values the index list can also become large. To make the indexes smaller and save space in main memory these index lists can be compressed. This thesis explores the benefits of using the state-of-the-art compression algorithm PForDelta to represent main-memory index lists compactly. PFordelta is used with two different implementations based on sequences of compressed arrays. The PForDelta implementations are compared with a naive linked list and a linked array implementation of index lists...|$|R
40|$|ICME 2005 : IEEE International Conference on Multimedia & Expo, Jul 6 - 8, 2005, Amsterdam, The NetherlandsWith {{the spread}} of digital cameras, {{shooting}} photos has been becoming an everyday affair. However, there are few methods or systems to manage photos simply, and {{a huge amount of}} photo data remains unorganized. Although it is possible to add appropriate words explaining the contents of the photo as one of the methods to manage photos, it requires much time and effort to input such indexes manually. It is also difficult to add indexes intended by a user automatically. This paper proposes a semi-automatic <b>photo</b> <b>indexing</b> system that enables users to generate indexes simply and browse a <b>photo</b> library efficiently. <b>Index</b> candidates are acquired from map database retrieval and relevant word extraction using Web retrieval based on shooting position and orientation information. We have implemented an indexing system prototype based on the proposed method, and have carried out some experiment...|$|R
40|$|ISAM {{refers to}} Indexed Sequential Access Mode. Under this 13; records can be created/accussed modified, based on any {{particular}} data field called <b>index</b> <b>key.</b> This facility {{is not available}} as a built-in procedure in C language. 13; 13; This highly useful feature is implemented in C as an enhancement keeping in mind the users who need this facility...|$|R
40|$|Panel title: Forest visitor guide, {{national}} forests in Florida. Includes recreation <b>index,</b> <b>key</b> maps, and ill. On verso: text and ill. (Funding) Funded {{in part by}} the University of Florida, the Florida Heritage Project of the State University Libraries of Florida, the Institute for Museum and Library Services, and the U. S. Department of Education's TICFIA granting program...|$|R
40|$|A new {{algorithm}} for compressed image retrieval {{is proposed}} {{in this paper}} based on DCT block edge patterns. This algorithm directly extract three edge patterns from compressed image data to construct an edge pattern histogram as an <b>indexing</b> <b>key</b> to retrieve images based on their content features. Three feature-based <b>indexing</b> <b>keys</b> are described, which include: (i) the first two features are represented by 3 -D and 4 -D histograms respectively; and (ii) the third feature is constructed by following the spirit of run-length coding, which is performed on consecutive horizontal and vertical edges. To test and evaluate the proposed algorithms, we carried out two-stage experiments. The results show that our proposed methods are robust to color changes and varied noise. In comparison with existing representative techniques, the proposed algorithms achieves superior performances in terms of retrieval precision and processing speed. © Springer-Verlag Berlin Heidelberg 2006...|$|R
40|$|Photomosaic {{series of}} Papua New Guinea.; "This <b>photo</b> <b>index</b> {{is merely a}} copy of an {{assembly}} of air photographs and is not an accurate map. "; "Names shown in red on this map have been supplied by C. S. I. R. O. Land Research Unit and are subject to approval by the N. G. Administration. "; Map carries logo: Department of National Development, Division of National Mapping.; Each sheet is named individually.; Includes index to adjoining maps and details of photography. But [...] Kairiru [...] Maprik [...] Wewak [...] Wihama [...] Tring [...] Sepik [...] Watam [...] Korogo [...] Yogei [...] Omba [...] Ikwap [...] Leron [...] Boana [...] Waime [...] Nadzab [...] Lae...|$|R
40|$|The Soccer {{collection}} contains the Laurie Schwab collection and the Les Shorrock collection. Both collections were donated in 2003 and reflect soccer in Australia {{in the modern}} era. Laurie Schwab was a journalist and editor and his collection includes numerous clippings and photographs relating to soccer. Les Shorrock was a photographer {{who worked for the}} Melbourne "Age" and as a freelancer. His collection consists of the photographs he took of soccer players and teams whilst he was freelancing, whilst he was part of "Soccer Action" from 1976 to 1987 and whilst working for the "Age" from 1987 to 1995. The <b>Photo</b> <b>Index</b> provides a list of the various photographs in the collection...|$|R
5000|$|Series co-creator Esther Shapiro {{later said}} that the {{character}} of Alexis {{was based on the}} Roman empress Livia, as characterized in the 1934 novel I, Claudius. She said in 1985 that she and costume designer Nolan Miller [...] "had the same vision" [...] for Alexis: Joan Crawford. In fact, Nolan had designed for Crawford, {{and he told me that}} she had a <b>photo</b> <b>index</b> of every outfit she owned. Everything was coordinated: Each dress had its own particular hat, purse, gloves, shoes, and it never varied. Joan Crawford didn't mix and match. We decided to take it one step further: Alexis would never wear the same thing twice. In fact, no one on Dynasty would.|$|R
40|$|International audienceSocial photos, {{which are}} taken during family events or parties, {{represent}} {{individuals or groups}} of people. We show in this paper how a Hasse diagram is an efficient visualization strategy for eliciting different groups and navigating through them. However, we do not limit this strategy to these traditional uses. Instead we show how {{it can also be}} used for assisting in <b>indexing</b> new <b>photos.</b> <b>Indexing</b> consists of identifying the event and people in photos. It is an integral phase that takes place before searching and sharing. In our method we use existing <b>indexed</b> <b>photos</b> to <b>index</b> new <b>photos.</b> This is performed through a manual drag and drop procedure followed by a content fusion process that we call ‘propagation'. At the core of this process is the necessity to organize and visualize the photos that will be used for indexing {{in a manner that is}} easily recognizable and accessible by the user. In this respect we make use of an Object Galois Sub-Hierarchy and display it using a Hasse diagram. The need for an incremental display that maintains the user's mental map also leads us to propose a novel way of building the Hasse diagram. To validate the approach, we present some tests conducted with a sample of users that confirm the interest of this organization, visualization and indexation approach. Finally, we conclude by considering scalability, the possibility to extract social networks and automatically create personalised albums...|$|R
