1|6207|Public
50|$|The {{input and}} output {{structures}} are then unified or merged into a final program structure, known as a <b>Program</b> <b>Structure</b> <b>Diagram</b> (PSD). This step may involve {{the addition of a}} small amount of high level control structure to marry up the inputs and outputs. Some programs process all the input before doing any output, whilst others read in one record, write one record and iterate. Such approaches have to be captured in the PSD.|$|E
50|$|In the {{modeling}} stage the designer creates {{a collection of}} entity <b>structure</b> <b>diagrams</b> and identifies the entities in the system, the actions they perform, the time-ordering of the actions {{in the life of}} the entities, and the attributes of the actions and entities. Entity <b>structure</b> <b>diagrams</b> use the diagramming notation of Jackson <b>Structured</b> <b>Programming</b> <b>structure</b> <b>diagrams.</b> Purpose of these diagrams is to create a full description of the aspects of the system and the organisation. Developers have to decide which things are important and which are not. Good communication between developers and users of the new system is very important.|$|R
40|$|Recently, the {{automated}} design of programs has been actively developed basaed {{on the concept}} of program reuse for improving software productivity. This paper presents a promising method of automated program design and a <b>structured</b> <b>program</b> <b>diagram</b> drawing which has been fabricated in our experimental system. MAPP(now under construction,. Users retrieve call sentences for statements or program modules written with readable expressions(as in their native languages), then edit and customize them to meet specifications. A method for the automatic drawing of a <b>structured</b> <b>program</b> <b>diagram</b> for inspecting the program under construction is also presented...|$|R
30|$|Think 3 d! ([URL] is {{designed}} to develop and strengthen visuospatial thinking through origami and pop-up paper engineering activities (Taylor & Hutton, 2013). Physically folding/unfolding and cutting paper and interpreting and constructing diagrams provide embodied approaches to spatial thinking (Taylor & Tenbrink, 2013, Tenbrink & Taylor, 2015). Such physical actions {{have been shown to}} improve children’s spatial thinking (Chu & Kita, 2011; Ping, Ratliff, Hickey, & Levine, 2011). The <b>program’s</b> <b>structure</b> involves <b>diagram</b> interpretation, 2 D to 3 D comparisons, and problem-solving, all embedded within the task of constructing paper objects. This allows for transition from physically supported to internalized spatial thinking (Novack, Congdon, Hemani-Lopez, & Goldin-Meadow, 2014).|$|R
40|$|Abstract We {{deal with}} {{syntactic}} definitions and processing of program diagrams based on graph grammars {{with respect to}} the mechanical drawing. We propose an attribute NCE graph grammar of hierarchical <b>diagrams</b> such as <b>structured</b> <b>program</b> <b>diagrams.</b> We also propose attribute context-free and context-sensitive NCE graph grammars for nested and tessellation diagrams, respectively. Attribute rules are used for the mechanical drawing. Furthermore, we introduce an integrated diagram processing method based on NCE graph grammars. The results could be applied to general diagram processing...|$|R
40|$|This diploma thesis {{outlines}} {{a control}} and drive concept for an automatic machining unit to manufacture textile spindles. It includes all <b>program</b> <b>structures</b> and logic <b>diagrams</b> {{to run the}} milling and boring units {{as well as the}} handling and testing equipment. For an easy commissioning of the computerised numerical control, all needful configurations and parameterizations are documented. For the enhancement of safety at work, specified safety functions with failure safe hardware and failure safe software "Safety Integrated" were realized. The effect of damaged parts inside a general system was analysed by a failure mode and effects analysis...|$|R
5000|$|In the Unified Modeling Language (UML) all <b>structure</b> <b>diagrams</b> can be {{considered}} cluster <b>diagrams.</b> These <b>structure</b> <b>diagrams</b> emphasize what things {{must be in the}} system being modeled. UML encounters here the Class diagram, Component <b>diagram,</b> Composite <b>structure</b> <b>diagram,</b> Deployment diagram, Object diagram, and the Package diagram.|$|R
40|$|In {{the recent}} quest to improve {{software}} productivity and maintenance, effective methods of automatic program generation {{or some such}} system has become necessary. We have currently been studying one of these methods. It is an experimental system of automatic program generation called MAPP (Module Aided Programming system by Prolog). This paper outlines a method of automatic generation of C source codes by program design documents made by an automated drawing fro : a a <b>structured</b> <b>program</b> <b>diagram.</b> Users of MAPP may fabricate program design documents by us ing the module dictionary. MAPP customizes parameters and picks up insufficient statements, during the construction of C source codes. Users may also use their native language in program design documents. C program modules have an indefinite number of structure nesting levels (like switch case or if else if function) and customizing parameters. These are supported by recursive call of conversion rules on MAPP. This makes the automatic generating of C source codes more effective...|$|R
5000|$|<b>Structure</b> <b>Diagrams</b> can be {{a simple}} stratigraphic matrix {{diagrams}} showing stratigraphic units (Contexts, Sets, etc.) and the relationships between them, or other database resources (images, plans, documents, other <b>Structure</b> <b>Diagrams,</b> etc.) {{can be a}}dded to create more general purpose visualisations. A <b>Structure</b> <b>Diagram</b> {{can be thought of as}} a visual representation of, and an index into, a particularly aspect of the project database.|$|R
50|$|Composite <b>structure</b> <b>diagram</b> in the Unified Modeling Language (UML) {{is a type}} {{of static}} <b>structure</b> <b>diagram,</b> that shows the {{internal}} structure of a class and the collaborations that this structure makes possible.|$|R
50|$|The {{placeholder}} R {{is often}} used as a generic placeholder for alkyl (saturated hydrocarbon) group side chains in chemical <b>structure</b> <b>diagrams.</b> To indicate other non-carbon groups in <b>structure</b> <b>diagrams,</b> X, Y, or Z are often used.|$|R
50|$|Data <b>Structure</b> <b>Diagram</b> is {{a diagram}} type {{that is used}} to depict the {{structure}} of data elements in the data dictionary. The data <b>structure</b> <b>diagram</b> is a graphical alternative to the composition specifications within such data dictionary entries.|$|R
40|$|The task <b>structure</b> <b>diagramming</b> {{technique}} {{can be used}} to graphically denote process specifications. In task <b>structure</b> <b>diagrams,</b> sequential execution, iteration, {{choice and}} parallelism can be expressed. In this paper task <b>structure</b> <b>diagrams</b> are extended with a synchronisation mechanism and a formal semantics is given by means of a translation to Process Algebra. By using known techniques for proving equivalence of process specifications in Process Algebra, the translation provides a basis for proving equivalence of task structures. 1 Introduction In information system development methods a distinction can be made between (1) a way of modelling, describing the possible models and their components and (2) a way of working, describing how the modelling process is structured and carried out (see [1]). In [2] task <b>structure</b> <b>diagrams</b> were introduced as a technique to describe the way of working of a development method. Task <b>structure</b> <b>diagrams</b> consist of tasks and decisions, where decisions r [...] ...|$|R
40|$|In {{chemical}}/biological research, {{the chemical}} structure database {{is widely used}} to find the detailed information of molecules of interest. However, current chemical structure database does not provide link to the relevant literature which may contain more up-to-date information. Hence, by annotating each molecule in the database {{with one or more}} relevant links to the scientific literature, the database would be a more useful resource to bio/chemical research scientists [1]. In general, the chemical <b>structure</b> <b>diagram</b> in a scientific article can be considered as keywords representing the main content of the article. Therefore, it is necessary to develop an automated system for extracting and recognizing chemical <b>structure</b> <b>diagrams.</b> In this project, we plan to develop an efficient method to extract chemical <b>structure</b> <b>diagrams</b> using Support Vector Machine (SVM) as a first step towards constructing such system. 2. Problem Statement In this project, the main objective is to devise a classification algorithm which accurately identifies chemical <b>structure</b> <b>diagrams.</b> Chemical <b>structure</b> <b>diagrams</b> have some unique topological characteristics such as lines, hexagons, and pentagons while other images do not share those characteristics as shown in Fig. 1. Based on this observation, we define a feature vector where each element represents the unique characteristics of chemical <b>structure</b> <b>diagrams.</b> Then, thus defined feature vector may include following feature information. • Color histogra...|$|R
50|$|<b>Structure</b> <b>diagrams</b> {{emphasize}} {{the things that}} must {{be present in the}} system being modeled. Since <b>structure</b> <b>diagrams</b> represent the <b>structure,</b> they are used extensively in documenting the software architecture of software systems. For example, the component diagram describes how a software system is split up into components and shows the dependencies among these components.|$|R
50|$|A data <b>structure</b> <b>diagram</b> (DSD) is {{a diagram}} and data model used to {{describe}} conceptual data models by providing graphical notations which document entities and their relationships, and the constraints that bind them. The basic graphic elements of DSDs are boxes, representing entities, and arrows, representing relationships. Data <b>structure</b> <b>diagrams</b> are most useful for documenting complex data entities.|$|R
5000|$|Diagram {{extraction}} (this {{function is}} available only for the activity and composite <b>structure</b> <b>diagrams)</b> ...|$|R
5000|$|... #Caption: Detailed Secondary <b>Structure</b> <b>Diagram</b> of RNase MRP RNA {{labeling}} various P helical regions ...|$|R
5000|$|System <b>{{structure}}</b> <b>diagrams</b> - {{another way}} to express {{the structure of a}} qualitative dynamic system ...|$|R
5000|$|The diagram {{shows how}} the action {{entities}} cooperate with the system. Entity <b>structure</b> <b>diagram</b> (ESD) notations: ...|$|R
5000|$|Image:ClassAdapter.png|UML Class diagram Image:Component-4.png|UML Component diagramImage:UML esempio compostruct 3.gif|UML Composite <b>structure</b> <b>diagram</b> Image:UML Diagramme Deploiement.gif|UML Deployment diagram ...|$|R
50|$|Value range <b>structure</b> <b>diagrams</b> (also {{known as}} FMC Entity Relationship Diagrams) can be {{compared}} with the Entity-relationship model.|$|R
40|$|A unified {{approach}} is proposed {{to support the}} rapid development of editors such as pen-based <b>structured</b> <b>diagrams.</b> This approach uses Constraint Multiset Grammars to describe the context or positional relationships among handwritten strokes and other objects. The resulting description can then be used to interpret ambiguous results of pattern matching techniques. We have implemented this approach based on Eviss, a visual system that supports the rapid prototyping of <b>structured</b> <b>diagram</b> editors...|$|R
40|$|We {{have created}} a {{database}} of comparatively derived group I intron secondary <b>structure</b> <b>diagrams.</b> This collection currently contains a broad sampling of phylogenetically and structurally similar and diverse structures from over 200 publicly available intron sequences. As more group I introns are sequenced and added to the database, we anticipate minor refinements in these secondary <b>structure</b> <b>diagrams.</b> These diagrams are directly accessible by computer {{as well as from}} the authors...|$|R
40|$|Cruentaren A, {{a highly}} {{cytotoxic}} metabolite, which also inhibits F-ATPase, was synthesized using our recently developed methodology on resorcylic acid lactones natural products. [Molecular <b>structure</b> <b>diagrams</b> appear here. To view, please open pdf attachment] Alcohol A was prepared on a multigram scale in 13 steps starting from (S) -Roche ester and using highly stereoselective reactions such as Evans aldol reaction and asymmetric propargylation. [Molecular <b>structure</b> <b>diagrams</b> appear here. To view, please open pdf attachment] Key fragment B was synthesized in 11 steps from 1, 3 -propanediol. The 1, 2 -anti-configuration was installed with a Brown crotylation. Diketo-dioxinone D was generated from C-acylation between Weinreb amide B and keto-dioxinone C. Ketene generation by thermolysis followed by trapping with alcohol A and aromatization afforded resorcylate derivative E. [Molecular <b>structure</b> <b>diagrams</b> appear here. To view, please open pdf attachment] Finally after a sequence {{consisting of the}} following key steps: ring closing alkyne metathesis, coupling between amine G and acid H and Lindlar hydrogenation, cruentaren A was obtained. [Molecular <b>structure</b> <b>diagrams</b> appear here. To view, please open pdf attachment]Imperial Users onl...|$|R
5000|$|Compositional <b>Structure</b> <b>Diagram</b> {{depicts the}} static {{structure}} of a system. This diagram type {{is also known as}} FMC Block Diagram ...|$|R
5000|$|Dynamic <b>Structure</b> <b>Diagram</b> depicts {{processes}} {{that can be}} observed in a system. This diagram type is also known as FMC Petri-net ...|$|R
40|$|Abstract. UML-RT is an {{extension}} of UML for modelling embedded re-active and real-time software systems. Its particular focus lies on system descriptions on the architectural level, dening the overall system structure. In this paper we propose to use UML-RT <b>structure</b> <b>diagrams</b> together with the formal method CSP-OZ combining CSP and Object-Z. While CSP-OZ is used for specifying the system components themselves (by CSP-OZ classes), UML-RT diagrams provide the architecture description. Thus the usual ar-chitecture specication in terms of the CSP operators parallel composition, renaming and hiding is replaced by a graphical description. To preserve the formal semantics of CSP-OZ specications, we develop a translation from UML-RT <b>structure</b> <b>diagrams</b> to CSP. Besides achieving a more easily ac-cessible, graphical architecture modelling for CSP-OZ, we thus also give a semantics to UML-RT <b>structure</b> <b>diagrams.</b> ...|$|R
40|$|Abstract. An {{overall goal}} of the INCOSE MBSE {{initiative}} is to provide SysML with a formal semantics and to integrate reasoning services as part of system engineering. UML class diagrams have been encoded as Knowledge Bases (KB) within the Description Logic (DL), ALCQI. The encoding provides a formal semantics for class diagrams which accords with the informal semantics. The encoding applies to SysML which is a profile of UML. The SysML block definition and internal block diagrams {{are not covered by}} the class diagram encoding. These diagrams are essential for representing composite structure such as manufactured products and molecular <b>structures.</b> The class <b>diagram</b> encoding is extended to composite <b>structure</b> <b>diagrams</b> in the DL ALCQIbid. A composite <b>structure</b> <b>diagram</b> describes <b>structures</b> in terms of part decompositions and connections between objects. A SysML composite <b>structure</b> <b>diagram</b> can be encoded in the language of OWL 2, but is not an OWL 2 axiom set, as the diagrams contain property equations which violate the regularity ordering constraints for complex property inclusions. Conditions are given for an ALCQIbid KB which are sufficient to encode a SysML composite <b>structure</b> <b>diagram.</b> Further conditions are given for a KB, called a template, which ensure that within an interpretation all realizations of the composite structure have the same graph structure...|$|R
5000|$|... "The data <b>structure</b> <b>diagram</b> is a {{representation}} of the organization of records and is not an exact representation of entities and relationships." ...|$|R
5000|$|<b>Structuring</b> <b>diagrams</b> show {{a view of}} {{a system}} that shows the {{structure}} of the objects, including their classifiers, relationships, attributes and operations: ...|$|R
5000|$|Value Range <b>Structure</b> <b>Diagram</b> depicts <b>structures</b> {{of values}} {{found in the}} system. This diagram type {{is also known as}} FMC E/R Diagram ...|$|R
40|$|Abstract. To {{support the}} rapid {{development}} of pen-based <b>structured</b> <b>diagram</b> editors, we propose {{a framework for}} describing such editors. The framework uses grammar to describe the context, i. e., the positional relationship between handwritten strokes and other objects, {{which can be used}} to interpret ambiguous results of pattern matching, and to describe the syntax of the target diagrams. We implemented the framework by extending our visual system, which supports the rapid prototyping of <b>structured</b> <b>diagram</b> editors. ...|$|R
50|$|The method {{begins by}} {{describing}} a program's inputs {{in terms of}} the four fundamental component types. It then goes on to describe the program's outputs in the same way. Each input and output is modelled as a separate Data <b>Structure</b> <b>Diagram</b> (DSD). To make JSP work for compute-intensive applications, such as digital signal processing (DSP) it is also necessary to draw algorithm <b>structure</b> <b>diagrams,</b> which focus on internal data structures rather than input and output ones.|$|R
50|$|ChemExper is a {{commercial}} data base for molecular data. The search results include a two-dimensional <b>structure</b> <b>diagram</b> and a mole file for many compounds.|$|R
50|$|A 17-ketosteroid is a ketosteroid {{in which}} the ketone is located {{specifically}} at the C17 position (in the upper right corner of most <b>structure</b> <b>diagrams).</b>|$|R
