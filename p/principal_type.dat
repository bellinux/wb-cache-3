246|977|Public
5|$|One {{possibility}} is that the Dressel 20 amphora, the <b>principal</b> <b>type</b> found at Monte Testaccio, may have been unusually difficult to recycle. Many types of amphora could be re-used to carry {{the same type of}} product or modified to serve a different purpose—for instance, as drain pipes or flower pots. Fragmentary amphorae could be pounded into chips to use in opus signinum, a type of concrete widely used as a building material, or could simply be used as landfill. The Dressel 20 amphora, however, broke into large curved fragments that could not readily be reduced to small shards. It is likely that the difficulty of reusing or repurposing the Dressel 20s meant that it was more economical to discard them.|$|E
25|$|Laminar-flow {{control is}} a {{technology}} that offers the potential for significant improvement in drag coefficient which would provide improvements in aircraft fuel usage, range or endurance that far exceed any known single aeronautical technology. In principle, if 80 percent of wing is laminar, then overall drag could be reduced by 25 percent. The frictional force between {{the air and the}} aircraft surface, known as viscous drag, is much larger in a turbulent boundary layer than in a laminar one. The <b>principal</b> <b>type</b> of active laminar-flow control is removal of a small amount of the boundary-layer air by suction through porous materials, multiple narrow surface slots, or small perforations (boundary layer suction).|$|E
25|$|As {{mentioned}} in the introduction, the rules allow one to deduce different types for {{one and the same}} expression. See for instance, Example 2, steps 1,2 and Example 3, steps 2,3 for three different typings of the same expression. Clearly, the different results are not fully unrelated, but connected by the type order. It is an important property of the rule system and this order that whenever more than one type can be deduced for an expression, among them is (modulo alpha-renaming of the type variables) a unique most general type in the sense, that all others are specialization of it. Though the rule system must allow to derive specialized types, a type inference algorithm should deliver this most general or <b>principal</b> <b>type</b> as its result.|$|E
40|$|This paper extends Levin's (2003) {{relational}} contract {{model by}} having {{not only the}} agent's cost of effort (agent's type), but also the value of that effort to the <b>principal</b> (<b>principal's</b> <b>type)</b> subject to i. i. d. shocks. When optimal effort is fully pooled across agent <b>types</b> for multiple <b>principal</b> <b>types,</b> it is also pooled across those <b>principal</b> <b>types.</b> When optimal effort separates some agent <b>types</b> for multiple <b>principal</b> <b>types,</b> efforts of those agent types may be separated across <b>principal</b> <b>types.</b> But then, somewhat perversely, some agent type's effort is decreasing in the principal's value of effort. When agent type is uniformly distributed, that applies to agent types with lower effort cost, so reducing the difference in effort between low and high effort cost types. This result extends to the <b>principal's</b> <b>type</b> being observed only by the principal if the marginal cost of effort to the agent is sufficiently convex...|$|R
50|$|There {{are four}} <b>principal</b> <b>types</b> of fish scales.|$|R
50|$|There are two <b>principal</b> <b>types</b> of Balance Spring Regulator.|$|R
500|$|Format: <b>principal</b> <b>type,</b> {{technique}} and dimensions; The column entries sort {{by the main}} type: scroll (includes handscrolls and letters), book (includes albums, ordinary bound books and books bound by fukuro-toji) and other (includes hanging scrolls) ...|$|E
500|$|Format: <b>principal</b> <b>type,</b> {{technique}} and dimensions; The column entries sort {{by the main}} type: scroll (includes handscrolls and letters), collection (sets of items) and other (includes textiles, hanging scrolls, stone inscriptions and folding books 帖) ...|$|E
500|$|Format: <b>principal</b> <b>type,</b> {{technique}} and dimensions; the column entries sort {{by the main}} type: scroll (includes handscrolls and letters), books (includes albums, ordinary bound books and books bound by fukuro-toji) and other (includes hanging scrolls) ...|$|E
50|$|There are two <b>principal</b> <b>types</b> of basis {{construction}} methods.|$|R
500|$|There are two <b>principal</b> <b>types</b> of {{brackets}} {{used to set}} off IPA transcriptions: ...|$|R
50|$|The milecastles of Hadrian's Wall are {{recognised}} {{as having}} three <b>principal</b> <b>types</b> of gateway.|$|R
2500|$|... implying, one can derive the <b>principal</b> <b>type</b> for an {{expression}} in [...] allowing to generalize the proof in the end.|$|E
2500|$|Ethanol, {{also called}} alcohol, ethyl alcohol, and {{drinking}} alcohol, is a compound and simple alcohol with the chemical formula [...] Its formula {{can be written}} also as −− or − (an ethyl group linked to a hydroxyl group), and is often abbreviated as EtOH. Ethanol is a volatile, flammable, colorless liquid with a slight characteristic odor. It {{is used as a}} drug and is the <b>principal</b> <b>type</b> of alcohol found in alcoholic drinks.|$|E
2500|$|The {{earliest}} stirrups in the Baltic {{region are}} replicas {{of those in}} existence in Germany during the 7th century. [...] In northern Europe and Britain the metamorphosis of earlier wood, rope and leather forms of stirrups to metal forms {{can be seen in}} the archeological record, “suggesting that one or more of the early forms have parallel development with those in Hungary, rather than being derived solely from the latter region.” [...] "In Scandinavia two major types of stirrups are discerned, and from these, by the development and fusion of different elements, some almost certainly of central European origin, most other types were evolved." [...] The first main type, Scandinavian type I, appears to owe little to Hungarian forms. The earliest variety of this type can be dated to the 8th century in Vendel grave III in Sweden. [...] The second <b>principal</b> <b>type</b> in North Europe has, as its most characteristic feature, a pronounced rectangular suspension loop set in the same plane as the bow, as found amongst the Hungarian examples, and is predominantly centered in Denmark and England during the later 10th and 11th centuries. A variant of this type, called the North European stirrup, has been dated to the second half of the 10th century in Sweden, found at the boat-burial cemetery at Valsgärde.|$|E
5000|$|There {{are three}} <b>principal</b> <b>types</b> of granulocytes, {{distinguished}} by their appearance under Wright's stain: ...|$|R
2500|$|The <b>principal</b> <b>types</b> {{of natural}} graphite, each {{occurring}} {{in different types}} of ore deposits are: ...|$|R
50|$|Colour in transition-series metal {{compounds}} {{is generally}} due to electronic transitions of two <b>principal</b> <b>types.</b>|$|R
6000|$|... § II. This palace is the <b>principal</b> <b>type</b> at Venice, {{and one of}} {{the best}} in Europe, of the central {{architecture}} of the Renaissance schools; that carefully studied and perfectly executed architecture to which those schools owe their principal claims to our respect, and which became the model of most of the important works subsequently produced by civilized nations. I have called it the Roman Renaissance, because it is founded, both in its principles of superimposition, and in the style of its ornament, upon the architecture of classic Rome at its best period. The revival of Latin literature both led to its adoption, and directed its form; and the most important example of it which exists is the modern Roman basilica of St. Peter's. It had, at its Renaissance or new birth, no resemblance either to Greek, Gothic, or Byzantine forms, except in retaining the use of the round arch, vault, and dome; in the treatment of all details, it was exclusively Latin; the last links of connexion with mediæval tradition having been broken by its builders in their enthusiasm for classical art, and the forms of true Greek or Athenian architecture being still unknown to them. The study of these noble Greek forms has induced various modifications of the Renaissance in our own times; but the conditions which are found most applicable to the uses of modern life are still Roman, and the entire style may most fitly be expressed by the term [...] "Roman Renaissance." ...|$|E
60|$|You {{know we are}} {{speaking}} always of the real, active, continual, national worship; that by which men act while they live; not that which they talk of when they die. Now, we have, indeed, a nominal religion, to which we pay tithes of property, and sevenths of time; but we have also a practical and earnest religion, to which we devote nine-tenths of our property and six-sevenths of our time. And we dispute {{a great deal about}} the nominal religion; but we are all unanimous about this practical one, of which I think you will admit that the ruling goddess may be best generally described as the 'Goddess of Getting-on,' or 'Britannia of the Market.' The Athenians had an 'Athena Agoraia,' or Minerva of the Market: but she was a subordinate type of their goddess, while our Britannia Agoraia is the <b>principal</b> <b>type</b> of ours. And all your great architectural works, are, of course, built to her. It is long since you built a great cathedral; and how you would laugh at me, if I proposed building a cathedral on the top of one of these hills of yours, taking it for an Acropolis! But your railroad mounds, prolonged masses of Acropolis; your railroad stations, vaster than the Parthenon, and innumerable; your chimneys, how much more mighty and costly than cathedral spires! your harbour-piers; your warehouses; your exchanges!--all these are built to your great Goddess of 'Getting-on;' and she has formed, and will continue to form, your architecture, as long as you worship her; and it is quite vain to ask me to tell you how to build to her; you know far better than I.|$|E
6000|$|You {{know we are}} {{speaking}} always of the real, active, continual, national worship; that by which men act, while they live; not that which they talk of, when they die. Now, we have, indeed, a nominal religion, to which we pay tithes of property and sevenths of time; but we have also a practical and earnest religion, to which we devote nine-tenths of our property and sixth-sevenths of our time. And we dispute {{a great deal about}} the nominal religion: but we are all unanimous about this practical one; of which I think you will admit that the ruling goddess may be best generally described as the [...] "Goddess of Getting-on," [...] or [...] "Britannia of the Market." [...] The Athenians had an [...] "Athena Agoraia," [...] or Athena of the Market; but she was a subordinate type of their goddess, while our Britannia Agoraia is the <b>principal</b> <b>type</b> of ours. And all your great architectural works are, of course, built to her. It is long since you built a great cathedral; and how you would laugh at me if I proposed building a cathedral on the top of one of these hills of yours, taking it for an Acropolis! But your railroad mounds, vaster than the walls of Babylon; your railroad stations, vaster than the temple of Ephesus, and innumerable; your chimneys, how much more mighty and costly than cathedral spires! your harbour-piers; your warehouses; your exchanges!--all these are built to your great Goddess of [...] "Getting-on"; and she has formed, and will continue to form your architecture, as long as you worship her; and it is quite vain to ask me to tell you how to build to her; you know far better than I.|$|E
5000|$|In {{the case}} of a scalar parameter, there are four <b>principal</b> <b>types</b> of {{alternative}} hypothesis: ...|$|R
5000|$|The <b>principal</b> <b>types</b> {{of natural}} graphite, each {{occurring}} {{in different types}} of ore deposits are: ...|$|R
5000|$|The siddur and maḥzor {{are the two}} <b>principal</b> <b>types</b> of Jewish prayer books. In particular: ...|$|R
50|$|In type theory, a type {{system is}} said to have the <b>principal</b> <b>type</b> {{property}} if, given a term and an environment, there exists a <b>principal</b> <b>type</b> for this term in this environment, i.e. a type such that all other types for this term in this environment are an instance of the <b>principal</b> <b>type.</b>|$|E
50|$|The <b>principal</b> <b>type</b> {{property}} is a desirable {{one for a}} type system, as it provides a way to type expressions in a given environment with a type which encompasses all of the expressions' possible types, instead of having several incomparable possible types. Type inference for systems with the <b>principal</b> <b>type</b> property will usually attempt to infer the <b>principal</b> <b>type.</b>|$|E
5000|$|For instance, the ML {{system has}} the <b>principal</b> <b>type</b> {{property}} and principal types for an expression can be computed by Robinson's unification algorithm, {{which is used}} by the Hindley - Milner type inference algorithm. However, many extensions to the type system of ML, such as polymorphic recursion, can make the inference of the <b>principal</b> <b>type</b> undecidable. Other extensions, such as Haskell's generalized algebraic data types, destroy the <b>principal</b> <b>type</b> property of the language, requiring the use of type annotations or the compiler to [...] "guess" [...] the intended type from among several options.|$|E
5000|$|Street Marketing™ {{can be used}} as {{a general}} term {{encompassing}} six <b>principal</b> <b>types</b> of activities: ...|$|R
40|$|In {{this note}} we {{consider}} a restricted {{version of the}} intersection types for a #-calculus with records as presented in [5, 6] w. r. t. <b>principal</b> <b>typing</b> property and expressivity. We sketch how the classical approach to <b>principal</b> <b>typing</b> for intersection type assignment system {{can be adapted to}} cope with record types. We then exemplify typings in our system of self-application and recursive record interpretations of objects. ...|$|R
5000|$|Three <b>principal</b> <b>types</b> of flavorings {{are used}} in foods, under {{definitions}} agreed in the EU and Australia: ...|$|R
5000|$|... {{which is}} the <b>principal</b> <b>type</b> of X, is an {{adequate}} replacement to {{the combination of the}} axiom schemes ...|$|E
5000|$|... implying, one can derive the <b>principal</b> <b>type</b> for an {{expression}} in [...] allowing to generalize the proof in the end.|$|E
5000|$|The {{presentation}} given {{above is}} not the only way of defining the syntax of the simply typed lambda calculus. One alternative is to remove type annotations entirely (so that the syntax is identical to the untyped lambda calculus), while ensuring that terms are well-typed via Hindley-Milner type inference. The inference algorithm is terminating, sound, and complete: whenever a term is typable, the algorithm computes its type. More precisely, it computes the term's <b>principal</b> <b>type,</b> since often an unannotated term (such as [...] ) may have more than one type ( [...] , , etc., which are all instances of the <b>principal</b> <b>type</b> [...] ).|$|E
40|$|We give {{an example}} of a {{countable}} theory T such that for every cardinal lambda >= aleph_ 2 there is a fully indiscernible set A of power lambda such that the <b>principal</b> <b>types</b> are dense over A, yet there is no atomic model of T over A. In particular, T(A) is a theory of size lambda where the <b>principal</b> <b>types</b> are dense, yet T(A) has no atomic model...|$|R
25|$|This article {{describes}} the <b>principal</b> <b>types</b> of religious Jewish music {{from the days of}} the Temple to modern times.|$|R
40|$|Abstract. In {{the past}} we {{analyzed}} typeless Java programs. One of our results was, {{that there may}} be different correct typings for one method. This means that the <b>principal</b> <b>types</b> of such methods are intersection types. We presented a type-inference algorithm. For typeless Java methods the algorithm infers its <b>principal</b> intersection <b>type.</b> Unfortunately, like Java byte-code, Java does not allow intersection types. In this paper we present an algorithm, which resolves intersection types of Java methods, such that Java programs with standard typings are generated. Additionally, we will refine the definition of Java method <b>principal</b> <b>types.</b> ...|$|R
