868|1012|Public
5|$|When {{the game}} was renamed and changed platforms, the team chose Luminous Studio as the main game engine. The game's {{real-time}} graphics used 5,000 polygons per-frame, bringing its visual quality close to modern CGI cutscenes and to a level {{that would have been}} impossible for the previous generation's hardware. The game's native resolution was 1920 × 1080 pixels (1080p), with a frame rate of 30 frames per second: this was defined as being native to the game as opposed to upscaled games from the previous generation. For polygon models, the combined number of visible and occluded polygons was estimated as being 5,000,000. This number was approximately five times the amount of equivalent detail from last-generation games. Models used over 600 character bones: 150 bones were created for the face, 300 for the hair, and 150 for the body. A bone-based <b>physical</b> <b>simulation</b> technology was applied so that clothing would react to the body's movements. The polygon count for character hair was estimated as 20,000, the same number used in an entire character in last-generation games. All of these were achievable {{due to the fact that}} the eighth-generation console hardware had approximately sixteen times the amount of storage available in the previous generation.|$|E
25|$|Interactive {{simulation}} is {{a special}} kind of <b>physical</b> <b>simulation,</b> often referred to as a human in the loop simulation, in which physical simulations include human operators, such as in a flight simulator or a driving simulator.|$|E
25|$|<b>Physical</b> <b>{{simulation}}</b> {{refers to}} simulation in which physical objects are substituted {{for the real}} thing (some circles use the term for computer simulations modelling selected laws of physics, but this article does not). These physical objects are often chosen because they are smaller or cheaper than the actual object or system.|$|E
40|$|This paper {{surveys the}} basis of the {{stereoscopic}} chromatic systems which can be used to provide advanced three-dimensional <b>physical</b> <b>simulations.</b> Special attention is paid to the easy way for replacing unapproachable or high-priced methods like optical holography and high-tech stereoscopic lens systems. A computer program shows applications ofstereoscopic procedures. Key words: stereo vision, chromatic systems, three-dimensional <b>physical</b> <b>simulations...</b>|$|R
50|$|There {{are several}} fields {{researched}} by CSAR. <b>Physical</b> <b>simulations</b> are implemented in CSAR's Rocstar software suite.|$|R
5000|$|CFP2006 ("SPECfp"), testing {{floating}} point performance, with <b>physical</b> <b>simulations,</b> 3D graphics, image processing, computational chemistry etc.|$|R
25|$|Video {{games have}} similar requirements, with some crucial differences. While <b>physical</b> <b>simulation</b> needs to {{simulate}} real-world physics as precisely as possible, video games need to simulate real-world physics in an acceptable way, {{in real time}} and robustly. Compromises are allowed, {{so long as the}} resulting simulation is satisfying to the game players.|$|E
25|$|In other simulations, visual {{components}} of the procedure are reproduced by computer graphics techniques, while touch-based components are reproduced by haptic feedback devices combined with <b>physical</b> <b>simulation</b> routines computed {{in response to the}} user's actions. Medical simulations of this sort will often use 3D CT or MRI scans of patient data to enhance realism. Some medical simulations are developed to be widely distributed (such as web-enabled simulations and procedural simulations that can be viewed via standard web browsers) and can be interacted with using standard computer interfaces, such as the keyboard and mouse.|$|E
25|$|The Cell Broadband Engine, or Cell {{as it is}} more {{commonly}} known, is a microprocessor intended as a hybrid of conventional desktop processors (such as the Athlon 64, and Core 2 families) and more specialized high-performance processors, such as the NVIDIA and ATI graphics-processors (GPUs). The longer name indicates its intended use, namely as a component in current and future online distribution systems; as such it may be utilized in high-definition displays and recording equipment, as well as HDTV systems. Additionally the processor may be suited to digital imaging systems (medical, scientific, etc.) and <b>physical</b> <b>simulation</b> (e.g., scientific and structural engineering modeling).|$|E
50|$|Gray Elegy, Work In Progress as of 2013. An {{abstraction}} {{of motion}} and sound derived from motion capture and <b>physical</b> <b>simulations.</b>|$|R
50|$|While graph drawing {{can be a}} {{difficult}} problem, force-directed algorithms, being <b>physical</b> <b>simulations,</b> usually require no special knowledge about graph theory such as planarity.|$|R
25|$|Matrix {{inversion}} plays {{a significant}} role in computer graphics, particularly in 3D graphics rendering and 3D simulations. Examples include screen-to-world ray casting, world-to-subspace-to-world object transformations, and <b>physical</b> <b>simulations.</b>|$|R
25|$|During {{his time}} at Microsoft and Definition Six, Hecker wrote an {{influential}} programming column for Game Developer Magazine. Two series of articles from this column still serve today as standard references on their respective subjects. The first series was the first complete synthesis of perspectively-correct texture mapping and formed the mathematical basis for many important game rasterizers, including Michael Abrash's rasterizer for the 3D title Quake. The second was a series on rigid body dynamics simulation for games, complete with an extensive bibliography of rigid body dynamics resources. The articles {{were part of a}} general push by Hecker to incorporate more interactive physics into games, which at the time in 1996 rarely featured any <b>physical</b> <b>simulation.</b> In the summer of 1997, Hecker stepped down as author of the regular column to focus on game development full-time.|$|E
25|$|In <b>physical</b> <b>simulation,</b> we wish {{to conduct}} experiments, such as playing billiards. The physics of {{bouncing}} billiard balls are well understood, {{under the umbrella of}} rigid body motion and elastic collisions. An initial description of the situation would be given, with a very precise physical description of the billiard table and balls, as well as initial positions of all the balls. Given a force applied to the cue ball (probably resulting from a player hitting the ball with his or her cue stick), we want to calculate the trajectories, precise motion, and eventual resting places of all the balls with a computer program. A program to simulate this game would consist of several portions, one of which would be responsible for calculating the precise impacts between the billiard balls. This particular example also turns out to be ill conditioned: a small error in any calculation will cause drastic changes in the final position of the billiard balls.|$|E
2500|$|The {{benefits}} of the a priori algorithms are increased fidelity and stability. [...] It is difficult (but not completely impossible) to separate the <b>physical</b> <b>simulation</b> from the collision detection algorithm. However, {{in all but the}} simplest cases, the problem of determining ahead of time when two bodies will collide (given some initial data) has no closed form solution—a numerical root finder is usually involved.|$|E
40|$|In this work, current {{collapse}} {{effects in}} AlGaN/GaN HEMTs are investigated {{by means of}} measurements and two-dimensional <b>physical</b> <b>simulations.</b> According to pulsed measurements, the used devices exhibit a significant gate-lag and a less pronounced drain-lag ascribed {{to the presence of}} surface/barrier and buffer traps, respectively. As a matter of fact, two trap levels (0. 45 eV and 0. 78 eV) were extracted by trapping analysis based on isothermal current transient. On the other hand, 2 D <b>physical</b> <b>simulations</b> suggest that the kink effect can be explained by electron trapping into barrier traps and a consequent electron emission after a certain electric-field is reached...|$|R
50|$|SimSpark is {{a generic}} {{simulation}} system for various multiagent simulations. It supports developing <b>physical</b> <b>simulations</b> for AI and robotics research with an open-source application framework. It {{is commonly used}} in academic research and education.|$|R
40|$|International audienceIn this work, current {{collapse}} {{effects in}} AlGaN/GaN HEMTs are investigated {{by means of}} measurements and two-dimensional <b>physical</b> <b>simulations.</b> According to pulsed measurements, the used devices exhibit a significant gate-lag and a less pronounced drain-lag ascribed {{to the presence of}} surface/barrier and buffer traps, respectively. As a matter of fact, two trap levels (0. 45 eV and 0. 78 eV) were extracted by trapping analysis based on isothermal current transient. On the other hand, 2 D <b>physical</b> <b>simulations</b> suggest that the kink effect can be explained by electron trapping into barrier traps and a consequent electron emission after a certain electric-field is reached...|$|R
2500|$|In the a posteriori case, we {{advance the}} <b>physical</b> <b>{{simulation}}</b> {{by a small}} time step, then check if any objects are intersecting, or are somehow so {{close to each other}} that we deem them to be intersecting. At each simulation step, a list of all intersecting bodies is created, and the positions and trajectories of these objects are somehow [...] "fixed" [...] to account for the collision. We say that this method is a posteriori because we typically miss the actual instant of collision, and only catch the collision after it has actually happened.|$|E
2500|$|Physical {{modelling}} synthesis is {{the synthesis}} of sound by using a set of equations and algorithms to simulate each sonic characteristic of [...] an instrument, starting with the harmonics {{that make up the}} tone itself, then adding the sound of the resonator, the instrument body, etc., until the sound realistically approximates the desired instrument. When an initial set of parameters is run through the <b>physical</b> <b>simulation,</b> the simulated sound is generated. Although physical modeling was not a new concept in acoustics and synthesis, {{it was not until the}} development of the Karplus-Strong algorithm and the increase in DSP power in the late 1980s that commercial implementations became feasible. The quality and speed of physical modeling on computers improves with higher processing power.|$|E
2500|$|A robust {{simulator}} is {{one that}} will react to any input in a reasonable way. For instance, if we imagine a high speed racecar video game, from one simulation step to the next, {{it is conceivable that}} the cars would advance a substantial distance along the race track. If there is a shallow obstacle on the track (such as a brick wall), it is not entirely unlikely that the car will completely leap over it, and this is very undesirable. In other instances, the [...] "fixing" [...] that posteriori algorithms require isn't implemented correctly, and characters find themselves embedded in walls, or falling off into a deep void, sometimes referred to as [...] "black hell", [...] "blue hell", or [...] "green hell", depending on the predominant color. These are the hallmarks of a failing collision detection and <b>physical</b> <b>simulation</b> system. [...] is an infamous example of a game with a collision detection system failing, or not being present at all.|$|E
40|$|This paper {{summarizes}} the compilation {{of information on}} <b>physical</b> <b>simulations</b> of seabed scouring by ice keels, and the resulting database. <b>Physical</b> <b>simulations</b> are critical for a proper understanding of ice scouring phenomena. A total of 487 scour simulations from twentyeight studies are reported. General information about test facility, soil, keel type, model pipeline, test conditions and results are outlined. The database {{can be used as}} a tool to identify knowledge gaps and guide future testing programs, to generate empirical relationships between the parameters involved during this interaction, or to validate numerical models. Copyright 9 2012 by the International Society of Offshore and Polar Engineers (ISOPE). Peer reviewed: YesNRC publication: Ye...|$|R
5000|$|To {{unite the}} {{traditional}} high-performance computing (HPC) focus on <b>physical</b> <b>simulations</b> for {{scientific research and}} engineering, which focuses on increasing the computing speed, with [...] "big data" [...] applications that are optimized for working with large amounts of data ...|$|R
40|$|Abstract: The {{combination}} of complex <b>physical</b> <b>simulations</b> and realistic real-time interactive virtual environments provides engineers with {{a means to}} test the design in various environments before finishing the final products, and program management with a means for better communication and measurement of progress. Customers objectively know what they will receive by test driving the product before the designers complete the design. This paper reports {{the development of a}} system that combines complicated <b>physical</b> <b>simulations</b> with a real-time visualization software tool, and displays the results in realistic 3 D environments. The Generic Visualization System (GVS) displays the combined results of many different simulation programs, including several Semi-Automated Forces (SAF) variations (e. g., OneSAF, JSAF, and others), simultaneously...|$|R
5000|$|... #Subtitle level 2: Collision {{detection}} in <b>physical</b> <b>simulation</b> ...|$|E
5000|$|<b>Physical</b> <b>simulation</b> (e.g. cloth modeling, {{animation}} {{of fluid}} dynamics, etc.) ...|$|E
5000|$|Monte Carlo methods, {{algorithms}} used in <b>physical</b> <b>simulation</b> and computational statistics based on taking random samples ...|$|E
40|$|Abstract. This chapter {{introduces}} the background {{needed to develop}} a geometry-based, principled approach to computational modeling. We show {{that the use of}} dis-crete differential forms often resolves the apparent mismatch between differential and discrete modeling, for applications varying from graphics to <b>physical</b> <b>simulations.</b> 1...|$|R
40|$|Abstract—Physolator is Java based physics {{simulation}} framework. Physolator supports {{an object}} oriented style for building physical models. This article describes Physolators core architecture and it explains how the framework architecture contributes to building <b>physical</b> <b>simulations</b> in a modular, object oriented style. Keywords-physical simulation; Java; object-oriented framework I...|$|R
40|$|Keywords: Object-orientation, Message-Passing, Simulation, Particle-in-Cell 1 Introduction This work {{is part of}} a {{government}} funded collaboration of physicists, mathematicians and computer scientists to develop large-scale <b>physical</b> <b>simulations</b> for massive parallel computers. Our group is concerned with the development of adequate runtime environments and libraries to parallelize these simulations effectively...|$|R
5000|$|The Physics Abstraction Layer, a <b>physical</b> <b>simulation</b> API {{abstraction}} system (it provides COLLADA and Scythe Physics Editor {{support for}} PhysX) ...|$|E
50|$|Although the {{classical}} vector slime algorithms {{are far from}} an attempt at correct physical modelling, the result can, under certain conditions, trick the viewer into believing {{that there is some}} sophisticated <b>physical</b> <b>simulation</b> involved. The effect has therefore grown quite popular in the demoscene to create impressive visual effects at relatively low computational cost. Interactive vector slime implementations can also eventually be found in computer games as a substitute for a more correct <b>physical</b> <b>simulation</b> algorithm.|$|E
50|$|Breve {{includes}} 3D articulated body <b>physical</b> <b>simulation</b> with {{collision detection}} and response and an OpenGL display engine, so one can simulate and visualize semi-realistic creatures and worlds.|$|E
40|$|In engineering, {{traditional}} approaches {{aimed at}} teaching concepts of dynamics to engineering students include {{the study of}} a dense yet sequential theoretical development of proofs and exercises. Structural dynamics are seldom taught experimentally in laboratories since these facilities should be provided with expensive equipment such as wave generators, data-acquisition systems, and heavily wired deployments with sensors. In this paper, the design of an experimental experience in the classroom based upon digital fabrication and modeling tools related to structural dynamics is presented. In particular, all experimental deployments are conceived with low-cost, open-source equipment. The hardware includes Arduino-based open-source electronics whereas the software is based upon object-oriented open-source codes {{for the development of}} <b>physical</b> <b>simulations.</b> The set of experiments and the <b>physical</b> <b>simulations</b> are reproducible and scalable in classroom-based environments. Peer ReviewedPostprint (author's final draft...|$|R
40|$|This work {{evaluates the}} {{performance}} of a novel design for a bifurcated submerged entry nozzle (SEN) used for the continuous casting of steel slabs. The proposed design incorporates fluid flow conditioners attached on SEN external wall. The fluid flow conditioners impose a pseudosymmetric pattern in the upper zone of the mold by inhibiting the fluid exchange between the zones created by conditioners. The performance of the SEN with fluid flow conditioners is analyzed through numerical simulations using the CFD technique. Numerical results were validated by means of <b>physical</b> <b>simulations</b> conducted on a scaled cold water model. Numerical and <b>physical</b> <b>simulations</b> confirmed that {{the performance of}} the proposed SEN is superior to a traditional one. Fluid flow conditioners reduce the liquid free surface fluctuations and minimize the occurrence of vortexes at the free surface...|$|R
40|$|For {{optimization}} of Quantum-Dot-based Multi Tunnel Junction Memory (MTJM) [1], {{we propose}} an original compact model validated by <b>physical</b> <b>simulations.</b> We analyze {{the impact of}} physical and technological parameters (Temperature, dots density, geometries…) on writing and retention characteristics of the MTJM cell, and so we show that this concept could be an alternative fo...|$|R
