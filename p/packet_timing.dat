40|84|Public
5000|$|Hardware {{support for}} packet handling, data buffering, burst transmissions, data encryption, data authentication, clear channel assessment, link quality {{indication}} and <b>packet</b> <b>timing</b> information ...|$|E
50|$|A packet on {{an input}} link cannot be {{correlated}} to a packet on the output link {{based on information}} {{about the time the}} packet was received, the size of the packet, or the content of the packet. Packet correlation based on <b>packet</b> <b>timing</b> is prevented by batching and correlation based on content and packet size is prevented by encryption and packet padding, respectively.|$|E
50|$|Vitesse {{was one of}} {{the early}} {{developers}} of gallium arsenide (GaAs) based integrated circuits. It now offers a line of Ethernet switching products consisting of Carrier Ethernet switch engines for customer-premises equipment, access network equipment, wireless base stations, mobile access equipment, fiber and microwave wireless backhaul equipment, and metro networking equipment; and Ethernet switches that enable desktop, workgroup, and LAN infrastructure. The company also provides Ethernet media access controllers that offer addressing and channel control mechanisms and are used in enterprise class modular Ethernet switch platforms, as well as in Ethernet-over-SONET/SDH and Ethernet-over-OTN systems used in access, metro, and long-haul carrier networking systems; Ethernet transceivers, including single, quad, and octal devices that allow the transmission of 10/100/1000 BASE-T data over category 5 copper cable and fiber optic cabling for use in personal computers, home electronics, and LAN applications; and Ethernet transceivers with <b>packet</b> <b>timing</b> and synchronization capabilities. In addition, it provides a line of connectivity products, which comprise mixed-signal physical media devices, physical layer devices, crosspoint switches, and signal integrity devices that are used for the connection of systems via optical fiber, copper cable, or backplanes. Further, Vitesse offers a range of transport processing products, such as framers, mappers, and switches, which support data rates up to 10 Gbit/s for SONET/SDH, EoS, and OTN applications. It markets and sells its products directly to OEMs and original design manufacturers, as well as through third-party electronic component distributors and manufacturing service providers.|$|E
5000|$|The use of delays between packets {{transmitted}} over {{computer networks}} was first explored by Girling for covert communication. This work motivated many other works to establish/detect a covert communication {{and analyze the}} fundamental limits of such scenarios. For example, over a packet channel where the <b>packet</b> <b>timings</b> are modeled by a Poisson point process, order of O(n) bits of information can be transmitted using the <b>packet</b> <b>timings,</b> where n {{is the number of}} packets [...] The extensions to renewal point process <b>packet</b> <b>timings</b> yields the O(n) results too.|$|R
50|$|This {{example is}} {{about using the}} <b>packet</b> <b>timings</b> to send {{information}} covertly. The use of inter-packet delays for covert communication was first explored by Girling.|$|R
5000|$|Covert {{channel in}} {{computer}} networks:  transfering information objects between {{processes that are}} not supposed to be allowed to communicate by the computer security policy. For example, using the <b>packet</b> <b>timings</b> to send information.|$|R
40|$|Abstract — This paper {{illustrates}} how networking protocols can inadvertently exacerbate obstacles to providing real-time guarantees for {{distributed problem solving}} in wireless mobile and sensor networks. We analyze the effects of control <b>packet</b> <b>timing</b> on providing quality of service guarantees. Inappropriate timing of control packets gives rise to synchronizations that result in sharp increases and decreases in throughput with small changes in node speed. Such synchronizations can seriously jeopardize network performance with direct effect on real-time guarantees. This paper introduces these synchronizations, analyzes them and suggests ways to modify the control <b>packet</b> <b>timing</b> to overcome them. These analyses include investigating the role of buffering at the network layer {{and its impact on}} network throughput. We analyze these effects and evaluate our protocol enhancements through simulation studies. I...|$|E
40|$|Abstract—The {{fundamental}} tradeoff {{between the}} rates at which energy and reliable {{information can be}} transmitted over a single noisy line is studied. Engineering inspiration for this problem is provided by powerline communication, RFID systems, and covert <b>packet</b> <b>timing</b> systems as well as communication systems that scavenge received energy. A capacity-energy function is defined and a coding theorem is given. The capacity-energy function is a non-increasing concave ∩ function. Capacity-energy functions for several channels are computed. I...|$|E
40|$|Network based intruders seldom attack {{directly}} {{from their own}} hosts, but rather stage their attacks through intermediate “stepping stones ” to conceal their identity and origin. To identify attackers behind stepping stones, {{it is necessary to}} be able to correlate connections through stepping stones, even if those connections are encrypted or perturbed by the intruder to prevent traceability. The timing-based approach is the most capable and promising current method for correlating encrypted connections. However, previous timing-based approaches are vulnerable to <b>packet</b> <b>timing</b> perturbations introduced by the attacker at stepping stones. In this paper, we propose a novel watermark-based correlation scheme that is designed specifically to be robust against timing perturbations. The watermark is introduced by slightly adjusting the timing of selected packets of the flow. By utilizing redundancy techniques, we have developed a robust watermark correlation framework that reveals a rather surprising result on the inherent limits of independent and identically distributed (iid) random timing perturbations over sufficiently long flows. We also identify the tradeoffs between timing perturbation characteristics and achievable correlation effectiveness. Experiments show that the new method performs significantly better than existing, passive, timing-based correlation in the presence of random <b>packet</b> <b>timing</b> perturbations...|$|E
5000|$|In a {{computer}} network link, where <b>timings</b> of <b>packet</b> transmission are modeled by a Poisson point process with rate , Alice wishes to transmit covert data to Bob, {{in the presence}} of a warden, Willie, who is monitoring the channel between Alice and Bob and can verify if they are generated by the authorized user or unauthorized user (Alice). Also, Bob, receives the <b>packets</b> after their <b>timings</b> are changed because of passing through an M/M/1 queue. Alice can change the <b>packet</b> <b>timings</b> according to a code-book shared with Bob, and covertly transmit [...] covert bits to Bob within the time period [...] The results can be extended to more general models where <b>packet</b> <b>timings</b> are modeled by a renewal point process.|$|R
5000|$|In example 1, if Alice cannot share a {{code-book}} with Bob and Willie is {{not able}} to verify if the packets are sent by authorized user or unauthorized user (Alice), Alice can insert [...] packets of her own to Bob covertly. The results can be extended to more general models where <b>packet</b> <b>timings</b> are modeled by a renewal point process.|$|R
40|$|Network traffic {{analysis}} reveals important information even when messages are encrypted. We consider active {{traffic analysis}} via flow fingerprinting by invisibly embedding information into <b>packet</b> <b>timings</b> of flows. In particular, assume Alice wishes to embed fingerprints into flows {{of a set}} of network input links, whose <b>packet</b> <b>timings</b> are modeled by Poisson processes, without being detected by a watchful adversary Willie. Bob, who receives the set of fingerprinted flows after they pass through the network modeled as a collection of independent and parallel $M/M/ 1 $ queues, wishes to extract Alice's embedded fingerprints to infer the connection between input and output links of the network. We consider two scenarios: 1) Alice embeds fingerprints in all of the flows; 2) Alice embeds fingerprints in each flow independently with probability $p$. Assuming that the flow rates are equal, we calculate the maximum number of flows in which Alice can invisibly embed fingerprints while having those fingerprints successfully decoded by Bob. Then, we extend the construction and analysis to the case where flow rates are distinct, and discuss the extension of the network model...|$|R
40|$|We {{introduce}} {{an attack}} against encrypted web traffic passing over the first hop – between client and Tor gateway – of the Tor network. The attack makes use only of <b>packet</b> <b>timing</b> information on the uplink and so is impervious to packet padding defences. In addition, we show that the attack is robust against the randomised routing used in Tor. We demonstrate {{the effectiveness of the}} attack at identifying the web sites being visited by a Tor user, achieving mean success rates of 68...|$|E
40|$|In this paper, we {{introduce}} a novel metric that can quantitatively measure the practical effectiveness (i. e. anonymity) of all anonymous {{networks in the}} presence of timing attack. Our metric is based on a novel measurement of the distortion of the <b>packet</b> <b>timing</b> between the incoming and the outgoing flows to and from the anonymous network and it uses wavelet based analysis to measure the variability of the distortion. To the best of our knowledge, our approach is the first practical method that can quantitatively measure the <b>packet</b> <b>timing</b> distortion between flows that may have gone through such transformations as flow mixing/spliting/merging, adding chaff, packet dropping. To validate our anonymity metric, we have conducted real-time timing attacks on various deployed anonymous networks such as Tor, anonymizer. com and have used the timing attack results as the ground truth for validating our anonymity metric. We have found strong correlation between our anonymity metric and the timing attack results. Our metric measurements and timing attack results show that the circuit rotation in Tor network could significantly increase its resistance to timing attack at the cost of more timing disturbances to the normal users. In addition, we have found that adding constant rate chaff (i. e. cover traffic) has diminishing effect in anonymizing packet flows...|$|E
40|$|Timing-based active {{watermarking}} schemes {{are developed}} to trace back attackers through stepping stone connections or anonymizing networks. By slightly changing <b>packet</b> <b>timing,</b> these schemes achieve robust correlation for encrypted network connections under timing perturbation. However, the manipulation on <b>packet</b> <b>timing</b> makes the schemes themselves a potential target of intelligent attackers. In this paper, we analyze the secrecy of the timingbased active watermarking techniques for tracing through stepping stones, and propose an attack {{scheme based on}} analyzing the packet delays between adjacent stepping stones. We develop attack techniques to infer important watermark parameters, and to recover and duplicate embedded watermarks. The resulting techniques enable an attacker to defeat the tracing systems in certain cases by removing watermarks from the stepping stone connections, or replicating watermarks in non-stepping stone connections. We also develop techniques to determine in real-time whether a stepping stone connection is being watermarked for trace-back purposes. We have performed substantial experiments using real-world data to evaluate these techniques. The experimental results demonstrate that for the watermark scheme being attacked (1) embedded watermarks can be successfully recovered and duplicated when the watermark parameters are not chosen carefully, and (2) the existence of watermarks in a network flow can always be quickly detected. 1...|$|E
40|$|Abstract — The information-theoretic {{analysis}} of Chaum mixing under latency constraints is considered. Mixes are relay nodes that collect packets from multiple users and modify <b>packet</b> <b>timings</b> {{to prevent an}} eavesdropper from identifying the sources of outgoing packets. In this work, an entropy-based metric of anonymity is proposed to quantify {{the performance of a}} mixing strategy under strict delay constraints. Inner and outer bounds on the maximum achievable anonymity are characterized as functions of traffic load and the delay constraint. The bounds are shown to have identical first derivatives at low traffic loads. Index Terms — mixing, traffic analysis, anonymity, timing channels. I...|$|R
40|$|Abstract—We {{design and}} {{implement}} a novel class of highly precise network instrumentation, capable of the first-ever capture of exact <b>packet</b> <b>timings</b> of network traffic. Our instrumentation — combining real-time physics test equipment with off-line postprocessing software — prevents interference with the system under test, provides reproducible measurements by eliminating non-deterministic error, and uses transparent and ubiquitous lab equipment and open-source software for ease of replication. We use our technique to perform in-situ observations of 10 Gigabit Ethernet packets in flight on optical fiber, showing improvements in timing precision of two to six orders of magnitude over existing methods of measurement, which generally employ software on commodity computer endpoints of network paths. I...|$|R
40|$|Consider {{a channel}} where {{authorized}} transmitter Jack sends packets to authorized receiver Steve {{according to a}} Poisson process with rate λ packets per second for a time period T. Suppose that covert transmitter Alice wishes to communicate information to covert receiver Bob on the same channel without being detected by a watchful adversary Willie. We consider two scenarios. In the first scenario, we assume that warden Willie cannot look at packet contents but rather can only observe <b>packet</b> <b>timings,</b> and Alice must send information by inserting her own packets into the channel. We show {{that the number of}} packets that Alice can covertly transmit to Bob is on the order of the square root of the number of packets that Jack transmits to Steve; conversely, if Alice transmits more than that, she will be detected by Willie with high probability. In the second scenario, we assume that Willie can look at packet contents but that Alice can communicate across an M/M/ 1 queue to Bob by altering the <b>timings</b> of the <b>packets</b> going from Jack to Steve. First, Alice builds a codebook, with each codeword consisting of a sequence of <b>packet</b> <b>timings</b> to be employed for conveying the information associated with that codeword. However, to successfully employ this codebook, Alice must always have a packet to send at the appropriate time. Hence, leveraging our result from the first scenario, we propose a construction where Alice covertly slows down the packet stream so as to buffer packets to use during a succeeding codeword transmission phase. Using this approach, Alice can covertly and reliably transmit O(λ T) covert bits to Bob in time period T over an M/M/ 1 queue with service rate μ > λ. Comment: Allerton 2015 submission, minor edits. arXi...|$|R
40|$|International audienceModern {{computing}} {{systems for}} vision {{have to support}} advanced image applications. They involve several heterogeneous pixel streams {{and they have to}} respect hard timing and area constraints. To face those challenges, an adaptable ringbased interconnection network-on-chip (NoC) has been recently proposed. This NoC is based on a new router architecture, with a dynamically adaptable internal datapath, which allows handling of multiple parallel pixel streams. An original datapath adaptation control is proposed by combining instructions and pixel data to be processed in a single <b>packet.</b> <b>Timing</b> performance and area occupation are evaluated on an FPGA prototype...|$|E
40|$|Abstract—Modern {{computing}} {{systems for}} vision {{have to support}} advanced image applications. They involve several heterogeneous pixel streams {{and they have to}} respect hard timing and area constraints. To face those challenges, an adaptable ringbased interconnection network-on-chip (NoC) has been recently proposed. This NoC is based on a new router architecture, with a dynamically adaptable internal datapath, which allows handling of multiple parallel pixel streams. An original datapath adaptation control is proposed by combining instructions and pixel data to be processed in a single <b>packet.</b> <b>Timing</b> performance and area occupation are evaluated on an FPGA prototype. Index Terms—network-on-chip, router, FPGA, adaptable, image processin...|$|E
40|$|Developing and {{evaluating}} wireless protocols is challenging {{because it requires}} flexible network interface hardware, which is not readily available. To reduce the efforts of conducting realistic wireless experiment, we have developed Flex-MAC, a wireless protocol development and evaluation platform based on commodity hardware. FlexMAC targets CSMA wireless protocols and allows customization of functions such as backoff, retransmission, and <b>packet</b> <b>timing.</b> In this demo, we will show that FlexMAC is {{a useful tool for}} wireless protocol development. We will demonstrate two projects that are developed using FlexMAC, including a software-based 802. 11 implementation and an opportunistic relaying protoco...|$|E
40|$|Abstract—Linking two network flows {{that have}} the same source is {{essential}} in intrusion detection or in tracing anonymous connections. To improve the performance of this process, the flow can be modified (fingerprinted) {{to make it more}} distinguishable. However, an adversary located in the middle can modify the flow to impair the correlation by delaying the packets or introducing dummy traffic. We introduce a game-theoretic framework for this problem, that is used to derive the Nash Equilibrium. As obtaining the optimal adversary delays distribution is intractable, some approximations are done. We study the concrete example where these delays follow a truncated Gaussian distribution. We also compare the optimal strategies with other fingerprinting schemes. The results are useful for understanding the limits of flow correlation based on <b>packet</b> <b>timings</b> under an active attacker. I...|$|R
50|$|Bypass {{switches}} may {{be managed}} through any of several interfaces: a command-line interface (CLI), a Web browser-based interface, or a platform-based SNMP tool. Management functions may include configuring an IP address for SNMP traps, retrieving RMON statistics, and setting parameters for the heartbeat packet such as <b>packet</b> contents, <b>timing,</b> and retry counts.|$|R
40|$|Linking two network flows {{that have}} the same source is {{essential}} in intrusion detection or in tracing anonymous connections. To improve the performance of this process, the flow can be modified (fingerprinted) {{to make it more}} distinguishable. However, an adversary located in the middle can modify the flow to impair the correlation by delaying the packets or introducing dummy traffic. We introduce a game-theoretic framework for this problem, that is used to derive the Nash Equilibrium. As obtaining the optimal adversary delays distribution is intractable, some approximations are done. We study the concrete example where these delays follow a truncated Gaussian distribution. We also compare the optimal strategies with other fingerprinting schemes. The results are useful for understanding the limits of flow correlation based on <b>packet</b> <b>timings</b> under an active attacker. Comment: Workshop on Information Forensics and Securit...|$|R
40|$|With {{the growth}} in number and {{significance}} of the emerg-ing applications that require extremely low latencies, net-work operators are facing increasing need to perform latency measurement on per-flow basis for network monitoring and troubleshooting. In this paper, we propose COLATE, the first per-flow latency measurement scheme that requires no probe packets and time stamping. Given a set of obser-vation points, COLATE records <b>packet</b> <b>timing</b> information at each point so that later for any two points, it can accu-rately estimate the average and standard deviation of the latencies experienced by the packets of any flow in passing the two points. The key idea is that when recording <b>packet</b> <b>timing</b> information, COLATE purposely allows noise to be introduced for minimizing storage space, and when query-ing the latency of a target flow, COLATE uses statistical techniques to denoise and obtain an accurate latency esti-mate. COLATE {{is designed to be}} efficiently implementable on network middleboxes. In terms of processing overhead, COLATE performs only one hash and one memory update per packet. In terms of storage space, COLATE uses less than 0. 1 bit per packet, which means that, on a backbone link with about half a million packets per second, using a 256 GB drive, COLATE can accumulate time stamps of packets traversing the link for over 1. 5 years. We evaluated COLATE using three real traffic traces that include a back-bone traffic trace, an enterprise network traffic trace, and a data center traffic trace. Results show that COLATE always achieves the required reliability for any given confidence in-terval...|$|E
40|$|We {{introduce}} {{an attack}} against encrypted web traffic that makes use only of <b>packet</b> <b>timing</b> information on the uplink. This attack is therefore impervious to existing packet padding defences. In addition, unlike existing approaches this timing-only attack does not require knowledge of the start/end of web fetches and so is effective against traffic streams. We demonstrate {{the effectiveness of the}} attack against both wired and wireless traffic, achieving mean success rates in excess of 90 %. In addition to being of interest in its own right, this timing-only attack serves to highlight deficiencies in existing defences and so to areas where it would be beneficial for VPN designers to focus further attention...|$|E
40|$|Nowadays OpenFlow enables {{controller}} {{programs to}} dynam-ically reconfigure the network. Controller programs can in-stall, modify and delete packet processing rules {{as well as}} collect statistics from individual OpenFlow-enabled switches. But how can we know if such programs are correct? While the abstraction of a logically-centralized network con-troller can ease their development, this abstraction does not remove {{the complexity of the}} underlying distributed system. For instance, small differences in packet header fields or <b>packet</b> <b>timing</b> can “tickle ” subtle bugs [1]. We argue {{that there is a need}} for thorough automatic test-ing of OpenFlow applications. In this paper, we describe our preliminary experiences with taking two state-of-the-art model checkers (SPIN and Java PathFinder) and applyin...|$|E
50|$|If the receiver's {{calculation}} of the FCS does not match that of the sender's, indicating that the frame contains errors, the receiver can either send a negative acknowledge packet to the sender, or send nothing. After either receiving a negative acknowledge <b>packet</b> or <b>timing</b> out waiting for a positive acknowledge packet, the sender can retransmit the failed frame.|$|R
40|$|Abstract—Deciding {{that two}} network flows are {{essentially}} the same is an important problem in intrusion detection or in tracing anonymous connections. A stepping stone or an anonymity network may try to prevent flow correlation by delaying the packets, introducing chaff traffic, or even splitting the flow in several subflows. We introduce a game-theoretic framework for this problem. The framework is used to derive the Nash equilibrium under two different adversary models: the first one, when the adversary is limited to delaying packets, and the second, when the adversary also adds dummy packets and removes packets from the flow. As the optimal decoder is not computationally feasible, we restrict the possible decoder to one that estimates and compensates the attack. Our analysis {{can be used for}} understanding the limits of flow correlation based on <b>packet</b> <b>timings</b> under an active attacker. Index Terms—traffic analysis, game theory, flow watermark, network security I...|$|R
40|$|The {{problem of}} {{anonymous}} networking when an eavesdropper observes <b>packet</b> <b>timings</b> in {{a communication network}} is considered. The goal is to hide the identities of source-destination nodes, and paths of information flow in the network. One way to achieve such an anonymity is to use mixers. Mixers are nodes that receive packets from multiple sources and change the <b>timing</b> of <b>packets,</b> by mixing packets at the output links, to prevent the eavesdropper from finding sources of outgoing packets. In this paper, we consider two simple but fundamental scenarios: double input-single output mixer and double input-double output mixer. For the first case, we use the information-theoretic definition of the anonymity, based on average entropy per packet, and find an optimal mixing strategy under a strict latency constraint. For the second case, perfect anonymity is considered, and a maximal throughput strategy with perfect anonymity is found that minimizes the average delay. I...|$|R
40|$|Systems are {{attempting}} to detect botnets by examining traffic content for IRC commands or by setting up honeynets. Our approach for detecting botnets is to examine flow characteristics such as bandwidth, duration, and <b>packet</b> <b>timing</b> looking for evidence of botnet command and control activity. We have constructed an architecture that first eliminates traffic that {{is unlikely to be}} a part of a botnet, classifies the remaining traffic into a group that is likely to be part of a botnet, then correlates the likely traffic to find common communications patterns that would suggest the activity of a botnet. Our results show that botnet evidence can be extracted from a traffic trace containing almost 9 million flows...|$|E
40|$|Abstract—We {{introduce}} {{an attack}} against encrypted web traffic passing over the first hop – between client and Tor gateway – of the Tor network. The attack makes use only of <b>packet</b> <b>timing</b> information on the uplink and so is impervious to packet padding defences. In addition, we show that the attack is robust against the randomised routing used in Tor. We demonstrate {{the effectiveness of the}} attack at identifying the web sites being visited by a Tor user, achieving mean success rates of 68 %. As well as being of interest in its own right, this timing-only attack serves to highlight deficiencies in existing defences and so to areas where it would be beneficial for Tor and VPN designers to focus further attention. I...|$|E
40|$|Developing and {{evaluating}} wireless protocols is challenging {{because it requires}} flexible network interface hardware, which is not readily available. In this paper, we present FlexMAC, a wireless protocol development and evaluation platform based on commodity hardware. FlexMAC targets CSMA wireless protocols and allows customization of functions such as backoff, retransmission, and <b>packet</b> <b>timing.</b> We describe our implementation of FlexMAC and quantify FlexMAC’s precision for 802. 11 b compared with commercial hardware implementations. The results show that FlexMAC’s performance {{is very close to}} that of hardware implementations. We also present two case studies that illustrate FlexMAC’s flexibility: the use of opportunistic relaying to boost throughput and an investigation of temporal and throughput fairness. We found that FlexMAC is a useful tool for conducting 802. 11 -style protocol research...|$|E
40|$|Network intruders usually launch {{their attacks}} through {{a chain of}} {{intermediate}} stepping stone hosts in order to hide their identities. Detecting such stepping stone attacks is difficult because <b>packet</b> encryption, <b>timing</b> perturbations, and meaningless chaff packets can all be utilized by attackers to evade from detection. In this paper, we propose a method based on packet matching and timing-based active watermarking that can successfully correlate interactive stepping stone connections {{even if there are}} chaff <b>packets</b> and limited <b>timing</b> perturbations. We provide several algorithms that have different trade-offs among detection rate, false positive rate and computation cost. Our experimental evaluation with both real world and synthetic data indicates that by integrating packet matching and active watermarking, our approach has overall better performance than existing schemes. 1...|$|R
30|$|Timothy et al.’s [36] paper {{focuses on}} jamming at the transport/network layer. Jamming at this layer {{exploits}} AODV and TCP protocols and {{is shown to}} be very effective in simulated and real networks when it can sense victim packet types, but the encryption is assumed to mask the entire header and contents of the packet so that only <b>packet</b> size, <b>timing,</b> and sequence is available to the attacker for sensing [19].|$|R
40|$|Different formats of PCAP (Packet CAPtures) {{files are}} {{nowadays}} widely used for storing computer network communications. This paper outlines information about PCAP formats with focus on <b>packets</b> precise <b>timing</b> and order. In thjs paper we compare capabilities of different open-source tools for handling PCAP files and introduce our own tool for merging multiple PCAPs. Finally, we evaluate {{the performance of}} the implemented tool and compare it with existing implementations...|$|R
