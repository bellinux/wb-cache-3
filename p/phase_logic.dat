14|90|Public
40|$|This paper {{presents}} {{the work done}} to develop and characterize the behavior of binary Tunneling <b>Phase</b> <b>Logic</b> (TPL) devices. Three input NAND, NOR and MINORITY functions are demonstrated using a single TPL element. The fan-out of the gates is discussed {{as well as the}} loading e#ects of multiple gates in cascade. Stable regions of operation are reported and future research possibilities are explored. 1 Introduction The majority of digital circuits use voltage levels to indicate the di#erent logic values. Beside the voltage, current-mode, charge-mode (like Charge Coupled Devices [1, 2] or Single Electron Logic [3, 4]) and phase-mode [5] circuits also exist but are less popular. The use of the frequency of a waveform [6] or the use of its phase with Tunneling <b>Phase</b> <b>Logic</b> (TPL) [7] were recently proposed based on single electron devices. Single electron devices are viewed as the most promising approach for replacing CMOS to achieve terascale integration and low power density (although the to [...] ...|$|E
40|$|The {{possibility}} for obtaining high functionality in multi-valued logic gates based on tunneling <b>phase</b> <b>logic</b> (TPL) is examined. Using assumptions {{based on previous}} results for binary and ternary TPL, {{the case of a}} 3 -input 4 -phase gate is analyzed. It is found that such gates can equivalently perform a rich combination of the functions XOR, AND, OR, and NOT, and could thereby provide high functionality in a single element. 1 Introduction The majority of digital circuits use voltage levels to indicate the di#erent logic values. Beside the voltage, current-mode as well as charge-mode (like Charge Coupled Devices [1, 2] or Single Electron Logic [3, 4]) circuits also exist but are less popular. Two other possibilities can be achieved using single electron devices, namely the use of the frequency of a waveform [5](appendix B) or the use of its phase with Tunneling <b>Phase</b> <b>Logic</b> (TPL) [6]. The use of the phase of a waveform to represent logic values in digital circuits has been proposed some [...] ...|$|E
40|$|Based on {{a simple}} circuit model of a {{tunneling}} <b>phase</b> <b>logic</b> (TPL) element that is driven by a sinusoidal voltage source and biased by a DC voltage source, we present simulations of operations in cellular nonlinear networks (CNN) that could potentially be used to perform general computations in 2 D arrays of simple, locally connected nanoscale devices. Some examples are presented to demonstrate the image computation capability of TPL–CNN. In particular, we use a simple 2 D TPL–CNN structure to perform edge detection, image enhancement and image segmentation. Some cellular automata (CA) -like behaviors of our 2 D TPL–CNN are also presented. 1...|$|E
40|$|<b>Phased</b> <b>Logic</b> (PL) is a {{synthesis}} and mapping methodology that translates a standard synchronous gate-level netlist to a non-clocked netlist of special gates called <b>phased</b> <b>logic</b> gates [1][2][3]. In this paper {{the implementation of}} PL gates and the switched capacitance of <b>phased</b> <b>logic</b> systems is discussed. An analysis of the dynamic power consumption of a <b>phased</b> <b>logic</b> system reveals a major deficiency in the original programmable LUT-based design [2], leading to an alternate <b>phased</b> <b>logic</b> gate design. Switched capacitance comparisons of designs using the new <b>phased</b> <b>logic</b> gate versus clocked FPGA implementations provide insights to PL gate design requirements {{and the type of}} applications best suited for <b>phased</b> <b>logic</b> implementation. 1...|$|R
40|$|ABSTRACT: <b>Phased</b> <b>logic</b> is a synthesis/mapping {{methodology}} {{that allows}} a standard clocked netlist (combinational gates + DFFs) to be automatically mapped to a non-clocked netlist that uses special gates called <b>phased</b> <b>logic</b> gates. The new netlist has no clock networks and the only required global signal is a power-on reset. We demonstrate {{the viability of the}} <b>phased</b> <b>logic</b> approach via the synthesis and simulation of several designs ranging from a few hundred to a few thousand gates. Since the input to the <b>phased</b> <b>logic</b> synthesis/mapper tool is a standard clocked netlist, any standard synthesis tool can be used to produce the clocked netlist. Our methodology starts with behavioral VHDL and produces a simulateable <b>phased</b> <b>logic</b> netlist. It is shown that optimizations and architectural approaches that produce a fast clocked design results in a fast <b>phased</b> <b>logic</b> design. Se...|$|R
40|$|We {{present a}} {{visualization}} tool called PLFire, which allows a user {{to observe the}} behavior of a <b>Phased</b> <b>Logic</b> (PL) circuit. <b>Phased</b> <b>logic</b> is a technique for realizing self-timed circuitry that is delay-insensitive and requires no global clock. One advantage of self-timed circuits is that throughput is based on average propagation delays and not worst-case delay. By being able to visualize the operation of a PL circuit, including the token flow, a designer gets a better understanding of what features of a design have the greatest impact on performance...|$|R
40|$|Abstract The {{science of}} streamgauging has evolved through the years, {{mainly from the}} {{experiences}} and innovations of its practitioners. Streamgauging procedures are standardized on the international level. However, {{the selection of a}} suitable method for flow measurement is still a fairly complex process. The advisory system for flow measurement method selection has been designed to aid the user in the selection process (Simonovic, 1990 a). Two aspects of selection are considered: physical characteristics of the gauging site and/or structures at the gauging site. The system has been designed for potential use by Environment Canada. Development of the system was done in two phases with very different emphasis. During the first phase, the emphasis was on the selection process, while during the second <b>phase</b> <b>logic</b> control was the major issue. The paper discusses issues involved in both phases of the development of a...|$|E
40|$|Abstract—The {{security}} of cryptographic implementations relies {{not only on}} the algorithm quality but also on the countermeasures to thwart attacks aiming at disclosing the secrecy. Theseattackscantakeadvantageofthesecretleakagesappearing throughthepowerconsumptionortheelectromagneticradiations also called “Side Channels”. This is for instance the case of the Differential Power Analysis (DPA) or the Correlation Power Analysis (CPA). Fault injections is another threatening attack type targeting specific nets in a view to change their value. The majorprincipletofighttheside-channelattackconsistsinmaking the power consumption constant. The Masking method allows the designer to get a power consumption which has a constant mean and a variance given by a random variable. Another manner is the Hiding method which consists in generating a constant power consumption by using a Dual-rail with Precharge <b>phase</b> <b>Logic</b> (DPL). This paper presents an overview of the various logic styles that have been promoted in the last six years, with an emphasis on their relative advantages and drawbacks...|$|E
40|$|The {{security}} of cryptographic implementations relies {{not only on}} the algorithm quality but also on the ountermeasures to thwart attacks aiming at disclosing the secrecy. These attacks {{can take advantage of the}} secret leakages appearing through the power consumption or the electromagnetic radiations also called “Side Channels”. This is for instance the case of the Differential Power Analysis (DPA) or the Correlation Power Analysis (CPA). Fault injections is another threatening attack type targeting specific nets in a view to change their value. The major principle to fight the side-channel attack consists in making the power consumption constant. The Masking method allows the designer to get a power consumption which has a constant mean and a variance given by a random variable. Another manner is the Hiding method which consists in generating a constant power consumption by using a Dual-rail with Precharge <b>phase</b> <b>Logic</b> (DPL). This paper presents an overview of the various logic styles that have been promoted in the last six years, with an emphasis on their relative advantages and drawbacks...|$|E
40|$|Data-dependent {{completion}} {{time is a}} well-known advantage of self-timed circuits, one {{that allows them to}} operate at average rather than worst-case execution rates. A technique called early evaluation that extends this advantage by allowing self-timed modules to produce results before all of their inputs have arrived is described here. The technique can be applied to any combinational function and is integrated into the <b>phased</b> <b>logic</b> design methodology that accepts synchronous design entry and produces delay-insensitive self-timed circuits. We describe an algorithm that ensures that the resulting delay-insensitive circuits are safe, and develop a generalized method for inserting early evaluation gates into any <b>phased</b> <b>logic</b> netlist. We give performance results that compare several benchmark circuits, including a 5 -stage pipelined CPU and a microprogrammed floating point unit, using early evaluation with non-early evaluation <b>phased</b> <b>logic</b> circuits and with clocked circuits. Simulation results show a clear performance benefit for PL circuits that use early evaluation. I...|$|R
40|$|A five-stage pipelined CPU {{based on}} the MIPs ISA is mapped to a self-timed logic family known as <b>Phased</b> <b>Logic</b> (PL). The mapping is {{performed}} automatically from a netlist of D-Flip-Flops and 4 -input Lookup Tables (LUT 4 s) to a netlist of <b>Phased</b> <b>Logic</b> gates. Each PL gate implements a 4 -input Lookup Table in addition to control logic required for the PL control scheme. PL offers a speedup technique known as Early Evaluation {{that can be used}} to boost performance at the cost of additional PL gates. Several different PL gate-level implementations are produced to explore different architectural tradeoffs using early evaluation. Simulations run for five benchmark programs show an average speedup of 1. 48 over the clocked netlist at the cost of 17 % additional PL gates...|$|R
40|$|The phase {{selection}} technique {{is a good}} solution to design programable dividers widely used in fractional synthesizers. However, as the process parameters vary, the delays in the <b>phase</b> selection <b>logic</b> change, and they erroneously trigger the phase selection. This paper presents an improvement that consists on making the <b>phase</b> selection <b>logic</b> in a semi sequential fashion. In this way {{if there is any}} error due to process, temperature or voltage variations; the <b>phase</b> selection <b>logic</b> will correct and pass correctly the pulses in the next clock cycle. The proposed technique is verified with the fabrication of a programable frequency divider in a 0. 35 μm CMOS process...|$|R
40|$|Motivated by the {{emerging}} interest in new VLSI processes and technologies, such as Resonant Tunneling Diodes (RTDs), Single-Electron Tunneling (SET), Quantum Cellular Automata (QCA), and Tunneling <b>Phase</b> <b>Logic</b> (TPL), this paper explores {{the application of}} the non-Boolean computational paradigms enabled by such new technologies. In particular, we consider Threshold Logic functions, directly implementable as primitive gates in the above mentioned technologies, and study their application to the domain of cryptographic computing. From a theoretical perspective, we present a study on the computational power of linear threshold functions related to modular reduction and multiplication, the central operations in many cryptosystems such as RSA and Elliptic Curve Cryptography. We establish an optimal bound to the delay of a threshold logic circuit implementing Montgomery modular reduction and multiplication. We also propose an architecture for modular reduction and multiplication which ensures feasible O(n^ 2) area requirements, preserving the properties of constant latency and a low architectural critical path independent of the input size n. We compare this result with several state-of-the-art proposals in the literature based on the Boolean computational model, showing that the presented approach has intrinsically better architectural delay and latency, both O(1), thereby outperforming systolic and fully parallel solutions...|$|E
40|$|Abstract—We {{address the}} problem of fast and {{accurate}} compu-tational analysis of large networks of coupled oscillators arising in nanotechnological and biochemical systems. Such systems are com-putationally and analytically challenging because of their very large sizes and the complex nonlinear dynamics they exhibit. We develop and apply a nonlinear oscillator macromodel that generalizes the well-known Kuramoto model for interacting oscillators, and demonstrate that using our macromodel provides important qualitative and quantitive advantages, especially for predicting self-organization phenomena such as spontaneous pattern formation. Our approach extends and applies recently-developed computational methods for macromodelling electrical oscillators, and features both phase and amplitude components that are extracted automatically (using numerical algorithms) from more complex differential-equation oscillator models available in the literature. We apply our approach to networks of Tunneling <b>Phase</b> <b>Logic</b> (TPL) and Brusselator biochemical oscillators, predicting a variety of spontaneous pattern generation phenomena. Comparing our results with published measurements of spiral, circular and other pattern formation, we show that we can predict these phenomena correctly, and also demonstrate that prior models (like Kuramoto’s) cannot do so. Our approach is more than 3 orders of magnitude faster than techniques that are comparable in accuracy. I...|$|E
40|$|Nanoscale {{photonic}} functionalities {{based on}} light-induced structural transitions in nanoparticles have been investigated, {{and it has}} been experimentally shown that nanoparticles caI:l act as both low power nanoscale optical switches and as resonator-less optical memory elements. A system for in-situ growth and characterization of gallium nanoparticles, which combined technologies including atomiC-beam deposition, ultra-high vacuum, cryogenics, and sophisticated fibre instrumentation including diode and ultra-fast lasers, has been developed. Optical switching has been observed in a gallium nanoparticle film {{on the end of a}} single mode optical fibre simultaneously in reflection and transmission, and under different regimes of excitation, for the first time. Measurements of the sub-microsecond dynamics of such light-by-light control allowed the first study of the fast kinetics of solid-solid and solid-liquid structural transformations in gallium nanoparticles to be performed. Single gallium nanoparticles have been grown from an atomic beam in the nanoaperture at the tip 'of a tapered optical fibre for the first time. Reversible light-induced reflectivity changes associated with a sequence of transformations between different structural forms (both solid-solid and solid-liquid) stimulated by optical excitation at nanowatt power levels, have been observed in such particles for the first time. The complex temperature hysteresis of the nanoparticle's nonlinear response has been observed {{and it has been}} discovered that the extent of overcooling can be controlled by varying the optical pumping regime. The first demonstration of nanoscale all-optical resonator-less memory functionality based on phase transformations has been performed using a film of gallium nanoparticles. It has been shown that single 1 / 1 $ optical pulses of a few mW peak power can be used to 'write' information to the memory by converting the particle$ from a lower energy <b>phase</b> (<b>logic</b> state 0) to a higher energy <b>phase</b> (<b>logic</b> state 1). A high contrast method for 'reading' the state of the particle memory, based on measurements of the reflectivity change induced by a modulated pump beam, has been developed. Both volatile and non-volatile modes of memory operation have been demonstrated. For the first time, an optical memory element based on a single particle has been demonstrated. It has been shown that an 80 nm gallium nanoparticle can act as a fourlevel nanoscale optical memory. Information is encoded on the particle by switching it between phases using single optical pulses with energies as low as 1. 5 pJ, and by varying the pulse energy different states can be directly accessed from both ground and intermediate states. A closely packed array of such particles could provide a storage density of about 0. 2 Tbjin 2 Ã‚Â• The experimental work has been underpinned by the development of appropriate qualitative physical models of the processes involved, so as to describe the relationships between excitation controlled phase coexistence in nanoparticles, their optical properties and the demonstrated functionalities. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|E
40|$|The {{performance}} of the Reaction Control System is impacted by the extreme flexibility of the space station structure. The method {{used to analyze the}} periodic thrust profile of a simple form of <b>phase</b> plane <b>logic</b> is presented. The results illustrate the effect on flexible body response of the type of <b>phase</b> plane <b>logic</b> utilized and the choice of control parameters: cycle period and attitude deadband...|$|R
40|$|Abstract [...] A self-timed {{programmable}} architecture {{used for}} the implementation of <b>Phased</b> <b>Logic</b> (PL) systems is described. PL systems are automatically translated from clocked designs and result in self-timed circuits that are insensitive to delays between gates. The target implementation is a self-timed FPGA architecture composed of PL gates. A PL gate design based on a 4 -input lookup table is presented. Power and performance estimates of two designs are given and are compared to their clocked counterparts...|$|R
40|$|<b>Phased</b> <b>logic</b> {{has been}} {{proposed}} as a technique for realizing self-timed circuitry that is delay-insensitive and requires no global clock signals. Early evaluation techniques have been applied to asynchronous circuits {{in the past in}} order to achieve throughput increases. A general method for computing early evaluation functions is presented for this design style. Experimental results are given that show the increase in throughput of various benchmark circuits. The results show that as much as a 30 % speedup can be achieved in some cases. ...|$|R
40|$|Distributed Data Mining {{provides}} computational {{strength as}} it can share effectively {{the large amount of}} data among its various computational resources connected in a network. In order to design the accurate data models, this huge amount of precise information must be distributed among various computational clients to perform data mining in distributed manner. It will not only result in accurate data model design but also increases the performance of computational process. Distribution of precise information among various computational resources results in the problem of privacy preservation of the confidential information. In case of frequent element mining which is important in defining the association rules, it becomes very easy to identify the pattern of information. There are following possibilities when the data can be leaked such as 1. If Computational Resources compromised each other at the time of distribution of data. 2. During the conversation between participant computational resources. 3. At the time of frequent item mining. This paper proposes a solution to resolve this problem, by designing a twofold logical model consist of two phases. In first phase the data is partitioned in such way that miners {{will not be able to}} identify the real data. And second <b>phase</b> <b>logic</b> will be used at the time of mining process so that miners will not identify the frequent item set as well as even after compromising each other they will be unable to reconstruct the original data...|$|E
40|$|New {{technologies}} such as Quantum-dot Cellular Automata (QCA), Single Electron Tunneling (SET), Tunneling <b>Phase</b> <b>Logic</b> (TPL) and all-spin logic (ASL) devices have been widely advocated in nanotechnology {{as a response to}} the physical limits associated with complementary metal oxide semiconductor (CMOS) technology in atomic scales. Some of their peculiar features are their smaller size, higher speed, higher switching frequency, lower power consumption, and higher scale integration. In these technologies, the majority (or minority) and inverter gates are employed for the production of the functions as this set of gates makes a universal set of Boolean primitives in these technologies. An important step in the generation of Boolean functions using the majority gate is reducing the number of involved gates. In this paper, a multi-objective synthesis methodology (with the objective priority of gate counts, gate levels and the number of inverter gates) is presented for finding the minimal number of possible majority gates in the synthesis of Boolean functions using the proposed Majority Specification Matrix (MSM) concept. Moreover, based on MSM, a synthesis flow is proposed for the synthesis of multi-output Boolean functions. To reveal the efficiency of the proposed method, it is compared with a meta-heuristic method, multi-objective Genetic Programing (GP). Besides, it is applied to synthesize MCNC benchmark circuits. The results are indicative of the outperformance of the proposed method in comparison to multi-objective GP method. Also, for the MCNC benchmark circuits, there is an average reduction of 10. 5 % in the number of levels as well as 16. 8 % and 33. 5 % in the number of majority and inverter gates, as compared to the best available method respectively. Comment: Accepted in Journal of Computational Electronic...|$|E
40|$|In {{the present}} thesis, {{it is argued}} that (1) the Accession Treaties have been used in {{accordance}} with their nature and proclaimed objective: they only brought about limited changes to primary law, proper to the needs of accession and have not introduced any fundamental changes. The numerous and still growing arrangements that depart from the principle of the application of the acquis in toto on accession do not alter this conclusion. (2) The evolution, especially from the 2004 Accession Treaty onwards and predictable for the future Accession Treaties (e. g. with Turkey), shows a tendency of diversification of that legal instrument by (a) adding new and/or reinforced elements of conditionality, protracted from the pre-accession phase to the membership phase, devising new mechanisms of conditionality and control (general and specific safeguard clauses, monitoring and verification mechanisms, membership postponement clause) and thus (b) contributing to a further differentiation in two respects - as among the Member States and with regard to the core acquis. Such differentiation exists already {{on the basis of the}} constitutive treaties (“in-built constitutive treaties induced differentiation”) and is accentuated by the Accession Treaties and their transitional arrangements (“Accession Treaties induced differentiation”). Questions of differentiation acquired another dimension with the introduction of the citizenship of the EU. (3) Finally, negotiations with certain candidate countries will show whether additional innovations are to be expected: a) whether future instruments of accession would be used in order to increase the existing level of differentiation (and protract the pre-accession <b>phase</b> <b>logic</b> well into the membership phase) with the conditionality becoming the most important element of the relations within an enlarged EU and thus paradoxically negating the nature of the integration itself, b) whether they will perhaps be used to bring about more important modifications to the treaties, or c) whether they will go as far as to provide a legal basis for permanent derogations with regard to certain new Member States (as explicitly envisaged, for instance, in the negotiating framework for Turkey) ...|$|E
40|$|A logic style {{known as}} Phased Logic(PL) {{is applied to}} {{arithmetic}} circuits. <b>Phased</b> <b>logic</b> is a dual-rail LEDR logic style that allows automatic translation from a clocked netlist to a self-timed implementation. Bit level dataflow, early evaluation and automatic filtering of transient computations within PL circuits can lead to both increased performance and higher energy efficiency than the original clocked netlist. Simulation results for a 16 x 16 iterative multiplier based on a LUT 4 design show a 23 % speed improvement and 20 % energy improvement over the clocked design. A Y...|$|R
50|$|Nevertheless, even if timing-awareness was {{extended}} to all these steps starting from well-established principles used for logic synthesis, the two <b>phases,</b> <b>logic</b> and physical, of the timing closure process are conventionally handled by different design teams and different EDA tools. Design Compiler by Synopsys, Encounter RTL Compiler by Cadence Design Systems and BlastCreate by Magma Design Automation are examples of logic synthesis tools. IC Compiler by Synopsys, SoC Encounter by Cadence Design Systems and Blast Fusion by Magma Design Automation are examples of tools capable of timing-aware placement, clock tree synthesis and routing and therefore used for physical timing closure.|$|R
40|$|<b>Phased</b> <b>Logic</b> (PL) is {{a design}} style for binary-valued {{asynchronous}} logic circuits. A performance enhancement known as Early Evaluation (EE) allows for increased throughput in PL circuits. PL circuits are produced using clocked circuit descriptions as input and then automatically mapping them into PL equivalents while adding optimization features. In {{the process of}} adding the EE performance enhancement, a special function known as a “trigger function ” is extracted from the partitions. Here, we describe a method for finding candidate trigger functions using BDDs and a technique for combining multiple trigger functions to support a single circuit partition using Multiple-valued Logic (MVL). Experimental results show that these method...|$|R
40|$|For {{the last}} four decades, the {{implementation}} of very large-scale integrated systems has largely based on complementary metal-oxide semiconductor (CMOS) technology. However, this technology has reached its physical limitations. Emerging nanoscale technologies such as quantum-dot cellular automata (QCA), single electron tunneling (SET), and tunneling <b>phase</b> <b>logic</b> (TPL) are major candidate for possible replacements of CMOS. These nanotechnologies use majority and/or minority logic and inverters as circuit primitives. In this dissertation, a comprehensive methodology for majority/minority logic networks synthesis is developed. This method is capable of processing any arbitrary multi-output Boolean function to nd its equivalent optimal majority logic network targeting to optimize either the number of gates or levels. The proposed method results in different primary equivalent majority expression networks. However, the most optimized network will be generated as a nal solution. The obtained results for 15 MCNC benchmark circuits show that {{when the number of}} majority gates is the rst optimization priority, there is an average reduction of 45. 3 % in the number of gates and 15. 1 % in the number of levels. They also show that when the rst priority is the number of levels, an average reduction of 23. 5 % in the number of levels and 43. 1 % in the number of gates is possible, compared to the majority AND/OR mapping method. These results are better compared to those obtained from the best existing methods. In this dissertation, our approach is to exploit QCA technology because of its capability to implement high-density, very high-speed switching and tremendously lowpower integrated systems and is more amenable to digital circuits design. In particular, we have developed algorithms for the QCA designs of various single- and multi-operation arithmetic arrays. Even though, majority/minority logic are the basic units in promising nanotechnologies, an XOR function can be constructed in QCA as a single device. The basic cells of the proposed arrays are developed based on the fundamental logic devices in QCA and a single-layer structure of the three-input XOR function. This process leads to QCA arithmetic circuits with better results in view of dierent aspects such as cell count, area, and latency, compared to their best counterparts. The proposed arrays can be formed in a pipeline manner to perform the arithmetic operations for any number of bits which could be quite valuable while considering the future design of large-scale QCA circuits...|$|E
40|$|New dynamic signal control {{methods such as}} {{fuzzy logic}} and {{artificial}} intelligence developed recently mainly focused on isolated intersection. Adaptive signal control based on fuzzy logic control (FLC) determines the duration and sequence that traffic signal should stay in a certain state, before switching to the next state (Trabia et al. 1999, Pham 2013). The amount of arriving and waiting vehicles are quantized into fuzzy variables and fuzzy rules are used {{to determine if the}} duration of the current state should be extended. The fuzzy logic controller showed to be more flexible than fixed controllers and vehicle actuated controllers, allowing traffic to flow more smoothly. The FLC does not possess the ability to handle various uncertainties especially in real world traffic control. Therefore it is not best suited for stochastic nature problems such as traffic signal timing optimization. However, probabilistic logic is the best choice to handle the uncertainties containing both stochastic and fuzzy features (Pappis and Mamdani 1977) Probabilistic fuzzy logic control is developed for the signalised control of a diamond interchange, where the signal phasing, green time extension and ramp metering are decided in response to real time traffic conditions, which aim at improving traffic flows on surface streets and highways. The probabilistic fuzzy logic for diamond interchange (PFLDI) comprises three modules: probabilistic fuzzy phase timing (PFPT) that controls the green time extension process of the current running phase, phase selection (PSL) which decides the next phase based on the pre-setup <b>phase</b> <b>logic</b> by the local transport authority and, probabilistic fuzzy ramp-metering (PFRM) that determines on-ramp metering rate based on traffic conditions of the arterial streets and highways. We used Advanced Interactive Microscopic Simulator for Urban and Non-Urban Network (AIMSUN) software for diamond interchange modeling and performance measure of effectiveness for the PFLDI algorithm. PFLDI was compared with actuated diamond interchange (ADI) control based on ALINEA algorithm and conventional fuzzy logic diamond interchange algorithm (FLDI). Simulation results show that the PFLDI surpasses the traffic actuated and conventional fuzzy models with lower System Total Travel Time, Average Delay and improvements in Downstream Average Speed and Downstream Average Delay. On the other hand, little attention has been given in recent years to the delays experienced by cyclists in urban transport networks. When planning changes to traffic signals or making other network changes, the value of time for cycling trips is rarely considered. The traditional approach to road management has been to only focus on improving the carrying capacity relating to vehicles, with an emphasis on maximising the speed and volume of motorised traffic moving around the network. The problem of cyclist delay has been {{compounded by the fact that}} the travel time for cyclists have been lower than those for vehicles, which affects benefit–cost ratios and effectively provides a disincentive to invest in cycling issues compared with other modes. The issue has also been influenced by the way in which traffic signals have been set up and operated. Because the primary stresses on an intersection tend to occur during vehicle (commuter) peaks in the morning and afternoon, intersections tend to be set up and coordinated to allow maximum flow during these peaks. The result is that during off-peak periods there is often spare capacity that is underutilised. Phasing and timings set up for peaks may not provide the optimum benefits during off-peak times. This is particularly important to cyclists during lunch-time peaks, when vehicle volumes are low and cyclist volumes are high. Cyclists can end up waiting long periods of time as a result of poor signal phasing, rather than due to the demands of other road users being placed on the network. The outcome of this study will not only reduce the traffic congestion during peak hours but also improve the cyclists’ safety at a typical diamond interchange...|$|E
40|$|This paper {{describes}} an asynchronous design tool flow known as <b>Phased</b> <b>Logic</b> that converts a clocked design into an asynchronous design implemented as a micropipeline using two-phase control and bundled data signaling. Example designs include variations of a double-precision floating point clipping operation mapped to UMC 0. 18 µ and Artisan /IBM 0. 13 µ standard cell libraries, and a five-stage pipelined MIPs-compatible integer unit mapped to the Artisan/IBM 0. 13 µ library. The design styles includes a feature known as early evaluation, {{which is a}} generalized form of bypass, that allows the self-timed design to recover some of the inherent latch delay penalty in micropipelines...|$|R
40|$|A {{technique}} for automatic insertion of slack matching buffers for performance enhancement in the asynchronous design style known as <b>Phased</b> <b>Logic</b> (PL) is described. A {{description of how}} slack matching buffers can offer throughput increases in PL circuitry is presented and is supported {{through the use of}} a simulation tool developed for modeling the timing behavior of PL circuits. A description of the architecture of the simulator and its implementation is also discussed. Based on the analysis of results provided by the simulator and the topological characteristics of a PL circuit, an algorithm for automatic slack matching buffer placement is devised. Examples of the buffer insertion technique are given and the effectiveness of the technique is evaluated through a set of experimental results...|$|R
30|$|Movement in “innovation journeys” towards {{exploration}} and experimentation and niche testing <b>phase.</b> Plastic <b>Logic</b> {{is the first}} company {{to set up a}} production line in Dresden, Germany to produce organic-based e-reader displays was planning to start production by 2010. This planning was delayed for unknown reasons at the time of scenario writing.|$|R
40|$|In {{the past}} few years, new {{applications}} of robots have increased the importance of robotic reliability and fault tolerance. Standard approaches of reliability engineering rely on the probability model, which is often inappropriate for this task {{due to a lack}} of sufficient probabilistic information during the design <b>phase.</b> Fuzzy <b>logic</b> offers an alternative to the probability paradigm, possibility, that is much more appropriate to reliability in the robotic context...|$|R
40|$|In {{the past}} few years, new {{applications}} of robots have increased the importance of robotic reliability and fault tolerance. Standard approaches of reliability engineering rely on the probability model, which is often inappropriate for this task {{due to a lack}} of sufficient probabilistic information during the design and prototyping <b>phases.</b> Fuzzy <b>logic</b> offers an alternative to the probability paradigm, possibility, that is much more appropriate to reliability in the robotic context. National Science FoundationNASAOffice of Naval ResearchSandia National Laborator...|$|R
40|$|A Programmable Dual-modulus Prescaler and a fully {{programmable}} Frequency divider with 250 nm {{are presented}} in this paper. The Dual-Modulus prescaler includes a synchronous counter and a asynchronous counter. A high sped dynamic D-FF is used in cmos phase locked loops for GHz applications that reduce the power consumption. Dynamic D-FF is constructed using True single <b>phase</b> clock <b>logic</b> (TSPC). The maximum operating frequency varies between 1. 8 GHz – 2. 4 GHz with power consumption of 24 mw at 2. 5 v supply voltage...|$|R
40|$|A general {{phase lock}} loop may be modeled as a {{reference}} signal and a feedback signal driving a <b>phase</b> detector <b>logic</b> network (A). Outputs from the phase detector are processed through a low pass filter network (B) to generate a control voltage. The control voltage drives a voltage controlled oscillator (C). A feedback signal derived from the voltage controlled oscillator output is fed to the phase detector as shown in Figure 1. A divider logic section is often added to the feedback signal path...|$|R
40|$|New dynamic signal control {{methods such as}} {{fuzzy logic}} and {{artificial}} intelligence developed recently mainly focused on isolated intersection. In this study, a Fuzzy Logic Control for a Diamond Interchange incorporating with Fuzzy Ramp System (FLDI) has been developed. The signalization of two closely spaced intersections in a diamond interchange is a complicated problem that includes both increasing the diamond interchange capacity and reduce delays at the same time. The model comprises of three main modules. The Fuzzy Phase Timing module controls the current phase green time extension, the Phase Selection module select the next phase based on the pre-defined phase sequence or <b>phase</b> <b>logics</b> and the Fuzzy Ramp module determines the cycle time of the ramp meter bases on current traffic volumes and conditions of the interchanges and the motorways. The developed FLDI model has been compared with the traffic actuated simulation with respects to flow rates and the average delays of the vehicles. The model of an actual diamond interchange is described and simulated by using AIMSUN (Advanced Interactive Microscopic Simulator for Urban and Non-Urban Network) software. Simulation results show the FLDI model outperformed the traffic actuated models with lower system total travel time, average delay and improvements in downstream average speed and average delay...|$|R
40|$|An {{integrated}} 5 GHz {{frequency synthesizer}} consuming only 5. 4 mA from a 2. 5 V supply is demonstrated in 0. 25 μm CMOS technology. The divider within the synthesizer employs the True Single <b>Phase</b> Clock <b>logic.</b> The output frequency spans from 5. 14 to 5. 70 GHz, with steps of 20 MHz. The reference spurs are - 70 dBc and the phase noise {{is lower than}} - 116 dBc/Hz at 1 MHz offset over the whole tuning range. The synthesizer is suitable for the HiperLAN II and the IEEE 802. 11 a standards...|$|R
40|$|<b>Phased</b> <b>Logic</b> (PL) is a self-timed design {{methodology}} that provides an automated translation of a clocked {{system in the}} form of D-flip-flops and combinational gates to a self-timed netlist of PL gates. The only global net in the self-timed netlist is a reset signal. The PL netlist is a micropipelined system with two-phase control. Two distinct implementation technologies are supported, fine-grain and coarse-grain. The fine-grain approach uses a one-to-one mapping of gates in the clocked system to PL gates that use a 4 -input Lookup-Table (LUT 4) as the logic element with delay-insensitive dual-rail routing between gates. This technology could form the basis for the implementation of a self-timed FGPA. Because all routing between gates is delayinsensitive, there are no timing mechanisms external to a PL gate that can cause a failure due to timing. The coarse-grain approach maps groups of gates in the clocked netlist to the combinational compute function of a PL block, with bundled data signaling used between blocks. The combinational compute function of a coarse-grain PL block can be implemented using a traditional standard cell library. The coarse-grain technology is an ASIC approach to the implementation of PL systems. All timing concerns in a coarse-grain implementation are blockto-block; there are no global mechanisms that can cause failure due to timing. If desired, dela...|$|R
