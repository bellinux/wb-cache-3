100|191|Public
5|$|The Windows <b>Push</b> <b>Notification</b> Service (WNS) was {{designed}} as a successor to the Microsoft <b>Push</b> <b>Notification</b> Service (MPNS), which was only supported natively on the Windows Phone 8 Operating System. Developers can still use the MPNS on apps that are installed on newer versions of Windows Mobile (Windows Phone 8 or Windows Phone 8.1), but only if the Windows application was already registered to use the MPNS and has been converted to a Microsoft Silverlight application and modified to re-target the new platform.|$|E
5|$|The {{architecture}} of the Windows <b>Push</b> <b>Notification</b> Service {{is similar to that}} of its predecessor, in that it consists of servers and interfaces that generate, maintain, store, and authenticate unique identifiers (called Channel URI Identifiers) for all devices that register to use the service. When a device enrolls to receive data and notification information using the WNS, it first sends a device registration request to WNS network. The WNS network acknowledges the request, and responds with the device's unique Channel URI Identifier. Typically, the device will then send its identifier to a server owned by the developer so that it can be stored and used for sending notifications. When the app developer wishes to transmit a notification or other WNS data to the device, it will transmit a POST request to the WNS network. The network will acknowledge and authenticate the request. If the authentication succeeds, the data to be transmitted is enqueued and then sent to the device from the WNS network using the Channel URI Identifier.|$|E
500|$|Windows <b>Push</b> <b>Notification</b> Service (commonly {{referred}} to as Windows Notification Service or WNS) is a notification service developed by Microsoft for all devices running Microsoft Windows platforms. It allows for developers to send push data ("toast" [...] and [...] "tile" [...] updates) to Windows and Universal Windows Platform [...] applications which implement the feature. Designed as a successor to the Microsoft <b>Push</b> <b>Notification</b> Service, it was first supported on Windows 8 and subsequently on Windows Phone 8.1 upon its release.|$|E
40|$|Smartphones {{are used}} ubiquitously {{worldwide}} and are essential tools in modern society. However, smartphone overuse is an emerging social issue, and limited studies have objectively assessed this matter. The majority {{of previous studies}} have included surveys or behavioral observation studies. Since a previous study demonstrated an association between increased <b>push</b> <b>notifications</b> and smartphone overuse, we investigated the effects of <b>push</b> <b>notifications</b> on task performance. We detected changes in brainwaves generated by smartphone <b>push</b> <b>notifications</b> using the N 200 and P 300 components of event-related potential (ERP) to investigate both concentration and cognitive ability. ERP assessment indicated that, in both risk and nonrisk groups, the lowest N 200 amplitude and the longest latency during task performance were found when <b>push</b> <b>notifications</b> were delivered. Compared to the nonrisk group, the risk group demonstrated lower P 300 amplitudes and longer latencies. In addition, the risk group featured {{a higher rate of}} error in the Go-Nogo task, due to the negative influence of smartphone <b>push</b> <b>notifications</b> on performance in both risk and nonrisk groups. Furthermore, <b>push</b> <b>notifications</b> affected subsequent performance in the risk group...|$|R
40|$|This thesis {{presents}} {{the design and}} implementation of a server for efficient notification of mobile applications. The server consist of two parts. The first part is dedicated for sending <b>push</b> <b>notifications</b> to mobile applications, the second part is dedicated for the administration of mobile applications. The current implementation allows sending <b>push</b> <b>notifications</b> to Android and Windows Phone enabled devices. The server is designed {{in a way to}} allow future upgrades for sending Ios or Firefox <b>push</b> <b>notifications.</b> Inaddition to upgrades on other operating system it allows ugrades to classic notification system like email or SMS...|$|R
5000|$|Simple {{subscription}} for a resource, {{and resulting}} <b>push</b> <b>notifications.</b>|$|R
2500|$|Google Calendar {{allows users}} to create and edit events. Events have a set start time and stop time, with an option for an [...] "All-day event". Users can enable a [...] "Recurring" [...] {{functionality}} with optional parameters for frequency. Users can add a color to an event for recognition or to distinguish the event from others. Users can optionally set notifications, with options for type (email, mobile <b>push</b> <b>notification)</b> and time. Locations can be added for easy understanding of an event's place. Events are viewable in different types of setups, including day, week, month, or schedule. Users can invite other people to events; for other Google Calendar users, the event becomes visible in their calendar, and for non-Google Calendar users, an email will have options for [...] "Yes", [...] "No", or [...] "Maybe". Privacy settings allow the user to define the levels of public visibility of the entire calendar or individual events. Although the calendar defaults to showing users event times in their local time, users can specify a different time zone for an event. Users can enable or disable the visibility of special calendars, including a Birthdays calendar, that automatically retrieves dates of births from a user's Google contacts and displays the dates on a yearly basis, and a Holidays calendar, a country-specific calendar featuring dates of special occasions.|$|E
5000|$|Powerful data triggers, event handlers, and <b>push</b> <b>notification.</b>|$|E
5000|$|Apple <b>Push</b> <b>Notification</b> Service - Send over-the-air alerts, such as news updates {{or social}} {{networking}} status changes, using Apple's <b>Push</b> <b>Notification</b> service to applications that support APNS. APNS allows Mac OS X Lion and iOS clients to receive push changes to {{items such as}} mail, calendar and contacts from a configured OS X Lion Server.|$|E
5000|$|Re-engageable - Make re-engagement easy through {{features}} like <b>push</b> <b>notifications.</b>|$|R
5000|$|Support for the Android Cloud to Device Messaging (C2DM) service, {{enabling}} <b>push</b> <b>notifications.</b>|$|R
50|$|AppArmor's safety apps include {{features}} such as <b>push</b> <b>notifications,</b> location tracking, and click-to-call capability.|$|R
5000|$|A <b>push</b> <b>notification</b> is {{a message}} that is [...] "pushed" [...] from backend server or {{application}} to user interface, e.g. (But not limited to) mobile applications and desktop applications. It is more user experience specific which is different from Push technology, which pushes the requests between components such as server to server communication. A common scenario of <b>push</b> <b>notification</b> is the client application pops up a message in front of application's user information, along with the alert sounds. The notification could also be coupled with images and hypertext link in some cases. Via interacting with the <b>push</b> <b>notification</b> it usually brings up the client applications to the front.|$|E
50|$|While <b>push</b> <b>notification</b> comes, it {{may also}} play alert sounds to attract user's attention.|$|E
5000|$|... toast {{notifications}} sent by apps and app developers {{using the}} Microsoft <b>Push</b> <b>Notification</b> Service.|$|E
40|$|This thesis {{deals with}} the {{development}} of application for sending <b>push</b> <b>notifications</b> using the PHP Symfony framework. The text is logically divided into two main parts. The first part is theoretical and explains what <b>push</b> <b>notifications</b> are, what is their current use and what is their history. One of the chapters of this section is an introduction and overview of services used for sending <b>push</b> <b>notifications,</b> including an explanation how these services work. The second part is practical and deals with design and development of the application. At first there are requirements that are placed on the application, followed by designing by using a use case diagram, domain model and wireframes of user interface. The next chapter describes the most important tools and technologies used for development. The final chapter discusses the implementation itself and represents the final product. The output of this work is a web application used for sending <b>push</b> <b>notifications</b> that will be used for internal needs of software company...|$|R
50|$|<b>Push</b> <b>notifications</b> enable {{government}} officials to alert residents of ongoing events, emergency alerts, and status updates.|$|R
50|$|YouTube Data API (v3) {{supports}} <b>push</b> <b>notifications</b> via PubSubHubbub {{instead and}} no longer has SUP section.|$|R
50|$|The {{marketing}} channels supported by Optimove include email, SMS, mobile <b>push</b> <b>notification,</b> website/app pop-ups, Facebook Custom Audiences and Google Ads.|$|E
50|$|Pass {{changes can}} be pushed via the Apple <b>Push</b> <b>Notification</b> Service by the pass provider, or {{manually}} updated by the user themselves.|$|E
5000|$|Update: In May 2016 the app {{received}} an update that now provides <b>push</b> <b>notification</b> to help users manager their toll tag account ...|$|E
50|$|On November 21, 2013, App.net {{announced}} Broadcast, a way {{for users}} of the App.net service to send and receive <b>push</b> <b>notifications</b> about the things they care about. These <b>push</b> <b>notifications</b> are sent through the App.net app on iPhone or Android. As part of the freemium model Broadcast is free {{to members of the}} App.net service with channel analytics available to App.net users with a developer-tier account.|$|R
5000|$|Mobile Engagement {{collects}} {{real-time analytics}} that highlight users’ behavior. It also provides <b>push</b> <b>notifications</b> to mobile devices.|$|R
50|$|Version 4 was {{released}} in early 2016, adding support for content blocking extensions, service workers and <b>push</b> <b>notifications.</b>|$|R
5000|$|Windows <b>Push</b> <b>Notification</b> Service (commonly {{referred}} to as Windows Notification Service or WNS) is a notification service developed by Microsoft for all devices running Microsoft Windows platforms. It allows for developers to send push data ("toast" [...] and [...] "tile" [...] updates) to Windows and Universal Windows Platform applications which implement the feature. Designed as a successor to the Microsoft <b>Push</b> <b>Notification</b> Service, it was first supported on Windows 8 and subsequently on Windows Phone 8.1 upon its release.|$|E
5000|$|<b>Push</b> <b>notification</b> {{is usually}} {{used for the}} {{applications}} to bring information to the user for their attention.The messages could fall into the following categories: ...|$|E
50|$|The Windows <b>Push</b> <b>Notification</b> Service (WNS) was {{designed}} as a successor to the Microsoft <b>Push</b> <b>Notification</b> Service (MPNS), which was only supported natively on the Windows Phone 8 Operating System. Developers can still use the MPNS on apps that are installed on newer versions of Windows Mobile (Windows Phone 8 or Windows Phone 8.1), but only if the Windows application was already registered to use the MPNS and has been converted to a Microsoft Silverlight application and modified to re-target the new platform.|$|E
50|$|GameThrive is a plugin and {{platform}} as {{a service}} to send <b>push</b> <b>notifications</b> to iOS and Android devices.|$|R
50|$|A {{mobile app}} for iOS and Android devices with <b>push</b> <b>notifications</b> and payment {{features}} {{has also been}} made available.|$|R
5000|$|... 2014 - Opsview Mobile - New {{release of}} iOS app, and an entirely {{redesigned}} android app launched, supporting <b>push</b> <b>notifications.</b>|$|R
5000|$|DronaHQ is an {{enterprise}} mobility platform {{that comes with}} a thick middleware on the backend and a robust thick client as hybrid app. The platform has an inbuilt content management system (CMS), user management, and <b>push</b> <b>notification</b> offered as a service through APIs. The platform allows {{an enterprise}} to scale the app by plugging in HTML5 based hybrid apps which can use its APIs {{to take advantage of the}} native features on mobile as well as backend features of <b>push</b> <b>notification,</b> user management, analytics, etc.|$|E
50|$|The Anna {{operating}} system update gave Communicator support (which is {{usually reserved for}} E-Series devices). There was also a new <b>push</b> <b>notification</b> API and a corresponding app.|$|E
50|$|According to mobile {{marketing}} company Leanplum, Android sees open rates {{twice as}} high as those on iOS. Android sees open rates of 3.48 percent for <b>push</b> <b>notification,</b> versus iOS which has open rates of 1.77 percent.|$|E
50|$|Airpush has {{received}} criticism for utilizing <b>push</b> <b>notifications.</b> In response, Airpush introduced options, which required end-users to opt into its service.|$|R
5000|$|Mobile Applications: Smartphone-based {{mobile apps}} contain {{several types of}} {{messages}}. <b>Push</b> <b>Notifications</b> are direct messages sent to a user either automatically {{or as part of}} a campaign. They include transactional, marketing, geo-based, and more. Rich <b>Push</b> <b>Notifications</b> are full HTML <b>Push</b> <b>Notifications.</b> Mobile apps also contain Interactive ads that appear inside the mobile application or app; Location-Based Marketing: marketing messages delivered directly to a mobile device based on the user's location; QR Codes (quick-response barcodes): This is a type of 2D barcode with an encoded link that can be accessed from a smartphone. This technology is increasingly being used for everything from special offers to product information. Mobile Banner Ads: Like standard banner ads for desktop Web pages but smaller to fit on mobile screens and run on the mobile content network ...|$|R
50|$|An {{official}} app for the iOS {{was released}} and features support for all IRC commands, a built-in browser, <b>Push</b> <b>notifications</b> and other features.|$|R
