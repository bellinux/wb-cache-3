8|14|Public
50|$|This defined that a <b>pulldown</b> <b>menu</b> {{system should}} {{be at the top of}} the screen, status bar at the bottom, {{shortcut}} keys should stay the same for all common functionality (F2 to Open for example would work in all applications that followed the SAA standard). This greatly helped the speed at which users could learn an application so it caught on quick and became an industry standard.|$|E
50|$|The product offers {{three primary}} types of views — phone book views, {{calendar}} views, and notepad views. Central to the program's design is an outlining {{structure and the}} ability to easily manipulate information regardless of in which view it was entered. Multiple notepad, calendar, and phonebook views can be opened, and each item seen in each view can be a collapsible outline, with each line assignable to folders/categories which can themselves be their own views, text field, <b>pulldown</b> <b>menu,</b> calendar date (including repeating date), or phonebook entry.|$|E
5000|$|In {{addition}} to touchscreen interface, there are physical and silkscreen buttons {{that can be}} used to activate programs or functions. On the silkscreen there are eight buttons: four large icons and four on the edges of the silkscreen writing area. With the factory default settings the large icons activate the following functions: [...] "home" [...] (House Icon) takes the user to the home applications menu, [...] "menu" [...] (pulldown icon) activates the <b>pulldown</b> <b>menu,</b> HotSync (the two arrows icon) connected the computer and the Palm Pilot and syncs information between the two, [...] "find" [...] (magnifying glass icon) brings up a search dialogue which allows the user to search all files on the handheld. The four smaller buttons are at each corner of the writing area and have the following default functions: Clock (clock icon) brings up the Date and Time briefly, then reverts to the current program, Contrast (Circle icon: half black, half white) allows the user to adjust the contrast and brightness of the display, Keyboard (ABC Icon) brings up an on-screen keyboard that allowed the user to [...] "type" [...] using the stylus, Number Board (123 icon) brings up the keypad on-screen keyboard which is used in much the same way as the letters keyboard.|$|E
50|$|Computer-based editing {{can involve}} very {{frequent}} use of cut-and-paste operations. Most software-suppliers provide several methods for performing such tasks, and this can involve (for example) key combinations, <b>pulldown</b> <b>menus,</b> pop-up menus, or toolbar buttons.|$|R
50|$|Through <b>pulldown</b> <b>menus,</b> {{keyboard}} shortcuts, {{and extensive}} editing functions, Cream {{tries to make}} Vim more approachable for novice users and adds features for those more experienced. These are provided through Vim's extensibility, without any special customizations to Vim itself.|$|R
40|$|This {{document}} {{gives the}} details of a Graphical User Interface(GUI) developed for a CFD (Computational Fluid Dynamics) code on an INDY workstation using X/Motif Programming. The interface integrates the various modules using <b>pulldown</b> <b>menus,</b> popup, dialog boxes, pushbuttons amp; windows to provide interaction with the user. The package is basically a shell around the core module written in FORTRAN...|$|R
5000|$|Another early {{example of}} the boss key is in the IBM PC version of Asylum, which clears the screen when F9 is pressed. Certain games have taken {{the idea of the}} boss key and used it to comic effect. Infocom's adult-themed Leather Goddesses of Phobos (only the IBM PC version) had a boss key which would hide the game and show a screen {{designed}} to look like a Cornerstone database view. Upon closer inspection, however, the screen was not exactly boss safe, being populated with order info on rather ridiculous adult items, including an [...] "inflatable milkman". Sierra On-Line's comedy/sci-fi adventure game Space Quest III had a so-called boss key available from the game's <b>pulldown</b> <b>menu.</b> However, when the user selected it, the screen would cut to black and inform the user that his or her boss wouldn't be happy if he or she knew how long the user had been playing the game. It then displayed the total elapsed game time. The first few games in Sierra's Leisure Suit Larry series included a boss key in the pulldown menus (shortcut usually Ctrl+B). However, when this is used, it results in an instantaneous game over with the first game saying [...] "Sorry, but you'll have to restore your game; when you panic, I forget everything!" [...] The computer submarine game, GATO, when ESC was clicked, brought up a Lotus 1-2-3 type spreadsheet screen.|$|E
40|$|The {{research}} {{resulted in}} information system {{that aims to}} replace the system recording and management data from manual to computerized, in order to overcome the problems that had frequently occured, related to the inability to provide the required information quickly, accurately and timely. With {{the presence of the}} hospital information system, now the hospital was able to get the necessary information immediately, such as : purchase report, Sales report, stock report and stock card. The information system is designed by using data flow diagram method and coded by using visual basic 6. 0 programming language and had single user access. The entire process, such as : inputing data. Printing Report and backup data are collected by using <b>pulldown</b> <b>menu.</b> It is intended, so that user can easily access any desired process...|$|E
40|$|Selecting a {{menu item}} in a {{cascading}} pull-down menu {{is a frequent}} but time consuming and complex GUI task. This paper describes an approach aimed to support the user during selection in cascading pull-down menus when using an indirect pointing device. By enhancing such a cascading <b>pulldown</b> <b>menu</b> with “force fields”, the cursor is attracted toward a certain direction, e. g. toward the right hand side within a menu item, which opens up a sub-menu, making the cursor steering task easier and faster. The experiment described here shows that the force fields can decrease selection times, on average by 18 %, when a mouse, a track point, or touch pad is used as input device. The results also suggest that selection times in cascading pull-down menus can be modeled {{using a combination of}} Fitts ’ law and the steering law. The proposed model proved to hold for all three devices, in both standard and in enhanced cascading pull-down menus, with correlations better than r 2 = 0. 90. ACM Classification...|$|E
40|$|Electronic system acquires, {{controls}} processing of, {{and displays}} data from experiments on propagation of phase-coherent radio signals at frequencies of 12, 20, and 30 GHz. Acquisition equipment coordinates flow {{of data from}} multiple input channels to computer. Software provides for multi-tasking and for interactive graphical displays, including easy-to-use windows and <b>pulldown</b> <b>menus</b> with mouse input. Offers outstanding accuracy; acquires and displays data and controls associated equipment, all in real time...|$|R
50|$|UTOPIA's CINEMA (Colour INteractive Editor for Multiple Alignments), a {{tool for}} Sequence Alignment, is the latest {{incarnation}} of software originally developed at The University of Leeds to aid the analysis of G protein-coupled receptors (GPCRs). SOMAP, a Screen Oriented Multiple Alignment Procedure {{was developed in the}} late 1980s on the VMS computer operating system, used a monochrome text-based VT100 video terminal, and featured context-sensitive help and <b>pulldown</b> <b>menus</b> some time before these were standard operating system features.|$|R
40|$|The present paper {{discusses}} {{strengths and}} weaknesses of commercially available Capture-and-Replay GUI testing tools (CR-Tools) and presents a pragmatic and economic approach for testing Graphical User Interfaces using such tools. Today's software systems usually featured with Graphical User Interfaces (GUI's). Because of the varied possibilities for user interaction and the number of control elements (buttons, <b>pulldown</b> <b>menus,</b> toolbars, etc.) available with GUI's, their testing is extremely time-consuming and costly. Manual testing of GUI's is labor-intensive, frequently monotonous, and not well liked by software engineers or software testers. A promising remedy is offered by automation[3], and several tools[3] for computer-based testing of GUI's are already commercially available. 1...|$|R
40|$|Figure 1 : Left: Finger-Count Shortcuts: the non-{{dominant}} hand (NDH) selects the <b>pulldown</b> <b>menu</b> in the menubar {{while the}} dominant hand (DH) selects the item. Favorite Menus (resp. items) are selected {{according to the}} number of fingers of the NDH (resp. DH) that are pressed on the surface. Right: Radial-Stroke Shortcuts: at least two fingers of the NDH are pressed to activate the menubar mode while one finger of the DH performs a multi-stroke radial gesture. We propose Radial-Stroke and Finger-Count Shortcuts, two techniques aimed at augmenting the menubar on multitouch surfaces. We designed these multi-finger two-handed interaction techniques in an attempt to overcome the limitations of direct pointing on interactive surfaces, while maintaining compatibility with traditional interaction techniques. While Radial-Stroke Shortcuts exploit the wellknown advantages of Radial Strokes, Finger-Count Shortcuts exploit multi-touch by simply counting the number of fingers of each hand in contact with the surface. We report the results of an experimental evaluation of our technique, focusing on expert-mode performance. Finger-Count Shortcuts outperformed Radial-Stroke Shortcuts in terms of both easiness of learning and performance speed. Author Keywords Menu techniques, multi-touch, multi-finger interaction...|$|E
40|$|Computer disk is unreadable. Soil {{conservation}} {{is an important}} activity for sustainable, productive landuse. To ensure sound effective soil conservation planning, {{the people who are}} involved in this activity - the planners and the decision makers - should know (among other things) how best to use a land resource inventory database, which has been stored in a computer. Using Geographic Information Systems (GIS) to analyse such data is a technique which is being widely advocated. Unfortunately, most GIS computer programs are too difficult for the people like soil conservation planners who usually have little knowledge of computers. To help them understand GIS and then use GIS for their planning, a user friendly interface to the GIS was created. Two systems were created for the Pijiharjo sub-watershed, Indonesia; one with a popup menu, the other with a <b>pulldown</b> <b>menu.</b> Both interfaces were created using the SML (Simple Macro Language) command which is available under pc ARC/Info version 3. 4 D Plus. Although they looked different to the user, both used the same commands to execute the various operations. Once the initial design was completed, an evaluation was held to check whether the design was satisfactory from the user's point of view. The result of the evaluation showed that both systems were simple and easy to understand. However, there were some aspects that should be revised, such as the HELP facility. Similar databases from other areas could be analysed using these interfaces with the only requirement being a modification to the introductory remarks. Ideas for the future development of such systems are also discussed...|$|E
40|$|This paper {{describes}} {{the approach of}} the University of Texas at Arlington (UTA) to ensuring that all students have basic competence in computer use. It {{describes the}} development and implementation of the UTA computer proficiency examination. UTA students currently have two options. They may take the computer proficiency course designated in their major department or they may take the UTA Computer Proficiency Examination. The test is a performance-based, or authentic, assessment that is a modified combination of product-oriented and portfolio assessment. Rather than measuring a student's ability to memorize keystrokes and <b>pulldown</b> <b>menus,</b> it is a measure of a student's ability to use the tools available in order to perform meaningful, real-life tasks, although in a proctored environment that makes it an abbreviated version of a portfolio. The five test components are: word processing, spreadsheets, Internet research and evaluation, e-mail, and online library use. A student who fails a component may take it again 6 week...|$|R
40|$|We {{present a}} novel {{approach}} to HTML form abstraction, which we call formlets. A formlet hides the underlying representation of a data type. For instance, a date formlet may allow a user to enter a date as a single text field, or separate fields for day, month, and year, {{or a combination of}} <b>pulldown</b> <b>menus,</b> or a custom JavaScript calendar widget; any consumer of the data from the form would see only the abstract data type Date. Remarkably, this form of abstraction is unsupported in almost all web frameworks, and not fully supported in any web framework of which we are aware. Formlets are defined in terms of Conor McBride’s idioms (also called applicative functors), a program structuring technique halfway between Moggi’s monads and Hughes’s arrows. We have implemented formlets in the Links programming language. The core functionality is implemented entirely in library code. In addition we offer syntactic sugar which makes formlets particularly easy to use. We show how to extend formlets to support validation by composing the underlying idiom with an additional idiom...|$|R
40|$|We provide web {{forms to}} Turkers (through REST API) • We may give Turkers a qualifying/training test • Turkers choose tasks to {{complete}} – We {{have no control}} on assignment of tasks – Different numbers of annotations per annotator • Turkers fill out a form per task and submit • We pay Turkers through Amazon • We get results from Amazon in a CSV spreadsheetCase 1 : Named EntitiesNamed Entities Worked • Conveying the coding standard – official MUC- 6 standard dozens of pages – examples are key • Fitts’s Law – time to position cursor inversely proportional to target size – highlighting text: fine position + drag + position – <b>pulldown</b> <b>menus</b> for type: position + pulldown + select – checkboxes for entity at a time: fat target clickDiscussion: Named Entities • 190 K tokens, 64 K capitalized, 4 K person name tokens – 4 K / 190 K = 2. 1 % prevalence of entity tokens • 10 annotators per token • 100 + annotators, varying numbers of annotations • Less than a week at 2 cents/ 400 tokens (US$ 95) • Aggregated Turkers better than LDC dat...|$|R
40|$|Approved {{for public}} release, {{distribution}} unlimitedThe Computer Aided Prototyping System (CAPS) {{was created to}} make the software development cycle more efficient. CAPS provides a graphics editor and a syntax-directed editor (SDE) for users to enter prototypes' specifications. The major problem: the user must have a good knowledge of the Prototyping Systems Description Language (PSDL) program syntax {{in order to use}} the SDE. Such a requirement imposes a very steep learning curve on a new CAPS user. The challenge was to minimize the time a user needs to spend in order to complete a development without extensive knowledge of other tools like PSDL and SDE. The solution is to redesign and implement a new graphics editor to allow the user to enter all PSDL specifications via the graphics editor with hierarchical <b>pulldown</b> <b>menus.</b> The approach taken was to first determine where to start and what type of language and graphic tools should be used in combination to give the ultimate results. There choices were TAEplus, Motif, and the Idraw from Stanford University. Idraw was chosen because of its design, capabilities, and user friendliness. The major contribution of this thesis is a powerful and user friendly graphics editor to rapidly construct a prototype of a large real-time system. The new CAPS graphic editor has been evaluated by members of the CAPS user group and early feedback shows that the new editor is a truly usable tool. SDE can now take advantage of this graphics editor to enhance the protyping capabilities of CAPS. U. S. Army (USA) autho...|$|R
40|$|Stress {{corrosion}} cracking (SCC) in the blade attachment region of low-pressure (LP) turbine rotors {{has emerged as}} one of the most significant problems affecting steam turbine rotors today. In response to an expressed utility need for a life prediction tool, EPRI has sponsored the development of an easyto-use PC-based computer program, LPRimLife, which enables utility personnel to perform a rapid remaining life assessment of LP rotors with known or suspected cracking. The first phase of development, incorporating the methodology for evaluating cracking in GE dovetail (straddle-mount) attachments, is complete. The next phase, to address cracking in Westinghouse axial-entry attachments in currently under way. The LPRimLife computer code, developed for EPRI by Structural Integrity Associates, combines the necessary stress analysis, material property data and fracture mechanics algorithms with applicable material degradation data into an integrated methodology to assess the remaining life of LP rotors with rim-attachment cracking. Features built-in to the PC-based code include: • easy-to-use Windows graphical user interface with <b>pulldown</b> <b>menus</b> and dialog boxes • built-in library of stress solutions which can be easily expanded to incorporate user-specific attachment geometries • a fracture mechanics stress intensity factor calculator for arbitrary crack aspect ratios • material properties module with built-in fracture toughness data • an algorithm to account for redistribution of load between top, middle and bottom hooks with cracking • an algorithm to check for overload of a cracked ligament in addition to fracture toughness limit • SCC threshold to simulate crack arrest if stress intensity factors drop below the threshold • deterministic and probabilistic calculation options and built-in graphics and plotting capability to view and modify presentation of results. With comprehensive on-line help, the program facilitates rapid life assessments and parametric studies to be performed by nonexperts within a short time of being introduced to the software...|$|R
40|$|Increased global {{competition}} is fueling a movement towards semi-autonomous or "self-managing" business teams. At the same time, {{the ability to}} interconnect computers has provided a technological base for increased computer support of business teams. A flexible system should accommodate {{a wide variety of}} group and task characteristics in both face-to-face and geographically-dispersed environments. An architecture for a system named TEAMWORK is developed that provides flexible support for business teams. System functions are organized into six configurable components, audio processing, video processing, text processing, graphic processing, data management, and numeric processing, collectively addressing a wide spectrum of group tasks. TeamWriter is highly configurable text processing tool implemented to represent and partially evaluate one aspect of TEAMWORK's architecture. <b>Pulldown</b> <b>menus</b> and picture buttons allow access functions. Support {{for a wide variety of}} team access protocols, real- and non-real-time work styles, multi-user document writing, brainstorming, idea consolidation, visual group dynamics, and more is included. Document changes appended to a centrally located server file maintain a linear revision history. Evaluation session indicated participants especially liked TeamWriter's multiuser document writing capabilities, picture buttons, authorship provisions, and multiple configurations. Suggestions for enhancing brainstorming and idea consolidation capabilities are supported by the underlying set of configurable functions and involve adding new interface configurations. Sessions also demonstrated that field testing will be needed to thoroughly evaluate TeamWriter; participants were unable to explore all of TeamWriter's features in the one and a half hour long evaluation sessions. Research contributions include a comprehensive team collaboration support system architecture, an implemented configurable text processing module suited for further evaluation, implementation methods, and insight into the functional requirements of a team collaboration support system. Future research directions include field testing TeamWriter, implementing and evaluating the numeric processing module, and investigating non-hierarchical, iconic interfaces to TeamWriter section. As audio, video, and high speed LAN technology become available, prototypes investigating design and implementation strategies for audio, video, and graphic modules will be built...|$|R
40|$|The NASA Computer Graphics Pilot Project was {{undertaken}} {{to enhance the}} quality control, productivity and efficiency of mission support operations at the Goddard Operations Support Computing Facility. The Project evolved into a set of demonstration programs for graphics intensive simulated control room operations, particularly {{in connection with the}} complex space missions that began in the 1980 s. Complex mission mean more data. Graphic displays are a means to reduce the probabilities of operator errors. Workstations were selected with 1024 x 768 pixel color displays controlled by a custom VLSI chip coupled to an MC 68010 chip running UNIX within a shell that permits operations through the medium of mouse-accessed <b>pulldown</b> window <b>menus.</b> The distributed workstations run off a host NAS 8040 computer. Applications of the system for tracking spacecraft orbits and monitoring Shuttle payload handling illustrate the system capabilities, noting the built-in capabilities of shifting the point of view and rotating and zooming in on three-dimensional views of spacecraft...|$|R
40|$|One of {{the major}} {{drawbacks}} of traditional computing is that it casts business processes in concrete, in other words in hard-to-change hardware and software. By modularizing systems into client and server portions, new technology and new software components can be added more easily without affecting {{the rest of the}} system, as well as altering the user perception of the interface. On the other hand, microcomputer based interfaces provide low-cost of entry and relative independence from centralized information systems (IS) operations. Modern graphical user interfaces and menu selection by mouse clicks have become the common method for working with <b>pulldown</b> and pull-up <b>menus,</b> in addition to dialogue boxes containing radio buttons, object boxes, text-entry fields, and scrollable list of choices. The graphical environment allows more information to be conveyed in the menu through the use of modern graphical user interfaces as compared to mainframe based static interfaces. The usability test conducted by Burkhart, Hemphill, and Jones (1994) comparing a static based user interface to a GUI interface showed an improved performance of 56 % over static based user interface...|$|R

