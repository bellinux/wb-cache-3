10000|10000|Public
5|$|A {{consumer}} console port of {{the game}} was released for the PS2 on August 24, 2006 by <b>Prototype.</b> A version playable on FOMA mobile phones was released by <b>Prototype</b> through VisualArt's Motto on November 24, 2006.< A limited edition version of Planetarian developed by <b>Prototype</b> playable on the PlayStation Portable (PSP) was available for purchase between February 28 and March 1, 2009 at Key 10th Memorial Fes, an event held in commemoration of Key's ten-year anniversary. A downloadable version of the PSP release via the PlayStation Store was released by <b>Prototype</b> on August 24, 2009. <b>Prototype</b> again sold the PSP version at their <b>Prototype</b> Fan Appreciation 2010 event on May 30, 2010. The PSP version was re-released on May 12, 2011 as a fundraising release for the 2011 Tōhoku earthquake and tsunami. A mobile app version playable on Android and iOS devices was released on November 30, 2011. An updated iOS version released in January 2013 includes support for English readers.|$|E
5|$|Delayed by {{the late}} {{delivery}} of its propeller, the first <b>prototype</b> was rolled out at Brough in February 1947 and then taken by road to RAF Leconfield where it made its maiden flight on 1 April that year. All three prototypes were completed {{by the end of}} September and the third <b>prototype</b> had been modified to reduce the outer-wing dihedral to 3 degrees. Both the second and third prototypes remained unflown when the Ministry of Supply ordered that flying be ceased and work on the aircraft be stopped. Later in the month, however, the third <b>prototype</b> was allocated to tests of powered aileron controls, as testing of the first <b>prototype</b> had shown that while adequate at cruise speed, the ailerons were heavy both at low and high speed. The second <b>prototype</b> was allocated to structural testing.|$|E
5|$|Despite {{reports that}} a <b>prototype</b> began taxiing tests on 30 June 1948, {{it is now clear}} that no <b>prototype</b> was {{actually}} built and that only manufacturing of the tailplane may have begun.|$|E
40|$|Researchers have {{provided}} {{a number of different}} definitions, process models and classificatory schemes for both <b>prototypes</b> and <b>prototyping</b> approaches over the past two decades. Because there tends to be some confusion in the use of <b>prototyping</b> terms, in this review we attempt to place <b>prototyping</b> in context and delineate evolutionary <b>prototyping</b> approaches from other kinds development approaches that may have <b>prototypes</b> and <b>prototyping</b> strategies embedded within them. We consider what <b>prototypes</b> are, what the <b>prototyping</b> process is, and how software development approaches adopt <b>prototyping</b> for exploration, experiment or evolution. We provide a classification of the software development approaches that include <b>prototyping</b> of some kind. Within this discussion we review experimental <b>prototyping,</b> exploratory <b>prototyping</b> and evolutionary development...|$|R
40|$|This paper {{discusses}} {{the use of}} HTML for creating early <b>prototypes</b> of interactive systems. The HTML <b>prototyping</b> technique uses an iterative approach {{for the creation of}} early <b>prototypes.</b> Low fidelity <b>prototypes</b> are iteratively refined into higher fidelity versions. The <b>prototypes</b> are easily accessible to project stakeholders. We evaluate the HTML <b>prototyping</b> technique with respect to criteria published in the CHI community. Keywords Early <b>Prototyping,</b> HTML, Iterative Design, Usability INTRODUCTION There is a growing debate in the HCI community about the comparative virtues of low and high fidelity <b>prototypes.</b> Low fidelity <b>prototypes</b> are more useful during the early <b>prototyping</b> phase where a large number of alternatives need to be explored. High fidelity <b>prototypes</b> on the other hand, help designers and customers better visualize the interface. An ideal technique would allow the designers to specify just enough detail to make and evaluate key design decisions regarding functionality, [...] ...|$|R
40|$|Rapid {{software}} <b>prototyping</b> is an iterative {{software development}} methodology {{aimed at improving}} the analysis, design, and development of proposed systems. This paper describes rapid <b>prototyping</b> at the system and 'software levels and reviews the characteristics of computeraided <b>prototyping.</b> We then describe the state-of-the-art in rapid <b>prototyping</b> and discuss technologies that improve the future outlook for <b>prototyping,</b> such as <b>prototyping</b> languages, software reuse, and designer interfaces. To add some cohesion to the concepts, we describe {{the characteristics of a}} computer-aided rapid <b>prototyping</b> system. Finally, we provide summaries of the outstanding papers that comprise the rapid <b>prototyping</b> mini-track. This research {{was supported in part by}} the National Science Foundation under grant #CCR- 9058453...|$|R
5|$|From 1889 to 1960, {{the meter}} {{was defined as}} the length of a platinum-iridium (90:10) alloy bar, known as the International <b>Prototype</b> Meter bar. The {{previous}} bar was made of platinum in 1799. The International <b>Prototype</b> Kilogram remains defined by a cylinder of the same platinum-iridium alloy made in 1879.|$|E
5|$|I-200 : MiG-1 <b>prototype,</b> three made.|$|E
5|$|Il-40P – Second <b>prototype</b> {{and five}} {{production}} aircraft.|$|E
40|$|Both role incongruency theory (Eagly & Karau, 2002) and {{the lack}} of fit model by Heilman (1983) suggest that the underrepresentation of women in {{leadership}} positions {{can be explained by the}} male-typedness of leader <b>prototypes.</b> We examine how women and men project their gender <b>prototypes</b> onto leader <b>prototypes.</b> We found initially that men more so than women projected their gender <b>prototypes</b> on leader <b>prototypes.</b> For men there is more of an overlap between a prototypical men and a prototypical leader than there is an overlap between a prototypical woman and a prototypical leader. Women, however, do not engage in so called relative ingroup projection. In the current study, we further decompose this finding asking whether the gender difference in relative ingroup projection on leadership <b>prototypes</b> is driven by female <b>prototypes,</b> male <b>prototypes,</b> and/or leader <b>prototypes.</b> We further examine to what extent this gender difference is more manifested on positively valenced or negatively valenced attributes of <b>prototypes.</b> Our findings show that, while women and men have similar <b>prototypes</b> of leaders and men on both positively and negatively valenced attributes, men relative to women have less favorable <b>prototypes</b> of women but only on positively valenced attributes. An interesting implication is that efforts to address gender differences in the projection of gender <b>prototypes</b> onto leader <b>prototypes</b> should focus less on leader <b>prototypes</b> and more on the female <b>prototypes.</b> Theoretically, our findings allude to the importance of distinguishing between more subtle (evaluating the outgroup less positively on positive properties) and less subtle forms (evaluating the outgroup more negatively on negative properties) of outgroup derogation...|$|R
40|$|The art of <b>prototyping</b> {{has evolved}} {{from the use of}} pen-and-paper layout charts to being the basis for Evolutionary <b>Prototyping,</b> a full {{methodology}} for developing software systems. While <b>prototyping</b> is discussed in introductory systems analysis and design courses, students gain a better appreciation of the technique by actually developing different types of <b>prototypes.</b> For example, <b>prototyping</b> is an excellent vehicle for demonstrating the overlapping of phases in the SDLC. This paper reviews the ways in which <b>prototyping</b> may be used in the system development life cycle and then presents examples of how <b>prototyping</b> can be infused into an undergraduate course in systems analysis and design. Students can develop discovery and user-interface <b>prototypes</b> using HTML and JavaScript modules. The development of functional <b>prototypes</b> using a scripting language and MS Access is also presented...|$|R
25|$|<b>Prototypes</b> and {{operative}} <b>prototypes.</b>|$|R
5|$|In Phase 3.1, the <b>prototype</b> activities, were {{completed}} in January 2004. The production installation commenced April 2004 with completion expected in 2009. In Phase 3.2, the Delta Modification <b>Prototype</b> activities {{were completed}} in May 2005. The Delta Modification Production installation {{is set to}} commence January 2006 with completion expected in 2009 (conducted in conjunction with HUG Phase 3.1 installations). CBR <b>Prototype</b> activities will commence February 2006 with completion expected January 2008. CBR Production installation is to begin July 2007 with completion expected in 2011, but will be dependent {{on the number of}} CBRs undertaken.|$|E
5|$|International Bureau of Weights and Measures (Bureau {{international}} des poids et mesures or BIPM) – {{an international}} metrology centre at Sèvres in France that has {{custody of the}} International <b>prototype</b> kilogram, provides metrology services for the CGPM and CIPM, houses the secretariat for these organisations and hosts their formal meetings. Initially its prime metrological purpose was a periodic recalibration of national <b>prototype</b> metres and kilograms against the international <b>prototype.</b>|$|E
5|$|Military {{designation}} of the <b>Prototype</b> Model 28 aircraft, three built.|$|E
50|$|<b>Prototypes</b> and {{operative}} <b>prototypes.</b>|$|R
40|$|This paper {{examines}} {{the suitability of}} Ada as a language for developing software <b>prototypes.</b> The differences between software <b>prototypes</b> and traditional engineering <b>prototypes</b> are discussed; the approaches to software <b>prototyping</b> are identified. Ada's potential as a language for <b>prototyping</b> is evaluated according to the writability, expressiveness, and flexibility of the language; Ada {{is found to be}} inadequate as a <b>prototyping</b> language because it lacks writability and expressiveness. Possible approaches to improving the expressiveness of the language are discussed...|$|R
40|$|Abstract According to the {{human-centered design}} process, <b>prototyping</b> is an {{essential}} element of user experience (UX) design. This literature review aims to provide an overview of user experience <b>prototyping</b> and answer the following questions based on previous literature: How does UX design benefit from <b>prototyping?</b> What kinds of <b>prototypes</b> and <b>prototyping</b> tools exist? In which phases of the UX design process is <b>prototyping</b> most valuable? This literature review reveals that <b>prototyping</b> increases the understanding of user needs and context, allows designers to explore and evaluate design ideas and communicate design decisions. Low-fidelity <b>prototypes</b> provide insight early in the design process when possible designs are explored and initial usability evaluations are conducted. High-fidelity and e. g. multi-fidelity <b>prototypes</b> can include more sophisticated interactive features and act as living specification for developers and other stakeholders. Low-fidelity <b>prototyping</b> tools are widely available and easy to use, while higher fidelity tools are often viewed as time consuming and more difficult to use...|$|R
5|$|One <b>prototype</b> {{originally}} {{known as}} a 300LR.|$|E
5|$|PP8 – Westland-built civil <b>prototype.</b>|$|E
5|$|PP9 – Agusta-built {{military}} utility <b>prototype</b> with rear-loading ramp.|$|E
50|$|Software <b>prototyping</b> {{has many}} variants. However, {{all of the}} methods are in some way based on two major forms of prototyping: {{throwaway}} <b>prototyping</b> and evolutionary <b>prototyping.</b>|$|R
40|$|Companies are {{increasingly}} forced to transform their technical innovations into fully developed products radidly. In addition to strategic approaches {{in order to}} reduce the time of product development (concurrent engineering), rapid <b>prototyping</b> has become a very effective means to speed up and improve product design and process planning. The introduction of CAD/CAM technologies offers the possibility to produce models and sample directly on the basis of CAD data, not in weeks or months as with conventional <b>prototyping</b> methods, but in only a matter of hours. Combined with rapid <b>prototyping</b> methods, subsequent techniques, particularly conventional casting methods, plastic vacuum casting and metal spray tooling hold potential for the rapid manufacturing of plastic <b>prototypes</b> in greater quantities or of metal <b>prototypes.</b> According to different demands resulting from the envisaged application of the <b>prototypes,</b> possibilities and limits of commercially available rapid <b>prototyping</b> techniques will be pointed out. The use of <b>prototypes</b> in product development and the conditions under which rapid <b>prototyping</b> technologies can lead to rapid product development will be presented. The Fraunhofer Rapid <b>Prototyping</b> Network, an alliance of seven Fraunhofer Institutes aiming at the technical, informational and organizational improvement of rapid <b>prototyping</b> will be introduced...|$|R
5000|$|Rapid <b>Prototyping</b> (precisely called Rapid Control <b>Prototyping,</b> RCP) ...|$|R
5|$|Production <b>prototype</b> with Boeing 502 turboprop; twenty {{built for}} evaluation.|$|E
5|$|<b>Prototype</b> model {{powered by}} McCulloch piston engine; two built.|$|E
5|$|<b>Prototype</b> of B-70. Two were built.|$|E
40|$|Rapid <b>prototyping</b> of domain-specific {{software}} {{requires a}} systematic software development methodology and userfriendly tools. Being both executable {{and easy to}} use, visual languages and their automatic generation mechanisms are highly suitable for software <b>prototyping.</b> This paper presents a software <b>prototyping</b> methodology based on the visual language generation technology, that allows visual <b>prototyping</b> languages to be specified and generated using an expressive graph grammar formalism. Executable <b>prototypes</b> and their verification and code generation are made possible by syntax-directed computations. The paper demonstrates this methodology through a <b>prototyping</b> example built on our current implementation. ...|$|R
40|$|This paper defines Rapid <b>Prototyping</b> {{as a new}} {{approach}} to reducing cycle times in product development, thus going beyond the view of Rapid <b>Prototyping</b> as a collective term only for the class of new, generative manufacturing technologies. In particular, the use of different categories of <b>prototypes</b> for the development of new products, and the organizational impact of Rapid <b>Prototyping</b> are shown to form a holistic framework for evolutionary product development. Depending {{on the extent to which}} the organizational principle of Rapid <b>Prototyping</b> is implemented, and depending on the individual utilization of specific <b>prototypes,</b> there may be a tremendous benefit in terms of the factors time, quality, and costs of the entire process. Furthermore, these benefits are not only due to the availability of physical <b>prototypes.</b> In all areas where virtual <b>prototypes</b> can provide answers to the core questions of a development process in the same manner as their physical counterparts, virtual <b>prototypes</b> perform at least as well (e. g., through reduced building time or cost reductions). Before the influence of <b>prototypes</b> on the development process is discussed, there will be some general remarks on classes of <b>prototypes</b> and purposes they are used for. The need for a new organisational form is then derived from the requirements of designing, manufacturing, and evaluating the described <b>prototypes,</b> with cooperation and the respective enabling technologies turning out to be the essentials to the success of Rapid <b>Prototyping</b> in product development...|$|R
40|$|We {{investigate}} {{the impact of}} Differential Evolution Binary Particle Swarm Optimization (DEBPSO) on the configuration of learning models used to classify the shape <b>prototypes</b> generated by hierarchical neural-network models of vision. Visual cortex inspired models of vision build a dictionary of shape <b>prototypes</b> represented as a feature vector which is then used for classification of difficult feature invariant recognition problems. We show that high performance on invariant object-recognition tasks can be improved upon by configuring the learning models used in the classification of the shape <b>prototypes</b> utilizing DEBPSO. When regarding imprinted and random <b>prototypes</b> with the evolutionary algorithm configured learning models we show that a larger improvement can be achieved on the imprinted <b>prototypes</b> than the random <b>prototypes.</b> These results show {{a better way of}} classifying the shape <b>prototypes</b> used by the hierarchical models of vision and that imprinted <b>prototypes</b> do contain more useful information than random <b>prototypes</b> that was previously underutilized by the un-configured learning models used in prior research. Computer Scienc...|$|R
5|$|<b>Prototype,</b> two {{aircraft}} built.|$|E
5|$|Second <b>prototype</b> with {{increased}} cockpit glazing and improved engine; one built.|$|E
5|$|Single-seat naval strike <b>prototype</b> for the French Navy, one built.|$|E
40|$|Purpose – The {{purpose of}} this paper is to propose a {{conceptual}} framework for <b>prototyping</b> outsourcing. Design/methodology/approach – This study provides an up-to-date literature review and an in-depth case study. Findings – This study identifies three factors (i. e. the degree of the <b>prototyping</b> to core competence, <b>prototyping</b> complexity, and supplier’s capability of providing knowledge and speed for <b>prototyping)</b> and three types of risks (i. e. losing control over suppliers, dependency on suppliers, and supplier’s lack of capabilities) for <b>prototyping</b> outsourcing decisions. Practical implications – This paper provides guidelines for new product development managers in order to mitigate the risks associated with outsourcing and achieve effective <b>prototyping.</b> Originality/value – This study provides a strategic outsourcing framework for <b>prototyping...</b>|$|R
3000|$|... aLow-fidelity <b>prototypes</b> {{are used}} to ‘demonstrate the general look and perhaps the feel of interface; they are not {{intended}} to show in detail how the application operates. These <b>prototypes</b> are created to communicate, educate, and inform, but not to train, test, or serve as a basis from which to code. Storyboard presentations and proof-of-concept <b>prototypes</b> fall into this category’ ([37], p. 78). In our research, we used storyboards and paper <b>prototypes</b> as low-fidelity <b>prototypes.</b>|$|R
5000|$|The next {{responsibility}} of many design engineers is <b>prototyping.</b> A {{model of the}} product is created and reviewed. <b>Prototypes</b> are either functional or non-functional. Functional [...] "alpha" [...] <b>prototypes</b> are used for testing; non-functional <b>prototypes</b> are used for form and fit checking. Virtual <b>prototyping</b> and hence for any such software solutions may also be used. This stage is where design flaws are found and corrected, and tooling, manufacturing fixtures, and packaging are developed.|$|R
