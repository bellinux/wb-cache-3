26|3|Public
2500|$|<b>Pingback,</b> {{a variant}} of trackbacks based on the ping {{notification}} mechanism ...|$|E
5000|$|<b>Pingback,</b> the XML-RPC based {{protocol}} that Webmention {{was modeled}} after.|$|E
5000|$|<b>Pingback,</b> {{a variant}} of trackbacks based on the ping {{notification}} mechanism ...|$|E
5000|$|A {{trackback}} {{allows one}} website to notify another about an update. [...] It {{is one of}} four types of linkback methods for website authors to request notification when somebody links to one of their documents. This enables authors to keep track of who is linking to their articles. Some weblog software, such as SilverStripe, WordPress, Drupal, and Movable Type, supports automatic <b>pingbacks</b> where all the links in a published article can be pinged when the article is published. The term is used colloquially for any kind of linkback.|$|R
2500|$|Blogosphere: The {{collective}} {{community of}} all blogs and blog authors, particularly notable and widely read blogs, {{is known as}} the blogosphere. Since all blogs are on the internet by definition, they may be seen as interconnected and socially networked, through blogrolls, comments, linkbacks (refbacks, trackbacks or <b>pingbacks),</b> and backlinks. Discussions [...] "in the blogosphere" [...] are occasionally used by the media as a gauge of public opinion on various issues. Because new, untapped communities of bloggers and their readers can emerge {{in the space of a}} few years, Internet marketers pay close attention to [...] "trends in the blogosphere".|$|R
5000|$|Webmention, {{a modern}} re-implementation of <b>PingBack</b> using HTTP and x-www-urlencoded POST data.|$|E
5000|$|<b>Pingback,</b> {{a similar}} {{protocol}} but more {{difficult as it}} requires for physical links ...|$|E
50|$|Webmention, an {{alternate}} {{implementation of the}} <b>pingback</b> protocol that avoids the complexities of xmlrpc.|$|E
50|$|Similar to <b>pingback,</b> Webmention {{is one of}} {{four types}} of linkbacks, but was {{designed}} to be simpler than the XML-RPC protocol that <b>pingback</b> relies upon, by instead only using HTTP and x-www-urlencoded content.. Beyond previous linkback protocols, Webmention also specifies protocol details for when a page that is the source of a link is deleted, or updated with new links or removal of existing links.|$|E
50|$|Wordpress {{changed a}} bit how the <b>pingback</b> feature works to {{mitigate}} {{this kind of}} vulnerability: the IP address that originated the <b>pingback</b> (the attacker address) started being recorded, and thus shown in the log. Notwithstanding, in 2016, <b>pingback</b> attacks continued to exist, supposedly because the website owners don't check the user agent logs, that have the real IP addresses. It has to be noted that, if the attacker {{is more than a}} script kiddie, he will know how to prevent his IP address being recorded, by, for example, sending the request from another machine/site, so that this machine/site IP address is recorded instead, and the IP logging then, becomes less worthy. Thus, it's still recommended to disable the pingbacks, to prevent attacking other sites (although this does not prevent being target of attacks).|$|E
5000|$|Refback, {{a similar}} {{protocol}} but easier than Pingbacks since the site originating the link doesn't {{have to be}} capable of sending a <b>Pingback</b> ...|$|E
5000|$|The <b>pingback</b> attacks {{consist of}} [...] "reflection" [...] and [...] "amplification": an {{attacker}} sends a <b>pingback</b> to a legitimate Blog A, but providing information of the legitimate Blog B (impersonation). Then, Blog A needs to check Blog B {{for the existence}} of the informed link, as it's how the <b>pingback</b> protocol works, and thus it downloads the page off Blog B server's, causing a reflection. If the target page is big, this amplifies the attack, because a small request sent to Blog A causes it to make a big request to Blog B. This can lead to 10x, 20x, and even bigger amplifications (DoS). It's even possible to use multiple reflectors, to prevent exhausting each of them, and use the combined amplification power of each to exhaust the target Blog B, being by overloading bandwidth or the server CPU (DDoS).|$|E
50|$|In March 2014, Akamai {{published}} a report about a widely seen exploit involving <b>Pingback</b> that targets vulnerable WordPress sites. This exploit led to massive abuse of legitimate blogs and websites {{and turned them}} into unwilling participants in a DDoS attack. Details about this vulnerability have been publicized since 2012.|$|E
50|$|A linkback is {{a method}} for Web authors to obtain {{notifications}} when other authors link {{to one of their}} documents. This enables authors to keep track of who is linking to, or referring to, their articles. The four methods (Refback, Trackback, <b>Pingback</b> and Webmention) differ in how they accomplish this task.|$|E
50|$|Any of {{the four}} terms—Linkback, Trackback, <b>Pingback,</b> or (rarely) Refback—might also refer colloquially to items within a section upon the linked page that display the {{received}} notifications, usually along with a reciprocal link; Trackback is used most often for this purpose. Also, the word Trackback is often used colloquially to mean any kind of Linkback.|$|E
5000|$|Ian [...] "Hixie" [...] Hickson is {{the author}} and {{maintainer}} of the Acid2 and Acid3 tests, HTML 5 specification, and the <b>Pingback</b> specification, and the early working draft of Web Applications 1.0. He {{is known as a}} proponent of web standards, and has {{played a crucial role in}} the development of specifications such as CSS. Hickson was a co-editor of the CSS 2.1 specification.|$|E
5000|$|Several linkback {{mechanisms}} exists, and {{are commonly}} used between blog systems, e.g. a [...] "response" [...] post in blog B about a post in blog A causes B's platform to send a <b>pingback</b> to be shown on the original blog A. These mechanisms are however generally limited in which structured information can be sent, and the notifications themselves do not form part of the decentralized web and {{may be difficult to}} consume by any third party application.|$|E
5000|$|A <b>pingback</b> {{is one of}} {{four types}} of linkback methods for Web authors to request {{notification}} when somebody links to one of their documents. This enables authors to keep track of who is linking to, or referring to their articles. Some weblog software and content management systems, such as WordPress, Movable Type, Serendipity, and Telligent Community, support automatic pingbacks where all the links in a published article can be pinged when the article is published. Other content management systems, such as [...] Drupal and Joomla, support pingbacks through the use of addons or extensions.|$|E
50|$|WordPress also {{features}} integrated link management; a search engine-friendly, clean permalink structure; {{the ability to}} assign multiple categories to posts; and support for tagging of posts. Automatic filters are also included, providing standardized formatting and styling of text in posts (for example, converting regular quotes to smart quotes). WordPress also supports the Trackback and <b>Pingback</b> standards for displaying links to other sites that have themselves linked to a post or an article. WordPress posts can be edited in HTML, using the visual editor, or using {{one of a number}} of plugins that allow for a variety of customized editing features.|$|E
50|$|Simon {{started his}} {{professional}} web development in 2000 as a web master and developer for the UK based website Gameplay, {{where he was}} instrumental in creating File Monster, a large games related file download site. In 2001 he left to attend the University of Bath. Whilst studying, he worked part-time for Incutio where he developed the Incutio XML-RPC Library, a popular XML-RPC library for PHP (used in WordPress and Drupal). During this time Simon started his web development blog. In developing the software for his blog, Simon built {{one of the first}} implementations of <b>Pingback.</b> Through his blog he was an early adopter and evangelist of OpenID.|$|E
5000|$|Geeklog has {{historically}} focused on [...] "performance, privacy, and security." [...] In March 2010, the Geeklog project slogan {{was changed to}} [...] "The secure CMS." [...] {{in an effort to}} more accurately reflect the differentiating features compared to other content management systems. Other Geeklog features include [...] "comments, polls, calendar, web links, content syndication, and more." [...] Geeklog supports the Trackback and <b>Pingback</b> standards as well as content syndication by way of the automatic publication of RSS Feeds. Geeklog (in a manner similar to Movable Type and pMachine) allows one to [...] "set fine-grained permission levels for each individual user." [...] Geeklog is also [...] "easily extensible via a modules API." ...|$|E
5000|$|Blogs mean {{many things}} to {{different}} people, ranging from [...] "online journal" [...] to [...] "easily updated personal website." [...] While these definitions are technically correct, they fail to capture the power of blogs as social software. Beyond being a simple homepage or an online diary, some blogs allow comments on the entries, thereby creating a discussion forum. They also have blogrolls (i.e. links to other blogs which the owner reads or admires) and indicate their social relationship to those other bloggers using the XFN social relationship standard. <b>Pingback</b> and trackback allow one blog to notify another blog, creating an inter-blog conversation. Blogs engage readers and can build a virtual community around a particular person or interest. Examples include Slashdot, LiveJournal, BlogSpot. Blogging has also become fashionable in business settings by companies who use software such as IBM Connections.|$|E
40|$|Abstract. In {{this paper}} we tackle {{some of the}} most {{pressing}} obstacles of the emerging Linked Data Web, namely the quality, timeliness and coherence as well as direct end user benefits. We present an approach for complementing the Linked Data Web with a social dimension by extending the well-known <b>Pingback</b> mechanism, which is a technological cornerstone of the blogosphere, towards a Semantic <b>Pingback.</b> It is based on the advertising of an RPC service for propagating typed RDF links between Data Web resources. Semantic <b>Pingback</b> is downwards compatible with conventional <b>Pingback</b> implementations, thus allowing to connect and interlink resources on the Social Web with resources on the Data Web. We demonstrate its usefulness by showcasing use cases of the Semantic <b>Pingback</b> implementations in the semantic wiki OntoWiki and the Linked Data interface for database-backed Web applications Triplify...|$|E
40|$|Web resources, such as publications, datasets, {{pictures}} and {{others can be}} directly linked to their provenance data, {{as described in the}} specification about Provenance Access and Query (PROV-AQ) by the W 3 C. On its own, this approach places all responsibility with the publisher of the resource, who hopefully maintains and publishes provenance information. In reality, however, most publishers lack incentives to publish the provenance of resources, even if the owner would like such information to be published. Currently, it is very intricate to link existing resources to new provenance information, either provided by the owner or a third party. In this paper, we present a solution for this problem by implementing a lightweight, read/write provenance query service, integrated with a <b>pingback</b> mechanism, following the PROV-AQ recommendation...|$|E
40|$|Online social {{networking}} {{has become one}} of the most popular services on the Web. However, current social networks are like walled gardens in which users do not have full control over their data, are bound to specific usage terms of the social network operator and suffer from a lock-in effect due to the lack of interoperability and standards compliance between social networks. In this paper we propose an architecture for an open, distributed social network, which is built solely on Semantic Web standards and emerging best practices. Our architecture combines vocabularies and protocols such as WebID, FOAF, Semantic <b>Pingback</b> and PubSubHubbub into a coherent distributed semantic social network, which is capable to provide all crucial functionalities known from centralized social networks. We present our reference implementation, which utilizes the OntoWiki application framework and take this framework as the basis for an extensive evaluation. Our results show that a distributed social network is feasible, while it also avoids the limitations of centralized solutions...|$|E
40|$|In our {{demonstration}} (with supportive poster) we want {{to present}} the Semantic Wiki application OntoWiki, which is an extensible tool for managing structured information in a collaborative, web-based environment. OntoWiki provides sophisticated means for navigating, visualising and author-ing of RDF-based Knowledge Bases. It serves and consumes Linked Data and comprises a comprehensive middleware API for building custom Semantic Web applications. We {{refer to it as}} a Wiki, since our focus is on simplicity, adaptability and collaboration. However, other than anno-tating text-based Wiki pages with a special syntax (as sug-gested by text-based Semantic Wiki approaches), OntoWiki uses RDF in the first place to represent information. For human users, OntoWiki allows to create different views on data, such as tabular representations or maps. For machine consumption it supports various RDF serialisations as well as RDFa, Linked Data and SPARQL interfaces. Since its introduction [1], the application has evolved into a frame-work for building Semantic Web applications [2] and was recently updated to support the collaboration across multi-ple domains and application via Semantic <b>Pingback</b> [3] and RDFauthor [5]. 1. DEMONSTRATION CONTENT OntoWiki can be used to author, manage and publish RDF-based knowledge bases. In particular, our demonstra-tion will focus on the following topics 1. We have highlighted several phrases and keywords to give the reader a better overview on the main demonstration points. Navigation and Visualisation OntoWiki provides a number of ways for navigating through RDF knowledge bases. These include taxonomy and hi-erarchy browsing (e. g. via SKOS taxonomies or the class hierarchy), facet-based browsing (with complex filter conditions and attribute based tag clouds) and full- 1 The feature list is far away from being complete, so please refe...|$|E

