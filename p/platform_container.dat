0|48|Public
2500|$|ISO 1496-5:1991 – Part 5: Platform and <b>platform</b> based <b>containers</b> ...|$|R
5000|$|ISO 1496-5:1991 - Part 5: Platform and <b>platform</b> based <b>containers</b> ...|$|R
5000|$|Apache Mesos, a {{large-scale}} cluster management <b>platform</b> based on <b>container</b> isolation ...|$|R
5000|$|Proxmox Virtual Environment, an {{open-source}} server virtualization management <b>platform</b> supporting LXC <b>containers</b> and KVM ...|$|R
50|$|OpenShift Origin is the {{upstream}} {{community project}} used in OpenShift Online, OpenShift Dedicated, and OpenShift <b>Container</b> <b>Platform.</b> Built around {{a core of}} Docker container packaging and Kubernetes container cluster management, Origin is augmented by application lifecycle management functionality and DevOps tooling. Origin provides an open source application <b>container</b> <b>platform.</b> All source code for the Origin project is available under the Apache License (Version 2.0) on GitHub.|$|R
40|$|In this paper, we {{describe}} a middleware system, called J 2 CS (Java 2 Context Service), that provides support {{to most of}} the tasks involved in designing context-aware applications in Java. The J 2 CS system can be classified as a lightweighted, flexible, extensible and componentoriented middleware. In the proposed <b>platform,</b> <b>containers</b> manage the life cycle of components called contextlets, which are used to infer high-level events from low-level sensed data. Containers are also in charge of handling communication details with sensors and other sources of context information. In this paper, we discuss the software architecture, the programming interface, the run-time performance and the implementation of J 2 CS. We also present some examples of contextaware applications based on the proposed middleware. ...|$|R
30|$|The {{messaging}} Server is the <b>platform</b> called Main <b>Container</b> {{including an}} agent called ChatManagerAgent which control all agents {{connected to the}} messaging application.|$|R
50|$|Apprenda is an American {{computer}} software company {{that provides a}} shared services <b>container</b> <b>platform</b> to help companies create, update, and manage private and public cloud-based applications.|$|R
5000|$|In April 2017, Microsoft {{acquired}} <b>container</b> <b>platform</b> Deis from Engine Yard [...] and Engine Yard {{announced it}} was being acquired by Crossover, a provider of cloud-based Ruby teams.|$|R
40|$|Recent {{years have}} seen an {{increased}} adoption of container technology for software deployment and lightweight virtualization. More recently, container orchestration systems provide a <b>platform</b> for <b>container</b> deployment and management of cluster resources. Software-as-a-Service (SaaS) providers traditionally make use of middleware to facilitate multi-tenancy in a federated cloud. Container orchestration presents many opportunities in achieving scalability and providing cost-efficient multi-tenancy. In this paper, we outline opportunities and challenges for multi-cloud deployment of containerized SaaS applications. status: publishe...|$|R
40|$|One present goal of {{researchers}} and developers is to design software tools that make learning materials available online in an educationally effective manner. We face the twofold challenge of implementing advanced e-leaming functionalities, though designing their interface {{so as to}} provide an easy interaction grasping the students' interest. A poorly designed interface makes students {{spend more time in}} learning it than in mastering the provided knowledge, so becoming a barrier to effective learning. In this context, both User-Centered Design (UCD) and Learner-Centered Design (LCD) guidelines are needed; {{it is also important to}} devise suited evaluation tools, able to help in identifying usability, and, more in general, accessibility flaws. Such tools must be designed bearing in mind the specific characteristics of e-learning applications. Traditional heuristic evaluation appears too general and subjective. In this paper, we propose a set of guidelines and criteria for e-learning <b>platforms</b> (<b>containers)</b> and for educational modules (contents), to be used within the SUE (Systematic Usability Evaluation) inspection. We point out that human factors experts can primarily evaluate "syntactic" aspects of applications. Experts of education science and domain experts are to be in...|$|R
50|$|OpenShift <b>Container</b> <b>Platform</b> (formerly {{known as}} OpenShift Enterprise) is Red Hat's {{on-premises}} private platform {{as a service}} product, built around a core of application containers powered by Docker, with orchestration and management provided by Kubernetes, on a foundation of Red Hat Enterprise Linux.|$|R
50|$|Bank Wood was the {{location}} of a 'Q' site during the Second World War, a decoy for attacking enemy bombers. It was constructed from raised <b>platforms</b> with <b>containers</b> for oil or petrol and connected to a control station and fuel reservoir. The intention was to ignite the fuel to provide a decoy target to lead the enemy from their intended target, Horbury and Ossett railway station and associated marshalling yards. After the war, Bank Wood was open-casted and replanted after mining ended.|$|R
40|$|The new {{challenge}} for designers and HCI researchers {{is to develop}} software tools for effective e-learning. Learner-Centered Design (LCD) provides guidelines to make new learning domains accessible in an educationally productive manner. A number of new issues have been raised {{because of the new}} "vehicle" for education. Effective e-learning systems should include sophisticated and advanced functions, yet their interface should hide their complexity, providing an easy and flexible interaction suited to catch students' interest. In particular, personalization and integration of learning paths and communication media should be provided. It is first necessary to dwell upon the difference between attributes for <b>platforms</b> (<b>containers)</b> and for educational modules provided by a platform (contents). In both cases, it is hard to go deeply into pedagogical issues of the provided knowledge content. This work is a first step towards identifying specific usability attributes for e-learning systems, capturing the peculiar features of this kind of applications. We report about a preliminary users study involving a group of e-students, observed during their interaction with an e-learning system in a real situation. We then propose to adapt to the e-learning domain the so called SUE (Systematic Usability Evaluation) inspection, providing evaluation patterns able to drive inspectors' activities in the evaluation of an e-learning tool...|$|R
5000|$|In 1986, the Avia National Concern {{comprising}} also affiliates in Brno, Ivančice and Žilina {{was incorporated}} in a so-called [...] "Industry Economical Unit" [...] together with Praga, BSS, Metaz and Kutná Hora enterprises. As per 1 July 1988, {{a new state}} enterprise, Avia Concern, comprising Avia, Praga, BSS, and Dačické Strojírny Concern enterprises was established {{in accordance with the}} State Enterprise Act. Avia Letňany, as the parent factory, manufactured engines and cabs and assembled all of the chassis. A part of the chassis was fitted with a platform-type superstructure and also vehicles with a furgon-type body were manufactured there. The Brno, Ivančice and Žilina factories purpose superstructures were assembled on the chassis. The Kutná Hora factory manufactured all types of axles for Avia vehicles. The key assortment of Praga Concern Enterprise included truck and bus gear units {{and a number of other}} parts for the automotive field. The Dačické strojírny Concern Enterprise produced parts for our car manufacturers. The body assortment was still growing: box bodies, isothermic box bodies, bodies including a cooling unit, assembly <b>platforms,</b> <b>container</b> bodies, dumpers, towing trucks, and other different bodies were manufactured. The Avia chassis also served as a base for the small buses manufactured in Bulgaria, Yugoslavia and Hungary.|$|R
50|$|Rancher Labs is a {{software}} company working on operating-system-level virtualization tools, more {{commonly known as}} Linux Containers. Founded in 2014, Rancher Labs introduced two main tools: Rancher, a <b>container</b> management <b>platform</b> for Docker <b>container</b> systems, and RancherOS, a Linux operating system distribution simplified to host containers.|$|R
50|$|At {{the opening}} Preston Hire {{displayed}} their Loading <b>Platforms,</b> Storage <b>containers,</b> a large display of Maeda mini crawler cranes, {{one of their}} Kato MR130 city class cranes, various crawler based Elevating Work Platforms and the Preston Hire Racing V8 Super Car team complete with the transporter and V8 supercars.The 673 {{has been added to}} Preston's growing fleet of Sennebogen telescopic crawler cranes which range from 15 tonne to 70 tonne capacities.The 673 has a transport width of 3m and is fitted with a 36m main boom and a 15m fly jib.|$|R
5000|$|In early 1993 Shikarev {{founded the}} Delo Group in the Black Sea port of Novorossiysk. It {{has grown to}} be one of the largest holding {{companies}} on the market of transport service. It owns stevedore assets in Novorossiysk, out-of-port terminals and railway <b>platforms,</b> specializing in <b>container</b> delivery and oil products transportation.|$|R
40|$|The Eclipse rich client <b>platform</b> as <b>container</b> for componentoriented plugins {{provides}} a framework to host plugins, which concerning its look and feelembed well in a client workstation. J 2 EE client container provide a runtime environment for applications, integrated in a multitier architecture and therefore have to access services Java 2 Enterprise Edition (J 2 EE). Combining the two container approaches will create a new runtime environment for application clients, which appear in the user interface style of Eclipse {{and are able to}} take up the J 2 EE services. This diploma thesis discusses concepts of combining Eclipse and the client container...|$|R
50|$|Rancher is a {{management}} <b>platform</b> for Docker <b>containers.</b> It includes a Kubernetes distribution {{as well as}} the option to choose from Docker Swarm and Apache Mesos. These all use Docker as the underlying container runtime and coordinate running containers between multiple discrete physical nodes. Rancher also includes modular infrastructure services including networking, load balancing, service discovery, monitoring and recovery.|$|R
30|$|Distributed coding tools, {{including}} CVS, SVN, GIT, {{have changed}} the ways of software development. Those social coding <b>platforms</b> have become <b>containers</b> for software collaborations, among software developers on software repositories. Several social coding platforms, including SourceForge and GoogleCode, {{have contributed to the}} prosperity of open source projects. As {{more and more people are}} used to code maintenance with Git, the Git-backed coding hosting platform now attracts millions of developers to put their software projects there.|$|R
50|$|ERS Railways (formerly European Rail Shuttle B.V.) is a fully {{independent}} railway company, 100% owned by Freightliner Group Ltd., with five offices in four countries across Europe. With a modern fleet of locomotives and over 400 leased <b>container</b> <b>platforms,</b> low-bed {{as well as}} double pocket wagons, {{they are able to}} transport container, tank and trailer units. ERS Railways has so far been granted railway licenses in the Netherlands, Belgium, Germany and Austria.|$|R
40|$|Abstract Agent-based {{technologies}} in production control systems could facilitate seamless reconfiguration {{and integration of}} mechatronic devices/modules into systems. Advances in embedded controllers which are continuously improving computational capabilities allow for software modularization and distribution of decisions. Agent platforms running on embedded controllers could hide the complexity of bootstrap and communication. Therefore, {{it is important to}} investigate the messaging performance of the agents whose main motivation is the resource allocation in manufacturing systems (i. e., conveyor system). The tests were implemented using the FIPA-compliant JADE-LEAP agent <b>platform.</b> Agent <b>containers</b> were distributed through networked embedded controllers, and agents were communicating using request and contract-net FIPA interaction protocols. The test scenarios are organized in intercontainer and intracontainer communications. The work shows the messaging performance for the different test scenarios using both interaction protocols. </p...|$|R
5000|$|Airport [...] "Irkutsk" [...] {{has only}} one runway with armobetonnym coating having a {{vertical}} drop of more than 30 m. The total capacity of the two passenger terminals is 1450 passengers / hour. Cargo terminal is equipped with diesel forklifts, hoists, <b>container</b> <b>platform,</b> electronic and mechanical scales (for weighing cargo up to 30 tons). The airport complex also includes the airport hotel [...] "Air Harbour", a service of aviation service (board food workshop) repair facility and medical services. There is a VIP lounge in the international terminal building.|$|R
40|$|Agent-based {{technologies}} in production control systems could facilitate seamless reconfiguration {{and integration of}} mechatronic devices/modules into systems. Advances in embedded controllers which are continuously improving computational capabilities allow for software modularization and distribution of decisions. Agent platforms running on embedded controllers could hide the complexity of bootstrap and communication. Therefore, {{it is important to}} investigate the messaging performance of the agents whose main motivation is the resource allocation in manufacturing systems (i. e., conveyor system). The tests were implemented using the FIPA-compliant JADE-LEAP agent <b>platform.</b> Agent <b>containers</b> were distributed through networked embedded controllers, and agents were communicating using request and contract-net FIPA interaction protocols. The test scenarios are organized in intercontainer and intracontainer communications. The work shows the messaging performance for the different test scenarios using both interaction protocols. Copyright © 2008 Omar Jehovani López Orozco et al. This is an open access article distributed under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. 1...|$|R
40|$|Container {{technology}} for hosting applications {{on the web}} is gaining traction as the preferred mode of deployment. Major actors in the IT industry are transforming their infrastructure into smaller services and are using containers as a basis. Compared to a hypervisor-based infrastructure containers are easier to manage and administrate. Container images can be deployed identically independent of <b>platform</b> choice; <b>containers</b> support most infrastructures and operating systems. Containers solve some operation management issues but raise security concerns. The layer of isolation between instances is significantly reduced when comparing a hypervisor with container administration software such as Docker. This thesis aims to compare the security of containers and hypervisor virtual machines by observing exploits in both environments. The experiments shown throughout this thesis describe the outcomes of some exploits. In addition to observing the exploitation of the system, the experiments focus on finding possible solutions to prevent the vulnerabilities to be exploited and possibly secure the applications and environments. The methods utilized to mitigate the exploitations are based on security features within the virtualization technologies as well as features provided by the operating system...|$|R
30|$|In its inception, cloud {{computing}} revolved around virtualization as main resource compartmentalization or consolidation strategy [63, 85] to support application isolation and platform customization to suit user needs [17, 18], {{as well as}} to enable pooling and dynamically assigning computing resources from clusters of servers [147]. The significant performance improvement and overhead reduction of virtualization technology [81] propelled its adoption as key delivery technology in {{cloud computing}} [24]. Nevertheless, developments on Linux Containers and associated technologies [34, 77] led to the implementation of cloud <b>platforms</b> using lightweight <b>containers</b> [44] such as Docker [66, 110] with smaller overhead compared to virtual machines as containers only replicate the libraries and binaries of the virtualized application [53].|$|R
40|$|International audienceModern {{vehicles}} {{are equipped with}} several interconnectedsensors on board for monitoring and diagnosispurposes; their availability is a main driver for the developmentof novel applications in the smart vehicle domain. Inthis paper, we propose a Docker-based <b>container</b> <b>platform</b> asa virtualization solution to implement customized smart carapplications. Through a proof-of-concept prototype—developedon a Raspberry Pi 3 board—we show that a container-basedvirtualization approach is not only viable but also effective andflexible to manage several parallel processes running on board. More specifically, the platform can take priority-based decisionsby handling multiple inputs, e. g., data from the CANbus basedon the OBD II codes, video from the on-board webcam, andso on. Results are promising {{for the development of}} in-vehiclevirtualization techniques in future vehicles...|$|R
40|$|The aim is {{to ground}} and develop the basic principles, methods and {{mathematical}} models of making decisions at functioning of the computer-aided container movement control in the river port. The methods and mathematical models for optimum ship loading and container arrangement in the port stockhouse, determination of the <b>container</b> <b>platform</b> capacity and conducting dynamical model "stockhouse", developing operational moving-in and removal planes of container by an automobile transport and freight treatment of the ships have been developed. The problem complex for PC "Computer-aided container movement control in port" has been developed. The investigation results have been introduced in the Perm and Tyumen portsAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|In {{this paper}} {{we deal with}} a capacitated hub {{location}} problem arising in a freight logistics context; in particular, we have the need of locating logistics <b>platforms</b> for <b>containers</b> travelling via road and rail. The problem is modelled on a weighed multimodal network. We give a mixed integer linear programming model for the problem, having the goal of minimizing the location and shipping costs. The proposed formulation presents some novel features for modelling capacity bounds that are given both for the candidate hub nodes and the arcs incident to them; further, the containerised origin-destination (o − d) demand can be split among several platforms and different travelling modes. Note that here the network is not fully connected and only one hub for each o − d pair is used, serving both to consolidate consignments on less transport connections and as reloading point for a modal change. Results of an extensive computational experimentation performed with randomly generated instances of different size and capacity values are reported. In the test bed designed to validate the proposed model all the instances up to 135 nodes and 20 candidate hubs are optimally solved in few seconds by the commercial solver CPLEX 12. 5...|$|R
50|$|The {{framework}} {{consists of}} a lightweight JBI implementation in Java. This implementation is container-agnostic and can work on any <b>platform</b> and any <b>container.</b> Even if development and support are mainly focused on Glassfish V2 and V3 platforms, beta projects on JBoss and standalone JVM work well and are in progress (2012 Q2). In addition to the OpenESB framework being lightweight, it is also reliable and highly scalable. It is embedded in a Java virtual machine and communicates with other framework instances through Binding components. This architecture matches perfectly with new cloud architectures and allows easy deployment and management on very complex infrastructures. The framework is fully manageable with any JMX-based tool such as Jconsole or more sophisticated tools like Opsview or Nagios.|$|R
30|$|Figure 4 {{illustrates}} a basic agent architecture we already assumed in the SAaaS Use Case presented in (Section Modelling of business flows). It shows three SAaaS VM agents. Agents {{live in an}} agent platform, which provides them with basic services such as message delivery. A platform is composed {{of one or more}} Containers. Containers can be executed on different hosts thus achieving a distributed <b>platform.</b> Each <b>container</b> can contain zero or more agents [41]. To provide monitoring functionality a VM agent interacts through agent plugins with stand-alone tools, like process monitor, intrusion detection system or anti virus scanner, as depicted in Figure 4. To harness the potential of cloud computing an agent can be deployed to a VM on-demand according to the SBF rules a user defines. Different agents based on modelled business processes are stored within an agent repository. To be able to move a JADE agent to a running cloud instance the Inter Platform Mobility Service (IPMS) by Cucurull et al. [45] was integrated. This supports the presented advantage of deploying agents on-demand if a designed business process flow was started (as described in (Section How agents can improve incident detection). Though this implementation is up to future work.|$|R
40|$|Several {{actors are}} {{involved}} in all layers the handset architecture, from hardware producers to service providers, and the numbers are raising. Lack of collaboration amongst these actors across and within layers {{has led to a}} complex development-process of services and applications, which in turn leads to difficult use of such applications and services. In this thesis we took {{a closer look at the}} mobile phone, examined challenges surrounding development and use of services on mobile phones, and found initiatives by actors to handle these challenges. This knowledge was used to design and implement a solution to handle identified challenges. The solution involves using the UICC as the main application <b>platform</b> and <b>container</b> of state, with the possibility to deploy handset-specific parts of an application on the handset. Standardized tools on the handset give UICC-applications the means to communicate with external processes and users. In addition the network operator is given an important role to administrate and adapt applications on the UICC as services change communication technology and application standard. The designed architecture facilitates more widespread development and use of services on the mobile handset. The architecture is realizable through current platforms and standards. By implementing a simulation and subset of our design on a handset the design was substantiated...|$|R
40|$|The {{large amount}} of stored waste is still a big concern for Romania and {{according}} to the legislative provisions, until 16 th of July 2016, it has to be reduced at 35 % from the total amount of waste stored in 1995 (2). Attempting this goal depends {{on the extent to which}} the population perceives the need of selective collection, recycling and residue minimization and on the way in which the local authorities facilitates the proper conduct of this process and ensures compliance with the hygiene and public health standards in relation to the location of household waste pre-collection containers. The aim of this paper was to verify if the previsions contained in the Order no. 119 / 2014, for the aproval of Hygiene and public health standards regarding the population’s living environment, are complied with. In this regard, there were conceived questionnaires concerning the emplacement of storage <b>platforms</b> for <b>containers</b> used for selective collection of household waste, containing the requirements stipulated in Chapter 1 – Hygiene standards regarding the housing areas, article 4, point a) (1). It has been found that in the living areas taken into study, the requirements stipulated in Order no. 119 / 2014, for the aproval of Hygiene and public health standards regarding the population’s living environment, in Chapter 1 – Hygiene standards regarding the housing areas, article 4, point a), are not fully respected...|$|R
40|$|Abstract. Our {{research}} targets collaborative environments with {{focus on}} mobility and teams. Teams comprise {{a number of}} people working on multiple projects and activities simultaneously. As mobile and wireless technology advances people are no longer bound to their offices. Team members are able to collaborate while on the move. Sharing context information thus becomes a vital part of collaborative environments. However, challenges such as heterogeneous devices, connectivity, and bandwidth arise due to the dynamic nature of distributed, mobile teams. We present a methodology for context modeling and employ a framework that reduces costs such as computing information and usage of network resources by transferring context at relevant levels of detail. At the same time, robustness of the system is improved by dealing with uncertain context information. Our framework is implemented on an OSGi <b>container</b> <b>platform</b> using Web services for communication means. ...|$|R
40|$|With this master thesis {{we examine}} how {{to design a}} {{planning}} initiative that can strengthen the visibility of, actualize and activate existing resources {{in the neighborhood of}} Nordvest, Copenhagen, on temporary basis. This thesis is theoretically based on Empowerment, Gentrification and temporary use of urban space as a strategic planning tool, and is a part of an interdisciplinary study, grounded in the academic field of Performance Design and Urban Planning. Our methodical approach is strongly inspired by participatory action research that intends to analyze existing problems and thereby identifying elements for change. Based on 35 meetings with various entrants in the urban planning field, and case studies of clusters for social and cultural entrepreneurs in Copenhagen, we have designed a project proposal, that suggests a mobile <b>container</b> <b>platform,</b> as a way to activate empty building sites on a short time basis by renting out cheap container spaces to social- and cultural entrepreneurs. The project design focuses on mobilizing local dwellers, public institutions and organizations, and hereby understates different kinds of collaboration between the local society and the entrepreneurs. We define this collaboration as a “social partnership”. We especially use Empowerment theories to underpin this collaborative platform, and hereby see possibilities to strengthen horizontal and vertical empowerment within the local society...|$|R
