10|85|Public
3000|$|Fake {{base station}} attack: False base station attack {{is that a}} fake node pretends to be a <b>participant</b> <b>node</b> in the protocol, to grasp the secret information. For pre-shared key is only known between A, B, and S in the new protocols, the {{transmitted}} information encrypted by the pre-shared secret key K [...]...|$|E
30|$|To {{reconstruct}} {{the social network}} of the students, we use data on calls and text messages between the study participants, constructing a network where two participants i and j are linked if {{there is at least}} one call or text message from i to j and vice versa. For calculating the total personal network size of each <b>participant</b> (<b>node</b> degree), we also use calls and texts to (anonymized) persons outside the study cohort.|$|E
40|$|Abstract. The {{scalability}} {{and resilience}} of epidemic multicast, also called probabilistic or gossip-based multicast, rests on its symmetry: Each <b>participant</b> <b>node</b> contributes the same share of bandwidth thus spreading the load and allowing for redundancy. On the other hand, the symmetry of gossiping {{means that it}} does not avoid nodes or links with less capacity. Unfortunately, one cannot naively avoid such symmetry without also endangering scalability and resilience. In this paper we point out how to break out of this dilemma, by lazily deferring message transmission according to a configurable policy. An experimental proof-of-concept illustrates the approach. ...|$|E
40|$|DHTs are scalable, self-organizing, and {{adaptive}} to underlying topology changes, thus being a promising infrastructure for realizing autonomic communications in distributed systems. To provide the above advantages, however, DHTs sacrifice flexibility, that is, all messages are routed {{by using a}} common algorithm in a DHT {{on the assumption that}} all <b>participant</b> <b>nodes</b> are homogeneous. In practice, nodes in large-scale systems might be heterogeneous with respect to their capabilities, reputations, affiliations of administrative domains, and so on, which consequently makes it preferable to distinguish the heterogeneity of <b>participant</b> <b>nodes</b> and enable flexible control of routing destinations and paths. To achieve this, in this paper we propose a novel approach that supports organizing nodes into groups and enables routing control in a DHT. The effectiveness of our proposals is demonstrated through theoretical analysis and extensive simulations...|$|R
40|$|Peer-to-peer {{systems and}} {{applications}} are distributed systems without any centralized control. P 2 P systems {{form the basis}} of several applications, such as file sharing systems and event notification services. P 2 P systems based on Distributed Hash Table (DHT) such as CAN, Chord, Pastry and Tapestry, use uniform hash functions to ensure load balance in the <b>participant</b> <b>nodes.</b> But their evenly distributed behaviour in the virtual space destroys the locality between <b>participant</b> <b>nodes.</b> The topology-based hierarchical overlay networks like Grapes and Jelly, exploit the physical distance information among the nodes to construct a two-layered hierarchy. This highly improves the locality property, but disturbs the concept of decentralization as the leaders in the top layer get accessed very frequently, becoming a performance bottleneck and resulting in a single point of failure. In this paper, we propose an enhanced m-way search tree (EMST) based P 2 P overlay infrastructure, called Oasis. It is shown through simulation that Oasis can achieve both the decentralization and locality properties along with high fault tolerance and a logarithmic data lookup time. </p...|$|R
30|$|We {{assume that}} a set of keys are {{distributed}} to all <b>participant</b> <b>nodes</b> in a secure and authenticated manner by a key distribution center (KDC) according to our key distribution model. In this section, we provide {{a brief description of}} our key distribution model that we have adopted for our proposed MAC-based scheme against pollution attacks in XOR NC-enabled WBANs. This key distribution model has been presented in detail in our previous work [30].|$|R
40|$|Digital {{communication}} between gliders {{would be beneficial}} because exchange of information {{has the potential to}} provide insight not only to the pilot but also other pilots and people on the ground. However, such a communication does not exist. In this paper we present a solution for the exchange of information using opportunistic dissemination – pro-actively spreading information - through a wireless mesh network - a network in which each <b>participant</b> (<b>node)</b> can act as a router. A challenge faced in designing our opportunistic dissemination is how to handle different types of information, as information regarding an emergency has a higher priority than information regarding the weather, for instance. We evaluate our solution via simulation. ...|$|E
40|$|The {{scalability}} {{and resilience}} of epidemic multicast, also called probabilistic or gossip-based multicast, rests on its symmetry: Each <b>participant</b> <b>node</b> contributes the same share of bandwidth thus spreading the load and allowing for redundancy. On the other hand, the symmetry of gossiping {{means that it}} does not avoid nodes or links with less capacity. Unfortunately, one cannot naively avoid such symmetry without also endangering scalability and resilience. In this paper we point out how to break out of this dilemma, by lazily deferring message transmission according to a configurable policy. An experimental proof-of-concept illustrates the approach. Fundação para a Ciência e a Tecnologia (FCT) - Project “P-SON: Probabilistically Structured Overlay Networks” (POS C/EIA/ 60941 / 2004) ...|$|E
40|$|Distributed {{hash tables}} (DHTs) {{can be used}} as the basis of a {{resilient}} lookup service in unstable environments: local routing tables are updated to reflected changes in the network; efficient routing can be maintained in the face of <b>participant</b> <b>node</b> failures. This fault-tolerance is an important aspect of modern, decentralised data storage solutions. In architectures that employ DHTs, the choice of algorithm for data replication and maintenance can have a significant impact upon performance and reliability. This paper presents a comparative analysis of replication algorithms for architectures based upon a specific design of DHT. It presents also a novel maintenance algorithm for dynamic replica placement, and considers the reliability of the resulting designs at the system level. The performance of the algorithms is examined using simulation techniques; significant differences are identified in terms of communication costs and latency. </p...|$|E
5000|$|Ethereum is an open-source, public, blockchain-based {{distributed}} computing platform featuring smart contract (scripting) functionality. It provides a decentralized Turing-complete virtual machine, the Ethereum Virtual Machine (EVM), which can execute scripts using an international network of public nodes. Ethereum {{also provides a}} cryptocurrency token called [...] "ether", which can be transferred between accounts and used to compensate <b>participant</b> <b>nodes</b> for computations performed. [...] "Gas", an internal transaction pricing mechanism, is used to mitigate spam and allocate resources on the network.|$|R
25|$|Kademlia is a {{distributed}} {{hash table}} for decentralized peer-to-peer computer networks designed by Petar Maymounkov and David Mazières in 2002. It specifies {{the structure of}} the network and the exchange of information through node lookups. Kademlia nodes communicate among themselves using UDP. A virtual or overlay network is formed by the <b>participant</b> <b>nodes.</b> Each node is identified by a number or node ID. The node ID serves not only as identification, but the Kademlia algorithm uses the node ID to locate values (usually file hashes or keywords). In fact, the node ID provides a direct map to file hashes and that node stores information on where to obtain the file or resource.|$|R
40|$|Abstract [...] Peer-to-peer {{systems and}} {{applications}} are distributed systems without any centralized control. P 2 P systems {{form the basis}} of several applications, such as file sharing systems and event notification services. P 2 P systems based on Distributed Hash Table (DHT) such as CAN, Chord, Pastry and Tapestry, use uniform hash functions to ensure load balance in the <b>participant</b> <b>nodes.</b> But their evenly distributed behaviour in the virtual space destroys the locality between <b>participant</b> <b>nodes.</b> The topology-based hierarchical overlay networks like Grapes and Jelly, exploit the physical distance information among the nodes to construct a two-layered hierarchy. This highly improves the locality property, but disturbs the concept of decentralization as the leaders in the top layer get accessed very frequently, becoming a performance bottleneck and resulting in a single point of failure. In this paper, we propose an enhanced m-way search tree (EMST) based P 2 P overlay infrastructure, called Oasis. It is shown through simulation that Oasis can achieve both the decentralization and locality properties along with high fault tolerance and a logarithmic data lookup time. Index Terms – peer to peer networks, routing, decentralisation, load balancing I...|$|R
40|$|Abstract — Distributed {{hash tables}} (DHTs) {{can be used}} as the basis of a {{resilient}} lookup service in unstable environments: local routing tables are updated to reflected changes in the network; efficient routing can be maintained in the face of <b>participant</b> <b>node</b> failures. This fault-tolerance is an important aspect of modern, decentralised data storage solutions. In architectures that employ DHTs, the choice of algorithm for data replication and maintenance can have a significant impact upon performance and reliability. This paper presents a comparative analysis of replication algorithms for architectures based upon a specific design of DHT. It presents also a novel maintenance algorithm for dynamic replica placement, and considers the reliability of the resulting designs at the system level. The performance of the algorithms is examined using simulation techniques; significant differences are identified in terms of communication costs and latency. Index Terms — peer to peer, reliable storage, distributed hash table, dhash, chord I...|$|E
40|$|Abstract. Distributed {{computing}} on heterogeneous nodes, or grid computing, {{provides a}} substantial increase in computational power available for many applications. This paper reports our experience of calculating cryptographic hashes on a small grid test bed using a software package called BOINC. The computation power on the grid allows for searching the input space of a cryptographic hash to find a matching hash value. In particular, we show an implementation of searching possible 5 character passwords hashed with the MD 4 algorithm on the grid. The resulting performance shows individual searches of sections of the password space returning a near linear decrease in calculation time based on individual <b>participant</b> <b>node</b> performance. Due to the overhead involved of scheduling these sections of the password space and processing of the results, the overall performance gain is slightly less than linear, but still reasonably good. We plan to design new scheduling algorithms and perform more testing to enhance BOINC’s capability in our future research. ...|$|E
40|$|In-network data {{aggregation}} in Wireless Sensor Networks (WSNs) provides efficient bandwidth utilization and energy-efficient computing. Supporting efficient in-network {{data aggregation}} while preserving {{the privacy of}} the data of individual sensor nodes has emerged as an important requirement in numerous WSN applications. For privacy-preserving data aggregation in WSNs, He et al. (INFOCOM 2007) have proposed a Cluster-based Private Data Aggregation (CPDA) that uses a clustering protocol and a well-known key distribution scheme for computing an additive aggregation function in a privacy-preserving manner. In spite of the wide popularity of CPDA, it has been observed that the protocol is not secure and it is also possible to enhance its efficiency. In this paper, we first identify a security vulnerability in the existing CPDA scheme, wherein we show how a malicious <b>participant</b> <b>node</b> can launch an attack on the privacy protocol so as to get access to the private data of its neighboring sensor nodes. Next it is shown how the existing CPDA scheme can be made more efficient by suitable modification of the protocol. Further, suitable modifications in the existing protocol have been proposed so as to plug the vulnerability of the protocol. Comment: The paper is withdraw...|$|E
30|$|The current {{version of}} DCRP is {{inspired}} in Chord [32], {{one of the earliest}} P 2 P algorithm based on a DHT 2. Therefore, DCRP inherits Chord’s key space structure and its rules for storing/mapping keys among the <b>participant</b> <b>nodes.</b> It must be noted that DCRP does not replicate key values over the DHT due to the prohibitive cost of such operation in a wireless environment. This means that only one DHT node with the closest key on the ring will store this value.|$|R
30|$|Eigenvector {{centrality}} [35, 54] {{represents a}} participant’s connections to well-connected <b>participants.</b> <b>Nodes</b> {{with the same}} degree centrality are not necessarily equally central as this {{will depend on how}} their contacts are connected. Eigenvector centrality adds this important nuance and captures the problems often associated to proximity to the most visible. In this sense, participants with higher eigenvector centrality should receive more sever sentencing because of their proximity to well-connected individuals in the network who, as hypothesized above, are themselves more likely to receive harsher punishment.|$|R
40|$|International audienceMobile ad-hoc networks, MANETs, are self-organized {{and very}} dynamic systems where {{processes}} have no global {{knowledge of the}} system. In this paper, we propose a model that characterizes the dynamics of MANETs {{in the sense that}} it considers that paths between nodes are dynamically built and the system can have infinitely many processes but the network may present finite stable partitions. We also propose an algorithm that implements an eventually perfect partition participant detector PD which eventually detects the <b>participant</b> <b>nodes</b> of stable partitions...|$|R
30|$|Numerous trust {{models have}} been {{proposed}} for secure node communication based on sharing group recommendation to establish cooperation in computational networks [4 – 7]. The trust {{can be defined as}} the degree of individual belief on the behaviour of any <b>participant</b> <b>node</b> [8]. In [9], the trust management was distinguished from other security services to provide and manage security policies and relationships. In MANET, trust management is applied to evaluate the belief level of information and nodes, to detect intrusions and to provide security services including key management, authentication, access control and node revocation [10 – 14]. On that account, certain computational methodologies should be utilized at regular interval to assess the trust level. Unlike a wired network, in a dynamic mobile network like MANET, the trust computation can be made only with many numbers of such periodic observations. The trust computation is, however, a challenging task because of random node mobility and the lack of central authority. The surveys of trust management in MANET [15 – 17] give a summary of various techniques for trust calculations. The formalising trust method in [18] made a contribution to many later on schemes to consider the neighbour opinion along with the direct interactions in decision making. In [19], the trust of each node is calculated with two schemes, namely the reputation framework and trust establishment. A direct observation and further distribution of information is done in reputation framework. Whereas, in trust establishment, direct observations and opinion from one-hop neighbours are combined for evaluating the trust relations. In [20 – 23], the concept of combined trust computation is presented in which direct trust is computed with direct observations and indirect trust is computed from recommendation. The misbehaviour verification in trust computation for non-cooperation is presented in [24]. In contrast with wired networks, to estimate trust in a fully distributed network is demanding to attain [25, 26]. A mathematical model with the Bayesian theory was introduced in [27 – 30], to update the reputation from direct observations. In [31 – 38], various trust models in a public key infrastructural network are discussed. These trust models are developed on a clustered mobile node network where security enhancement is certainly important. On the other hand, these existing trust models for computing the trust level of each node in MANET multiplied the computation as well as communication complexities.|$|E
5000|$|It {{provides}} a decentralized virtual machine which can execute scripts using an international network of public nodes all {{connected to the}} Blockchain and through state channels. æternity also {{provides a}} value token called [...] "æternity token", which can be transferred between participants and is used to compensate <b>participant</b> <b>nodes</b> for computations performed. [...] "æternity token", are {{used to pay for}} space and computation time on the Virtual-Machine and prevents spam on the network while allocating resources (Storage & Computation time) proportionally to the incentive offered by the request.|$|R
40|$|With the {{popularity}} of mobile social applications, the requirements of rapid and energy efficient become the great challenges for neighbor discovery protocols. In mobile social applications, mobile nodes usually play different roles (active and passive). This relationship between mobile nodes is a characteristic in neighbor discovery problem. In the daily life, the start time and duration of a neighbor detection {{are determined by the}} node which launches the application. In other words, the neighbor discovery will occur suddenly {{at any time in the}} network. So time limit is another characteristic in neighbor discovery. This paper proposes a new neighbor discovery protocol called ERUPT that takes two characteristics above into account. In the ERUPT protocol, the mobile nodes which launch applications in the network are named sponsor nodes, and those nodes that participate applications following the sponsor <b>nodes</b> are named <b>participant</b> <b>nodes.</b> The core idea of ERUPT neighbor discovery protocol depends on the common phenomenon that the sponsor nodes will spend more energy to invite more <b>participant</b> <b>nodes</b> into applications as soon as possible. More efficient of discovering neighbors for the sponsor nodes than existing approaches is validated by the theoretical analysis and simulation in this paper. We evaluate the ERUPT protocol through NS 2 network simulator, and show almost 26 % - 30 % improvement in discovery latency while at almost the same energy consumption over existing approaches...|$|R
40|$|International audienceProviding service {{discovery}} in an eﬃcient and scalable way in ad hoc networks is a challenging problem, in particular for multihop scenarios, {{due to the}} large number of potential <b>participant</b> <b>nodes</b> and the scarce resources in these networks. In this paper, we propose and evaluate an approach to mitigate the reply implosion problem in query-based service discovery protocols for multihop mobile ad hoc networks. Our simulation results show the scalability and eﬃciency of the proposed solution. We demonstrate that the proposed scheme considerably reduces the number of transmissions without compromising the eﬃciency of the service {{discovery in}} scenarios of pedestrian mobility...|$|R
40|$|In most DHTs {{proposed}} so far, all nodes {{are assumed}} to be homogeneous, and all messages are routed using a common algorithm. In practice, however, nodes in large-scale systems might be heterogeneous with respect to their capabilities, reputations, affiliations of administrative domains, and so on, which consequently makes it preferable to distinguish the heterogeneity of <b>participant</b> <b>nodes.</b> To achieve this, in this paper we present Grouped Tapestry (GTap), a novel Tapestry-based DHT that supports organizing nodes into groups and allows flexible DHT routing. The effectiveness of our proposals is demonstrated through theoretical analysis and extensive simulations. © 2008 IEEE...|$|R
40|$|Since {{the problem}} of {{disclosing}} personal information on the Internet continues to increase, many anonymous communication systems have been studied. Such systems usually use directory servers to manage public keys of <b>participant</b> <b>nodes.</b> However, this reduces anonymity because the query messages for the directory servers can give adversaries route information of anonymous communication channels. To solve this problem, applying ID-Based Encryption has been proposed, but in the existing method, directory servers continue to exist. Our novel method, which can grasp assigned NodeIDs without directory servers, {{can be applied to}} existing DHT-based anonymous communication systems. Our proposal enhances scalability. This paper describes the structure of our proposed system and its application...|$|R
5000|$|Ethereum Classic is an open-source, public, blockchain-based {{distributed}} computing platform featuring smart contract (scripting) functionality. It provides a decentralized Turing-complete virtual machine, the Ethereum Virtual Machine (EVM), which can execute scripts using an international network of public nodes. Ethereum Classic {{also provides a}} value token called [...] "classic ether", which can be transferred between participants and is used to compensate <b>participant</b> <b>nodes</b> for computations performed. The classic ether token is traded on cryptocurrency exchanges under the ticker symbol ETC. Gas, an internal transaction pricing mechanism, is used to prevent spam on the network and allocate resources proportionally to the incentive offered by the request.|$|R
5000|$|Peer-to-Peer Protocol is an {{application}} layer peer-to-peer networking protocol {{that can be}} used to form and maintain an overlay network among <b>participant</b> <b>nodes.</b> It was defined in an Internet Draft submitted to the IETF by the P2PSIP Working Group. It provides mechanisms for nodes to join, leave, publish, or search for a resource-object in the overlay. It maintains information about nodes in a routing table. Because of potentially large content, a node's routing table only contains a subset of these nodes. If a node can't accomplish the request, it searches for one which can, by performing a nextHop (...) operation to a destination from the routing table (recursive-routing).|$|R
30|$|Applications such as {{transportation}} {{management and}} logistics, emergency response, environmental monitoring and mobile workforce management employ mobile networks {{as a means}} of enabling communication and coordination among a possibly very large set of mobile nodes. The majority of those systems may thus require real-time tracking of the nodes and interaction with all <b>participant</b> <b>nodes</b> as well {{as a means of}} adaptability in a very dynamic scenario. In this paper, we present a middleware communication service based on the OMG DDS standard that supports on-line tracking and unicast, groupcast and broadcast with several thousand mobile nodes. We then show a Fleet Tracking and Management application built using or middleware, and present the performance results in LAN and WAN settings to evaluate our middleware in terms of scalability and robustness.|$|R
40|$|Mobile ad-hoc networks, MANETs, are {{self-organizing}} {{and very}} dynamic systems where processes have no global {{knowledge of the}} system. Due to node failures, mobility, disconnection and new arrivals, the network is not fully connected {{and it is not}} always possible to statically establish end-to-end paths between nodes. In this paper, we propose a model that characterizes the dynamics of MANETs {{in the sense that it}} considers that paths between nodes are dynamically built and the system can have infinitely many processes but the network may present finite stable partitions. We also propose an algorithm that implements an eventually perfect partition participant detector PD which eventually detects the <b>participant</b> <b>nodes</b> of stable partitions. It is characterized by both the strong partition participant completeness and eventual strong partition participant accuracy properties...|$|R
40|$|DHTs {{implement}} a distributed dictionary, supporting key insertion, deletion and lookup. They use hashing to (a) enable efficient dictionary operations, and (b) achieve storage balance across the <b>participant</b> <b>nodes.</b> Hashing can be inappropriate for both problems, as it (a) destroys data ordering, thus making sequential key access and range queries expensive, and (b) fails to provide storage balance when keys are not unique. We propose generaliz-ing DHTs to create Distributed Balanced Tables (DBTs), which eliminate the above two problems. To solve prob-lem (a), we discuss how DHT routing structures {{can be adapted}} for use in DBTs, while preserving {{the costs of the}} standard dictionary operations and supporting effi-cient range queries. To solve problem (b), we describe an efficient algorithm that guarantees storage balance, even against an adversarial insertion and deletion of keys...|$|R
40|$|In {{this paper}} {{we present a}} {{technique}} for automatically assessing the amount of damage {{a small number of}} <b>participant</b> <b>nodes</b> can inflict on the overall performance of a large distributed system. We propose a feedback-driven tool that synthesizes malicious nodes in distributed systems, aiming to maximize the performance impact on the overall behavior of the distributed system. Our approach focuses on the interface of interaction between correct and faulty nodes, clearly differentiating the two categories. We build and evaluate a prototype of our approach and show that it is able to discover vulnerabilities in real systems, such as PBFT, a Byzantine Fault Toler-ant system. We describe a scenario generated by our tool, where even a single malicious client can bring a BFT system of over 250 nodes down to zero throughput...|$|R
40|$|Fault {{tolerant}} Grid scheduling is {{of vital}} {{importance in the}} Grid computing world. Task replication and checkpointing is two popular methods to achieve a fault tolerant scheduling. Replication method is not an applicable way in economic-based grid computing due to use {{a large number of}} resources. The cost of spent time must be paid by consumer for all <b>participant</b> <b>nodes.</b> In this paper, we proposed a fault-tolerant scheduling technique based on Multi- Checkpointing by using rough set theory for economic-based grid with respect to minimum cost, high efficiency, and minimum latency. In our proposed approach, we assume that if one of the provider nodes is failed, there is not enough time to start a task on a new node from beginning again. The experimental results show a promising method with less computation cost price and better fault-tolerance in acceptable completion time...|$|R
40|$|Peer-to-peer systems {{provide the}} {{opportunity}} to pool large amounts of distributed resources to enable internetscale applications. However, the <b>participant</b> <b>nodes</b> are highly dynamic and unreliable. Thus, any shared resource such as file objects must incorporate redundancy to be useful. While many studies have proposed heuristics to determine redundancy levels based on object popularity, {{there has been little}} work in determining optimal or near-optimal resource allocation based on node reliability. In this paper, we present a strategy for the allocation of objects in the presence of dynamic and unreliable peers. We have built an availability model of peer-to-peer storage systems based on the bimodal and time-dependent availability characteristics of a P 2 P node. Using this model, we can select the size of a candidate node set for storage allocation and assign storage objects to maximize availability while still maintaining a balanced distribution of objects. ...|$|R
40|$|Abstract: Fair {{exchange}} protocols play {{an important}} role in application areas such as ecommerce where protocol participants require mutual guarantees that a transaction involving exchange of items has taken place in a specific manner. A protocol is fair if no protocol participant can gain any advantage over an honest participant by misbehaving. In addition, such a protocol is fault tolerant if the protocol can ensure that an honest participant does not suffer any loss of fairness despite any failures of the <b>participant’s</b> <b>node.</b> This paper presents a family of fair exchange protocols for two participants under a variety of assumptions concerning <b>participant</b> misbehaviour, <b>node</b> reliability and message delays. While the paper considers, in line with other known protocols, that a dishonest user can control the protocol execution subject to known cryptographic assumptions, it also considers a class of dishonest users whose abilities to abuse are restricted. The restricted-abuse assumption results in a round-optimal (2 -round) protocol that eliminates any need for an “after-the-fact ” dispute resolution, using traditional symmetric keys and the RSA signatures. The paper also indicates how this assumption can be realised through the use of smart cards. Concerning the node reliability, the development presented here shows how a non-fault tolerant version of a protocol can be made crash-tolerant, thereby highlighting issues that need to be addressed in such transformation. The third dimension concerns the case of the bound on message delays being known or unknown...|$|R
40|$|Abstract Peer-to-peer (P 2 P) {{computer}} networks have recently received tremendous attention {{due to their}} inherent scalability and flexibility, which facilitates {{a broad spectrum of}} innovative multimedia applications. Such networks rely on the power of <b>participant</b> <b>nodes</b> of the network (called peers) for communications and computation. Traditional applications of P 2 P multimedia include decentralized file sharing and content distribution. Yet, the value of the virtually unlimited amount of data distributed in the P 2 P network will be sacrificed if effective and efficient ways to locate the content are missing. This challenge has stimulated extensive research in recent years, and many new P 2 P content search methods have been proposed. This paper provides a timely review of influential work in the area of peer-to-peer (P 2 P) content search. We begin with a survey of text-based P 2 P search mechanisms and continue with an exposition of content-based and semantic-based approaches followed by a discussion of future directions...|$|R
40|$|Computational Grid is {{enormous}} environments with heterogeneous resources and stable infrastructures among other Internet-based computing systems. However, the managing of resources in such systems has its special problems. Scheduler systems {{need to get}} last information about <b>participant</b> <b>nodes</b> from information centers {{for the purpose of}} firmly job scheduling. In this paper, we focus on online updating resource information centers with processed and provided data based on the assumed hierarchical model. A hybrid knowledge extraction method has been used to classifying grid nodes based on prediction of jobs' features. An affirmative point of this research is that scheduler systems don't waste extra time for getting up-to-date information of grid nodes. The experimental result shows the advantages of our approach compared to other conservative methods, especially due to its ability to predict the behavior of nodes based on comprehensive data tables on each node. Comment: IEEE Publication format, International Journal of Computer Science and Information Security, IJCSIS, Vol. 8 No. 1, April 2010, USA. ISSN 1947 5500, [URL]...|$|R
40|$|Large-scale donation-based {{distributed}} infrastructures need to {{cope with}} the inherent unreliability of <b>participant</b> <b>nodes.</b> A widely-used work scheduling technique in such environments is to redundantly schedule the outsourced computations to a number of nodes. We present the design and implementation of RIDGE, a reliability-aware system which uses a node’s prior performance and behavior to make more effective scheduling decisions. We have implemented RIDGE on top of the BOINC distributed computing infrastructure and have evaluated its performance on a live PlanetLab testbed. Our experimental results show that RIDGE is able to match or surpass the throughput of the best BOINC configuration by automatically adapting to the characteristics of the underlying environment. In addition, RIDGE is able to provide much lower workunit makespans compared to BOINC. RIDGE is also able to produce significantly lower communication makespans for downloading clients. Collectively, the results suggest that RIDGE has great promise for service-oriented environments with time constraints. ...|$|R
