101|5909|Public
25|$|A {{common mistake}} of early FTP administrators was to permit a {{directory}} named /incoming that allows full {{read and write}} access by external users, but the files themselves in /incoming were hidden; by creating a directory inside /incoming, this hidden directory would then allow normal file viewing. Users of the compromised site would be directed to log in {{and go to a}} location such as /incoming/data/warez to find the warez content. Messages could be left for other warez users by uploading a <b>plain</b> <b>text</b> <b>file</b> with the message inside.|$|E
2500|$|The {{idea for}} {{creating}} Uchronia was first conceived in late February 1991 and was initiated by {{a request to}} the Usenet newsgroup rec.arts.sf-lovers (now rec.arts.sf.written) for help finding stories in the alternate history genre. Version 1 of the [...] "Usenet Alternate History List" [...] was then posted on April 11, 1991, to rec.arts.sf-lovers. It was essentially a <b>plain</b> <b>text</b> <b>file</b> about 30 kB long and included about 250 items. Much of that first posting was based on information provided by Evelyn C. Leeper, who continues to post information today.|$|E
5000|$|A <b>plain</b> <b>text</b> <b>file</b> format, {{allowing}} {{for the development of}} external tools such as Terranim8or ...|$|E
50|$|Id <b>files</b> are <b>plain</b> <b>text</b> <b>files</b> {{containing}} a playful description of oneself.|$|R
5000|$|Readability/possibility to edit (<b>plain</b> <b>text</b> <b>files</b> are human-readable {{and may be}} edited) ...|$|R
5000|$|Notepad++ has {{features}} for consuming and creating cross-platform <b>plain</b> <b>text</b> <b>files.</b> It recognizes three newline representations ( [...] , + and [...] ) and can convert between them on-the-fly. In addition, it supports reinterpreting <b>plain</b> <b>text</b> <b>files</b> in various character encodings and can {{convert them to}} ASCII, UTF-8 or UCS-2. As such, it can fix <b>plain</b> <b>text</b> that seem gibberish only because their character encoding is not properly detected.|$|R
50|$|The {{configuration}} is done via a <b>plain</b> <b>text</b> <b>file,</b> so i3 can be customized {{with some}} knowledge of programming.|$|E
50|$|It is a <b>plain</b> <b>text</b> <b>file</b> ordered into {{sections}} and subsections.Important sections are Files, InputDevice, Monitor, Modes, Screen, Device, and ServerLayout.|$|E
5000|$|...prj — {{projection}} format; the {{coordinate system}} and projection information, a <b>plain</b> <b>text</b> <b>file</b> describing the projection using well-known text format ...|$|E
5000|$|No binary mailbox - e-mail {{are saved}} as <b>plain</b> <b>text</b> <b>files,</b> 1 by 1 ...|$|R
50|$|IMDb {{does not}} provide an API for {{automated}} queries. However, most of the data can be downloaded as compressed <b>plain</b> <b>text</b> <b>files</b> and the information can be extracted using the command-line interface tools provided. There is also a Java-based graphical user interface (GUI) application available that is able to process the compressed <b>plain</b> <b>text</b> <b>files,</b> which allows a search and a display of the information. This GUI application supports different languages, but the movie related data is in English, as made available by IMDb. A Python package called IMDbPY {{can also be used}} to process the compressed <b>plain</b> <b>text</b> <b>files</b> into a number of different SQL databases, enabling easier access to the entire dataset for searching or data mining.|$|R
5000|$|Added CSV data {{provider}} {{that allows}} reports to consume data from comma separated, tab separated, and other <b>plain</b> <b>text</b> <b>files.</b>|$|R
5000|$|As a {{complete}} file, the uuencoded output for a <b>plain</b> <b>text</b> <b>file</b> named cat.txt containing only the characters Cat would be begin 644 cat.txt #0V%T ` end ...|$|E
50|$|FILE_ID.DIZ is a <b>plain</b> <b>text</b> <b>file</b> {{containing}} a brief contentdescription of the archive {{in which it}} is included.It was originally used in archives distributed through bulletin board systems (BBS).|$|E
50|$|An e-text may be {{a binary}} or a <b>plain</b> <b>text</b> <b>file,</b> viewed with any open source or {{proprietary}} software. An e-text may have markup or other formatting information, or not.|$|E
25|$|The first Kindle {{could read}} {{unprotected}} Mobipocket <b>files</b> (MOBI, PRC), <b>plain</b> <b>text</b> <b>files</b> (TXT), Topaz format books (TPZ) and Amazon's AZW format.|$|R
50|$|There are {{important}} differences between <b>plain</b> <b>text</b> <b>files</b> {{created by a}} text editor and document files created by word processors such as Microsoft Word or WordPerfect.|$|R
50|$|Most phlogs are {{maintained}} by hand {{as a series}} of <b>text</b> <b>files.</b> Open source software exists to convert posts from a WordPress blog into <b>plain</b> <b>text</b> <b>files</b> that can be accessed using the gopher protocol.|$|R
5000|$|... prj.adf — {{projection}} format; the {{coordinate system}} and projection information, a <b>plain</b> <b>text</b> <b>file</b> describing the projection using well-known text format; are single line {B286C06B-0879-11D2-AACA-00C04FA33C20} signifies an unknown coordinate system ...|$|E
50|$|Tgif saves its {{drawings}} in a Prolog-based <b>plain</b> <b>text</b> <b>file</b> format. Partly {{because it is}} based on Prolog, there is little support from other programs for reading the Tgif file format.|$|E
5000|$|The above example also {{illustrates}} that text not contained within enclosing PHP tags will be directly output. So the simplest form of Hello World in PHP is a <b>plain</b> <b>text</b> <b>file</b> containing [...] "Hello World".|$|E
5000|$|A {{text editor}} {{is a type}} of program used for editing <b>plain</b> <b>text</b> <b>files.</b> Such {{programs}} are sometimes known as [...] "notepad" [...] software, following the Microsoft Notepad.|$|R
50|$|The {{purpose of}} using <b>plain</b> <b>text</b> today is {{primarily}} independence from programs that require {{their very own}} special encoding or formatting or <b>file</b> format. <b>Plain</b> <b>text</b> <b>files</b> can be opened, read, and edited with countless text editors and utilities.|$|R
50|$|The system {{includes}} a lightweight markup language for <b>plain</b> <b>text</b> <b>files</b> (similar in function to Markdown, reStructuredText, Textile, etc., {{with a different}} implementation), allowing lines or sections of <b>plain</b> <b>text</b> to be hierarchically divided, tagged, linked, and so on.|$|R
5000|$|... xombrero was {{designed}} for experienced command-line interface users, so it includes the features typically requested by such an audience: mouseless browsing, no URL prefetch, vi-like user interface and navigation (including command mode), <b>plain</b> <b>text</b> <b>file</b> configuration, and link hinting.|$|E
50|$|A README file {{contains}} {{information about}} other files in a directory or archive of computer software. A form of documentation, {{it is usually}} a simple <b>plain</b> <b>text</b> <b>file</b> called READ.ME, README.TXT, README.md (for a text file using markdown markup), README.1STor simply README.|$|E
5000|$|The [...]bms file {{describes}} how notes are arranged {{and how the}} game responds when the player takes a specific action. It is a <b>plain</b> <b>text</b> <b>file</b> with 'directive' lines starting with the # character. Each directive line is formatted in the form below.|$|E
50|$|<b>Plain</b> <b>text</b> <b>files</b> {{can be read}} in {{read-only}} mode or {{edited by}} using a text editor bundled with MoonShell. After the text editor is closed, the main MoonShell app is loaded.|$|R
50|$|TWiki {{was created}} in Perl by Peter Thoeny in 1998, based on JosWiki. TWiki was aimed at large {{corporate}} intranets. It stored data in <b>plain</b> <b>text</b> <b>files</b> instead of in a database.|$|R
50|$|The SHY {{character}} {{is also being}} used in text where paragraphs have already been broken into lines, such as certain <b>plain</b> <b>text</b> <b>files,</b> <b>text</b> sent to VT100-style terminal emulators or printers, or pages represented in page description languages. This is the application context originally considered by the EBCDIC and ISO 8859-1 standards and implemented in many VT100 terminal emulators.|$|R
5000|$|Making ConTeXt {{documents}} is simple: {{one makes}} a <b>plain</b> <b>text</b> <b>file</b> (typically with [...]tex extension), and compiles {{it with the}} [...] script. The result {{of this process is}} a PDF file (ConTeXt also can generate a DVI file). An example is shown below.|$|E
5000|$|The wv library {{provides}} several tools on {{the command}} {{line of a}} Unix shell, such as wvText for converting a [...]doc file to a <b>plain</b> <b>text</b> <b>file.</b> It {{is used by the}} program abiword, which provides a GUI interface for reading [...]doc files.|$|E
50|$|Ledger is a {{command-line}} based double-entry bookkeeping application. Accounting data {{is stored}} in a <b>plain</b> <b>text</b> <b>file,</b> using a simple format, which the users prepare themselves using other tools. Ledger does not write or modify data, it only parses the input data and produces reports.|$|E
50|$|Informal user reports {{suggest that}} Foswiki scales {{reasonably}} well {{even though it}} uses <b>plain</b> <b>text</b> <b>files</b> and no relational database to store page data, especially where load balancing and caching are used to improve performance.|$|R
50|$|Message logs {{are almost}} universally <b>plain</b> <b>text</b> <b>files,</b> but IM and VoIP clients (which {{supports}} textual chat, e.g. Skype) might save them in HTML files or in a custom format to ease reading and encryption.|$|R
5000|$|Mathematicians, physicists, and {{computer}} scientists often produce articles and books using TeX or LaTeX in <b>plain</b> <b>text</b> <b>files.</b> Such documents are often {{produced by a}} standard text editor, but some people use specialized TeX editors.|$|R
