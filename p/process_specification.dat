308|1499|Public
5000|$|... 1997. OPEN <b>process</b> <b>specification.</b> With Ian Graham and Houman Younessi.|$|E
5000|$|ISO 18629, Industrial {{automation}} {{systems and}} integration [...] - [...] <b>Process</b> <b>specification</b> language (PSL) ...|$|E
5000|$|There are {{a variety}} of {{approaches}} {{that can be used to}} produce a <b>process</b> <b>specification</b> including ...|$|E
50|$|The {{ability to}} {{exchange}} business <b>process</b> <b>specifications</b> between modeling tools, and between tools and execution environments using XMI.|$|R
40|$|The design-related {{problems}} for extract, transform, load (ETL) processes are {{far away from}} being resolved due to the ambiguity of user requirements and the complexity of operations. Current approaches are based on existing software requirement methods that have limitations on reconciliation of the requirement semantics toward generating the ETL <b>processes</b> <b>specification.</b> The solution is to apply the RAMEPs (Requirement Analysis Method for ETL Processes) that was developed to facilitate {{the design of the}} ETL processes in the perspectives of organization, decision-maker, and developer. The results are the ETL <b>processes</b> <b>specification,</b> which was validated on the correctness of the goal-ontology model and evaluated in the case study of Gas Malaysia Data Warehouse (DW) system. The case study illustrated how the goal-ontology approach was successfully implemented in designing and generating the ETL <b>processes</b> <b>specification...</b>|$|R
5000|$|A {{metamodel}} that complements existing UML metamodels so {{that business}} <b>processes</b> <b>specifications</b> {{can be part}} of complete system specifications to assure consistency and completenes.|$|R
5000|$|<b>Process</b> <b>{{specification}}</b> is {{a generic}} {{term for the}} specification of a process. Its context {{is not unique to}} [...] "business activity" [...] but can be applied to any organizational activity.|$|E
50|$|A Language for <b>Process</b> <b>Specification</b> (ALPS) is a {{model and}} data {{exchange}} language developed by the National Institute of Standards and Technology in the early 1990s to capture and communicate process plans developed in the discrete and process manufacturing industries.|$|E
5000|$|The <b>Process</b> <b>Specification</b> Language (PSL) is {{a process}} {{ontology}} developed for the formal description and modeling of basic manufacturing, engineering and business processes. This ontology provides a vocabulary of classes and relations for concepts at the ground level of event-instances, object-instances, and timepoints. PSL’s top level is built around the following: ...|$|E
40|$|Part 2 : FORENSIC TECHNIQUESInternational audienceThis paper {{presents}} a formal forensic technique {{based on information}} flow analysis to detect data and information leaks in business process models. The approach can be uniformly applied {{to the analysis of}} <b>process</b> <b>specifications</b> and the log files generated during process execution. The Petri net dialect IF net is used to provide a common basis for the formalization of isolation properties, the representation of business <b>process</b> <b>specifications</b> and their analysis. The utility of the approach is illustrated using an eHealth case study...|$|R
40|$|This paper {{presents}} a formal forensic technique {{based on information}} flow analysis to detect leaks in business processes models. The approach can be uniformly applied both {{for the analysis of}} <b>process</b> <b>specifications</b> and of the log files generated during processes’ execution. Specifically, the special Petri net dialect IFnet provides a common basis for the formalization of isolation properties, the representation of business <b>process</b> <b>specifications</b> and their analysis. Focusing on the analysis of business process models, this paper illustrates the approach using a process from the eHealth setting...|$|R
50|$|Java EE {{is defined}} by its specification. As with other Java Community <b>Process</b> <b>specifications,</b> {{providers}} must meet certain conformance requirements in order to declare their products as Java EE compliant.|$|R
5000|$|Within some {{structured}} methods, the capitalized term <b>Process</b> <b>Specification</b> {{refers to}} {{a description of the}} procedure to be followed by an actor within an elementary level business activity, as represented on a process model such as a dataflow diagram or IDEF0 model. A common alias is minispec short for miniature specification.|$|E
5000|$|The <b>process</b> <b>specification</b> defines {{what must}} be done in order to {{transform}} inputs into outputs. It is a detailed set of instructions outlining a business procedure that each elementary level business activity is expected to carry out. Process specifications are commonly included as an integral component of a requirements document in systems development.|$|E
50|$|Inputs to {{the process}} can be {{classified}} as: Design Input, Material Input, Process parameter Input. The output of the process is a printed wiring board that meets the <b>process</b> <b>specification</b> limits. These specifications usually are consistent solder paste volume and height, and printed solder paste aligned on the PWB pads. This determines the process yield.|$|E
50|$|Recording requirements: Requirements may be {{documented}} in various forms, usually including a summary list and may include natural-language documents, use cases, user stories, <b>process</b> <b>specifications</b> {{and a variety}} of models including data models.|$|R
40|$|Abstract: Process aware {{information}} systems, such as Workflow Management Systems or ERP systems require <b>process</b> <b>specifications</b> {{for their}} implementation. Since {{many of those}} <b>process</b> <b>specifications</b> are similar for different companies, databases with so-called reference models, such as Aris for My-SAP, have been developed. These databases can be customized towards company-specific <b>process</b> <b>specifications,</b> thus keeping implementation costs down. To avoid costly problems with information systems on an operational level, it is {{of the utmost importance}} that the reference models used to design the information system are correct. In this paper, we analyze a selection of the reference models for SAP R/ 3 that are stored in the ARIS for MySAP database, and we verify whether they are correct. Since these models are stored as Event-driven Process Chains (EPCs), we use a verification approach tailored towards the verification of this language to check for errors in the models. We show that the reference models in ARIS for MySAP indeed contain some errors and we present the implications of those errors, if these models would be used for the execution of business processes. ...|$|R
40|$|Crew Transportation Technical Standards and Design Evaluation Criteria {{contains}} {{descriptions of}} technical, safety, and crew health medical <b>processes</b> and <b>specifications,</b> and the criteria {{which will be}} used to evaluate the acceptability of the Commercial Providers' proposed <b>processes</b> and <b>specifications...</b>|$|R
50|$|The <b>Process</b> <b>Specification</b> Language can be {{used for}} the {{representation}} of manufacturing, engineering and business processes, including production scheduling, process planning, workflow management, business process reengineering, simulation, process realization, process modelling, and project management. In the manufacturing domain, PSL’s objective is to serve as a common representation for integrating several process-related applications throughout the manufacturing process life cycle.|$|E
50|$|Hereby {{the data}} flow {{diagrams}} (DFDs) are directed graphs. The arcs represent data, and the nodes (circles or bubbles) represent processes that transform the data. A {{process can be}} further decomposed to a more detailed DFD which shows the subprocesses and data flows within it. The subprocesses can in turn be decomposed further with another set of DFDs until their functions can be easily understood. Functional primitives are processes which {{do not need to}} be decomposed further. Functional primitives are described by a <b>process</b> <b>specification</b> (or mini-spec). The <b>process</b> <b>specification</b> can consist of pseudo-code, flowcharts, or structured English. The DFDs model the structure of the system as a network of interconnected processes composed of functional primitives. The data dictionary is a set of entries (definitions) of data flows, data elements, files, and databases. The data dictionary entries are partitioned in a top-down manner. They can be referenced in other data dictionary entries and in data flow diagrams.|$|E
50|$|The <b>Process</b> <b>Specification</b> Language (PSL) {{is a set}} {{of logic}} terms used to {{describe}} processes. The logic terms are specified in an ontology that provides a formal description of the components and their relationships that make up a process. The ontology was developed at the National Institute of Standards and Technology (NIST), and has been approved as an international standard in the document ISO 18629.|$|E
40|$|The {{manufacturing}} techniques, basic materials used, {{and equipment}} {{required to produce}} monolayer boron-aluminum composites are described. Tentative materials and <b>process</b> <b>specifications</b> are included. Improvements in bonding and filament spacing obtained through use of brazing powder in the fugitive binder are discussed...|$|R
40|$|Efficient {{estimation}} {{and representation}} of an organisation's behaviour requires <b>specification</b> of business <b>processes</b> and modelling of actors' behaviour. Therefore the existing classical approaches that concentrate only on planned processes are not suitable and {{an approach that}} integrates <b>process</b> <b>specifications</b> with behavioural models of actors should be used instead. The present research indicates that a suitable approach {{should be based on}} interactive computing. This paper examines the integration of UML diagrams for <b>process</b> <b>specifications,</b> the Q-model specifications for modelling timing criteria of existing and planned processes and a multi-agent approach for simulating non-deterministic behaviour of human actors in an organisation. The corresponding original methodology is introduced and some of its applications as case studies are reviewed...|$|R
40|$|Computer {{programs}} {{control and}} evaluate instrumentation system performance for numerous rocket engine test facilities and prescribe calibration and maintenance techniques {{to maintain the}} systems within <b>process</b> <b>specifications.</b> Similar programs can be written for other test equipment in an industry such as the petrochemical industry...|$|R
50|$|If {{the process}} generates {{considerable}} resin flow {{out of the}} workpiece, the <b>process</b> <b>specification</b> may demand resin traps. Some materials lose enormous amounts of highly mobile resin during heat-up, and this flow can sometimes work its way back through the vacuum plumbing perhaps far enough to plug critical components. It is far easier to prevent this sort of damage {{than it is to}} repair it.|$|E
50|$|One {{approach}} is to first define events {{from the outside world}} that require the system to react, then assign a bubble to that event. Bubbles that need to interact are then connected until the system is defined. Bubbles are usually grouped into higher level bubbles to decrease complexity. Data dictionaries are needed to describe the data and command flows, and a <b>process</b> <b>specification</b> is needed to capture the transaction/transformation information.|$|E
50|$|As {{with the}} other parameters, the {{required}} precision of temperature control depends upon the <b>process</b> <b>specification.</b> The autoclave should exceed this capability by a margin sufficient to preclude all chances of inadequate or excessive temperatures in the workload. Too hot and the parts can be damaged or undergo thermal excursion; too cold and the full structural properties may not be realized. Equally vital is the avoidance of variation in temperature throughout the working volume of the autoclave. Aerospace specifications include maximum allowable variation {{as well as how}} to test for uniformity.|$|E
50|$|When {{optimizing}} a process, {{the goal}} is to maximize {{one or more of the}} <b>process</b> <b>specifications,</b> while keeping all others within their constraints. This can be done by using a process mining tool, discovering the critical activities and bottlenecks, and acting only on them.|$|R
40|$|A key {{milestone}} for the Immobilization Project (AOP Milestone 3. 2 a) in Fiscal Year 1998 (FY 98) is {{the definition}} of the baseline composition or formulation for the plutonium ceramic form. The baseline formulation for the plutonium ceramic product must be finalized before the repository- and plant-related <b>process</b> <b>specifications</b> can be determined. The baseline formulation that is currently specified is given in Table 1. 1. In addition to the baseline formulation specification, this report provides specifications for two alternative formulations, related compositional specifications (e. g., precursor compositions and mixing recipes), and other preliminary form and <b>process</b> <b>specifications</b> that are linked to the baseline formulation. The preliminary specifications, when finalized, are not expected to vary tremendously from the preliminary values given...|$|R
40|$|Process- and {{task-driven}} workflow {{support has}} become vital for enterprises as they operate {{in an increasingly}} networked business environment. Thereby business <b>process</b> <b>specifications</b> represent boundary objects not only between different organizational units, but also between technology and business operations. <b>Process</b> <b>specifications</b> need to be integrated and implemented in a flexible way for actual work-task support. Although several business process techniques and technologies are in place there are still several transformational steps to be performed when implementing business operations based on detailed work descriptions. One effective way to prevent incoherencies is role-specific and task-driven modeling, representation, and processing of business operations. The introduced approach is termed subject-oriented business process management, as it ensures coherence between modeling and execution through focusing on the communication flow among process participants (subjects) {{in the course of}} work-task accomplishment. Anglai...|$|R
40|$|The report covers {{investigations}} of component and <b>process</b> <b>specification</b> for the UMNOL delay mixture. Sandia Corporation Research Report SC- 4792 (RR) "September 1963. "Includes bibliographical references. The report covers {{investigations of}} component and <b>process</b> <b>specification</b> for the UMNOL delay mixture. Mode of access: Internet...|$|E
40|$|The strong interrelationship between part geometry, {{material}} properties, tolerances, {{and process}} parameters for injection molded parts hinders tolerance allocation and <b>process</b> <b>specification.</b> The traditional design process of first optimizing tolerances and then setting process parameters {{to achieve these}} tolerances {{has the potential for}} sub-optimization. Rather simultaneous tolerance allocation and <b>process</b> <b>specification</b> is required. Unfortunately the injection molding modeling uncertainty hampers optimal tolerance and <b>process</b> <b>specification.</b> Consequently methods are needed for directly incorporating imprecision into these models. This paper advocates the use of imprecise quantities in existing analytical process models to simultaneously allocate tolerances and <b>process</b> <b>specification</b> for minimum manufacturing cost. A set mathematical approach called the Calculus of Imprecision (CoI) is developed to provide a general framework for including imprecision directly in existing process models. The CoI is a refinement of a worst-case interval approach but at various levels of plausibility with a reduced computational load...|$|E
40|$|Business {{transactions}} {{are prone to}} failure and {{having to deal with}} unexpected situations. Some business <b>process</b> <b>specification</b> languages, e. g. StAC, introduce notions like compensation handling. Given the need of verification of correctness in business related software, it is important to fill in the gap between business <b>process</b> <b>specification</b> languages like StAC and the verification software already available. We repor...|$|E
40|$|Abstract:- The data {{warehouse}} (DW) systems design involves several {{tasks such as}} defining the DW schemas and the ETL <b>processes</b> <b>specifications,</b> and these have been extensively studied and practiced for many years. However, the problems in heterogeneous data integration are still far from being resolved due {{to the complexity of}} ETL processes and the fundamental problems of data conflicts in information sharing environments. Current approaches that are based on existing software requirement methods still have limitations on translating the business semantics for DW requirements toward the ETL <b>processes</b> <b>specifications.</b> This paper proposes the Requirement Analysis Method for ETL processes (RAMEPs) that utilize ontology with the goal-driven approach in analysing the requirements of ETL processes. A case study of student affair domain is used to illustrate how the method can be implemented...|$|R
40|$|There {{are many}} {{industry}} efforts developing XML messages, transport mechanisms and business processes for application integration and B 2 B integration. The OAGI (Open Applications Group) has developed the largest set of business messages and integration scenarios for enterprise application integration and B 2 B integration. OAGI does not define <b>process</b> <b>specifications</b> or...|$|R
40|$|AbstractThis article {{presents}} {{an extension of}} the formalism of algebraic specifications to the specification of concurrent systems. The key concept is that of <b>process</b> <b>specifications,</b> which have two hierarchical layers: processes and data. Processes apply to data via an application operator, eventually yielding a set of data as a result. Syntax and semantics of <b>process</b> <b>specifications</b> are presented, with emphasis on methodological issues (how to write hierarchically consistent and complete specifications). A suitable notion of observational congruence is introduced and characterized. A notion of implementation is defined, and a general method for proving correction is considered, based on the notion of serializability proof. A primitive for putting specifications together, in parallel, is analyzed. Finally, richer primitives for building basic specifications are discussed. Our proposal is illustrated via several examples including the one of the systematic, stepwise development of a complex specification...|$|R
