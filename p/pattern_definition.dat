113|244|Public
2500|$|There {{are several}} {{ways in which the}} notion of [...] "pattern" [...] has been generalized. [...] For example, a vincular pattern is a {{permutation}} containing dashes indicating the entries that need not occur consecutively (in the normal <b>pattern</b> <b>definition,</b> no entries need to occur consecutively). [...] For example, the permutation 314265 has two copies of the dashed pattern 2-31-4, given by the entries 3426 and 3425. [...] For a dashed pattern β and any permutation π, we write β(π) for the number of copies of β in π. [...] Thus the number of inversions in π is 2-1(π), while the number of descents is 21(π). [...] Going further, the number of valleys in π is 213(π) + 312(π), while the number of peaks is 231(π) + 132(π). [...] These patterns were introduced by , who showed that almost all known Mahonian statistics could be expressed in terms of vincular permutations. [...] For example, the Major index of π is equal to 1-32(π) + 2-31(π) + 3-21(π) + 21(π).|$|E
50|$|Photomask defects largely {{originate}} {{during the}} {{electron beam lithography}} used for <b>pattern</b> <b>definition.</b>|$|E
50|$|Complex event {{processing}} (CEP) allows {{patterns of}} simple and ordinary events {{to be considered}} to infer that a complex event has occurred. Complex event processing evaluates a confluence of events and then takes action. The events (notable or ordinary) may cross event types and occur {{over a long period}} of time. The event correlation may be causal, temporal, or spatial. CEP requires the employment of sophisticated event interpreters, event <b>pattern</b> <b>definition</b> and matching, and correlation techniques. CEP is commonly used to detect and respond to business anomalies, threats, and opportunities.|$|E
5000|$|... 27-52: The {{design of}} the universe, {{including}} numbers and physics. Some of its <b>patterns.</b> <b>Definition</b> of matter.|$|R
25|$|So-called n+k <b>patterns</b> (<b>definitions</b> of {{the form}} fact (n+1) = (n+1) * fact n) were no longer allowed. This {{syntactic}} sugar had misleading semantics, in which the code looked like it used the (+) operator, but in fact desugared to code using (-) and (>=).|$|R
40|$|The paper {{presents}} syntactic <b>pattern</b> <b>definitions</b> {{designed for}} Croatian WordNet {{in order to}} create unambiguous and consistent synset definitions. The rules are implemented in form of finite-state transducers and tested on already existing version of Croatian WordNet. Results are presented using standard evaluation measures...|$|R
50|$|X-rays {{generate}} secondary electrons as in {{the cases}} of extreme ultraviolet lithography and electron beam lithography. While the fine <b>pattern</b> <b>definition</b> is due principally to secondaries from Auger electrons with a short path length, the primary electrons will sensitize the resist over a larger region than the X-ray exposure. While this does not affect the pattern pitch resolution, which is determined by wavelength and gap, the image exposure contrast (max-min)/(max+min) is reduced because the pitch is on the order of the primary photo-electron range. The sidewall roughness and slopes are influenced by these secondary electrons as they can travel few micrometers in the area under the absorber, depending on exposure X-ray energy. Several prints at about 30 nm have been published.|$|E
5000|$|There {{are several}} {{ways in which the}} notion of [...] "pattern" [...] has been generalized. For example, a vincular pattern is a {{permutation}} containing dashes indicating the entries that need not occur consecutively (in the normal <b>pattern</b> <b>definition,</b> no entries need to occur consecutively). For example, the permutation 314265 has two copies of the dashed pattern 2-31-4, given by the entries 3426 and 3425. For a dashed pattern β and any permutation π, we write β(π) for the number of copies of β in π. Thus the number of inversions in π is 2-1(π), while the number of descents is 21(π). Going further, the number of valleys in π is 213(π) + 312(π), while the number of peaks is 231(π) + 132(π). These patterns were introduced by , who showed that almost all known Mahonian statistics could be expressed in terms of vincular permutations. [...] For example, the Major index of π is equal to 1-32(π) + 2-31(π) + 3-21(π) + 21(π).|$|E
40|$|Modified ion-bombardment technqiue {{interconnects}} MOS {{circuit elements}} without affecting circuit parameters. Multilevel metalization involves: surface treatment prior to metalization; first metalization; metal <b>pattern</b> <b>definition</b> and photoresist removal; dielectric deposition; second metalization; and final dielectric deposition...|$|E
5000|$|Nested {{structure}} becomes unwieldy {{with many}} sublevels and cannot define recursive elements, so most complex RELAX NG schemas use references to named <b>pattern</b> <b>definitions</b> located separately in the schema. Here, a [...] "flattened schema" [...] defines {{precisely the same}} book markup as the previous example: ...|$|R
50|$|Elm {{is a novel}} {{functional}} reactive {{programming language}} (no callbacks) with Haskell like syntax (type annotations included) that compiles to Javascript, but with strict evaluation (top down evaluation, no where clauses), with simplified syntax (single <b>pattern</b> <b>definitions,</b> no guards), propagating events and changes from event sources through the dependency graph.|$|R
40|$|This paper proposes an {{automatic}} method to discover <b>definition</b> <b>patterns</b> from a dictionary made for humans. It contains frequent patterns to describe words and concepts. Each <b>definition</b> <b>pattern</b> gives {{a set of}} similar words {{and can be used}} as a template to clarify distinctions among them. To discover these <b>definition</b> <b>patterns,</b> we convert <b>definition</b> sentences into tree structures, and compress them using the MDL principle. An experiment on a Japanese children dictionary is reported, showing the effectiveness of our method. ...|$|R
30|$|Segmented {{characters}} are recognized using the special language and <b>pattern</b> <b>definition.</b> Image {{must be in}} good quality for fast processing and high accuracy. Sample characters in various fonts {{may have to be}} collected to train the OCR engine to recognize the same characters in different fonts.|$|E
40|$|Scanning helium {{ion beam}} {{lithography}} {{is presented as}} a promising <b>pattern</b> <b>definition</b> technique for dense sub- 10 -nm structures. The powerful performance in terms of high resolution, high sensitivity, and a low proximity effect is demonstrated in a hydrogen silsesquioxane resist. © 2009 American Vacuum Society...|$|E
40|$|Nanoimprint {{lithography}} {{is capable}} of patterning substrates with high definition patterns at relatively high patterning speeds. In this article we describe the fabrication of high resolution “T” gate resist profiles by imprint lithography. The fabrication of high resolution stamping tools and the imprinting process itself are {{critical to the success}} or failure of this technique and they are described in the article. Two different techniques were used to fabricate stamping tools. The first involved <b>pattern</b> <b>definition</b> by high resolution electron beam lithography followed by electroforming. The second involved <b>pattern</b> <b>definition</b> by electron beam lithography followed by a two stage silicon etching process. Imprinted T gate resist profiles with footwidths less than 100 nm in length were obtained on gallium arsenide substrates for the purpose of producing metallized gates for a self-aligned gate pr...|$|E
40|$|Abstract—Accurately {{recovered}} {{design patterns}} support de-velopment related tasks like program comprehension and re-engineering. Researchers proposed {{a variety of}} recognition ap-proaches already. Though, much progress was made, {{there is still a}} lack of accuracy and flexibility in recognition. A major problem is the large variety of variants for implementing the same pattern. Furthermore, the integration of multiple search techniques is required to provide more accurate and effective pattern detection. In this paper, we propose variable <b>pattern</b> <b>definitions</b> composed of reusable feature types. Each feature type is assigned to one of multiple search techniques that is best fitting for its detection. A prototype implementation was applied to three open source applications. For each system a baseline was determined and used for comparison with the results of previous techniques. We reached very good results with an improved pattern catalog, but also demonstrated the necessity for customizations on new inspected systems. These results demonstrate the importance of customizable <b>pattern</b> <b>definitions</b> and multiple search techniques in order to overcome accuracy and flexibility issues of previous approaches...|$|R
5000|$|... 7. The {{ontology}} uses relations {{which are}} unambiguously defined following the <b>pattern</b> of <b>definitions</b> {{laid down in}} the OBO Relation Ontology.|$|R
40|$|An {{improved}} {{version of}} the “marching cubes” algorithm [W. Lorensen and H. Cline, Comp. Graph. 21, (1987) ] for the generation of isosurfaces from 3 D data fields is presented and applied to molecular surfaces. The new algorithm avoids inconsistent <b>pattern</b> <b>definitions</b> of the original one, which lead to artificial gaps. The advantage of a logarithmic interpolation procedure, in particular for data fields typically occurring in molecular science, is demonstrated. An example is the generation of molecular surfaces based upon electron density data...|$|R
40|$|This is a {{synthetic}} smart card data set {{that can be}} used to test pattern detection methods for the extraction of temporal and spatial data. The data set is tab seperated and based on a stylized travel pattern description for city of Utrecht in The Netherlands and is developed and used in Chapter 6 of the PhD Thesis of Paul Bouman. This dataset contains the following files: 	journeys. tsv : the actual data set of synthetic smart card data 	utrecht. xml : the activity <b>pattern</b> <b>definition</b> that was used to randomly generate the synthethic smart card data 	validate. ref : a file derived from the activity <b>pattern</b> <b>definition</b> {{that can be used}} for validation purposes. It specifies which activity types occur at each location in the smart card data set...|$|E
40|$|The {{results of}} a study into the {{dependency}} of SAM coverage, subsequent post-etch <b>pattern</b> <b>definition</b> and minimum feature size {{on the quality of}} the Au substrate used in both physical mask and optical mask atomic nanolithographic experiments are presented in this paper. In comparison, sputtered Au substrates yield much smoother surfaces and a higher density of { 111 } oriented grains than evaporated Au surfaces. Phase imaging with an atomic force microscope shows that the quality and percentage coverage of uniform alkanethiol monolayer adsorption was much greater for sputtered Au surfaces. Exposure of the monolayer with a laser-cooled Cs beam allowed determination of the minimum Cs dose (2 monolayers) to expose the SAM with lateral force microscopy. Suitable wet-etching, with etch rates of 2. 2 nm min- 1, results in optimized <b>pattern</b> <b>definition.</b> Utilizing these optimizations, features as small as 50 nm were achieved using both a sub- 100 nm physical mask and optical standing wave mask...|$|E
40|$|Research in {{automated}} pattern detection from {{source code}} {{has focused on}} the efficiency of pattern extraction mechanisms; there are fewer projects on making the act of <b>pattern</b> <b>definition</b> easier and more accessible to practicing software engineers. We have developed the Program-Structured <b>Pattern</b> <b>Definition</b> Language (PsPDL) with the goal of giving programmers a familiar notation (more algorithmic, less mathematical) with which to create new pattern definitions for the catalogs that drive pattern recognition tools. The syntax of PsPDL resembles that of Java, with a few additional constructs added to express first-order or set theoretic concepts (such as quantification over identifiers); PsPDL also includes a simple module system that faciliates reusing pattern definitions. The semantics of PsPDL are based on a translation to first-order logic with a focus on modeling the dependencies among the semantic entities of OO programs. PsPDL is a first step towards solving the problem of training pattern catalogs directly in programming language source code. 1...|$|E
40|$|Experts {{recently}} identified 49 joint motion {{patterns in}} children with cerebral palsy during a Delphi consensus study. <b>Pattern</b> <b>definitions</b> were therefore the result of subjective expert opinion. The present study aims to provide objective, quantitative data supporting the identification of these consensus-based patterns. To do so, statistical parametric mapping {{was used to compare}} the mean kinematic waveforms of 154 trials of typically developing children (n = 56) to the mean kinematic waveforms of 1719 trials of children with cerebral palsy (n = 356), which were classified following the classification rules of the Delphi study. Three hypotheses stated that: (a) joint motion patterns with ‘no or minor gait deviations’ (n = 11 patterns) do not differ significantly from the gait pattern of typically developing children; (b) all other pathological joint motion patterns (n = 38 patterns) differ from typically developing gait and the locations of difference within the gait cycle, highlighted by statistical parametric mapping, concur with the consensus-based classification rules. (c) all joint motion patterns at the level of each joint (n = 49 patterns) differ from each other during at least one phase of the gait cycle. Results showed that: (a) ten patterns with ‘no or minor gait deviations’ differed somewhat unexpectedly from typically developing gait, but these differences were generally small (≤ 3 °); (b) all other joint motion patterns (n = 38) differed from typically developing gait and the significant locations within the gait cycle that were indicated by the statistical analyses, coincided well with the classification rules; (c) joint motion patterns at the level of each joint significantly differed from each other, apart from two sagittal plane pelvic patterns. In addition to these results, for several joints, statistical analyses indicated other significant areas during the gait cycle that {{were not included in the}} <b>pattern</b> <b>definitions</b> of the consensus study. Based on these findings, suggestions to improve <b>pattern</b> <b>definitions</b> were made. status: publishe...|$|R
40|$|Abstract Ontology design {{patterns}} are normally instantiated by replicating and adapting the pattern concepts and roles. The relation between <b>pattern</b> <b>definitions</b> and their instantiations is documented in natural language. The use of parametric ontologies or pattern-reuse modifications to OWL-DL {{has been suggested}} before, but so far only practical aspects have been analysed, leaving the formal semantics of these extensions as future work. In this work we present formal <b>definitions</b> for ontology <b>pattern</b> and pattern instantiations, together with the semantics of instantiation. We propose the use of semantic annotations to describe and generate OWL pattern instantiations, {{without the need for}} explicit ontology replication, and provide tools to support this process. ...|$|R
5000|$|... is locally {{redundant}} {{as it is}} {{an instance}} of the first <b>pattern</b> in the <b>definition</b> ...|$|R
40|$|We {{introduce}} the Ptidej project and its tool suite {{to evaluate and}} to enhance software quality by promoting patterns. First, we summarise {{the components of the}} tool suite and describe its implementation in Java, which uses several architectural, design, and language patterns. Then, we take position on issues related to pattern claims, choices, uses, and limits from our experience with <b>pattern</b> <b>definition,</b> formalisation, use for reverse-engineering and for implementation...|$|E
40|$|Aluminum <b>pattern</b> <b>definition</b> was {{evaluated}} using AZ 5214 E photoresfst 1 n conventional posfttve and image reversal modes. Wet etch and liftoff strategies were examined for each photolithographic process. Defect density {{as a function}} of feature size is given for each process. and yield versus area 1 s projected. It was determined that image reversal processing yielded a lower defect density than conventional resist processing for both etch and liftoff processes...|$|E
40|$|We {{report the}} results of a study into the factors {{controlling}} the quality of nanolithographic imaging. Self-assembled monolayer (SAM) coverage, subsequent postetch <b>pattern</b> <b>definition,</b> and minimum feature size all depend {{on the quality of the}} Au substrate used in material mask atomic nanolithographic experiments. We find that sputtered Au substrates yield much smoother surfaces and a higher density of { 111 }-oriented grains than evaporated Au surfaces. Phase imaging with an atomic force microscope shows that the quality and percentage coverage of SAM adsorption are much greater for sputtered Au surfaces. Exposure of the self-assembled monolayer to an optically cooled atomic Cs beam traversing a two-dimensional array of submicron material masks mounted a few microns above the self-assembled monolayer surface allowed determination of the minimum average Cs dose (2 Cs atoms per self-assembled monolayer molecule) to write the monolayer. Suitable wet etching, with etch rates of 2. 2 nm min- 1, results in optimized <b>pattern</b> <b>definition.</b> Utilizing these optimizations, material mask features as small as 230 nm in diameter with a fractional depth gradient of 0. 820 nm were realized...|$|E
40|$|Ontology design {{patterns}} are normally instantiated by replicating and adapting the pattern concepts and roles. The relation between <b>pattern</b> <b>definitions</b> and their instantiations is documented in natural language. The use of parametric ontologies or pattern-reuse modifications to OWL-DL {{has been suggested}} before, but so far only practical aspects have been analysed, leaving the formal semantics of these extensions as future work. In this work we present formal <b>definitions</b> for ontology <b>pattern</b> and pattern instantiations, together with the semantics of instantiation. We propose the use of semantic annotations to describe and generate OWL pattern instantiations, {{without the need for}} explicit ontology replication, and provide tools to support this processprovide tools to support this process...|$|R
40|$|BACKGROUND: Atrial {{fibrillation}} (AF) {{patterns and}} {{their relations with}} long-term prognosis are uncertain, partly because <b>pattern</b> <b>definitions</b> are challenging to implement in longitudinal data sets. We developed a novel AF classification algorithm and examined AF patterns and outcomes in the community. METHODS AND RESULTS: We characterized AF patterns between 1980 and 2005 among Framingham Heart Study participants who survived 3 ̆e/= 1 year after diagnosis. We classified participants based on their pattern within the first 2 years after detection as having AF without recurrence, recurrent AF, or sustained AF. We examined associations between AF patterns and 10 -year survival using proportional hazards regression. Among 612 individuals with AF, mean age was 72. 5 +/- 10. 8 years, and 53...|$|R
40|$|Abstract. Communities of {{practice}} require many specialized communication services, including customized workflow management systems, discussion services, and knowledge management systems. Communication ambiguities create a mismatch between these services and community requirements, and {{are caused by}} unclear (e. g. incomplete, inconsistent, overlapping) <b>definitions</b> of communication <b>patterns.</b> These are sets of related communicative workflow and norms definitions describing the acceptable and desired communicative interactions within a community. Addressing communication ambiguities requires a process of meaning negotiation, in which community members arrive at the requisite amount of agreement on <b>pattern</b> <b>definitions</b> to continue or improve collaboration. Ontologies are instrumental in facilitating this negotiation process in largescale online communities. In the DOGMA approach, we are exploring ways to develop ontology-guided meaning negotiation...|$|R
40|$|Sub-micron {{structures}} of high-Tc thin films have been realized with Selective Epitaxial Growth (SEG). Two different echniques to achieve SEG have been studied. First, narrow trenches down to 100 nm are etched into the substrate with a four-layer E-beam lithography technique. Second, amorphous metal layers {{have been used}} to define <b>pattern</b> <b>definition</b> masks. Besides the suitability of both techniques, also the potential to combine these techniques i part of this study. 1...|$|E
40|$|We {{demonstrate}} {{a new technology}} for RC gate delay reduction, by fabricating an array of amorphous silicon thin-film transistors (a-Si:H TFTs) on a thin glass substrate provided with via holes. AU gates are connected through via holes to a metal line that is run {{on the back side}} of the substrate. We opened via holes with a diameter of 35 to 50 mu m in 50 mu m glass foil. For the first time, all TFT <b>pattern</b> <b>definition</b> steps used a process which employs electrophotographic toner masks...|$|E
40|$|Abstract 32 {{consensus}} {{patterns for}} a set of functional regions and structural motifs in protein sequences were constructed. The <b>pattern</b> <b>definition</b> is heuristic and based on 11 selected steric and physicochemical properties. By comparison with these patterns, it was possible to identify, without false detection, 1532 sites in 8702 protein sequences of SWISSPROT. Screening against such a pattern library offers a considerable chance to identify functional regions or structural motifs in proteins from which only the sequence is known. Pattern search; Property pattern; Primary structure; Recognitio...|$|E
40|$|Rule {{composition}} and decomposition {{is a hot}} research topic {{within the context of}} model transformation. Mostly, transformation rules are considered as atomic parts of the transformation and rule composition {{has been the focus of}} recent research in the model transformation area. In our approach, we consider the transformation operations such as add, delete and update operations as the atomic parts of the transformation and the synthesis of these operations constitutes a single transformation rule. Defining complex and hierarchical source <b>pattern</b> <b>definitions</b> requires approaches and techniques about the {{composition and}} decomposition of these operations. In this paper, we discuss the problem statement and present an example case in which operation composition is required...|$|R
30|$|We have {{successfully}} demonstrated the enhanced luminous flux and lumen efficiency in white light-emitting diodes by the randomly textured phosphor structure. The textured phosphor structure was fabricated {{by a simple}} imprinting technique, which does not need an expensive dry-etching machine or a complex <b>patterned</b> <b>definition.</b> The textured phosphor structure increases luminous flux by 5.4 % and 2.5 % at a driving current of 120 mA, compared with the flat phosphor and half-spherical lens structures, respectively. The increment {{was due to the}} scattering of textured surface and also the phosphor particles, leading to the enhancement of utilization efficiency of blue light. Furthermore, the textured phosphor structure has a larger view angle at the full width at half maximum (87 °) than the reference LEDs.|$|R
40|$|Design {{patterns}} are language-independent software-engineering techniques for solving recurring problems {{within a particular}} problem-context. Despite their generality, they have been primarily adopted by, {{and for the most}} part developed within, the object-oriented community. As a result, some <b>pattern</b> <b>definitions</b> are sometimes expressed with objects-oriented machinery in mind such as classes and inheritance. We test the paradigm independence of these design patterns and investigate the viability of adopting existing patterns from the object-oriented paradigm to the message-passing concurrency setting. By porting these techniques to the new programming paradigm, we expect to inherit the benefits associated with these design patterns. We achieve these goals by implementing a suite of design patterns as reusable modules in Erlang, an industry-strength message-passing language for programming concurrent distributed systems. peer-reviewe...|$|R
