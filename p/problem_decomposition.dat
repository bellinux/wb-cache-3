405|1260|Public
50|$|Classifications of {{parallel}} programming models {{can be divided}} broadly into two areas: process interaction and <b>problem</b> <b>decomposition.</b>|$|E
50|$|A {{parallel}} program {{is composed of}} simultaneously executing processes. <b>Problem</b> <b>decomposition</b> relates {{to the way in}} which the constituent processes are formulated.|$|E
50|$|D. E. Keyes, Y. Saad, and D. G. Truhlar, Domain-Based Parallelism and <b>Problem</b> <b>Decomposition</b> Methods in Computational Science and Engineering. SIAM, Philadelphia, 1995.|$|E
2500|$|George B. Dantzig and Mukund N. Thapa. 2003. Linear Programming 2: Theory and Extensions. Springer-Verlag. (Comprehensive, {{covering}} e.g. pivoting and interior-point algorithms, large-scale <b>problems,</b> <b>decomposition</b> following Dantzig-Wolfe and Benders, {{and introducing}} stochastic programming.) ...|$|R
40|$|AbstractThis paper {{deals with}} {{iterative}} algorithms for domain decomposition suitable for singular perturbation problems. Convergence results are established for one-dimensional and two-dimensional <b>problems.</b> <b>Decomposition</b> into subdomains is accompanied via singular perturbation character of problems. Numerical examples are presented. The developed parallel iterative algorithm is {{compared with the}} Schwarz alternating procedure...|$|R
40|$|This thesis {{focuses on}} {{determining}} when a graph with additional structure contains certain subgraphs, particularly circuits, cycles, or trees. The specific problems and presented results include {{a blend of}} many fundamental graph theory concepts such as edge-coloring, routing <b>problems,</b> <b>decomposition</b> <b>problems,</b> and containing cycles of various lengths. The three primary chapters in this thesis address the problems of finding eulerian circuits with additional restrictions, decomposing the edge-colored complete graph K_n into rainbow spanning trees, and showing a 4 -connected claw-free and N(3, 2, 1) -free graph is pancyclic. Adviser: Stephen G. Hartk...|$|R
50|$|At this point, problem {{analysis}} — <b>problem</b> <b>decomposition</b> — is complete. The {{next step is}} to reverse the process and to build the desired software system though a process of solution composition.|$|E
50|$|A {{parallel}} programming language may {{be based on}} one {{or a combination of}} programming models. For example, High Performance Fortran is based on shared-memory interactions and data-parallel <b>problem</b> <b>decomposition,</b> and Go provides mechanism for shared-memory and message-passing interaction.|$|E
40|$|Cooperative {{coevolution}} employs different <b>problem</b> <b>decomposition</b> {{methods to}} decompose the neural network problem into subcomponents. The efficiency of a <b>problem</b> <b>decomposition</b> method {{is dependent on}} the neural network architecture {{and the nature of the}} training problem. The adaptation of <b>problem</b> <b>decomposition</b> methods have been recently proposed which showed that different <b>problem</b> <b>decomposition</b> methods are needed at different phases in the evolutionary process. This paper employs an adaptive cooperative coevolution <b>problem</b> <b>decomposition</b> framework for training recurrent neural networks on chaotic time series problems. The Mackey Glass, Lorenz and Sunspot chaotic time series are used. The results show improvement in performance when compared to cooperative coevolution and other methods from literature...|$|E
40|$|Abstract—Evolutionary {{algorithms}} {{that rely}} on dominance ranking often suffer from a low selection pressure problem when dealing with many-objective <b>problems.</b> <b>Decomposition</b> and user-preference based methods can help to alleviate this problem to a great extent. In this paper, a user-preference based evolutionary multi-objective algorithm is proposed that uses decomposition methods for solving many-objective <b>problems.</b> <b>Decomposition</b> techniques that are widely used in multi-objective evolutionary optimization require a set of evenly distributed weight vectors to generate a diverse set of solutions on the Pareto-optimal front. The newly proposed algorithm, R-MEAD 2, improves the scalability of its previous version, R-MEAD, which uses a simplex-lattice design method for generating weight vectors. This makes the population size {{is dependent on the}} dimension size of the objective space. R-MEAD 2 uses a uniform random number generator to remove the coupling between dimension and the population size. This paper shows that a uniform random number generator is simple and able to generate evenly distributed points in a high dimensional space. Our comparative study shows that R-MEAD 2 outperforms the dominance-based method R-NSGA-II on many-objective problems. I...|$|R
3000|$|..., whose {{elements}} are in general not zero. To overcome this <b>problem</b> the <b>decomposition</b> method is implemented. The time complexity is at most [...]...|$|R
40|$|We {{present a}} new key {{exchange}} primitive {{based on the}} <b>decomposition</b> <b>problem</b> over noncommutative groups. Different from the key establishment schemes that rely on the <b>decomposition</b> <b>problem</b> {{where the problem is}} decomposing an element into three parts where the middle piece is known, our scheme relies on decomposing an element into three parts, all unknown. We call this <b>problem</b> "Triple <b>Decomposition</b> Problem". This seems to be a harder problem because it requires quadratic systems to be solved instead of linear systems. We discuss the new primitive over two di#erent protocols. The underlying problems in the two protocols differ slightly. We discus...|$|R
40|$|The {{breaking}} down {{of a particular}} problem through <b>problem</b> <b>decomposition</b> has enabled complex problems to be solved efficiently. The two major <b>problem</b> <b>decomposition</b> methods used in cooperative coevolution are synapse and neuron level. The combination of both the <b>problem</b> <b>decomposition</b> as a hybrid <b>problem</b> <b>decomposition</b> has been seen applied in time series prediction. The different <b>problem</b> <b>decomposition</b> methods applied at particular area of a network can share its strengths {{to solve the problem}} better, which forms the major motivation. In this paper, we are proposing a <b>problem</b> <b>decomposition</b> method that combines neuron and network level problem decompositions for Elman recurrent neural networks and applied to time series prediction. The results reveal that the proposed method has got better results in few datasets when compared to two popular standalone methods. The results are better in selected cases for proposed method when compared to several other approaches from the literature...|$|E
40|$|The {{decomposition}} {{of a particular}} problem can become a tiresome task if little connections between the elements is needed. In cooperative coevolution of recurrent networks, synapse and neuron level are the two noteworthy <b>problem</b> <b>decomposition</b> methods. Through combination of both of the <b>problem</b> <b>decomposition</b> methods, the individual <b>problem</b> <b>decomposition</b> methods can share its strengths {{to solve the problem}} at hand better. In this paper, a recently proposed <b>problem</b> <b>decomposition</b> method known as Neuron-Synapse <b>problem</b> <b>decomposition</b> method is modified for Elman recurrent neural networks. The results reveal that the proposed method has got better results in selected datasets when compared to standalone methods. The results are better in some cases for proposed method when compared to other approaches from the literature...|$|E
40|$|<b>Problem</b> <b>decomposition</b> is an {{important}} aspect in using cooperative coevolution for neuro-evolution. Cooperative coevolution employs different <b>problem</b> <b>decomposition</b> methods to decompose the neural network training problem into subcomponents. Different <b>problem</b> <b>decomposition</b> methods have features that are helpful at different stages in the evolutionary process. Adaptation, collaboration and competition are characteristics that are needed for cooperative coevolution as multiple sub-populations are used to represent the problem. It is important to add collaboration and competition in cooperative coevolution. This paper presents a competitive two-island cooperative coevolution method for training recurrent neural networks on chaotic time series problems. Neural level and Synapse level <b>problem</b> <b>decomposition</b> is used {{in each of the}} islands. The results show improvement in performance when compared to standalone cooperative coevolution and other methods from literature...|$|E
50|$|Subgradient {{projection}} {{methods are}} often applied to large-scale <b>problems</b> with <b>decomposition</b> techniques. Such decomposition methods often allow a simple distributed method for a problem.|$|R
40|$|Two massively {{parallel}} algorithms for large scale linear and convex quadratic network flow problems are proposed and studied. The methods {{are based on}} the alternating step method for monotropic programming. The original network flow problem is decomposed in simple subproblems involving only few variables for which solution in closed form exists. Computational results obtained on the CRAY T 3 D show that the methods hold the promise of solving extremely large size problems. Key words: Parallel Computing, Network Flow <b>Problems,</b> <b>Decomposition</b> Methods. ...|$|R
40|$|We {{present a}} coevolutionary {{approach}} to learning sequential decision rules which {{appears to have a}} number of advantages over non-coevolutionary approaches. The coevolutionary approach encourages the formation of stable niches representing simpler subbehaviors. The evolutionary direction of each subbehavior can be controlled independently, providing an alternative to evolving complex behavior using intermediate training steps. Results are presented showing a significant learning rate speedup over a noncoevolutionary approach in a simulated robot domain. In addition, the results suggest the coevolutionary approach may lead to emergent <b>problem</b> <b>decompositions.</b> ...|$|R
40|$|Cooperative {{coevolution}} {{has proven}} to be efficient in solving global optimisation and real world application problems. However, it is highly sensitive to <b>problem</b> <b>decomposition,</b> especially in the context of non-separable functions that possess interacting decision variables. <b>Problem</b> <b>decomposition</b> has been a challenge of cooperative coevolution. Efficient <b>problem</b> <b>decomposition</b> strategy ensures that interacting variables are grouped into separate subcomponents. Introduction of competition and collaboration features have shown to be advantageous in evolutionary algorithms but have not quite been fully explored in cooperative coevolution. In this paper, a method is utilized that enforces competition in coevolution whereby different <b>problem</b> <b>decomposition</b> schemes are implemented as islands that compete and collaborate with each other. The proposed framework is tested on several global optimisation benchmark problems and achieves promising results...|$|E
40|$|In the {{application}} of cooperative coevolution for neuro-evolution, <b>problem</b> <b>decomposition</b> methods rely on architectural properties of the neural network to divide it into subcomponents. During every stage of the evolutionary process, different <b>problem</b> <b>decomposition</b> methods yield unique characteristics that {{may be useful in}} an environment that enables solution sharing. In this paper, we implement a two-island competition environment in cooperative coevolution based neuro-evolution for feedforward neural networks for pattern classification problems. In particular the combinations of three <b>problem</b> <b>decomposition</b> methods that are based on the architectural properties that refers to neural level, network level and layer level decomposition. The experimental results show that the performance of the competition method is better than that of the standalone <b>problem</b> <b>decomposition</b> cooperative neuro-evolution methods...|$|E
40|$|<b>Problem</b> <b>decomposition</b> and divide-and-conquer {{strategies}} {{have been proposed}} to improve the performance and realization of neural network solutions for complex problems. This paper reports on an experimental evaluation of performance gains brought about by <b>problem</b> <b>decomposition</b> for abductive network classifiers that classify four noisy waveform patterns having two waveform types (sine/cosine) and two different frequencies. Two-stage <b>problem</b> <b>decomposition</b> improves overall classification accuracy from 87. 2 % to 99 %. <b>Problem</b> <b>decomposition</b> classifiers {{were found to be}} much more tolerant to model simplification and reduction in the training set size compared to monolithic solutions. This allows trading-off some of the large gain in classification performance for some other advantages that may be quite desirable in some applications, such as simpler models that execute faster and are easier to implement, smaller training sets, and shorter training times. A <b>problem</b> <b>decomposition</b> classifier is more accurate than a monolithic classifier in spite of the former being five times simpler, executing over two times faster, requiring one-fifth of the training data, and synthesized in one-eleventh of the training time. Performanc...|$|E
40|$|Declarative language, such as SQL, {{has been}} proved {{successful}} in particular architecture due to its efficient processing algorithms and global optimizations. Currently it is also being used in many other fields like Games, Stream Processing, etc. Issues involved in a declarative language ddesign include complexity-expressiveness tradeoffs, algebraization and engine implementation, (heuristic, cost-based, global) optimization, <b>problem</b> <b>decompositions,</b> etc. In the first section we discuss query engine, which is not only relevant to building databases but also to ground the later material in the physical reality...|$|R
30|$|It {{is widely}} {{known that the}} {{projection}} technique {{cannot be applied to}} solve variational inclusion problems and thus one has to use resolvent operator techniques to solve them. The beauty of the iterative methods involving the resolvent operator is that the resolvent step involves the maximal monotone operator only, while other parts facilitate the <b>problem’s</b> <b>decomposition.</b> Most of the problems related to variational inclusions are solved by maximal monotone operators and their generalizations such as H-accretivity [10], H-monotonicity [11] and many more; see e.g., [12 – 17] and the references therein.|$|R
2500|$|Some {{specific}} <b>decomposition</b> <b>problems</b> {{that have}} been studied include: ...|$|R
30|$|According to [6], the <b>problem</b> <b>decomposition</b> {{decreases}} the computational complexity considerably. Moreover, using meta-heuristic algorithms like Genetic algorithm {{is a common}} solution for decreasing the complexity of optimization problems. Therefore, the HFTTC-TMBF method which uses both the <b>problem</b> <b>decomposition</b> idea and the Genetic algorithm, definitely reduces the computational complexity {{as compared to the}} FTTC-TMBF.|$|E
40|$|Collaboration enables weak {{species to}} survive in an {{environment}} where different species compete for limited resources. Cooperative coevolution (CC) is a nature-inspired optimization method that divides a problem into subcomponents and evolves them while genetically isolating them. <b>Problem</b> <b>decomposition</b> is an important aspect in using CC for neuroevolution. CC employs different <b>problem</b> <b>decomposition</b> methods to decompose the neural network training problem into subcomponents. Different <b>problem</b> <b>decomposition</b> methods have features that are helpful at different stages in the evolutionary process. Adaptation, collaboration, and competition are needed for CC, as multiple subpopulations are used to represent the problem. It is important to add collaboration and competition in CC. This paper presents a competitive CC method for training recurrent neural networks for chaotic time-series prediction. Two different instances of the competitive method are proposed that employs different <b>problem</b> <b>decomposition</b> methods to enforce island-based competition. The results show improvement in the performance of the proposed methods in most cases when compared with standalone CC and other methods from the literature...|$|E
40|$|A major {{challenge}} in cooperative neuro-evolution {{is to find}} an efficient <b>problem</b> <b>decomposition</b> {{that takes into account}} architectural properties of the neural network and the training problem. In the past, neuron and synapse Level decomposition methods have shown promising results for time series problems, howsoever, the search for the optimal method remains. In this paper, a <b>problem</b> <b>decomposition</b> method, that is based on neuron level decomposition is proposed that features a reverse encoding scheme. It is used for training feedforward networks for time series prediction. The results show that the proposed method has improved performance when compared to related <b>problem</b> <b>decomposition</b> methods and shows competitive results when compared to related methods in the literature...|$|E
40|$|In {{this paper}} {{we use the}} nonrepresentable ring E_p(m) to {{introduce}} public key cryptosystems in noncommutative settings {{and based on the}} Semigroup Action <b>Problem</b> and the <b>Decomposition</b> <b>Problem</b> respectively. The second author was supported by Ministerio de Economia y Competitividad grant MTM 2014 - 54439 and Junta de Andalucia FQM 0211...|$|R
40|$|In {{this work}} we {{continue}} the study already begun in our foregoing paper, {{dealing with the}} <b>decomposition</b> <b>problem</b> or a binary fuzzy relation defined in the Cartesian product of a finite space. We characterize the whole set of the solutions of the max-min fuzzy relation equation which formulates the <b>decomposition</b> <b>problem...</b>|$|R
5000|$|There {{are several}} other methods for solving sparse <b>decomposition</b> <b>problems</b> ...|$|R
40|$|Aircraft {{designers}} {{are faced with}} a process that requires too many resources to encompass all requirements, design options, and tools. To find a set of feasible, not necessary optimal, solutions a human uses feasilization; integrating heuristics of problem simplification, <b>problem</b> <b>decomposition,</b> and trial and error methods. This paper focuses on <b>problem</b> <b>decomposition,</b> discussing implementation and usefulness. <b>Problem</b> <b>decomposition</b> yields a tree of product design problems. The tree structure offers a straightforward interface for inspecting the design specification and addition of new engineering knowledge. Using the product design process commonality, every problem can be solved using the same framework. The methodology is tested in a conceptual design study of a wing-type product, based on structural design considerations. I...|$|E
40|$|This {{paper is}} a {{continuation}} of two previous papers where the authors used Genetic Algorithm with automated <b>problem</b> <b>decomposition</b> strategy for small scale capacitated vehicle routing problems (CVRP) and vehicle routing problem with time windows (VRPTW). In this paper they have extended their scheme to large scale capacitated vehicle routing problems by introducing selective search version of the automated <b>problem</b> <b>decomposition</b> strategy, a faster genotype to phenotype translation scheme, and various search reduction techniques. The authors have shown that genetic algorithm used with automated <b>problem</b> <b>decomposition</b> strategy outperforms the GAs applied on the problem as a whole {{not only in terms of}} solution quality but also in terms of computational time on the large scale problems...|$|E
40|$|The paper {{extends the}} <b>problem</b> <b>decomposition</b> method [1] of pinch {{technology}} to application in retrofit of heat exchanger network {{of crude oil}} refinery. The retrofit procedure of <b>problem</b> <b>decomposition</b> employs three steps: heat exchanger auditing, decom position and optimization. The rigorous optimization was facilitated usi ng Excel worksheet. The result of the analysis is compared with the traditional pinch technology method of Tjoe [2]. <b>Problem</b> <b>decomposition</b> improved heat exchanger network of crude oil refinery by 30. 7 % in term of the tota l area and by 30. 6 % in payback period. In contrast to conventional method {{only part of the}} network is reconstructed realizing a flexible network with mini mum re-piping works and relocating of units...|$|E
50|$|The {{precipitation}} {{occurs in}} slightly acidic medium, thus avoids the <b>problem</b> of <b>decomposition</b> of iodide and thiosulfate in strongly acidic medium, and the hexacyanoferrate(III) {{can be determined}} by iodometry as usual.|$|R
40|$|In this paper, we {{investigate}} how underlying relevant technological conditions induce distinguishable patterns {{of change in}} industry structure and evolution. A mapping is detected between the specific nature of <b>problem</b> <b>decompositions</b> and research techniques at the micro level of knowledge bases, and patterns of structural evolution at the macro level of the industry network. The graph-theoretic techniques we introduce map major technological discontinuities on changes observed {{at the level of}} dominant organization forms. They might have applications in other domains, whenever the identification of structural breaks and homological relationships between technological and industrial spaces are important issues...|$|R
40|$|This paper {{describes}} the formulation and solution of a multi-aircraft routing problem which is posed {{as a global}} optimization calculation. The paper extends previous work (involving a single aircraft using two dimensions) which established that the algorithm DIRECT is a suitable solution technique. The present work considers {{a number of ways}} of dealing with multiple routes using different <b>problem</b> <b>decompositions.</b> A further enhancement is the introduction of altitude to the problems so that full three-dimensional routes can be produced. Illustrative numerical results are presented involving up to three aircraft and including examples which feature routes over real-life terrain data. 1...|$|R
