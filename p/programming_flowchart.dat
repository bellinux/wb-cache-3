3|75|Public
40|$|Abstract. Through the {{assembling}} {{process analysis}} of the switch functional parts, the physical structure of the assembling equipment was designed and modeled, moreover, the schematic diagram of the pneumatic drive system was also designed {{on the basis of}} the motion requirements of the equipment, and finally, the I/O allocation and the electric control diagram were designed accordingly, together with the PLC <b>programming</b> <b>flowchart</b> plotted. Eventually, remarkable benefit has been exhibited after putting into production...|$|E
40|$|Abstract. The {{electronic}} {{white board}} and the tablet PC are bringing new technologies to modern education. This paper presents a hybrid SVM-HMM algorithm for sketch recognition. In this algorithm, ICA is used to reduce the dimension of features, a set of fuzzy SVMs are used as preliminary feature classifiers to produce fix length feature vector, which acts as a probability evaluator in the hidden states of Hidden Markov Models, and HMMs are employed as finally classifiers to recognize the unknown pattern. Experiment results show the hybrid algorithm has good learning and recognition ability. And based on this algorithm, a programming teaching system is designed to identify the sketches to the <b>programming</b> <b>flowchart,</b> and converts it to C language programs finally...|$|E
40|$|Spreadsheets {{are widely}} used in various areas by end users because {{they are easy to}} use. However, {{due to the lack of}} the {{methodology}} for analysis and design for spreadsheet applications, users suffer with problems such as high error rates, low reusability, and maintenance difficulties. To mitigate these problems, we introduce a multi-paradigm spreadsheet that allows end users to analyze their problems and design for the solutions. Our multi-paradigm spreadsheet supports object-oriented <b>programming,</b> <b>flowchart,</b> XML, and spreadsheet. While writing the XML document, they analyze the problems by grouping similar things into one concept, and the concept develops into a class in object-oriented programming. The flowchart and spreadsheet are used for describing operations or methods of the class. Our multi-paradigm spreadsheet is so simple that even end users can analyze and design for their applications. Key words: Multi-Paradigm, Spreadsheet, End Users, OO...|$|E
5000|$|<b>Program</b> <b>flowchart,</b> {{showing the}} {{controls}} {{in a program}} within a system ...|$|R
5000|$|In Huang's 1975 paper, a decision-to-decision path {{is defined}} as path in a <b>program's</b> <b>flowchart</b> such that all the {{following}} hold (quoting from the paper): ...|$|R
40|$|This {{appendix}} {{is divided}} into three sections. The first section contains abstracts of each of the eight computer programs in the system, instructions for keypunching the three input documents, and computer operating instructions pertaining to each program. The second section contains system flowcharts for the entire system as well as <b>program</b> <b>flowcharts</b> for each <b>program.</b> The last section contains PL/l program listings of each program...|$|R
50|$|Flowgorithm is a {{graphical}} {{authoring tool}} which {{allows users to}} write and execute <b>programs</b> using <b>flowcharts.</b> The approach is designed to emphasize the algorithm rather than the syntax of a specific <b>programming</b> language. The <b>flowchart</b> {{can be converted to}} several major programming languages. Flowgorithm was created at Sacramento State University.|$|R
50|$|The {{software}} {{allows students}} to write and execute <b>programs</b> using <b>flowcharts.</b> It is typically used in academics to teach introductory programming concepts.|$|R
5000|$|Douglas Hartree in 1949 {{explained}} that Herman Goldstine and John von Neumann {{had developed a}} flowchart (originally, diagram) to plan computer programs. His contemporary account is endorsed by IBM engineers and by Goldstine's personal recollections. The original <b>programming</b> <b>flowcharts</b> of Goldstine and von Neumann {{can be seen in}} their unpublished report, [...] "Planning and coding of problems for an electronic computing instrument, Part II, Volume 1" [...] (1947), which is reproduced in von Neumann's collected works.|$|R
40|$|This thesis dwells on program {{creating}} {{in program}} environment Excel, {{in accordance with}} submission from submitter. Program {{is going to be}} able solve all required values. This thesis has four parts. First part is oriented on problems of urban mass transportation a methods of specific energy consumption. Second part contains <b>program</b> <b>flowchart</b> and <b>program</b> description. Third part contains theoretical solution of specific energy consumption and theoretical comparison of computing methods. Last part contains numerical substitution in an equations and calculating of their values...|$|R
50|$|Visual Logic is a {{graphical}} {{authoring tool}} which {{allows students to}} write and execute <b>programs</b> using <b>flowcharts.</b> It is typically used in academics to teach introductory programming concepts.|$|R
40|$|The systematization of glossarial indexes is very {{important}} for teaching and studying Japanese language and literature. It is well-known that the computer system is an effective measure to compile a glossarial index with the context. So I purposed to compose a program package for it by personal computer. As the first step, I attempted to compile a glossarial index to the part of the colloquial translation of Hyakunin-isshu Minenokakehashi. The present paper includes: 1. <b>program</b> <b>flowchart</b> for compiling a glossarial index, 2. operating procedures, 3. testing results, and 4. unsettled problems...|$|R
40|$|Abstract. This work {{describes}} {{the development of}} a novel equipment support training system. Differing from the traditional teaching panel method, the proposed method does not require any complex computations for coordinate transformation and is a simpler scheme. The proposed equipment support training system includes small equipment support training robots. The system specification phase determines the basic functionalities of the system, which can be described as a series of multi ‐ level goals. Interface analysis is used to understand the input and output interactions between the system and the environment. The equipment support training system architecture, control board design and <b>program</b> <b>flowchart</b> are described and implemented...|$|R
40|$|Abstract—This work {{describes}} {{the development of}} a novel equipment support training system. Differing from the traditional teaching panel method, the proposed method does not require any complex computations for coordinate transformation and is a simpler scheme. The proposed equipment support training system includes small equipment support training robots. The system specification phase determines the basic functionalities of the system, which can be described as a series of multi ‐ level goals. Interface analysis is used to understand the input and output interactions between the system and the environment. The equipment support training system architecture, control board design and <b>program</b> <b>flowchart</b> are described and implemented. Keywords-support training system; system architecture; embedded system I...|$|R
40|$|Background An {{individual}} has {{alleged that the}} visna virus, which caused illness and death in Icelandic sheep, {{was used by the}} National Cancer Institute’s (NCI) Special Virus Cancer Program (SVCP) to develop HIV- 1, the virus that has caused the global AIDS pandemic. • This individual cited a SVCP research <b>program</b> <b>flowchart</b> as evidence that HIV- 1 was developed intentionally in its laboratories. Objectives • Identify overall stated purposes and outcomes of SVCP. • Describe scientific assessments of the origins of the AIDS virus and any possible evidence regarding the origin of the AIDS virus at SVCP. • Describe outcome of recent litigation involving the individual’s allegations of federal government involvement in the origins of the AIDS virus...|$|R
50|$|<b>Flowchart</b> <b>programming</b> {{interface}} for PICs and PICAXE chips, including exporting {{programs to}} a physical PIC or PICAXE.|$|R
40|$|When people write {{a report}} that {{involves}} a complex argument towards a conclusion, they can use a design tool called the inference tree, which enables them to outline the argument, and quickly detect reasoning errors in the outline. Yet when the argument is very complex, the inference tree may spread over several pages, so that writers may often have to flip {{back and forth between}} those pages. To prevent unnecessary flipping, they can draw the tree as a hierarchy of modules, similar to a modular hierarchy of <b>program</b> <b>flowcharts</b> or structure charts, where a major module controls several minor modules. In drawing the tree, writers can adopt four principles of Computing: modularity, the criterion of minimal coupling between modules, and the methods of forward and backward chaining to draw all the modules...|$|R
40|$|Abstract- Teaching {{computer}} programming to novices has always posed {{a major challenge}} to educators. Many novices acquire basic programming skills but {{they are unable to}} utilize them in a meaningful way to solve non-routine problems. As a result, they do not achieve any level of programming fluency. Collaboration has been identified as a useful tool to help overcome this problem if utilized at the right times during the programming/problem solving process. This paper presents a model for a synchronous gaming CSCL (Computer Supported Collaborative Learning) application aimed at improving problem-solving skill. The model addresses some major issues in CSCL such as unequal participation among group members, increasing argumentative discussion and promoting positive interdependence and individual accountability. A game, Collaborative Online Problem Solving (COPS), which was developed using this model, is presented. COPS aims to improve the problem-solving skill of novice programmers, by requiring them to collaboratively build <b>program</b> <b>flowcharts...</b>|$|R
50|$|Logicator {{is an easy}} to use {{shareware}} <b>flowcharting</b> <b>program.</b> The Logicator {{web page}} is out of date as the free version does support all commands but shows nag screens.|$|R
40|$|Considering the {{characteristics}} of spatial straightness error, this paper puts forward a kind of evaluation method of spa-tial straightness error using Geometric Approximation Searching Algorithm (GASA). According to the minimum con-dition principle of form error evaluation, the mathematic model and optimization objective of the GASA are given. The algorithm avoids the optimization and linearization, and can be fulfilled in three steps. First construct two parallel quadrates based on the preset two reference points of the spatial line respectively; second construct centerlines by con-necting one quadrate each vertices to another quadrate each vertices; after that, calculate the distances between mea-sured points and the constructed centerlines. The minimum zone straightness error is obtained by repeating comparing and reconstructing quadrates. The principle and steps of the algorithm to evaluate spatial straightness error is described in detail, and the mathematical formula and <b>program</b> <b>flowchart</b> are given also. Results show that this algorithm can evaluate spatial straightness error more effectively and exactly...|$|R
50|$|ABC FlowCharter is a <b>flowchart</b> <b>program</b> {{originally}} from Micrografx, Inc. The trademark for this software was filed on August 25, 1989, and registered January 1991. It {{is also known}} as Micrografx FlowCharterand iGrafx FlowCharter.|$|R
40|$|This work {{describes}} {{the development of}} a novel embedded teaching system for multi-jointed robots. Differing from the traditional teaching panel method, the proposed method does not require any complex computations for coordinate transformation and is a simpler scheme. The proposed teaching system includes a small teaching robot, which is scaled to the real jointed robot, however, joints are replaced with potentiometers. An embedded electrical control system contains the main control board and joint control cards. The main control board receives voltage signals from the teaching robot and transforms them into position commands for the motion of each joint. All the position commands are recorded on the main control board using the desired sample rate. In trajectory planning mode, the operator drags the teaching robot to generate the desired motion. The electrical control system drives the real jointed robot in response to the received voltage signals from the teaching robot. Trajectory teaching can be done naturally without expertise. The teaching system architecture, control board design and <b>program</b> <b>flowchart</b> are described and implemented...|$|R
40|$|The LHC {{cryogenic}} {{system is}} based on a five-point feed scheme with eight refrigerators serving the eight sectors of the LHC machine. The paper presents the simplified flow scheme of the eight sectors and the mathematical methods including the <b>program</b> <b>flowchart</b> and the boundary conditions to simulate the cooldown and warmup of these sectors. The methods take into account the effect of the pressure drop across the valves as well as the pressure evolution in the different headers of the cryogenic distribution line. The simulated pressure and temperature profiles of headers of the LHC sector during the cooldown and warmup are given and the temperature evolutions of entire processes of cooldown and warmup are presented. As a conclusion, the functions of the input temperature for the normal and fast cooldown and warmup, the cooldown and warmup time of each sector and the distributions of mass flow rates in each sector are summarized. The results indicate {{that it is possible to}} cool down any of the LHC sector within 12. 7 days in normal operation and 6. 8 days in case of fast operation...|$|R
5000|$|Flowgorithm can interactively {{translate}} <b>flowchart</b> <b>programs</b> into {{source code}} written in other programming languages. As the user steps through their flowchart, the related code in the translated program is automatically highlighted. The following programming languages are supported: ...|$|R
40|$|Sistema UNIDEK na automação de bibliografias classificadas pela CDU; formato e etapas para o processamento de bibliografias, tendo em vista o Sistema; equipamento e material, bem como rotina de trabalho e programas necessários. Inclui fluxogramas, modelos etc. [en] The Unidek System {{applied to}} UDC {{classified}} bibliographies. Formatting and steps {{necessary to the}} processing of data, arming at the whole system; equipment, material, routine of work and <b>programming</b> required. <b>Flowcharts,</b> working sheets, models etc. are included...|$|R
40|$|Although {{enormous}} {{capacity of}} the human brain, we only use {{an average of two}} per cent of our potential brain power, we therefore have the potential to expand our brainpower and testing (testing) on a regular basis as a key method of brain power. Psychometric tests covering subjects such as personality tests which includes lateralitas tests, creativity tests which refers to the patterns of thoughts, feelings, behaviors and knowledge as well as measuring the range of human aspects. Intelligence test a test used to measure the level of one 2 ̆ 7 s thinking ability. One of the problems that arise in every human being has a personality that has different capabilities, including lateralitas, creativity and intelligence. In this case the characteristics that distinguish ourselves with others. Based on these issues raised and the author tries to find solutions to give a practical through the questions will be answered in psychometric tests. In the scientific writing is demonstrated several ways to solve these malasah, including using application analysis, design programs, ie algorithms programs, menu structure, <b>program</b> <b>flowcharts,</b> input and output design and configuration of the computer, and discussion about these issues...|$|R
40|$|This paper {{presents}} and evaluates {{a new approach}} of energy estimation for single software components based on <b>program</b> <b>flowcharts.</b> This estimation {{is designed to be}} applicable early in the design process, which enables system designer to evaluate different design variants with respect to the energy consumption of the later system. The energy estimation model is based on individual flowchart elements and execution probabilities for branches and iterations. The used flowchart elements are for arithmetical calculations, flow control and reads / writes, which are a selection of possible elements used to show the feasibility of the approach. The estimation model is verified in a first step by using three commercially available benchmarks. The flowcharts of these are utilized to estimate the energy consumption by using the presented model. The comparison between estimated and measured energy consumption of an exemplary embedded system results in an estimation error bandwidth between - 11. 9 % and + 6. 9 %. The main benefit of the presented approach is the applicability within the development phase “System Design”, i. e. previous to any software implementation. This is realized by using only available information of that development phase and generic elements to estimate the energy consumption...|$|R
40|$|This article {{explains}} how {{to construct a}} ranking function for any program that is proved terminating by size-change analysis. The “principle of size-change termination ” for a first-order functional language with wellordered data is intuitive: A program terminates on all inputs, if every infinite call sequence (following program control flow) would imply an infinite descent in some data values. Size-change analysis is based on information associated with the subject program’s call-sites. This information indicates, for each call-site, strict or weak data decreases observed as a computation traverses the call-site. The set DESC of call-site sequences for which the size-changes imply infinite descent is ω-regular, as is the set FLOW of infinite call-site sequences following the <b>program</b> <b>flowchart.</b> If FLOW ⊆ DESC (a decidable problem), every infinite call sequence would imply infinite descent in a well-ordering — an impossibility — so the program must terminate. This analysis accounts for the termination arguments applicable to different call-site sequences, without indicating a ranking function for the program’s termination. In this article, it is explained how one can be constructed whenever size-change analysis succeeds. The constructed function has an unexpectedly simple form; it is expressed using only min, max, and lexicographic tuples o...|$|R
50|$|In 1965, Applied Data Research was one {{of those}} custom {{software}} development firms. It wrote a software program for RCA mainframes called Autoflow, designed to create flowcharts documenting the structure of other computer <b>programs</b> (such <b>flowcharts</b> were an important tool for documenting and maintaining software). RCA decided not to license the product. Other computer manufacturers also refused to license Autoflow, so in 1965 Goetz decided to market it directly to RCA mainframe users. This is generally cited as {{the first time that a}} software program was marketed and sold as a standalone product.|$|R
40|$|AbstractIn this paper, {{we study}} {{some aspects of}} the {{semantics}} of nondeterministic <b>flowchart</b> <b>programs</b> with recursive procedures. In {{the first part of this}} work we provide the operational semantics of programs using the concept of an execution tree. We propose a new definition of the semantics of a non-deterministic recursive program as a mapping from the input domain to the set of execution trees determined by the program. Using this new concept, we prove that every nondeterministic <b>flowchart</b> <b>program</b> with recursive procedures can be unfolded into a semantically equivalent infinite pure flowchart (without procedures). This result is applied in the second part of this work to prove the soundness of an inductive assertion method which is also complete with a finite number of assertions (contrary to De Bakker and Meertens's method [11]) ...|$|R
40|$|ABSTRACT Objective: {{to verify}} causes of {{inactivity}} in the Home Delivery Medicament Program, as referred by users from a Primary Health Care Service in São Paulo, comparing {{them to the}} causes registered in the program and analyzing them in the theoretical model Concept of Access to Health. Methods: cross-sectional study, interviewing 111 inactive users; and documentary study in the program records. Results: half of the users {{did not know the}} condition of inactivity. Discrepancies were found between the user's and the program's information, observing different levels of agreement: Absence of physician and administrative staff member 0 %; Transfer to other service 25 %; Death 50 %; Option to quit 50 %; Address change 57 % and Change in therapeutic schedule 80 %. The users' feeling of accepting the program was observed. In the health access concept, inactivity can be explained in the information dimension, in the degree of asymmetry between the patient's and the health professional's knowledge, identified through the indicators: education, knowledge and information sources. Conclusions: due to the low education level, the user does not assimilate the information {{on the steps of the}} <b>program</b> <b>flowchart,</b> does not return for the assessment that guarantees its continuity. Consequently, (s) he stops receiving the medication and spends a long time without treatment, increasing the cardiovascular risk of hypertensive (92 % of the sample), diabetic (44 %) and dyslipidemic patients (31 %) ...|$|R
40|$|We {{present a}} {{methodology}} based on Fifo nets, for {{the transformation of}} <b>flowcharts</b> modeling sequential <b>programs</b> into <b>flowcharts</b> integrating all semantically equivalent behaviours, both sequential and parallel. The model of fifo nets is appropriate since fifo nets model the test to zero problem (required for the modeling of loops of not predined size), and integrate scheduling (required since some actions must occur in a given order). We describe the complete transformation, and show that the fifo nets got provides a concise representation of {{the set of the}} behaviours semantically equivalent to the behaviours of the sequential flowchart. Proc. of 15 th International Conference on Computing and Informatio...|$|R
40|$|Application system {{inventory}} program {{based on}} visual basic on Sinar Baru for helping admin to manage {{in or out}} items systematically which it doesn 2 ̆ 7 t save and computerized well. The programming using System Development Life Cicle (SDLC). SDLC has four phases, that are: Planning Phase, Analysis Phase, Design Phase, and Implementation Phase. Another design that used for this <b>program</b> are <b>flowchart,</b> Context diagram, data flow diagram (DFD), Entity Relation Diagram (ERD), Relational Table. Visual Basic as programming language and SQL Management Server as database. The result of this application are recording about in or out items, sales return and purchasing return can be save and computerized systematically...|$|R
40|$|Flowcharting is {{a common}} method of setting out the {{requirements}} {{for a piece of}} code. It is simple with few rules to follow. Rarely however, is it used as the code itself. This paper describes the outline of a software package that uses the flowchart as the code for a small, autonomous, modular robot, designed for use in High Schools and Universities at an introductory level. By using flowcharting the student is introduced to the concept of structured <b>programming.</b> A <b>flowchart</b> is often the first step in programming. Here it is the only step, easing the student into the art of coding, and simplifying the teachers job. <br /...|$|R
40|$|The {{main object}} of my semestral {{work is to}} {{diagnose}} communication of devices on the network Profibus DP. Consequently to signalize potential failures such as disconnected device or partially wrong connection of device. Signalization will be running on touch screen of operating panel. In {{the first part of}} my work there are the networks described, in which the system will communicate and also summary description of equipments which will be diagnosed. In the next part of my work there is description of diagnosed <b>program</b> and <b>flowchart.</b> In the last part, my semestral work is talking about visualization of diagnostic program, collocation of windows and of entire design...|$|R
40|$|The main {{objective}} {{of this study was}} to describe the microcontroller programming competencies, describe and implemented strategies master in microcontroller programming competencies and assesment for teachers SMK electronics study program according to vocational education development principles. This activities used discussion methode, demonstration, problem solving, project work related microcontroller programming and interfacing. There are 14 sub competencies must be training in microcontroller programming and interfacing implemented with discussion dan practice approach. Teacher must be master in programming problem identification, problem define, <b>programming</b> algorithm, <b>flowchart,</b> used instruction set, writing program, running assembler, download program to microcontroller, and test the program. Keyword : competencie, microcontroller, vocational educatio...|$|R
