45|172|Public
40|$|Two {{types of}} <b>precedence</b> <b>relationship</b> {{representations}} for mechanical assembly sequences are presented: precedence {{relationships between the}} establishment of one connection between two parts {{and the establishment of}} another connection, and precedence relationships between the establishment of one connection and states of the assembly process. <b>Precedence</b> <b>relationship</b> representations have the advantage of being very compact. The problem with these representations was how to guarantee their correctness and completeness. Two theorems are presented each of which leads to the generation of one type of <b>precedence</b> <b>relationship</b> representation guaranteeing its correctness and completeness for a class of assemblies...|$|E
3000|$|Showing the <b>{{precedence}}</b> <b>relationship</b> between task b and i. Equal 1 if task b is the precedence for task i [...]...|$|E
40|$|Abstract: The paper {{presents}} the basic concepts of C+++, {{an extension of}} C++ allowing the programmer to define new operator symbols with user-defined priorities by specifying a partial <b>precedence</b> <b>relationship.</b> Furthermore, so-called flexary operators accepting any number of operands and operators with lazily evaluated operands are supported. The latter are particularly useful to implement new kinds of control structures. ...|$|E
40|$|Five {{types of}} {{representations}} for assembly sequences are reviewed: the directed graph of feasible assembly sequences, the AND/OR graph of feasible assembly sequences, {{the set of}} establishment conditions, and two types of sets of <b>precedence</b> <b>relationships.</b> (<b>precedence</b> <b>relationships</b> between the establishment of one connection between parts {{and the establishment of}} another connection, and <b>precedence</b> <b>relationships</b> between the establishment of one connection and states of the assembly process). The mappings of one representation into the others are established. The correctness and completeness of these representations are established. The results presented are needed in the proof of correctness and completeness of algorithms for the generation of mechanical assembly sequences...|$|R
5000|$|PERT chart {{explicitly}} defines {{and makes}} visible dependencies (<b>precedence</b> <b>relationships)</b> between the {{work breakdown structure}} (commonly WBS) elements.|$|R
30|$|To {{the best}} of our {{knowledge}} there are no existing algorithms in the literature for matchmaking and scheduling on a cloud/cluster subjected to an open stream of workflows, each of which is characterized by general <b>precedence</b> <b>relationships</b> among its constituent tasks and a deadline for completion. In order to investigate the effectiveness of the various optimization techniques used in RM-DCWF, a comparison with a simple, conventional technique that does not use such optimization techniques is conducted. A first-in-first-out (FIFO) scheduling algorithm that can handle multi-phase workflows with general <b>precedence</b> <b>relationships</b> among its constituent tasks is devised for the purpose.|$|R
40|$|The {{concurrency}} {{aspect of}} complex designs is explored. The advantages of decomposition of design activities are discussed. Two methodologies for decomposition of design activities are presented: a methodology {{based on the}} product structure, and a methodology based on the <b>precedence</b> <b>relationship</b> between activities. Both methodologies allow effective organization of resources required in the design process and simplify the management of design activities...|$|E
40|$|This paper {{analyzed}} {{the relation of}} precedence in international prices of soybeans, {{taking into account the}} main world exporters – Brazil, Argentina and the United States –, between 2003 and 2012. For this, we used the methodology proposed by causality Toda and Yamamoto (1995). The results indicate that the prices of soybean in Argentina there is precedence significant bidirectional causality from Brazil. Already soybean prices in Brazil are influenced both the market price of the United States and Argentina, while the prices of American commodity showed <b>precedence</b> <b>relationship</b> of Argentine prices...|$|E
40|$|This study {{presents}} a comprehensive mathematical formulation {{model for a}} short-term open-pit mine block sequencing problem, which considers nearly all relevant technical aspects in open-pit mining. The proposed model aims to obtain the optimum extraction sequences of the original-size (smallest) blocks over short time intervals and {{in the presence of}} real-life constraints, including <b>precedence</b> <b>relationship,</b> machine capacity, grade requirements, processing demands and stockpile management. A hybrid branch-and-bound and simulated annealing algorithm is developed to solve the problem. Computational experiments show that the proposed methodology is a promising way to provide quantitative recommendations for mine planning and scheduling engineers...|$|E
40|$|This paper {{analyses}} four representations for assembly sequences {{which are}} based on directed graphs, on AND/OR graphs, on establishment conditions, and on <b>precedence</b> <b>relationships.</b> The latter includes two types: <b>precedence</b> <b>relationships</b> between the establishment of one connection between parts and the establishment of another connection, and precedence relatioships between the establishment of one connection and states of the assembly process. The paper discusses how each representation is related to the others. The correctness and completeness of these representations are also addressed. The results presented are needed to prove the correctness and completeness of algorithms for the generation of mechanical assembly sequences. 1...|$|R
40|$|This paper {{addresses}} {{the problem of}} static and dynamic variable voltage scheduling of multi-rate periodic task graphs (i. e., tasks with <b>precedence</b> <b>relationships)</b> and aperiodic tasks in heterogeneous distributed real-time embedded systems. Such an embedded system may contain general-purpose processors, field-programmable gate arrays (FPGAs) and application-specific integrated circuits (ASICs). Variable voltage scheduling is performed only on general-purpose processors. The static scheduling algorithm constructs a variable voltage schedule via heuristics based on critical path analysis and task execution order refinement. The algorithm redistributes the slack in the initial schedule and refines task execution order in an efficient manner. The variable voltage schedule guarantees all the hard deadlines and <b>precedence</b> <b>relationships</b> of periodic tasks. The dynamic scheduling algorithm is also based on an initially valid static schedule. The objective of the on-line scheduling algorithm is to provide best-effort service to soft aperiodic tasks, {{as well as to}} reduce the system power consumption by determining clock frequencies (and correspondingly supply voltages) for different tasks at run-time, while still guaranteeing the deadlines and <b>precedence</b> <b>relationships</b> of hard real-time periodic tasks. 1...|$|R
40|$|Analysis method {{utilizes}} graph-theoretic {{approach for}} evaluating computation cost and makes logical distinction between linear graph of a computation and linear graph of a program. It applies equally well to other processes which depend on quatitative edge nomenclature and <b>precedence</b> <b>relationships</b> between edges...|$|R
40|$|An {{interactive}} {{approach to}} assembly planning is presented. It provides a virtual reality interface for production engineers to program the virtual representation of robotic manipulators in a three-dimensional (3 D) operation space. The direct human involvement creates a user-defined assembly sequence, which contains the human knowledge of mechanical assembly. By extracting the <b>precedence</b> <b>relationship</b> of machinery parts, {{for the first}} time it becomes possible to generate alternative assembly sequences automatically from a single sequence for robot reprogramming. This interactive approach introduces human expertise into assembly planning, thus breaking down the computational complexity of autonomous systems. Experiments and analysis provide strong evidence to support the incontestable advantages of 2 ̆ 2 manufacturing in the computer 2 ̆ 2...|$|E
40|$|Constrained graphs are {{directed}} graphs describing the control flow of processes models. In such graphs, nodes represent activities {{involved in the}} process, and edges the <b>precedence</b> <b>relationship</b> among such activities. Typically, nodes and edges can specify some constraints, which control the interaction among the activities. Faced with the above features constrained graphs are widely used in the modeling and analysis of Workflow processes. In this paper we overview two mining problems related {{to the analysis of}} constrained graphs, namely the analysis of frequent patterns of execution, and the induction of a constrained graph from a set of execution traces. We discuss some complexity aspects related to the problem of reasoning and mining on constrained graphs, and overview two algorithms for the mentioned problems...|$|E
40|$|The prime {{function}} of the effective utilization of heterogeneous multiprocessor system is accurately mapping of tasks and makes their scheduling on different processors for reducing their total finish time. Total runtime is time taken time for all jobs with the individual runtime of tasks and their communication cost among tasks. An optimal scheduling of parallel tasks with some <b>precedence</b> <b>relationship</b> onto a multiprocessor system is considered as NP-complete problem. The scheduling problem considered in this paper is bringing out the optimal mapping of tasks and their efficiently possible execution stream on multiprocessor system configuration. Several solutions and heuristics are proposed to solve this problem. We exhibit efficiency of Node duplication GA based technique by comparing {{against some of the}} existing deterministic scheduling techniques for minimizing inter processor traffic communicatio...|$|E
40|$|AbstractProjects {{that contain}} several {{identical}} or similar units are usually {{referred to as}} repetitive projects. Repetitive projects {{may be due to}} the uniform repetition of a set of activities throughout the project, or due to the physical layout of the project. Activities that repeat from one project unit to other project unit create a very important need for a project schedule that ensures the uninterrupted flow of crew from one unit to the next. This study will help to develop a method for scheduling repetitive projects with objectives of minimizing project duration, project cost and both of them with constraints of <b>precedence</b> <b>relationships</b> between activities, constraints of <b>precedence</b> <b>relationships</b> between units and constraints of the due date in which work should be complete...|$|R
40|$|We study a {{real-world}} scheduling problem arising {{in the context}} of a rolling ingots production. First we review the production process and discuss peculiarities that have to be observed when scheduling a given set of production orders on the production facilities. We then show how to model this scheduling problem using prescribed time lags between operations, different kinds of resources, and sequence-dependent changeovers. A branch-and-bound solution procedure is presented in the second part. The basic principle is to relax the resource constraints by assuming infinite resource availability. Resulting resource conflicts are then stepwise resolved by introducing <b>precedence</b> <b>relationships</b> among operations competing for the same resources. The algorithm has been implemented as a beam search heuristic enumerating alternative sets of <b>precedence</b> <b>relationships...</b>|$|R
40|$|We {{study the}} problem of {{levelling}} resources in a project with generalized <b>precedence</b> <b>relationships,</b> given a deadline for the completion of all the activities and variable execution intensities and flexible durations of the activities. Variable execution intensities have been taken into account firstly by Kis in 2005 applied to a real world scenario in which, due to the physical characteristics of some manufacturing processes, the effort associated with a certain activity for its execution may vary over time. Generalized <b>precedence</b> <b>relationships</b> and variable intensity execution and duration have not been dealt with together {{to the best of}} our knowledge. For this novel problem we propose a mixed integer linear programming formulation, a lower bound based on Lagrangian relaxation, and a branch and bound algorithm. Computational results on known benchmarks are provided...|$|R
40|$|A graph {{matching}} {{approach to}} optimal assignment of task modules with varying lengths and <b>precedence</b> <b>relationship</b> in a distributed computing system is proposed. Inclusion f module precedence into the optimal solution {{is made possible}} by the use of topological module orderings. Two graphs are defined to represent the processor structure and the module precedence r lationship, respectively. Assignment of the task modules to the system processors i transformed into a type of graph matching. The search of optimal graph matching corresponding to optimal task assignment is formulated as a state-space s arch problem which is then solved by the A * algorithm in artificial intelligence. Illustrative xamples and experimental results are included to show the effectiveness of the proposed approach. C. R. Cate#ories: D. 4. 1, 1. 2. 8. Index Terms. " Task assignment, distributed processing, raph matching, topological tree, minima...|$|E
40|$|Trends in the {{development}} of computer hardware are making the use of distributed systems increasingly attractive. The collection of event-trace data and the construction of process-time diagrams can provide a useful visualization tool. In practical situations, however, these diagrams are too large for users to find them comprehensible. The ability to detect and locate arbitrary (complex) predicates within an event trace can help to alleviate this problem. This thesis enumerates five classes of problems that a successful event- detection strategy should be able to identify: phase transitions, mutual- exclusion violations, subroutines, communication symmetry, and performance bottlenecks. Some previous efforts in this area offer an expressivity which is close to that required to meet these goals, but are hampered by an insufficient understanding of the partial order which underlies causality in a distributed-execution trace. This work defines a partial-order <b>precedence</b> <b>relationship</b> for co [...] ...|$|E
40|$|Tyt. z nagłówka. Bibliogr. s. 67. Assembly {{lines are}} special flow-lines {{production}} systems which are typical {{in the industrial}} production of high quantity standardized commodities. Assembly line balancing is based on evenly distribution of operations between workstations so that each idle time of the machines was minimal. It is assumed that operation times on the machines and the <b>precedence</b> <b>relationship</b> existing between the operations which results from the technology of the production line and the cycle time {{or the number of}} machines are known. In the paper short description about general assembly line problem and cost-oriented is described. Next the author presents description of used algorithms. A numerical example is calculated and the results are discussed. Presented paper shows that cost oriented assembly line balancing problem differs from time oriented problem and the differences are underlined. Dostępny również w formie drukowanej. KEYWORDS: assembly line, optimization, production, scheduling, manufacturing systems...|$|E
50|$|ADM is {{used for}} {{scheduling}} activities in a project plan. <b>Precedence</b> <b>relationships</b> between activities are represented by circles connected {{by one or more}} arrows. The length of the arrow represents the duration of the relevant activity. ADM only shows finish-to-start relationships, meaning that each activity is completed before the successor activity starts.|$|R
40|$|When high {{concurrency}} algorithms {{are scheduled}} {{on a small}} number of processors, low communication to computation ratios are produced. Scheduling techniques for these type of algorithms must efficiently balance computational loads. This paper describes a technique using evolutionary strategies to efficiently schedule high concurrency algorithms onto multiprocessors. I. Introduction Multiprocessor scheduling involves the assignment of a set of computational tasks onto a multiprocessor system such that the overall schedule length is minimized. The <b>precedence</b> <b>relationships</b> between tasks is often depicted as a directed, acyclic graph. The graph nodes represent tasks and the arcs incident to nodes represent <b>precedence</b> <b>relationships.</b> Task execution times are typically non-uniform. Factors such as processor interconnection topology, task precedence, and the number of processors all contribute to the difficulty in finding good assignments. In general this problem is NP-complete which means [...] ...|$|R
40|$|Scheduling {{tasks in}} {{multiprocessor}} systems {{is a difficult}} problem. This paper describes a method based upon evolutionary strategies to aid in finding good task assignments. The technique is illustrated be scheduling a digital signal processing algorithm on a two processor distributed system. I. Introduction Multiprocessor scheduling involves the assignment {{of a set of}} partially ordered computational tasks onto a multiprocessor system such that the overall schedule length is minimized. The <b>precedence</b> <b>relationships</b> between tasks is often depicted as a directed, acyclic graph. The graph nodes represent tasks and the arcs incident to nodes represent <b>precedence</b> <b>relationships.</b> Task execution times are typically non-uniform. Factors such as processor interconnection topology, task precedence, and the number of processors all contribute to the difficulty in finding good assignments. In general this problem is NP-complete which means heuristic approaches must be adopted. This paper present [...] ...|$|R
40|$|This {{research}} {{examines the}} performance of 13 dispatching rules for executing a resource-constrained project whose estimated activity durations may differ from the actual activity durations. The dispatching rules are tested in environments characterized by three factors, namely, the order strength of the <b>precedence</b> <b>relationship,</b> the level of resource availability {{and the level of}} estimation errors in the activity durations. The results show that project environment affects only the performance differences but not the grouping of the better dispatching rules. The greatest number of successors, rank positional weight, greatest cumulative resource requirement and minimum activity slack dispatching rules consistently perform better than the other dispatching rules, unaffected by the accuracy of the estimated activity durations. This finding validates the results of many past studies in the deterministic project environment for choosing the right dispatching rule for both projects with and without well-estimated activity durations. project management heuristics dispatching simulation...|$|E
40|$|A {{partitioning}} {{problem on}} chordal graphs that arises in {{the solution of}} sparse triangular systems of equations on parallel computers is considered. Roughly the problem is to partition a chordal graph G into the fewest transitively orientable subgraphs over all perfect elimination orderings of G, subject to a certain <b>precedence</b> <b>relationship</b> on its vertices. In earlier work, a greedy scheme that solved the problem by eliminating a largest subset of vertices at each step was described, and an algorithm implementing the scheme {{in time and space}} linear in the number of edges of the graph was provided. A more efficient greedy scheme, obtained by representing the chordal graph in terms of its maximal cliques, is described here. The new greedy scheme eliminates in a specified order a largest set of "persistent leaves", a subset of the leaf cliques in the current graph, at each step. Several new results about minimal vertex separators in chordal graphs, and in particular the concept of a cri [...] ...|$|E
40|$|With {{respect to}} the block {{assembly}} schedule in a shipbuilding enterprise, a spatial resource constrained project scheduling problem (SRCPSP) is proposed, which aims to minimize the makespan of a project under {{the constraints of the}} availability of a two-dimensional spatial resource and the <b>precedence</b> <b>relationship</b> between tasks. In order to solve SRCPSP to the optimum, a branch and bound algorithm (BB) is developed. For the BB-SRCPSP, first, an implicitly enumerative branch scheme is presented. Secondly, a precedence based lower bound, as well as an effective dominance rule, is employed for pruning. Next, a heuristic based algorithm is used to decide the order of a node to be selected for expansion such that the efficiency of the algorithm is further improved. In addition, a maximal space based arrangement is applied to the configuration of the areas required each day in an available area. Finally, the simulation experiment is conducted to illustrate the effectiveness of the BB-SRCPSP...|$|E
30|$|A {{representative}} set {{of existing}} work related to resource management on clouds for processing workflows is presented next. A workflow is usually modelled using a {{directed acyclic graph}} (DAG) where each node in the graph represents a task in the workflow and {{the edges of the}} graph represent the <b>precedence</b> <b>relationships</b> among the tasks.|$|R
40|$|This paper gives {{optimality}} {{conditions to}} obtain a priori <b>precedence</b> <b>relationships</b> {{among some of the}} jobs in a single machine scheduling problem so as to curtail the enumeration while using branch-and-bound technique. The objective is to minimize a quadratic (or generalized quadratic) penalty function of job completion times. production/scheduling, programming: integer algorithms, branch and bound...|$|R
40|$|It {{is shown}} that Lawler's {{efficient}} (order n 2) algorithm for the n-job, one-machine scheduling problem (where {{the objective is}} to minimize the maximum deferral cost subject to arbitrary <b>precedence</b> <b>relationships)</b> also applies when the processing times are random variables and {{the objective is to}} minimize the maximum expected deferral cost. Several special cases are explored. ...|$|R
40|$|Qualitative {{factors are}} {{difficult}} to mathematically manipulate when calculating the efficiency in data envelopment analysis (DEA). The existing methods of representing the qualitative data by ordinal variables and assigning values to obtain efficiency measures only superficially reflect the <b>precedence</b> <b>relationship</b> of the ordinal data. This paper treats the qualitative data as fuzzy numbers, and uses the DEA multipliers associated with the decision making units (DMUs) being evaluated to construct the membership functions. Based on Zadeh's extension principle, a pair of two-level mathematical programs is formulated to calculate the [alpha]-cuts of the fuzzy efficiencies. Fuzzy efficiencies contain more information for making better decisions. A performance evaluation of the chemistry departments of 52 UK universities is used for illustration. Since the membership functions are constructed from {{the opinion of the}} DMUs being evaluated, the results are more representative and persuasive. Data envelopment analysis Two-level mathematical programming Fuzzy sets Assurance region Qualitative data Ordinal data...|$|E
40|$|In this thesis, we addrcss the Passenger Pick-up and Drop-off Problem (PPDP). In PPDP. k {{vehicles}} transport n {{passengers from}} their pick-up locations to their Drop-off locntions. The vehicles {{stay at a}} start depot at beginning and go to an end depot after all services. Each vehicle has a limited capacity and each passenger may require different sp;lce in the vehicle. The objective is to schedule the vehicles to minimize the total traveling cost and satisfy all passengers. Our focus here is {{on the development of}} solution methodology and algorithms for a PPDP with one vehicle. We propose a new algorithm: the Grouping Method (G-M), to solve this problem. The G-M considers the <b>precedence</b> <b>relationship</b> as well as distance among nodes. Comparison with some general algorithms (e. g. Branch and Bound, Nearest Neighbor and Exchange) is done through computational experiments. The results show that the Grouping Method is very effective and efficient...|$|E
40|$|In {{this paper}} the {{causality}} / <b>precedence</b> <b>relationship</b> between inflation and inflation uncertainty {{has been tried}} to be examined for the G 7 countries with monthly frequency observations in the 1973 M 1 – 2008 M 09 period. In light of the proxy obtained for the inflation uncertainty data using contemporaneous exponential generalized autoregressive conditional heteroskedasticity (EGARCH) methods, the Granger causality tests indicate that supporting the arguments put forward by Friedman-Ball hypotheses, inflation is the Granger-cause of the inflation uncertainty considering a positive relationship. However, no clear-cut evidence for the positive causality running from inflationary uncertainty to inflation explained mainly by Cukierman-Meltzer hypotheses can be found for all the G 7 countries {{in the sense that}} such an inference seems to be supported in some countries, the sign of this relationship varies in some others, and no causality has been found in still others. All in all, we infer that inflation is a cause of an associated uncertainty component related to itself occurred in the economy...|$|E
40|$|Embedding task graphs into hypercubes is a {{difficult}} problem. When the embedding is one-to-one, schedule length is strongly influenced by dilation. Therefore, it is desirable to find low dilation embeddings. This paper describes a heuristic embedding technique based upon evolutionary strategies. The technique has been extensively investigated using task graphs which are trees, forests, and butterflies. In all cases the technique has found low dilation embeddings. An efficient parallel implementation of the evolutionary strategy is also given. 1 Introduction Embedding a task graph into a parallel processing array involves the assignment {{of a set of}} partially ordered computation tasks to processing elements (PEs) such that the overall schedule length is minimized. The <b>precedence</b> <b>relationships</b> between tasks is often depicted as a directed, acyclic graph where the graph nodes represent tasks and the arcs incident to nodes represent <b>precedence</b> <b>relationships.</b> Task execution times are typica [...] ...|$|R
40|$|The Sequential Ordering Problem (herewith, SOP) with <b>precedence</b> <b>relationships</b> was {{introduced}} in Escudero (1988), and extended to cover release and due dates in Escudero and Sciomachen (1993). It has {{a broad range of}} applications, mainly in production planning for manufacturing systems. The problem consists of finding a minimum weight Hamiltonian path on a directed graph with weights on the nodes and the arcs, satisfying <b>precedence</b> <b>relationships</b> among the nodes and given lower and upper bounds on the weights of the Hamiltonian subpaths. In this paper we present a model for the constrained minimum weight Hamiltonian path problem with precedences and due dates forcing constraints, and introduce related valid cuts {{that can be used in}} a separation framework for the dual (Lagrangian based) relaxation of the problem. We also provide an heuristic separation procedure to obtain those cuts, so-called the Lagrangian Relax-and- Cut (LRC) scheme. Computational experience is given for variations of some SOP cases already reported in the literature...|$|R
40|$|Some {{limitations}} {{have been}} identified in current software process modelling languages (SPML) concerning expressiveness, standarization, modularity and flexibility. We present a SPML called PROMENADE which aims at improving the above-mentioned features. Expressiveness is enhanced in PROMENADE by the use of a basic catalogue of <b>precedence</b> <b>relationships</b> (instead of transitions), the ability to define derived precedences using a high-level notation and the existence of dynamic <b>precedences</b> intended for <b>relationships</b> that are not known until process enactment time. Standarization is achieved by the mapping of PROMENADE features into a slightly extended UML. PROMENADE allows also the construction of complex models by the combination of partial ones using high-level operators. Postprint (published version...|$|R
