87|72|Public
25|$|Before {{a client}} and server {{can begin to}} {{exchange}} information protected by TLS, they must securely exchange or agree upon an encryption key and a cipher to use when encrypting data (see Cipher). Among {{the methods used for}} key exchange/agreement are: public and private keys generated with RSA (denoted TLS_RSA in the TLS handshake protocol), Diffie-Hellman (TLS_DH), ephemeral Diffie-Hellman (TLS_DHE), Elliptic Curve Diffie-Hellman (TLS_ECDH), ephemeral Elliptic Curve Diffie-Hellman (TLS_ECDHE), anonymous Diffie-Hellman (TLS_DH_anon), <b>pre-shared</b> <b>key</b> (TLS_PSK) and Secure Remote Password (TLS_SRP).|$|E
50|$|There {{are several}} ciphersuites: The {{first set of}} ciphersuites use only {{symmetric}} key operations for authentication. The second set use a Diffie-Hellman key exchange authenticated with a <b>pre-shared</b> <b>key.</b> The third set combine public key authentication of the server with <b>pre-shared</b> <b>key</b> authentication of the client.|$|E
5000|$|Transport Layer Security, {{including}} <b>pre-shared</b> <b>key</b> TLS (TLS-PSK) ...|$|E
50|$|FreeLAN {{has several}} ways to {{authenticate}} peers with each other. From version 2.0 FreeLAN offers <b>pre-shared</b> <b>keys,</b> certificate-based, and username-password based authentication.|$|R
2500|$|RFC 4279: [...] "Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)", adds {{three sets}} of new cipher suites for the TLS {{protocol}} to support authentication based on <b>pre-shared</b> <b>keys.</b>|$|R
5000|$|Using <b>pre-shared</b> <b>keys</b> can, {{depending}} on the ciphersuite, avoid the need for public key operations. This is useful if TLS is used in performance-constrained environments with limited CPU power.|$|R
50|$|EAP <b>Pre-shared</b> <b>key</b> (EAP-PSK), {{defined in}} RFC 4764, is an EAP method for mutual {{authentication}} and session key derivation using a <b>pre-shared</b> <b>key</b> (PSK). It provides a protected communication channel, when mutual authentication is successful, {{for both parties}} to communicate and is designed for authentication over insecure networks such as IEEE 802.11.|$|E
5000|$|In cryptography, Master/Session {{is a key}} {{management}} scheme in which a <b>pre-shared</b> <b>Key</b> Encrypting Key (called the [...] "Master" [...] key) is used to encrypt a randomly generated and insecurely communicated Working Key (called the [...] "Session" [...] key). The Working Key is then used for encrypting the data to be exchanged. Its advantage is simplicity, but it suffers the disadvantage of having to communicate the <b>pre-shared</b> <b>Key</b> Exchange Key, which {{can be difficult to}} update in the event of compromise.|$|E
50|$|One of the {{characters}} suspect that {{a variation of the}} one-time pad technique is suspected, wherein there is no <b>pre-shared</b> <b>key,</b> and it is instead generated algorithmically.|$|E
5000|$|Security Associations (SA) {{provides}} {{the bundle of}} algorithms and data that provide the parameters necessary for AH and/or ESP operations. The Internet Security Association and Key Management Protocol (ISAKMP) provides a framework for authentication and key exchange, with actual authenticated keying material provided either by manual configuration with <b>pre-shared</b> <b>keys,</b> Internet Key Exchange (IKE and IKEv2), Kerberized Internet Negotiation of Keys (KINK), or IPSECKEY DNS records.|$|R
50|$|Security for {{communications}} between Intel AMT and the provisioning service and/or management console {{can be established}} in different ways depending on the network environment. Security can be established via certificates and keys (TLS public key infrastructure, or TLS-PKI), <b>pre-shared</b> <b>keys</b> (TLS-PSK), or administrator password.|$|R
50|$|In April 2012, the IEEE {{approved}} Std 1815-2012 for publication. IEEE Std 1815-2010 {{has been}} deprecated. The 2012 {{version of the}} standard includes features for Secure Authentication Version 5. The previous version of secure authentication in IEEE 1815-2010 used <b>pre-shared</b> <b>keys</b> only. The new version is capable of using Public Key Infrastructure, and it facilitates remote key changes.|$|R
50|$|In cryptography, a <b>pre-shared</b> <b>key</b> (PSK) is {{a shared}} secret which was {{previously}} shared {{between the two}} parties using some secure channel before it needs to be used.|$|E
5000|$|Transport layer {{security}} (TLS) protocol, including <b>pre-shared</b> <b>key</b> TLS (TLS-PSK) {{to secure}} communications over the out-of-band network interface. The TLS implementation uses AES 128-bit encryption and RSA keys with modulus lengths of 2048 bits.|$|E
50|$|Transport Layer Security <b>pre-shared</b> <b>key</b> ciphersuites (TLS-PSK) {{is a set}} of {{cryptographic}} protocols {{that provide}} secure communication based on pre-shared keys (PSKs). These pre-shared keys are symmetric keys shared in advance among the communicating parties.|$|E
40|$|TLS {{is by far}} {{the most}} {{important}} protocol on the Internet for negotiating secure session keys and providing authentication. Only very recently, the standard ciphersuites of TLS have been shown to provide provably secure guarantees under a new notion called Authenticated and Confidential Channel Establishment (ACCE) introduced by Jager et al. at CRYPTO' 12. In this work, we analyse the variants of TLS that make use of <b>pre-shared</b> <b>keys</b> (TLS-PSK). In various environments, TLS-PSK is an interesting alternative for remote authentication between servers and constrained clients like smart cards, for example for mobile phone authentication, EMV-based payment transactions or authentication via electronic ID cards. First, we introduce a new and strong definition of ACCE security that covers protocols with <b>pre-shared</b> <b>keys.</b> Next, we prove that all ciphersuite families of TLS-PSK meet our strong notion of ACCE security. Our results do not rely on random oracles nor on any non-standard assumption...|$|R
50|$|OpenVPN {{has several}} ways to {{authenticate}} peers with each other. OpenVPN offers <b>pre-shared</b> <b>keys,</b> certificate-based, and username/password-based authentication. Preshared secret key is the easiest, with certificate based being the most robust and feature-rich. In version 2.0 username/password authentications can be enabled, both with or without certificates. However {{to make use of}} username/password authentications, OpenVPN depends on third-party modules. See the Extensibility paragraph for more info.|$|R
5000|$|<b>Pre-shared</b> <b>keys</b> {{may be more}} {{convenient}} from a key management point of view. For instance, in closed environments where the connections are mostly configured manually in advance, it may be easier to configure a PSK than to use certificates. Another case is when the parties already have a mechanism for setting up a shared secret key, and that mechanism {{could be used to}} “bootstrap” a key for authenticating a TLS connection.|$|R
50|$|<b>Pre-shared</b> <b>key</b> WPA and WPA2 remain {{vulnerable}} to password cracking attacks if users {{rely on a}} weak password or passphrase. To protect against a brute force attack, a truly random passphrase of 20 characters (selected from the set of 95 permitted characters) is probably sufficient.|$|E
50|$|GSM was {{intended}} to be a secure wireless system. It has considered the user authentication using a <b>pre-shared</b> <b>key</b> and challenge-response, and over-the-air encryption. However, GSM is vulnerable to different types of attack, each of them aimed at {{a different part of the}} network.|$|E
50|$|Several of the {{characters}} in the book communicate with each other through the use of One-time pads. A one-time pad (OTP) is an encryption technique that cannot be cracked, but requires the use of a one-time <b>pre-shared</b> <b>key</b> the same size, or longer, as the message being sent.|$|E
5000|$|Wazuh agent, the Wazuh agent runs on {{monitored}} hosts {{that use}} a Windows, Linux, Solaris, BSD, or Mac operating system. It {{is used to}} detect security issues and collect different types of system and application data. The agent forwards the collected data to the Wazuh server through an encrypted and authenticated channel. In order to establish this secure channel, a registration process involving unique <b>pre-shared</b> <b>keys</b> is utilized.|$|R
50|$|After the {{authentication}} and association, the <b>pre-shared</b> WEP <b>key</b> is {{also used}} for encrypting the data frames using RC4.|$|R
40|$|In {{this work}} {{we present a}} set of {{authentication}} and key exchange protocols that use identity-based <b>pre-shared</b> <b>keys</b> from pairings. We show that those protocols are attractive for an implementation in ad hoc networks. We start with introducing a light-weight protocol that uses purely symmetric crypto primitives. We then gradually add more security features. We analyze the security and performance of the presented protocols and discuss the suitability for an implementation in ad hoc networks. ...|$|R
50|$|The shared {{secret is}} either shared {{beforehand}} between the communicating parties, {{in which case}} {{it can also be}} called a <b>pre-shared</b> <b>key,</b> or it is created {{at the start of the}} communication session by using a key-agreement protocol, for instance using public-key cryptography such as Diffie-Hellman or using symmetric-key cryptography such as Kerberos.|$|E
5000|$|<b>Pre-Shared</b> <b>Key</b> (MIKEY-PSK): This is {{the most}} {{efficient}} way to handle the transport of the Common Secret, since only symmetric encryption is used and only a small amount of data has to be exchanged. However, an individual key has to be shared with every single peer, which leads to scalability problems for larger user groups.|$|E
50|$|In static key mode, a <b>pre-shared</b> <b>key</b> is {{generated}} and shared between both OpenVPN peers before the tunnel is started. This static key contains 4 independent keys: HMAC send, HMAC receive, encrypt, and decrypt. By default in static key mode, both hosts {{will use the}} same HMAC key and the same encrypt/decrypt key. However, using the direction parameter to -secret, {{it is possible to}} use all 4 keys independently.|$|E
40|$|Abstract: In recent years, {{amendments}} to IEEE standards for wireless networks added support for authentication al-gorithms {{based on the}} Extensible Authentication Protocol (EAP). Available solutions generally use digital certificates or <b>pre-shared</b> <b>keys</b> but {{the management of the}} resulting implementations is complex or unlikely to be scalable. In this paper we present EAP-SRP- 256, an authentication method proposal that relies on the SRP- 6 protocol and provides a strong password-based authentication mechanism. It is intended to meet the IETF security and key management requirements for wireless networks. ...|$|R
5000|$|Dynamically {{assigned}} and rotated encryption {{keys are}} usually not supported in a WDS connection. This means that dynamic Wi-Fi Protected Access (WPA) and other dynamic key assignment technology in most cases cannot be used, though WPA using <b>pre-shared</b> <b>keys</b> is possible. This {{is due to the}} lack of standardization in this field, which may be resolved with the upcoming 802.11s standard. As a result, only static WEP or WPA keys may be used in a WDS connection, including any STAs that associate to a WDS repeating AP.|$|R
40|$|The Session Initiation Protocol (SIP) is {{the main}} {{protocol}} behind Voice over IP (VoIP). However, it does not provide authentication, which may lead to possible impersonation and eavesdropping threats. Negotiating keys using digital certificates may help secure the channel, but this method incurs extra maintenance cost. Verbal authentication utilizes the real-time nature of VoIP but it requires users to read and manually compare the authentication code. This study proposes a session identifier framework based on the Modified Vector Quantization (MVQ) method on real-time video frames for video communication in VoIP. After the selected image frames are averaged and quantized, {{the output of the}} MVQ process is a set of image metrics that serves as <b>pre-shared</b> <b>keys</b> for key agreement. The framework is certificate-less and users do not need to read the authentication code to the other user. The implementation is evaluated for accuracy and robustness towards network noise and frame conditions...|$|R
50|$|A major {{security}} flaw {{was revealed}} in December 2011 that affects wireless routers with the WPS PIN feature, which most recent models have enabled by default. The flaw allows a remote attacker {{to recover the}} WPS PIN {{in a few hours}} with a brute-force attack and, with the WPS PIN, the network's WPA/WPA2 <b>pre-shared</b> <b>key.</b> Users have been urged to turn off the WPS PIN feature, although this may not be possible on some router models.|$|E
5000|$|ANX is a {{physical}} network. Availability stands at the forefront. For the time being, ANX is based continuously on the operation of fixed connections with high uptime guarantees. With the additional product [...] "TunnelZ", ANX also offers an optional VPN tunnel management, which is not used by all those manufacturers and suppliers connected to the network. In the classic ANX network, key management takes place using <b>Pre-Shared</b> <b>Key</b> (PSK), while the encryption strength is limited to DES.|$|E
50|$|Before {{a client}} and server {{can begin to}} {{exchange}} information protected by TLS, they must securely exchange or agree upon an encryption key and a cipher to use when encrypting data (see Cipher). Among {{the methods used for}} key exchange/agreement are: public and private keys generated with RSA (denoted TLS_RSA in the TLS handshake protocol), Diffie-Hellman (TLS_DH), ephemeral Diffie-Hellman (TLS_DHE), Elliptic Curve Diffie-Hellman (TLS_ECDH), ephemeral Elliptic Curve Diffie-Hellman (TLS_ECDHE), anonymous Diffie-Hellman (TLS_DH_anon), <b>pre-shared</b> <b>key</b> (TLS_PSK) and Secure Remote Password (TLS_SRP).|$|E
40|$|Abstract—We {{present a}} novel {{information}} theoretic approach to make network coding based storage secure against pollution attacks in sensor networks. The approach {{is based on}} a new decoding algorithm which makes it possible to find adversarial blocks using one more encoded block than strictly necessary for decoding. Our scheme fits well to the requirements of sensor networks,becauseitoperates withaddingverylowcomputational and communication overhead to source and storage nodes, only the collector node needsto perform some additionalcomputation. Our approach does not apply cryptography, hence it works in environments where no <b>pre-shared</b> <b>keys,</b> secure channels or PKI are available, which is often the case in sensor networks. I...|$|R
40|$|Wireless Local Area Networks (WLAN) are {{now being}} widely {{deployed}} for many applications, but security {{remains one of the}} most critical challenges yet to be fully addressed. Recently, a basic solution to this problem namely WLAN Authentication and Privacy Infrastructure (WAPI) provided by China Broadband Wireless IP Standard Group are proposed, which consisted of three versions. Nevertheless, this solution has some drawbacks: the Authentication and Key Exchange (AKE) protocols in WAPI cannot provide perfect forward secrecy. Moreover, the AKE protocol based on <b>pre-shared</b> <b>keys</b> of the last version of WAPI can be subject to off-line dictionary attacks. In this study, we first analysis the security of WAPI, then improvements on AKE protocols of WAPI are proposed...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The IETF Trust (2006). The Multimedia Internet Keying (MIKEY) specification describes several modes of key distribution solution that address multimedia scenarios (e. g., SIP calls and Real Time Streaming Protocol (RTSP) sessions) using <b>pre-shared</b> <b>keys,</b> public keys, and optionally a Diffie-Hellman key exchange. In the public-key mode, the Initiator encrypts a random key with the Responder’s public key and sends it to the Responder. In many communication scenarios, the Initiator may not know the Responder’s public key, {{or in some cases}} the Responder’s ID (e. g., call forwarding) in advance. We propose a new MIKEY mode that works well in such scenarios. This mode also enhances the group key management support in MIKEY; it supports member-initiated group key download (in contrast to group manager pushing the group keys t...|$|R
