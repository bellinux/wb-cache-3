21|53|Public
5000|$|Systems that accept logon tickets {{must have}} access to the issuing server's <b>public-key</b> <b>certificate.</b>|$|E
50|$|Every node's public {{component}} is {{distributed in the}} form of a certificate. They are connected by an unsecure network. Because Node I knows its own private component and Node J's public component, it can use the two components to compute a unique key that only the two of them can know. ----Note - This shared secret is implicit. It does not need to be communicated explicitly to either principal. Each principal can compute this secret based on knowledge of the other principal's identity and <b>public-key</b> <b>certificate.</b> The shared secret is computed using the well-known Diffie-Hellman algorithm.|$|E
40|$|Abstract. When a Certification Authority (CA) issues X. 509 <b>public-key</b> <b>certificate</b> to bind {{a public}} {{key to a}} user, the user is {{specified}} through one or more subject names in the “subject ” field and the “subjectAltName ” extension field of a certificate. The “subject ” field or the “subjectAltName ” extension field may contain a hierarchically structured distinguished name, an electronic mail address, IP address, or other name forms that correspond to the subject. In this paper, we propose the methods to protect the user’s privacy information contained in the “subject ” field or the “subjectAltName ” extension field of a <b>public-key</b> <b>certificate.</b> 1...|$|E
40|$|Unconditionally Anonymous <b>Public-key</b> <b>Certificates</b> {{and their}} Applications by Kazuomi Oishi Public-key {{cryptography}} can ensure both the secrecy {{and the integrity}} of communication over networks. Because of the widespread use of the Internet and e-commerce, public-key cryptography is becoming more important and significant. To maintain the proper usage of public-key cryptography, the relationship between a public-key and the holder must be assured in some way. The most common key authentication method is <b>public-key</b> <b>certificates.</b> A trusted entity called a certification authority (CA) makes a digital signature on a message, which includes a public-key and the holder's identity. The CA signatures are <b>public-key</b> <b>certificates</b> and realize a reliable, distributed key authentication system; hence, they are suitable for large open networks such as the Internet. However, since <b>public-key</b> <b>certificates</b> work as identification, they can be a very useful way to monitor individuals. This privacy issue [...] ...|$|R
50|$|X.509, {{the portion}} of the {{standard}} providing for an authentication framework, is now also widely used outside of the X.500 directory protocols. It specifies a standard format for <b>public-key</b> <b>certificates.</b>|$|R
40|$|Delegation with <b>public-key</b> <b>certificates</b> {{appears to}} be a natural {{technique}} for access control between intelligent network (IN) service providers. It supports strongly the IN business model and fits well to an object-oriented design. In the Calypso project, we are implementing access control to Java-based IN services with SPKI delegation certificates...|$|R
40|$|Until recently, <b>public-key</b> <b>certificate</b> {{issuance}} {{has involved}} verifying users' identities and public keys over a separate [...] -and presumably secure [...] -channel, {{such as in}} person or over the phone. However, the recent draft SET specification has changed that with a protocol for issuing public-key certificates to credit card holders in an interaction that takes place entirely over the Internet. We describe the security concerns of protocols for <b>public-key</b> <b>certificate</b> issuance. These concerns include US export controls, weak DES encryption, and offline guessing attacks. We motivate and describe two protocols that have appeared in drafts of the SET specification. Plus, we describe a new protocol for public-key certification issuance. 1 Introduction Due {{to the nature of}} standard Internet protocols (namely, TCP/IP), messages sent or received over the Internet may be read and/or modified by attackers in transit. This can be accomplished in many ways, including passive and active wiretapping, i [...] ...|$|E
40|$|Most {{currently}} deployed public-key cryptosystems are certificate-based (CBPK) cryptosystems. In {{large and}} distributed user communities, CBPK cryptosystems typically require encryptors {{to obtain the}} <b>public-key</b> <b>certificate</b> of each intended recipient, and signature verifiers to obtain the <b>public-key</b> <b>certificate</b> of each claimed signer. However, the management and distribution of public-key certificates are cumbersome in these communities. To address this issue, identity-based (ID-based) cryptosystems have been suggested as a possible alternative, because they enable the derivation of public keys from arbitrary string identifiers (such as email addresses, IP addresses, or privilege identifiers). This dissertation investigates the use of ID-based cryptography for large user communities. In particular, we present efficient and provably-secure (hierarchical) ID-based cryptographic schemes to support the following applications: (1) generation of decryption keys from non-repeatable (e. g. biometric) information; (2) authentication of the sender of encrypted information; (3) verification that a user belongs to a publicly known subset of a group, while the user remains anonymous to all but a designated party...|$|E
40|$|Since {{the early}} 1990 s <b>public-key</b> <b>certificate</b> {{issuance}} has involved verifying users' identities and public keys over a separate-and presumably secure-channel, {{such as in}} person or over the phone. However, {{in some cases it}} is not practical to mandate users to obtain certificates in person. Hence a means to issue certificates over insecure networks (e. g. Internet) is required. More recently, the market expectation of mobile commerce raises the issue of certificate issuance over wireless networks. The WAP Forum has defined a WAP PKI specification and the registration protocol is also a certificate issuance protocol. We describe the security concerns of protocols for <b>public-key</b> <b>certificate</b> issuance. We motivate and describe the protocols that have appeared in drafts of the SET specification and the WAP specification. In addition, we define a methodology on the exact engineering analysis of such protocols, based on the given cryptographic primitives such as public key encryption and signature schemes, shared key encryption schemes, random number generation and message authentication code schemes...|$|E
40|$|A mobile ad hoc {{network is}} a {{wireless}} communication network {{which does not}} rely on a pre-existing infrastructure or any centralized manage-ment. Securing the exchanges in such network is compulsory to guarantee a widespread development of services {{for this kind of}} networks. The de-ployment of any security policy requires the definition of a trust model that defines who trusts who and how. There is a host of research efforts in trust models framework to securing mobile ad hoc networks. The majority of well-known approaches is based on <b>public-key</b> <b>certificates,</b> and gave birth to miscellaneous trust models ranging from centralized models to web-of-trust and distributed certificate authorities. In this paper, we survey and classify the existing trust models that are based on <b>public-key</b> <b>certificates</b> proposed for mobile ad hoc networks, and then we discuss and compare them with respect to some relevant criteria. Also, we have developed analysis and com-parison among trust models using stochastic Petri nets in order to measure the performance of each one with what relates to the certification service availability...|$|R
40|$|New key-oriented {{discretionary}} {{access control}} systems are based on delegation of access rights with <b>public-key</b> <b>certificates.</b> This paper explains the basic idea of delegation certificates in abstract terms and discusses their advantages and limitations. We emphasize decentralization of authority and operations. The discussion is based mostly on the SPKI certificates but we avoid touching implementation details. We also describe how threshold and conditional certificates can add flexibility to the system. Examples are given of access control between intelligent networks services...|$|R
50|$|By comparison, {{traditional}} <b>public-key</b> <b>certificates</b> {{include a}} copy of the public key and the digital signature of the certificate authority. Upon verification of the digital signature, the public key is explicitly verified, {{in the sense that the}} party identified in the certificate knows the associated private key and is the only party who can know the private key. Unlike an implicit certificate, there is no possibility that nobody knows the private key. For the purposes of this article, such certificates will be called explicit certificates.|$|R
40|$|Bank {{customers}} {{are forced to}} rely on PIN entry devices in stores and bank branches to protect account details. The authors examined two market-leading devices and found them easy to compromise owing to both their design and the processes used to certify them as secure. Smart cards are replacing magnetic strip cards for point-of-sale and ATM payments in many countries. The leading system, EMV (originally from Europay, MasterCard, and Visa), has been deployed throughout most of Europe and is currently being rolled out in Canada. With EMV, customers authorize a transaction by inserting a bank smart card and entering a PIN into a PIN entry device (PED); the smart card verifies this PIN, and then a <b>public-key</b> <b>certificate</b> authenticates it t...|$|E
40|$|International audienceWireless Sensor Networks (WSNs) {{are often}} {{deployed}} in hostile environments making them vulnerable to attacks. A WSN comprises {{a large number}} of sensor nodes with different hardware abilities and functions. Due to the limited memory resources and energy constraints, complex security algorithms cannot be used in WSNs. Hence, it is necessary to balance between security requirements and energy consumption. In this paper, we propose a lightweight public-key based authentication protocol for WSNs. Our protocol uses identity-based encryption in order to lighten the energy consumption from the <b>public-key</b> <b>certificate</b> management. We have developed two variations of the proposed solution depending on the manner and when an attack should be detected. We perform an overall evaluation of our approach through simulations. The results indicate out performance of our approach in terms of energy consumption while providing effective security...|$|E
40|$|This paper {{presents}} and compares several trust models currently being considered and applied {{for use with}} <b>public-key</b> <b>certificate</b> infrastructures based on the X. 509 specification, including subordinated hierarchies, cross-certified meshes, hybrids, bridge CAs, and trust lists. Approaches and issues concerning constraints on path validity are also considered, as are aspects of path construction. 1. INTRODUCTION AND GOALS Fundamentally, Public-Key Infrastructures (PKIs) are facilities for representing and managing trust relationships. Relying parties depend on chains of PKI-provided certificates {{in order to determine}} whether or not to accept a given key as representing a particular principal. The chains extend from "trust anchor" points, which verifiers directly accept as reliable, reaching certified principals through zero or more intermediary CAs. In all cases, verifiers' trust is based on some set of public keys provided out-of-band, constituting points of entry into the infrastructu [...] ...|$|E
40|$|An {{electronic}} payment system which emulates the payments relying on classical cheques is presented. Its main features are a high computational efficiency and low storage requirements for the tamper resistant smart card implementing the purse of the user. This is achieved using a counter-based solution in combination with <b>public-key</b> <b>certificates</b> that represent the electronic cheques. To simplify both the withdrawal and the deposit stage we renounce to provide the untraceability feature. Our payment system is built around the Guillou-Quisquater identification/signature scheme in an RSA-group. status: publishe...|$|R
40|$|Abstract. This paper {{discusses}} {{the technical and}} management experience gained in the day-by-day operation of the EuroPKI infrastructure. First the context where EuroPKI was born is explained, along with its certification philosophy. Then common certification practices are discussed, along with description of the services and applications offered by the EuroPKI partners. User-reported problems are also listed and discussed {{in order to identify}} the issues that hamper large scale adoption of <b>public-key</b> <b>certificates.</b> The article closes with an overview of the EuroPKI activity plans and perspective. ...|$|R
40|$|In this paper, {{we first}} discuss the {{predominant}} assail abilities in the mobile ad hoc networks, which {{have made it}} much easier to prone to attacks than the traditional wired network. Then we discuss the basic operations of our public-key management scheme: creation of public (and private) keys, issuing <b>public-key</b> <b>certificates,</b> storage of certificates, and key authentication by the nodes themselves without the control of any principal authority. More over the public key management scheme serves as an underlying mechanism for both key distribution and establishing security relationships between nodes...|$|R
40|$|This report {{describes}} {{a project that}} is designing and implementing a prototype of a generalized <b>public-key</b> <b>certificate</b> infrastructure that can provide a highly scalable and transparent infrastructure for both authentication and authorization of access to network based services. The goal is to produce a generalized security architecture that can encode, distribute, and protect the information needed to enable routine secure availability of remote instrumentation in a distributed collaboratory environment. We report here {{on the progress of}} a prototype implementation that will demonstrate the concepts, identify the issues, and contribute to the evaluation of currently competing approaches for several aspects of the problem. 1. 0 Introduction 1. 1 The need The need for strong, flexible security for on-line research instrumentation is motivated by the following observation: "The access to a remote collaborative environment, whether it is for monitoring or for control of experiments, requ [...] ...|$|E
40|$|We {{show how}} to use Kerberos to enable its clients to {{interact}} securely with non-Kerberized World Wide Web servers. That is, our protocol does not require that the Web server {{be a member of}} a Kerberos realm, and also does not rely on time-synchronization between the participants. In our protocol, the Kerberos client uses the Web server's <b>public-key</b> <b>certificate</b> to gain cryptographic credentials that conform to public-key authentication standards, and to SHTTP. The client does not perform any publickey encryptions. Further, the client is well-protected from a man-in-the-middle attack that weakens SSL. Our protocol conforms to the current specifications for the Kerberos protocol and for the Secure Hypertext Transfer Protocol. 1 Introduction The effort to secure the World-Wide Web for electronic commerce brings to a sharp focus the difficulties that have prevented the Internet from adopting a single coherent security model. On the one hand, like the Internet, the Web as a whole is too big [...] ...|$|E
40|$|The {{notion of}} secret-key {{certificate}} schemes is introduced and formalized. As with public-key certificates, triples {{consisting of a}} secret key, a corresponding public key, and a secret-key certificate on the public key can only be retrieved by engaging in an issuing protocol with the issuer. The difference with public-key certificates is that pairs consisting of a public key and a secret-key certificate on the public key can be generated by anyone, with a distribution that is indistinguishable from the distribution according {{to which they are}} generated in the issuing protocol. Secret-key certificates offer the same functionality as do public-key certificates, because {{there is no point in}} using a <b>public-key</b> <b>certificate</b> scheme if the cryptographic actions that are to be performed with respect to a certified public key can be performed without knowing a corresponding secret key. The existence of efficient and secure secret-key certificate schemes is demonstrated by a generally ap [...] ...|$|E
40|$|To {{eliminate}} the need of <b>public-key</b> <b>certificates</b> from Public Key Infrastructure (PKI) {{and the problem of}} key escrow in identity-based cryptography, the concept of self-certified public key was put forth by Girault. In this paper, we propose an efficient and novel self-certified signature scheme, which requires only one modular multiplication in signing with pre-computation. One of features of our scheme lies in its batch verification in both single-signer and multi-signer settings. Pairing computations in the batch verification are independent from the number of signatures. Our scheme is proven secure in the random oracle model. 2012 Springer-Verlag Berlin Heidelberg...|$|R
40|$|This memo defines an Experimental Protocol for the Internet community. It {{does not}} specify an Internet {{standard}} of any kind. Discussion {{and suggestions for}} improvement are requested. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The IETF Trust (2006). The Internet Key Exchange (IKEv 2) protocol supports several mechanisms for authenticating the parties, including signatures with <b>public-key</b> <b>certificates,</b> shared secrets, and Extensible Authentication Protocol (EAP) methods. Currently, each endpoint uses {{only one of these}} mechanisms to authenticate itself. This document specifies an extension to IKEv 2 that allows the use of multiple authentication exchanges, using either different mechanisms or the same mechanism. This extension allows, for instance, performin...|$|R
40|$|In {{contrast}} with conventional networks, mobile ad hoc networks {{do not provide}} on-line access to trusted authorities or to centralized servers. For this reason, key management is particularly difficult to implement in such networks. The solutions published so far alleviate the problem by requiring a trusted authority only in the system start-up phase (for the distribution of initial keys or key shares). Here, we consider a more extreme case {{where there is no}} central authority at all, not even in the initialization phase. We propose a fully self-organizing public-key management system, in which the users generate their keys, and issue, store, and distribute <b>public-key</b> <b>certificates.</b> Our system can be used for securing both networking functions (e. g., routing) and application services in mobile ad hoc networks...|$|R
40|$|Abstract. The X. 509 {{framework}} protocol uses <b>public-key</b> <b>certificate</b> in au-thentication {{and conversation}} key negotiation. This framework gains conve-nient user key management, {{but because of}} the low speed of asymmetric cryp-tographic algorithms, the speed of handshake is not satisfactory. In this paper, we will present a fast handshake caching protocol that requires a trusted third part caching center but attempts to minimize its involvement in the execu-tion of the protocol, which can greatly enhance the efficiency of authentication. With this protocol, even if both sides of communication never contact each other before, they can quickly and conveniently authenticate each other and negotiate the secure conversation key of the communication session from the caching context on the trust path if there is a trust path between them. With the handshake caching protocol, the speed of authentication and conversation key negotiation is 3 - 4 times faster than the X. 509 protocol without reducing the security. Furthermore, we will pay particular attention to the process of the conversation key negotiation, analyze its efficiency and security, and discus...|$|E
40|$|Security in ad hoc {{networks}} Ad hoc networks • mobile terminals (can {{be captured}} or compromised) • wireless communications (passive eavesdropping and active interfering) • no centralized management point (cooperation) Vulnerabilities • basic mechanisms (e. g. routing) • security mechanisms (e. g. (public) key management) 3 Self-Organized Public-Key Management Security: we use public-key cryptography scheme to support security services in mobile ad hoc networks Problem: How can a user u obtain the authentic public key of another user v {{in the presence}} of an active attacker? Our system:- users generate their keys and issue certificates- no central certification authority- no certification directories- no specific role assigned to a subset of nodes- no preinstalled keys/procedures 4 Model We assume that if a user i believes that a given public key belongs to a given user j, then i can issue a <b>public-key</b> <b>certificate</b> to j A certificate graph G(V,E) • V is a set of keys • E is the set of edges, where a directed edge (i,j) is added if i signed a public key certificate to user jPr {, } ij Kj...|$|E
40|$|Abstract: Efficient {{and secure}} {{communication}} architecture for e-health system is proposed {{in this paper}} to support online treatment of patients by medical specialists working in any hospital registered to RA (registration authority). The proposed architecture comprises three actors and two use cases, where the actors like patients and hospitals register themselves to RA and doctors registers themselves at different hospitals through the registration use case, and all registered patients get their treatment through the patients ’ treatment use case. In our proposed treatment procedure, initially a patient communicates RA for registration and receives a unique master secret. Later on, this master secret is used to negotiate a session key between the RA, patient and registered hospital and finally the session key in turn is used to negotiate a user token for treatment. A service user token is also generated by the hospital according to the disease syndromes and after which a selected doctor starts the treatment. After completion of treatment, the doctor generates the patient’s PHI (protected health information) data and uploads the same to RA. A digital <b>public-key</b> <b>certificate</b> based authentication protocol for registration phase and symmetric encryption/decryption based protocols have been proposed for secure communication of the proposed e-health system. The in-depth security and performance analysis of the proposed communication architecture shows {{that the system is}} efficient and well secured...|$|E
40|$|The EUROMED-ETS schema {{provides}} a robust security framework for telemedical applications operating over the World Wide Web. It {{is based on}} a trusted third party architecture under which certificate authorities store the <b>public-key</b> <b>certificates</b> of participating hospitals and medical practitioners. Digital signatures are used to provide peer and data origin authentication, and, in combination with access control lists, to provide access control. The deployed infrastructure is based on off-the-shelf available clients and servers, and provides functions for electronic registration of participants, session initialisation, user authentication, key generation and personalisation, certificate generation, distribution, storage and retrieval, certificate revocation lists, and auditing. It was found that, as the underlying technologies mature, a Web-based trusted third party architecture {{provides a}} viable solution for delivering secure telemedical applications...|$|R
40|$|The Extensible Authentication Protocol (EAP) {{describes}} {{a framework that}} allows {{the use of multiple}} authentication mechanisms. This document defines an authentication mechanism for EAP called EAP-EKE, based on the Encrypted Key Exchange (EKE) protocol. This method provides mutual authentication {{through the use of a}} short, easy to remember password. Compared with other common authentication methods, EAP-EKE is not susceptible to dictionary attacks. Neither does it require the availability of <b>public-key</b> <b>certificates.</b> Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|Game-Theoretic Models and SecurityInternational audienceRevocation of <b>public-key</b> <b>certificates</b> is an {{important}} security primitive. In this paper, we design a fully distributed local certificate revocation scheme for ephemeral networks – a class of extremely volatile wireless networks with short-duration and short-range communications - based on a game-theoretic approach. First, by providing incentives, we can guarantee the successful revocation of the malicious nodes even if they collude. Second, thanks to the records of past behavior, we dynamically adapt the parameters to nodes' reputations and establish the optimal Nash equilibrium (NE) on-the-fly, minimizing the social cost of the revocation. Third, based on the analytical results, we define a unique optimal NE selection protocol and evaluate its performance through simulations. We show that our scheme is effective in quickly and efficiently removing malicious devices from the network...|$|R
40|$|The {{security}} of any cryptosystem {{relies on the}} secrecy of the system’s secret keys. Yet, recent experimental work demonstrates that {{tens of thousands of}} devices on the Internet use RSA and DSA secrets drawn from a small pool of candidate values. As a result, an adversary can derive the device’s secret keys without breaking the underlying cryptosystem. We introduce a new threat model, under which there is a systemic solution to such randomness flaws. In our model, when a device generates a cryptographic key, it incorporates some random values from an entropy authority into its cryptographic secrets and then proves to the authority, using zero-knowledge-proof techniques, that it performed this operationcorrectly. Bypresentinganentropy-authority-signed <b>public-key</b> <b>certificate</b> to a third party (like a certificate authority or SSH client), the device can demonstrate that its public key incorporates randomness from the authority and is therefore drawn from a large pool of candidate values. Where possible, our protocol protects against eavesdroppers, entropy authority misbehavior, and devices attempting to discredit the entropy authority. To demonstrate the practicality of our protocol, we have implemented and evaluated its performance on a commodity wireless home router. When running on a home router, our protocol incurs a 1. 7 × slowdown over conventional RSA key generation and it incurs a 3. 6 × slowdown over conventional EC-DSA key generation...|$|E
40|$|Abstract — Digital evidence, such as digital signatures, is {{of crucial}} {{importance}} in the emerging digitally operating economy because {{it is easy to}} transmit, archive, search, and verify. Nevertheless the initial promises of the usefulness of digital signatures were too optimistic. This calls for a systematic treatment of digital evidence. The goal {{of this paper is to}} provide a foundation for reasoning about digital evidence systems and legislation, thereby identifying the roles and limitations of digital evidence, in the apparently simple scenario where it should prove that an entity agreed to a digital contract. Our approach is in sharp contrast to the current general views documented in the technical literature and in digital signature legislation. We propose an entirely new view of the concepts of certification, time-stamping, revocation, and other trusted services, potentially leading to new and more sound business models for trusted services. Some of the perhaps provocative implications of our view are that certificates are generally irrelevant as evidence in a dispute, that it is generally irrelevant when a signature was generated, that a commitment to be liable for digital evidence cannot meaningfully be revoked, and that there is no need for mutually trusted authorities like certification authorities. We also propose a new type of digital evidence called digital declarations, based on a digital recording of a willful act indicating agreement to a document or contract. Index Terms — Digital evidence, non-repudiation, digital signatures, digital declarations, <b>public-key</b> <b>certificate,</b> public-ke...|$|E
40|$|Shacham and Boneh {{showed that}} it is not {{possible}} to batch when the same public key is used for more than one message [3]. They provide a multiple certificate to implement the batch method by assigning the different public key in TLS handshake. The method has following disadvantages: Requirement for many different RSA certificates; additional payment for certificates; extra maintenance works of multiple certifications. The proposed unique certificate scheme solves the impractical of multiple certificate method in next section. 3 Unique Certificate Scheme in Batching TLS Handshake In the standard TLS protocol, each client encrypts a 48 -byte pre-master secret using e i as the encryption exponents, and the server decrypts the cipher text independently so as to get the Pre-master secret. But batch RSA obtains the Pre-master secrets from multiple clients and hence improves the performance significantly. Our unique certificate method is to reuse the message ServerHello. random in the protocol (see Fig. 1). For simplicity, we only show the related processes and the modified information in the standard TLS handshake protocol. The following procedure is the unique certificate scheme for SSL handshake protocol: (1) Clients send “Client hello ” massage that includes the cipher suits to the server and create random nonce rc respectively. (2) Server responds with a “server hello ” massage that includes server’s <b>public-key</b> <b>certificate</b> and a random nonce rs. In this improvement, ei is actually a part of ServerHello. random. Server only needs to send unique certificate to all th...|$|E
40|$|The {{distribution}} and revocation of <b>public-key</b> <b>certificates</b> are essential aspects of secure digital communication. As {{a first step}} towards a methodology {{for the development of}} reliable models, we present a formalism for the specification and reasoning about the {{distribution and}} revocation of public keys, based on graphs. The model is distributed in nature; each entity can issue certificates for public keys that it knows, and distribute these to other entities. Each entity has its own public key bases and can derive new certificates from this knowledge. If some of the support for the derived knowledge is revoked, then some of the derived certificates may be revoked as well. Cyclic support is avoided. Graph transformation rules are used for the management of the certificates, and we prove soundness and completeness for our model. © 2010 Springer-Verlag...|$|R
40|$|A public-key {{infrastructure}} (PKI) binds public keys to {{identities of}} entities. Usually, this binding is established {{through a process}} of registration and issuance of certificates by a certificate authority (CA) where the validation of the registration is performed by a local registration authority. In this paper, we propose an alternative scheme, called LOCALPKI, where the binding is performed by the local authority and the issuance is left to the end user or to the local authority. The role of our third entity is then to register this binding and to provide up-to-date status information on this registration. The idea is that many more local actors could then take the role of a local authority, thus allowing for an easier spread of <b>public-key</b> <b>certificates</b> in the population. We also prove our scheme's security with Tamarin an automatic verification tool of cryptographic protocols...|$|R
40|$|<b>Public-key</b> <b>certificates</b> {{are managed}} by a {{combination}} of the informal web of trust and the use of servers maintained by organizations. Prompt and reliable distribution of revocation notices is an essential ingredient for security in a public-key infrastructure. Current schemes based on certificate revocation lists on key servers are inadequate. An approach based on distributing revocation notices to "dependers" on each certificate, with cascading forwarding, is suggested. Research is necessary to investigate architectural issues, particularly reliability and response time analysis. 1. Introduction The more the Internet is used for important personal and commercial transactions, the more important are the basic security concerns of privacy and authentication of network communications, and an increasing number of organizations and individuals are affected. The fundamental tool for communication security is encryption. Encryption was largely the province of the military until the l [...] ...|$|R
