68|10000|Public
50|$|Suite B - {{a set of}} <b>public</b> <b>key</b> <b>algorithm</b> {{standards}} {{based on}} elliptic curve cryptography.|$|E
5000|$|Public {{authentication}} key: A public {{authentication key}} {{is the public}} key of an asymmetric key pair that is used with a <b>public</b> <b>key</b> <b>algorithm</b> to determine the integrity of information and to authenticate the identity of entities, or the source of messages, communication sessions, or stored data.|$|E
5000|$|Public {{signature}} verification key: A public {{signature verification}} key {{is the public}} key of an asymmetric key pair {{that is used by}} a <b>public</b> <b>key</b> <b>algorithm</b> to verify digital signatures, either to authenticate a user's identity, to determine the integrity of the data, for non-repudiation, or a combination thereof.|$|E
5000|$|Efficient {{implementations}} of symmetric and <b>public</b> <b>key</b> <b>algorithms.</b>|$|R
5000|$|<b>Public</b> <b>key</b> <b>algorithms</b> are {{fundamental}} security ingredients in cryptosystems, applications and protocols. They underpin various Internet standards, such as [...] Transport Layer Security (TLS), S/MIME, PGP, and GPG. Some <b>public</b> <b>key</b> <b>algorithms</b> provide <b>key</b> distribution and secrecy (e.g., Diffie-Hellman key exchange), some provide digital signatures (e.g., Digital Signature Algorithm), and some provide both (e.g., RSA).|$|R
5000|$|According to NSA [...] "A {{sufficiently}} large quantum computer, if built, {{would be}} capable of undermining all widely-deployed <b>public</b> <b>key</b> <b>algorithms</b> used for <b>key</b> establishment and digital signatures. ... It is generally accepted that quantum computing techniques are much less effective against symmetric algorithms than against current widely used <b>public</b> <b>key</b> <b>algorithms.</b> While <b>public</b> <b>key</b> cryptography requires changes in the fundamental design to protect against a potential future quantum computer, symmetric <b>key</b> <b>algorithms</b> are believed to be secure provided a sufficiently large key size is used. ... In the longer term, NSA looks to NIST to identify a broadly accepted, standardized suite of commercial <b>public</b> <b>key</b> <b>algorithms</b> that are not vulnerable to quantum attacks.|$|R
5000|$|Private {{authentication}} key: A private {{authentication key}} is the private key of an asymmetric key pair {{that is used}} with a <b>public</b> <b>key</b> <b>algorithm</b> to provide assurance as {{to the integrity of}} information, and the identity of the originating entity or the source of messages, communication sessions, or stored data.|$|E
5000|$|Public key {{transport}} key: Public {{key transport}} keys are the public keys of asymmetric key pairs {{that are used}} to encrypt keys using a <b>public</b> <b>key</b> <b>algorithm.</b> These keys are used to establish keys (e.g., key wrapping keys, data encryption keys or MAC keys) and, optionally, other keying material (e.g., Initialization Vectors).|$|E
5000|$|Private key {{transport}} key: Private {{key transport}} keys are the private keys of asymmetric key pairs {{that are used}} to decrypt keys that have been encrypted with the associated public key using a <b>public</b> <b>key</b> <b>algorithm.</b> Key transport keys are usually used to establish keys (e.g., key wrapping keys, data encryption keys or MAC keys) and, optionally, other keying material (e.g., initialization vectors).|$|E
5000|$|ECRYPT listed five core {{research}} areas, termed [...] "virtual laboratories": symmetric <b>key</b> <b>algorithms</b> (STVL), <b>public</b> <b>key</b> <b>algorithms</b> (AZTEC), protocol (PROVILAB), secure and efficient implementations (VAMPIRE) and watermarking (WAVILA).|$|R
40|$|The paper {{discusses}} encryption schemes such as <b>public</b> <b>key</b> <b>algorithms</b> (RSA) and One Time Pads. It also discusses various {{attacks on}} the RSA algorithm. A brief introduction to Modular Arithmetic, which is the core arithmetic of almost all <b>public</b> <b>key</b> <b>algorithms,</b> has been given. In this {{paper we propose a}} variant to the RSA algorithm which is effective against Wiener’s Short Secret Exponent attack. The security and the efficiency of the proposed variant have also been discussed. General Terms <b>Public</b> <b>key,</b> private key, X-or, encryption, cryptanalysis, cryptosystem, efficiency...|$|R
40|$|Cryptography, {{the secret}} writing, is {{probably}} same old as writing itself and has applications in data security insurance. There are cryptosystems where the encipher algorithm can be public. These are <b>public</b> <b>key</b> <b>algorithms.</b> Research on <b>public</b> <b>key</b> <b>algorithms</b> has {{been concerned with}} security aspects. The results of this research have induced sufficient confidence to apply <b>public</b> <b>key</b> cryptography a larger scale. The most used and checked public key-based cryptosystem was find by Rivest, Shamir and Adleman, so called RSA system. This paper shows the RSA algorithm. We have realised a program that is able to determine prime numbers with over 100 digits and compute RSA system parameters...|$|R
50|$|Torus-based {{cryptography}} involves using algebraic tori {{to construct}} a group for use in ciphers based on the discrete logarithm problem. This idea was first introduced by Alice Silverberg and Karl Rubin in 2003 {{in the form of}} a <b>public</b> <b>key</b> <b>algorithm</b> by the name of CEILIDH. It improves on conventional cryptosystems by representing some elements of large finite fields compactly and therefore transmitting fewer bits.|$|E
50|$|A key {{exchange}} {{algorithm is}} a type of <b>public</b> <b>key</b> <b>algorithm</b> which establishes a shared secret key between two communicants on a communications link. The classic example of a key exchange is the Diffie-Hellman key exchange. The exchange consists of one transmission {{from one end of the}} line and one transmission from the other end of the link. Diffie-Hellman and Elliptic Curve Diffie-Hellman are the two most popular key exchange algorithms.|$|E
50|$|In practice, Diffie-Hellman is {{not used}} in this way, with RSA being the {{dominant}} <b>public</b> <b>key</b> <b>algorithm.</b> This is largely for historical and commercial reasons, namely that RSA Security created a certificate authority for key signing that became Verisign. Diffie-Hellman cannot be used to sign certificates. However, the ElGamal and DSA signature algorithms are mathematically related to it, as well as MQV, STS and the IKE component of the IPsec protocol suite for securing Internet Protocol communications.|$|E
50|$|Applications {{may include}} {{financial}} PIN transactions, bank-to-clearing-house transactions, EMV transactions for integrated circuit (chip) based credit cards, basic SET block processing, and general-purpose cryptographic applications using symmetric <b>key,</b> hashing, and <b>public</b> <b>key</b> <b>algorithms.</b>|$|R
5000|$|Private {{signature}} key: Private signature {{keys are}} the private <b>keys</b> of asymmetric (<b>public)</b> <b>key</b> pairs {{that are used}} by <b>public</b> <b>key</b> <b>algorithms</b> to generate digital signatures with possible long-term implications. When properly handled, private signature keys {{can be used to}} provide authentication, integrity and non-repudiation.|$|R
5000|$|<b>Public</b> <b>key</b> {{cryptography}} systems often rely on cryptographic algorithms {{based on}} mathematical problems that currently admit no efficient solution — particularly those inherent in certain integer factorization, discrete logarithm, and elliptic curve relationships. <b>Public</b> <b>key</b> <b>algorithms,</b> unlike symmetric <b>key</b> <b>algorithms,</b> {{do not require}} a secure channel for the initial exchange of one (or more) secret keys between the parties.|$|R
50|$|The first part, ASN.1 type CertificationRequestInfo, {{consists}} of a version number (which is 0 for all known versions, 1.0, 1.5, and 1.7 of the specifications), the subject name, the <b>public</b> <b>key</b> (<b>algorithm</b> identifier + bit string), {{and a collection of}} attributes providing additional information about the subject of the certificate. The attributes can contain required certificate extensions, a challenge-password to restrict revocations, as well as any additional information about the subject of the certificate, possibly including local or future types.|$|E
5000|$|The {{traditional}} approach to sending a symmetric key with public key systems is to first generate a random symmetric key and then encrypt it using the chosen <b>public</b> <b>key</b> <b>algorithm.</b> The recipient then decrypts the public key message {{to recover the}} symmetric key. As the symmetric key is generally short, padding is required for full security and proofs of security for padding schemes are often less than complete. [...] KEMs simplify the process by generating a random element in the finite group underlying the public key system and deriving the symmetric key by hashing that element, {{eliminating the need for}} padding.|$|E
50|$|Solving multivariate {{quadratic}} equations (MQ) over {{a finite}} set of numbers is an NP-hard problem (in the general case) with several applications in cryptography. The XSL attack requires an efficient algorithm for tackling MQ. In 1999, Kipnis and Shamir {{showed that a}} particular <b>public</b> <b>key</b> <b>algorithm,</b> known as the Hidden Field Equations scheme (HFE), could be reduced to an overdetermined system of quadratic equations (more equations than unknowns). One technique for solving such systems is linearization, which involves replacing each quadratic term with an independent variable and solving the resultant linear system using an algorithm such as Gaussian elimination. To succeed, linearization requires enough linearly independent equations (approximately as many {{as the number of}} terms). However, for the cryptanalysis of HFE there were too few equations, so Kipnis and Shamir proposed re-linearization, a technique where extra non-linear equations are added after linearization, and the resultant system is solved by a second application of linearization. Re-linearization proved general enough to be applicable to other schemes.|$|E
5000|$|There are {{a variety}} of {{cryptographic}} algorithms which work using the RLWE paradigm. There are <b>public</b> <b>key</b> encryption <b>algorithms,</b> homomorphic encryption algorithms, and RLWE digital signature algorithms in addition to the <b>public</b> <b>key,</b> <b>key</b> exchange <b>algorithm</b> presented in this article ...|$|R
40|$|Problem description: Most <b>public</b> <b>key</b> <b>algorithms</b> {{are based}} on modular arithmetic. The simplest, and original, {{implementation}} of the protocol uses the multiplicative group of integers modulo p, where p is prime and g is primitive root mod p. This is the way Diffie-Hellman is implemented. RSA is implemented {{in a similar way}} c=me mod p*q. For this reason <b>public</b> <b>key</b> crypto RSA is much slower than symmetric <b>key</b> <b>algorithms,</b> like DES and AES. Recently the field of using Graphics Processing Units (GPUs) for general purpose computing has become more widespread. Many computational problems have gained a significant performance increase by using the highly parallel properties of the GPU. Motivation: Implementing <b>public</b> <b>key</b> <b>algorithms</b> using OpenCL allows the implementation to query the system for OpenCL enabled devices(GPU,CPU and other parallel processors) to select the best device in order to run the encrypting/decrypting of data. The same implementation can be run on a variety of different system with different GPUs, CPU as long as at least one device is able to run OpenCL programs/code. Planned contribution: The planned outcome of this project is a fast implementation of <b>public</b> <b>key</b> <b>algorithms</b> able to run in parallel on a variety of parallel devices(GPU,CPU and other parallel processors) that is capable to run OpenCL code/programs...|$|R
40|$|The paper {{gives an}} {{introduction}} to the <b>public</b> <b>key</b> cryptography and its use in applications such as Key Agreement, Data Encryption and Digital Signature. The main emphasize is on some <b>public</b> <b>key</b> <b>algorithms</b> such as RSA and ECC along with the idea how ECC is better and more securemethod of encryption in comparison to RSA and other asymmetric cryptosystems...|$|R
5000|$|One of {{the most}} widely used <b>public</b> <b>key</b> <b>algorithm</b> used to create digital {{signatures}} is known as RSA. Its security is based on the classical difficulty of factoring the product of two large and unknown primes into the constituent primes. The integer factorization problem is believed to be intractable on any conventional computer if the primes are chosen at random and are sufficiently large. However, to factor the product of two n-bit primes, a quantum computer with roughly 6n bits of logical qubit memory and capable of executing a program known as Shor’s algorithm will easily accomplish the task. [...] Shor's algorithm can also quickly break digital signatures based on {{what is known as the}} discrete logarithm problem and the more esoteric elliptic curve discrete logarithm problem. In effect, a relatively small quantum computer running Shor's algorithm could quickly break all of the digital signatures used to ensure the privacy and integrity of information on the internet today.|$|E
40|$|This {{report will}} cover the {{physical}} realization of a <b>public</b> <b>key</b> <b>algorithm</b> based on multivariate quadratic quasigroups. The intension is that this implementation will use real keys and data. Efforts are also taken {{in order to reduce}} area cost as much as possible. The solution will be described and analyzed. This will show wether the measures were successfull or not. </p...|$|E
40|$|Paper {{introduced}} RSA cryptosystem and {{its security}} aspects. RSA is a <b>public</b> <b>key</b> <b>algorithm</b> that applied widely {{in the field}} of information security in the Internet-Banking and E-Commerce applications. The proposed scheme for RSA cryptosystem contains three prime numbers and overcome several attack possible on RSA. The proposed scheme has speed improvement on RSA decryption side by using the Chinese Reminder Theorem (CRT) and the scheme is semantically secure also...|$|E
50|$|In cryptography, a <b>public</b> <b>key</b> {{exchange}} <b>algorithm</b> is a {{cryptographic algorithm}} which allows two parties {{to create and}} share a secret key, which they can use to encrypt messages between themselves. The Ring Learning with Errors Key Exchange (RLWE-KEX) {{is one of a}} new class of <b>public</b> <b>key</b> exchange <b>algorithms</b> that are designed to be secure against an adversary that possesses a quantum computer. This is important because the vast majority of <b>public</b> <b>key</b> <b>algorithms</b> in use today are easily broken by a quantum computer and scientists are making steady progress toward creating such a computer. RLWE-KEX is one of a set of Post Quantum cryptographic algorithms which are based on the difficulty of solving certain mathematical problems involving lattices. Unlike older lattice based cryptographic algorithms, the RLWE-KEX is provably reducible to a known hard problem in lattices.|$|R
50|$|Differential power {{analysis}} involves measuring the precise time and electric current required for certain encryption or decryption operations. This can deduce the on-chip private <b>key</b> used by <b>public</b> <b>key</b> <b>algorithms</b> such as RSA. Some implementations of symmetric ciphers can {{be vulnerable to}} timing or power attacks as well.|$|R
40|$|Quartz is an {{asymmetric}} signature scheme {{submitted by}} Patarin, Goubin and Courtois to the European project NESSIE. It {{belongs to the}} family of multivariate polynomials <b>public</b> <b>key</b> <b>algorithms</b> and provides short 128 -bit signatures. However no security proof against chosen messages attacks has been made for this scheme...|$|R
40|$|The RSA {{algorithm}} is a secure, high quality, <b>public</b> <b>key</b> <b>algorithm</b> [...] The paper presents the architecture and modeling of RSA public key encryption/decryption systems. It is been observed {{that it is}} difficult to implement RSA algorithm on FPGA, as resources required are more than processors resource. This paper studies encryption & decryption module as individual module & investigates possibility of implementing individual module, in this case decryption on FPGA...|$|E
40|$|Cryptography is a {{technique}} to encrypt messages which using mathematical sciences in it. Mathematical sciences who exploited them are prime numbers with all the properties of round numbers, the modulo arithmetic, powers, greatest common divisor, square roots, etc. Cryptography has three important elements. Encryption, decryption, and key. Encryption {{is the process of}} forming understandable messages (plaintext) into the message that is not understandable (ciphertext). Decryption is the process of return messages that are not understandable (ciphertext) into an understandable message (plaintext). The key is a tool used for encryption and decryption process. Cryptography also have the encryption algorithms that are divided into symmetric algorithms and asymmetric algorithms (<b>public</b> <b>key</b> <b>algorithm).</b> Asymmetric algorithms include RSA, Rabin, and ElGamal. RSA, Rabin, and ElGamal using prime numbers as an initial benchmark calculation of encryption, and includes the process of encryption and decryption. In this thesis focused on the use of triple-digit prime and its calculation on <b>public</b> <b>key</b> <b>algorithm</b> RSA, Rabin, and ElGamal. Keywords : prime numbers, cryptography, algorithms, RSA, Rabin, ElGamal, encryption, decryption, and key...|$|E
40|$|Abstract — This paper {{presents}} the architecture and modeling of modular multiplication for RSA <b>public</b> <b>key</b> <b>algorithm.</b> It supports multiple lengths like 128 bits, 256 bits, 512 bits of data. In this paper simple shift and add algorithm {{is used to}} implement the modular multiplication. It makes the processing time faster and used comparatively smaller amount of space in the FPGA due to its reusability. Each block is coded with Very Hig...|$|E
50|$|The {{introduction}} of elliptic curve cryptography by Neal Koblitz and Victor Miller, independently and simultaneously in the mid-1980s, has yielded new <b>public</b> <b>key</b> <b>algorithms</b> {{based on the}} discrete logarithm problem. Although mathematically more complex, elliptic curves provide smaller key sizes and faster operations for approximately equivalent estimated security.|$|R
40|$|Abstract—The paper {{gives an}} {{introduction}} to the <b>public</b> <b>key</b> cryptography and its use in applications such as Key Agreement, Data Encryption and Digital Signature. The main emphasize is on some <b>public</b> <b>key</b> <b>algorithms</b> such as RSA and ECC along with the idea how ECC is better and more secure method of encryption in comparison to RSA and other asymmetric cryptosystems...|$|R
40|$|Application of the <b>public</b> <b>key</b> {{cryptography}} {{in practice}} is spreading widely. Great efforts {{are made for}} working out <b>public</b> <b>key</b> <b>algorithms,</b> which suffice the diverse applications and fulfill the different requirements better and better. NTRU [1], which were first presented in 1996 at the Crypto’ 96, is a definitely promising new cryptosystem. Its main advantages are the required moderate resources an...|$|R
