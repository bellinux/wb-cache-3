83|152|Public
50|$|<b>Path</b> <b>Vector</b> Messages in Border Gateway Protocol (BGP): The {{autonomous}} system boundary routers (ASBR), which participate in <b>path</b> <b>vector</b> routing, advertise the reachability of networks. Each router that receives a <b>path</b> <b>vector</b> message must {{verify that the}} advertised path is according to its policy. If the messages comply with the policy, the ASBR modifies its routing table and the message before sending {{it to the next}} neighbor. In the modified message it sends its own AS number and replaces the next router entry with its own identification.|$|E
5000|$|... this <b>path</b> <b>vector</b> can be {{conveniently}} {{written in}} complex exponential form ...|$|E
5000|$|Exterior gateway {{protocols}} are {{routing protocols}} {{used on the}} Internet for exchanging routing information between Autonomous Systems, such as Border Gateway Protocol (BGP), <b>Path</b> <b>Vector</b> Routing Protocol.|$|E
40|$|The {{reliability}} of a two-terminal flow network with a discrete set of possible capacities for its arcs is usually computed {{in terms of}} minimal path or minimal cut vectors. This paper analyzes the connection between minimal <b>path</b> <b>vectors</b> and flow functions, which supports {{the development of an}} efficient algorithm that solves the problem of finding the set of all such vectors...|$|R
40|$|A two-terminal flow {{network is}} usually {{defined as a}} {{directed}} graph, or a digraph; {{but there are a}} number of applications where it is more natural to use an undirected graph. This paper analyzes the connection between minimal <b>path</b> <b>vectors</b> and flow functions in undirected networks, which supports the development of an efficient algorithm that solves the problem of finding the set of all such vector...|$|R
30|$|The iVAG is a Very Long Instruction Word (VLIW) Single Instruction Multiple Data (SIMD) {{processor}} {{featuring a}} Von Neumann architecture with a 128 -bit wide data memory. The VLIW parallelism {{is required to}} support the (typically) multiple operations needed for each individual address in a single clock cycle. The iVAG comprises a scalar <b>path</b> and a <b>vector</b> <b>path.</b> While the <b>vector</b> <b>path</b> is designed to do the number crunching, the scalar path is meant to handle the more administrative or irregular code in interleaver programs. Both the scalar and the <b>vector</b> <b>paths</b> feature a register file with 4 read ports that are shared by all operations and 3 write ports. Since a single operation can use up to 3 read ports for its operands, not all combinations of operations are allowed in an instruction.|$|R
50|$|The image {{indicates}} a wings level aircraft (i.e. the flight <b>path</b> <b>vector</b> symbol is flat {{relative to the}} horizon line and there is zero roll on the turn/bank indicator). Airspeed is 140 knots, altitude is 9,450 feet, heading is 343 degrees (the number below the turn/bank indicator). Close inspection of the image shows a small purple circle which is displaced from the flight <b>path</b> <b>vector</b> slightly to the lower right. This is the guidance cue coming from the Flight Guidance System. When stabilized on the approach, this purple symbol should be centered within the FPV.|$|E
50|$|<b>Path</b> <b>vector</b> routing is {{used for}} inter-domain routing. It is similar to {{distance}} vector routing. <b>Path</b> <b>vector</b> routing assumes that one node (there can be many) in each autonomous system acts {{on behalf of the}} entire autonomous system. This node is called the speaker node. The speaker node creates a routing table and advertises it to neighboring speaker nodes in neighboring autonomous systems. The idea is the same as distance vector routing except that only speaker nodes in each autonomous system can communicate with each other. The speaker node advertises the path, not the metric, of the nodes in its autonomous system or other autonomous systems.Path vector routing is discussed in RFC 1322; the <b>path</b> <b>vector</b> routing algorithm is somewhat similar to the distance vector algorithm in the sense that each border router advertises the destinations it can reach to its neighboring router. However, instead of advertising networks in terms of a destination and the distance to that destination, networks are advertised as destination addresses and path descriptions to reach those destinations. A route is defined as a pairing between a destination and the attributes of the path to that destination, thus the name, <b>path</b> <b>vector</b> routing, where the routers receive a vector that contains paths to a set of destinations.The path, expressed in terms of the domains (or confederations) traversed so far, is carried in a special path attribute that records the sequence of routing domains through which the reachability information has passed.|$|E
50|$|Border Gateway Protocol is {{an example}} of a <b>path</b> <b>vector</b> protocol. In BGP, the routing table {{maintains}} the autonomous systems that are traversed in order to reach the destination system. Exterior Gateway Protocol (EGP) does not use path vectors.|$|E
40|$|Abstract—This paper {{presents}} two new {{properties of}} BGP routes. First, {{it shows that}} the frequency of autonomous systems (ASs) appearing in <b>path</b> <b>vectors</b> follow a Power-Law relation-ship. Secondly, it shows that path lengths can be characterized accurately by stable distributions. The main implication of these properties is that it allows the creation of realistic forwarding tables for simulation studies. Moreover, they extend previous works that have thus far only shown Power-Law relationships exhibited by ASs degree...|$|R
40|$|Power-law {{and stable}} {{distributions}} of BGP paths This paper presents two new properties of BGP routes. First, {{it shows that}} the frequency of autonomous systems (ASs) appearing in <b>path</b> <b>vectors</b> follow a Power-Law relationship. Secondly, it shows that path lengths can be characterized accurately by stable distributions. The main implication of these properties is that it allows the creation of realistic forwarding tables for simulation studies. Moreover, they extend previous works that have thus far only shown Power-Law relationships exhibited by ASs degree...|$|R
40|$|Today’s intra-domain {{protocols}} {{are limited}} in their scalability. We examine these limitations and propose an alternative {{in the form of}} an IGP based on <b>path</b> <b>vectors.</b> Taking advantage of the recent research interest in BGP’s performance, we are able to develop a protocol that converges quickly, produces a relatively low level of control-plane traffic and promises to scale to very large networks, while still producing shortest path trees based on minimising latency or maximising bandwidth. We show that such a protocol converges and present results of its simulation. 1...|$|R
5000|$|A <b>path</b> <b>vector</b> {{protocol}} is {{a network}} routing protocol which maintains the path information that gets updated dynamically. Updates which have looped through {{the network and}} returned to the same node are easily detected and discarded. This algorithm is sometimes used in Bellman-Ford routing algorithms to avoid [...] "Count to Infinity" [...] problems.|$|E
5000|$|... {{navigation}} data and symbols—for approaches and landings, the flight guidance systems can provide visual cues based on navigation aids {{such as an}} Instrument Landing System or augmented Global Positioning System such as the Wide Area Augmentation System. Typically this is a circle which fits inside the flight <b>path</b> <b>vector</b> symbol. Pilots can fly along the correct flight path by [...] "flying to" [...] the guidance cue.|$|E
50|$|Border Gateway Protocol (BGP) is a {{standardized}} {{exterior gateway protocol}} designed to exchange routing and reachability information among autonomous systems (AS) on the Internet. The protocol is often classified as a <b>path</b> <b>vector</b> protocol but is sometimes also classed as a distance-vector routing protocol. The Border Gateway Protocol makes routing decisions based on paths, network policies, or rule-sets configured by a network administrator and is involved in making core routing decisions.|$|E
30|$|The {{question}} that remains open to more investigation is why would an InP be honest when announcing pricing estimates? We {{believe that a}} reputation metric – indicating long-term accuracy of an InP’s pricing estimate to the actual cost of establishing a VN request – is necessary to remedy this situation. We would like to integrate such a reputation metric within LAP to allow dissemination of <b>path</b> <b>vectors</b> attributed with corresponding prices and overall reputation score of the InPs on the paths. An InP will {{then be able to}} use pricing and reputation scores to rank multiple paths to a common destination to make a forwarding decision.|$|R
30|$|To {{accommodate}} such location aware forwarding, we {{introduce a}} hierarchical geographic addressing scheme with support for aggregation, named COST. InPs in PolyViNE must associate COST addresses {{with all the}} substrate nodes and SPs must express location requirements in terms of COST. Controllers in different InPs publish/disseminate information about the geographic locations of their nodes along with the unit price of their resources. They can then aggregate and disseminate data collected from all neighboring Controllers {{to build their own}} knowledge bases of location to InP mappings, each accompanied by <b>path</b> <b>vectors</b> of InPs in the controller network and corresponding prices. We propose Location Awareness Protocol (LAP) to perform this task. Careful readers will notice in the following that COST and LAP are significantly influenced by BGP.|$|R
40|$|Abstract A Mobile Ad-Hoc Network (MANET) is {{considered}} with nodes that may act selshly or maliciously by simply dropping data packets rather than forwarding them. We study a distributed route assessment (reputation) {{system for a}} MANET context in which nodes attribute a route’s performance to their nearest neighbors on the route. Also, attribution to all relaying nodes is studied for the case where <b>path</b> <b>vectors</b> are available, and blame for dropped packets is assigned to each node on the path. For the situation where there is sufcient mobility (mixing) within the domain, we show that these reputations converge to reveal the true relative dropping rates of the individual nodes. These results may be applicable to a more general category of peer-to-peer networks with sufcient route diversity. I...|$|R
50|$|The IR {{component}} of an ADIRU gives attitude, flight <b>path</b> <b>vector,</b> ground speed and positional data. The ring laser gyroscope is a core enabling {{technology in the}} system, and is used together with accelerometers, GPS and other sensors to provide raw data. The primary benefits of a ring laser over older mechanical gyroscopes are {{that there are no}} moving parts, it is rugged and lightweight, frictionless and does not resist a change in precession.|$|E
5000|$|... flight <b>path</b> <b>vector</b> (FPV) or {{velocity}} vector symbol—shows where the aircraft is actually going, {{the sum of}} all forces acting on the aircraft. For example, if the aircraft is pitched up but is losing energy, then the FPV symbol will be below the horizon even though the boresight symbol is above the horizon. During approach and landing, a pilot can fly the approach by keeping the FPV symbol at the desired descent angle and touchdown point on the runway.|$|E
5000|$|On {{the left}} side of the display is an SVS-unique symbol, with the {{appearance}} of a purple, diminishing sideways ladder, and which continues on the right of the display. The two lines define a [...] "tunnel in the sky". This symbol defines the desired trajectory of the aircraft in three dimensions. For example, if the pilot had selected an airport to the left, then this symbol would curve off to the left and down. If the pilot keeps the flight <b>path</b> <b>vector</b> alongside the trajectory symbol, the craft will fly the optimum path. This path would be based on information stored in the Flight Management System's database and would show the FAA-approved approach for that airport.|$|E
40|$|In Ref. [1] {{the problem}} has been {{investigated}} on consistency, or compatibility, of linear transports along <b>paths</b> in <b>vector</b> bundles and bundle metrics, i. e. when the transports preserve the (scalar products defined by the) metric. The present paper generalizes this problem to and deals with the proble...|$|R
50|$|The {{powerful}} supercomputers {{of the era}} were at {{the other}} end of the computing spectrum from the microcomputers, and they also used integrated circuit technology. In 1976, the Cray-1 was developed by Seymour Cray, who had left Control Data in 1972 to form his own company. This machine was the first supercomputer to make vector processing practical. It had a characteristic horseshoe shape to speed processing by shortening circuit <b>paths.</b> <b>Vector</b> processing uses one instruction to perform the same operation on many arguments; it has been a fundamental supercomputer processing method ever since. The Cray-1 could calculate 150 million floating point operations per second (150 megaflops). 85 were shipped at a price of $5 million each. The Cray-1 had a CPU that was mostly constructed of SSI and MSI ECL ICs.|$|R
40|$|Abstract. Lacan {{represents}} {{language and}} psychoanalysis with a Möbius band. In this paper, we will represent, with mathematical rigor, directed paths on this Möbius surface once we embed it into 4 -space. These directed <b>paths</b> or <b>vectors</b> represent {{speech in the}} Lacanian model. We also briefly outline possible extensions of Lacan’s theory as directions for further research...|$|R
50|$|The {{asymmetric}} blade {{effect is}} dependent on thrust, and is proportional to forward velocity (specifically CAS) and, while generally insignificant during the initial ground roll for tail-wheel aircraft, will give a pronounced nose-left tendency during the later stages of the ground roll, particularly if the thrust axis is kept inclined to the flight <b>path</b> <b>vector</b> (i.e. tail-wheel in contact with runway). If a high angle of attack is used during the rotation (or indeed {{straight and level flight}} with high power and high angle of attack), then the effect can also be apparent. The effect is not so apparent during the landing, flare and rollout, given the relatively low power setting (propeller RPM). However, should the throttle be suddenly advanced with the tail-wheel in contact with the runway, then anticipation of this nose-left tendency is prudent.|$|E
50|$|In the 1st SVS {{head down}} image {{shown on the}} right, {{immediately}} visible indicators include the airspeed tape on the left, altitude tape on the right, and turn/bank/slip/skid displays at the top center. The boresight symbol (-v-) is {{in the center and}} directly below that is the flight <b>path</b> <b>vector</b> (FPV) symbol (the circle with short wings and a vertical stabilizer). The horizon line is visible running across the display with a break at the center, and directly to the left are numbers at ±10 degrees with a short line at ±5 degrees (the +5 degree line is easier to see) which, along with the horizon line, show the pitch of the aircraft. Unlike this color depiction of SVS on a head down primary flight display, the SVS displayed on a HUD is monochrome - that is, typically, in shades of green.|$|E
50|$|This {{technique}} {{relies on}} various BGP collectors who collect routing updates and tables and provide this information publicly. Each BGP entry contains a <b>Path</b> <b>Vector</b> attribute called the AS Path. This path represents an autonomous system forwarding path from a given origin {{for a given}} set of prefixes. These paths {{can be used to}} infer AS-level connectivity and in turn be used to build AS topology graphs. However, these paths do not necessarily reflect how data is actually forwarded and adjacencies between AS nodes only represent a policy relationship between them. A single AS link can in reality be several router links. It is also much harder to infer peerings between two AS nodes as these peering relationships are only propagated to an ISP's customer networks. Nevertheless, support for this type of mapping is increasing as more and more ISP's offer to peer with public route collectors such as Route-Views and RIPE. New toolsets are emerging such as Cyclops and NetViews that take advantage of a new experimental BGP collector BGPMon. NetViews can not only build topology maps in seconds but visualize topology changes moments after occurring at the actual router. Hence, routing dynamics can be visualized in real time. In comparison to what the tools using BGPMon does there is another tool netTransformer able to discover and generate BGP peering maps either through SNMP polling or by converting MRT dumps to a graphml file format. netTransformer allows us also to perform network diffs between any two dumps and thus to reason how does the BGP peering has evolved through the years. WhatsUp Gold, a IT monitoring tool, tracks networks, servers, applications, storage devices, virtual devices and incorporates infrastructure management, application performance management.|$|E
5000|$|Cufón is an {{alternative}} that converts font <b>paths</b> to <b>vector</b> graphics stored in JSON data format and then renders the fonts to canvas elements or VML (depending on availability) using a JavaScript rendering engine. A significant disadvantage in using Cufón is the requirement that the embedded font's license allow its distribution in unencrypted form, which many commercial fonts expressly forbid.|$|R
40|$|When a {{previously}} tested program is modified, {{it is necessary}} to test the modified parts of the program, and also retest other parts of the program that have been affected by the change. The challenge is in identifying the parts of the programs affected by the changes in an efficient manner. We adress the problem of identifying the affected def-use associations in the modified program. We use the notion of <b>path</b> <b>vectors</b> previously proposed by Bharadwaj et al. for scheduling, and adapt it for the detection of defuse associations that are affected by the change. The advantage of our approach over other techniques is that it involves computing the required partial data flow information only once given the set of changes in an appropriate form. The computation is driven by the program changes. A second advantage is that our approach does not require the data flow history of previous versions of the program to detect the affected def-use associations...|$|R
40|$|Includes bibliographical {{references}} (page 32). MPS, {{a program}} {{written in the}} Visual C# language, is an interactive educational tool for the undergraduate level college student and non-professional interested in the concepts of strain. MPS allows a student to visualize distortions of an initially circular object as it {{is transformed into a}} strain ellipse. Pure and simple shear of 72 coordinate points of an initial circle are tracked with displacement <b>path</b> <b>vectors.</b> Lines of no finite longitudinal strain also can be monitored during both progressives pure and simple shear. Key strain parameters are accessed through various dialog boxes. As strain increments are applied, the results of coordinate transformations are added to a color-coordinated data grid. Complex strain paths involving any combinations of pure, simple, or general strain can be modeled. MPS can be downloaded at: [URL] A detailed tutorial on how to use MPS is provided, and the complete C# code used in the generation of MPS is provided as an appendix...|$|R
40|$|This paper {{describes}} a routing algorithm, called Temporal <b>Path</b> <b>Vector</b> (TPV), {{for improving the}} convergence properties of conventional <b>path</b> <b>vector</b> routing protocols such as Border Gateway Protocol (BGP). By employing time stamps in routing information, TPV detects obsolete information and purges it. Thus, it suppresses route bouncing and accelerates the routing convergence. Compared with the original BGP, TPV takes less than one tenth as many steps to converge...|$|E
40|$|<b>Path</b> <b>vector</b> routing {{protocols}} such as BGP {{are known to}} suffer from slow convergence. In response a number of convergence enhancements have been proposed, but convergence dynamics {{have yet to be}} well understood and there has been no general framework to assess and compare the various improvement algorithms. In this paper we present a general framework to analyze the convergence delay bounds of <b>path</b> <b>vector</b> {{routing protocols}}, under the assumption of shortest path policy and single link failure. Our framework takes into account important factors including network connectivity, failure location, and message processing delay. It applies to all <b>path</b> <b>vector</b> protocol variants(standard <b>path</b> <b>vector</b> protocol and convergence improvement algorithms) and allows us to develop analytical bounds that were not previously available, such as the delay bounds for path fail-over for BGP and most of the convergence enhancements. Our analysis shows that BGP fail-over delay bounds are determined largely by a combination of two factors: 1) the distance between the failure and the prefix origin and, 2) the length of the longest alternate path used to reach the destination after the failure. These factors are captured formally and can explain why existing convergence enhancements often provide only limited improvements in fail-over events. Furthermore, explicitly modeling message processing delay reveals insights into the impacts of topology structure (e. g. richness in connectivity) and different effectiveness of different enhancements. These new results allow one to better understand the behavior of various <b>path</b> <b>vector</b> protocols under given topology structure, network size, and message delays...|$|E
40|$|This {{document}} describes protocols {{that are}} part of the Multi-Level <b>Path</b> <b>Vector</b> (MLPV) routing scheme being developed for use in PIP internets. MLPV is a hierarchical routing scheme. It allows an arbitrary number of levels in the topological hierarchy and arbitrary interconnections within and across levels. Conceptually, the execution of MLPV in a PIP router consists of running multiple, independent instances of a <b>path</b> <b>vector</b> routing algorithm, one for each level of the hierarchy that routes are being computed. This document describes the MLPV topological model and specifies the basic <b>path</b> <b>vector</b> routing schemes used at various levels of the hierarchy. Status of this document This document is an Internet Draft. Internet Drafts are working documents of the Internet Engineering Task Force (IETF), its Areas, and its Working Groups. Note that other groups may also distribute working documents as Internet Drafts). Internet Drafts are draft documents valid for a maximum of six months. Intern [...] ...|$|E
40|$|The Easy Path Wavelet Transform (EPWT) has {{recently}} been proposed {{by one of the}} authors as a tool for sparse representations of bivariate functions from discrete data, in particular from image data. The EPWT is a locally adaptive wavelet transform. It works along pathways through the array of function values and exploits the local correlations of the given data in a simple appropriate manner. However, the EPWT suffers from its adaptivity costs that arise from the storage of <b>path</b> <b>vectors.</b> In this paper, we propose a new hybrid method for image compression that exploits the advantages of the usual tensor product wavelet transform for the representation of smooth images and uses the EPWT for an efficient representation of edges and texture. Numerical results show the efficiency of this procedure. Key words. sparse data representation, tensor product wavelet transform, easy path wavelet transform, linear diffusion, smoothing filters, adaptive wavelet bases, N-term approximation AMS Subject classifications. 41 A 25, 42 C 40, 68 U 10, 94 A 08...|$|R
40|$|Recent {{studies on}} {{knowledge}} base completion, {{the task of}} recovering missing facts based on observed facts, demonstrate the importance of learning embeddings from multi-step relations. Due {{to the size of}} knowledge bases, previous works manually design relation paths of observed triplets in symbolic space (e. g. random walk) to learn multi-step relations during training. However, these approaches suffer some limitations as most paths are not informative, and it is prohibitively expensive to consider all possible paths. To address the limitations, we propose learning to traverse in vector space directly without the need of symbolic space guidance. To remember the connections between related observed triplets and be able to adaptively change relation <b>paths</b> in <b>vector</b> space, we propose Implicit ReasoNets (IRNs), that is composed of a global memory and a controller module to learn multi-step relation <b>paths</b> in <b>vector</b> space and infer missing facts jointly without any human-designed procedure. Without using any axillary information, our proposed model achieves state-of-the-art results on popular knowledge base completion benchmarks...|$|R
40|$|We {{present the}} Feasible Label Routing (FLR) {{protocol}} for mobile ad hoc networks, which uses path information to establish routes to destinations on demand. FLR enables loopfree incremental (hop-by-hop) routing of data packets using only the addresses of their destinations. Like the dynamic source routing (DSR) protocol, FLR avoids {{the need for}} any time-stamps or sequence numbers {{by the use of}} <b>path</b> <b>vectors</b> exchanged when routes are established or repaired. Instantaneous loop freedom is attained by using path information for a destination as labels with which routers are ordered lexicographically with respect to the destination, i. e., FLR ensures that the labels of routers for a given destination become "smaller" the closer they are to the destination. Simulation experiments in Qualnet show that the performance of FLR is far better than the performance of the ad-hoc on-demand distance vector (AODV) protocol, the dynamic source routing (DSR) protocol, and the optimized link state routing (OLSR) protocol, in terms of the packet delivery ratio and average delivery latencies achieved, as well as the overhead incurred in the network...|$|R
