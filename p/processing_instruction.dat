104|245|Public
2500|$|Ideas that {{developed}} during discussion that are novel in XML included the algorithm for encoding detection and the encoding header, the <b>processing</b> <b>instruction</b> target, the xml:space attribute, {{and the new}} close delimiter for empty-element tags. The notion of well-formedness as opposed to validity (which enables parsing without a schema) was first formalized in XML, although it had been implemented successfully in the Electronic Book Technology [...] "Dynatext" [...] software; the software from the University of Waterloo New Oxford English Dictionary Project; the RISP LISP SGML text processor at Uniscope, Tokyo; the US Army Missile Command IADS hypertext system; Mentor Graphics Context; Interleaf and Xerox Publishing System.|$|E
50|$|The XML Declaration at the {{beginning}} of an XML document (shown below) is not a <b>processing</b> <b>instruction,</b> however its similar syntax has often resulted in it being referred to as a <b>processing</b> <b>instruction.</b>|$|E
5000|$|If page {{is valid}} (in memory) then {{continue}} <b>processing</b> <b>instruction</b> as normal.|$|E
50|$|Conforming {{applications}} shall read documents containing <b>processing</b> <b>instructions</b> {{and should}} preserve them.|$|R
5000|$|... :finds XML <b>processing</b> <b>instructions</b> such as [...] In this case, [...] would match.|$|R
50|$|A draft {{specification}} for Robots exclusion {{standard rules}} inside XML documents uses <b>processing</b> <b>instructions.</b>|$|R
5000|$|Pre-1.0 {{working drafts}} of XSLT used [...] in their {{embedding}} examples, and this type was implemented {{and continues to}} be promoted by Microsoft in Internet Explorer and MSXML. It is also widely recognized in the [...] <b>processing</b> <b>instruction</b> by other browsers. In practice, therefore, users wanting to control transformation in the browser using this <b>processing</b> <b>instruction</b> are obliged to use this unregistered media type.|$|E
50|$|A <b>Processing</b> <b>Instruction</b> (PI) is an SGML and XML node type, {{which may}} occur {{anywhere}} in the document, intended to carry instructions to the application.|$|E
50|$|For schema formats that do {{not have}} a {{standard}} mechanism to bind the schema to the XML file, Oxygen XML provides a <b>processing</b> <b>instruction</b> that instructs the program as to which schemas to use.|$|E
50|$|The DocBook XSLT stylesheets {{understand}} {{a number of}} <b>processing</b> <b>instructions</b> to override the default behaviour.|$|R
50|$|Within {{the root}} element, apart from {{any number of}} {{attributes}} and other elements, {{there may also be}} more optional text, comments, <b>processing</b> <b>instructions</b> and whitespace.|$|R
5000|$|The World Wide Web Consortium defines {{not only}} the {{specifications}} for XML itself, but also the DOM, which is a platform- and language-independent standard object model for representing XML documents. DOM Level 1 defines, for every XML document, an object representation of the [...] itself and an attribute or property on the document called [...] This property provides access to an object of type [...] which directly represents the root element of the document. [...] content [...] There can be other XML nodes outside of the root element. In particular, the root element may be preceded by a prolog, which itself may consist of an XML declaration, optional comments, <b>processing</b> <b>instructions</b> and whitespace, followed by an optional DOCTYPE declaration and more optional comments, <b>processing</b> <b>instructions</b> and whitespace. After the root element there may be further optional comments, <b>processing</b> <b>instructions</b> and whitespace within the document.|$|R
5000|$|<b>Processing</b> <b>Instruction</b> event, {{with the}} target some_pi and data some_attr="some_value" [...] (the content after {{the target is}} just text; however, it is very common to imitate the syntax of XML attributes, as in this example) ...|$|E
5000|$|Though it does handle {{processing}} instructions, {{it has no}} {{facilities for}} handling XSLT stylesheet declarations. That is, it does not apply an XSLT declared in a stylesheet <b>processing</b> <b>instruction</b> to the XML file when parsing it.|$|E
5000|$|The {{most common}} {{use of a}} <b>processing</b> <b>instruction</b> is to request the XML {{document}} be rendered using a stylesheet using the 'xml-stylesheet' target, which was standardized in 1999. [...] It {{can be used for}} both XSLT and CSS stylesheets.|$|E
5000|$|FleXML: FleXML is an XML {{processing}} language first {{implemented by}} Kristofer Rose. Its {{approach is to}} add actions to an XML DTD specifying <b>processing</b> <b>instructions</b> for any subset of the DTD's rules.|$|R
50|$|The first form of delimiters, , in XHTML {{and other}} XML documents, creates {{correctly}} formed XML <b>processing</b> <b>instructions.</b> This {{means that the}} resulting mixture of PHP code and other markup in the server-side file is itself well-formed XML.|$|R
50|$|The {{language}} {{is based on}} the XQuery and XPath Data Model (XDM) which uses a tree-structured model of the information content of an XML document, containing seven kinds of nodes: document nodes, elements, attributes, text nodes, comments, <b>processing</b> <b>instructions,</b> and namespaces.|$|R
50|$|Besides {{the command}} line options, the Webalizer may be {{configured}} through parameters of a configuration file. By default, The Webalizer reads the file webalizer.conf and interprets each line as a <b>processing</b> <b>instruction.</b> Alternatively, a user-specified file may be provided using the -c option.|$|E
50|$|Note {{that the}} first line of the sample above is the XML Declaration and not a {{processing}} instruction; as such it will not be reported as a <b>processing</b> <b>instruction</b> event (although some SAX implementations provide a separate event just for the XML declaration).|$|E
5000|$|In {{order for}} a web browser to be able {{automatically}} to apply an XSL transformation to an XML document on display, an XML stylesheet <b>processing</b> <b>instruction</b> can be inserted into XML. So, for example, if the stylesheet in Example 2 above were available as [...] "example2.xsl", the following instruction could {{be added to the}} original incoming XML: ...|$|E
40|$|This thesis {{deals with}} {{problems}} of toxicological labs at secondary school. The theoretical part provides {{an introduction to}} all the topics, the practical part consists of the <b>processing</b> <b>instructions</b> for laboratory tasks, accompanied by illustrations, photos, and supplementary questions. Suplement contains solutions of these issues...|$|R
5|$|Cray {{computers}} {{became famous}} for their vector-processing computers in the 1970s and 1980s. However, vector processors—both as CPUs and as full computer systems—have generally disappeared. Modern processor instruction sets do include some vector <b>processing</b> <b>instructions,</b> such as with Freescale Semiconductor's AltiVec and Intel's Streaming SIMD Extensions (SSE).|$|R
40|$|In {{conventional}} {{data communication}} networks, the basic network components are passive, where routing {{decisions are made}} {{solely on the basis}} of packet header information. In contrast, active networks allow added computation within the network through user-defined routing and <b>processing</b> <b>instructions,</b> providing the on-demand installation of powerful software-based network services...|$|R
50|$|The {{proposed}} vector <b>processing</b> <b>instruction</b> set {{may make}} the packed SIMD set obsolete. The designers hope to have enough flexibility so that a CPU can implement vector instructions in a standard processor's registers. This would enable minimal implementations with similar performance to a multimedia ISA, (as above.) However, a true vector coprocessor could execute the same code with higher performance.|$|E
50|$|While {{it is fair}} to {{say that}} Berkeley IRAM did not achieve the {{recognition}} that Berkeley RISC received, the IRAM project was nevertheless influential. Although initial IRAM proposals focused on trade-offs between CPU and DRAM, IRAM research came to concentrate on vector instruction sets.Its publications were early advocates of the incorporation of vector processing and vector instruction sets into microprocessors, and several commercial microprocessors, such as the Intel AVX, subsequently adopted vector <b>processing</b> <b>instruction</b> set extensions.|$|E
50|$|A SAX parser only {{needs to}} report each parsing event as it happens, and {{normally}} discards {{almost all of}} that information once reported (it does, however, keep some things, for example {{a list of all}} elements that have not been closed yet, in order to catch later errors such as end-tags in the wrong order). Thus, the minimum memory required for a SAX parser is proportional to the maximum depth of the XML file (i.e., of the XML tree) and the maximum data involved in a single XML event (such as the name and attributes of a single start-tag, or the content of a <b>processing</b> <b>instruction,</b> etc.).|$|E
5000|$|Finally, an XML element {{may contain}} {{comments}} and/or <b>processing</b> <b>instructions.</b> csexp has no specific equivalents, {{but they are}} trivial to represent, merely by reserving a name for each. For example, naming them [...] "*COM" [...] and [...] "*PI" [...] (the [...] "*" [...] prevents ever colliding with XML element type names): ...|$|R
40|$|Many {{previous}} studies have illustrated the importance of subjectivity – the degree of speaker involvement for the categorization of coherence relations in discourse. Empirical approaches provide evidence {{for the role of}} subjectivity in the taxonomy. Causal relations and connectives can be classified by the degree of subjectivity. On-line processing studies show that subjectivity influences the way people interpret causality in discourse. Subjective causal relations, which involve the subject of consciousness (who are responsible for the causality) often result in extra processing compared to objective relations. <b>Processing</b> <b>instructions</b> in discourse help to establish the subjective mental space that is required to interpret subjectivity, and thus, influence the processing of causal relations. In addition, the categorization of causal connectives differs across languages, which provides an interesting perspective of the cross-linguistic study. The current study aims to investigate the role of Chinese <b>processing</b> <b>instructions</b> suoyi-shuo and yushi-hu in both language use and on-line processing. A corpus-based analysis is conducted according to a model constructing subjectivity as four variables. The result gives evidence to the categorization of Chinese causal connectives suoyi and yushi, and cue phrases suoyi-shuo and yushi-hu. An on-line processing study is performed to investigate how <b>processing</b> <b>instructions</b> with different indicators shuo and hu influence processing in different ways. The two studies in both language use and processing shed new light on the interpretation of causality and subjectivity in the Chinese language...|$|R
5000|$|Nodes are {{of seven}} kinds, {{corresponding}} to different constructs in the syntax of XML: elements, attributes, text nodes, comments, <b>processing</b> <b>instructions,</b> namespace nodes, and document nodes. (The document node replaces the root node of XPath 1.0, because the XPath 2.0 model allows trees to be rooted at {{other kinds of}} node, notably elements.) ...|$|R
5000|$|Ideas that {{developed}} during discussion that are novel in XML included the algorithm for encoding detection and the encoding header, the <b>processing</b> <b>instruction</b> target, the xml:space attribute, {{and the new}} close delimiter for empty-element tags. The notion of well-formedness as opposed to validity (which enables parsing without a schema) was first formalized in XML, although it had been implemented successfully in the Electronic Book Technology [...] "Dynatext" [...] software; the software from the University of Waterloo New Oxford English Dictionary Project; the RISP LISP SGML text processor at Uniscope, Tokyo; the US Army Missile Command IADS hypertext system; Mentor Graphics Context; Interleaf and Xerox Publishing System.|$|E
40|$|This volume {{tracks the}} impact <b>processing</b> <b>instruction</b> has made since its conception. It {{provides}} an overview of new research trends on measuring the relative effects of <b>processing</b> <b>instruction.</b> Firstly, the authors explain <b>processing</b> <b>instruction,</b> both its main theoretical underpinnings as well as the guidelines for developing structured input practices. Secondly, they review the empirical research conducted, to date, so that readers have an overview of new research carried out on the effects of <b>processing</b> <b>instruction.</b> The authors finally reflect on the generalizability and limits of the research on <b>processing</b> <b>instruction</b> and offer future directions for <b>processing</b> <b>instruction</b> research...|$|E
40|$|This chapter {{presents}} the results of an experimental study investigating secondary and cumulative transfer-of training effects of <b>Processing</b> <b>Instruction</b> on the acquisition of French. The study carried out presented a new line of research for Input Processing and <b>Processing</b> <b>Instruction</b> research by investigating secondary and cumulative transfer-of training effects of <b>Processing</b> <b>Instruction...</b>|$|E
5000|$|This new {{paradigm}} breaks up the <b>processing</b> of <b>instructions</b> into these steps: ...|$|R
2500|$|XML 1.0 (Fifth Edition) and XML 1.1 {{support the}} direct use {{of almost any}} Unicode {{character}} in element names, attributes, comments, character data, and <b>processing</b> <b>instructions</b> (other than {{the ones that have}} special symbolic meaning in XML itself, such as the less-than sign, [...] "<"). The following is a well-formed XML document including Chinese, Armenian and Cyrillic characters: ...|$|R
40|$|We model micro-architectures with non-pipelined <b>instruction</b> <b>processing</b> and pipelined <b>instruction</b> <b>processing</b> using Maurer machines, basic thread algebra {{and program}} algebra. We show that stored {{programs}} are executed as intended with these micro-architectures. We {{believe that this}} work provides a new mathematical approach to the modelling of micro-architectures and the verification of their correctness and the anticipated speed-up results...|$|R
