4|19|Public
50|$|RPG IV (a.k.a. RPGLE or ILE RPG) was {{released}} in 1994 {{as part of the}} v3r1 release of OS/400. With the release of RPG IV, the RPG name was officially no longer an initialism. RPG IV offered a greater variety of expressions within its Extended Factor-2 Calculation Specification and, later in life, its free-format Calculation Specifications and <b>Procedure</b> <b>syntax.</b> RPG IV is the only version of RPG supported by IBM in its long line of successors to the AS/400 system (iSeries, etc.).|$|E
40|$|The most {{familiar}} reason to use PROC LOGISTIC is to model binary (yes/no, 1 / 0) categorical outcome variables. However, PROC LOGISTIC {{can handle the}} case where the dependent variable has more than two categories. PROC LOGISTIC uses a cumulative logit function if it detects more than two levels of the dependent variable, which is appropriate for ordinal (ordered) dependent variables with 3 or more levels. A generalized logit function for the LINK = option is available to analyze nominal (un-ordered) categorical variables with 3 + levels (i. e., multinomial logistic regression). Detailed examples will be given, emphasizing <b>procedure</b> <b>syntax,</b> data structure, interpretation of statistical output, and ODS output data sets...|$|E
40|$|In {{order to}} use STYLE = {{statement}} level overrides, {{you need to}} understand which pieces or areas of PRINT, REPORT, and TABULATE output you can change. And then {{you need to understand}} how and where in your <b>procedure</b> <b>syntax</b> to use the STYLE = override syntax. Last, but not least, you need to know the names of the style attributes that you want to change. This presentation illustrates with concrete examples how to use STYLE = overrides with PRINT, REPORT, and TABULATE. As the examples move from the simple to the complex, you will learn how to change fonts, add text decoration, alter the interior table lines, perform trafficlighting, and insert images into your ODS output files using some ODS magic to improve your reports...|$|E
40|$|Abstract: This {{paper is}} devoted to Fortran GNS {{language}} intended for distributed memory architectures. Fortran GNS is based on Fortran 77 Standard and extended by task handling and message passing constructs. The set of added language features includes a new data type, {{a new kind of}} program unit, new statements and new intrinsic <b>procedures.</b> <b>Syntax</b> and semantics of all extensions are described in this document in detail. Note: Publication language:englis...|$|R
40|$|Abstract: This {{paper is}} devoted to the Fortran GNS {{language}} intended for distributed memory architectures. Fortran GNS is based on Fortran 77 Standard and extended by task handling and message passing constructs. The set of added language features includes a new data type, a new kind of program unit, new statements and new intrinsic <b>procedures.</b> <b>Syntax</b> and semantics of all extensions are described in this document in detail. There are presented analytical solutions of the problem of diffusion of a magnetic field from the region between rails for a two-dimensional case. Motionless and moving contacts are considered. The results of numerical experiments on finding of an order of singularity of physical fields are presented. The solutions obtained allow one to explain a number of the results of both numerical calculations using a 2 D code and actual experiments. Note: Publication language:russia...|$|R
5000|$|To import {{a library}} {{is a way}} to read external, {{possibly}} compiled, routines, programs or packages. Imports can be classified by level (module, package, class, <b>procedure,...)</b> and by <b>syntax</b> (directive name, attributes,...) ...|$|R
40|$|The {{flexibility}} {{that the}} markup destination {{has added to}} ODS {{is comparable to the}} benefits ODS originally brought to SAS ® output, but it comes at a price known as the tagset. With ODS, we could display results in web pages without HTML knowledge; in Word without RTF knowledge. Developers soon realized though that having ODS do all the work wasn’t always ideal; that on occasion, users could benefit from having some control over how markup was generated. Just as templates instruct ODS on display customization, tagsets instruct ODS on markup customization. The advantages are clear – even more flexibility in the generation of output. The price is similar to that paid for display flexibility – more TEMPLATE <b>procedure</b> <b>syntax,</b> and an understanding of how ODS constructs files from these instructions. Great accomplishments often come from modest beginnings. This paper is your modest beginning. From {{the edge of the field}} we’ll get “the lay of the land ” with discussions on background, purpose, and use with the Markup destination. With one foot in the field we’ll look at examples of markup that require slight tweaking and available documentation to guide us. Further into the field, we’ll produce simple informational tagsets, and inch out further with tagsets that inherit and manipulate those that SAS provides. By the end of the paper, the reader will see in the distance many undiscovered areas, but hopefully the curiosity generated by the path taken thus far will lead to further exploration and bridges to greater accomplishments...|$|E
40|$|The {{forthcoming}} Revised 6 Report on Scheme {{differs from}} previous reports {{in that the}} language it describes is structured {{as a set of}} libraries. It also provides a syntax for defining new portable libraries. The same library may export both procedure and hygienic macro definitions, which allows <b>procedures</b> and <b>syntax</b> to be freely intermixed, hidden, and exported. This paper describes the design and implementation of a portable version of R 6 RS libraries that expands libraries into a core language compatible with existing R 5 RS implementations. Our implementation is characterized by its use of inference to determine when the bindings of an imported library are needed, e. g., run time or compile time, relieving programmers of the burden of declaring usage requirements explicitly...|$|R
40|$|Package clusterSim {{has been}} written in R language. It {{contains}} one main function cluster. Sim and sixteen auxiliary functions. The article presents selected auxiliary functions of clusterSim program and examples of the <b>syntax</b> (<b>procedures)</b> for solving different clustering problems using among others clusterSim package including especially dist. GDM function. These procedures help to resolve {{a broad range of}} classification problems that are not available in statistical packages (e. g. SPSS, Statistica, S-Plus, SAS). Marek Walesia...|$|R
40|$|Abstract: We {{shall present}} various <b>procedures</b> for the <b>syntax</b> {{analysis}} in certain formal systems {{defined by the}} user, which are integrated in the proof checker. The flexibility and {{the applicability of the}} method {{lies in the fact that}} the program treats formal theories as parameters (both axioms and derivation rules are parts of the input), so developed algorithms work for any formalism which can be expressed within the language of the predicate logic. ...|$|R
40|$|We have {{developed}} a document type description (DTD) in Extensable Markup Language (XML) 1 for clinical laboratory <b>procedures.</b> Our XML <b>syntax</b> can adequately structure a variety of procedure types across different laboratories and is compatible with current procedure standards. The combination of this format with an XML content management system and appropriate style sheets will allow efficient procedure maintenance, distributed access, customized display and effective searching across {{a large body of}} test information...|$|R
40|$|In this presentation, I {{will review}} the {{bootstrap}} for complex surveys with designs featuring stratification, clustering, and unequal probability weights. I will present the Stata module bsweights, which creates the bootstrap weights for designs specified through and supported by svy. I will also provide simple demonstrations highlighting {{the use of the}} <b>procedure</b> and its <b>syntax.</b> I will discuss various tuning parameters and their impact on the performance of the procedure, and I will give arguments for the bootstrap by the method of weights in nonsurvey settings. ...|$|R
40|$|The {{application}} of space syntax {{as a method}} for examining the role of spatial configuration on people 2 ̆ 7 s behavior has been widespread in several disciplines, such as urban design and architecture. However, the ideas and <b>procedures</b> of space <b>syntax</b> have rarely been applied in studies {{within the field of}} public health or leisure studies. This article briefly introduces the principles of space syntax and describes how space syntax can extend previous knowledge regarding associations between the built environment and physical activity with specific applications to research on parks and public open spaces...|$|R
40|$|The two-volume report {{describes}} the development of, and provides {{information needed to}} operate, the Economic Growth Analysis System (E-GAS) model. The model {{will be used to}} project emissions inventories of volatile organic compounds (VOCs), oxides of nitrogen (NO X), and carbon monoxide (CO) for ozone nonattainment areas and Regional Oxidation Model (ROM) modeling regions. The report details the design and development of E-GAS and includes detailed descriptions of the workings of the E-GAS computer modeling software components and external software. The system is an economic and activity forecast model that translates the user’s assumptions regarding regional economic policies and resource prices into Source Classification Code (SCC) level growth factors. The report provides E-GAS users with sufficient background information to define and calibrate the E-GAS model, as well as the <b>procedures</b> and <b>syntax</b> necessary to operate the system. The organization of the user’s manual is determined by the process used in operating the system, providing images of sample screens as well as text...|$|R
50|$|Gabor X toth {{published}} in early September 2013 a thesis {{to present the}} design of a social messaging service for the GNUnet peer-to-peer framework that offers scalability, extensibility, and end-to-end encrypted communication. The scalability property is achieved through multicast message delivery, while extensibility is made possible by using PSYC (Protocol for SYnchronous Conferencing), which provides an extensible RPC (Remote <b>Procedure</b> Call) <b>syntax</b> that can evolve over time without having to upgrade the software on all nodes in the network. Another key feature provided by the PSYC layer are stateful multicast channels, which are used to store e.g. user profiles. End-to-end encrypted communication is provided by the mesh service of GNUnet, upon which the multicast channels are built. Pseudonymous users and social places in the system have cryptographical identities — identified by their public key — these are mapped to human memorable names using GNS (GNU Name System), where each pseudonym has a zone pointing to its places.|$|R
40|$|OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. This {{document}} {{is available at}} srfi. schemers. org/srfi- 41. Streams, sometimes called lazy lists, are a sequential data structure containing elements computed only on demand. A stream is either null or is a pair with a stream in its cdr. Since elements of a stream are computed only when ac-cessed, streams can be infinite. Once computed, {{the value of a}} stream element is cached in case it is needed again. Streams without memoization were first described by Peter Landin in 1965. Memoization became accepted as an essential feature of streams about a decade later. To-day, streams are the signature data type of functional pro-gramming languages such as Haskell. This Scheme Request for Implementation describes two libraries for operating on streams: a canonical set of stream primitives and a set of <b>procedures</b> and <b>syntax</b> de-rived from those primitives that permits convenient ex-pression of stream operations. They rely on facilities pro-vided by R 6 RS, including libraries, records, and error reporting. To load both stream libraries, say: (import (streams) ...|$|R
40|$|JSim is a {{simulation}} system for developing models, designing experiments, and evaluating hypotheses on physiological and pharmacological systems through {{the testing of}} model solutions against data. It is designed for interactive, iterative manipulation of the model code, handling of multiple data sets and parameter sets, and for making comparisons among different models running simultaneously or separately. Interactive use {{is supported by a}} large collection of graphical user interfaces for model writing and compilation diagnostics, defining input functions, model runs, selection of algorithms solving ordinary and partial differential equations, run-time multidimensional graphics, parameter optimization (8 methods), sensitivity analysis, and Monte Carlo simulation for defining confidence ranges. JSim uses Mathematical Modeling Language (MML) a declarative syntax specifying algebraic and differential equations. Imperative constructs written in other languages (MATLAB, FORTRAN, C++, etc.) are accessed through <b>procedure</b> calls. MML <b>syntax</b> i...|$|R
40|$|Following {{the line}} of stilistic {{interpretation}} about the Sylla’s Myth in De facie in orbe Lunae I have made in other previous publications (1998, 2002, 2010, and 2011), I propose now to analyse the pages 944 C- 945 B, concerning the celestial surface of the moon. My principal aim in {{this paper is to}} underline the lingüistic <b>procedures</b> (fonology, semantic, <b>syntax,</b> morphology etc.) Plutarch uses for enphatizing his reflections on the Moon’s roll concerning the afterlife destiny of man. In this case the spacial topic is the Elysian plain, where the transformation of men into demons and the eventual ascension and fall of his nous to and from the Sun is operated. Texto de comunicación presentada al X Congreso Internacional de la IPS, celebrado en Delfos (Grecia) Universidad de Málaga. Campus de Excelencia Internacional Andalucía Tec...|$|R
40|$|Academic Libraries (ALs) design {{concept has}} been under a {{changing}} process, precipitated by both internal needs and external pressures including changes in the societal context of education, the information services and documentation storage requirements. This paper is focused on a model of form and function to assess AL 9 ̆ 2 in use, in order to explore ways for better understanding their performance. The proposed model was developed {{within the scope of}} a wider research project and makes both use of Post-Occupancy Evaluation and of Space <b>Syntax</b> <b>procedures</b> in order to explore how the spatial configuration influences the performance and use of ALs space. It considers ALs building typology as spatial, physical and social systems, by: 1) measuring users satisfaction about how well the space supports their requirements; and 2) providing information on how architecture and spatial design support - enable and generate - flows of information, communication and knowledge. The analysis provides evidence suggesting that ALs 9 ̆ 2 spatial system influences study performance, patterns of use and co-presence of its users. The results of data inputs point out prospective strategies about space intervention...|$|R
40|$|This {{research}} {{aimed to}} product model of learning based on intuition {{to improve the}} creative thinking ability in solving mathematics problems in the students of SMA N 2 Sragen validly, practically, and effectively. The learning model produced included syntax and learning tools such as teaching material, lesson plan, worksheet, and problem sheet. This type of the research was a Research and Development (R&D). Subjects of this research were students class of X MS (Mathematic Science) 4 and class X MS 5 of SMA N 2 Sragen, Central Java. The process of developing an learning model based on intuition referred to development model of Plomp and Borg & Gall including : (1) studying and collecting information in preliminary investigation stage, (2) designing an learning model based on intuition, created learning tools (teaching material, lesson plan, worksheet, and problem sheet), (3) realizing model and learning tools organized into first draft, (4) validating the first draft against validator, revising, and then trying out the model, and revising again, and (5) holding FGD to evaluate the results of tryout that had been conducted and revising it for the next tryout. This research produced syntax and learning tools (teaching material, lesson plan, worksheet, and problem sheet) of learning model based on intuition to improve the creative thinking ability in solving mathematics problems of students validly, practically, and effectively. The <b>procedure</b> of <b>syntax</b> in an learning model based on intuition: (1) The teacher made introduction such as preparing the students psychically and physically, apperception, providing motivation and learning objectives, (2) Teacher divided the students heterogeneously into some groups of two, (3) The students were given worksheet to discuss in group and there were five activities observing; questioning; exploring; associating; and communicating, (4) The students were given problems individually in the problem sheet to work on with stages that could appear intuition and improve their creative thinking ability including beginning, incubation, illumination, and verification, (5) Closing such as included reflection and homework...|$|R
40|$|JSim is a {{simulation}} system for developing models, designing experiments, and evaluating hypotheses on physiological and pharmacological systems through {{the testing of}} model solutions against data. It is designed for interactive, iterative manipulation of the model code, handling of multiple data sets and parameter sets, and for making comparisons among different models running simultaneously or separately. Interactive use {{is supported by a}} large collection of graphical user interfaces for model writing and compilation diagnostics, defining input functions, model runs, selection of algorithms solving ordinary and partial differential equations, run-time multidimensional graphics, parameter optimization (8 methods), sensitivity analysis, and Monte Carlo simulation for defining confidence ranges. JSim uses Mathematical Modeling Language (MML) a declarative syntax specifying algebraic and differential equations. Imperative constructs written in other languages (MATLAB, FORTRAN, C++, etc.) are accessed through <b>procedure</b> calls. MML <b>syntax</b> is simple, basically defining the parameters and variables, then writing the equations in a straightforward, easily read and understood mathematical form. This makes JSim good for teaching modeling as well as for model analysis for research.    For high throughput applications, JSim can be run as a batch job.   JSim can automatically translate models from the repositories for Systems Biology Markup Language (SBML) and CellML models. Stochastic modeling is supported. MML supports assigning physical units to constants and variables and automates checking dimensional balance as the first step in verification testing. Automatic unit scaling follows, e. g. seconds to minutes, if needed. The JSim Project File sets a standard for reproducible modeling analysis: it includes in one file everything for analyzing a set of experiments: the data, the models, the data fitting, and evaluation of parameter confidence ranges. JSim is open source; it and about 400 human readable open source physiological/biophysical models are available at [URL]...|$|R
40|$|Abstract Background Many {{researchers}} use observed questionnaire {{scores to}} evaluate score reliability {{and to make}} conclusions and inferences regarding quality-of-life outcomes. The amount of false alarms from medical diagnoses that would be avoided if observed scores were substituted with expected scores is interesting, and understanding these differences {{is important for the}} care of cancer patients. Using expected scores to estimate the reliability of 95 % confidence intervals (CIs) is rarely reported in published papers. We investigated the reliability of patient responses to a quality-of-life questionnaire and made recommendations for future studies of {{the quality of life of}} patients. Methods A total of 115 patients completed the EORTC core questionnaire QLQ-C 30 (version 3) after radiotherapy. The observed response scores, assumed to be one-dimensional, were summed and transformed into expected scores using the Rasch rating scale model with WINSTEPS software. A series of simulations was performed using a unified bootstrap procedure after manipulating scenarios with different questionnaire lengths and patient numbers to estimate the reliability at 95 % confidence intervals. Skewness analyses of the 95 % CIs were compared to detect different effects between groups according to the two data sets of observed and expected response scores. Results We found that (1) it is necessary to report CIs for reliability and skewness coefficients in papers; (2) data derived from expected response scores are preferable to making inferences; and (3) visual representations displaying the 95 % CIs of skewness values applied to item-by-item analyses can provide a useful interpretation of quality-of-life outcomes. Conclusion Reliability coefficients can be reported with 95 % CIs by statistical software to evaluate the internal consistency of respondent scores on questionnaire items. The SPSS <b>syntax</b> <b>procedures</b> for estimating the reliability of the 95 % CI, expected score generation and visual skewness analyses are demonstrated in this study. We recommend that effect sizes such as a 95 % CI be reported along with p values reporting significant differences in quality-of-life studies. </p...|$|R
40|$|Background and Purpose There {{are three}} forms of Primary Progressive Aphasia: nonfluent/agrammatic, semantic, and Logopenic (PPA-LV). Differential {{diagnosis}} of PPA requires multiple {{sources of information}} including assessment of connected speech. Simply extending connected speech analysis measures developed for vascular aphasia obscures essential features of PPA-LV. The LCM-SS (Hilger et al., in press) was, therefore, designed to capture semantic, morpho-syntactic, and phonemic characteristics of PPA-LV. In this study we compare deterioration of English and Shanghai Chinese (Shanghainese) over {{two years in a}} bilingual woman (BYR) with PPA-LV. Participant BYR {{was born and raised in}} China speaking Shanghainese. She was educated in English and attended college in Ireland. She then lived in English-speaking countries and was married for 40 years to a monolingual English-speaking partner. She began experiencing word finding difficulty at age 70, was diagnosed with PPA at 72, and began providing longitudinal data for our research team at age 76. BYR’s initial symptoms in both languages, as assessed by the Boston Diagnostic Aphasia Examination, were largely consistent: word-finding difficulties, false starts, and occasional omission of grammatical morphemes, but fairly rich <b>syntax.</b> <b>Procedures</b> Seven Cookie Theft picture narratives, gathered in both languages over the course of 27 months, were analyzed using the LCM-SS. Results LCM-SS counts and indices were plotted to reflect change over time and individual trend lines were created. Data for each measure were correlated with corresponding trend lines; those with R-values of 0. 50 or greater were considered indicative of reliable trends. Slopes were used to determine the direction of change, if any (Table 1). Discussion The overall pattern of preservation and deterioration was generally consistent across both languages. Some differences in index changes were related to language-specific difference between English and Shanghainese. A post-hoc analysis of the morphosyntactic errors indicated that apart from the misuse/missing of functors in both languages, an additional source of Shanghainese errors was morpheme omission in Chinese compounds. (Note that the morphosyntactic errors in both languages did not differ across time in terms of absolute numbers). The fact that BYR used Shanghainese much less than English for many years could explain some of the greater difficulty she experienced with word finding related measures (such as increased values on Index of Lexical Efficiency and decreased total content units) as compared to English. Other differences are explained by the fact that Shanghainese words generally consist of one or two morphemes; each morpheme is a monosyllable with very simple structure. The decline in the Index of Grammatical Support in Shanghainese, but not in English can thus be explained by considering that word-onset difficulties in Shanghainese manifested as repetition of the entire initial syllable (morpheme), while in English, they took the form of phonological repetition, i. e. multiple false starts. This reminds us that the structure of a language at all levels must be considered when classifying and comparing errors across languages...|$|R

