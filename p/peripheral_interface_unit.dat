0|1159|Public
50|$|Other {{comparable}} I/O {{chips are}} the 2655 Programmable <b>Peripheral</b> <b>Interface</b> from the Signetics 2650 family, the Motorola 6820 PIA (<b>Peripheral</b> <b>Interface</b> Adapter) from the Motorola 6800 {{family and the}} Western Design Center WDC 65C21.|$|R
40|$|In this thesis, an {{approach}} is {{proposed for the}} design and implementation of a serial <b>peripheral</b> <b>interface</b> using Complex Programmable Logic Devices, (CPLD 2 ̆ 7 s). The focus {{of this research was}} to develop an effective Serial <b>Peripheral</b> <b>Interface.</b> The Serial <b>Peripheral</b> <b>Interface,</b> (SPI), created by Motorola is also known as Microwire, which is a trademark of National Semiconductor. The SPI is a full-duplex, synchronous, serial data link that enables communication between a host processor and peripherals. The Serial <b>peripheral</b> <b>interface</b> can be programmed in software or built strictly in hardware inside a microcontroller. However, Complex programmable logic devices offer a quicker and more customizable solution. This research investigated the Serial <b>peripheral</b> <b>interface</b> with respect to its implementation in a CPLD {{and the use of the}} Very High Speed Integrated Circuit Hardware Description language, (VHDL) ...|$|R
5000|$|... #Caption: [...] Motorola MC6820 and MC6821 <b>Peripheral</b> <b>Interface</b> Adapters ...|$|R
5000|$|... #Subtitle level 3: Intel Enhanced Serial <b>Peripheral</b> <b>Interface</b> Bus ...|$|R
5000|$|... #Caption: A {{timing diagram}} for the Serial <b>Peripheral</b> <b>Interface</b> Bus ...|$|R
5000|$|Two <b>Peripheral</b> <b>Interface</b> Adapters (PIA), either MC6821 or MC6822 chips ...|$|R
5000|$|It {{has many}} of the {{required}} <b>peripheral</b> <b>interfaces</b> support such as: ...|$|R
40|$|Abstract: System level {{verification}} with scalable and reusable components {{provides a}} solution {{and to develop}} a complete environment with constrained random testing functional, coverage and assertions. This paper details the design and implementation of SoC’s UART-SPI Interface. The UART-SPI interface provides usage for the universal asynchronous receiver/transmitter (UART) to serial <b>peripheral</b> <b>interface</b> (SPI). The SPI bus is assort synchronized serial <b>peripheral</b> <b>interface,</b> it causes MCU to carry on the communication with each kind of peripheral by the serial mode to exchange the information [...] This paper introduces the procedure of delivering the information from CC 2430 with wireless transceiver function interface to the C 8051 F 120 by serial <b>peripherals</b> <b>interface...</b>|$|R
5000|$|IEEE 1284-1994: Standard Signaling Method for a Bi-directional Parallel <b>Peripheral</b> <b>Interface</b> for Personal Computers ...|$|R
5000|$|Some Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI) IC {{products}} {{are designed with}} daisy chain capability.|$|R
5000|$|Intel 8255: {{programmable}} <b>peripheral</b> <b>interface,</b> 3x 8-bit I/O pins {{used for}} printer connection etc.|$|R
50|$|One {{bus that}} uses the chip/slave select is the Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI bus).|$|R
5000|$|... other serial {{communications}} interfaces like I²C, Serial <b>Peripheral</b> <b>Interface</b> and Controller Area Network for system interconnect ...|$|R
50|$|A <b>Peripheral</b> <b>Interface</b> Adapter (PIA) is a {{peripheral}} integrated circuit providing parallel I/O interfacing for microprocessor systems.|$|R
40|$|The {{objective}} of this project is to design SPI Master Core using Verilog and verify the code using system verilog. Serial <b>Peripheral</b> <b>Interface</b> (SPI) is an interface that facilitates the transfer of synchronous serial data. SPI (Serial <b>Peripheral</b> <b>Interface)</b> is a synchronous serial data link that operates in full duplex mode. It communicates in master/slave mode where the master device initiates the data frame. Multiple slave devices are allowed with individual slave select line. Serial <b>Peripheral</b> <b>Interface</b> of symmetrical structure can be synthesized using Xilinx 12. 3, and then can be simulated using Questa 10. 0 b. It is a popular interface used for connecting peripherals {{to each other and}} to microprocessors. The verification of the project is done using system verilog...|$|R
50|$|Intelligent <b>Peripheral</b> <b>Interface</b> (IPI) was a server-centric storage {{interface}} {{used in the}} 1980s {{and early}} 1990s with an ISO-9318 standard.|$|R
5000|$|Supports common {{embedded}} peripherals and interconnects, including flash memory, EEPROM, GPIO, I²C, Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI), serial port, USB ...|$|R
50|$|Most {{models have}} a queued serial module (QSM) which {{provides}} both synchronous Serial <b>Peripheral</b> <b>Interface</b> (SPI), and logic-level RS232 UART capabilities.|$|R
5000|$|Communication {{interfaces}} with {{serial communication}} controllers (SCC), serial management controllers (SMC), Universal Serial Bus, I²C and Serial <b>Peripheral</b> <b>Interface</b> Bus attachment, ...|$|R
5000|$|Subscriber Data <b>Peripheral</b> <b>Interface</b> - {{standard}} specifies {{the port}} through which mobiles and portables can connect to laptops or data networks ...|$|R
5000|$|Keyboard: 66 keys. The {{keyboard}} matrix {{is attached}} via programmable <b>peripheral</b> <b>interface</b> chip KR580VV55 (Intel 8255 clone) and scanned by CPU.|$|R
50|$|The {{complexity}} {{range for}} SBCs starts with rather simple hardwired devices to configurable state-machine controlled devices, e.g. through a serial <b>peripheral</b> <b>interface.</b>|$|R
50|$|Modern {{embedded}} systems are {{often based on}} microcontrollers (i.e. CPU's with integrated memory or <b>peripheral</b> <b>interfaces),</b> but ordinary microprocessors (using external chips for memory and <b>peripheral</b> <b>interface</b> circuits) are also common, especially in more-complex systems. In either case, the processor(s) used may be types ranging from general purpose to those specialised in certain class of computations, or even custom designed for the application at hand. A common standard class of dedicated processors is the digital signal processor (DSP).|$|R
50|$|This {{system-on-a-chip}} {{includes an}} integrated memory controller, interfaces such as Universal Serial Bus (USB), {{liquid crystal display}} (LCD) and Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI).|$|R
50|$|A {{sound card}} became available, {{built around the}} General Instrument AY-3-8910, which {{together}} with a <b>peripheral</b> <b>interface</b> Adaptor (PIA) chip - 6521, gave the UK101 VOICE.|$|R
40|$|Abstract:- In {{previous}} research, we use {{the corresponding}} technologies of micro-computer <b>peripheral</b> <b>interface</b> control to design the Intelligent Anti-Disaster Security System (IADSS) [1]. While the disaster occurs, the proposed IADSS will execute the security protection. In the original IADSS, there don’t {{have the ability to}} do some necessary facilitation while earthquake occurs. Furthermore, there don’t have the Remote Monitoring System. In this paper, we combine the newly “NT&SD Transducer ” [2], the <b>peripheral</b> <b>interface</b> control and some Network Transferring Techniques to enhance the function of the IADSS...|$|R
50|$|The W65C21S {{is a very}} {{flexible}} <b>Peripheral</b> <b>Interface</b> Adapter (PIA) for use with WDC’s 65xx and other 8-bit microprocessor families. It is produced by Western Design Center (WDC).|$|R
40|$|We {{investigate}} {{the suitability of}} hardware multithreading for real-time event handling in combination with a Java microcontroller. Our aim is to design all hardware components such that the program execution time can be statically calculated in a cycle-accurate manner. In the field of microcontrollers {{it is important to}} incorporate <b>peripheral</b> <b>interfaces</b> into the processor die. We explored the special requirements and problems of connecting <b>peripheral</b> <b>interfaces</b> to a multithreaded processor core that simultaneously executes more than one thread in the processor pipeline. We present different solutions of the connection problem and discuss pros and cons with respect to real-time applications...|$|R
30|$|The new sensor can be {{configured}} at {{high speed}} via {{the use of a}} Serial <b>Peripheral</b> <b>Interface</b> (SPI) bus, which is accessible even during standby mode. Thus real-time and frozen-clock configuration remains possible.|$|R
5000|$|A {{mechanical}} {{specialty of}} ESM modules {{is that their}} connectors are compatible with the PCI-104 module standard. These modules can be [...] "stacked" [...] onto ESM modules, e. g., for additional <b>peripheral</b> <b>interfaces.</b>|$|R
40|$|<b>Interface</b> <b>units</b> transmit, receive, {{and perform}} "handshaking" functions. Two {{computers}} communicate over distance up to 6700 meters at average transmission speeds around 200 kilobaud {{with help of}} pair of programable <b>interface</b> <b>units.</b> <b>Interfaces</b> use form of pulse modulation and are programed for full "handshaking" capabilities...|$|R
25|$|SPI bus mode: Serial <b>Peripheral</b> <b>Interface</b> Bus is {{primarily}} used by embedded microcontrollers. This bus type supports only a 3.3-volt interface. This {{is the only}} bus type that {{does not require a}} host license.|$|R
5000|$|Hardware {{abstraction}} layer {{with support}} for CPU time, analog-to-digital converter (ADC), digital-to-analog converter (DAC), general-purpose input/output (GPIO), Inter-Integrated Circuit (I²C), pulse-width modulation (PWM), serial port, Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI), universal asynchronous receiver/transmitter (UART).|$|R
5000|$|SPI bus mode: Serial <b>Peripheral</b> <b>Interface</b> Bus is {{primarily}} used by embedded microcontrollers. This bus type supports only a 3.3-volt interface. This {{is the only}} bus type that {{does not require a}} host license.|$|R
50|$|A Synchronous Serial Port (SSP) is a {{controller}} {{that supports}} the Serial <b>Peripheral</b> <b>Interface</b> (SPI), 4-wire Synchronous Serial Interface (SSI), and Microwire serial buses. A SSP uses a master-slave paradigm to communicate across its connected bus.|$|R
50|$|The {{universal}} synchronous/asychrnous receive/transmit (USART) <b>peripheral</b> <b>interface</b> supports asynchronous RS-232 and synchronous SPI {{communication with}} one hardware module. The MSP430F15x/16x USART modules also support I²C, programmable baud rate, and independent interrupt capability for receive and transmit.|$|R
