31|192|Public
6000|$|... "I {{wonder why}} Andrew loaded himself {{up with that}} heavy ruck-sack {{on a day like}} this?" [...] he said. [...] "I suppose there's a pair of marine glasses and a chart, and a <b>parallel</b> <b>rule</b> and compass, inside of it. Andrew thinks he'd get lost if he didn't carry the lot about when he risks himself ashore." ...|$|E
5000|$|... #Caption: [...] Drawing {{board with}} a <b>parallel</b> <b>rule,</b> a {{precursor}} to drafting machines.|$|E
50|$|A second {{hypothesis}} of Soar’s {{theory is that}} although only a single operator can be selected at each step, forcing a serial bottleneck, the processes of selection and application are implemented through <b>parallel</b> <b>rule</b> firings, which provide context-dependent retrieval of procedural knowledge.|$|E
40|$|In this paper, the <b>parallel</b> <b>ruled</b> {{surfaces}} with Darboux frame {{are introduced}} in Euclidean 3 -space. Then some characteristic properties such as developability, striction point and distribution parameter of the <b>parallel</b> <b>ruled</b> surfaces with Darboux frame {{are given in}} Euclidean 3 -space. Then we obtain Steiner rotation vector {{of this kind of}} surfaces Euclidean 3 -space. By using this rotation vector, we compute pitch length and pitch angle of the <b>parallel</b> <b>ruled</b> surfaces with Darboux frame...|$|R
40|$|In this study, the spacelike <b>parallel</b> <b>ruled</b> {{surfaces}} with Darboux frame {{are introduced}} in Minkowski 3 -space. Then some characteristic {{properties of the}} spacelike <b>parallel</b> <b>ruled</b> surfaces with Darboux frame such as developability, the striction point and the distribution parameter are obtained in Minkowski 3 -space...|$|R
50|$|<b>Parallel</b> <b>rules</b> {{used for}} {{transferring}} {{a line to}} a parallel position. Also {{used to compare the}} orientation of a line to a magnetic or geographic orientation on a compass rose.|$|R
5000|$|Historically {{there were}} two classes of proper Old Japanese adjectives, [...] (-ku) and [...] (-shiku) ("-ku adjective" [...] means [...] "not preceded by shi"). This {{distinction}} collapsed during the evolution of Late Middle Japanese adjectives, and both are now considered [...] (-i) adjectives. The sound change for -shii adjectives follows the same rule as for other -ii adjectives, notably that the preceding vowel also changes and the preceding mora undergoes palatalization, yielding [...] (-shiku) → [...] (-shū), though historically this was considered a separate but <b>parallel</b> <b>rule.</b>|$|E
50|$|Chakkiparamban Variyankunnathu Kunjahammed Haji (died 22 January 1922) Malabar Rebellion In the Indian subcontinent between 1857 and 1947. He stealthily {{raised an}} army of 75,000 strong natives, seized control of a large area from the British rule {{and set up a}} {{parallel}} government in Malabar, now part of the Kerala State, Republic of India, with his long term mentor, friend and a popular teacher and religious scholar Ali Musliyar. It was the only single instance where the British had to concede an area as large as 5200 square kilometers to a <b>parallel</b> <b>rule</b> for about five months.|$|E
5000|$|To {{calculate}} on a portolan {{chart the}} course to follow from a point of origin {{to a point of}} destination, one may transfer [...] - [...] using a <b>parallel</b> <b>rule</b> [...] - [...] the line drawn from the point of origin to the point of destination, on top of the Compass rose closest to the ship's position, obtaining on it the theoretical course to be followed when sailing towards the destination. This theoretical course may have to be modified (as many times as needed) when tacking if the wind is right ahead of you, or to correct the effects of leeway, currents, etc... that a sailor with experience should be able to calculate empirically.|$|E
5000|$|... #Caption: A modern {{drafting}} {{table with}} a <b>parallel</b> motion <b>rule</b> ...|$|R
40|$|Abstract. In this paper, spacelike <b>parallel</b> pi-equidistant <b>ruled</b> {{surfaces}} in 3 -dimensional Minkowski space R 3 1,[1] are generalized to n-dimensional Minkowski space R n 1. Then some characteristic results related with algebraic invariants of shape operator of the (m+ 1) -dimensional spacelike <b>parallel</b> pi-equidistant <b>ruled</b> surfaces {{are given in}} the Minkowski space R n 1...|$|R
40|$|AbstractIn this paper, {{we first}} gave the <b>parallel</b> timelike <b>ruled</b> {{surface with a}} timelike ruling and its {{geometric}} invariants {{in terms of the}} main surface. We then obtained the integral invariants which are the pitch and the dual angle of pitch of the <b>parallel</b> timelike <b>ruled</b> surface with a timelike ruling and also the relations among them and integral invariants of the main surface...|$|R
40|$|AbstractThe {{problem of}} {{composing}} assumption-commitment specifications arises in the hierarchical development of reactive or concurrent systems. Abadi and Lamport's composition principle {{has been proposed}} as a logic-independent solution to that problem. In this paper, we apply it to derive a <b>parallel</b> <b>rule</b> for UNITY-like assumption-commitment specifications. For that purpose, we first interpret UNITY formulas in Abadi and Lamport's compositional model. Then, the premises of the <b>parallel</b> <b>rule</b> are reduced to proof obligations that can be carried with rules inherited from the UNITY logic. The approach is illustrated by an example...|$|E
40|$|Although {{the problem}} of {{increasing}} the speed of rule-based programs has been studied for a long while, so far the level of parallelism achieved under various parallel processing schemes fails to meet expectations of high performance gains. Most of the work has focused on manipulating existing rule programs to accommodate parallel architectures. However, without changing the inherently sequential algorithms encoded in rule form and without using intrinsic <b>parallel</b> <b>rule</b> languages to exploit parallelism, speedup is severely limited. In this paper we demonstrate that to maximize parallelism, manipulations must {{take place at the}} algorithmic level in addition to the program level. However, traditional rule languages are not equipped to easily express parallel algorithms. Thus, an inherently <b>parallel</b> <b>rule</b> language must be devised to enable maximum parallelism. We present our initial specification of such a language, named PARULEL. Preliminary performance results are detailed for one test case [...] ...|$|E
40|$|Abstract—This paper {{presents}} enhancements {{to previous}} algorithms for the sequential extraction of complete non-redundant {{set of rules}} from a concept lattice. The aim of these enhancements {{is to improve the}} flexibility of the algorithms by decoupling the process of rule extraction that uses the concept lattice from the process of rule reduction that does not have to use it. With the added flexibility, an approach for <b>parallel</b> <b>rule</b> extraction and rule reduction is also presented. I...|$|E
50|$|Various {{types of}} {{drafting}} machine may {{be attached to}} the board surface to assist the draftsperson or artist. <b>Parallel</b> <b>rules</b> often span the entire width of the board and are so named because they remain parallel to the top edge of the board as they are moved up and down. Drafting machines use pre-calibrated scales and built in protractors to allow accurate drawing measurement.|$|R
5000|$|The <b>parallel</b> axes <b>rule</b> {{also applies}} to the {{second moment of area}} (area moment of inertia) for a plane region D: ...|$|R
40|$|The paper {{considers}} {{the problem of}} completing a set of <b>parallel</b> if-then <b>rules</b> that provides a partial description of how a conclusion variable depends on the values of condition variables, where each variable takes its value among a finite ordered set of labels. The proposed approach {{does not require the}} use of fuzzy sets for the interpretation of these labels or for defining similarity measures, but rather relies on the extrapolation of missing rules {{on the basis of a}}nalogical proportions that hold for each variable between the labels of several <b>parallel</b> <b>rules.</b> The analogical proportions are evaluated for binary and multiple-valued variables on the basis of a logical expression involving Lukasiewicz implication. The underlying assumption is that the mapping partially specified by the given rules is as regular as suggested by these rules. A comparative discussion with other approaches is presented...|$|R
40|$|Abs&oct [...] To {{improve the}} {{performance}} of forward chaining production systems, a new parallel execution model is proposed, where multiple production rules are Bred in parallel in each production cycle. This paper provides solutions for three major problems in <b>parallel</b> <b>rule</b> firing. The interference analysis, which detects cases where a parallel firing result {{is different from the}} result of any sequential Bring. Based on a data dependency graph of production systems, we propose general techniques applicable to both compile- and run-time interference analyses. The pamlleljring algorithms, which achieve the parallel firing on multiple processor architectures. An efficient selection algorithm is provided to select multiple rules to be tired in parallel by combining the compileand run-time interference analysis techniques. The parallel programming environment, which provides language facilities to enable programmers to make full use of potential parallelism without considering the internal parallel mechanisms. A parallel firing simulator is also implemented to estimate the effectiveness of parallel firings of production system programs. We have evaluated the effectiveness of <b>parallel</b> <b>rule</b> firings on several production system applications. Results show that the degree of concurrency can be increased by a factor of 2 - 9. The sources of parallelism are investigated based on the evaluation results...|$|E
40|$|Morphological {{analysis}} {{of a wide range}} of languages can be implemented efficiently using finite-state transducer technologies. Over the last 30 years, a number of attempts have been made to create tools for computational morphologies. The two main competing approaches have been parallel vs. cascaded rule application. The <b>parallel</b> <b>rule</b> application was originally introduced by Koskenniemi [1983] and implemented in tools like TwolC and LexC. Currently many applications of morphologies could use dictionaries encoding the a priori likelihoods of words and expressions as well as the likelihood of relations to other representations or languages. We have made the choice to create open-source tools and language descriptions in order to let as many as possible participate in the effort. The current article presents some of the main tools that we have created such as HFST-LexC, HFST-TwolC and HFST-Compose-Intersect. We evaluate their efficiency in comparison to some similar tools and libraries. In particular, we evaluate them using several full-fledged morphological descriptions. Our tools compare well with similar open source tools, even if we still have some challenges ahead before we can catch up with the commercial tools. We demonstrate that for various reasons a <b>parallel</b> <b>rule</b> approach still seems to be more efficient than a cascaded rule approach when developing finite-state morphologies. ...|$|E
3000|$|Two direct derivations G [...] _r H_ 1 and G [...] _r' H_ 2 {{of rules}} r and r' are (parallel) {{independent}} if the corresponding matches intersect only in gluing items. Due to the parallelization theorem in [13], {{we can use}} the following fact: A <b>parallel</b> <b>rule</b> p=∑ _i= 1 ^n r_i can be applied to G if the rules r_i for i= 1,..., n can be applied to G and the matches are pairwise independent. This allows the use of massive parallelism in the context of graph transformation based on local matches of component rules which are much easier to find than matches of parallel rules.|$|E
40|$|This paper investigates some {{semantic}} {{properties of}} concurrentlogiclanguages. Concurrentlogiclanguages with a commit operator differ from pure logiclanguages in the finitefailure set. Since the new finitefailure set {{depends on the}} computation rule, we define an operational semantics based on a <b>parallel</b> computation <b>rule</b> and a fair search rule. Failures with a <b>parallel</b> computation <b>rule</b> are shown to be strongly related to partial computed answer substitutions. The set of partial computed answer substitutions and the set of finitefailures are defined as the least fixpoint of a transformation on pairs of interpretations...|$|R
2500|$|There {{were also}} <b>parallel</b> <b>rules</b> of precedence, {{primarily}} seniority based on age, on offices held, and {{on when they}} each obtained their titles, which made the rules for precedence rather complex. Combined with the ambiguous position of titled heirs {{of members of the}} Mekwanint, Emperor Haile Selassie, as part of his program of modernising reforms, and in line with his aims of centralising power away from the Mesafint replaced the traditional system of precedence with a simplified, Western-inspired system that gave precedence by rank, and then by seniority based when the title had been assumed [...] irrespective of how the title was acquired.|$|R
40|$|AbstractThis paper investigates some {{semantic}} {{properties of}} concurrent logic languages. Concurrent logic languages with a commit operator differ from pure logic languages in the finite failure set. Since the new finite failure set {{depends on the}} computation rule, we define an operational semantics based on a <b>parallel</b> computation <b>rule</b> and a fair search rule. Failures with a <b>parallel</b> computation <b>rule</b> are shown to be strongly related to partial computed answer substitutions. The set of partial computed answer substitutions and the set of finite failures are defined as the least fixpoint of a transformation on pairs of interpretations...|$|R
30|$|We {{propose a}} new serial {{topology}} reconstruction method, where decisions are transmitted from sensors with lower credibility to sensors with higher credibility. Assuming the transmission channels were ideal, we applied a BSF {{rate of the}} sensor into the parallel structure and proposed ELRT in [19]. In this paper, we solve the problem when there are failed sensors in the serial structure and propose the corresponding fusion rule over noisy channels which we call serial rule (SR). In order to demonstrate the more stable detection performance of the serial structure, we also extend ELRT to noisy channels and derive the corresponding fusion rule in the same scenario which we call <b>parallel</b> <b>rule</b> (PR).|$|E
40|$|We {{propose a}} scheme for rule {{amalgamation}} based on nested graph predicates. Essentially, we extend all the graphs {{in such a}} predicate with right hand sides. Whenever such an enriched nested predicate matches (i. e., is satisfied by) a given host graph, this results in many individual match morphisms, and thus many “small��? rule applications. The total effect is described by the amalgamated rule. This makes for a smooth, uniform and very powerful amalgamation scheme, which we demonstrate {{on a number of}} examples. Among the examples is the following, which we believe to be inexpressible in very few other <b>parallel</b> <b>rule</b> formalism proposed in the literature: repot all flowering geraniums whose pots have cracked...|$|E
40|$|Thesis (M. S.) [...] Wichita State University, College of Liberal Arts and Sciences, Dept. of Computer ScienceSchütz is a programmer's editor {{designed}} by Dr. Rodney Bates. Through its language definition language, users may adapt Schütz to any programming language. Describing {{a programming language}} in the language definition language involves writing largely <b>parallel</b> <b>rule</b> sets in three different syntaxes—the concrete syntax, the abstract syntax, and the format syntax. In this thesis, we present a method for mechanically generating the concrete syntax rule set, given the rule sets {{of the other two}} syntaxes; we also prove that the concrete syntax rule sets thus generated are correct and unambiguous, given the same traits in the rule sets of the other two syntaxes...|$|E
5000|$|There {{were also}} <b>parallel</b> <b>rules</b> of precedence, {{primarily}} seniority based on age, on offices held, and {{on when they}} each obtained their titles, which made the rules for precedence rather complex. Combined with the ambiguous position of titled heirs {{of members of the}} Mekwanint, Emperor Haile Selassie, as part of his program of modernising reforms, and in line with his aims of centralising power away from the Mesafint replaced the traditional system of precedence with a simplified, Western-inspired system that gave precedence by rank, and then by seniority based when the title had been assumed [...] irrespective of how the title was acquired.|$|R
50|$|In a <b>parallel</b> universe, <b>ruled</b> by Judge Dread (an insane {{version of}} Judge Dredd), Mean Machine {{is one of}} Dread's lieutenants and has a fifth setting - Book a Plot in the Cemetery.|$|R
40|$|Dillen and Kühnel {{worked on}} ruledWeingarten {{surfaces}} in Minkowski 3 -space [4]. In this study, it is shown that <b>parallel</b> surfaces of <b>ruled</b> sur-faces with null ruling are also Weingarten surfaces. Also the relation Hr 2 = Kr between Kr and Hr Gaussian and mean curvatures of par-allel surface has been obtained for any <b>parallel</b> surface of <b>ruled</b> surface with null ruling...|$|R
40|$|The <b>parallel</b> <b>rule</b> {{activation}} {{and rule}} synthesis (PRAS) {{model is a}} computational model for generalisation in category learning, proposed by Vandierendonck (1995). An important concept underlying the PRAS model is the distinction between primary and secondary generalisation. In Vandierendonck (1995), an empirical study is reported that provides support for the concept of secondary generalisation. In this paper, we re-analyse the data reported by Vandierendonck (1995) by fitting three different variants of the Generalised Context Model (GCM) which do not rely on secondary generalisation. Although some of the GCM variants outperformed the PRAS model in terms of global fit, they all have difficulty in providing a qualitatively good fit of a specific critical pattern. </span...|$|E
30|$|Given {{the rules}} r_i=(N_i, L_i, K_i, R_i) for i = 1,...,n, the <b>parallel</b> <b>rule</b> p = (L,K,R) {{is given by}} the {{disjoint}} unions of the components, i.e., L= _i= 1 ^n L_i, K= _i= 1 ^n K_i, R= _i= 1 ^n R_i. If g_i:L_i→ G for i= 1,...,n are some graph morphisms from L_i in some graph G, then this induces a graph morphism g:L→ G defined, for all i= 1,...,n, by g_V(v)=g_i,V(v) for all v∈ V_L_i and g_E(e)=g_i,E(e) for all e∈ E_L_i. Therefore, matches of parallel rules are composed of matches of their component rules. As we use parallel rules only in this way, {{there is no need}} to carry the negative application conditions over to the level of parallel rules. Negative application conditions are only checked for component rules.|$|E
40|$|A {{crucial feature}} of {{evolving}} natural systems is parallelism. The simultaneous and distributed application of rules (governed by e. g. biochemistry) {{is generally considered}} as the preposition to build up complex structures. In this article, the potential of agent-based modelling equipped with a concurrent rewriting rule system for artificial evolution is investigated. The task given to the system (pattern construction drawing from a small pool of symbols) is sequential in character, but has to be solved by a strictly <b>parallel</b> <b>rule</b> system. This requires special care in setting up the environment, {{and it turns out}} that this is accomplished only by virtue of a hierarchy of levels and modularisation. The proposed three level hierarchy resembles stages of natural evolution in which the emergence of stabilizing mechanisms and cooperative behaviour can be studied. A few preliminary simlation runs are shown and discussed. ...|$|E
50|$|Y and Δ are {{important}} topologies in linear network analysis due to these being the simplest possible three-terminal networks. A Y-Δ transform {{is available for}} linear circuits. This transform is important {{because there are some}} networks that cannot be analysed in terms of series and parallel combinations. An example of this is the network of figure 1.6, consisting of a Y network connected in parallel with a Δ network. Say it is desired to calculate the impedance between two nodes of the network. In many networks this can be done by successive applications of the rules for combination of series or parallel impedances. This is not, however, possible in this case where the Y-Δ transform is needed in addition to the series and <b>parallel</b> <b>rules.</b>|$|R
50|$|Notice the maximally <b>parallel</b> {{behaviour}} of <b>rule</b> application {{leading to}} the same rule being applied twice during one step.|$|R
50|$|The Girl Who Never Was: Conceited Tina Williams learns a humility lesson {{when she}} is cast into a <b>parallel</b> world <b>ruled</b> by magic. Then {{disaster}} strikes when Tina unwittingly casts a forbidden spell. She must return to her own world, or face a sentence of eternity as a statue.|$|R
