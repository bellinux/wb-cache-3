17|101|Public
5000|$|An {{arc flash}} {{is a type}} of {{electrical}} explosion that results from a low impedance connection to ground or another voltage phase in an electrical system. By permitting the automatic racking of the circuit breaker from a remote location, the remote racking systems move service personnel outside the arc flash <b>protection</b> <b>boundary,</b> thus reducing the need for a full-body arc flash hazard suit.|$|E
5000|$|The Mill {{also uses}} the {{metadata}} to assist speculative execution and pipelining. For example, if a vector load operation fails, e.g., {{part of it}} leaves a <b>protection</b> <b>boundary,</b> those parts of that belt entry will be marked as [...] (NaR) in the metadata. This allows speculatively-executed vector code to emulate per-vector-item fault behavior. The NaR items create a fault only if an attempt occurs to store them or perform other non-speculative code on them. If they are never used, no fault is ever created.|$|E
5000|$|The {{radiant energy}} {{released}} by an electric arc {{is capable of}} permanently injuring or killing a human being at distances of up to 20 ft. The distance from an arc flash source within which an unprotected person has a 50% chance of receiving a second degree burn {{is referred to as}} the [...] "flash protection boundary". The incident energy of 1.2 cal/cm^2 on a bare skin was selected in solving the equation for the arc flash boundary in IEEE 1584. The IEEE 1584 arc flash boundary equations can also be used to calculate the arc flash boundaries with boundary energy other than 1.2 cal/cm^2 such as onset to 2nd degree burn energy. Those conducting flash hazard analyses must consider this boundary, and then must determine what PPE should be worn within the flash <b>protection</b> <b>boundary.</b> Remote operators or robots can be used to perform activities that have a high risk for arc flash incidents, such as inserting draw-out circuit breakers on a live electrical bus. Remote racking systems are available which keep the operator outside the arc flash hazard zone.|$|E
5000|$|In {{a library}} {{operating}} system, <b>protection</b> <b>boundaries</b> are {{pushed to the}} lowest hardware layers, resulting in: ...|$|R
40|$|The {{scalability}} {{and performance}} of parallel applications on distributed-memory multiprocessors depends {{to a great extent}} on the performance of communication. Although the communication hardware on distributed-memory multiprocessors can transfer data quickly, applications often fail to achieve communication performance matching the hardware's capacity. Two key impediments to achieving high performance communication are flow control and <b>protection</b> <b>boundaries.</b> This paper proposes and evaluates two techniques to reduce the cost of flow control and the cost of crossing <b>protection</b> <b>boundaries.</b> First, to optimize the common case, processors may send messages optimistically without ensuring that the destination processor of the message has enough buffer space to receive the message. Second, to avoid crossing <b>protection</b> <b>boundaries</b> through expensive traps and software interrupts, the kernel and the user-level address space may cooperate and communicate asynchronously through shared data structure [...] ...|$|R
40|$|Protection is the {{mechanism}} employed by operating systems to control access to resources. Object encapsulation in object-based systems requires {{control of access}} to every object. The incremental definition of objects through inheritance and type hierarchies is {{an important aspect of}} object-oriented systems. This dissertation examines the relationship between protection and object-oriented hierarchies. Splitting object-oriented hierarchies across <b>protection</b> <b>boundaries</b> is particularly attractive for the purposes of providing a uniform programming model to objectoriented applications and for implementing a minimal object-oriented kernel. After surveying current research and providing a background for discussion, this dissertation presents a detailed analysis of the issues relating to splitting object-oriented hierarchies across <b>protection</b> <b>boundaries.</b> The analysis is independent of language, operating system, and protection model. The analysis reveals the precautions that must be taken to guard against protection violations. The analysis also shows that in the general case an object must be able to be split across the <b>protection</b> <b>boundaries,</b> and that the child portion of the object should delegate or forward unrecognized method calls to the parent portion of the object {{on the other side of}} the boundary. A practica...|$|R
40|$|Arc Flash <b>Protection</b> <b>boundary</b> {{calculations}} {{have become}} easier to perform with {{the availability of}} personal computer software. These programs incorporate arc flash <b>protection</b> <b>boundary</b> formulas for different voltage and current levels, calculate the bolted fault current at each bus, and use built in time-current coordination curves to determine the clearing time of protective devices in the system. Results of the arc flash <b>protection</b> <b>boundary</b> calculations can be presented in several different forms [...] as an annotation to the one-line diagram, as a table of arc flash <b>protection</b> <b>boundary</b> distances, and as printed placards to {{be attached to the}} appropriate equipment. Basic arc flash <b>protection</b> <b>boundary</b> principles are presented in this paper along with several helpful suggestions for performing arc flash <b>protection</b> <b>boundary</b> calculations...|$|E
40|$|In today’s multicomputers, {{software}} overhead {{dominates the}} message-passing latency cost. We designed two multicomputer network interfaces that signif~cantiy reduce this overhead. Both support vMual-memory-mapped communication, allowing user processes to communicate without expensive buffer management and without making system calls across the <b>protection</b> <b>boundary</b> separating user processes from {{the operating system}} kerneL Here we compare the two interfaces and discuss the performance trade-offs between them...|$|E
30|$|Boundary Unit: the <b>protection</b> <b>boundary</b> is {{composed}} of the line trap and the equivalent grounding capacitance of busbar. The magnitude of the high frequency signal for an internal fault is significantly {{higher than that of}} an external one (for an external fault, the high frequency signal has difficulty passing through the boundary). Utilizing the magnitude ratio of the high to low frequencies of the reverse voltage or current traveling waves, the internal and external fault can be distinguished.|$|E
50|$|Key {{principles}} covered are shock <b>protection</b> <b>boundaries,</b> {{arc flash}} energies, Lockout-Tagout, PPE (Personal Protective Equipment). While the various OSHA, ASTM, IEEE and NEC standard provide guidelines for performance, NFPA 70E addresses practices and {{is widely considered}} as the de facto standard for Electrical Safety in the Workplace.|$|R
40|$|Thorough {{defense against}} DoS attacks is {{extremely}} dif-cult without incurring signicant {{changes to the}} Internet architecture. We present a series of changes aimed at es-tablishing <b>protection</b> <b>boundaries</b> to reduce the effective-ness of most ooding DoS attacks against servers. Only minimal and local changes are required to current net-work architectures. We show that our scheme is highly benecial even if deployed at a single ISP, with addi-tional benets arising from multiple-ISP deployment. Finally, we show that the changes can be implemented with off-the-shelf components. ...|$|R
40|$|PENGUIN is a grammar-based {{language}} for programming graphical user interfaces. Code for each thread {{of control in}} a multi-threaded application is confined to its own module, promoting modularity and reuse of code. Networks of PENGUIN components (each composed of an arbitrary number of modules) {{can be used to}} construct large reactive systems with parallel execution, internal <b>protection</b> <b>boundaries,</b> and plug-compatible communication interfaces. We argue that the PENGUIN building-block approach constitutes a more appropriate framework for user interface programming than the traditional Seeheim Model. We discuss the design of PENGUIN and relate our experiences with applications. ...|$|R
40|$|The {{qualitative}} {{protection of}} the groundwater reservoirs that {{play a role in}} supplying drinking water of wells is one of the responsibilities and concerns of the people in charge of supplying and distributing drinking water such as water authority organizations and water and wastewater companies, nowadays. In summary, sanitary boundaries of a well are the same as surface or subsurface areas around the well that supply well water during pumping. Contaminants can move and reach the water inside the well from this region. Minimum Safety Distance (MSD) is defined as local conditions, the most important which are the geological and hydrological conditions, the quality of wastewater disposal in human communities and the number of sources of contamination present in the region. MSD is dependent on aquifers, soil layers, soil permeability, groundwater flow direction and velocity, concentration of pollutants, etc. Thus the specification of MSD that can be applied globally is very difficult for different areas. Sanitary boundaries include contamination-exposed boundary (R 1), mandatory <b>protection</b> <b>boundary</b> (R 2) and <b>protection</b> <b>boundary</b> (R 3). In order to do this, the optimum and accurate calculation of boundaries using the scientific principles are of great importance because the calculation and application of the smaller boundary increases the risk of pollution and the application of the more extended boundary leads to the loss of budget. With regard to the importance of water supplies as one of the causes of development and their exploitation for different operations and with attention to our country’s climatic characteristics that is considered as one of the arid and semi-arid regions of the world, serious investigations and researches in this field are necessar...|$|E
40|$|In {{existing}} multicomputers, software overhead {{dominates the}} messagepassing latency cost. Our {{research on the}} SHRIMP project at Princeton indicates that appropriate network interface support can significantly reduce this software overhead. We have designed two network interfaces for the SHRIMP multicomputer. Both support virtual memory mapped communication allowing user processes to communicate without doing expensive buffer management, and without using system calls to cross the <b>protection</b> <b>boundary</b> separating user processes from the operating system kernel. This paper describes and compares the two network interfaces, and discusses performance tradeoffs between them. 1 Introduction The SHRIMP (Scalable High-performance Really Inexpensive MultiProcessor) project at Princeton studies how to provide high-performance communication mechanisms in order to integrate commodity desktop computers such as PCs and workstations into inexpensive, high-performance multicomputers. Our pri [...] ...|$|E
40|$|The client/server {{model is}} {{commonly}} used to provide sharing and protection of data. Using this model, distrusted applications (clients) can access and possibly modify shared data, while guaranteeing data integrity. To ensure this data integrity, the shared data is managed by a server that {{is located in a}} private protection domain. Calls to the server domain utilize a protected procedure call mechanism, i. e., the calls execute within the server's domain. While this model provides safety, it can suffer in performance, due to the domain-crossing costs required by the protected procedure calls. Porc is a toolkit for building object-based client/server applications. Its main goals are (1) to provide efficient access to protected objects and (2) to hide the <b>protection</b> <b>boundary</b> from clients. In Porc protected server objects [...] ...|$|E
40|$|The use of {{language}} mechanisms to enforce <b>protection</b> <b>boundaries</b> around software modules has become increasingly attractive. This paper examines {{the advantages and disadvantages}} {{of language}}-based protection over more traditional protection mechanisms, such as standard virtual memory protection hardware, software fault isolation, and capability systems. Arguably, state-of-the-art language-based protection is more flexible and as safe as these other mechanisms. Two major remaining issues are the performance of language-based protection, and the management of resources. Regarding the latter, techniques to build an operating system kernel capable of managing resources and revoking rights are presented. ...|$|R
5000|$|NoScript - anti-XSS <b>protection</b> and Application <b>Boundaries</b> Enforcer (ABE), {{extension}} for Firefox ...|$|R
40|$|Many web {{security}} vulnerabilities allow {{parts of a}} page to interact {{when they should be}} isolated. Such vulnerabilities can be mitigated by implementing <b>protection</b> <b>boundaries</b> between web page elements. Several methods exist for creating such boundaries, but existing methods require relatively sophisticated knowledge of web technologies. To make protection mechanisms available to a wider audience, we propose a simple web page security policy language, ViSP, modelled on mechanisms for specifying page layout. Here we characterise ViSP and describe a simple Firefox-based prototype that allows interactive, graphical specification of per-page security policies. We also show how these tools can be used to protect against cross-site scripting (XSS) attacks on common web applications. ...|$|R
40|$|Many {{versions}} of Unix provide facilities for user-level packet capture, making possible {{the use of}} general purpose workstations for network monitoring. Because network monitors run as user-level processes, packets must be copied across the kernel/user-space <b>protection</b> <b>boundary.</b> This copying can be minimized by deploying a kernel agent called a packet filter, which discards unwanted packets as early as possible. The original Unix packet filter was designed around a stack-based filter evaluator that performs sub-optimally on current RISC CPUs. The BSD Packet Filter (BPF) uses a new, registerbased filter evaluator that is up to 20 {{times faster than the}} original design. BPF also uses a straightforward buffering strategy that makes its overall performance up to 100 times faster than Sun's NIT running on the same hardware. 1 Introduction Unix has become synonymous with high quality networking and today's Unix users depend on having reliable, responsive network access. Unfortunately, this d [...] ...|$|E
40|$|The {{transcription}} factor FIS has {{been implicated in}} the regulation of several stable RNA promoters, including that for the major tRNALeu species in Escherichia coli, tRNA 1 Leu. However, no evidence for direct involvement of FIS in tRNA 1 Leu expression has been reported. We show here that FIS binds to a site upstream of the leuV promoter (centered at − 71) and that it directly stimulates leuV transcription in vitro. A mutation in the FIS binding site reduces transcription from a leuV promoter in strains containing FIS but {{has no effect on}} transcription in strains lacking FIS, indicating that FIS contributes to leuV expression in vivo. We also find that RNA polymerase forms an unusual heparin-sensitive complex with the leuV promoter, having a downstream <b>protection</b> <b>boundary</b> of ∼− 7, and that the first two nucleotides of the transcript, GTP and UTP, are required for formation of a heparin-stable complex that extends downstream of the transcription start site. These studies have implications for the regulation of leuV transcription...|$|E
40|$|Traditionally, {{applications}} use sockets {{to access}} the net-work. The socket API is well understood and simple to use. However, its simplicity has also limited its ef-ficiency in existing implementations. Specifically, the socket API requires the application to execute many sys-tem calls like select, accept, read, and write. Each of these calls crosses the <b>protection</b> <b>boundary</b> between user space and the operating system, which is expensive. Moreover, the system calls themselves were not designed for high concurrency and have become bottlenecks in modern systems where processing simultaneous tasks is key to performance. We show that we can retain the orig-inal socket API without the current limitations. Specifi-cally, our sockets almost completely avoid system calls on the “fast path”. We show that our design eliminates up to 99 % of the system calls under high load. Perhaps more tellingly, we used our sockets to boost NewtOS, a microkernel-based multiserver system, so that the per-formance of its network I/O approaches, and sometimes surpasses, {{the performance of the}} highly-optimized Linux network stack. ...|$|E
40|$|Abstract—Fully pre-splicing (FPS) is an {{extension}} of TCP splicing which is content-blind that prevents the switches from using application layer information for forwarding decisions. FPS extends TCP splicing to support content-aware load balancing algorithms and pre-splices the client’s connections to web servers. In addition, FPS extracts the application information in kernel-space for eliminating the cost of moving data twice through user/kernel <b>protection</b> <b>boundaries</b> and the latency of scheduling the processes. To achieve our design, we extended the TCPSP project of LVS using Linux Netfilter which defines specific hooks to provide a verdict for the packet. On the performance results, FPS improves the TCPSP throughput dramatically...|$|R
50|$|When Congress designates each {{wilderness}} area, {{it includes}} a very specific boundary line—in statutory law. Once a wilderness area {{has been added to}} the system, its <b>protection</b> and <b>boundary</b> can only be altered by another act of Congress.|$|R
30|$|The area {{is home to}} a rich heritage, {{linked to}} {{historical}} agricultural uses and cultural landscape (channels, wineries, farms, orchards, and tree-lined avenues, etc.), elements which are protected by municipal urban planning as well as national and international legislation. The density of cultural elements is higher in areas close to the city, so the opportunities to access it are very good for short routes (up to 1.5 hours, grades 1 – 4), and good for longer routes (up to 5 hours, grades 5 – 8) {{as can be seen in}} Figure 5. The trend has been positive, new <b>protection</b> <b>boundaries</b> have been defined, and the periurban space has received global recognition by UNESCO.|$|R
40|$|In {{traditional}} operating systems, user programs {{suffer from}} the overhead of system calls because of transitions between the user mode and the kernel mode across their <b>protection</b> <b>boundary.</b> However, this overhead can be eliminated if the user programs can be executed safely inside the kernel mode. We achieve this effect by developing a safe kernel mode execution mechanism using TAL, Typed Assembly Language. TAL is an assembly language which ensures memory safety and control flow safety of machine code through a type system. Memory safety means that a program accesses only memory which the program is permitted to access, while control flow safety means that a program jumps to only valid code which the program is permitted to execute. This memory and control flow safety are verified through a type checker using type annotations attached to machine code by the assembler of TAL. In our approach, user programs are written in TAL and their safety are verified through the type checker of TAL before they are executed in the kernel mode. Thus, user programs can be executed in the kernel mode both safely and efficiently, because their safety is verified befor...|$|E
40|$|Nowadays, hazard that {{associated}} with arc flash incident is increasing every year by year. The increasing {{of the incident}} has been brought to our attention. This study proposed {{so that it can}} help the industries to eliminate or at least reduce those hazards. Through the analysis of this project, the limitation for the arc flash occurs will be proved through the stimulation of the short circuit calculation and the boundary calculation by using the ETAP software. There are few steps that will be included, which is data collection process, develop single line diagram, arcing short circuit calculations and also flash <b>protection</b> <b>boundary</b> calculations. The workers in industries should take the harm of arc flash as a serious matter and be aware of arc flash. The expected result from this project will be the limitation that will be gain in the end of this project. The limitations of the protective boundary to control the arc flash in industries. The limitations of the protective boundary from the result are also to control the usage of Personal Protective Equipment (PPE). For each distance form a system or work place there will be a certain suitable level of PPE. The result will help to reduce harm and accident that happens in industries. The analysis of this project basically will be based on industrial field, where the data that used to do the analysis will be involving the industry sit...|$|E
40|$|Preinitiation {{complexes}} (complex 0) or complexes which either made 2 or {{an average}} of 10 phosphodiester bonds (complexes 2 and 10, respectively) were assembled in vitro on the adenovirus 2 major late promoter. Each of the complexes was digested extensively with DNase I; the protected DNAs were purified and hybridized {{in a series of}} end-labeled oligonucleotides homologous to sequences on the coding or noncoding strands near the initiation site. The hybrids were then extended with reverse transcriptase to map the extent of template protection conferred by proteins in the complex. The downstream protection edge revealed by this approach was approximately + 30, + 25, and + 35 for complexes 0, 2, and 10, respectively. We subsequently found that the apparent inward movement of the downstream <b>protection</b> <b>boundary</b> on initiation could be produced by satisfying the energy requirement for transcription initiation (i. e., by treating with ATP or dATP). The downstream boundary change occurred as rapidly as we could perform the test (less than 60 s) and was not blocked by alpha-amanitin. DNAs from trimmed complexes 0, 2, or 10 all supported extension to a single upstream edge at about position - 42. Upstream protection was stable in the preinitiation complex, but when postinitiation complexes were incubated for extended periods, protection of the entire upstream region was lost. This decay of upstream protection, like the movement of the downstream boundary, was found to result from exposure to ATP or dATP. Unlike the downstream boundary movement, however, the upstream change was relatively slow; about 15 min was required to lose one-half of the protection...|$|E
30|$|In {{order to}} realize the ability to {{distinguish}} the different fault zones and facilitate the non-unit protection, recent researches advised to install current limiting reactors that could increase the electrical distance [62, 63]. A small reactor was installed at each {{head of the line}} to set <b>protection</b> <b>boundaries,</b> thus adjacent lines are easily discriminated. In [62], the system simply adopted the over current and low voltage protection principle, but {{there was no need to}} utilize time delay to guarantee the selectivity. In fact, this method that uses current limiting reactors to divide the grid into different zones is borrowed from the protection scheme in HVDC grids. In the DC system, this approach makes it possible {{to realize the}} whole system protection simply with applying non-unit protection methods.|$|R
40|$|We {{describe}} {{a suite of}} metrics for measuring network-wide cyber security risk based on a model of multi-step attack vulnerability (attack graphs). Our metrics are grouped into families, with family-level metrics combined into an overall metric for network vulnerability risk. The Victimization family measures risk in terms of key attributes of risk across all known network vulnerabilities. The Size family {{is an indication of}} the relative size of the attack graph. The Containment family measures risk in terms of minimizing vulnerability exposure across <b>protection</b> <b>boundaries.</b> The Topology family measures risk through graph theoretic properties (connectivity, cycles, and depth) of the attack graph. We display these metrics (at the individual, family, and overall levels) in interactive visualizations, showing multiple metrics trends over time...|$|R
40|$|Abstract. Middleware {{is often}} built using a layered {{architectural}} style. Layered design provides good {{separation of the}} different concerns of middleware, such as communication, marshaling, request dispatching, thread management, etc. Layered architecture helps {{in the development and}} evolution of the middleware. It also provides tactical side-benefits: layers provide convenient <b>protection</b> <b>boundaries</b> for enforcing security policies. However, the benefits of this layered structure come at a cost. Layered designs can hinder performance-related optimizations, and actually {{make it more difficult to}} adapt systems to conveniently address late-bound requirements such as dependability, access control, virus protection, and so on. We present some examples of this issue, and outline a new approach, under investigation at UC Davis, which includes ideas in middleware, architectures, and programming models. ...|$|R
40|$|Dynamic {{models of}} {{ecosystem}} services supply and scenario analysis {{of changes in}} multiple services are being increasingly used to support land use planning and decision making. This approach reduces potential and real conflicts among various stakeholders potentially creating win–win solutions for all. It is particularly applicable in areas where insufficient land for agriculture and settlements is resulting in high rates of conversion of natural forest and grasslands. We quantified and mapped multiple ecosystem services, including habitat provision {{as a proxy for}} biodiversity, carbon storage and sequestration, and water balance and supply in the Sarvelat and Javaherdasht region of the globally-significant Hyrcanian (Caspian) forests in northern Iran using the Integrated Valuation of Ecosystem Services and Tradeoffs tool. This region is experiencing a rapidly increasing rate of forest conversion and as a result, the protected area located within the study landscape is threatened by human encroachment. Plausible future landscapes were modeled under three scenarios: (i) business as usual; (ii) protection-based zoning which reflects an expansion of the protected area boundary to prevent land use changes; and (iii) collaborative zoning through redefining the <b>protection</b> <b>boundary</b> simultaneously with an adjustment to meet local stakeholders’ objective of expansion of anthropogenic cover. The results showed that the collaborative zoning scenario would best contribute to effective policy because it presents a more rational spatial configuration of the landscape maintaining the provision of ecosystem services. This scenario may lead to reduced environmental impacts while achieving less conflict between the government and local communities. These results will help to inform and shape natural resource management policies in Iran and is applicable elsewhere in the world. No Full Tex...|$|E
40|$|Ground anchors are a form {{of ground}} {{improvement}} technique that strengthens and stabilises structures to the surrounding ground, whether it be in soil or rock. Steel strand ground anchors have many advantages when transferring applied loads into the surrounding sub-base; however the environments {{in which they can}} be constructed in are aggressive and can cause corrosion and premature failure of the anchor should they not be adequately protected. Current ground anchor best practices require a complex double <b>protection</b> <b>boundary</b> layer system to encase the bond length, free length and the anchor head and may not guarantee complete protection against corrosion. Fibre Reinforced Polymer (FRP) materials in the construction and infrastructure industry has seen significant interest and development in recent years. Unfortunately these developments have not extended to the ground anchor industry. As such, little is known about material performance under adverse ground anchoring conditions, where exposure to extreme alkaline, acidic or briny environments is not uncommon. This thesis investigated two different types of Carbon Fibre CFRP strands to assess if they are suitable for ground anchor applications and what environments they a can perform safely and successfully unprotected. Absorption, Scanning Electron Microscopy (SEM), spectroscopy and tensile performance tests were conducted in aggressive alkaline and acidic groundwater environments and neutral solution for a period up to six months at elevated temperatures of 30 degrees Celcius and 60 degrees Celcius. These tests were conducted unstressed and stressed. Results showed that although absorption of aggressive environments were observed and localised penetration of the aggressive solution had occurred (without damage or deterioration of the composite structure) the tensile performance of the CFCC product was unaffected by the aggressive ground environments in both a stress-cured or unstressed-cured state. Absorption levels and penetration of aggressive solutions were higher for the HS 25 x 2 material. This penetration showed signs of composite and fibre breakdown over the six months curing. Tensile performance was still efficient, with most results performing better than control results; however, inconsistencies in the tensile results were reported as a result of gripping issues developed during material curing. Ground anchor bond assessment was conducted under confined conditions on a single CFRP strand over various bond lengths, bonded using a standard ground anchor cementitious based grout mixture with no additives. Pull-out tests were conducted on both CFCC and HS 25 x 2 materials. Results identified the minimum bond length required to induce strand rupture for the CFCC specimens was calculated to be 775 mm. No minimum bond length was established for the HS 25 x 2 due to a large scatter and variance in results over the numerous bond lengths tested. Finite Element Analysis (FEA) was conducted on the CFCC strand to develop greater understanding of the progressive debonding during axial loading and bond stress distribution along the bonded length of strand. FEA model was able to predict ultimate loads capacity and bond slip prior to failure accurately. FEA model was compared to full scale test results and strong linearity between bond stresses and progressive debonding distribution were identified. No FEA modelling was developed for the HS 25 x 2 product {{as a result of the}} inconsistent bond pull-out results. CFRP anchors are restricted with the methods available to lock the anchor off and the head. Bond type anchor heads are good reliable method for anchorage, but minimum bond length requirements are long and restrictive for ground anchor applications. This project identified the issues with current bond type anchor heads and developed a reliable and compact “modified bond type” anchor head system suitable to CFRP material similar to the profile of CFCC strand. The anchor head was successfully tested on CFCC strand where a four and 10 strand anchor head assessment was conducted. Results from the test identified specimen failure occurred as a result of strand rupture in the bond length and no movement or cracking at the distal end of the anchor head. The success of this anchor head enabled the development of a full scale gun barrel test to be conducted. Using the anchor head technology developed a four strand CFCC gun barrel test was conducted with a 3. 0 meter bond length and 2. 0 m free length. Testing was conducted as per an acceptance test program for steel strand ground anchors with cyclic loading over 10 equal load increments up to proof load of 800 kN. Results showed a linear elastic extension over each load increment. Creep was observed at each cycles peak load (held for 50 minutes). The net anchor extension was a direct result of the creep. There were no signs of strand deformation from the data collected. No strand movement was observed at the anchors distal end, nor any movement, cracking or pull-out of the wires within the anchor head system. Strain gauges mounted along the strands free and bond lengths plotted load and bond stress distribution along the strand throughout the loading process. Bond stress distribution results replicated FEA model results obtained from the single strand bond model. An apparent free length of 3. 5 meters was calculated. Progressive debonding of each strand throughout the test was established. Strain results verified the calculated apparent free length of 3. 5 meters. The research conducted of CFRP strand identified that there are limitations for exposure to aggressive ground environments and bond strengths for selected FRP material. CFRP strand which can be securely anchored (using bond or other methods) and resist aggressive ground environments, such as CFCC, could perform as a permanent ground anchor in an unprotected state for the duration of the anchors design life. Guidelines and standards needs to be urgently developed to assist in designers utilising the knowledge developed in research the superior performance of CFRP strand in aggressive environment compared to steel strand ground anchors...|$|E
5000|$|The Protected Area Management Plan envisages <b>boundary</b> <b>protection,</b> habitat improvement, {{tourism and}} regulation, roads and staff {{quarters}} and so forth.|$|R
40|$|An open {{operating}} system provides {{a high degree}} of programming flexibility and efficiency. At the same time, it generally requires that all programs be written in a single language, and provides no protection other than that which is available from the compiler. These limitations may be tolerated by the user of a personal computer, but they become unacceptable on a workstation that must run untrusted software written in many different languages. Psyche is an {{operating system}} designed to make the most effective possible use of shared-memory multiprocessors and uniprocessor machines. It combines the flexibility of an open operating system with the ability to write in multiple languages and to establish solid <b>protection</b> <b>boundaries.</b> It also provides the efficiency of an open operating system for programs that do not require protection. 1...|$|R
40|$|As IPC {{mechanisms}} become faster, stub-code efficiency {{becomes a}} performance issue for local client/server RPCs and inter-component communication. Inefficient and unnecessary complex marshalling code can almost double communication costs. We {{have developed an}} experimental new IDL compiler called IDL 4 that produces near-optimal stub-code for gcc and the L 4 microkernel. IDL 4 is neither portable nor adaptable but generates in most cases stub-code that is 3 times shorter (and faster) than the code generated by a commonly used portable IDL compiler. 1 Motivation Multi-server and component-based systems are promising architectural approaches to handle the ever increasing complexity of operating and application systems. Components or servers (and clients) {{communicate with each other}} through cross-domain method invocations. Such interface method invocations [...] if crossing <b>protection</b> <b>boundaries</b> [...] are typically implemented through interprocess communication (IPC) mechanisms offered by a [...] ...|$|R
40|$|High-level {{languages}} like Java or ML support abstraction {{and data}} encapsulation through language {{features such as}} mod-ules, objects, classes, and/or abstract data types. But traditional compilation does not preserve such abstraction boundaries. At machine code level, there is just a single address-space where all code is readable and all data is read/writable. In other words, the entire high-level program is compiled down into one single protection domain. To a large extent, {{this is the case}} because the protection domain granularity of modern execution platforms is very coarse grained: the smallest unit of protection is an operating system process, and most programs are compiled to a single process. For fully safe languages, and if attackers can only provide input to and read output from programs, {{there is no need to}} preserve abstraction or <b>protection</b> <b>boundaries</b> after compilation...|$|R
