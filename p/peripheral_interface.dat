307|195|Public
25|$|SPI bus mode: Serial <b>Peripheral</b> <b>Interface</b> Bus is {{primarily}} used by embedded microcontrollers. This bus type supports only a 3.3-volt interface. This {{is the only}} bus type that {{does not require a}} host license.|$|E
25|$|The Serial <b>Peripheral</b> <b>Interface</b> bus (SPI) is a {{synchronous}} {{serial communication}} interface specification used for short distance communication, primarily in embedded systems. The interface {{was developed by}} Motorola in the late 1980s {{and has become a}} de facto standard. Typical applications include Secure Digital cards and liquid crystal displays.|$|E
25|$|At initial {{power-up}} or card insertion, {{the host}} device selects either the Serial <b>Peripheral</b> <b>Interface</b> (SPI) bus or the one-bit SD bus by the voltage level present on Pin 1. Thereafter, the host device may issue a command {{to switch to}} the four-bit SD bus interface, if the SD card supports it. For various card types, support for the four-bit SD bus is either optional or mandatory.|$|E
5000|$|It {{has many}} of the {{required}} <b>peripheral</b> <b>interfaces</b> support such as: ...|$|R
40|$|We {{investigate}} {{the suitability of}} hardware multithreading for real-time event handling in combination with a Java microcontroller. Our aim is to design all hardware components such that the program execution time can be statically calculated in a cycle-accurate manner. In the field of microcontrollers {{it is important to}} incorporate <b>peripheral</b> <b>interfaces</b> into the processor die. We explored the special requirements and problems of connecting <b>peripheral</b> <b>interfaces</b> to a multithreaded processor core that simultaneously executes more than one thread in the processor pipeline. We present different solutions of the connection problem and discuss pros and cons with respect to real-time applications...|$|R
5000|$|A {{mechanical}} {{specialty of}} ESM modules {{is that their}} connectors are compatible with the PCI-104 module standard. These modules can be [...] "stacked" [...] onto ESM modules, e. g., for additional <b>peripheral</b> <b>interfaces.</b>|$|R
25|$|A queued serial <b>peripheral</b> <b>interface</b> (QSPI) {{is a type}} of SPI {{controller}} {{that uses}} a data queue to transfer data across the SPI bus. It has a wrap-around mode allowing continuous transfers to and from the queue with only intermittent attention from the CPU. Consequently, the peripherals appear to the CPU as memory-mapped parallel devices. This feature is useful in applications such as control of an A/D converter. Other programmable features in QSPI are chip selects and transfer length/delay.|$|E
25|$|Intel has {{developed}} a successor to its Low Pin Count (LPC) bus that it calls the Enhanced Serial <b>Peripheral</b> <b>Interface</b> Bus, or eSPI for short. Intel aims to allow {{the reduction in the}} number of pins required on motherboards compared to systems using LPC, have more available throughput than LPC, reduce the working voltage to 1.8 volts to facilitate smaller chip manufacturing processes, allow eSPI peripherals to share SPI flash devices with the host (the LPC bus did not allow firmware hubs to be used by LPC peripherals), tunnel previous out-of-band pins through the eSPI bus, and allow system designers to trade off cost and performance.|$|E
2500|$|Serial flash is a small, {{low-power}} {{flash memory}} that provides only serial {{access to the}} data - rather than addressing individual bytes, the user reads or writes large contiguous groups of bytes in the address space serially. Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI) is a typical protocol for accessing the device.|$|E
50|$|From 1990 onwards, the {{association}} published and maintained {{a sequence of}} standards for parallel communication <b>peripheral</b> <b>interfaces</b> in laptop computers, notably the PCMCIA card, later renamed to PC Card, and the ExpressCard (2003), all of them now technologically obsolete.|$|R
50|$|All Amiga {{computers}} (except the CD32, {{where these}} functions are {{performed by the}} Akiko chip) use two 8520 CIA (Complex <b>Interface</b> Adapter) for <b>peripheral</b> <b>interfacing</b> and the system timers. These chips were also used in some other Commodore devices.|$|R
50|$|<b>Peripherals</b> <b>interfaced</b> to {{the system}} via channels. A channel was a {{specialized}} processor with the instruction set optimized for transferring data between a peripheral and main memory. In modern terms, this could be compared to direct memory access (DMA).|$|R
2500|$|Laptop input devices. Early MacBook and MacBook Pro {{computers}} used {{an internal}} variant of USB as a keyboard and trackpad interconnect. Since the 2013 revision of MacBook Air, Apple started {{to use a}} custom Serial <b>Peripheral</b> <b>Interface</b> controller instead. The 2016 MacBook Pro additionally uses a custom internal USB device dubbed [...] "iBridge" [...] as an interface to the Touch Bar and Touch ID components, {{as well as the}} FaceTime Camera. PC laptops generally use internal variant of the legacy PS/2 keyboard interconnect. PS/2 also used to be the standard for PC laptop pointing devices, although a variety of other interfaces, including USB, SMBus and I2C, may also be used.|$|E
2500|$|Nishi's {{standard}} was {{built around the}} Spectravideo SV-328 computer. The standard consisted primarily of several off-the-shelf parts; the main CPU was a 3.58MHz Zilog Z80, the Texas Instruments TMS9918 graphics chip with 16KB of dedicated VRAM, the sound and partial I/O support {{was provided by the}} AY-3-8910 chip manufactured by General Instrument (GI), and an Intel 8255 Programmable <b>Peripheral</b> <b>Interface</b> chip was used for the parallel I/O such as the keyboard. This was a choice of components that was shared by many other home computers and games consoles of the period, such as the ColecoVision home computer (an emulator was later available with which MSX systems could run some of its software), and the Sega SG-1000 video game system. To reduce overall system cost, many MSX models used a custom IC known as [...] "MSX-Engine", which integrated glue logic, 8255 PPI, YM2149 compatible soundchip and more, sometimes even the Z80 CPU. However, almost all MSX systems used a professional keyboard instead of a chiclet keyboard, driving the price up compared to the original SV-328. Consequently, these components alongside Microsoft's MSX BASIC made the MSX a competitive, though somewhat expensive, home computer package.|$|E
2500|$|At {{the heart}} of a Sirius {{receiver}} is a custom application specific integrated circuit (ASIC) chip called the Baseband Integrated Circuit currently the STA240, which is produced by STMicroelectronics. The chip contains embedded ARM7TDMI and ARM946E-S microprocessors synthesized from IP cores. Every baseband has a unique Electronic Serial Number (or Sirius ID). Another major section of a Sirius receiver is the tuner. The tuner is also a custom ASIC, the STA210. The tuner connects to the antenna, and receives the incoming satellite and terrestrial signals at 2.315GHz and downconverts them to intermediate frequency signals at around 75MHz. The strength of the signals is approximately −50dBm in clear-sky conditions. The IF signals are fed to the STA240, which are digitized, demodulated, error-corrected, de-interleaved, and decrypted using specialized circuits on the chip. The baseband processor utilizes a 16 MB SDRAM memory to buffer four seconds of one of the satellite signals in order to bring it into time coincidence with the other for Maximal-ratio combining. On newer receivers with a [...] "pause" [...] feature, a dual-port PSRAM is employed to store up to 60 minutes of the selected channel. The baseband processor outputs digital audio over a Serial <b>Peripheral</b> <b>Interface,</b> which is fed to a D/A converter to produce the analog audio signal. The front-end of a Sirius receiver is called the head unit, required to display descriptive text (such as the category, channel, artist, and song name) and provide controls to the user. This is implemented by the third-party designers of Sirius-ready receivers, using a microprocessor of their choice.|$|E
50|$|The Personal Computer Memory Card International Association (PCMCIA) was a {{group of}} {{computer}} hardware manufacturers, operating under that name from 1989 to 2009/2010. Starting with the eponymous PCMCIA card in 1990, it created various standards for <b>peripheral</b> <b>interfaces</b> designed for laptop computers.|$|R
50|$|Developments of {{the basic}} core continue, {{intended}} for embedded systems. Here they are combined {{with a number of}} <b>peripheral</b> <b>interfaces</b> to reduce the overall complexity and power requirements of a design. A number of chips, each with different sets of interfaces, are sold under the names ColdFire and DragonBall.|$|R
50|$|<b>Peripheral</b> Sensor <b>Interface</b> (PSI5) is {{a digital}} {{interface}} for sensors.|$|R
50|$|Other {{comparable}} I/O {{chips are}} the 2655 Programmable <b>Peripheral</b> <b>Interface</b> from the Signetics 2650 family, the Motorola 6820 PIA (<b>Peripheral</b> <b>Interface</b> Adapter) from the Motorola 6800 {{family and the}} Western Design Center WDC 65C21.|$|E
5000|$|... #Caption: [...] Motorola MC6820 and MC6821 <b>Peripheral</b> <b>Interface</b> Adapters ...|$|E
5000|$|... #Subtitle level 3: Intel Enhanced Serial <b>Peripheral</b> <b>Interface</b> Bus ...|$|E
5000|$|Problems and {{limitations}} in <b>peripheral</b> nerve <b>interfacing</b> are both biophysical and biological in nature. These challenges include: ...|$|R
5000|$|Motherboard {{specifically}} {{refers to}} a PCB with expansion capability and as the name suggests, this board {{is often referred to}} as the [...] "mother" [...] of all components attached to it, which often include <b>peripherals,</b> <b>interface</b> cards, and daughtercards: sound cards, video cards, network cards, hard drives, or other forms of persistent storage; TV tuner cards, cards providing extra USB or FireWire slots and a variety of other custom components.|$|R
40|$|Considerable {{scientific}} and technological efforts have been devoted to develop neuroprostheses and hybrid bionic systems that link the human nervous system with electronic or robotic prostheses, with the main aim of restoring motor and sensory functions in disabled patients. A number of neuroprostheses use <b>interfaces</b> with <b>peripheral</b> nerves or muscles for neuromuscular stimulation and signal recording. Herein, we provide a critical overview of the <b>peripheral</b> <b>interfaces</b> available and trace their use from research to clinical application in controlling artificial and robotic prostheses. The first section reviews {{the different types of}} non-invasive and invasive electrodes, which include surface and muscular electrodes that can record EMG signals from and stimulate the underlying or implanted muscles. Extraneural electrodes, such as cuff and epineurial electrodes, provide simultaneous interface with many axons in the nerve, whereas intrafascicular, penetrating, and regenerative electrodes may contact small groups of axons within a nerve fascicle. Biological, technological, and material science issues are also reviewed relative to the problems of electrode design and tissue injury. The last section reviews different strategies for the use of information recorded from <b>peripheral</b> <b>interfaces</b> and the current state of control neuroprostheses and hybrid bionic systems...|$|R
5000|$|... #Caption: A {{timing diagram}} for the Serial <b>Peripheral</b> <b>Interface</b> Bus ...|$|E
5000|$|Two <b>Peripheral</b> <b>Interface</b> Adapters (PIA), either MC6821 or MC6822 chips ...|$|E
5000|$|IEEE 1284-1994: Standard Signaling Method for a Bi-directional Parallel <b>Peripheral</b> <b>Interface</b> for Personal Computers ...|$|E
5000|$|A <b>{{peripheral}}</b> nerve <b>interface</b> is {{the bridge}} between the peripheral nervous system and a computer interface {{which serves as a}} bi‐directional information transducer recording and sending signals between the human body and a machine processor. Interfaces to the nervous system usually take the form of electrodes for stimulation and recording, though chemical stimulation and sensing are possible. Research in this area is focused on developing <b>peripheral</b> nerve <b>interfaces</b> for the restoration of function following disease or injury to minimize associated losses. <b>Peripheral</b> nerve <b>interfaces</b> also enable electrical stimulation and recording of the peripheral nervous system to study the form and function of the peripheral nervous system. Many researchers also focus in the area of neuroprosthesis, linking the human nervous system to bionics in order to mimic natural sensorimotor control and function. Successful implantation of <b>peripheral</b> nerve <b>interfaces</b> depend on a number of factors which include appropriate indication, [...] perioperative testing, differentiated planning, and functional training. Typically microelectrode devices are implanted adjacent to, around or within the nerve trunk to establish contact with the peripheral nervous system. Different approaches may be used {{depending on the type of}} signal desired and attainable.|$|R
40|$|Abstract—The main {{objective}} of this project is to implement a full duplex SPI (serial <b>peripheral</b> <b>interfacing</b> system) with low complexity and high security algorithms. High security is achieved by encoding the data with S. E. A (scalable encryption algorithms) along with that, error checking capability is also provided by adding even parity. SPI bus segments with other devices; only one such slave could talk to the master, and only its chip select could be activated. Key words — SPI, SEA, error checking. I...|$|R
50|$|It {{features}} a 32-bit microcomputer processor, {{as well as}} many <b>peripheral</b> <b>interfaces</b> similar to personal computers such as power connector, audio interfaces, both VGA and HDMI outputs, a network port, and USB interfaces for connecting WiFi and Bluetooth dongles, a keyboard, and a mouse. It uses A8 kernel, 1 GHz frequency, a built-in SGX540 graphics processor, a 512MB DDR2 storage, and 4GB eMMC FLASH memory. Most notably, it supports Android 4.0.4, as well as Ubuntu 12.04 and Windows CE6 operating systems.|$|R
5000|$|Some Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI) IC {{products}} {{are designed with}} daisy chain capability.|$|E
5000|$|Intel 8255: {{programmable}} <b>peripheral</b> <b>interface,</b> 3x 8-bit I/O pins {{used for}} printer connection etc.|$|E
50|$|One {{bus that}} uses the chip/slave select is the Serial <b>Peripheral</b> <b>Interface</b> Bus (SPI bus).|$|E
5000|$|TI ARM <b>Peripherals</b> Programming and <b>Interfacing,</b> Amazon Kindle ...|$|R
5000|$|Pmod <b>interface</b> or <b>Peripheral</b> Module <b>interface</b> {{is an open}} {{standard}} {{defined by}} Digilent Inc in the Digilent Pmod™ Interface Specification [...] for peripherals used with FPGAs or microcontrollers.|$|R
40|$|This paper {{outlines}} various mission {{requirements and}} technical approaches {{that support the}} potential use of portable computers in several defined activities within the Space Station Freedom (SSF) program. Specifically, the use of portable computers as consoles for both spacecraft control and payload applications is presented. Various issues and proposed solutions regarding the incorporation of portable computers within the program are presented. The primary issues presented regard architecture (standard interface for expansion, advanced processors and displays), integration (methods of high-speed data communication, <b>peripheral</b> <b>interfaces,</b> and interconnectivity within various support networks), and evolution (wireless communications and multimedia data interface methods) ...|$|R
