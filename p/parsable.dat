135|0|Public
25|$|<b>Parsable</b> output, {{including}} XML log output.|$|E
2500|$|Some macronyms can be {{multiply}} nested: the second-order acronym {{points to}} another one further down a hierarchy. In an informal competition run by the magazine New Scientist, a fully documented specimen was discovered {{that may be the}} most deeply nested of all: RARS is the [...] "Regional ATOVS Retransmission Service"; ATOVS is [...] "Advanced TOVS"; TOVS is [...] "TIROS operational vertical sounder"; and TIROS is [...] "Television infrared observational satellite". Fully expanded, [...] "RARS" [...] might thus become [...] "Regional Advanced Television Infrared Observational Satellite Operational Vertical Sounder Retransmission Service". However, to say that [...] "RARS" [...] stands directly for that string of words, or can be interchanged with it in syntax (in the same way that [...] "CHF" [...] can be usefully interchanged with [...] "congestive heart failure"), is a prescriptive misapprehension rather than a linguistically accurate description; the true nature of such a term is closer to anacronymic than to being interchangeable like simpler acronyms are. The latter are fully reducible in an attempt to [...] "spell everything out and avoid all abbreviations," [...] but the former are irreducible in that respect; they can be annotated with parenthetical explanations, but they cannot be eliminated from speech or writing in any useful or practical way. Just as the words laser and radar function as words in syntax and cognition without a need to focus on their acronymic origins, terms such as [...] "RARS" [...] and [...] "CHA2DS2–VASc score" [...] are irreducible in natural language; if they are purged, the form of language that is left may conform to some imposed rule, but it cannot be described as remaining natural. Similarly, protein and gene nomenclature, which uses symbols extensively, includes such terms as the name of the NACHT protein domain, which reflects the symbols of some proteins that contain the domain—NAIP (NLR family apoptosis inhibitor protein), C2TA (major histocompatibility complex class II transcription activator), HET-E (incompatibility locus protein from Podospora anserine), and TP1 (telomerase-associated protein)—but is not syntactically reducible to them. The name is thus itself more symbol than acronym, and its expansion cannot replace it while preserving its function in natural syntax as a name within a clause clearly <b>parsable</b> by human readers or listeners.|$|E
5000|$|If the XML {{document}} {{depends on}} <b>parsable</b> external entities (including the specified external subset, or <b>parsable</b> external entities declared {{in the internal}} subset), it should assert [...] in its XML declaration. The validating DTD may be identified by using XML Catalogs to retrieve its specified external subset.|$|E
5000|$|Wikipedia - {{example of}} large {{knowledge}} base {{that is not}} yet semantically <b>parsable</b> ...|$|E
50|$|Ryan Junee is an Australian-American entrepreneur. He is {{the founder}} of <b>Parsable</b> and is based in San Francisco.|$|E
5000|$|... {{a machine}} <b>parsable</b> message/delivery-status, {{a list of}} [...] "name: type; value" [...] lines that state several {{possible}} fields; and ...|$|E
50|$|For these reasons, tree-adjoining grammars {{are often}} {{described}} as mildly context-sensitive.These grammar classes are conjectured to be powerful enough to model natural languages while remaining efficiently <b>parsable</b> in the general case.|$|E
5000|$|The local part, in {{this case}} alice, is moved because it may contain equal signs (=), so putting it at an {{extremity}} of the rewritten local part makes the latter <b>parsable.</b>|$|E
50|$|A non-validating parser may, however, elect {{not to read}} <b>parsable</b> {{external}} entities (including {{the external}} subset), and {{does not have to}} honor the content model restrictions defined in element declarations and in attribute list declarations.|$|E
5000|$|In this {{environment}} would be other two castles, {{but one that}} does not retain material remains determinants or documentation <b>parsable</b> more than a Latin inscription on a stone isolated:Kings, bishops, priests, by all powers received from God, this castle here excomungaron ...|$|E
50|$|However, such {{documents}} are still fully <b>parsable</b> in the non-standalone mode of validating parsers, which signals an error if it can't locate these external entities with their specified public identifier (FPI) or system identifier (a URI), or are inaccessible. (Notations declared in the DTD are also referencing external entities, but these unparsed entities are not {{needed for the}} validation of documents in the standalone mode of these parsers: the validation of all external entities referenced by notations is left to the application using the SGML or XML parser). Non-validating parsers may eventually attempt to locate these external entities in the non-standalone mode (by partially interpreting the DTD only to resolve their declared <b>parsable</b> entities), but do not validate the content model of these documents.|$|E
50|$|In 2013 Junee founded Wearable Intelligence with Yan-David Erlich and Chase Feiger, {{with a goal}} of {{bringing}} wearable technologies like Google Glass to enterprise markets. In 2016 the company was renamed <b>Parsable</b> and raised an additional $20M in funding from investors including Schlumberger, Airbus and Saudi Aramco.|$|E
50|$|Relaxed {{pronunciation}} (also called condensed pronunciation or word slurs) is {{a phenomenon}} that happens when the syllables of common words are slurred together. It is almost always present in normal speech, in all natural languages but not in some constructed languages, such as Loglan or Lojban, which are designed so that all words are <b>parsable.</b>|$|E
50|$|Black Perl is {{a famous}} piece of Perl poetry. It was posted to Usenet on April 1, 1990. It {{is written in}} Perl 3 and will not parse under Perl 5. Multiple {{independent}} updates to Black Perl to make it <b>parsable</b> in Perl 5 have been published. The full text of the poem is reproduced below.|$|E
50|$|Combinatory categorial grammar (CCG) is an {{efficiently}} <b>parsable,</b> yet linguistically expressive grammar formalism. It has {{a transparent}} interface between surface syntax and underlying semantic representation, including predicate-argument structure, quantification and information structure. The formalism generates constituency-based structures (as opposed to dependency-based ones) {{and is therefore}} a type of phrase structure grammar (as opposed to a dependency grammar).|$|E
5000|$|Another {{approach}} {{is to create a}} syntactically-correct, easily <b>parsable</b> sentence using nonsense words; a famous such example is [...] "The gostak distims the doshes". Lewis Carroll's Jabberwocky is also famous for using this technique, although in this case for literary purposes; similar sentences used in neuroscience experiments are called Jabberwocky sentences. In Russian schools of linguistics, the glokaya kuzdra example has similar characteristics.|$|E
50|$|A central goal in LFG {{research}} {{is to create a}} model of grammar with a depth which appeals to linguists {{while at the same time}} being efficiently <b>parsable</b> and having the rigidity of formalism which computational linguists require. Because of this, computational parsers have been developed and LFG has also been used as the theoretical basis of various machine translation tools, such as AppTek's TranSphere, and the Julietta Research Group's Lekta.|$|E
5000|$|... "A Ricardian {{contract}} can {{be defined}} as a single document that is a) a contract offered by an issuer to holders, b) for a valuable right held by holders, and managed by the issuer, c) easily readable (like a contract on paper), d) readable by programs (<b>parsable</b> like a database), e) digitally signed,f) carrying the keys and server information, and g) allied with a unique and secure identifier." ...|$|E
50|$|The XML DTD syntax is one {{of several}} XML schema {{languages}}. However, many of the schema languages do not fully replace the XML DTD. Notably, the XML DTD allows defining entities and notations that have no direct equivalents in DTD-less XML (because internal entities and <b>parsable</b> external entities are not part of XML schema languages, and because other unparsed external entities and notations have no simple equivalent mappings in most XML schema languages).|$|E
50|$|An LL parser parses {{the input}} from Left to right, and {{constructs}} a Leftmost derivation {{of the sentence}} (hence LL, as opposed to LR). The class of grammars which are <b>parsable</b> {{in this way is}} known as the LL grammars. LL grammars are an even more restricted class of context-free grammars than LR grammars. Nevertheless, they are of great interest to compiler writers, because such a parser is simple and efficient to implement.|$|E
5000|$|XML is {{described}} as being generally <b>parsable</b> like a two-level grammar for non-validated XML and a Conway-style pipeline of coroutines (lexer, parser, validator) for valid XML. The SGML productions in the ISO standard are reported to be LL(3) or LL(4). XML-class subsets are reported to be expressible using a W-grammar. According to one paper, and probably considered at an information set or parse tree level rather than a character or delimiter level: ...|$|E
50|$|Currently {{widespread}} Blue Button usage supports downloading human-readable data in ASCII. As a {{step towards}} enabling {{the exchange of}} <b>parsable</b> data, on 16 January 2013 the Office of the National Coordinator for Health IT recently announced an implementation guide for data holders and developers to enable automated data exchange among Blue Button+ compliant applications using structured data formats. Blue Button+ is designed to enhance the ways consumers get and share their health information in human-readable and machine-readable formats; and to enable {{the use of this}} information in third-party applications.|$|E
50|$|Device Description Language (DDL) {{allows a}} machine <b>parsable</b> {{description}} of the interface and capabilities of any device to be defined. This description can be interpreted by a controller which may then automatically configure itself for controlling that device. The description not only provides the address and property mapping information which is necessary for DMP to operate {{but it can also}} contain a huge amount of information on the functionality, capabilities and semantics of the device in an extensible format which allows a controller to extract the features it needs for its specific context while skipping over information which is not relevant to its needs.|$|E
50|$|In 1731, Joseph Fisher was {{appointed}} the church's first Curate and served until 1779. Newlands {{was one of}} the poorer clergy with an annual stipend of £2 11s 7d, the lowest in the Diocese of Carlisle. The church received three payments of £200 under the laws of Queen Anne's Bounty in 1748, 1750 and 1757. Ten Curates served in Newlands until 1868. William <b>Parsable</b> served for 32 years (1794-1826), and was known as “Peppery Billy”. He also served as Headmaster at Crosthwaite School in nearby Keswick, and was known for his quick temper and firm discipline which put fear into both the congregation and pupils.|$|E
5000|$|The {{content of}} the [...] "img" [...] element {{references}} another external entity [...] "example1SVG" [...] whose declaration also does not define an notation, so it is also parsed by validating parsers and the entity replacement text is located by its defined SYSTEM identifier [...] "example1.svg" [...] (also interpreted as a relative URI). The effective content for the [...] "img" [...] element be the content of this second external resource. The difference with the GIF image, is that the SVG image is parsed within the SGML document, according to the declarations in the DTD, where the GIF image is just referenced as an opaque external object (which is not <b>parsable</b> with SGML) via its [...] "data" [...] attribute (whose value type is an opaque ENTITY).|$|E
5000|$|A key {{decision}} is the formatting {{of the text}} such that minimal markup language can be inserted to assist the software agent while maintaining readability. To be a Ricardian Contract, {{it has to be}} <b>parsable</b> both by the program and by a human reader. Further, the format has to support a canonical form hash (cryptographic hash function), that is, have a way of delivering a hash over contents that does not change due to common serialisation and transmission artifacts.LaTeX or Ini file format are suitable because they allow consistent readability by humans.Popular and standardised formats such as JSON, XML and Semantic Web might appeal to programmers but provide less readability to jurists. [...] Some formats also suffer from too much markup flexibility such as whitespace which makes hashing and signing hard.|$|E
5000|$|Some macronyms can be {{multiply}} nested: the second-order acronym {{points to}} another one further down a hierarchy. In an informal competition run by the magazine New Scientist, a fully documented specimen was discovered {{that may be the}} most deeply nested of all: RARS is the [...] "Regional ATOVS Retransmission Service"; ATOVS is [...] "Advanced TOVS"; TOVS is [...] "TIROS operational vertical sounder"; and TIROS is [...] "Television infrared observational satellite". Fully expanded, [...] "RARS" [...] might thus become [...] "Regional Advanced Television Infrared Observational Satellite Operational Vertical Sounder Retransmission Service". However, to say that [...] "RARS" [...] stands directly for that string of words, or can be interchanged with it in syntax (in the same way that [...] "CHF" [...] can be usefully interchanged with [...] "congestive heart failure"), is a prescriptive misapprehension rather than a linguistically accurate description; the true nature of such a term is closer to anacronymic than to being interchangeable like simpler acronyms are. The latter are fully reducible in an attempt to [...] "spell everything out and avoid all abbreviations," [...] but the former are irreducible in that respect; they can be annotated with parenthetical explanations, but they cannot be eliminated from speech or writing in any useful or practical way. Just as the words laser and radar function as words in syntax and cognition without a need to focus on their acronymic origins, terms such as [...] "RARS" [...] and [...] "CHA2DS2-VASc score" [...] are irreducible in natural language; if they are purged, the form of language that is left may conform to some imposed rule, but it cannot be described as remaining natural. Similarly, protein and gene nomenclature, which uses symbols extensively, includes such terms as the name of the NACHT protein domain, which reflects the symbols of some proteins that contain the domain—NAIP (NLR family apoptosis inhibitor protein), C2TA (major histocompatibility complex class II transcription activator), HET-E (incompatibility locus protein from Podospora anserine), and TP1 (telomerase-associated protein)—but is not syntactically reducible to them. The name is thus itself more symbol than acronym, and its expansion cannot replace it while preserving its function in natural syntax as a name within a clause clearly <b>parsable</b> by human readers or listeners.|$|E
40|$|We {{introduce}} {{the notion of}} a <b>parsable</b> grammer, i. e. a grammar which can be parsed using a deterministic pushdown transducer. This class of grammars includes the LR(k) -grammars. The notion of covering is generalized and brought into a form making it possible to consider more than only left or righmost derivations. With this new definition of covering we prove that every <b>parsable</b> grammar can be covered by a strict deterministic grammar. A practical consequence is that every <b>parsable</b> grammar can be parsed using a strict deterministic parsing method. Some extensions of the definition of <b>parsable</b> grammars are considered...|$|E
40|$|A uniquely <b>parsable</b> grammar (UPG) {{introduced}} by Morita et al. (1997) {{is a special}} kind of generative grammar where parsing can be performed without backtracking. By extending a UPG, a uniquely parallel <b>parsable</b> grammar (UPPG) was proposed and its unique parallel parsability has been investigated. In this paper, we show any one-dimensional cellular automaton (CA), as a parallel language recognition device, can be simply simulated by a parallel reduction in an equivalent UPPG. Key words: uniquely <b>parsable</b> grammar, cellular automata, parallel parsing...|$|E
40|$|Avariable-to-#xed length {{encoding}} procedure is a mapping from a dictionary of variable length strings of source outputs {{to the set}} of codewords of a given length. For memoryless sources, the Tunstall procedure {{can be applied to}} construct optimal uniquely <b>parsable</b> dictionaries and the resulting codes are known to work especially well for sources with small entropies. Weintroduce the idea of plurally <b>parsable</b> dictionaries and showhowto design plurally <b>parsable</b> dictionaries that can outperform the Tunstall dictionary of the same size on very predictable binary, memoryless sources...|$|E
40|$|(&#x 22;[URL] or {{downloaded}} in a <b>parsable</b> format via the EBI|$|E
40|$|The {{notion of}} a <b>parsable</b> grammar is introduced. A {{definition}} of cover is provided which is a generalization of a well-known definition of cover. With this new definition of cover we prove that every <b>parsable</b> grammar is covered by an LR(1) grammar or, if the language is prefic-free, by a strict-deterministic grammar. A consequence of this result is that every LR(k) grammar is covered by an LR(1) or a strict deterministic grammar...|$|E
40|$|AbstractA uniquely <b>parsable</b> grammar (UPG) {{introduced}} by Morita et al. (Acta Inform. 34 (1997) 389) {{is a special}} kind of generative grammar where parsing can be performed without backtracking. By extending a UPG, a uniquely parallel <b>parsable</b> grammar (UPPG) was proposed and its unique parallel parsability has been investigated. In this paper, we show any one-dimensional cellular automaton, as a parallel language recognition device, can be simply simulated by a parallel reduction in an equivalent UPPG...|$|E
40|$|The {{datasets}} {{contains an}} {{snapshot of the}} OBO ontology repository ([URL] from December 2016. The dataset contains: 	A directory with the ontologies with all downloadable files (files) 	A directory with the ontologies that were not <b>parsable</b> with the OWL API (broken) 	A description of the ontology gathering (README. txt) 	Metadata of the OWL API 4. 2. 8. <b>parsable</b> ontologies (obo 2016. 12. csv) 	Metadata of the OWL API 4. 2. 8. NON-parsable ontologies (failed_obo 2016. 12. csv...|$|E
40|$|A uniquely <b>parsable</b> grammar (UPG) {{introduced}} by Morita et al. (1997) {{is a kind}} of generative grammar, where parsing can be performed without backtracking. In this paper, we investigate a uniquely parallel <b>parsable</b> grammar (UPPG). We give a simple sufficient condition on morphism languages, and show that every such morphism language can be parsed efficiently in parallel by a UPPG. We show that the Fibonacci and Thue-Morse languages, which are instances of such languages, can be parsed in logarithmic time in parallel by UPPGs...|$|E
40|$|Attributed grammars have {{traditionally}} been used for the semantic specification of programming languages and {{for the implementation of}} the translation phase of compilers. We investigate attributed grammars as an efficiently <b>parsable</b> syntactic specification mechanism that can handle many of the non-context-free aspects of programming language syntax. A formal definition of attributed grammars is provided, and the notion of an attributed derivation is examined. We identify a <b>parsable</b> class of attributed grammars, called strong ALL(k), and the corresponding parser is developed {{as an extension of the}} strong LL(k) technique. Algorithms are presented for testing the strong ALL(k) property and for generating the strong ALL(k) parser. Finally, a number of applications are considered, establishing ALL(k) grammars as an effective tool for handling context-sensitivity in programming languages, and for reducing the size of programming language grammars...|$|E
