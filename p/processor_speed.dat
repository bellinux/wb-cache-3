614|908|Public
5|$|Apple {{received}} criticism {{after an}} incremental upgrade to the Mac Pro line following the 2012 WWDC. The line received more default memory and increased <b>processor</b> <b>speed</b> but still used Intel's older Westmere-EP processors {{instead of the}} newer E5 series. The line also lacked then-current technologies like SATA III, USB 3, and Thunderbolt, the last {{of which had been}} added to every other Macintosh at that point. An email from Apple CEO Tim Cook promised a more significant update to the line in 2013. Apple stopped shipping the first-generation Mac Pro in Europe on March 1, 2013 after an amendment to a safety regulation left the professional Mac non-compliant. The last day to order was February 18, 2013. The first generation Mac Pro was removed from Apple's online store following unveiling of the redesigned second generation Mac Pro at a media event on October 22, 2013.|$|E
5|$|When Rovio {{began writing}} new {{versions}} of the game for other devices, new issues came to light. As the team began working on a version for Android systems, they observed {{the large number of}} configurations of device types and {{versions of the}} Android software. The number of combinations of software version, <b>processor</b> <b>speed</b> and even user interfaces was significantly larger than that for the iOS version. Ultimately, the team settled on a minimum set of requirements, even though that left nearly 30 types of Android phones unable to run the game, including some newly released phones. It was released on October 15, 2010. One month after the initial release on Android, Rovio Mobile began designing a lite version of the game for these other devices.|$|E
25|$|Early medical {{animations}} {{were limited}} to basic wire-frame models because of low <b>processor</b> <b>speed.</b> However, rapid evolution in microprocessor design and computer memory has led to animations that are significantly more intricate.|$|E
50|$|Exact <b>processor</b> <b>speeds</b> {{were never}} {{released}} by Microsoft, but {{were believed to}} be comparable to that of low-end Windows computers at that time.|$|R
5000|$|They had {{to support}} a much wider range of machine sizes. Memory ranged from 16 KB to 1 MB and <b>processor</b> <b>speeds</b> from a few {{thousand}} instructions per second to 500,000.|$|R
25|$|Some {{operating}} systems and other software {{continue to use}} the customary binary prefixes in displays of memory, disk storage capacity, and file size, but SI prefixes in other areas such as network communication <b>speeds</b> and <b>processor</b> <b>speeds.</b>|$|R
25|$|The iMac was {{continually}} updated after its initial release. Aside from increasing specifications (<b>processor</b> <b>speed,</b> video RAM and hard-disk capacity), Apple replaced Bondi Blue with new colors. Throughout its lifespan, the iMac {{was released in}} a total of thirteen colors.|$|E
25|$|The {{air-cooled}} IBM Blue Gene supercomputer architecture trades <b>processor</b> <b>speed</b> for {{low power}} consumption so that {{a larger number of}} processors can be used at room temperature, by using normal air-conditioning. The second-generation Blue Gene/P system has processors with integrated node-to-node communication logic. It is energy-efficient, achieving 371 MFLOPS/W.|$|E
25|$|A Mobile Athlon XPs (Athlon XP-M) using a given core is {{physically}} {{identical to the}} equivalent desktop Athlon XPs counterpart, only differing by the configuration used to achieve a given performance level. Processors are usually binned and selected to become a mobile processor by their ability run a given <b>processor</b> <b>speed</b> while supplied with a lower (than desktop) voltage. This results in lower power consumption, longer battery life, and reduced heat over using a normal desktop part. Additionally Mobile XPs feature not being multiplier-locked and generally higher-rated maximum operating temperatures, requirements intended for better operation within the tight thermal constraints within a notebook PCâ€”but also making them attractive for overclocking.|$|E
25|$|Intrinsity's main {{selling point}} was its Fast14 technology, {{a set of}} design tools {{implemented}} in custom EDA software, for using dynamic logic and novel signal encodings to permit greater <b>processor</b> <b>speeds</b> in a given process than naive static design can offer.|$|R
40|$|For Part 1 see ibid. vol. 22, no. 3 (2002). A massively {{parallel}} reconfigurable <b>processor</b> <b>speeds</b> up the logic operators {{performed in the}} learning hardware. The approach uses combinatorial synthesis methods developed {{within the framework of}} the logic synthesis approach in digital-circuit-design automatio...|$|R
40|$|The authors {{propose a}} learning-hardware {{approach}} as a generalization of evolvable hardware. A massively parallel, reconfigurable <b>processor</b> <b>speeds</b> up logic operators performed in learning hardware. The approach uses combinatorial synthesis methods developed {{within the framework}} of the logic synthesis in digital-circuit-design automatio...|$|R
25|$|In {{computational}} complexity theory, computer algorithms of exponential complexity {{require an}} exponentially increasing amount of resources (e.g. time, computer memory) {{for only a}} constant increase in problem size. So for an algorithm of time complexity 2x, if a problem of size x=10 requires 10 seconds to complete, and a problem of size x=11 requires 20 seconds, then a problem of size x=12 will require 40 seconds. This kind of algorithm typically becomes unusable at very small problem sizes, often between 30 and 100 items (most computer algorithms {{need to be able}} to solve much larger problems, up to tens of thousands or even millions of items in reasonable times, something that would be physically impossible with an exponential algorithm). Also, the effects of Moore's Law do not help the situation much because doubling <b>processor</b> <b>speed</b> merely allows you to increase the problem size by a constant. E.g. if a slow processor can solve problems of size x in time t, then a processor twice as fast could only solve problems of size x+constant in the same time t. So exponentially complex algorithms are most often impractical, and the search for more efficient algorithms is one of the central goals of computer science today.|$|E
2500|$|Although {{in terms}} of {{hardware}} the 6600 {{was not on the}} leading edge, Cray invested considerable effort into the design of the machine in an attempt to enable it to run as fast as possible. Unlike most high-end projects, Cray realized that there was considerably more to performance than simple <b>processor</b> <b>speed,</b> that I/O bandwidth had to be maximized as well in order to avoid [...] "starving" [...] the processor of data to crunch. As he later noted, Anyone can build a fast CPU. The trick is to build a fast system.|$|E
2500|$|The new AirPort Disk feature {{allows users}} to plug a USB hard drive into the AirPort Extreme {{for use as a}} network-attached storage (NAS) device for Mac OS X and Microsoft Windows clients. Users may also connect a USB hub and printer. [...] The {{performance}} of USB hard drives attached to an AirPort Extreme is slower than if the drive were connected directly to a computer. [...] This is due to the <b>processor</b> <b>speed</b> on the AirPort extreme. [...] Depending on the setup and types of reads and writes, performance ranges from 0.5 to 17.5 MB/s for writing and 1.9 to 25.6 MB/s for reading. [...] Performance for the same disk connected directly to a computer would be 6.6 to 31.6 MB/s for writing and 7.1 to 37.2 MB/s for reading.|$|E
25|$|A common {{method of}} {{processing}} and extracting meaning from natural language is through semantic indexing. Although these indexes require a {{large volume of}} user input, {{it is expected that}} increases in <b>processor</b> <b>speeds</b> and decreases in data storage costs will result in greater efficiency.|$|R
40|$|Energy-efficiency and power-awareness for {{electronic}} {{systems have been}} important design issues in hardware and software implementations. We consider the scheduling of periodic hard real-time tasks along with the allocation of processors under a given energy constraint. Each processor type could be associated with its allocation cost. The objective of this work is to minimize the entire allocation cost of processors so that the timing and energy constraints are both satisfied. We develop approximation algorithms for processor types with continuous <b>processor</b> <b>speeds</b> or discrete <b>processor</b> <b>speeds.</b> The capability of the proposed algorithms was evaluated {{by a series of}} experiments, and it was shown that the proposed algorithms always derived solutions with system costs close to those of optimal solutions in the experiments. Keywords: Energy-aware systems, Task scheduling, Real-tim...|$|R
40|$|With <b>processor</b> <b>speeds</b> {{continuing}} to outpace the memory subsystem, cache missing memory operations continue to {{become increasingly important}} to application performance. In response to this continuing trend, most modern processors now support hardware (HW) prefetchers, which act to reduce the missing loads observed by an application...|$|R
5000|$|MK802 II: Modified {{form and}} {{slightly}} increased <b>processor</b> <b>speed</b> ...|$|E
5000|$|... reduce {{permanently}} reduce <b>processor</b> <b>speed,</b> 1 {{to enable}} or 0 to disable ...|$|E
5000|$|... dps {{dynamically}} change <b>processor</b> <b>speed</b> {{based on}} load, 1 to enable or 0 to disable ...|$|E
40|$|As the {{gap between}} memory and <b>processor</b> <b>speeds</b> {{continues}} to widen, cache efficiency is an increasingly important component of processor per$ormance. Compiler techniques {{have been used to}} improve instruction and data cache performance for virtually indexed caches by mapping code and data with temporal locality t...|$|R
40|$|Fueled by {{increasing}} <b>processor</b> <b>speeds</b> and high speed interconnection networks, advances in {{high performance computer}} architectures have allowed the development of increasingly complex large scale parallel systems. For computational scientists, programming these systems efficiently is a challenging task. Understanding {{the performance of their}} parallel applications i...|$|R
5000|$|Dynamic Front Side Bus Throttling (some mobile models), {{where the}} speed of the FSB is reduced in half, which by {{extension}} reduces the <b>processor's</b> <b>speed</b> in half. Thus the processor goes to a low power consumption mode called Super Low Frequency Mode that helps extend battery life.|$|R
50|$|It runs {{applications}} {{which have}} {{been converted into a}} compact Dalvik Executable (.dex) format suitable for systems that are constrained in terms of memory and <b>processor</b> <b>speed.</b>|$|E
5000|$|Buttons and LEDs are {{typically}} {{located on the}} front of the case; some cases include additional I/O ports, temperature and <b>processor</b> <b>speed</b> monitors in the same area.|$|E
5000|$|On October 12, 2010, several {{specifications}} of Pre 2, including <b>processor</b> <b>speed</b> and memory, were leaked on France's SFR website, {{prior to}} its official launch on October 22.|$|E
50|$|Socket PAC418 <b>processors</b> reach <b>speeds</b> of 800 MHz.|$|R
50|$|Socket PAC611 <b>processors</b> reach <b>speeds</b> up to 1.66 GHz.|$|R
40|$|Abstract: Nowadays, we need {{to speed}} up solving {{computer}} problems such as sorting. Because of limitations in <b>processor's</b> <b>speed,</b> using parallel algorithms is inevitable. In parallel algorithms, because of cost limitations and architecture complexity, it's not suitable {{to increase the number}} of <b>processors</b> to <b>speed</b> up. This is also infeasible where we have plenty of data. In this paper we issue a new sorting algorithm. The algorithm is implemented on ILLIAC architecture. The aim of issued algorithm is to reduce total cost of sorting with a trade off between the number of processors and execution time...|$|R
50|$|In 2015, the Amazon Fire TV (2nd Generation) was {{released}} with improved <b>processor</b> <b>speed</b> and 4K UHD support.Amazon Fire TV {{is also available}} in the United Kingdom, Germany, and Japan.|$|E
50|$|Early medical {{animations}} {{were limited}} to basic wire-frame models because of low <b>processor</b> <b>speed.</b> However, rapid evolution in microprocessor design and computer memory has led to animations that are significantly more intricate.|$|E
5000|$|BogoMips are Linus's own invention. The linux kernel version 0.99.11 (dated 11 July 1993) {{needed a}} timing loop (the time {{is too short}} and/or needs to be too exact for a non-busy-loop method of waiting), which must be {{calibrated}} to the <b>processor</b> <b>speed</b> of the machine. Hence, the kernel measures at boot time how fast {{a certain kind of}} busy loop runs on a computer. [...] "Bogo" [...] comes from [...] "bogus", i.e, something which is a fake. Hence, the BogoMips value gives some indication of the <b>processor</b> <b>speed,</b> but it is way too unscientific to be called anything but BogoMips.|$|E
40|$|Over {{the last}} few decades, corpus-linguistic methods have {{established}} themselves as among {{the most powerful and}} versatile tools to study language acquisition, processing, variation, and change. This development has been driven in particular by the considerations in (1). (1) a. technological progress (e. g., <b>processor</b> <b>speeds</b> as well as hard drive and RAM sizes) ...|$|R
25|$|Clock rate of a {{processor}} chip {{refers to the}} frequency at which the central processing unit (CPU) is running. It is used {{as an indicator of}} the <b>processor's</b> <b>speed,</b> and is measured in clock cycles per second or the SI unit hertz (Hz). For basic calculators, the speed can vary from a few hundred hertz to the kilohertz range.|$|R
40|$|As <b>processor</b> <b>speeds</b> {{increase}} {{relative to}} memory speeds, memory bandwidth is rapidly becoming the limiting performance factor for many applications. Several approaches to bridging this performance gap have been suggested. This paper examines one approach, access ordering, and pushes its limits to determine bounds on memory performance. We present several access-ordering schemes, and compare their performance, developing analytic models and partially validating these with benchmark timings on the Intel i 860 XR. 1. Introduction <b>Processor</b> <b>speeds</b> are increasing {{much faster than}} memory speeds, thus memory bandwidth is rapidly becoming the limiting performance factor for many applications, particularly scientific computations. Proposed solutions range from software prefetching [4, 16, 27] and iteration space tiling [5, 8, 9, 18, 32, 38], to address transformations [12, 13], unusual memory systems [3, 10, 33, 36], and prefetching or non-blocking caches [1, 6, 34]. Here we take one technique, [...] ...|$|R
