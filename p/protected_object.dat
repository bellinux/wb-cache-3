72|357|Public
2500|$|An {{alternative}} {{approach is to}} simulate capabilities using commonly supported hierarchical domains; in this approach, each <b>protected</b> <b>object</b> must reside in an address space that the application does not have access to; the kernel also maintains a list of capabilities in such memory. [...] When an application needs to access an object protected by a capability, it performs a system call and the kernel then checks whether the application's capability grants it permission to perform the requested action, {{and if it is}} permitted performs the access for it (either directly, or by delegating the request to another user-level process). [...] The performance cost of address space switching limits the practicality of this approach in systems with complex interactions between objects, but it is used in current operating systems for objects that are not accessed frequently or which are not expected to perform quickly.|$|E
50|$|A <b>protected</b> <b>object</b> {{consists}} of encapsulated private data (which {{can only be}} accessed from within the <b>protected</b> <b>object),</b> and procedures, functions and entries which are guaranteed to be mutually exclusive (with the only exception of functions, which are required to be side effect free and can therefore run concurrently with other functions). A task calling a <b>protected</b> <b>object</b> is blocked if another task is currently executing inside the same <b>protected</b> <b>object,</b> and released when this other task leaves the <b>protected</b> <b>object.</b> Blocked tasks are queued on the <b>protected</b> <b>object</b> ordered by time of arrival.|$|E
50|$|<b>Protected</b> <b>object</b> {{entries are}} similar to procedures, but {{additionally}} have guards. If a guard evaluates to false, a calling task is blocked and added to the queue of that entry; now another task can be admitted to the <b>protected</b> <b>object,</b> as no task is currently executing inside the <b>protected</b> <b>object.</b> Guards are re-evaluated whenever a task leaves the <b>protected</b> <b>object,</b> as {{this is the only}} time when the evaluation of guards can have changed.|$|E
40|$|<b>Protected</b> <b>objects</b> are new {{features}} of Ada 95 that overcome {{the limitations of}} tasks in Ada 83, support more efficient communication, and provide mutually exclusive access to shared data. Transforming large concurrent software systems, that were written in Ada 83, to software systems using <b>protected</b> <b>objects</b> would make maintenance easier and improve system performance dramatically. In this paper the semantics of rendezvous and <b>protected</b> <b>objects</b> is examined, a group of hypotheses is developed, an algorithm that transforms serving tasks written in Ada 83 into <b>protected</b> <b>objects</b> in Ada 95 is presented, and finally an example is given to demonstrate applications of this algorithm. 1. 1 Keywords Ada, serving tasks, <b>protected</b> <b>objects,</b> transformatio...|$|R
40|$|This paper {{outlines}} the short-comings of rendezvous and {{the advantages of}} <b>protected</b> <b>objects</b> {{as a means of}} synchronization in Ada 95. A common Ada benchmark suite, ACES, gives the misleading impression that <b>protected</b> <b>objects</b> are cheaper per se. This work shows that the main benefit of <b>protected</b> <b>objects</b> stems from the potential {{to reduce the number of}} context switches. Based on the latter observation, a general model to translate rendezvous into <b>protected</b> <b>objects</b> is developed. This model is further refined to replace entire server tasks that make calls to or accept rendezvous. A quantitative evaluation shows the benefits of <b>protected</b> <b>objects</b> for each approach and illustrates that the number of context switches can be reduced at least by 50 % when tasks with rendezvous are replaced by <b>protected</b> <b>objects</b> resulting in significant execution time savings for applications requiring many synchronizations. 1 Introduction In a concurrent language entities for threaded execution (tasks) and method [...] ...|$|R
5000|$|Ada {{provides}} <b>protected</b> <b>objects</b> {{that have}} visible protected subprograms or entries {{as well as}} rendezvous.|$|R
5000|$|After {{setting the}} object to protect {{to work and}} {{initially}} pairing the two wireless token devices with each other, the <b>protected</b> <b>object</b> refuses operation when exceeding the set distance between token and <b>protected</b> <b>object.</b>|$|E
5000|$|A {{wireless}} communication distance metrics sets the <b>protected</b> <b>object</b> to [...] "locked", {{as soon as}} the set distance level between paired transmitter and receiver of a wireless signal transmission is exceeded. The <b>protected</b> <b>object</b> returns to status [...] "unlocked" [...] {{as soon as the}} distance gets lesser and the received signal strength level higher than set limit.Transmitters may be worn by the owner of an object, whereas the other receiver item gets attached to the <b>protected</b> <b>object</b> for logically protecting it to usage by the owner only.|$|E
50|$|Simple {{solutions}} {{make use}} of passive RFID tokens, thus requiring a higher transmission level from a reader attached to the <b>protected</b> <b>object</b> and illuminating the token for response. Chosen frequency band and allowed maximum transmission power level define the possible reach for the response from the token {{in the vicinity of}} the <b>protected</b> <b>object.</b>|$|E
40|$|The {{monograph}} {{concerns the}} problems of determining rules of stress-strain state change of two-layer rock mass “washes-carbon” while mining flat coal seam under <b>protected</b> <b>objects</b> by the example of mines in Western Donbass. Rational process parameters of coal seam mining under <b>protected</b> <b>objects</b> are the research result. The monograph is for engineers, employees of higher educational institutions, research institutes, and engineering companies of coal industry...|$|R
5000|$|AuthZ API which {{implements}} the NT kernel Security Reference Monitor in {{user mode}} for applications to <b>protect</b> <b>objects.</b>|$|R
50|$|In 1960 the oak was {{declared}} a natural monument and {{included in the}} list of <b>protected</b> <b>objects</b> in Lithuania.|$|R
5000|$|Each shared {{resource}} has {{an associated}} ceiling level, {{which is the}} maximum preemption level of all the tasks that access this <b>protected</b> <b>object.</b>|$|E
50|$|Denkmalgeschütztes Objekt is a <b>protected</b> <b>object</b> {{listed on}} the Austrian {{cultural}} property list as kept by the Federal Monuments Office known as the Bundesdenkmalamt (BDA).|$|E
50|$|Tamper-evident {{describes}} a device or process that makes unauthorized {{access to the}} <b>protected</b> <b>object</b> easily detected. Seals, markings or other techniques may be tamper indicating.|$|E
5000|$|... #Caption: Emblem of the International Committee of the Blue Shield for marking <b>protected</b> <b>objects</b> per the Hague Convention of 1954.|$|R
5000|$|... #Caption: Emblem for marking <b>protected</b> <b>objects</b> per the Hague Convention of 1954. Most European {{countries}} {{use this}} symbol on buildings designated as National Heritage Sites.|$|R
40|$|History and the {{relevance}} of design patterns • Detailed coverage of some popular existing patterns – a simple example: The Proxy pattern – case study The Proxy Pattern • Context: – situations in which access to an object should be deferred • In graphical application, <b>protect</b> <b>objects</b> whose display is expensive or slow (e. g., a picture) • In network application, facilitate access to distributed objects (e. g., {{make it easy for}} a client to find a server) • In OS application, <b>protect</b> <b>objects</b> from unauthorized acces...|$|R
50|$|Basic {{infrastructure}} requirements with wireless locking {{are very}} low. There are no additional server function requiremements beyond {{public key infrastructure}} standards. The infrastructure requirement to include wireless receiver to protected objects via integration or using dongles is state-of-the-art. All tampering may be detected automatically. Attachment of receiver/transmitter in dongle shaping to <b>protected</b> <b>object</b> is easily made via USB port. Small security application will make use of protection mechanisms of operating system of <b>protected</b> <b>object.</b> Neither dongle nor protected unit may be comprimsed as long as any tampering of security application gets detected.|$|E
5000|$|The metrics {{options for}} {{detecting}} separation of <b>protected</b> <b>object</b> and authenticated user {{have to take}} into account various physical phenomena and thus offer a variety of signal processing to overcome ...|$|E
50|$|Calls to entries can be requeued {{to other}} entries {{with the same}} signature. A task that is requeued is blocked and added to the queue of the target entry; {{this means that the}} <b>protected</b> <b>object</b> is {{released}} and allows admission of another task.|$|E
40|$|The Ravenscar {{profile is}} a {{restricted}} {{subset of the}} Ada 95 tasking model [...] {{designed to provide a}} certifiable deterministic tasking model that supports schedulability analysis and meets tight memory constraints and performance requirements. Centre to Ravenscar is the use of Ada <b>protected</b> <b>objects</b> as the means for ensuring mutually exclusive access to data shared between different tasks. In this report, Circus (a specification language that combines Z and CSP) is used to model Ada <b>protected</b> <b>objects</b> that comply with restrictions of the Ravenscar profile...|$|R
40|$|Several {{arguments}} {{have been}} given to justify the exclusion of dynamic ceiling priorities for <b>protected</b> <b>objects</b> in Ada. These arguments center on semantic complexity, the risks that can be derived from an erroneous usage of dynamic ceilings, and efficiency. But dynamic ceilings are very convenient for multi-moded systems and to dynamically adapting existing program libraries containing <b>protected</b> <b>objects</b> to new applications. This paper proposes a semantics for dynamic ceilings that does not add complexity to the language semantics or inefficiency to the run time system. ...|$|R
50|$|Article 303 of the LOSC states that:"1. States {{have the}} duty to <b>protect</b> <b>objects</b> of an archaeological andhistorical nature found at sea and shall {{cooperate}} for this purpose.|$|R
50|$|Anti-magnetic seal (from plumbum — lead) or {{anti-magnetic}} sticker, {{indicator of}} the magnetic field is a device that serves to indicate the influence of magnetic fields on the <b>protected</b> <b>object</b> and helps to reduce theft of energy (electricity, water, gas, heat, fuel).|$|E
50|$|Application {{is mainly}} known PC locking under for {{authenticated}} log-in conditions. <b>Protected</b> <b>object</b> controlling {{works with the}} token at hands working as a transceiver (RFID passive) or beacon transmitter (RFID active. Currently some similar applications are offered by several no-name vendors and under non-guaranteed specification.|$|E
50|$|Chemical repellents mimic natural {{substances}} that repel or deter animals, {{or they are}} designed to be so irritating to a specific animal or type of animal that the targeted animal will avoid the <b>protected</b> <b>object</b> or area. Some chemical repellents combine both principles. There are many homemade deer repellent recipes on the web.|$|E
40|$|The Ravenscar {{profile is}} {{a subset of}} the Ada 95 tasking model: it is certifiable, deterministic, {{supports}} schedulability analysis, and meets tight memory constraints and performance requirements. A central feature of Ravenscar is the use of <b>protected</b> <b>objects</b> to ensure mutually exclusive access to shared data. We give a semantics to <b>protected</b> <b>objects</b> using Circus, a combination of Z and CSP, and prove several important properties; {{this is the first time}} that these properties have been verified. Interestingly, all the proofs are conducted in Z, even the ones concerning reactive behaviour...|$|R
50|$|The movable {{heritage}} designated as Bienes de Interes Cultural includes archeological artefacts, archives and large works of art. Such <b>protected</b> <b>objects</b> {{may well be}} kept in a building which is itself a BIC.|$|R
5000|$|... {{participation}} in disaster relief and other emergencies on the specified <b>protected</b> <b>objects</b> and structures in waterways (together with the Ministry of Emergency Situations and the Coast Guard of the Federal Security Service Border Service) ...|$|R
50|$|A 1998 patent {{describes}} {{a device that}} can scare off birds from wind turbines, aircraft, and other sensitive installations by way of microwave energy pulses. Using frequencies from 1 GHz to about 40 GHz, the warning system generates pulses of milliseconds duration, which are claimed to be sensed by the birds' auditory systems. It is believed this may cause them to veer away from the <b>protected</b> <b>object.</b>|$|E
5000|$|In October 2014 it {{appeared}} in the media information that [...] "Channel One" [...] won the case. The channel's spokesman said that [...] "the Russian legislation does not provide such a <b>protected</b> <b>object</b> of copyright, as a format, and protected elements (logo and music screen saver) are not used channel". Representatives of the company [...] "White Media" [...] said that were dissatisfied with this decision and intend to appeal against the court's decision.|$|E
50|$|As {{offshore}} drilling {{moves to the}} Arctic seas, icebreaking vessels are needed to supply cargo and equipment to the drilling sites and protect the drillships and oil platforms from ice by performing ice management, which includes for example breaking drifting ice into smaller floes and steering icebergs away from the <b>protected</b> <b>object.</b> In the past, such operations were carried out primarily in North America, but today Arctic {{offshore drilling}} and oil production is also going on {{in various parts of}} the Russian Arctic.|$|E
50|$|Features of Ada include: strong typing, {{modularity}} mechanisms (packages), run-time checking, {{parallel processing}} (tasks, synchronous message passing, <b>protected</b> <b>objects,</b> and nondeterministic select statements), exception handling, and generics. Ada 95 added support for object-oriented programming, including dynamic dispatch.|$|R
50|$|The Kulturgüterschutz is the {{institution}} {{in charge of}} the National Heritage Sites of the German-speaking areas of Switzerland. They maintain the inventory of <b>protected</b> <b>objects</b> and also organize the European Heritage Days, which are called Europäischer Tag des Denkmals.|$|R
40|$|Integrating {{concurrent}} and {{object-oriented programming}} as been an active research topic {{since the late}} 1980 s. There is now a plethora of methods for achieving this integration. The majority of approaches have taken a sequential object-oriented language and made it concurrent. A few approaches have taken a concurrent language and made it object-oriented. The most important of this latter case is the Ada 95 language which is an extension to the object-based concurrent programming language Ada 83. Arguably, Ada 95 does not fully integrate its models of concurrency and object-oriented programming. For example. neither tasks nor <b>protected</b> <b>objects</b> are extensible. This paper discusses ways in which <b>protected</b> <b>objects</b> can be made more extensible...|$|R
