8|6|Public
40|$|A new region-based {{coding scheme}} is introduced. It uses {{generalized}} <b>parabolic</b> <b>blending</b> curves for contour coding {{which lead to}} visually preferable smooth contours and support good local controllability. A rate-distortion criterion is applied to decide which regions {{should be used for}} motion compensation and for optimizing the region contours. The conditions for optimal regions in a rate-distortion sense are derived. Simulation results are presented. A gain of about 2 dB in PSNR for region-based motion compensation with optimized regions over block-based motion compensation at very low bit-rates is reported. Keywords: very low bit-rate video coding, optimal contours, rate-distortion theory, region-based coding, generalized <b>parabolic</b> <b>blending</b> 1 INTRODUCTION SPIE Symposium on Visual Communications and Image Processing 96, March 96, Orlando Region-based video coding schemes are expected to yield better compression ratios and a better visual quality than existing block-based video compres [...] ...|$|E
40|$|AbstractAn {{extension}} of Overhauser's <b>parabolic</b> <b>blending</b> interpolation {{is given by}} introducing a tension-like behaviour to the interpolation curves. This is achieved by pulling Overhauser's parabolas towards the chords between the data points by means of straightness factors, and establishing {{at the same time}} the smoothness of the interpolation curves at those data points by means of appropriate weight functions...|$|E
40|$|In {{this paper}} <b>parabolic</b> <b>blending</b> {{surfaces}} are defined along {{a chain of}} polyhedron edges. The profile curve of each sweep surface generated for a given edge is a conic section, and every point of it moves on a conic section around a vertex. According to this, the patches at the corners are given in rational biquadratic form and they join to the cylindrical surfaces replacing the edges with 1 st order continuity...|$|E
40|$|We {{present an}} {{approach}} for converting {{a path of}} multiple continuous linear segments into a trajectory that satisfies velocity and acceleration constraints and closely follows the given path without coming to a complete stop at every waypoint. Our method applies <b>parabolic</b> <b>blends</b> around waypoints to improve speed. In contrast to established methods that smooth trajectories with <b>parabolic</b> <b>blends,</b> our method {{does not require the}} timing of waypoints or durations of blend phases. This makes our approach particularly useful for robots that must follow kinematic paths that are not explicitly parametrized by time. Our method chooses timing automatically to achieve high performance while satisfying the velocity and acceleration constraints of a given robot...|$|R
40|$|ABSTRACT. In {{this study}} dynamic {{equations}} of a Stanford type spherical robot is developed. In the work {{space of the}} robot, straight line trajectory is chosen for the end effector. On this trajectory, robot travels with different time functions. These functions are cubic segment, bang-bang <b>parabolic</b> <b>blend,</b> simple harmonic, cycloid, and 3 - 4 - 5 polynomial. Total consumed energy curves are obtained with respect to travel times for each trajectory. Results show that cubic segment trajectory function spends minimum energy...|$|R
40|$|This paper {{presents}} a novel manipulation trajectory generating algorithm that constructs trajectories from learned motion harmonics and user defined constraints. The algorithm uses functional eigenanalysis to learn motion harmonics from demonstrated motions {{and then use}} the motion harmonics to compute the optimal trajectory that resembles the demonstrated motions and also satisfies the constraints. The algorithm has been tested on five real human motion data sets to obtain motion harmonics and then generate motions of each task for a NAO robot. The generated trajectories were compared with the trajectories generated using linear segment with <b>parabolic</b> <b>blend</b> approach and with the Open Motion Planning Library. The approach can also work with motion planners...|$|R
40|$|B-spline {{curves and}} {{surfaces}} and their suitability for ship hull surface definition are discussed. A {{comparison with other}} curve and surface definition methods, e. g., cubic splines, Bezier curves, <b>parabolic</b> <b>blending</b> is given. Their use both for ab initio curve and surface generation and for fitting existing o#set data is discussed. Comparisons of the data storage requirements are made. The utilization of these concepts in an interactive design program implemented on an Evans and Sutherland Picture System supported by a PDP 11 / 45 and a Xynetics Model 1200 flat plotter are discussed. Initial e#orts in generating numerical control tapes from the resulting data base and the manufacture of towing tank models are discussed. A demonstration of this program and the model manufacturing technique will be given...|$|E
40|$|As {{coordinate}} {{values are}} determined, {{we wish to}} add them to an array and apply an interpolation procedure to the new coordinate values of the array. That is, as the sequence is being increased, it will be interpolated by a cubic fit. We will exhibit two procedures which limit the cubic construction to be one segment behind the last segment of the sequence. That is the input coordinate values are not the end points for the cubic segment being constructed. Another procedure will include this last input coordinate value as end coordintte values for this last cubic segment being generated. The method of <b>parabolic</b> <b>blending</b> for the curve and surface interpolation originally conceived by A. W. Overhauser [1] is applied {{as well as two}} procedures employing three points and one vector. As will. be seen, these methods lend themselves to real time curve generation...|$|E
40|$|This paper {{presents}} {{a method to}} smoothly interpolate a given sequence of solid orientations using circular blending quaternion curves. Given three solid orientations, a circular quaternion curve is constructed that interpolates the three orientations. Therefore, given four orientations q iΓ 1; q i; q i+ 1; q i+ 2, there are two circular quaternion curves C i and C i+ 1 which interpolate the triples of orientations (q iΓ 1; q i; q i+ 1) and (q i; q i+ 1; q i+ 2), respectively; thus, both C i and C i+ 1 interpolate the two orientations q i and q i+ 1. Using a similar method to the <b>parabolic</b> <b>blending</b> of Overhauser [16], we generate a quaternion curve Q i (t) which interpolates the two orientations q i and q i+ 1 while smoothly blending the two circular quaternion curves C i (t) and C i+ 1 (t) with a blending function f(t) of degree (2 k Γ 1). The quaternion curve Q i has the same derivatives (up to order k) with C i at q i and with C i+ 1 at q i+ 1, respectively. By connectin [...] ...|$|E
40|$|The forward/inverse kinematics, {{trajectory}} {{planning and}} control {{system for a}} mobile omni-directional robot are analyzed and implemented. For kinematic analysis each wheel of the robot has been modeled as a "higher pair" joint. Both the forward and inverse kinematic solutions of the robot are dealt with. The trajectory planning for the robot is done on two levels, a global robot trajectory and individual wheel trajectories. A simple, Linear Segment with <b>Parabolic</b> <b>Blends,</b> trajectory is used on the local, wheel level. On the global level the robot {{can be made to}} move along higher order trajectories. A PID control system for the robot is implemented for this purpose. Using a hierarchical control scheme the wheel encoder feedback is converted to global motion feedback. This control scheme does not account for wheel slippage...|$|R
40|$|Abstract. This {{investigation}} {{studies the}} speed design of lift-up mechanism in a welfare vehicle that lowers and raises a seat {{from the side}} door of the vehicle. The seat functions like a wheelchair as it is landed to the ground. A parallelogram configuration is adopted in the mechanism design. A parallelogram linkage, in which a link rod is shaped as a cam, governs {{the motion of the}} mechanism. The cam pair mechanism, like a motion-generator cam, determines the motion to expand the lift-up mechanism. The system is kinematically analyzed. The constraint relations, velocity equations, and acceleration equations of the mechanism are obtained. The kinematic characteristics of the lift-up mechanism are investigated, which gives the guidance to design the speed of the system. The speed of the lift-up mechanism is investigated, in which the method of linear function with <b>parabolic</b> <b>blends</b> for a path with via-points is adopted in the trajectory planning...|$|R
40|$|LinuxCNC is a {{non-industrial}} PC-based CNC software {{which controls}} motor drivers with step/dir signals via LPT port, {{so that a}} new PC having no LPT port cannot drive an actual machine. However, the simulator mode is useful for playing with g-code onscreen. In order to lean the kinematics and trajectory control of multi-axis machine tools, the way for simulating simultaneously on some PC’s is discussed. In five-axis CNC machine, kinematics is treated as a serial link with five degrees of freedom, just like a robotic manipulator while the cutter is treated as an end effector. Such multi-machine tools are easily simulated by applying the appropriate kinematics module, or the trivial kinematics module which {{is used for the}} most common milling machine. As LinuxCNC employs a trapezoidal velocity profile generator, it is easily shown by using the Sampler module and Excel chart that the accelerated velocity region corresponds to the parabolic region of the joint position vs. time charts. And also, it is shown that the trajectory planner in LinuxCNC uses <b>parabolic</b> <b>blends</b> applying the feed velocity and angles for every segment-segment transition in default operations, or follows G 61 command to stop {{at the end of the}} next segment...|$|R
40|$|In this thesis, {{a method}} is {{presented}} to construct minimum-time robot trajectories for predefined Cartesian end-effector path in a workspace containing obstacles. The method is preferably applied to a geometric collision-free path of a SCARA robot by using the theories of Bezier, B-spline, and <b>parabolic</b> <b>blending</b> curves. The motion of the manipulator is defined by Cartesian control points and represented by a sequence of generated Cartesian knots along the end-effector path which is transformed into sets of joint displacements with one set for each joint. Cubic spline functions are then used to fit the sequence of joint displacements for each joint. The minimum-time trajectory planning problem is formulated as the problem of minimizing the total traveling time subject to constraints on joint positions, velocities, accelerations, jerks, torques and end-effector acceleration. The modified pattern search goal programming method is proposed to solve this nonlinear optimization problem. The computer program, ROBOPATH, has been written to implement the algorithm for a manipulator with two links and two degrees of freedom. The examples show the algorithm to be a useful tool {{in the design of}} manipulators, robot tasks and workcells. The results show that different locations of a path and different path shapes resulted in different total traveling times. Also, as a result, approximation curve techniques gave shorter total traveling time than the interpolation curve technique...|$|E

