10000|1363|Public
5|$|Although no <b>polynomial</b> <b>time</b> {{algorithm}} {{is known for}} this problem, more efficient algorithms than the brute-force search are known. For instance, the Bron–Kerbosch algorithm {{can be used to}} list all maximal cliques in worst-case optimal time, and it is also possible to list them in <b>polynomial</b> <b>time</b> per clique.|$|E
5|$|If {{the unique}} games {{conjecture}} is true, {{then it is}} impossible to approximate MAX 2-SAT, balanced or not, with an approximation constant better than 0.943... in <b>polynomial</b> <b>time.</b>|$|E
5|$|Krom was {{concerned}} primarily with completeness of systems of inference rules, {{rather than with}} the efficiency of algorithms. However, his method leads to a <b>polynomial</b> <b>time</b> bound for solving 2-satisfiability problems.|$|E
2500|$|The {{alternating}} polynomials {{are exactly}} the Vandermonde <b>polynomial</b> <b>times</b> a symmetric polynomial: [...] where [...] is symmetric.|$|R
2500|$|... an {{alternating}} <b>polynomial</b> <b>times</b> a symmetric <b>polynomial</b> is an alternating polynomial; thus all multiples of [...] are alternating polynomials ...|$|R
5000|$|The {{alternating}} polynomials {{are exactly}} the Vandermonde <b>polynomial</b> <b>times</b> a symmetric polynomial: [...] where [...] is symmetric.This is because: ...|$|R
5|$|After many {{improvements}} to these results {{it is now}} known that, for every real number , {{there can be no}} <b>polynomial</b> <b>time</b> algorithm that approximates the maximum clique to within a factor better than , unless P = NP.|$|E
5|$|Perfect graphs {{are defined}} by the {{properties}} that their clique number equals their chromatic number, and that this equality holds also in each of their induced subgraphs. For perfect graphs, {{it is possible to}} find a maximum clique in <b>polynomial</b> <b>time,</b> using an algorithm based on semidefinite programming.|$|E
5|$|Resolution, {{a method}} for {{combining}} pairs of constraints to make additional valid constraints, also leads to a <b>polynomial</b> <b>time</b> solution. The 2-satisfiability problems provide one of two major subclasses of the conjunctive normal form formulas that can be solved in polynomial time; the other of the two subclasses is Horn-satisfiability.|$|E
5000|$|... an {{alternating}} <b>polynomial</b> <b>times</b> a symmetric <b>polynomial</b> is an alternating polynomial; thus all multiples of [...] are alternating polynomials ...|$|R
40|$|A q-analogue of Erdelyi's {{formula for}} the Hankel {{transform}} {{of the product}} of Laguerre polynomials is derived using the quantum linking groupoid between the quantum SU(2) and E(2) groups. The kernel of the q-Hankel transform is given by the 1 φ 1 -q-Bessel function, and then the transform of a product of two Wall <b>polynomials</b> <b>times</b> a q-exponential is calculated {{as a product of}} two Wall <b>polynomials</b> <b>times</b> a q-exponential. Comment: 11 pages; version 2 includes comments by referee...|$|R
30|$|We {{expand the}} Askey-Wilson (AW) density {{in a series}} of {{products}} of continuous q-Hermite <b>polynomials</b> <b>times</b> the density that makes these polynomials orthogonal. As a by-product we obtain the value of the AW integral as well as the values of integrals of q-Hermite <b>polynomial</b> <b>times</b> the AW density (q-Hermite moments of AW density). Our approach uses nice, old formulae of Carlitz and is general enough to venture a generalization. We prove that it is possible and pave the way how to do it. As a result, we obtain a system of recurrences that if solved successfully gives a sequence of generalized AW densities with more and more parameters.|$|R
5|$|Several {{authors have}} {{considered}} approximation algorithms {{that attempt to}} find a clique or independent set that, although not maximum, has size {{as close to the}} maximum as can be found in <b>polynomial</b> <b>time.</b>|$|E
5|$|The {{computational}} {{complexity of}} finding a homomorphism between given graphs is prohibitive in general, but a lot is known about special cases that are solvable in <b>polynomial</b> <b>time.</b> Boundaries between tractable and intractable cases have been an active area of research.|$|E
5|$|The {{homomorphism}} {{problem with}} a fixed graph H {{on the right side}} of each instance is also called the H-coloring problem. When H is the complete graph K'k, this is the graph k-coloring problem, which is solvable in <b>polynomial</b> <b>time</b> for k = 0, 1, 2, and NP-complete otherwise.|$|E
40|$|In this paper, we {{consider}} the constrained inverse min-max spanning tree problems under the weighted Hamming distance. Three models are studied: the problem under the bottleneck-type weighted Hamming distance and two mixed types of problems. We present their respective combinatorial algorithms that all run in strongly <b>polynomial</b> <b>times...</b>|$|R
50|$|In {{mathematical}} analysis, Bernstein's inequality {{is named}} after Sergei Natanovich Bernstein. The inequality states that on the complex plane, within the disk of radius 1, the degree of a <b>polynomial</b> <b>times</b> the maximum value of a polynomial is an upper bound for the similar maximum of its derivative.|$|R
40|$|In this paper, we {{consider}} inverse maximum flow problem under the weighted Hamming distance. Four models are studied: the problem under sum-type weighted Hamming distance; the problem under bottleneck-type weighted Hamming distance and two mixed types of problems. We present their respective combinatorial algorithms that all run in strongly <b>polynomial</b> <b>times...</b>|$|R
5|$|Testing the {{existence}} of a three-page book embedding of a graph, given a fixed ordering of the vertices along the spine of the embedding, has unknown computational complexity: it is neither known to be solvable in <b>polynomial</b> <b>time</b> nor known to be NP-hard. And, although every planar graph has book thickness at most four, it is unknown whether there exists a planar graph whose book thickness is exactly four.|$|E
5|$|The closure problem {{takes as}} input a {{directed}} acyclic graph with weights on its vertices and seeks the minimum (or maximum) weight of a closure, a set of vertices with no outgoing edges. (The problem may be formulated for directed graphs without the assumption of acyclicity, but with no greater generality, because {{in this case it}} is equivalent to the same problem on the condensation of the graph.) It may be solved in <b>polynomial</b> <b>time</b> using a reduction to the maximum flow problem.|$|E
5|$|The pseudoarboricity of a graph G {{is defined}} by analogy to the arboricity as the minimum number of pseudoforests into which its edges can be partitioned; equivalently, it is the minimum k such that G is (k,0)-sparse, or the minimum k such that the edges of G can be {{oriented}} to form a directed graph with outdegree at most k. Due to the matroid structure of pseudoforests, the pseudoarboricity may be computed in <b>polynomial</b> <b>time.</b>|$|E
40|$|Inelastic {{electron}} scattering form factors for 10 B are fitted with <b>polynomial</b> <b>times</b> Gaussian expressions in the variable y = (bq/ 2) ** 2 to extract electromagnetic transition strengths at the photon point. Comment: 10 pages, background {{material for the}} A = 8 - 10 Energy Levels of Light Nuclei, TUNL Nuclear Data Evaluation Projec...|$|R
2500|$|... (As an aside, {{there is}} never reason to use a {{polynomial}} with a zero [...] term. [...] Recall that a CRC is {{the remainder of the}} message <b>polynomial</b> <b>times</b> x^n divided by the CRC polynomial. [...] A polynomial with a zero [...] term always has [...] as a factor. So if [...] is the original CRC polynomial and , then ...|$|R
40|$|AbstractThe inverse {{optimization}} {{problem is to}} modify the weight (or cost, length, capacity and so on) such that a given feasible solution becomes an optimal solution. In this paper, we consider the inverse min–max spanning tree problem under the weighted sum-type Hamming distance. For the model considered, we present its combinatorial algorithm that runs in strongly <b>polynomial</b> <b>times...</b>|$|R
5|$|Although {{there exist}} <b>polynomial</b> <b>time</b> {{algorithms}} {{to find a}} matrix having given row and column sums, the solution may be far from unique: any submatrix {{in the form of}} a 22 identity matrix can be complemented without affecting the correctness of the solution. Therefore, researchers have searched for constraints on the shape to be reconstructed that can be used to restrict the space of solutions. For instance, one might assume that the shape is connected; however, testing whether there exists a connected solution is NP-complete. An even more constrained version that is easier to solve is that the shape is orthogonally convex: having a single contiguous block of squares in each row and column.|$|E
5|$|Because {{different}} embeddings {{may lead}} to different dual graphs, testing whether one graph is a dual of another (without already knowing their embeddings) is a nontrivial algorithmic problem. For biconnected graphs, it can be solved in <b>polynomial</b> <b>time</b> by using the SPQR trees of the graphs to construct a canonical form for the equivalence relation of having a shared mutual dual. For instance, the two red graphs in the illustration are equivalent according to this relation. However, for planar graphs that are not biconnected, this relation is not an equivalence relation {{and the problem of}} testing mutual duality is NP-complete.|$|E
5|$|In {{computer}} science, 2-satisfiability, 2-SAT or just 2SAT is a computational {{problem of}} assigning values to variables, {{each of which}} has two possible values, in order to satisfy a system of constraints on pairs of variables. It is a special case of the general Boolean satisfiability problem, which can involve constraints on more than two variables, and of constraint satisfaction problems, which can allow more than two choices for the value of each variable. But in contrast to those more general problems, which are NP-complete, 2-satisfiability can be solved in <b>polynomial</b> <b>time.</b>|$|E
5000|$|... (As an aside, {{there is}} never reason to use a {{polynomial}} with a zero [...] term. Recall that a CRC is {{the remainder of the}} message <b>polynomial</b> <b>times</b> x^n divided by the CRC polynomial. A polynomial with a zero [...] term always has [...] as a factor. So if [...] is the original CRC polynomial and , then ...|$|R
5000|$|Differentiating {{the power}} series {{representation}} of a generalized Laguerre <b>polynomial</b> k <b>times</b> leads to ...|$|R
50|$|Program that computes a 100-term <b>polynomial</b> 500000 <b>times,</b> and repeats it {{ten times}} (used for benchmarking).|$|R
5|$|In {{order to}} produce a Horn instance, no two {{variables}} that appear in the same clause of the renamable Horn instance should appear positively in that clause; this constraint {{on a pair of}} variables is a 2-satisfiability constraint. By finding a satisfying assignment to the resulting 2-satisfiability instance, Lewis shows how to turn any renamable Horn instance into a Horn instance in <b>polynomial</b> <b>time.</b> By breaking up long clauses into multiple smaller clauses, and applying a linear-time 2-satisfiability algorithm, it is possible to reduce this to linear time.|$|E
5|$|In some cases, these {{algorithms}} can {{be extended}} to other, non-perfect, classes of graphs as well. For instance, in a circle graph, the neighborhood of each vertex is a permutation graph, so a maximum clique in a circle graph can be found by applying the permutation graph algorithm to each neighborhood. Similarly, in a unit disk graph (with a known geometric representation), there is a <b>polynomial</b> <b>time</b> algorithm for maximum cliques based on applying the algorithm for complements of bipartite graphs to shared neighborhoods of pairs of vertices.|$|E
25|$|An {{algorithm}} {{which runs}} in <b>polynomial</b> <b>time</b> {{but which is}} not strongly polynomial is said to run in weakly <b>polynomial</b> <b>time.</b>|$|E
40|$|Abstract. We {{answer a}} {{question}} posed by Vitaly Bergelson, showing that in a totally ergodic system, the average of a product of functions evaluated along <b>polynomial</b> <b>times,</b> with <b>polynomials</b> of pairwise differing degrees, converges in L 2 to {{the product of the}} integrals. Such averages are characterized by nilsystems and so we reduce the problem to one of uniform distribution of polynomial sequences on nilmanifolds. 1...|$|R
40|$|Abstract. We {{prove the}} L 2 {{convergence}} for an ergodic average {{of a product}} of functions evaluated along <b>polynomial</b> <b>times</b> in a totally ergodic system. For each set of polynomials, we {{show that there is}} a particular factor, which is an inverse limit of nilsystems, that controls the limit behavior of the average. For a general system, we prove the convergence for certain families of polynomials...|$|R
40|$|AbstractWe {{discuss the}} {{numerical}} integration of <b>polynomials</b> <b>times</b> non-polynomial weighting functions in two dimensions arising from multiscale finite element computations. The proposed quadrature rules are significantly {{more accurate than}} standard quadratures and are better suited to existing finite element codes than formulas computed by symbolic integration. We validate this approach by introducing the new quadrature formulas into a multiscale finite element method for the two-dimensional reaction–diffusion equation...|$|R
