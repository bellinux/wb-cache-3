31|416|Public
50|$|The high {{performance}} of the Model 75 was attributed to half a dozen advanced features, including Parallel arithmetic, Overlapped memory fetch and <b>Parallel</b> <b>addition</b> for address calculation.|$|E
50|$|The Computron was an {{electron}} tube designed {{to perform the}} <b>parallel</b> <b>addition</b> and multiplication of digital numbers. It was conceived by Richard L. Snyder, Jr., Jan A. Rajchman, Paul Rudnick and the digital computer group at the laboratories of the Radio Corporation of America {{under the direction of}} Vladimir Zworykin. Development began in 1941 under contract OEM-sr-591 to Division 7 of the National Defense Research Committee of the United States Office of Research and Development.|$|E
40|$|This paper {{describes}} the fastest abacus adder with modified <b>parallel</b> <b>addition</b> module. The Chinese abacus adder was previously presented using shift-up module and <b>parallel</b> <b>addition</b> module that compose thermometric conversion. In this paper, we present {{improvement in the}} <b>parallel</b> <b>addition</b> adder by combining both existing modules without thermometric conversion. The result shows that the speed of 8 -bit modified abacus adder architecture is 17 % faster than existing <b>parallel</b> <b>addition</b> adder. We compare the adder in terms of delay by using Altera Quartus II tool. Altera Cyclone II device is applied for synthesis and simulation of the adder...|$|E
40|$|International audienceIn {{this paper}} we propose an {{efficient}} algorithm to implement parallel integer multiplication {{by a combination of}} <b>parallel</b> <b>additions,</b> shifts and reads from a memory-resident lookup table dedicated to squares. Such an operator called PIM (parallel integer multiplication) is in fact microprogrammed at the PROM level. Our theoretical approach is included within the framework of time and space parallel complexity theory. The mathematical relation used defines this multiplication operator in terms of a difference of two quadratic expressions, each being computed in <b>parallel</b> by one <b>addition</b> and one shift. This leads to the CPU time for any pair of numbers being constant. Our contribution is above all of practical interest on any massively parallel architecture in the field of scientific and numerical computing...|$|R
40|$|A thought {{experiment}} {{first proposed}} by Sartori is analysed using the <b>parallel</b> velocity <b>addition</b> formula of special relativity. The distances and proper-time intervals between some similarly defined spatial coincidence events {{are found to}} be widely different in different inertial frames. This relativity of space and time intervals is quite distinct from the well-known time-dilatation and length contraction effects of special relativity. Sartori's claimed derivation of the <b>parallel</b> velocity <b>addition</b> formula, assuming relativistic time dilatation, based on the thought experiment, is shown to be fallacious...|$|R
40|$|Abstract — A new {{architecture}} for modulo 2 n+ 1 multi-operand addition (MOMA) of weighted operands is introduced. It {{is based}} on the use of a translator circuit that enables to use n-bit operations for performing the weighted multi-operand addition. Our experimental results indicate that the proposed MOMAs offer significant savings in execution time compared to the previously proposed solutions that either require two <b>parallel</b> <b>additions</b> or a carry-save adder tree with twice the depth of the proposed while they can be implemented in less area in most cases. I...|$|R
40|$|An {{algebraic}} number β∈C with no conjugate of modulus 1 {{can serve as}} {{the base of a}} numeration system (β, A) with <b>parallel</b> <b>addition,</b> i. e., the sum of two operands represented in base β with digits from A is calculated in constant time, irrespective of the length of the operands. In order to allow <b>parallel</b> <b>addition,</b> sufficient level of redundancy must be given to the alphabet A. The complexity of <b>parallel</b> <b>addition</b> algorithm depends heavily on the size #A of the alphabet: the bigger alphabet is considered, the lower complexity of the <b>parallel</b> <b>addition</b> algorithm may be reached, and vice versa. Here we aim to find <b>parallel</b> <b>addition</b> algorithms on alphabets of the minimal possible size, for a given base. As the complexity of these algorithms becomes quite huge in general, we introduce a so-called Extending Window Method (EWM) - in fact an algorithm to construct <b>parallel</b> <b>addition</b> algorithms. This method can be applied on bases β which are expanding algebraic integers, i. e., β whose all conjugates are greater than 1 in modulus. Convergence of the EWM is not guaranteed, nevertheless, we have developed tools for revealing non-convergence, and there is a number of successful applications. Firstly, the EWM provides the same <b>parallel</b> <b>addition</b> algorithms as were previously introduced by A. Avizienis, C. Y. Chow & J. E. Robertson or B. Parhami for integer bases and alphabets. Then, by applying the EWM on selected complex bases β with non-integer alphabets A⊂Z[β], we obtain new results - <b>parallel</b> <b>addition</b> algorithms on alphabets of minimal possible size, which could not be found so far (manually). The EWM is helpful also in the case of block <b>parallel</b> <b>addition.</b> Comment: submitted to Journal of Discrete Algorithms, for implementation and results, see [URL]...|$|E
40|$|<b>Parallel</b> <b>{{addition}},</b> i. e., addition {{with limited}} carry propagation, {{has been so}} far studied for complex bases and integer alphabets. We focus on alphabets consisting of integer combinations of powers of the base. We give necessary conditions on the alphabet allowing <b>parallel</b> <b>addition.</b> Under certain assumptions, we prove the same lower bound {{on the size of}} the generalized alphabet that is known for alphabets consisting of consecutive integers. We also extend the characterization of bases allowing <b>parallel</b> <b>addition</b> to numeration systems with non-integer alphabets. Comment: 7 page, submitted to Acta Polytechnica, Journal of Advanced Engineerin...|$|E
40|$|<b>Parallel</b> <b>addition</b> in integer base is {{used for}} {{speeding}} up multiplication and division algorithms. k-block <b>parallel</b> <b>addition</b> has been introduced by Kornerup in 1999 : instead of manipulating single digits, one works with blocks of fixed length k. The aim {{of this paper is}} to investigate how such notion influences the relationship between the base and the cardinality of the alphabet allowing <b>parallel</b> <b>addition.</b> In this paper, we mainly focus on a certain class of real bases [...] - the so-called Parry numbers. We give lower bounds on the cardinality of alphabets of non-negative integer digits allowing block <b>parallel</b> <b>addition.</b> By considering quadratic Pisot bases, we are able to show that these bounds cannot be improved in general and we give explicit parallel algorithms for addition in these cases. We also consider the d-bonacci base, which satisfies the equation X^d = X^d- 1 + X^d- 2 + [...] . + X + 1. If in a base being a d-bonacci number 1 -block <b>parallel</b> <b>addition</b> is possible on the alphabet A, then #A≥ d+ 1; on the other hand, there exists a k∈N such that k-block <b>parallel</b> <b>addition</b> in this base is possible on the alphabet { 0, 1, 2 }, which cannot be reduced. In particular, addition in the Tribonacci base is 14 -block parallel on alphabet { 0, 1, 2 }. Comment: 21 page...|$|E
30|$|RNS [27, 28] is a non-weighted {{number system}} that {{performs}} <b>parallel</b> carry-free <b>addition</b> and multiplication arithmetic. In DSP applications, which require intensive computations, the carry-free propagation allows for concurrent computation in each residue channel.|$|R
40|$|A thought {{experiment}} {{first proposed}} by Sartori is analysed using the <b>parallel</b> velocity <b>addition</b> formula of special relativity. The spatial and proper-time intervals between some similarly defined spatial coincidence events {{are found to}} be widely different in different inertial frames. This relativity of space and time intervals is quite distinct from the well-known time-dilatation and length contraction effects of special relativity. Sartori’s claimed derivation of the <b>parallel</b> velocity <b>addition</b> formula, assuming relativistic time dilatation, based on the thought experiment, is shown to be fortuitous. PACS 03. 30. +p This paper analyses a thought experiment, that was orginally proposed by Sartori [1], involving two trains T 1 and T 2, moving at different speeds v and u respectively relative to a fixed platform P. It was claimed that the <b>parallel</b> velocity <b>addition</b> relation (PVAR) could be derived from the experiment by assuming the existence of the relativistic time dilatation effect [2]. The derivation will be critically examined below; however, the main purpose of the present paper is a different one. Assuming the PVAR, space and tim...|$|R
40|$|This paper {{introduces}} Multiarmed Bandits, Gaussian {{processes and}} their combi-nation, Gaussian Process Bandits {{as well as}} the problem of selecting candidates for batches when evaluating them in <b>parallel.</b> In <b>addition</b> to the standard GP-UCB successive selection case, two recent algorithms, GP-BUCB and GP-UCB-PE, are introduced, explained and evaluated. ...|$|R
40|$|A new Hermitian semidefinite matrix {{operation}} is studied. This operation—called parallel subtraction—is {{developed from the}} theory of <b>parallel</b> <b>addition.</b> Since the theory of <b>parallel</b> <b>addition</b> is motivated by the analysis of interconnected electrical networks, parallel subraction may be interpreted {{in terms of the}} synthesis of electrical networks. The idea of subtraction is also extended to hybrid addition...|$|E
40|$|International audienceParallel {{addition}} in integer base is {{used for}} speeding up multiplication and division algorithms. k-block <b>parallel</b> <b>addition</b> has been introduced by Kornerup in [14]: instead of manipulating single digits, one works with blocks of fixed length k. The aim {{of this paper is}} to investigate how such notion influences the relationship between the base and the cardinality of the alphabet allowing block <b>parallel</b> <b>addition.</b> In this paper, we mainly focus on a certain class of real bases — the so-called Parry numbers. We give lower bounds on the cardinality of alphabets of non-negative integer digits allowing block <b>parallel</b> <b>addition.</b> By considering quadratic Pisot bases, we are able to show that these bounds cannot be improved in general and we give explicit parallel algorithms for addition in these cases. We also consider the d-bonacci base, which satisfies the equation X d = X d− 1 + X d− 2 + · · · + X + 1. If in a base being a d-bonacci number 1 -block <b>parallel</b> <b>addition</b> is possible on an alphabet A, then #A d + 1; on the other hand, there exists a k ∈ N such that k-block <b>parallel</b> <b>addition</b> in this base is possible on the alphabet { 0, 1, 2 }, which cannot be reduced. In particular, addition in the Tribonacci base is 14 -block parallel on alphabet { 0, 1, 2 }...|$|E
40|$|Graduation date: 1967 This thesis {{discusses}} {{a method}} of fast multiplication by <b>parallel</b> <b>addition</b> of summands. A logical element that performs this <b>parallel</b> <b>addition</b> is defined, and examples of the element realized with threshold logic are shown. Relations between the type of logical element used, and the speed and cost of the multiplier are discussed. The optimum type of logical element is defined, and two examples of a multiplier using this optimum element are discussed. By assuming some hypothetical propagation times for the various elements, a multiply time of 500 ns is predicted for an eighty-bit multiplier...|$|E
40|$|Abstract: To make {{addition}} operations {{more efficient}} <b>parallel</b> prefix <b>addition</b> {{is a better}} method. In this paper 64 -bit <b>parallel</b> prefix <b>addition</b> has been implemented {{with the help of}} cells like black cell and grey cell operations for carry generation and propagation. This process gives high speed computations with high fan-out and makes carry operations easier. Xilinx 14. 1 vivado tool has been used for the simulation of proposed 64 -bit adder. The comparison can be made with the help various range of inputs and the proposed parallel prefix adder has produced high speed computation and also efficient in terms of number of transistors and their topology and number of nodes. Keywords [...] -parallel prefix adder; dot operators and logic cells; high speed adder; 64 - bit addition. I...|$|R
50|$|In <b>addition,</b> <b>parallel</b> {{studies are}} being {{performed}} {{to test the}} ability to track whole cloud/storm systems with the composite images generated at the AMRC.|$|R
40|$|A thought {{experiment}} {{first proposed}} by Sartori is analysed using the <b>parallel</b> velocity <b>addition</b> formula of special relativity. The distances and proper-time intervals between some similarly defined spatial coincidence events {{are found to}} be widely different in different inertial frames. This relativity of space and time intervals is quite distinct from the well-known time-dilatation and length contraction effects of special relativity. Sartori's claimed derivation of the <b>parallel</b> velocity <b>addition</b> formula, assuming relativistic time dilatation, based on the thought experiment, is shown to be fortuitous. Comment: 11 pages, 5 figures. v 2 has a simplifed presentation using directly the Reciprocity Principle. References changed, typos removed. v 3 has much improved presentation arriving at same conclusions as v 1 and v 2. References changed. Two additional figures. v 3 Added Note explains errors in earlier versions. See also arXiv: 0807. 0158. References adde...|$|R
40|$|AbstractInspired {{simultaneously}} {{from the}} theory of network synthesis and from {{the theory of}} means for positive operators, we introduce the notions of direct and inverse addition of order p for pairs of convex sets in a locally convex topological linear space. In this way a general formalism is introduced which allows us, on the one hand, to recover the operations of series and <b>parallel</b> <b>addition</b> derived from network connections {{as well as the}} notions of arithmetic and harmonic means for positive operators and, on the other hand, to recover the main binary operations on convex sets appearing in Convex Analysis...|$|E
40|$|AbstractAlthough many {{sophisticated}} parallel algorithms now exist, most of {{them are}} not sensitive to properties of the input which can be determined only at run-time. For example, in the case of <b>parallel</b> <b>addition</b> in shared memory models, we intuitively understand that we should not add those inputs whose value is zero. A technique which exploits this idea may beat the general lower bound for addition if the count of nonzero operants is much smaller than the numbers to be added. In this paper, we device such algorithms for two fundamental problems of parallel computation. Our model of computation is the CRCW PRAM. We first provide a randomized algorithm for <b>parallel</b> <b>addition</b> which never errs and computes the result in O(log m) expected parallel time, where m is the count of nonzero entries among the n numbers to be added. This algorithm uses O(m) shared space. We then use this result to solve an interesting problem of processor identification. All our techniques enjoy the following properties: 1. (1) They never produce an erroneous answer. 2. (2) If T is the actual parallel time and E(T) its expected value, then Prob {T > k · E(T) } ≤ n−c, where k is arbitrary and c > 1 is linear on k and can be specified by the implementor of the algorithm. 3. (3) Our algorithms do not know m initially, but they produce an accurate estimate for it...|$|E
40|$|Based on the two-step {{modified}} signed-digit (MSD) algorithm, {{we present}} a one-step algorithm for the <b>parallel</b> <b>addition</b> and subtraction of two MSD numbers. This algorithm is reached by classifying the three neighboring digit pairs into 10 groups and then making a decision on the groups. It has only a look-up truth table, and can be further formulated by eight computation rules. A joint spatial encoding technique is developed to represent both the input data and the computation rules. Furthermore, an optical correlation architecture is suggested to implement the MSD adder in parallel. An experimental demonstration is also given. (C) 1996 Society of Photo-Optical instrumentation Engineers...|$|E
5000|$|Windows Vista {{includes}} Microsoft Management Console 3.0 (MMC), which introduced several enhancements, including {{support for}} writing [...]NET snap-ins using Windows Forms and running multiple tasks in <b>parallel.</b> In <b>addition,</b> snap-ins present their UI {{in a different}} thread than that in which the operation runs, thus keeping the snap-in responsive, even while doing a computationally intensive task.|$|R
30|$|To {{take full}} {{advantage}} of the parallel capabilities of GPUs, we must sensibly organise the processes associated with simulating the network through the construction of appropriate kernels to best to perform tasks in <b>parallel.</b> In <b>addition</b> to this, the memory associated with state variables must be managed appropriately given that memory access can present a significant bottleneck during GPU-based computations.|$|R
50|$|The carry-skip {{optimization}} problem for variable block sizes and multiple levels for an arbitrary device process node was solved by Thomas W. Lynch in. This reference {{also shows that}} carry-skip addition {{is the same as}} <b>parallel</b> prefix <b>addition</b> and is thus related to, and for some configurations identical to, the Hans Carlson, Brent and Kung, Kogge-Stone adder {{and a number of other}} adder types.|$|R
40|$|Redundant {{number system}} was {{proposed}} {{in order to}} solve the carry-propagation problem. Although it provides a carry-free <b>parallel</b> <b>addition,</b> this represen-tation {{requires a lot of}} space to store itself. Many conversions from the redundant number system into another number representation have been introduced to decrease the storage usage. This paper proposes a generic algorithm in order to convert the redundant number representation into the complement number representation. The proposed algorithm can perform the conversion of a number in any integer radix and eliminates the carry chain of the traditional method. The proofs of the proposed algorithm in term of cor-rectness are also included in this paper...|$|E
40|$|The {{number of}} {{positive}} and negative carries in the addition of two independent random signed digit expansions of given length is analyzed asymptotically for the $(q, d) $-system and the symmetric signed digit expansion. The results include expectation, variance, covariance between the positive and negative carries and a central limit theorem. Dependencies between the digits require determining suitable transition probabilities to obtain equidistribution on all expansions of given length. A general procedure is described to obtain such transition probabilities for arbitrary regular languages. The number of iterations in von Neumann's <b>parallel</b> <b>addition</b> method for the symmetric signed digit expansion is also analyzed, again including expectation, variance and convergence to a double exponential limiting distribution. This analysis is carried out in a general framework for sequences of generating functions...|$|E
40|$|This paper {{describes}} {{the design of}} arithmetic circuits based on hybrid integrated resonant tunneling diodes and heterostructure field-effect transistors. The key components are depth- 2 parallel counters consisting of multiple terminal threshold gates. In particular, we propose a novel <b>parallel</b> <b>addition</b> scheme by combining threshold logic and systolic VLSI-algorithms for bit-level computations. The approach is motivated by the demand for locally interconnected circuit modules to solve the wiring problem in nanoelectronic circuits. 1 Introduction During the last decades the progress in microelectronics primarily results from the scaling of the devices {{and the development of}} information processing systems such as microprocessors and memories. Today, originating from the possibility to fabricate semiconductor heterostructures with atomic layer thickness, there are tremendous activities in research and development of devices so small that quantum mechanical effects become relevant for thei [...] ...|$|E
40|$|AbstractIn this paper, {{we propose}} an {{interval}} {{version of the}} generalized accelerated overrelaxation methods, which we refer to as IGAOR, for solving the linear complementarity problems, LCP (M, q), and develop a class of multisplitting IGAOR methods which can be easily implemented in <b>parallel.</b> In <b>addition,</b> {{in regards to the}} H-matrix with positive diagonal elements, we prove the convergence of these algorithms and illustrate their efficiency through our numerical results...|$|R
40|$|We define RN-codings as radix-β signed {{representations}} of numbers for which rounding {{to the nearest}} is always identical to truncation. After giving characterizations of such representations, we investigate some of their properties, and we suggest algorithms for conversion to and from these codings. 1 introduction We are interested in representations or integer or real numbers that are particular cases of signed-digit representations. It is well-known that in radix β ≥ 2, every integer (real number) can be represented by a finite (infinite) digit chain, with digits in the digit set {−a, −a + 1, [...] ., +a − 1, +a}, provided that 2 a + 1 ≥ β. If 2 a + 1 ≥ β + 1 then some numbers can be represented {{in more than one}} way and the number system is said to be redundant. Redundancy makes it possible 1 to perform fast, fully <b>parallel,</b> <b>additions</b> [1], or to perform the four arithmetic operations on-line, i. e., digit-serially, most significant digit first [8, 4]. And yet, signed-digit representations, either redundant or not, naturally appea...|$|R
50|$|Zutter won {{one of the}} events, the pommel horse. He {{was also}} the runner-up in two more events, the vault and the <b>parallel</b> bars. In <b>addition,</b> he competed in the {{horizontal}} bar event, but without success.|$|R
40|$|International audienceBipartite systems show {{remarkable}} {{variations in}} their topological asymptotic properties, e. g., in their degree distribution. Such variations {{depend on the}} underlying growth dynamics. A scenario of particular importance is when the two partitions of the bipartite structure do not grow at an equal rate. Here, {{we focus on the}} case where one of the partitions can be assumed to be fixed while the other partition grows in time as observed in the codon-gene or alphabet-word network. We show that subtle changes in growth dynamics, particularly in the attachment kernel, can lead to drastic changes of the emergent topological properties. We present a detail analysis of various growth strategies, including sequential and <b>parallel</b> <b>addition</b> of nodes, as well as with and without replacement attachment kernels. Analytical results have been compared with stochastic simulations as well as with real systems showing in all cases an excellent agreement...|$|E
40|$|This paper {{describes}} the specification, simulation {{and implementation of}} a <b>parallel</b> <b>addition</b> algorithm based on the recursive methodology. The features of this recursive addition algorithm are regularity, modularity, local interconnections, intensive pipelining and concurrency which are advantageous in real-time signal processing. The recursivity of the approach to be described allows high-level addition structures to be parameterized and built into a silicon compilation environment which may facilitate design automation in VLSI signal processing. The algorithm has been proven by a mixed-mode simulation which shows a favorable 155. 5 ns worst case bandwidth at 1. 56 w power dissipation for a 32 -bit 5 mu m NMOS version. Comparison of the recursive algorithm with carry lookahead addition (CLA), carry propagate addition (CPA), Brent/Kung CLA, conditional sum addition and carry select addition {{is in favor of}} the recursive addition at word sizes smaller or equal to 16. link_to_subscribed_fulltex...|$|E
40|$|Abstract. This paper reports record-setting {{performance}} for the ellipticcurve method of integer factorization: for example, 604. 99 curves/second for ECM stage 1 with B 1 = 8192 for 280 -bit integers on a single PC. The state-of-the-art GMP-ECM software handles 171. 42 curves/second for ECM stage 1 with B 1 = 8192 for 280 -bit integers using all four cores of a 2. 4 GHz Core 2 Quad Q 6600. The extra speed takes advantage of extra hardware, specifically two NVIDIA GTX 280 graphics cards, using a new ECM implementation introduced in this paper. Our implementation uses Edwards curves, relies on new <b>parallel</b> <b>addition</b> formulas, and is carefully tuned for the highly parallel GPU architecture. On a single GTX 280 the implementation performs 22. 66 million modular multiplications per second for a general 280 -bit modulus. GMP-ECM, using all four cores of a Q 6600, performs 17. 91 million multiplications per second. This paper also reports speeds on other graphics processors: for example...|$|E
50|$|Exploration {{continued}} {{at a steady}} pace and by 1995 there were over 1,900 wells above the 60th <b>parallel.</b> In <b>addition,</b> aboriginal groups settled numerous land claims. The Inuvialuit settled the first land claim in 1984, followed by the Sahtu and Gwichʼin. By the late 1990s, companies once again seriously considered a pipeline. The Canadian government sold mineral claim rights, leading to C$400 million in bids and over C$1 billion in work commitments.|$|R
40|$|On {{the basis}} of signed-digit negabinary representation, <b>parallel</b> two-step <b>addition</b> and {{one-step}} subtraction can be performed for arbitrary-length negabinary operands.; The arithmetic is realized by signed logic operations and optically implemented by spatial encoding and decoding techniques. The proposed algorithm and optical system are simple, reliable, and practicable, {{and they have the}} property of parallel processing of two-dimensional data. This leads to an efficient design for the optical arithmetic and logic unit. (C) 1997 Optical Society of America...|$|R
40|$|We {{describe}} an efficient {{implementation of a}} hierarchy of algorithms for multiplication of dense matrices over the field with two elements (F 2). In particular we present our implementation – in the M 4 RI library – of Strassen-Winograd matrix multiplication and the “Method of the Four Russians for Multiplication” (M 4 RM) and compare it against other available implementations. Good performance is demonstrated on AMD’s Opteron processor and particulary good performance on Intel’s Core 2 Duo processor. The open-source M 4 RI library is available as a stand-alone package as well {{as part of the}} Sage mathematics system. In machine terms, addition in F 2 is logical-XOR, and multiplication is logical-AND, thus a machine word of 64 bits allows one to operate on 64 elements of F 2 in parallel: at most one CPU cycle for 64 <b>parallel</b> <b>additions</b> or multiplications. As such, element-wise operations over F 2 are relatively cheap. In fact, in this paper, we conclude that the actual bottlenecks are memory reads and writes and issues of data locality. We present our empirical findings in relation to minimizing these and give an analysis thereof...|$|R
