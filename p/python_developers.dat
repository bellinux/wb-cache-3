18|21|Public
500|$|The {{community}} of <b>Python</b> <b>developers</b> has also contributed over 86,000 software modules (...) to the Python Package Index (PyPI), the official repository of third-party libraries for Python.|$|E
50|$|As a language, Converge is {{designed}} to offer the features of ICON in a visual style suited to <b>Python</b> <b>developers.</b>|$|E
5000|$|Python [...] {{bindings}} {{have been}} developed for GeoTrellis as a sub-project called GeoPySpark that enables <b>Python</b> <b>developers</b> to access and use the GeoTrellis library.|$|E
5000|$|Cython is {{particularly}} popular among scientific users of Python, {{where it has}} [...] "the perfect audience" [...] according to <b>Python</b> <b>developer</b> Guido van Rossum. Of particular note: ...|$|R
50|$|The Python Conference (PyCon) is {{an annual}} {{convention}} for the discussion {{and promotion of}} the Python programming language. It originated in the United States but is also held in many other countries that have active <b>Python</b> <b>developer</b> communities.|$|R
40|$|The {{objective}} for the <b>Python</b> Web <b>Developer</b> Appliance {{project is}} to facilitate both learning how to develop and developing web applications using Python. The <b>Python</b> Web <b>Developer</b> Appliance includes the leading Python web development frameworks and supporting libraries pre-installed and ready use, alongside a complete open-source software stack for building and deploying web applications. The appliance represents an attempt to take the ”batteries included” philosoph...|$|R
5000|$|The {{community}} of <b>Python</b> <b>developers</b> has also contributed over 86,000 software modules (...) to the Python Package Index (PyPI), the official repository of third-party libraries for Python.|$|E
50|$|Storm is a Python {{programming}} {{library for}} object-relational mapping between {{one or more}} SQL databases and Python objects. It allows <b>Python</b> <b>developers</b> to formulate complex queries spanning multiple database tables to support dynamic storage and retrieval of object information.|$|E
5000|$|... hgsubversion is an {{extension}} for Mercurial that allows using Mercurial as a Subversion client. It has been chosen by the <b>Python</b> <b>developers</b> as the preferred method for transitioning from Subversion to Mercurial as their version control system, once it is production quality.|$|E
50|$|David Beazley is an American {{software}} engineer. He {{has made}} significant contributions to the <b>Python</b> <b>developer</b> community, which includes writing the definitive Python reference text Python Essential Reference, the SWIG software tool for creating Python C extensions, and the PLY parsing tool. He has served on the program committees for PyCon and the O'Reilly Open Source Convention, and was elected a fellow of the Python Software Foundation in 2002.|$|R
40|$|An exciting, easy-to-follow guide {{illustrating}} the techniques {{to boost the}} performance of Python code, and their applications with plenty of hands-on examples. If you are a programmer who likes the power and simplicity of Python {{and would like to}} use this language for performance-critical applications, this book is ideal for you. All that is required is a basic knowledge of the Python programming language. The book will cover basic and advanced topics so will be great for you whether you are a new or a seasoned <b>Python</b> <b>developer...</b>|$|R
5000|$|He sarcastically {{declared}} in November 2016 that [...] "Python 3 is not Turing complete" [...] due to claims from <b>Python</b> project <b>developers</b> that <b>Python</b> 2 code cannot {{be made to}} run in the Python 3 VM.|$|R
50|$|Later {{versions}} of mod_wsgi may {{be installed in}} one of two ways: The original way was as an Apache module, as is commonly used for many languages. From V4, the 'mod_wsgi express' method is also supported. This is installed as a Python module using setup.py or pip and without needing manual intervention with the Apache configuration. This method simplifies installation for <b>Python</b> <b>developers</b> who are more familiar with Python than with Apache. It also has advantages of virtualization as it creates a local environment without affecting system settings, or requiring root access to install.|$|E
40|$|This is a {{cookbook}} {{and you may}} read the chapters in any order. The recipes need not be read sequentially. There are {{a good amount of}} code examples and relevant screenshots to ease learning pains. The target audience are <b>Python</b> <b>developers</b> with basic knowledge of web 2 py who want to gain further knowledge of web 2 p...|$|E
40|$|If you are {{a quality}} testing professional, or a {{software}} or web application developer looking to create automation test scripts for your web applications, {{with an interest in}} Python, then this is the perfect guide for you. <b>Python</b> <b>developers</b> who need to do Selenium testing need not learn Java, as they can directly use Selenium for testing with this book...|$|E
40|$|Dive into SQLAlchemy, the popular, {{open-source}} code library {{that helps}} Python programmers work with relational databases such as Oracle, MySQL, PostgresSQL, and SQLite. Using real-world examples, this practical guide {{shows you how}} to build a simple database application with SQLAlchemy, and how to connect to multiple databases simultaneously with the same metadata. SQL is a powerful language for querying and manipulating data, but it's tough to integrate it with your application. SQLAlchemy helps you map Python objects to database tables without substantially changing your existing Python code. If you're an intermediate <b>Python</b> <b>developer</b> with knowledge of basic SQL syntax and relational theory, this book serves as both a learning tool and a handy reference...|$|R
25|$|Dynamic typing {{typically}} makes metaprogramming {{easier to}} use. For example, C++ templates are typically more cumbersome to write than the equivalent Ruby or Python code since C++ has stronger rules regarding type definitions (for both functions and variables). This forces a developer to write more boilerplate code for a template than a <b>Python</b> <b>developer</b> would need to. More advanced run-time constructs such as metaclasses and introspection are often harder {{to use in}} statically typed languages. In some languages, such features may also be used e.g. to generate new types and behaviors on the fly, based on run-time data. Such advanced constructs are often provided by dynamic programming languages; {{many of these are}} dynamically typed, although dynamic typing need not be related to dynamic programming languages.|$|R
50|$|The {{manual and}} the sample {{programs}} use <b>Python,</b> although the <b>developers</b> {{are working on}} translating the manual to C++ and providing C++ sample programs.|$|R
40|$|Python is {{optimized}} for quality, productivity, portability, and integration. Hundreds {{of thousands of}} <b>Python</b> <b>developers</b> around the world rely on Python for general-purpose tasks, Internet scripting, systems programming, user interfaces, and product customization. Available on all major computing platforms, including commercial versions of Unix, Linux, Windows, and Mac OS X, Python is portable, powerful and remarkable easy to use. With its convenient, quick-reference format, Python Pocket Reference, 3 rd Edition is the perfect on-the-job reference. More importantly, it's now been refreshe...|$|E
40|$|Build a django content {{management}} system, blog, {{and social}} networking site with James Bennett as he introduces version 1. 1 of the popular Django framework. You'll work {{through the development of}} each project, implementing and running the applications while learning new features along the way. Web frameworks are playing {{a major role in the}} creation of today's most compelling web applications, because they automate many of the tedious tasks, allowing developers to instead focus on providing users with creative and powerful features. <b>Python</b> <b>developers</b> have been particularly fortunate in this are...|$|E
40|$|Get {{to grips}} with a new technology, {{understand}} what it is and what it can do for you, and then get to work with the most important features and tasks. A practical, quick, and hands-on guide for <b>Python</b> <b>developers</b> and hobbyists who want to get started with computer vision with OpenCV. This book is great for developers, hobbyists, and students new to computer vision who are looking to get a good grounding in how to use the OpenCV library. It's assumed that you will have some basic experience in C/C++ programming...|$|E
40|$|So, {{you are a}} QGIS user, {{you love}} this software, and now {{you would like to}} go further and start {{contributing}} ? This presentation will show that anyone can help the QGIS project ! There are indeed many ways to contribute to the project. We go through some of them, by order of difficulty. This presentation covers : * How to contribute as QGIS standard user * How to contribute as an advanced QGIS user * How to contribute as a graphic designer * How to contribute as a cartographer * How to contribute as a <b>Python</b> <b>developer</b> * and even how to contribute as a C++ developer (or : “you didn’t know you where a c++ dev”) Topics like communication, translation, bug triaging, writing plugins, fixing bugs and more will be quickly showed. We will detail the first steps to follow to begin collaborating with the QGIS community and have your first contribution in QGIS...|$|R
50|$|Allura {{began in}} October 2009 as an {{open-source}} reimplementation in <b>Python</b> of the <b>developer</b> tools for SourceForge (previously written in PHP), and was first announced in March 2011. Allura became the default platform for new projects on SourceForge in July 2011.|$|R
5000|$|In Python 2.4 and above, {{both the}} [...] {{function}} and the in-place [...] method take a [...] parameter {{that allows the}} user to provide a [...] "key function" [...] (like [...] in the examples above). In Python 3 and above, use of the key function {{is the only way}} to specify a custom sort order (the previously-supported comparator argument was removed). Before <b>Python</b> 2.4, <b>developers</b> would use the lisp-originated Decorate-Sort-Undecorate (DSU) idiom, usually by wrapping the objects in a (sortkey, object) tuple.|$|R
40|$|At {{some point}} of time many <b>Python</b> <b>developers</b> [...] at least in {{computational}} science [...] will face the situation {{that they want to}} interface some natively compiled library from Python. For binding native code to Python by now a larger variety of tools and technologies are available. This paper focuses on wrapping shared C libraries, using Python's default Ctypes. Particularly tools to ease the process (by using code generation) and some best practises will be stressed. The paper will try to tell a ``step [...] by [...] step'' story of the wrapping and development process, that should be transferable to similar problems...|$|E
40|$|This is a {{tutorial}} style {{book that}} will teach usage of Python tools for GIS using simple practical examples and then {{show you how}} to build a complete mapping application from scratch. The book assumes basic knowledge of Python. No knowledge of Open Source GIS is required. Experienced <b>Python</b> <b>developers</b> who want to learn about geospatial concepts, work with geospatial data, solve spatial problems, and build mapbased applications. This book will be useful those who want to get up to speed with Open Source GIS in order to build GIS applications or integrate GeoSpatial features into their existing a...|$|E
40|$|This {{is a minor}} {{release from}} 0. 3. 2. Highlights include: Renamed series_modules to modules_per_string and parallel_modules to strings_per_inverter. (:issue: 176) Adds the scale_voltage_current_power {{function}} and PVSystem method to support simple array modeling. (:issue: 159) Adds support for SingleAxisTracker objects in ModelChain. (:issue: 169) Add __repr__ method to PVSystem, LocalizedPVSystem, ModelChain, SingleAxisTracker, Location. (:issue: 142) Improve speed of singlediode function by using v_from_i to determine v_oc. Speed is ~ 2 x faster. (:issue: 190) Adds the Simplified Solis clear sky model. (:issue: 148) Fix problem in which the perez function dropped nighttime values. Nighttime values are now set to 0. (:issue: 191) Localize datetime indices in package overview examples. (:issue: 156) Clarify that ModelChain and basic_chain currently only supports SAPM. (:issue: 177) Shorten README. md file and move information to official documentation. (:issue: 182) Change authors to PVLIB <b>Python</b> <b>Developers</b> and clean up setup. py. (:issue: 184) Contributors Will Holmgren Mark Mikofski Johannes Oos Tony Lorenz...|$|E
50|$|Dogtail, an {{open-source}} automated graphical {{user interface}} (GUI) test framework initially developed by Red Hat, consists of free software released under the GNU General Public License (GPL) and is written in <b>Python.</b> It allows <b>developers</b> to build and test their applications. Red Hat announced the release of Dogtail at the 2006 Red Hat Summit.|$|R
50|$|ITK is {{implemented}} in C++. ITK is cross-platform, using the CMake build environment {{to manage the}} compilation process. In addition, an automated wrapping process generates interfaces between C++ and other programming languages such as Java and <b>Python.</b> This enables <b>developers</b> to create software {{using a variety of}} programming languages. ITK's implementation employs the technique of generic programming through the use of C++ templates.|$|R
30|$|While Denpasar 4 {{is now an}} {{official}} ‘smart city’ (AntaraBali 2017), Bali itself {{is home to a}} number of code ‘bootcamps’ such as the Institute of Code, Le Wagon, The Sanur Space and Coding Nomads. Hubud (located in Ubud), for example, not only teaches coding but provides opportunities for professionals to network, co-work and conduct (digital) business. There are also a number of informal and formal coding groups such the Google Developer Group Bali. Indeed, that Livit (which provides startup studio spaces) has a branch in Bali (in addition to Zurich and Denmark) is indicative of Bali’s growing status as a coding setting (and market). Bali also has numerous local web development/design businesses such as Slinky Web Design, DigiBali, Pantun Studio, Bali Website Videos, BaliGatra and BaliWebPro to name a few. And in terms of connections with larger corporate software development, Mitrais exemplifies the capacity for Bali to be a hub within a much larger regional and international software development enterprise (Earl 2016). Jakarta, of course, is home to more corporate entities and regional and global links, which is largely a product of its market size, being the base of operation for a diverse range of industries requiring software. Nonetheless, a cursory review of job vacancies in Bali let alone Indonesia more broadly, also shows a healthy demand for developers. At the time of writing, Livit required the following in Bali: Technical Artist, C# Content Developer, Senior C# Software Engineer, DevOps Engineer, and a <b>Python</b> <b>Developer</b> (Livit 2017).|$|R
40|$|Scripting {{languages}} are ubiquitous in modern software engi-neering {{and are often}} used as the sole language for applica-tion development. However, some applications, specifically scientific and multimedia applications, often have small sec-tions of code that require {{a higher level of}} performance than the host language can deliver. In many cases, the algorithm being optimized is simple and has a clear mapping to hard-ware resources. But, without introducing an intermediate language, developers generally have no direct methods to implement an optimized solution. In this paper, we present the synthetic programming envi-ronment, a run-time system for synthesizing and executing high-performance instruction sequences directly from script-ing languages. Our implementation, available for download, is implemented in Python for PowerPC processors and gives <b>Python</b> <b>developers</b> direct access to system resources for per-formance critical code. We discuss strategies for creating and managing synthetic programs and provide two real-world examples, an interactive particle system and a chem-ical fingerprint comparison tool. 1...|$|E
40|$|Python is an {{accepted}} high-level scripting language {{with a growing}} community in academia and industry. It is used in many scientific applications in many different scientific fields and {{in more and more}} industries (for example, in engineering or life science). In all fields, the use of Python for high-performance and parallel computing is increasing. Several organizations and companies are providing tools or support for Python development. This includes libraries for scientific computing, parallel computing, and MPI. Python is also used on many core architectures and GPUs, for which specific Python interpreters are being developed. Also, Python is used for Grid- and Cloud-aware applications. Many existing libraries support <b>Python</b> <b>developers</b> for that. Python especially is used by scientists and engineers. The talk describes, why Python is used, as well as the specific advantages and current drawbacks of Python for scientific applications. And predictions of future uses of Python are presented, combined with hints and best practices to the get major improvements in the development of distributed and HPC applications...|$|E
40|$|Traditional {{computational}} paradigms {{involved in}} application and shared resources are achieved using mainframe and client-server models. Traditional business applications???like those from SAP, Microsoft, and Oracle???have always been too complicated and expensive. They need a data center with office space, power, cooling, bandwidth, networks, servers, and storage. On top of that, {{it requires a}} team of experts to install, configure, and run them. They need development, testing, staging, production, and failover environments. Cloud computing {{is a better way}} to run your business and applications. Instead of running your applications yourself, cloud computing enabled applications run on a shared data center, to be accessed via the Internet. Currently, cloud computing has become a clich?? in the field of Information Technology. Major technology companies have Cloud Computing services that are both open sourced and commercialized. Google has a cloud computing service called App Engine that can be utilized by Java and <b>Python</b> <b>developers</b> to develop software and access resources on Google???s infrastructure. In this paper, we will explore the Google App Engine cloud computing and how it is used to develop a conference application, allowing users to search and manage conference information...|$|E
50|$|Poser {{includes}} {{a library of}} pre-built, ready-to-use content including body and hand poses, materials, props, facial expressions, hair pieces, lights, cameras and scenes, and a Reyes-based render engine called Firefly which supports nodes {{for the creation of}} complex materials. Furthermore, it provides import of sound, image, and video files, motion capture data and 3D content for the creation of scenes or the addition of new library items. Poser exports content in many 3D formats, and rendered images and animation. The program is capable of material editing, facial photo matching, dynamic hair, dynamic cloth and new figure rigging. Online content is available. <b>Python</b> enables third-party <b>developers</b> to create additional features ranging from custom libraries, rendering engine control panels, metadata editors and utility scripts. An ecosystem of third-party content marketplaces including RuntimeDNA, DAZ3D and Renderosity also exists.|$|R
40|$|Textual {{analysis}} is one {{means by which}} to assess communication type and moderate the influence of network structure in predictive models of individual behavior. However, there are few methods available to incorporate textual content into time-evolving network models. In particular, modeling both the evolution of network topology and textual content change in time-varying communication data poses a difficult challenge. In this work, we propose a Temporally-Evolving Network Classifier (TENC) to incorporate the influence of time-varying edges and temporally-evolving attributes in relational classification models. To facilitate this, we use an evolutionary latent topic approach to automatically discover and label communications between individuals in a network with their corresponding latent topic. The topics of the messages are incorporated into the TENC along with time-varying relationships and temporally-evolving attributes, using weighted, exponential kernel summarization. We evaluate {{the utility of the}} TENC on a real-world classification task, where the aim is to predict the effectiveness of a <b>developer</b> in the <b>python</b> open-source <b>developer</b> network. We take advantage of the textual content in developer emails and bug communications, which both evolve over time. The TENC paired with the latent topics significantly improves performance over the baseline classifiers that only take into account the static properties of the topics and communications. The results show that the TENC can be used to accurately model the complete-set of temporal dynamics in time-evolving communication networks...|$|R
40|$|International audienceTulip is an {{information}} visualization framework {{dedicated to the}} analysis and visualization of relational data. Based on more than 16 years of research and development, Tulip is built on a suite of tools and techniques, {{that can be used}} to address a large variety of domain-specific problems. With, we aim to provide <b>Python</b> and/or C++ <b>developers</b> a complete library, supporting the design of interactive information visualization applications for relational data, that can be customized to address a wide range of visualization problems. In its current iteration, enables the development of algorithms, visual encodings, interaction techniques, data models, and domain-specific visualizations. This development pipeline makes the framework efficient for creating research prototypes as well as developing end-user applications. The recent addition of a complete Python programming layer wraps up Tulip as an ideal tool for fast prototyping and treatment automation, allowing to focus on problem solving, and as a great system for teaching purposes at all education levels...|$|R
