60|59|Public
5000|$|R. A. Spanke and V. E. Benes, N-stage planar optical <b>permutation</b> <b>network,</b> Applied Optics 26, 1226-, 1987 ...|$|E
5000|$|He {{then worked}} for Bell Labs until 1986, [...] {{contributing}} to Kalman filter theory {{as well as}} the Beneš network, a <b>permutation</b> <b>network</b> of the Clos network type. In the 1980s he held a position at Columbia University as well.He has continued to publish independently since 1989.|$|E
40|$|SUMMARY In this paper, {{we propose}} a 1 -cycle {{high-performance}} 3 D bufferless router with a 3 -stage <b>permutation</b> <b>network.</b> The proposed router utilizes the 3 -stage <b>permutation</b> <b>network</b> {{instead of the}} serialized switch allocator and 7 × 7 crossbar to achieve the frequency of 1. 25 GHz in TSMC 65 nm technology. Compared {{with the other two}} 3 D bufferless routers, the proposed router occupies less area and consumes less power consumption. Simulation results under both synthetic and application workloads illustrate that the proposed router achieves less average packet latency than the other two 3 D bufferless routers. key words: 3 D NoC, bufferless router, <b>permutation</b> <b>network</b> 1...|$|E
40|$|AbstractWe {{define a}} class of {{permutations}} called generalized shuffles and study their basic properties. The usual perfect shuffle and some permutations defined by Lenfant belong to that class. Generalized shuffles {{can be used in}} the design of various switching devices, for example rotators, <b>permutation</b> <b>networks,</b> etc., or in parallel processing...|$|R
40|$|A simple {{model to}} {{describe}} the fundamental operation theory of shuffle-exchange-type <b>permutation</b> <b>networks,</b> the finite <b>permutation</b> machine (FPM), is described, and theorems which transform the control matrix result to a continuous compatible vector result are developed. It is found that only 2 n- 1 shuffle exchange passes are necessary, and that 3 n- 3 passes are sufficient, to realize all permutations, reducing the sufficient number of passes by two from previous results. The flexibility of the approach is demonstrated by the description of a stack permutation machine (SPM) which can realize all permutations, and by showing that the FPM corresponding to the Benes (1965) network belongs to the SPM. The FPM corresponding to the network with two cascaded reverse-exchange networks is found to realize all permutations, and a simple mechanism to verify several equivalence relationships of various <b>permutation</b> <b>networks</b> is discussed...|$|R
40|$|The {{sizes of}} <b>permutation</b> <b>networks</b> for special sets of {{permutations}} (like all shifts or shifts of power two) are investigated in vertex-disjoint path mode {{as well as}} in edge-disjoint path model. The study of the planar realization and the search for small but hard sets of permutations are also included. Several asymptotically optimal estimations for distinct subsets of t [...] ...|$|R
40|$|AbstractDeflection routing is a {{promising}} approach for energy and hardware efficient NoCs. Future VLSI designs {{will have an}} increasing susceptibility to failures and breakdowns. The inherent redundancy of NoCs {{can be used to}} tolerate such failures. We extended the non-fault-tolerant CHIPPER router architecture to enable fault-tolerance. This architecture is based on deflection routing and utilizes a <b>permutation</b> <b>network</b> instead of a crossbar. Compared to a crossbar based design, a <b>permutation</b> <b>network</b> allows a faster and smaller router design. Simulations of a 8 × 8 network and more than 30. 000 flit injections show, that our router architecture iscompetitive with existing crossbar based fault-tolerant router architectures...|$|E
40|$|A bit <b>permutation</b> <b>network</b> is an s-stage {{interconnection}} network {{composed of}} d n− 1 d × d crossbar switches in each stage. This class of networks includes {{most of the}} multistage interconnection networks. Recently, Chang et al. [Networks 33 (1999), 261 – 267] showed that an sstage d-nary bit <b>permutation</b> <b>network</b> N with d n inputs (outputs) can be characterized by an (s − 1) -vector (k 1, [...] ., ks− 1), where kt ∈ { 1, [...] ., n − 1 }. In this paper, we give a simple (but not trivial) formula to determine the characteristic vector of a new network G(N) +, which is, approximately, the line digraph of N. We use this formula to obtain relations between some well-studied bi...|$|E
40|$|Many {{papers on}} {{parallel}} random permutation algorithms assume the input size n to be {{a power of}} two and imply that these algorithms can be easily generalized to arbitrary n. We show that this simplifying assumption is not necessarily correct since it {{may result in a}} bias. Many of these algorithms are, however, consistent, i. e., iterating them ultimately converges against an unbiased permutation. We prove this convergence along with proving exponential convergence speed. Furthermore, we present an analysis of iterating applied to a butterfly <b>permutation</b> <b>network,</b> which works in-place and is well-suited for implementation on many-core systems such as GPUs. We also show a method that improves the convergence speed even further and yields a practical implementation of the <b>permutation</b> <b>network</b> on current GPUs...|$|E
40|$|Abstract. This paper {{addresses}} {{the security and}} efficiency issues of the Mix-net based on <b>permutation</b> <b>networks</b> introduced in [1]. We first show that the original construction results in a Mix-net that yields biased permutation, so it gives some advantage to adversaries. A simple repair is provided. We then observe {{that one of the}} original schemes can be improved so that the servers and verifier enjoy more efficient computation and communication. ...|$|R
40|$|A {{parallel}} multigrid algorithm {{for solving}} elliptic partial differential equations is developed and evaluated. A V-cycle multigrid method is altered {{to increase the}} degree of parallelism. A numerical analysis of the resulting concurrent-iteration multigrid algorithm is performed; its architectural implications are considered; highly parallel systems without shared memory are examined (including mesh-connected arrays, mesh-shuffle-connected systems, <b>permutation</b> <b>networks,</b> and direct VLSI embeddings); {{and the results of}} numerical experiments are presented in tables and graphs...|$|R
40|$|AbstractIn this paper, we {{introduce}} {{the concept of}} routing grid {{as a tool for}} analyzing realizability of permutations on bit <b>permutation</b> <b>networks</b> (BPNs). We extend a result by Linial and Tarsi which characterizes permutations realizable on shuffle-exchange networks to any BPNs. A necessary condition for a BPN to be rearrangeable is given, and the rearrangeability of two families of BPNs are explored. Finally, we present a method which may help to tackle one kind of balanced matrix problems whose solution implies an answer to Benes conjecture. Hopefully, our treatment brings some new insight into the problem of permutation routing...|$|R
40|$|Abstract-Permutation {{switching}} is a {{key operation}} in many computer and communication systems. The well-known BeneS and Waksman permutation networks can be constructed with an asymptotically minimum number of switches, but the best routing algorithms for such networks need O ((Ig 4 n/lg Ig n)) time on an n Ig n-processor computer. Other networks {{that can be used}} for permutation switching are Batcher’s sorting networks and Koppelman and Oruq’s self-routing <b>permutation</b> <b>network,</b> but these networks require O(nlgz n) switches and O(lg 2 n) routing time. Using a new composite interconnection network model, this paper presents a self-routing <b>permutation</b> <b>network</b> with O(n Ign) switches and O(Ig 2 n) routing time. More generally, it describes a <b>permutation</b> <b>network</b> with O(kn’+’’k) cost and O(k Ign) routing time for any k; 1 5 k 5 Ig n. This improves Nassimi and Sahni’s routing algorithm that gives O(klg 3 n) routing time for the same cost expression. The only networks capable of permutation switching with O(nIgn) cost and O(lgn) routing time are the AKS sorting network and Upfal’s packet routing network, but the constants hidden in the complexities of these networks are so large that they remain impractical until n gets very large. Index Terms- Concentrator, cube network permutation net-work, radix permuter, radix sorting, self-routing network. I...|$|E
40|$|AbstractChannel graphs {{have been}} widely used in the study of {{blocking}} networks. In this paper, we show that a bit <b>permutation</b> <b>network</b> has a unique channel graph if and only if it is connected, and two connected bit permutation networks are isomorphic if and only if their channel graphs are isomorphic...|$|E
40|$|Abstract. Many {{papers on}} {{parallel}} random permutation algorithms assume the input size n to be {{a power of}} two and imply that these algorithms can be easily generalized to arbitrary n, e. g., by padding the input array to a power of two. We show that this simplifying assumption is not necessarily correct since it {{may result in a}} bias (i. e., not all possible permutations are generated with equal likelihood). Many of these algorithms are, however, consistent, i. e., iterating them ultimately converges against an unbiased permutation. We prove this convergence along with proving exponential convergence speed. Furthermore, we present an analysis of iterating applied to a butterfly <b>permutation</b> <b>network,</b> which works inplace and is well-suited for implementation on many-core systems such as GPUs. We also show a method that improves the convergence speed even further and yields a practical implementation of the <b>permutation</b> <b>network</b> on current GPUs...|$|E
40|$|Abstract. We {{present a}} new garbled circuit {{construction}} for two-party secure function evaluation (SFE). In our one-round protocol, XOR gates are evaluated “for free”, {{which results in}} the corresponding improvement over the best garbled circuit implementations (e. g. Fairplay [19]). We build <b>permutation</b> <b>networks</b> [26] and Universal Circuits (UC) [25] almost exclusively of XOR gates; {{this results in a}} factor of up to 4 improvement (in both computation and communication) of their SFE. We also improve integer addition and equality testing by factor of up to 2. We rely on the Random Oracle (RO) assumption. Our constructions are proven secure in the semi-honest model. ...|$|R
40|$|The {{invention}} herein {{relates to}} a computer organization capable of rapidly processing extremely large volumes of data. A staging memory is provided having a main stager portion consisting {{of a large number}} of memory banks which are accessed in parallel to receive, store, and transfer data words simultaneous with each other. Substager portions interconnect with the main stager portion to match input and output data formats with the data format of the main stager portion. An address generator is coded for accessing the data banks for receiving or transferring the appropriate words. Input and output <b>permutation</b> <b>networks</b> arrange the lineal order of data into and out of the memory banks...|$|R
40|$|SPNs (Substitution <b>Permutation</b> <b>Networks)</b> {{are one of}} the {{important}} architectures used for designing block ciphers. In our study, we applied differential cryptanalysis method for a 3 -round SPN. We have used a 16 -bit input as plaintext and 16 -bit output as ciphertext and chosen the first row of the third S-box of DES (Data Encryption Standard) for the necessary S-box and ShiftRows transformation which is used to permute bytes in AES (Advanced Encryption Standard) for permutation of bits for our SPN. As a result, we have obtained 12 -bit key of 16 -bit key from the last round of the cipher using differential cryptanalysis method. I...|$|R
40|$|Abstract. In {{this paper}} a new {{permutation}} generator is proposed. Each subsequent permutation is generated in a cellular <b>permutation</b> <b>network</b> by reversing a suffix/prefix {{of the preceding}} permutation. The sequence of suffix/prefix sizes is computed by a complex parallel counter in O(1) time per generated object. Suffix/prefix reversing operations are performed {{at the same time}} when the permutation is actually produced. ...|$|E
40|$|In {{this paper}} {{we present a}} {{recognition}} scheme which is both reliable and fast. The scheme comprises the simultaneous harmonized use of three powerful detection algorithms, the hyper <b>permutation</b> <b>network</b> (HPN), a hierarchical contour matching (HCM) algorithm and a cascaded classifier approach. Each algorithm is evaluated separately and afterwards, based on the evaluation results, the fusion of the detection results is performed by a particle filter approach...|$|E
40|$|The {{sizes of}} {{permutation}} networks for special sets of permutations are investigated. The {{study of the}} planar realization {{and the search for}} small but hard sets of permutations are also included. Several asymptotically optimal estimations for distinct subsets of the set of all permutations are established here. The two main results are: (i) an asymptotically optimal <b>permutation</b> <b>network</b> of size 6 Δ N [...] ...|$|E
40|$|Abstract. We aim at {{constructing}} adaptive {{oblivious transfer}} protocols, enjoying fully simulatable security, from various well-known assumptions such as DDH, d-Linear, QR, and DCR. To this end, we present two generic constructions of adaptive OT, {{one of which}} utilizes verifiable shuffles together with threshold decryption schemes, while the other uses <b>permutation</b> <b>networks</b> together with what we call loosely-homomorphic key encapsulation schemes. The constructions follow a novel designing approach called “blind permutation”, which completely differs from existing ones. We then show that specific choices of the building blocks lead to concrete adaptive OT protocols with fully simulatable security in the standard model under the targeted assumptions. Our generic methods can be extended to build universally composable (UC) secure, and leakage-resilient OT protocols...|$|R
40|$|A {{bit error}} rate (BER) -based {{physical}} layer security approach is proposed for finite blocklength. For secure communication {{in the sense of}} high BER, the information-theoretic strong converse is combined with cryptographic error amplification achieved by substitution <b>permutation</b> <b>networks</b> (SPNs) based on confusion and diffusion. For discrete memoryless channels (DMCs), an analytical framework is provided showing the tradeoffs among finite blocklength, maximum/minimum possible transmission rates, and BER requirements for the legitimate receiver and the eavesdropper. Also, the security gap is analytically studied for Gaussian channels and the concept is extended to other DMCs including binary symmetric channels (BSCs) and binary erasure channels (BECs). For fading channels, the transmit power is optimized to minimize the outage probability of the legitimate receiver subject to a BER threshold for the eavesdropper...|$|R
40|$|Motivated by {{problems}} in telecommunication satellites, we investigate rearrangeable <b>permutation</b> <b>networks</b> made of binary switches. A simple counting argument {{shows that the}} number of switches necessary to build a n × n rearrangeable network (i. e. capable of realizing all one-to-one mappings of its n inputs to its n outputs) is at least ! = n_ 2 n - n_ 2 e + o(n) as n→∞. For n = 2 ^r, the r-dimension- al Bene network gives a solution using n_ 2 n - n/ 2 switches. Waksman, and independently Goldstein and Leibholz, improved these networks using n_ 2 n-n+ 1 switches. We provide an extension of this result to arbitrary values of n, using in switches. The routing algorithm used in Beneš networks is also generalized for arbitrary values of n. Finally the fault-tolerance issue of these networks is discussed...|$|R
40|$|A hardware-oriented {{algorithm}} {{for generating}} permutations is presented that takes as a theoretic base an iterative decomposition of the symmetric group Sn into cosets. It generates permutations {{in a new}} order. Simple ranking and unranking algorithms are given. The construction of a permutation generator is proposed which contains a cellular <b>permutation</b> <b>network</b> as a main component. The application of the permutation generator for solving a class of combinatorial problems on parallel computers is suggested...|$|E
40|$|Optical and 3 D {{electronic}} implementations of a rearrangeably non-blocking <b>permutation</b> <b>network</b> {{are compared}} using complexity models. The electronic complexity model {{is based on}} the Thompson model for VLSI, while the optical complexity model is new and based on the characteristics of optoelectronic devices and holographic optical elements. The analysis holds the manufacturing cost, size, and BER of the two implementations equal while comparing their latency. Whether optics is better than electronics depends on the message length. ...|$|E
40|$|In this paper, a {{sequential}} architecture for 88 inverse discrete cosine transform (IDCT) {{based on}} row-column decomposition is described. The sequential one-dimensional IDCT kernel is derived by utilizing vertical projection to fast IDCT algorithm. The matrix transposition network is {{realized with a}} register-based sequential <b>permutation</b> <b>network</b> and the resulting modular two-dimensional architecture can be freely pipelined. Moreover, {{the accuracy of the}} proposed architecture is analyzed in order to fulfil the IEEE standard for 8 8 IDCT...|$|E
40|$|A work-efficient {{deterministic}} NC {{algorithm is}} presented for finding a maximum matching in a bipartite expander graph with any expansion factor fi ? 1. This improves upon a recently presented deterministic NC maximum matching algorithm which {{is restricted to}} those bipartite expanders with large expansion factors (fi Δ ffl; ffl ? 0), and is not work-efficient [1]. Keywords: Bipartite Matching, Expander Graphs, NC, Network Flow. 1. Introduction Finding maximum cardinality matchings in bipartite expander graphs has many applications such as routing <b>networks,</b> sorting <b>networks,</b> <b>permutation</b> <b>networks,</b> and path selection. Note that by Hall's Theorem there is a perfect matching in a bipartite expander graph with expansion factor fi ? 1. Thus we are really finding one of the (potentially many) perfect matchings. Bipartite expander graphs {{are an important part}} of the design of routing networks such as concentrators and superconcentrators [2]. They are also used in self-routing permuta [...] ...|$|R
40|$|With {{the advent}} of new routing methods, the {{distance}} to which a message is sent is becoming relatively less and less important. Thus, assuming no link contention, permutation {{seems to be an}} efficient collective communication primitive. In this paper we present several algorithms for decomposing all-to-many personalized communication into a set of disjoint partial permutations. We discuss several algorithms and study their effectiveness from the view of static scheduling as well as runtime scheduling. An approximate analysis shows that with n processors and assuming that every processor sends and receives d messages to random destinations, our algorithm can perform the scheduling in O(dn ln d) time on an average, and use an expected number of d + log d partial permutations to carry out the communication. We present experimental results of our algorithms on the CM- 5. Index Terms: Loosely synchronous communication, <b>permutation</b> <b>networks,</b> personalized communications, runtime scheduling, S [...] ...|$|R
40|$|We {{consider}} Multimessage Multicasting {{over the}} n processor complete (or fully connected) static network (MMC). We present several fast approximation algorithms with improved approximation bounds for problem instances with small fan-out (maximum {{number of processors}} receiving any given message), but arbitrary degree d, where d is {{the maximum number of}} messages that each processor may send (receive). These problem instances are the ones that arise in practice, since the fan-out restriction is imposed by the applications and the number of processors available in commercial systems. Our algorithms are centralized and require all the communication information ahead of time. Applications where this information is available include iterative algorithms for solving linear equations and most dynamic programming procedures. The Meiko CS- 2 machine and in general computer systems with processors communicating via dynamic <b>permutation</b> <b>networks</b> whose basic switches can act as data replicators (e. g., [...] ...|$|R
40|$|We {{consider}} {{a class of}} comparator networks obtained from the omega <b>permutation</b> <b>network</b> by replacing each switch with a comparator exchanger of arbitrary direction. These networks are all isomorphic to each other, have merging capabilities, {{and can be used}} as building blocks of sorting networks in ways different from the standard merge-sort scheme. It is shown that the bitonic merger and the balanced merger are members of the class. These two networks were not previously known to be isomorphic...|$|E
40|$|In this paper, {{we propose}} a {{practical}} algorithm {{that can be}} used to analyze the block cipher structure known as a Substitution <b>Permutation</b> <b>Network</b> (SPN) with respect to linear and differential cryptanalysis. The algorithm has been applied to 16 -bit ciphers and some realistic 64 -bit ciphers based on 8 × 8 and 4 × 4 Sboxes that possess good cryptographic properties. Experimental data is presented in the paper which demonstrates the usefulness of the algorithm in characterizing the security level of realistic SPN block ciphers. ...|$|E
40|$|Messaging {{system remains}} preeminent as themedium of {{official}} communication. The fear of confidentialitybeing breached {{has led many}} organizations in developingvarious ways in checking the excesses of unwanted users. In themessaging system designed, users are allowed to send andreceive messages with the options of either encrypting the dataor not. The Substitution <b>Permutation</b> <b>Network</b> (SPN), an AESencryption algorithm, implemented in the messaging systemmakes information sent over the network ‘useless’ whencompromised so as to reduce the damage done wheneversensitive and classified information gets to the wrong hands. Theapplication was implemented and tested and {{was found to be}} effective...|$|E
40|$|Abstract-A formal {{mathematical}} model of single instruc-tion stream-multiple data stream (SIMD) machines is defined. It {{is used as}} a basis for analyzing various types of interconnection networks that have been discussed in the literature. The networks are evaluated in terms ofthe lower and upper bounds on the tune required for each of the networks discussed to simulate the other networks. SINM machine algorithms are presented as proofs of the upper time bounds on these simulation tasks. These simulations are used to demonstrate techniques for proving the correctness ofSIMD mach-ine algorithms, i. e., analyzing the simultaneous flow ofN data items among N processors. Processor address masks, a concise notation for activating and deactivating processors, are used in the algorithms. The methods used to prove the lower bounds and to construct (and prove correct) simulation algorithms to show the upper bounds can be generalized and applied to the analysis of other networks. Index Terms-Algorithm correctness, array processors, computer architecture, Illiac IV, interconnection networks, n-cube array, parallel processing, perfect shuffle, <b>permutation</b> <b>networks,</b> SIMD machines, STARAN. I...|$|R
40|$|This paper {{presents}} two algorithms {{for solving}} the linear and the affine equivalence problem for arbitrary permutations (S-boxes). For {{a pair of}} n × n-bit permutations {{the complexity of the}} linear equivalence algorithm (LE) is O(n 3 2 n). The affine equivalence algorithm (AE) has complexity O(n 3 2 2 n). The algorithms are efficient and allow to study linear and affine equivalences for bijective S-boxes of all popular sizes (LE is efficient up to n ≤ 32). Using these tools new equivalent representations are found for a variety of ciphers: Rijndael, DES, Camellia, Serpent, Misty, Kasumi, Khazad, etc. The algorithms are furthermore extended for the case of non-bijective n to m-bit S-boxes with a small value of |n − m | and for the case of almost equivalent S-boxes. The algorithms also provide new attacks on a generalized Even-Mansour scheme. Finally, the paper defines a new problem of S-box decomposition in terms of Substitution <b>Permutations</b> <b>Networks</b> (SPN) with layers of smaller S-boxes. Simple information-theoretic bounds are proved for such decompositions...|$|R
40|$|The {{viewpoints}} of design, programming, {{and application}} of the transportation network (TN) is presented. The TN is a programmable combinational logic network that connects 521 memory modules to 512 processors. The unscrambling of p-ordered vectors to 1 -ordered vectors in one cycle is described. The TN design {{is based upon the}} concept of cyclic groups from abstract algebra and primitive roots and indices from number theory. The programming of the TN is very simple, requiring only 20 bits: 10 bits for offset control and 10 bits for barrel switch shift control. This simple control is executed by the control unit (CU), not the processors. Any memory access by a processor must be coordinated with the CU and wait for all other processors to come to a synchronization point. These wait and synchronization events can be a degradation in performance to a computation. The TN application is for multidimensional data manipulation, matrix processing, and data sorting, and can also perform a perfect shuffle. Unlike other more complicated and powerful <b>permutation</b> <b>networks,</b> the TN cannot, if possible at all, unscramble non-p-ordered vectors in one cycle...|$|R
