39|16|Public
25|$|Selecting a {{directory}} in the Navigation pane {{on the left}} designates it as the current directory, displaying its contents in the Contents pane on the right. However, expanding (+) or collapsing (-) {{a portion of the}} tree without selecting {{a directory}} will not alter the contents of the right pane. The exception to this behavior applies when collapsing a parent of the current directory, in which case the selection is refocused on the collapsed <b>parent</b> <b>directory,</b> thus altering the list in the Contents pane.|$|E
2500|$|In Unix-like systems, DOS, and Windows, the filenames [...] "." [...] and [...] ".." [...] {{have special}} {{meanings}} (current and <b>parent</b> <b>directory</b> respectively). Windows 95/98/ME also uses names like [...] "...", [...] "...." [...] {{and so on}} to denote grandparent or great-grandparent directories. All Windows versions forbid creation of filenames that consist of only dots, although names consist of three dots ("...") or more are legal in Unix.|$|E
2500|$|Determining {{the number}} of {{directory}} entries per cluster is straight forward, each entry occupies 32 bytes, this results in 16 entries per sector for a sector size of 512 bytes. The DOS 5 RMDIR/RD command removes the initial [...] "." [...] (this directory) and [...] ".." [...] (<b>parent</b> <b>directory)</b> entries in subdirectories directly, therefore sector size 32 on a RAM disk is possible for FAT12, but requires 2 or more sectors per cluster. A FAT12 boot sector without the DOS 4 extensions needs 29 bytes before the first unnecessary FAT16B 32-bit number of hidden sectors, this leaves three bytes for the (on a RAM disk unused) boot code and the magic 0x55 0xAA {{at the end of}} all boot sectors. On Windows NT the smallest supported sector size is 128.|$|E
5000|$|Performance loss: For each HTTP request, {{there are}} {{additional}} file-system accesses for <b>parent</b> <b>directories</b> when using [...]htaccess, {{to check for}} possibly existing [...]htaccess files in those <b>parent</b> <b>directories</b> which are allowed to hold [...]htaccess files. It is possible to programatically migrate directives from [...]htaccess to [...] if this performance loss is a concern.|$|R
5000|$|... where name_of_directory {{corresponds}} {{with the name}} of the directory one wishes to delete. There are options to this command such as -p in Unix which removes <b>parent</b> <b>directories</b> if they are also empty.|$|R
5000|$|When enabled, the {{initialization}} vector for filename encryption {{is derived from}} the file's <b>parent</b> <b>directories,</b> causing two files with the same name [...] - [...] but in different directories [...] - [...] to have different encrypted filenames.|$|R
5000|$|A Directory Thread Record stores {{just the}} name of the {{directory}} and the CNID of its <b>parent</b> <b>directory.</b>|$|E
5000|$|On Windows and Unix-like {{operating}} systems, [...] ".." [...] is used {{to access}} the <b>parent</b> <b>directory</b> in a path.|$|E
50|$|This path {{refers to}} a file called File.txt located in the <b>parent</b> <b>{{directory}}</b> of the current directory on drive C:.|$|E
50|$|All {{files and}} {{directories}} in a Files-11 file system are contained inside {{one or more}} <b>parent</b> <b>directories,</b> and eventually under the root directory, the master file directory (see below). The file system is therefore organised in a directed acyclic graph (DAG) structure.|$|R
40|$|To {{determine}} whether a user can access a file in a hierarchical file system a traversal of the directory hierarchy is {{required in order to}} check access control for all the <b>parent</b> <b>directories.</b> This traversal can be especially expensive in a distributed system where the files may be on separate devices. We present two approaches for representing the complete access control for a file and its <b>parent</b> <b>directories</b> such that it can be stored locally with each file in order to avoid traversal. We use the well-known CNF and DNF (Conjunctive and Disjunctive Normal Form) formats to store permission and ownership information compactly for the entire path to a file. An examination of the structure of an existing large shared file system demonstrates the efficacy of our solution. 1...|$|R
50|$|Another {{interesting}} feature {{resulting from}} the BDOS' internal organization of current working directories as relative links to <b>parent</b> <b>directories</b> is the theoretically unlimited directory depth supported by all those above mentioned operating systems - in contrast to MS-DOS/PC DOS (and DR DOS since 1992), where an MS-DOS compatible internal data structure named Current Directory Structure (CDS) limits directory depths {{to a maximum of}} 66 characters.|$|R
5000|$|Another limitation, {{less well}} known, {{is the number}} of directories. The ISO image has a {{structure}} called [...] "path table". For each directory in the image, the path table provides the number of its <b>parent</b> <b>directory</b> entry. The problem is that the <b>parent</b> <b>directory</b> number is a 16-bit number, limiting its range from 1 to 65,535. The content of each directory is written also in a different place, making the path table redundant, and suitable only for fast searching.|$|E
50|$|Under Unix-like {{operating}} systems, {{in order}} to delete a file, one must usually have write permission to the <b>parent</b> <b>directory</b> of that file.|$|E
50|$|In Unix-like {{systems and}} Microsoft Windows, the dot {{character}} represents the working directory of the file system. Two dots (..) represent the <b>parent</b> <b>directory</b> {{of the working}} directory.|$|E
50|$|This {{can create}} a non-explicit (unobvious) tarbomb, which {{technically}} does not contain files with absolute paths or referring <b>parent</b> <b>directories,</b> but still causes overwriting files outside current directory (for example, archive may contain two files with the same path and filename, first {{of which is a}} symlink to some location outside current directory, and second of which is a regular file; then extracting such archive on some tar implementations may cause writing to the location pointed to by the symlink).|$|R
5000|$|The long {{filename}} {{system allows}} a maximum length of 255 UCS-2 characters including spaces and non-alphanumeric characters (excluding the following characters, which have special meaning within the COMMAND.COM command interpreter or {{the operating system}} kernel: \ / : * ? [...] " [...] < > |). This is achieved by chaining up to 20 directory entries of 13 2-byte Unicode characters each. The maximum length of a pathname is 256 characters, which includes all <b>parent</b> <b>directories</b> and the filename. 255-character mixed-case long filename is possible only for files or folders with no sub-folders at the root folder of any drive.|$|R
40|$|Have {{you been}} asked to revise a {{derivation}} and then several months later asked to revert back to the previous derivation code? Or when a project ends, were you asked to remove it from the network to free up space? What if Archival Software is not an option? This paper presents an “archiving ” macro (%Archive()) which takes {{the contents of a}} directory, including subdirectories, and creates a zip file which contains all files and mirrors the <b>parent’s</b> <b>directory</b> structure. Like magic, your code is saved and easily retrieved! Using an elaborate array of SAS ® functions, an X command, and WinZip®, the archiving macro determines the execution location and the contents of the subdirectories associated with that location. With virtually no specified parameters, anyone can archive and look like a pro while doing it...|$|R
5000|$|Header Contents $00-01: T/S {{reference}} to root directory block of this partition ($01/$24). 02: DOS Type ("H") 04-15: Disk label, $A0 padded 16-17: Disk ID 19-1A: DOS Version ("1H") 20-21: T/S {{reference to}} present directory header block 22-23: T/S reference to <b>parent</b> <b>directory</b> header block (set to $00/$00 when {{at the top}} of the directory) 24-25: T/S reference to dir entry in previous directory (set to $00/$00 when {{at the top of}} the directory) 26: Index to <b>parent</b> <b>directory</b> entry ($00 at the top) AB-AC: GEOS border sector AD-BC: GEOS format string (GEOS format Vx.x) ...|$|E
5000|$|When {{multiple}} MDTs are configured for a filesystem, {{the client}} determines on which MDT a given filename resides on by looking up the 128-bit Lustre File Identifier (FID, {{composed of the}} Sequence number and Object ID) of the <b>parent</b> <b>directory</b> in the FID Location Database (FLDB), which maps the Sequence to a specific MDT. Once the MDT of the <b>parent</b> <b>directory</b> is determined, further directory operations (for non-striped directories) take place exclusively on that MDT, avoiding contention between MDTs. For striped directories, the per-directory layout stored on the <b>parent</b> <b>directory</b> provides a hash function and list of MDT objects across which the directory is distributed. The filename is hashed and mapped to a specific MDT shard, which will handle further operations on that file in an identical manner to a non-striped directory. For readdir (...) operations, the entries from each directory shard are returned interleaved in hash order so that a single 64-bit cookie {{can be used to}} determine the current offset within the directory.|$|E
5000|$|... 1 - Each {{subdirectory}} has {{exactly one}} <b>parent</b> <b>directory</b> (not including shortcuts to the directory's location; while such files may have similar icons to the icons of the destination directories, {{they are not}} directories at all).|$|E
5000|$|PalmDOS was {{the first}} {{operating}} system in the family to sport the new BDOS 7.0 kernel with native DOS compatible internal data structures instead of emulations thereof. Replacing the DOS emulation {{on top of a}} CP/M kernel by a true DOS compatible kernel helped a lot in improving compatibility with some applications using some of DOS' internal data structures and also was the key in reducing the resident size of the kernel code even further - a particular requirement for the PDA market. On the other hand, introducing a genuine Current Directory Structure (CDS) imposed a limit on the depth of working directories down to 66 characters (as in MS-DOS/PC DOS), whereas previous issues of DR DOS had no such limitation due to their internal organization of directories as relative links to <b>parent</b> <b>directories</b> instead of as absolute paths. PalmDOS still reported itself as [...] "PC DOS 3.31" [...] to applications {{in order to keep the}} kernel small and not run into compatibility problems with Windows, which would expect the DOSMGR API to be implemented for any DOS version since 5.0.|$|R
5000|$|File System Visualizer, {{also known}} as fsv, is a 3D file browser using OpenGL, created by Daniel Richard G. It is a clone of SGI's fsn file manager for IRIX systems, aimed to run on modern Linux and other Unix-like {{operating}} systems. It is capable of representing file systems in two ways - in MapV mode, files and directories are represented as cuboids of equal height, {{with the size of}} the cuboid representing the size of the file or directory, and in TreeV mode, files and directories are shown in a more conventional tree manner, with links between <b>parent</b> <b>directories</b> and subdirectories, and columns of various height (indicating file size) on top of the directories to represent the files inside. In both of these modes, a standard 2D tree representation of files and directories is displayed on the left of the window. The mouse can be used to rotate the 3D representation of the file system, and an [...] "Eagle Eye" [...] function shows the representation from an overhead view. File System Visualizer is also capable of manipulating the files and directories it shows.|$|R
5000|$|Command line shells on Windows usually use the Windows API {{to change}} the current working {{directory}}, whereas on Unix systems [...] calls the [...] POSIX C function. This means that when the command is executed, no new process is created to migrate to the other directory {{as is the case}} with other commands such as ls. Instead, the shell itself executes this command. This is because, when a new process is created, child process inherits the directory in which the parent process was created. If the [...] command inherits the <b>parent</b> process' <b>directory,</b> then the objective of the command cd will never be achieved.|$|R
5000|$|... "Bar" [...] is in a {{different}} directory {{at the same level}} as the playlist directory. The double-dots reference the <b>parent</b> <b>directory</b> of the playlist directory, then into the sub-directory [...] "Other Music" [...] to reach [...] "Bar".|$|E
50|$|Scriptable snippets {{are often}} {{associated}} {{with one or more}} currently active files. Consequently, variables may also include environment variables and arguments that specify the filename, cursor position, and <b>parent</b> <b>directory</b> among other stats relating to the files in a current editing session.|$|E
5000|$|In {{computer}} programming, ellipsis notation (.. or ...) is used {{to denote}} ranges, an unspecified number of arguments, or a <b>parent</b> <b>directory.</b> Most programming languages other than Perl6 require the ellipsis to be written {{as a series of}} periods; a single (Unicode) ellipsis character cannot be used.|$|E
50|$|For some DoD networks, Active Directory (AD) {{is used to}} {{authenticate}} users. Access to the computer's <b>parent</b> Active <b>Directory</b> is required when attempting {{to authenticate}} with a CAC for a given computer, for the first time. Use of, for example a field replaced laptop computer that was not prepared with the user's CAC before shipment {{would be impossible to}} use without some form of direct access to Active Directory beforehand. Other remedies include establishing contact with the intranet by using public broadband Internet and then VPN to the intranet, or even satellite Internet access via a VSAT system when in locations where telecommunications is not available, such as in a natural disaster location.|$|R
50|$|Files are {{organized}} by storing related files {{in the same}} directory. In a hierarchical filesystem (that is, one in which files and directories {{are organized}} {{in a manner that}} resembles a tree), a directory contained inside another directory is called a subdirectory. The terms parent and child are often used to describe the relationship between a subdirectory and the directory in which it is cataloged, the latter being the <b>parent.</b> The top-most <b>directory</b> in such a filesystem, which does not have a parent of its own, is called the root directory.|$|R
2500|$|While The London Tradesman {{may have}} warned against milliners,in {{the same year}} A General Description of All Trades called {{millinery}} 'a considerable trade" [...] and in 1761, the <b>Parents</b> and Guardians <b>Directory</b> noted that [...] "A milliner, in good business, will not take a girl with less than £40 or £50.' An apprenticeship to a clockmaker, he thought, required a premium of £10 to £40. Furthermore, this same directory suggested the costs {{to set up a}} millinery would require £400 to £500, while it might take only £100-£200 to set up a clockmakers' shop. These were not inconsiderable sums at this time.|$|R
50|$|Path tables {{summarize}} the directory {{structure of the}} relevant directory hierarchy, providing only the directory identifier, {{the location of the}} extent in which the directory is recorded, the length of any extended attributes associated with the directory, and the index of its <b>parent</b> <b>directory</b> path table entry.|$|E
5000|$|A {{directory}} is {{a logical}} section of a file system used to hold files. Directories may also contain other directories. The [...] command {{can be used to}} change into a subdirectory, move back into the <b>parent</b> <b>directory,</b> move {{all the way back to}} the root directory or move to any given directory.|$|E
50|$|Besides inode items, {{files and}} {{directories}} {{also have a}} reference item whose right-hand key value is the object id of their <b>parent</b> <b>directory.</b> The data part of the reference item is the filename that inode is known by in that directory. This allows upward traversal through the directory hierarchy by providing a way to map inodes back to paths.|$|E
5000|$|Usually, on most filesystems, {{deleting}} a file requires write permission on the <b>parent</b> <b>directory</b> (and execute permission, {{in order}} to enter the directory in the first place). (Note that, confusingly for beginners, permissions on the file itself are irrelevant. However, GNU rm asks for confirmation if a write-protected file is to be deleted, unless the -f option is used.) ...|$|E
50|$|By contrast, a {{relative}} path starts from some given working directory, avoiding {{the need to}} provide the full absolute path. A filename can be considered as {{a relative}} path based at the current working directory. If the working directory is not the file's <b>parent</b> <b>directory,</b> a file not found error will result if the file is addressed by its name.|$|E
5000|$|Write {{permission}} on {{the directory}} being migrated (so to speak) is additionally {{required in the}} case where a directory is being re-parented, sciz., moved to a different <b>parent</b> <b>directory.</b> This is because the [...] ".." [...] entry—which can always {{be used as an}} [...] "alias" [...] for its parent if you don't know the parent's name—must be changed within the migrant per se.|$|E
