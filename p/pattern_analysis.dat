3393|3401|Public
25|$|If {{polymerase}} {{chain reaction}} (PCR) tests on infected material are positive, subsequent restriction endonuclease <b>pattern</b> <b>analysis</b> of the amplified outer membrane protein A gene {{can be done to}} determine the genotype.|$|E
25|$|Point <b>pattern</b> <b>analysis</b> {{deals with}} the {{distribution}} of individuals through space, and is used {{to determine whether the}} distribution is random. It also describes the type of pattern and draws conclusions on what kind of process created the observed pattern. Quadrat-density and the nearest neighbor methods are the most commonly used statistical methods.|$|E
25|$|Surface <b>pattern</b> <b>analysis</b> {{deals with}} {{spatially}} continuous phenomena. After the {{spatial distribution of}} the variables is determined through discrete sampling, statistical methods are used to quantify the magnitude, intensity, and extent of spatial autocorrelation present in the data (such as correlograms, variograms, and peridograms), {{as well as to}} map the amount of spatial variation.|$|E
40|$|The {{challenge}} of building efficient reusable software artifacts {{is the focus}} of several schools of thought in software engineering. Software <b>analysis</b> <b>patterns</b> are recurring and reusable models. However, there are several deficiencies with <b>analysis</b> <b>patterns.</b> These deficiencies make it difficult to use <b>analysis</b> <b>patterns</b> as efficient reusable artifacts. This paper proposes eight essential properties to evaluate pattern reusability. In addition, the concept of Stability <b>Analysis</b> <b>Patterns</b> is introduced. This paper contrasts stable <b>analysis</b> <b>patterns</b> with some <b>analysis</b> <b>patterns</b> using the proposed properties. 1...|$|R
40|$|<b>Analysis</b> <b>patterns</b> are {{reusable}} computational artefacts {{aimed at}} the analysis stage of the software development process. Although <b>analysis</b> <b>patterns</b> can facilitate the work of analysts and developers, the access to them is still very poor {{because of the way}} they are usually described and made available. In order to reduce these limitations as well as to support the cataloguing and to encourage the reuse of <b>analysis</b> <b>patterns,</b> the <b>Analysis</b> <b>Patterns</b> Reuse Infrastructure (APRI) was proposed. This infrastructure comprises a repository of <b>analysis</b> <b>patterns</b> documented through a specific metadata profile that can be accessed via web services. Based on the proposal of APRI,this paper introduces a machine-processable metadata profile suited to the documentation of <b>analysis</b> <b>patterns,</b> called Dublin Core Application Profile for <b>Analysis</b> <b>Patterns</b> (DC 2 AP). This metadata profile is described by RDF files identified via URI, thus providing linked data that increase the potential for reusing the <b>analysis</b> <b>patterns.</b> status: publishe...|$|R
5000|$|Software <b>analysis</b> <b>patterns</b> or <b>analysis</b> <b>patterns</b> in {{software}} engineering are conceptual models, which capture an abstraction {{of a situation}} that can often be encountered in modelling. An <b>analysis</b> <b>pattern</b> can be represented as [...] "a group of related, generic objects (meta-classes) with stereotypical attributes (data deﬁnitions), behaviors (method signatures), and expected interactions deﬁned in a domain-neutral manner." ...|$|R
25|$|The GLM model {{does not}} take into account the {{contribution}} of relationships between multiple voxels. Whereas GLM analysis methods assess whether a voxel or region's signal amplitude is higher or lower for one condition than another, newer statistical models such as multi-voxel <b>pattern</b> <b>analysis</b> (MVPA), utilize the unique contributions of multiple voxels within a voxel-population. In a typical implementation, a classifier or more basic algorithm is trained to distinguish trials for different conditions within a subset of the data. The trained model is then tested by predicting the conditions of the remaining (independent) data. This approach is most typically achieved by training and testing on different scanner sessions or runs. If the classifier is linear, then the training model is a set of weights used to scale the value in each voxel before summing them to generate a single number that determines the condition for each testing set trial. More information on training and testing classifiers is at statistical classification.|$|E
500|$|Firearm {{examiners}} {{have attempted}} to determine the shooter's position by the location of spent bullet casings. The use of ejection pattern studies were originally part of incident reconstruction and methods for determining shooter location continue to be explained in major crime scene examination books. [...] However, the validity of ejection <b>pattern</b> <b>analysis</b> has been brought into question by multiple studies that look at the reproducibility and end determination of shooter position by qualified examiners. Studies have shown that over 25% of spent casings land somewhere other than {{to the right and}} rear of the shooter. This is the most commonly accepted location for where spent cartridge casings should fall, and the large percentage of casings that end up somewhere else raises concerns for the validity of the examination technique. Investigators should only present a location gained from an ejection pattern study as a tentative estimate when using the information in a courtroom setting.|$|E
500|$|Termites are {{consumed}} {{by a wide}} variety of predators. One termite species alone, Hodotermes mossambicus, was found in the stomach contents of 65 birds and 19 mammals.ant, [...] arthropods, reptiles, and amphibians such as bees, centipedes, cockroaches, crickets, dragonflies, frogs, lizards, scorpions, spiders, and toads consume these insects, while 2 spiders in the family Ammoxenidae are specialist termite predators. Other predators include aardvarks, aardwolves, anteaters, bats, bears, bilbies, many birds, echidnas, foxes, galagos, numbats, mice and pangolins. The aardwolf is an insectivorous mammal that primarily feeds on termites; it locates its food by sound and also by detecting the scent secreted by the soldiers; a single aardwolf is capable of consuming thousands of termites in a single night by using its long, sticky tongue. Sloth bears break open mounds to consume the nestmates, while chimpanzees have developed tools to [...] "fish" [...] termites from their nest. Wear <b>pattern</b> <b>analysis</b> of bone tools used by the early hominin Paranthropus robustus suggests that they used these tools to dig into termite mounds.|$|E
40|$|Software <b>analysis</b> <b>patterns</b> are {{believed}} {{to play a major}} role in improving the quality of software products, while simultaneously reducing cost and condensing lifecycles. However, there are still problems that need to be solved in contemporary <b>analysis</b> <b>patterns,</b> such as the lack of stability, the lack of proper abstraction levels, and inadequate documentation. These problems tremendously diminish the reusability and the effectiveness of <b>analysis</b> <b>patterns.</b> In this thesis, the main problems facing <b>analysis</b> <b>patterns</b> are investigated. As a solution to these problems, the following remedies are proposed: (1) A new concept, stable <b>analysis</b> <b>patterns,</b> to accomplish stability and to achieve the proper abstraction level. (2) A new documentation template, to improve understanding and to enhance communicating patterns among software developers. (3) A pattern language contains eight patterns, to document the process of building stable <b>analysis</b> <b>patterns.</b> (4) Five stable <b>analysis</b> <b>patterns,</b> to demonstrate the usage of the proposed approach. (5) Eight essential properties that cover the main qualities of any <b>analysis</b> <b>pattern,</b> to evaluate the samples of both today’s <b>analysis</b> <b>patterns</b> and the proposed stable <b>analysis</b> <b>patterns.</b> Stabl...|$|R
30|$|Scattering <b>patterns</b> <b>analysis</b> intersects {{with general}} image {{processing}} in many ways. In most cases, other libraries such as scikit-image can be used. Specific tasks not widely available elsewhere {{have been included}} in scikit-ued.|$|R
30|$|<b>Patterns</b> <b>analysis</b> of the hourly {{calculations}} {{showed that}} in the solar-scenario, the PHS-plants are mainly used to solve the daily fluctuations while in the wind-scenario {{this is not the}} case. This is caused by the diurnal pattern of photovoltaics.|$|R
2500|$|For output {{checking}} or <b>pattern</b> <b>analysis,</b> {{a matrix}} value (or a string code) can be checked by a [...] "mask": a desired output value with optional asterisk symbols as wildcards — that is, [...] "" [...] indicating output positions that the designer {{does not care}} about (free values or [...] "don't-care positions").|$|E
2500|$|Although it {{was then}} clear what was on many Maya inscriptions, they still could not {{literally}} be read. However, further progress was made during the 1960s and 1970s, using a multitude of approaches including <b>pattern</b> <b>analysis,</b> de Landa's [...] "alphabet", Knorozov's breakthroughs, and others. In the story of Maya decipherment, the work of archaeologists, art historians, epigraphers, linguists, and anthropologists cannot be separated. All contributed to a process that was truly and essentially multidisciplinary. Key figures included David Kelley, Ian Graham, Gilette Griffin, and Michael Coe.|$|E
2500|$|Multivariate <b>pattern</b> <b>analysis</b> using EEG has {{suggested}} that an evidence based perceptual decision model may be applicable to free will decisions. It was found that decisions could be predicted by neural activity immediately after stimulus perception. Furthermore, when the participant was unable to determine {{the nature of the}} stimulus the recent decision history predicted the neural activity (decision). The starting point of evidence accumulation was in effect shifted towards a previous choice (suggesting a priming bias). Another study has found that subliminally priming a participant for a particular decision outcome (showing a cue for 13ms) could be used to influence free decision outcomes. Likewise, it has been found that decision history alone can be used to predict future decisions. The prediction capacities of the Soon et al. (2008) experiment were successfully replicated using a linear SVM model based on participant decision history alone (without any brain activity data). Despite this, a recent study has sought to confirm the applicability of a perceptual decision model to free will decisions. When shown a masked and therefore invisible stimulus, participants were asked to either guess between a category or make a free decision for a particular category. Multivariate <b>pattern</b> <b>analysis</b> using fMRI could be trained on [...] "free decision" [...] data to successfully predict [...] "guess decisions", and trained on [...] "guess data" [...] in order to predict [...] "free decisions" [...] (in the precuneus and cuneus region).|$|E
40|$|Abstract: <b>Analysis</b> <b>Patterns</b> are {{indicative}} <b>analysis</b> solutions for a recurrent problem. Many patterns {{have been proposed}} and are successfully used. The writing of a pattern follows a specific structure that can be tailored to each author’s needs. We have developed an <b>analysis</b> <b>pattern</b> template that solves some previously identified gaps on other approaches. This paper focuses on {{the definition of a}} systematic process to guide developers to fill that <b>analysis</b> <b>pattern</b> template. The definition of this process will contribute to the unification of the <b>analysis</b> <b>patterns</b> representation, and thus for their understandability and completeness. ...|$|R
40|$|Software <b>analysis</b> <b>patterns</b> are {{believed}} {{to play a major}} role in reducing the cost and condensing the time of software product lifecycles. However, <b>analysis</b> <b>patterns</b> have not realized their full potential. One of the common problems with today”s <b>analysis</b> <b>patterns</b> is the lack of stability. In many cases, <b>analysis</b> <b>pattern</b> that model specific problems fail to model the same problem when it appears in different context, forcing software developers to analyze the problem from scratch. As a result, the reusability of the pattern will diminish. This paper presents a pattern language for building stable <b>analysis</b> <b>patterns.</b> The objective of this language is to propose a way of achieving stability while constructing <b>analysis</b> <b>patterns.</b> 1...|$|R
40|$|The use of {{software}} <b>analysis</b> <b>patterns</b> {{as a means}} to facilitate Autonomous mobile robots (AMR) software knowledge reuse through component-based software engineering is proposed. The software <b>analysis</b> <b>patterns</b> for AMR were obtained through a pattern mining process, and documented using a standard catalogue template. These <b>analysis</b> <b>patterns</b> are categorized according to hybrid deliberate layered architecture of robot software: reactive layer, supervisor layer and deliberative layer. In this paper, the <b>analysis</b> <b>patterns</b> in the reactive layer are highlighted and presented. The deployment of the <b>analysis</b> <b>patterns</b> are illustrated and discussed using an AMR software case study. The reuse potential of these patterns is evaluated by measuring the reusability of components in the <b>analysis</b> <b>patterns...</b>|$|R
2500|$|As {{a highly}} {{interdisciplinary}} field in systems science, landscape ecology integrates biophysical and analytical approaches with humanistic and holistic perspectives across {{the natural sciences}} and social sciences. [...] Landscapes are spatially heterogeneous geographic areas characterized by diverse interacting patches or ecosystems, ranging from relatively natural terrestrial and aquatic systems such as forests, grasslands, and lakes to human-dominated environments including agricultural and urban settings. [...] The most salient characteristics of landscape ecology are its emphasis on the relationship among pattern, process and scale, and its focus on broad-scale ecological and environmental issues. These necessitate the coupling between biophysical and socioeconomic sciences. [...] Key research topics in landscape ecology include ecological flows in landscape mosaics, land use and land cover change, scaling, relating landscape <b>pattern</b> <b>analysis</b> with ecological processes, and landscape conservation and sustainability.|$|E
2500|$|Ernie Hall {{joined the}} [...] at Yale University, {{where he also}} taught in the Department of Computer Science. At Yale, his primary focus was in {{diagnostic}} radiography (see Radiography) such as the automated diagnosis of coal workers pneumoconiosis, but he also {{became interested in the}} new field of computed tomography. In 1973, he joined the [...] (SIPI) at the University of Southern California that had been recently formed with support from a DARPA grant to develop computer imaging technologies. In 1976 he joined the University of Tennessee the Image and <b>Pattern</b> <b>Analysis</b> Laboratory. While in Knoxville, Tennessee, he consulted with the Oak Ridge National Laboratory. In 1983, he became the first Paul. E. Geier Professor of Robotics in the Department of Mechanical Engineering at the University of Cincinnati. At the University of Cincinnati, he established the [...] and founded the [...]|$|E
2500|$|Despite criticisms, experimenters {{are still}} trying to gather data that may support the case that {{conscious}} [...] "will" [...] can be predicted from brain activity. fMRI machine learning of brain activity (multivariate <b>pattern</b> <b>analysis)</b> has been used to predict the user choice of a button (left/right) up to 7 seconds before their reported will of having done so. Brain regions successfully trained for prediction included the frontopolar cortex (anterior medial prefrontal cortex) and precuneus/posterior cingulate cortex (medial parietal cortex). In order to ensure report timing of conscious [...] "will" [...] to act, they showed the participant a series of frames with single letters (500ms apart), and upon pressing the chosen button (left or right) they were required to indicate which letter they had seen at the moment of decision. This study reported a statistically significant 60% accuracy rate, which may be limited by experimental setup; machine learning data limitations (time spent in fMRI) and instrument precision.|$|E
50|$|Unstructured data in {{contrast}} {{is taken from}} communication and office applications or from mobile devices. This data has no overarching structure and analysis thereof means applying keywords or mapping communication <b>patterns.</b> <b>Analysis</b> of unstructered data is usually referred to as Computer forensics.|$|R
40|$|We {{consider}} {{the use of}} <b>analysis</b> <b>patterns</b> {{in the definition of}} initial object-oriented models. In particular, we consider large patterns, as opposed to the small <b>analysis</b> <b>patterns</b> shown in most of the current literature, and we use analogy in carrying over the patterns between applications. We believe that this approach produces a software architecture that is more flexible and reusable than approaches applying patterns at a later stage. 1. 1 Keywords <b>Analysis</b> <b>patterns,</b> object-oriented <b>analysis,</b> software architecture, software design 2...|$|R
30|$|Structural <b>pattern</b> {{localization}} <b>analysis</b> by sequential histogram.|$|R
2500|$|Another {{version of}} the fMRI multivariate <b>pattern</b> <b>analysis</b> {{experiment}} was conducted using an abstract decision problem, {{in an attempt to}} rule out the possibility of the prediction capabilities being product of capturing a built-up motor urge. Each frame contained a central letter like before, but also a central number, and a surrounding 4 possible [...] "answers numbers". The participant first chose in their mind whether they wished to perform an addition or difference (subtraction) operation (and noted the central letter on the screen {{at the time of this}} decision). The participant then performed the mathematical operation based on the central numbers shown in the next two frames. In the following frame the participant then chose the [...] "answer number" [...] corresponding to the result of the operation. They were further presented with a frame which allowed them to indicate the central letter appearing on the screen at the time of their original decision. This {{version of the}} experiment discovered a brain prediction capacity of up to 5 seconds before the conscious will to act.|$|E
5000|$|To discuss, {{share and}} compare stain <b>pattern</b> <b>analysis</b> methods, protocols, and {{research}} for the enhancement of forensic bloodstain <b>pattern</b> <b>analysis</b> (BPA) techniques, and ...|$|E
5000|$|To {{design and}} {{encourage}} the implementation by practitioners of a quality assurance program in bloodstain <b>pattern</b> <b>analysis</b> and to advise the forensic bloodstain <b>pattern</b> <b>analysis</b> community of emerging quality assurance issues, and ...|$|E
40|$|Abstract: This article {{shows the}} {{improving}} of <b>analysis</b> <b>patterns</b> in the geographic domain through ontological meta-properties, where each pattern’s class has its concept analyzed ontologically. This improvement also permits {{to restructure the}} class diagram of <b>analysis</b> <b>patterns,</b> increasing the reuse quality. Besides improving the <b>analysis</b> <b>patterns,</b> it is proposed one more topic in the template for <b>analysis</b> <b>patterns</b> documentation. This topic {{is based on the}} specification of the main classes defined during the process. ...|$|R
40|$|Abstract. The {{software}} development process often encounters obstacles to reuse <b>analysis</b> <b>patterns.</b> Many designers {{do not have}} access to these computational artifacts by the difficulty in finding them, since the ways in which <b>analysis</b> <b>patterns</b> are documented are often precarious. The lack of both a computational tool which supports the <b>analysis</b> <b>patterns</b> documentation process and a digital repository to store these patterns affect their reuse. This paper presents the tool DC 2 AP Metadata Editor. This tool is a metadata editor for <b>analysis</b> <b>patterns</b> based on the Dublin Core Application Profile for <b>Analysis</b> <b>Patterns</b> (DC 2 AP). To support the patterns retrieval, the DC 2 AP Metadata Editor provides <b>analysis</b> <b>patterns</b> documented in RDF files, thus allowing the knowledge stored in these artifacts to be shared and automatically interpreted by software...|$|R
40|$|This paper {{discusses}} {{the use of}} remote sensing and geographic information system techniques {{for the evaluation of}} land use/cover changes, examination of different landscape <b>patterns,</b> <b>analysis</b> of the connection between multi-temporal dynamics and environmental factors, and modelling and prediction of future evolution. Il volume è disponibile sul sito dell'editore www. cabi. or...|$|R
5000|$|... #Article: Scientific Working Group - Bloodstain <b>Pattern</b> <b>Analysis</b> ...|$|E
50|$|The Scientific Working Group on Bloodstain <b>Pattern</b> <b>Analysis</b> (SWGSTAIN) {{was created}} in March 2002 at a meeting held by the FBI Laboratory at the FBI Academy in Quantico, Virginia. It was decided that there was enough {{interest}} in bloodstain <b>pattern</b> <b>analysis</b> (BPA) to warrant {{the creation of the}} Scientific Working Group (SWG). According to the guidelines for organizing a SWG, the Scientific Working Group on Bloodstain <b>Pattern</b> <b>Analysis</b> (SWGSTAIN) generated and ratified a set of bylaws in accordance to the Scientific Working Groups published in Forensic Science Communications (July 2002).|$|E
5000|$|Behind-casing flow <b>pattern</b> <b>analysis</b> for {{injection}} {{and production}} wells ...|$|E
40|$|An <b>analysis</b> <b>pattern</b> is {{any part}} of a {{requirement}} analysis specification that can be reused {{in the design of}} new information systems. <b>Analysis</b> <b>patterns</b> permit reuse in a higher level than object-oriented class specialization. This paper describes how an <b>Analysis</b> <b>Patterns</b> Catalog can be applied to improve the productivity during development of GIS application and, consequently, the quality of their databases. The catalog is attached to the ArgoCASEGEO, an open source CASE tool that supports the UML-GeoFrame conceptual model, specific for geographic databases design. The <b>analysis</b> <b>patterns</b> collection is stored in a database composing the Catalog, which is structured through directory architecture. Thus, searching for existing <b>analysis</b> <b>patterns</b> will be an easier and more efficient task...|$|R
40|$|Abstract: Software <b>analysis</b> <b>pattern</b> is an {{approach}} of software reuse {{which provides a}} way to reuse expertise {{that can be used}} across domains at early level of development. Developing software for a mobile robot system involves multi-disciplines expert knowledge which includes embedded systems, real-time software issues, control theories and artificial intelligence aspects. This paper focuses on <b>analysis</b> <b>patterns</b> as a means to facilitate mobile robot software knowledge reuse by capturing conceptual models in those domains in order to allow reuse across applications. The use of software <b>analysis</b> <b>patterns</b> as a means to facilitate Autonomous Mobile Robots (AMR) software knowledge reuse through component-based software engineering is proposed. The software <b>analysis</b> <b>patterns</b> for AMR were obtained through a pattern mining process, and documented using a standard catalogue template. These <b>analysis</b> <b>patterns</b> are categorized according to hybrid deliberate layered architecture of robot software: Reactive layer, supervisor layer and deliberative layer. Particularly, the <b>analysis</b> <b>patterns</b> in the reactive layer are highlighted and presented. The deployment of the <b>analysis</b> <b>patterns</b> are illustrated and discussed using an AMR software case study. To verify the existence of the pattern in AMR systems, pattern-based reverse engineering was performed on two existing AMR systems. The reuse potential of these patterns is evaluated by measuring the reusability of components in the <b>analysis</b> <b>patterns...</b>|$|R
40|$|Traceability and {{generality}} {{are among}} the main qualities that determine the effectiveness of developed <b>analysis</b> <b>patterns.</b> However, satisfying both qualities {{at the same time}} is a real challenge. Today, most of the <b>analysis</b> <b>patterns</b> are though of as templates, where they can be instantiated, and hence reused through an analogy between the original pattern and the application on hand. This paper illustrates the main problems with developing <b>analysis</b> <b>patterns</b> as templates. In addition, it shows, through examples, how stable <b>analysis</b> <b>patterns</b> introduced in [7, 8, and 9] can provide solutions to these problems. 1...|$|R
