12|58|Public
50|$|There {{are three}} {{addresses}} {{to be considered}} by the Push Initiator: the push <b>proxy</b> <b>gateway</b> address, the wireless device address, and the result notification address. The push <b>proxy</b> <b>gateway</b> address must be known by the Push Initiator. This address is needed at the layer below the push access protocol. The push <b>proxy</b> <b>gateway</b> is addressed using a unique address {{that depends on the}} underlying protocol. For example, when the underlying protocol is HTTP, a URL RFC1738 is used. The device addressing information is included as part of the message content (XML tagged content). Any character allowed in an RFC822 address may appear in the device address field. In addition, a “notify-requested-to” address may be provided by the Push Initiator when required so that the push <b>proxy</b> <b>gateway</b> can later respond to the Push Initiator with result notification.|$|E
50|$|The network {{entity that}} {{processes}} WAP Pushes and delivers them over an IP or SMS Bearer {{is known as}} a Push <b>Proxy</b> <b>Gateway</b> (PPG).|$|E
50|$|Push Access Protocol (or PAP) is a {{protocol}} defined in WAP-164 of the Wireless Application Protocol (WAP) suite from the Open Mobile Alliance. PAP {{is used for}} communicating with the Push <b>Proxy</b> <b>Gateway,</b> which is usually part of a WAP Gateway.|$|E
50|$|The {{interaction}} between the Push Initiators and the Push <b>Proxy</b> <b>Gateways</b> {{is in the form}} of XML messages.|$|R
30|$|We {{want to make}} Things able {{to execute}} complex tasks that are not {{predefined}} at the Things’ deployment time so as to enable developers to use the WoT as a pool of generic resources, without unneeded intermediaries (<b>proxies,</b> <b>gateways,</b> base stations, etc.). The role of such intermediaries is specifically discussed in Section 1.|$|R
50|$|A dual-homed host (or dual-homed gateway) is {{a system}} fitted with two network {{interfaces}} (NICs) that sits between an untrusted network (like the Internet) and trusted network (such as a corporate network) to provide secure access. Dual-homed is a general term for <b>proxies,</b> <b>gateways,</b> firewalls, or any server that provides secured applications or services directly to an untrusted network.|$|R
50|$|A push {{message is}} sent as an HTTP POST to the Push <b>Proxy</b> <b>Gateway.</b> The POST {{will be a}} {{multipart}} XML document, with the first part being the PAP (Push Access Protocol) Section {{and the second part}} being either a Service Indication or a Service Loading.|$|E
50|$|This module {{implements}} a <b>proxy,</b> <b>gateway</b> or cache for Apache. It implements proxying {{capability for}} AJP13 (Apache JServ Protocol version 1.3), FTP, CONNECT (for SSL), HTTP/0.9, HTTP/1.0, and (since Apache 1.3.23) HTTP/1.1. The module can be configured {{to connect to}} other proxy modules for these and other protocols.|$|E
50|$|A Push <b>Proxy</b> <b>Gateway</b> is a {{component}} of WAP Gateways that pushes URL notifications to mobile handsets. Notifications typically include MMS, email, IM, ringtone downloads, and new device firmware notifications. Most notifications will have an audible alert to the user of the device. The notification will typically be a text string with a URL link. Note that only a notification is pushed to the device; the device must do something with the notification in order to download or view the content associated with it.|$|E
50|$|PAP is {{intended}} for use in delivering content from Push Initiators to Push <b>Proxy</b> <b>Gateways</b> for subsequent delivery to narrow band devices, including mobile phones and pagers. Example messages include news, stock quotes, weather, traffic reports, and notification of events such as email arrival. With Push functionality, users are able to receive information without having to request it. In many cases {{it is important for}} the user to get the information as soon as it is available.|$|R
40|$|Many {{types of}} {{gateways}} {{are related to}} the concept of pervasive computing. Connectivity gateways enable new devices to connect the Internet. Transcoding gateways modify information and presentation of web content suitable for new devices. Residential gateways create true home networks and connect them to the Internet. Tunneling gateways enable a protocol travel inside another one. <b>Proxy</b> <b>gateways</b> enhance speed, security of Internet connection or provide other transparent services. Back-end gateways bring services of back-end systems accessible from the Internet. This paper shortly explains each gateway type. ...|$|R
50|$|SCB {{controls}} only administrative protocols {{with the}} embedded application layer <b>gateway</b> (<b>proxy)</b> technology.|$|R
40|$|Abstract — This {{project that}} deals with the <b>proxy</b> <b>gateway</b> and unicast client of the larger Scalable Video Delivery project. The aim of the project is to deliver video to {{heterogeneous}} clients using only one video stream. This possible using a layered multi-wavelet codec that allows a video stream to be encoded, divided and distributed using multicast. A multicast method of delivery {{would mean that the}} client can control the amount of stream it receives and hence the video quality without the server having to transcode or modify the strems it sends out. However, because there are devices that cannot receive multicast data, e. g., handheld devices or PDAs, a <b>proxy</b> <b>gateway</b> was developed to receive the multicast stream and retransmit them in a unicast manner. The <b>proxy</b> <b>gateway,</b> because it is developed primarily to support the low-powered handheld devices, also performs buffering and other actions that may require amounts of memory which handheld devices do not have. This project is now in its final stage and the <b>proxy</b> <b>gateway</b> and unicast handheld-based client are now under performance testing. Index Terms—multimedia, video, multicast, prox...|$|E
40|$|Abstract- Technology {{presented}} in the paper [1] allows validation of software architecture before component upgrades. This paper presents {{a case study of}} applying this method to the upgrade of a wireless monitoring system. The converged network of voice and data introduces reliability-critical applications to conventional IP networks. Examples of such applications include voice-over-IP (VoIP), messaging, call centers, etc. Voice networks traditionally operate with an availability of 99. 999 %. Software upgrade must be done on-line to maintain such a high availability. Our wireless mobile monitoring (WMM) system includes clients and five server components: WAP Gateway (WG), Push <b>Proxy</b> <b>Gateway</b> (PPG) ...|$|E
40|$|The major {{objective}} of the project is to design and implement a WAP push system {{that could be used}} for web content delivery. This objective is divided to further three parts; building push <b>proxy</b> <b>gateway,</b> designing a WAP site and push initiator. The wireless application protocol, WAP, is a standard for wireless units, which in contrast to the internet computers have less CPU, less memory, smaller displays, and so on. These units have limited power and they tend to have less bandwidth, more latency, and less connection stability. The Wireless Application Protocol, WAP, is an effort to make it possible to access the Internet with these wireless units and to make the connection as efficient as possible. Despite this entire good thing WAP over; there still ranges of enhancement through the concept of WAP push. Pushing active web content to user could be more valuable and will serve great bandwidth and resale users from the tedious operation of browsing the web through their handsets. The major {{objective of}} the project is to design and implement a WAP push system {{that could be used for}} web content delivery. This objective is divided to further three parts; building push <b>proxy</b> <b>gateway,</b> designing a WAP site and push initiator. An engineered methodology had been followed to implement the three parts of the project that makes it easy to accomplish the objectives. An emulator and real phones had been used to test and validate the correctness and functionality of the system. The project had been successfully done...|$|E
50|$|Private {{addresses}} {{are also}} {{commonly used in}} corporate networks, which for security reasons, are not connected directly to the Internet. Often a <b>proxy,</b> SOCKS <b>gateway,</b> or similar devices are used to provide restricted Internet access to network-internal users.|$|R
30|$|Usually, a WSAN is {{composed}} of (i) several motes equipped {{with one or more}} sensors and a wireless interface, and (ii) more powerful devices, typically fixed and continuously-powered, that embed actuators [4]. In addition, a WSAN leverages <b>proxies,</b> <b>gateways</b> or base stations for carrying out collection and computation tasks, as well as communication with other networks, such as the Internet. Nowadays, the above intermediaries are not anymore required for communication between motes and the Internet, thanks to the standardized stack composed of IEEE 802.15. 4 and 6 LoWPAN, which is intended to replace proprietary communication proxies (application level) by standardized IP routers (network level) [15]. As a benefit, motes have an IPv 6 address, or an equivalent made of the network identifier and a small address, and can communicate directly with the Internet.|$|R
40|$|International audienceacing to {{the great}} number of {{wireless}} sensor/actuator devices, smart applications have an increasingly important requirement: autonomy. Besides autonomy in terms of energy, these devices have also to be functionally autonomous: {{they have to be}} self-discovered, self-(re-) configured and self-healed. This paper presents a self-manageable autonomic platform for heterogeneous sensing systems. Based on a service oriented architecture and an Event-Condition-Action model, management services collect information from managed elements (e. g., sensors, <b>proxies,</b> <b>gateways)</b> and perform management actions according to user defined ECA rules. We define a generic event model that allows us covering a large set of events. Events are captured and processed by rule evaluators which then perform corresponding management actions on the sensors. We show with experimental results that the mechanism brings little overhead in terms of energy consumption and execution time...|$|R
40|$|Abstract — Cloud {{computing}} is {{delivery of}} services {{rather than a}} product and among different cloud deployment models, the public cloud provides improved scalability and cost reduction when compared to others. Security and privacy of data {{is one of the}} key factors in transitioning to cloud. Typically the cloud providers have a demilitarized zone protecting the data center along with a reverse proxy setup. The reverse <b>proxy</b> <b>gateway</b> acts as initial access point and provides additional capabilities like load balancing, caching, security monitoring capturing events, syslogs related to hosts residing in the cloud. The audit-trail logs captured by reverse proxy server comprise important information related to all the tenants. While the PKI infrastructure works in cloud scenario it becomes cumbersome from manageability point of view and they lack flexibility in providing controlled access to data. In this paper we evaluate risks associated with security and privacy of audit logs produced by reverse proxy server. We provide a two-phase approach for sharing the audit-logs with users allowing fine-grained access. In this paper we evaluate certain Identity-Based and Attribute-Based Encryption schemes and provide detailed analysis on performance...|$|E
40|$|Abstract—Cloud {{computing}} is {{delivery of}} services {{rather than a}} product and among different cloud deployment models, the public cloud provides improved scalability and cost reduction when compared to others. Security and privacy of data {{is one of the}} key factors in transitioning to cloud. Typically the cloud providers have a demilitarized zone protecting the data center along with a reverse proxy setup. The reverse <b>proxy</b> <b>gateway</b> acts as initial access point and provides additional capabilities like load balancing, caching, security monitoring capturing events, syslogs related to hosts residing in the cloud. The audit-trail logs captured by reverse proxy server comprise important information related to all the tenants. While the PKI infrastructure works in cloud scenario it becomes cumbersome from manageability point of view and they lack flexibility in providing controlled access to data. In this paper we evaluate risks associated with security and privacy of audit logs produced by reverse proxy server. We provide a two-phase approach for sharing the audit-logs with users allowing fine-grained access. In this paper we evaluate certain Identity-Based and Attribute-Based Encryption schemes and provide detailed analysis on performance. Keywords—multi-tenancy; audit-trail log; attribute-based encryption; reverse proxy security I...|$|E
40|$|We {{propose a}} WAP-based, Push-enabled mobile Internet {{application}} platform, called MAP, to provide extensive services for {{users in the}} mobile environment. The goal of this platform {{is to provide a}} flexible, scalable and rapid-service-creation environment for mobile Internet applications to operate in. MAP has four main components, which have been designed and implemented: (1) a WAP micro-browser for mobile devices, (2) a WAP simulator for desktops or notebooks, (3) a WAP Push <b>proxy</b> <b>gateway,</b> the MBL Gateway, and (4) a distributed mobile agents server, Wagent. This platform enables mo-bile clients to access legacy information systems, Intranets and WWW services conven-iently. It applies the advantages of the mobile agent paradigm and WAP Push technolo-gies to extend Internet services to wireless environments. It also makes it possible to push critical information, such as news and stock prices, to mobile users in real time. We have also evaluated the performance of the MBL Gateway, which is a key component of the platform, using a realistic traffic model. Experiment results show that the MBL Gateway is more efficient than the other two notable open source WAP gateways in terms of average response time. The MBL Gateway reduces the average response time by up to 25 % and 87 % compared to the Standalone Kannel Gateway and Original Kan-nel Gateway, respectively, under the highest load (270 requests/sec when the session ar-rival rate λ = 0. 015) ...|$|E
50|$|Recently cable router {{stand-alone}} is {{the rare}} device, and usually {{integrated with the}} modem, frequently incorporating also firewall, <b>proxy,</b> or network <b>gateway</b> functions.|$|R
50|$|The main {{component}} of the cloud encryption gateway is the AppProtex Cloud Data Protection Gateway Server, which acts as an intercepting software <b>proxy.</b> The <b>gateway</b> server provides the core data privacy, residency, and security services for the gateway. AppProtex Discovery & Analyze capabilities allow visibility into information users are sharing with cloud applications.|$|R
40|$|An agile {{firewall}} coprocessor {{is described}} {{that is based}} on field programmable gate array (FPGA) technology. This implementation of the firewall enables a high degree of traffic selectability yet avoids the usual performance penalty associated with IP level firewalls. This approach is applicable to high-speed broadband networks, and Asynchronous Transfer Mode (ATM) networks are addressed in particular. Security management is achieved through a new technique of active connection management with authentication. Past approaches to network security involve firewalls providing selection based on packet filtering and application level <b>proxy</b> <b>gateways.</b> IP level firewalling was sufficient for traditional networks but causes a severe performance degradation in high speed broadband environments. The approach described in this paper discusses the use of an FPGA-based front end processor that filters relevant signaling information to the firewall host {{while at the same time}} allowing friendly conn [...] ...|$|R
40|$|Abstract—While the {{advantages}} of multicast delivery over multiple unicast deliveries is undeniable, the deployment of the IP multicast protocol has been limited to “islands ” of network domains under single administrative control. Deployment of inter-domain multicast delivery has been slow due to both technical and administrative reasons. In this {{paper we propose a}} Host Multicast Tree Protocol (HMTP) that (1) automates the interconnection of IP-multicast enabled islands and (2) provides multicast delivery to end hosts where IP multicast is not available. With HMTP, end-hosts and <b>proxy</b> <b>gateways</b> of IP multicast-enabled islands can dynamically create shared multicast trees across different islands. Members of an HMTP multicast group self-organize into an efficient, scalable and robust multicast tree. The tree structure is adjusted periodically to accommodate changes in group membership and network topology. Simulation results show that the multicast tree has low cost, and data delivered over it experiences moderately low latency. I...|$|R
5000|$|A mid-2010 draft (version hixie-76) broke {{compatibility}} with reverse <b>proxies</b> and <b>gateways</b> by including eight bytes of key data after the headers, but not advertising that {{data in a}} [...] header. This data was not forwarded by all intermediates, {{which could lead to}} protocol failure. More recent drafts (e.g., hybi-09) put the key data in a [...] header, solving this problem.|$|R
5000|$|The Private Cloud Edition {{utilizes}} {{the same}} PROXY Pro Master, PROXY Pro Host, <b>PROXY</b> Pro <b>Gateway</b> and adds the PROXY Pro Web Console allowing for access {{and management of}} Hosts from any machine with a browser. It is an on-premises remote desktop software solution for remote support and collaboration with configurable service management tools and real-time reporting and historical connection reporting.|$|R
50|$|Users of Web browsers {{that have}} {{incomplete}} or no support for Gopher can access content on Gopher servers via a server <b>gateway</b> or <b>proxy</b> server that converts Gopher menus into HTML; known proxies are the Floodgap Public Gopher proxy and Gopher Proxy. Similarly, certain server packages such as GN and PyGopherd have built-in Gopher to HTTP interfaces. Squid <b>Proxy</b> software <b>gateways</b> any gopher:// URL to HTTP content, enabling any browser or web agent to access gopher content easily.|$|R
40|$|Citizens develop Wireless Mesh Networks (WMN) in {{many areas}} as an {{alternative}} or their only way for local interconnection {{and access to the}} Internet. This access is often achieved through the use of several shared web <b>proxy</b> <b>gateways.</b> These network infrastructures consist of heterogeneous technologies and combine diverse routing protocols. Network-aware state-of-art proxy selection schemes for WMNs do not work in this heterogeneous environment. We developed a client-side gateway selection mechanism that optimizes the client-gateway selection, agnostic to underlying infrastructure and protocols, requiring no modification of proxies nor the underlying network. The choice is sensitive to network congestion and proxy load, without requiring a minimum number of participating nodes. Extended Vivaldi network coordinates are used to estimate client-proxy network performance. The load of each proxy is estimated passively by collecting the Time-to-First-Byte of HTTP requests, and shared across clients. Our proposal was evaluated experimentally with clients and proxies deployed in guifi. net, the largest community wireless network in the world. Our selection mechanism avoids proxies with heavy load and slow internal network paths, with overhead linear to the number of clients and proxies. Comment: IFIP/IEEE International Symposium on Integrated Network Management (IM) Date: 05 / 2017, Lisbon, Portuga...|$|R
40|$|This paper {{discusses}} {{the requirements of}} current and emerging applications based on the Open Archives Initiative (OAI) and emphasizes {{the need for a}} common infrastructure to support them. Inspired by HTTP <b>proxy,</b> cache, <b>gateway</b> and web service concepts, a design for a scalable and reliable infrastructure that aims at satisfying these requirements is presented. Moreover it is shown how various applications can exploit the services included in the proposed infrastructure. The paper concludes by discussing the current status of several prototype implementations. Comment: 20 pages, 6 figure...|$|R
40|$|Global {{access to}} the Internet for all {{requires}} a dramatic reduction in Internet access costs particularly in developing areas. This access is often achieved through several <b>proxy</b> <b>gateways</b> shared across local or regional access networks. These proxies allow individuals or organisations to share the capacity of their Internet connection with other users. We present a measurement study of a crowdsourced Internet proxy service in the guifi. net community network that provides free Web access to a large community with many small proxy servers spread over the network. The dataset consists of Squid proxy logs for one month, combined with network topology and traffic data. Our study focuses on a representative subset of the whole network with about 900 nodes and roughly 470 users of the web proxy service. We analyse the service from three viewpoints: Web content traffic from users, performance of proxies and influence of the access network. We find clear daily patters of usage, excess capacity and little reuse of content which makes caching almost unnecessary. We also find variations and small inefficiencies {{in the distribution of}} traffic load across proxies and the access network, related to the locality and manual proxy choice. Finally, users experience an overall usable Internet access with good throughput for a free crowdsourced service. Peer ReviewedPostprint (published version...|$|R
50|$|However, when routers, firewalls, <b>proxies,</b> {{and other}} <b>gateway</b> devices perform network address {{translation}} (NAT), or more specifically, port address translation (PAT), they may rewrite source ports in order to track connection state. When modifying source ports, PAT devices may remove source port randomness implemented by nameservers and stub resolvers.|$|R
40|$|Abstract — Although the SIP {{protocol}} {{claims a}} complete dual-stack support, some aspects, such as interoperability between different address realms {{and support for}} multi-homed hosts, are not taken into consideration. This leads to an extensive usage of <b>proxies</b> as <b>gateways,</b> e. g., between different address realms. ALEX (“Address List Extension”) is a simple extension to the SIP header that addresses these limitations, providing additional scalability for SIP proxies and allowing the establishment of direct channels between peers, while still guaranteeing backward compatibility with traditional SIP implementations. Keywords-component; SIP, IPv 6, transition, ALEX, ICE I...|$|R
40|$|Proceedings - 2004 Global Mobile Congress, Shanghai, 11 - 13 October 2004 We {{propose a}} novel RGB {{multicast}} communication model, the acronym of "the Ring-based hierarchy of access <b>proxies,</b> access <b>Gateways,</b> and border routers". Based on the RGB model, we design a reliable totally ordered multicast communication protocol. The proposed protocol {{runs in a}} parallel and distributed way {{in the sense that}} each network entity only maintains information about its possible neighbors, and that each network entity independently decides whether, when, and where to order, forward, and deliver multicast messages. Department of ComputingRefereed conference pape...|$|R
50|$|Test suites and {{procedures}} {{developed by the}} IMTC in the late 1990s demonstrated the viability of connecting gatekeepers, <b>gateways,</b> <b>proxies,</b> MCUs, endpoints and network components into integrated rich-media sessions and interoperability and interworking between IP networks and switched-circuit networks including H.323, SIP, the iNOW! Profile, and the T.120, H.320, H.324 M, H.248/Megaco, and H.450 protocols.|$|R
5000|$|A {{firewall}} is {{a system}} or group of systems (router, <b>proxy,</b> or <b>gateway)</b> that implements a set of security rules to enforce access control between two networks to protect the [...] "inside" [...] network from the [...] "outside" [...] network. It may be a hardware device or a software program running on a secure host computer. In either case, it must {{have at least two}} network interfaces, one for the network it is intended to protect, and one for the network it is exposed to. A firewall sits at the junction point or gateway between the two networks, usually a private network and a public network such as the Internet.|$|R
