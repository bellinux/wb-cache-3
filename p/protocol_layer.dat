247|3161|Public
25|$|The <b>protocol</b> <b>layer</b> {{implements}} {{the external}} interface to SQL Server. All operations {{that can be}} invoked on SQL Server are communicated to it via a Microsoft-defined format, called Tabular Data Stream (TDS). TDS is an application layer protocol, used to transfer data between a database server and a client. Initially designed and developed by Sybase Inc. for their Sybase SQL Server relational database engine in 1984, and later by Microsoft in Microsoft SQL Server, TDS packets can be encased in other physical transport dependent protocols, including TCP/IP, named pipes, and shared memory. Consequently, access to SQL Server is available over these protocols. In addition, the SQL Server API is also exposed over web services.|$|E
5000|$|The <b>protocol</b> <b>layer</b> sends and {{receives}} packets {{on behalf of}} the device. A typical packet is a memory cache row. The <b>protocol</b> <b>layer</b> also participates in cache coherency maintenance by sending and receiving cache coherency messages.|$|E
5000|$|IFSF is {{more complex}} but more {{comprehensive}} than most proprietary protocols. The IFSF protocol has two independent layers; a device application <b>protocol</b> <b>layer</b> and a communications <b>protocol</b> <b>layer.</b> The application protocol is independent of the underlying communications layer. The communications protocol specification makes the link to the transport layer.|$|E
50|$|The {{vertical}} <b>protocols</b> are not <b>layered</b> {{because they}} don't obey the <b>protocol</b> <b>layering</b> principle {{which states that}} a <b>layered</b> <b>protocol</b> is designed so that layer n at the destination receives exactly the same object sent by layer n at the source.The horizontal <b>protocols</b> are <b>layered</b> <b>protocols</b> and all belong to the <b>protocol</b> suite. <b>Layered</b> <b>protocols</b> allow the protocol designer to concentrate on one layer at a time, without worrying about how other layers perform.|$|R
40|$|Abstract. TCP/IP is {{a typical}} <b>layered</b> <b>protocol</b> suite, and network <b>protocol</b> <b>layering</b> is the widely {{accepted}} rule. As studying TCP/IP, conceptually <b>protocol</b> <b>layering</b> is easy to understand, but TCP/IP stack usually is implemented in the kernel of Linux operating system, thus how <b>layering</b> <b>protocol</b> works is hard to know. After studying the IP fragment and defragment process in Linux kernel, a <b>layered</b> <b>protocol</b> defined in application level is designed, and a program based on this application <b>layered</b> <b>protocol</b> to simulate IP fragment and defragment is implemented in this paper. With this program, {{not only is the}} process of IP fragmentation and defragmentation in Linux kernel clearly displayed, but also the complete handling of a <b>layered</b> <b>protocol</b> is showed...|$|R
50|$|There can be complex {{interactions}} between stateful and stateless protocols among different <b>protocol</b> <b>layers.</b> For example, HTTP {{is an example}} of a stateless <b>protocol</b> <b>layered</b> on top of TCP, a stateful <b>protocol,</b> which is <b>layered</b> on top of IP, another stateless protocol, which is routed on a network that employs BGP, another stateful protocol, to direct the IP packets riding on the network.|$|R
50|$|Layer 1 (L1) For serial RS232 L1 is the Physical <b>Protocol</b> <b>Layer</b> {{that defines}} the {{electrical}} signals and interconnect requirements at the communication interface port(s) of the CCTV system. V3.0 of the specification allows UDP/IP, typically over Ethernet, {{to be used for}} L1. This option is not a physical <b>protocol</b> <b>layer</b> in the OSI sense.|$|E
50|$|IPX and SPX {{are derived}} from Xerox Network Systems' IDP and SPP protocols, respectively. IPX is a network layer <b>protocol</b> (<b>layer</b> 3 of the OSI Model), while SPX is a {{transport}} layer <b>protocol</b> (<b>layer</b> 4 of the OSI Model). The SPX layer sits {{on top of the}} IPX layer and provides connection-oriented services between two nodes on the network. SPX is used primarily by client-server applications.|$|E
50|$|At {{the storage}} <b>protocol</b> <b>layer,</b> OpenSolaris {{supported}} SCSI, iSCSI, iSNS, Fibre Channel, FCoE, InfiniBand, RDMA, Object storage device, and SAS.|$|E
5000|$|Memory efficiency: 6 Kbytes (<b>protocol</b> <b>layers)</b> + 5 Kbytes (application) ...|$|R
5000|$|... #Subtitle level 2: Stacking of {{stateless}} and stateful <b>protocol</b> <b>layers</b> ...|$|R
40|$|We {{propose a}} {{methodology}} that allows software protocol implementors {{a means of}} analyzing power consumptions in wireless communication systems. The energy intensive nature of wireless communication has spurred much concern over how best systems can make the most use of this nonrenewable energy source. The methodology involves describing the logical flow of protocol data units through the <b>protocol</b> <b>layers</b> based on their formal specification. Here after, the state diagrams of the <b>protocol</b> <b>layers</b> are derived from this logical description. These diagrams provide the schema for the continuous-time Markov chains that enable the capturing of the <b>protocol</b> <b>layer's</b> behaviour. Markov Reward Models are then specified by defining the Markov chains that allow for the modelling of power consumption as a reward. Modelling power consumption this way allows for {{the investigation of the}} power factor, power level analysis, and power consumption comparison of the radio interface <b>protocol</b> <b>layers...</b>|$|R
5000|$|... {{the content}} of a data frame will only be passed once to the upper <b>protocol</b> <b>layer</b> (duplicate data frames are discarded) ...|$|E
5000|$|Finally, a final <b>protocol</b> <b>layer</b> {{manages the}} actual data {{transfer}} process. A commonly used protocol {{for this is}} the [...] "file transfer protocol ...|$|E
5000|$|SOAP {{provides}} the Messaging <b>Protocol</b> <b>layer</b> {{of a web}} services protocol stack for web services. It is an XML-based protocol consisting of three parts: ...|$|E
40|$|In the Universal Mobile Telecommunications System (UMTS) {{the radio}} {{resource}} management functions are jointly handled {{in two different}} <b>protocol</b> <b>layers,</b> the Radio Resource Control (RRC) and the Medium Access Control (MAC). Congestion control functions are performed in the RRC layer. Therefore congestion control requires strong interactions between the radio interface <b>protocol</b> <b>layers,</b> including measurement reports which are transmitted, as well as reconfiguration procedures...|$|R
50|$|ARINC 615 {{defines a}} {{high-speed}} data loader <b>protocol</b> <b>layered</b> upon the ARINC 429 physical layer.|$|R
50|$|In {{discussions of}} encapsulation, the more {{abstract}} layer {{is often called}} the upper <b>layer</b> <b>protocol</b> while the more specific layer is called the lower <b>layer</b> <b>protocol.</b> Sometimes, however, the terms upper <b>layer</b> <b>protocols</b> and lower <b>layer</b> <b>protocols</b> are {{used to describe the}} layers above and below IP, respectively.|$|R
50|$|It {{differs from}} a PDU {{in that the}} PDU {{specifies}} the data that {{will be sent to}} the peer <b>protocol</b> <b>layer</b> at the receiving end, as opposed to being sent to a lower layer.|$|E
50|$|Layer 3 (L3) is the Network <b>Protocol</b> <b>Layer,</b> {{sometimes}} referred to as the Packet Layer. This is the layer of actual CCTV network messages. The messages have end-to-end significance and contain both source and destination address information.|$|E
50|$|Layer 4 (L4) is the Application <b>Protocol</b> <b>Layer</b> {{which makes}} use of the data network and lower {{protocol}} layers to provide services that are required either directly by the users of the system or for system management.|$|E
50|$|Having {{established}} the <b>protocol</b> <b>layering</b> and the <b>protocols,</b> the protocol designer can now resume {{with the software}} design. The software has a layered organization and its relationship with <b>protocol</b> <b>layering</b> is visualized in figure 5.The software modules implementing the protocols are represented by cubes. The information flow between the modules is represented by arrows. The (top two horizontal) red arrows are virtual. The blue lines mark the layer boundaries.|$|R
40|$|Layered {{architecture}} {{is one of}} the most fundamental and influential structures of network design. Can we integrate the various <b>protocol</b> <b>layers</b> into a single coherent theory by regarding them as carrying out an asynchronous distributed primal-dual computation over the network to implicitly solve a global optimization problem? Different layers iterate on different subsets of the decision variables using local information to achieve individual optimalities, but taken together, these local algorithms attempt to achieve a global objective. Such a theory will expose the interconnection between <b>protocol</b> <b>layers</b> and can be used to study rigorously the performance tradeoff in <b>protocol</b> <b>layering</b> as different ways to distribute a centralized computation. In this talk, we describe some preliminary work towards this goal and discuss some of the difficulties of this approach...|$|R
50|$|Multilayer switch: {{a switch}} that, in {{addition}} to switching on OSI layer 2, provides functionality at higher <b>protocol</b> <b>layers.</b>|$|R
5000|$|The SCSI Transport <b>Protocol</b> <b>Layer</b> (STPL) {{is where}} an {{initiator}} and a target {{are considered to}} communicate using a SCSI transport protocol. Examples of SCSI transport protocols are Fibre Channel, [...] SSA, SAS, UAS, iSCSI and the SCSI Parallel Interface.|$|E
5000|$|While SDH is {{considered}} to be a transmission <b>protocol</b> (<b>Layer</b> 1 in the OSI Reference Model), it also performs some switching functions, as stated in the third bullet point requirement listed above. The most common SDH Networking functions are these: ...|$|E
50|$|For example, Microsoft Windows' Winsock, and Unix's Berkeley sockets and System V Transport Layer Interface, are {{interfaces}} between applications (layer 5 and above) and {{the transport}} (layer 4). NDIS and ODI are interfaces between the media (layer 2) {{and the network}} <b>protocol</b> (<b>layer</b> 3).|$|E
5000|$|... data frames {{within the}} same Traffic Class will be {{received}} and passed to the upper <b>protocol</b> <b>layers</b> in order ...|$|R
5000|$|Courses and {{textbooks}} in {{the field}} of data transmission typically deal with the following OSI model <b>protocol</b> <b>layers</b> and topics: ...|$|R
50|$|The {{vertical}} protocols {{need not}} be the same protocols on both systems, but they have to satisfy some minimal assumptions to ensure the <b>protocol</b> <b>layering</b> principle holds for the <b>layered</b> <b>protocols.</b> This can be achieved using a technique called Encapsulation.|$|R
50|$|AFNet {{incorporates}} the latest traffic transportation technology {{in form of}} IP (Internet Protocol) packets over the network using Multi Protocol Label Switching (MPLS). A large VoIP (Voice over Internet <b>Protocol)</b> <b>layer</b> with stringent quality of service enforcement will facilitate robust, high quality voice, video and conferencing solutions.|$|E
50|$|Routing {{typically}} {{only works}} on the Internet <b>Protocol</b> <b>layer</b> and is very limited in packet classification. It {{is bound to be}} stateless {{due to the nature of}} IP routers. Typically, classification is limited to the destination IP address prefix, source IP address and incoming network interface.|$|E
50|$|The Wake-on-LAN {{implementation}} {{is designed}} to be very simple and to be quickly processed by the circuitry present on the network interface card with minimal power requirement. Because Wake-on-LAN operates below the IP <b>protocol</b> <b>layer,</b> IP addresses and DNS names are meaningless and so the MAC address is required.|$|E
30|$|IEEE 802.11 p cooperates {{with the}} IEEE 1609 family [2], {{covering}} higher <b>protocol</b> <b>layers,</b> {{to define a}} standard protocol stack for vehicular environments.|$|R
50|$|In computing, {{a network}} {{interface}} is a system's (software and/or hardware) interface between {{two pieces of}} equipment or <b>protocol</b> <b>layers</b> in a computer network.|$|R
40|$|Distributed {{applications}} {{are becoming increasingly}} complex, often requiring the simultaneous use of several communication channels with di#erent qualities-of-service. This paper presents the Appia system, a protocol kernel that supports applications requiring multiple coordinated channels. Appia o#ers a clean and elegant way for the application to express inter-channel constraints, such as, for instance, that all channels should provide consistent information about the failures of remote nodes. These constraints can be implemented as <b>protocol</b> <b>layers</b> that can be dynamically combined with other <b>protocol</b> <b>layers.</b> ...|$|R
