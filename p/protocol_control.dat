89|6554|Public
5000|$|... #Subtitle level 2: List of <b>protocol</b> <b>control</b> {{information}} field types ...|$|E
5000|$|RFC 1332 and RFC 1877 - Internet <b>Protocol</b> <b>Control</b> Protocol (IPCP) ...|$|E
5000|$|... the Internet <b>Protocol</b> <b>Control</b> Protocol (IPCP) for the Internet Protocol, {{protocol}} {{code number}} 0x8021, RFC 1332 ...|$|E
5000|$|Internet <b>Protocol</b> Device <b>Control</b> (IPDC), {{which was}} fused with Simple Gateway <b>Control</b> <b>Protocol</b> (SGCP) to form Media Gateway <b>Control</b> <b>Protocol</b> {{which is based}} on Media Gateway <b>Control</b> <b>Protocol</b> Architecture ...|$|R
40|$|Abstract—Transmission <b>control</b> <b>protocol</b> veno is a {{wireless}} transmission congestion control algorithm which can better distinguish different loss. It determines whether the packets random loss or congestion loss through calculate to the packets number of backlog in the network. However, transmission <b>control</b> <b>protocol</b> veno {{does not change}} the congestion window in the slow start, and it is same to the traditional transmission <b>control</b> <b>protocol.</b> Transmission <b>control</b> <b>protocol</b> adaptive delay and loss response controls the congestion window base on the sender judgments changes in the relevant window and measures round-trip time. It improves the performance of transmission <b>control</b> <b>protocol</b> than the conventional transmission <b>control</b> <b>protocol</b> on the satellite network transmission <b>control</b> <b>protocol.</b> Taking into account the characteristic of both congestion control algorithms respectively, we propose an enhanced transmission <b>control</b> <b>protocol</b> that introduces ideas of transmission <b>control</b> <b>protocol</b> veno distinguish between random packet loss and congestion loss. Our scheme can distinguish the different loss and increase the number of congestion window distinctively in the slow start. Keywords—satellite networks; transmission <b>control</b> <b>protocol</b> congestion; transmission <b>control</b> <b>protocol</b> scheme I...|$|R
5000|$|A binary floor <b>control</b> <b>protocol.</b> Binary Floor <b>Control</b> <b>Protocol</b> (BFCP) {{published}} as RFC 4582 ...|$|R
50|$|The DECT {{data link}} layer uses Link Access <b>Protocol</b> <b>Control</b> (LAPC), a {{specially}} designed variant of the ISDN data link protocol called LAPD. They are based on HDLC.|$|E
50|$|Layer 3 configuration: If using Internet <b>Protocol</b> <b>Control</b> Protocol (IPCP), it will {{negotiate}} or determine IP parameters {{such as the}} IP addresses, {{the maximum}} transmission unit, and name server addresses. Some versions may also support Internetwork Packet Exchange Control Protocol (IPXCP) and AppleTalk Control Protocol (ATCP) for routing IPX or Appletalk over the link.|$|E
50|$|After {{the link}} has been established, {{additional}} network (layer 3) configuration may take place. Most commonly, the Internet <b>Protocol</b> <b>Control</b> Protocol (IPCP) is used, although Internetwork Packet Exchange Control Protocol (IPXCP) and AppleTalk Control Protocol (ATCP) were once very popular. Internet Protocol Version 6 Control Protocol (IPv6CP) will see extended {{use in the}} future, when IPv6 replaces IPv4 as the dominant layer-3 protocol.|$|E
50|$|Other {{media gateway}} <b>control</b> <b>protocols</b> include the {{predecessors}} of MGCP, namely the Simple Gateway <b>Control</b> <b>Protocol</b> (SGCP) and the Internet <b>Protocol</b> Device <b>Control</b> (IPDC). A proprietary protocol using a similar architecture is the Cisco Skinny Call <b>Control</b> <b>Protocol</b> (SCCP).|$|R
5000|$|Stream sockets, {{also known}} as connection-oriented sockets, which use Transmission <b>Control</b> <b>Protocol</b> (TCP), Stream <b>Control</b> Transmission <b>Protocol</b> (SCTP) or Datagram Congestion <b>Control</b> <b>Protocol</b> (DCCP).|$|R
50|$|The Media Gateway <b>Control</b> <b>Protocol</b> (MGCP) is a {{signaling}} {{and call}} <b>control</b> communications <b>protocol</b> used in voice over IP (VoIP) telecommunication systems. It implements the media gateway <b>control</b> <b>protocol</b> architecture for <b>controlling</b> media gateways on Internet Protocol (IP) networks {{connected to the}} {{public switched telephone network}} (PSTN). The protocol is a successor to the Simple Gateway <b>Control</b> <b>Protocol</b> (SGCP), which was developed by Bellcore and Cisco, and the Internet <b>Protocol</b> Device <b>Control</b> (IPDC).|$|R
50|$|ISO-TP prepends {{one or more}} {{metadata}} bytes to the payload data in {{the eight}} byte CAN frame, reducing the payload to seven or fewer bytes per frame. The metadata is called the <b>Protocol</b> <b>Control</b> Information, or PCI. The PCI is one, two or three bytes. The initial field is four bits indicating the frame type, and implicitly describing the PCI length.|$|E
50|$|The {{protocol}} {{consisted of}} two distinct parts: control protocols and a data transport <b>protocol.</b> <b>Control</b> protocols included relatively rudimentary telephony features such as indicating who {{wants to talk to}} whom; ring tones; negotiation of voice encoding; and call termination. Data messages contained encoded speech. For each encoding scheme (vocoder) a frame was defined as a packet containing the negotiated transmission interval of a number of digitized voice samples.|$|E
50|$|Because FTP uses {{a dynamic}} {{secondary}} port (for data channels), many firewalls {{were designed to}} snoop FTP <b>protocol</b> <b>control</b> messages {{in order to determine}} which secondary data connections they need to allow. However, if the FTP control connection is encrypted using TLS/SSL, the firewall cannot determine the TCP port number of a data connection negotiated between the client and FTP server. Therefore, in many firewalled networks, an FTPS deployment will fail when an unencrypted FTP deployment will work. This problem can be solved {{with the use of a}} limited range of ports for data and configuring the firewall to open these ports.|$|E
50|$|SIP and H.323 are {{signaling}} protocols, while {{media gateway}} <b>control</b> <b>protocols</b> are device <b>control</b> <b>protocols.</b> The architectural difference between SIP and H.323, {{and the media}} gateway <b>control</b> <b>protocols</b> is that the relationships between entities in SIP and H.323 are peer-to-peer, while the relationships between entities in media gateway <b>control</b> <b>protocols</b> use the master/slave (technology) model. SIP and H.323 handle call setup, connection, management, and tear-down of calls between like interfaces, whereas media gateway <b>control</b> <b>protocols</b> define the mechanisms of setup of media paths and streams between IP and other networks.|$|R
3000|$|... {{discovery}} – investigate service discovery protocols for the ultra {{large scale}} FI that, while bridging {{the heterogeneity of}} existing <b>protocols,</b> <b>control</b> {{the quality of the}} retrieved information and provide security, privacy, and trust guarantees; [...]...|$|R
5000|$|TCP (Transmission <b>Control</b> <b>Protocol)</b> with {{congestion}} <b>control,</b> RTT estimation {{and fast}} recovery/fast retransmit ...|$|R
50|$|In {{computer}} networking, Internet <b>Protocol</b> <b>Control</b> Protocol (IPCP) is a Network Control Protocol (NCP) {{for establishing}} and configuring Internet Protocol over a Point-to-Point Protocol link. IPCP {{is responsible for}} configuring the IP addresses {{as well as for}} enabling and disabling the IP protocol modules on both ends of the point-to-point link. IPCP uses the same packet exchange mechanism as the Link Control Protocol. IPCP packets may not be exchanged until PPP has reached the Network-Layer Protocol phase, and any IPCP packets received before this phase is reached should be silently discarded. IPCP has the NCP protocol code number 0x8021.|$|E
5000|$|Packets {{are sent}} over a TCP {{connection}} which are established first between client and server. They contain a header {{and a body}} which, {{in the case of}} connection and control commands, is encoded using the Action Message Format (AMF). The header is split into the Basic Header (shown as detached from the rest, in the diagram) and Chunk Message Header. The Basic Header is the only constant part of the packet and is usually composed of a single composite byte, where the 2 most significant bits are the Chunk Type (fmt in the specification) and the rest form the Stream ID. Depending on the value of the former, some fields of the Message Header can be omitted and their value derived from previous packets while depending on the value of the latter, the Basic Header can be extended with 2 or 3 extra bytes (as {{in the case of the}} diagramme that has 3 bytes in total (c)). If the value of the remaining 6 bits of the Basic Header (BH) (least significant) is 0 then the BH is of 2 bytes and represents from Stream ID 64 to 319 (64+255); if the value is 1, then the BH is of 3 bytes (last 2 bytes encoded as 16bit Little Endian) and represents from Stream ID 64 to 65599 (64+65535); if the value is 2, then BH is of 1 byte and is reserved for low-level <b>protocol</b> <b>control</b> messages and commands. The Chunk Message Header contains meta-data information such as the message size (measured in bytes), the Timestamp Delta and Message Type. This last value is a single byte and defines whether the packet is an audio, video, command or [...] "low level" [...] RTMP packet such as an RTMP Ping.|$|E
30|$|In this section, {{we first}} briefly provide a {{tutorial}} about the channel {{access control mechanisms}} in WiFi, GPRS and WiMAX, then specify the <b>protocol</b> <b>control</b> mechanisms to enable the coexistence of heterogeneous wireless systems.|$|E
50|$|H.248/Megaco {{follows the}} {{guidelines}} of the API Media Gateway <b>Control</b> <b>Protocol</b> Architecture and Requirements in RFC 2805 (April 2000). Though H.248 performs the same functions as other Media Gateway <b>control</b> <b>protocol</b> namely MGCP, it uses different syntax, commands and processes and supports {{a broader range of}} networks. H.248 and MGCP protocols are complementary to H.323 and SIP protocols. The protocol was the result of collaboration of the MEGACO working group of the Internet Engineering Task Force (IETF) and International Telecommunication Union Telecommunication Study Group 16. The IETF originally published the standard as RFC 3015, which was later replaced by RFC 3525. The term Megaco is the IETF designation. Megaco combines Media Gateway <b>Control</b> <b>Protocol</b> (MGCP) and Media Device <b>Control</b> <b>Protocol</b> (MDCP). Media Gateway <b>Control</b> <b>Protocol</b> (MGCP) in turn was formed by merging Simple Gateway <b>Control</b> <b>Protocol</b> (SGCP) with Internet <b>Protocol</b> Device <b>Control</b> (IPDC).|$|R
40|$|Abstract—This paper {{gives out}} a survey on {{transport}} <b>control</b> <b>protocol</b> for {{wireless sensor networks}} (WSNs). First, it lists the disadvantages of traditional transport <b>control</b> <b>protocols</b> (TCP and UDP) for the environment of WSNs. Second, several design issues of transport <b>control</b> <b>protocols</b> for WSNs are presented. Third, some existing transport <b>control</b> <b>protocols</b> for WSNs are classified and compared. Finally, several problems needing further studying are outlined. I...|$|R
5000|$|In July 1998, Telcordia (Bellcore) and Cisco Systems {{created a}} {{protocol}} called Simple Gateway <b>Control</b> <b>Protocol</b> (SGCP) for <b>controlling</b> Telephony Gateways from external call control elements.Meanwhile, in mid-1998, Level 3 created a Technical Advisory Council (TAC), {{composed of a}} dozen leading communications equipment manufacturers. The TAC proposed a device protocol called Internet <b>Protocol</b> Device <b>Control</b> (IPDC) in August 1998. [...] IPDC {{was intended to be}} used between a media gateway and a media gateway controller. Media gateway were capable of acting as a voice over IP gateway, voice over ATM gateway, dialup modem media gateway, circuit switch, or cross- connect. In October 1998, Simple Gateway <b>Control</b> <b>Protocol</b> (SGCP) was combined with Internet <b>Protocol</b> Device <b>Control</b> (IPDC), resulting in MGCP.|$|R
40|$|This paper {{shows how}} {{software}} caches and hashing to multiple PCB (<b>protocol</b> <b>control</b> block) lists can increase demultiplexing efficiency in TCP/IP network server. We implemented six algorithms and executed 200 simulations [...] using four server traffic traces as input [...] to formulate best-use caching and hashing policies for demultiplexing TCP-base...|$|E
40|$|Round trip {{engineering}} {{of software}} from source code and reverse engineering of software from binary files {{have both been}} extensively studied and the state-of-practice have documented tools and techniques. Forward engineering of protocols has also been extensively studied and there are firmly established techniques for generating correct protocols. While observation of protocol behavior for performance testing has been studied and techniques established, reverse engineering of <b>protocol</b> <b>control</b> flow from observations of protocol behavior has not received {{the same level of}} attention. State-of-practice in reverse engineering the control flow of computer network proto-cols is comprised of mostly ad hoc approaches. We examine state-of-practice tools and techniques used in three open source projects: Pidgin, Samba, and rdesktop. We examine techniques proposed by computational learning researchers for grammatical inference. We propose to extend the state-of-art by inferring <b>protocol</b> <b>control</b> flow using grammatical inference inspired techniques to reverse engineer automata repre-sentations from captured data flows. We present evidence that grammatical inferenc...|$|E
40|$|A novel {{control flow}} {{monitoring}} scheme is presented {{that has been}} tailored to {{the architecture of the}} <b>protocol</b> <b>control</b> unit of a time-triggered communication system. Within the approach a signature derived on-line for a sequence of instructions ("block") is checked against an embedded reference signature. The execution of the signature checks is enforced by a timeout mechanism that is based on the instruction count between two successive checks...|$|E
50|$|Data Center Transmission <b>Control</b> <b>Protocol</b> (Data Center TCP or DCTCP) {{utilizes}} ECN {{to enhance}} the Transmission <b>Control</b> <b>Protocol</b> congestion <b>control</b> algorithm. It is used in data center networks. Whereas the standard TCP congestion control algorithm is only able to detect the presence of congestion, DCTCP, using ECN, is able to gauge the extent of congestion.|$|R
40|$|This paper {{gives out}} n survey on {{transport}} <b>control</b> <b>protocol</b> for {{wireless sensor networks}} (WSNs). First, it lists the disadvantages of traditional transport <b>control</b> <b>protocols</b> (TCP and UDP) for the environment of WSNs. Second, several design issues of transport <b>control</b> <b>protocols</b> for WSNs are presented. Third, some existing transport <b>control</b> <b>protocols</b> for WSNs are classified and compared. Finally, several problems needing further studying are outlined. © 2005 IEEE...|$|R
40|$|This {{dissertation}} {{develops a}} standard device model for networked audio devices and introduces a novel discovery and control environment {{that uses the}} developed device model. The proposed standard device model is derived from a study of current audio <b>control</b> <b>protocols.</b> Both the functional capabilities and design principles of audio <b>control</b> <b>protocols</b> are investigated {{with an emphasis on}} Open Sound Control, SNMP and IEC- 62379, AES 64, CopperLan and UPnP. An abstract model of networked audio devices is developed, and the model is implemented in each of the previously mentioned <b>control</b> <b>protocols.</b> This model is also used within a novel discovery and control environment designed around a distributed associative memory termed an object space. This environment challenges the accepted notions of the functionality provided by a <b>control</b> <b>protocol.</b> The study concludes by comparing the salient features of the different <b>control</b> <b>protocols</b> encountered in this study. Different approaches to <b>control</b> <b>protocol</b> design are considered, and several design heuristics for <b>control</b> <b>protocols</b> are proposed...|$|R
40|$|When a {{transport}} protocol segment {{arrives at a}} receiving system, the receiving system must determine which application is to receive the protocol segment. This decision is typically made by looking up a <b>protocol</b> <b>control</b> block (PCB) for the segment, based on information in the segment's header. PCB lookup (a form of demultiplexing) is typically {{one of the more}} expensive operations in handling inbound protocol segments [Fel 90]. Many recen...|$|E
40|$|PURPOSE: To {{investigate}} the anti-inflammatory effects of simvastatin in rats undergoing one-lung ventilation (OLV) followed by lung re-expansion. METHODS: Male Wistar rats (n= 30) were submitted to 1 -h OLV followed by 1 -h lung re-expansion. Treated group received simvastatin (40 mg/kg for 21 days) previous to OLV <b>protocol.</b> <b>Control</b> group received no treatment or surgical/ventilation interventions. Measurements of pulmonary myeloperoxidase (MPO) activity, pulmonary protein extravasation, and serum levels of cytokines and C-reactive protein (CRP) were performed...|$|E
40|$|Abstract—It is {{expected}} that vehicles have on-board terminals {{to communicate with the}} fixed network and also with surrounding vehicles in the near future. This paper explains our developed inter-vehicle P 2 P (peer-to-peer) communication experimental on-board terminal, we nicknamed it “V-ant”, which has the feature of adopting AODV (Ad-hoc On-Demand Distance Vector) <b>protocol,</b> <b>control</b> of AODV packets transmission direction using GPS data, and adaptive media switching between vehicle-to-vehicle ad-hoc communication, communication through access points, and PHS (Personal Handy-phone System in Japan). Keywords- AODV;P 2 P; vehicle-to-vehicle communicatio...|$|E
50|$|Note {{that the}} {{two-phase}} commit (2PC) protocol {{should not be}} confused with the two-phase locking (2PL) <b>protocol,</b> a concurrency <b>control</b> <b>protocol.</b>|$|R
40|$|New {{priority}} <b>protocol</b> <b>controls</b> {{access to}} token-ring local-area network (LAN) of digital-communication stations over widely ranging mix of low- and high-priority traffic. Protocol, called round-robin priority scheme (RRPS), introduces only small overhead and therefore degrades system performance only minimally. Key messages guaranteed access to local-area network during peak loads...|$|R
40|$|Wireless ad-hoc {{protocols}} are a {{hot topic}} for research. A wireless ad-hoc <b>protocol</b> <b>controls</b> communication in an unstructured, decentralized network of wireless nodes. Since the late 1990 's millions of dollars have been spent developing new protocols in this area. Prestigious institutions such as Berkeley and MIT have contributed new an...|$|R
