200|2060|Public
2500|$|In 2004, in {{recognition}} that {{newcomers to the}} ASL hobby {{would have a hard}} time learning 200 pages of rules quickly and happily, the Starter Kits were introduced. [...] Along with the new semi-mounted mapboards replacing the older mounted style, these kits provided newcomers to ASL with everything they needed to get into the game with a minimum of reading. [...] In a form of <b>Programmed</b> <b>Instruction</b> not possible with the ASL Rulebook, each starter kit comes with a small pamphlet outlining only the bare minimum of rules necessary for play of the game. [...] Each kit focuses on a particular aspect of ASL.|$|E
2500|$|The {{new game}} does not feature <b>programmed</b> <b>instruction,</b> instead {{requiring}} a thorough reading {{of at least}} four chapters of the ASL Rulebook {{to play a game}} with ordnance and/or vehicles in it. [...] Even the most basic ASL components were no longer introductory in nature, although Paratrooper masqueraded as such. [...] (This would be redressed in 2004 by the introduction of ASL Starter Kits). [...] Avalon Hill actually suggested that anyone wishing to play ASL also purchase the original Squad Leader and gain experience with that system first, and kept the original SL and three gamettes in print. [...] The necessity of owning boards from these modules in order to play printed scenarios in the core modules of ASL may also have been a factor in this decision. [...] So while ASL was intended to replace SL, there was a certain ambiguity for many years about the status of SL's replacement; the original game was still necessary as a steppingstone to learning ASL, and a source for needed mapboards.|$|E
2500|$|Edward Thorndike (1874–1949) {{supported}} the scientific movement in education. He based teaching practices on empirical evidence and measurement. Thorndike developed {{the theory of}} instrumental conditioning or the law of effect. [...] The law of effect states that associations are strengthened when it is followed by something pleasing and associations are weakened when followed by something not pleasing. He also found that learning is done {{a little at a}} time or in increments, learning is an automatic process and all the principles of learning apply to all mammals. Thorndike's research with Robert Woodworth on the theory of transfer found that learning one subject will only influence your ability to learn another subject if the subjects are similar. This discovery led to less emphasis on learning the classics because they found that studying the classics does not contribute to overall general intelligence. Thorndike was one of the first to say that individual differences in cognitive tasks were due to how many stimulus response patterns a person had rather than a general intellectual ability. [...] He contributed word dictionaries that were scientifically based to determine the words and definitions used. The dictionaries were the first to take into consideration the users maturity level. [...] He also integrated pictures and easier pronunciation guide into each of the definitions. Thorndike contributed arithmetic books based on learning theory. He made all the problems more realistic and relevant to what was being studied, not just to improve the general intelligence. He developed tests that were standardized to measure performance in school related subjects. His biggest contribution to testing was the CAVD intelligence test which used a multidimensional approach to intelligence and the first to use a ratio scale. His later work was on <b>programmed</b> <b>instruction,</b> mastery learning and computer-based learning: ...|$|E
5|$|Each 32-bit word of RAM could contain {{either a}} <b>program</b> <b>instruction</b> or data. In a <b>program</b> <b>instruction,</b> bits 0–12 {{represented}} the memory {{address of the}} operand to be used, and bits 13–15 specified the operation to be executed, such as storing a number in memory; the remaining 16bits were unused. The SSEM's single operand architecture meant that the second operand of any operation was implicit: the accumulator or the <b>program</b> counter (<b>instruction</b> address); <b>program</b> <b>instructions</b> specified only {{the address of the}} data in memory.|$|R
2500|$|Computed goto: A RASP <b>program</b> of <b>instructions</b> that modifies the [...] "goto address" [...] in a conditional- or unconditional-jump <b>program</b> <b>instruction.</b>|$|R
50|$|A Program Store is {{dedicated}} to each CPU and is a memory for the <b>program</b> <b>instructions</b> required by that CPU for processing calls, maintenance and for administrative tasks. The PS associated with the other CPU contains identical <b>program</b> <b>instructions.</b>|$|R
50|$|The idea {{of mastery}} {{learning}} resurfaced {{in the late}} 1950s and early 1960s {{as a corollary of}} <b>programmed</b> <b>instruction,</b> a technology invented by B.F. Skinner to improve teaching. Underlying <b>programmed</b> <b>instruction</b> was the idea that the learning of any behavior, no matter how complex, rested upon the learning of a sequence of less-complex component behaviors.|$|E
5000|$|... #Caption: Skinner's {{teaching}} machine, {{a mechanical}} device to control student progress in <b>programmed</b> <b>instruction</b> ...|$|E
5000|$|... #Caption: Skinner's {{teaching}} machine, {{a mechanical}} invention to automate {{the task of}} <b>programmed</b> <b>instruction</b> ...|$|E
2500|$|A RASP or Random access {{stored program}} machine {{begins as a}} counter machine with its [...] "program of instruction" [...] placed in its [...] "registers". Analogous to, but {{independent}} of, the finite state machine's [...] "Instruction Register", {{at least one of}} the registers (nicknamed the [...] "program counter" [...] (PC)) and one or more [...] "temporary" [...] registers maintain a record of, and operate on, the current instruction's number. The finite state machine's TABLE of instructions is responsible for (i) fetching the current <b>program</b> <b>instruction</b> from the proper register, (ii) parsing the <b>program</b> <b>instruction,</b> (iii) fetching operands specified by the <b>program</b> [...] <b>instruction,</b> and (iv) executing the <b>program</b> <b>instruction.</b>|$|R
5000|$|Target <b>program</b> <b>instruction</b> set: { INC h; DEC h; JZ h,xxx, HALT } ...|$|R
40|$|Eightieth Annual Report, July 1, 1976 to June 30, 1977, Legislative {{document}} no. 88 Topics in this Annual Report include: [Transmittal letters] Contents; Focus: Balance for Strength; Review: Student Affairs, Graduate <b>Programs,</b> <b>Instruction,</b> Library, Laboratory Animals, Support Facilities, Diagnostic Laboratory, Public Service and Continuing Education, Public Affairs, Research, Special Programs, Physical Resources; Reports and Summaries: Sponsored <b>Programs,</b> <b>Instruction</b> and Services, Admissions and Enrollment, Publications, Financial Statements, Faculty and Staff, Administrators and Advisers, Further Information...|$|R
50|$|Recently, the {{application}} of <b>programmed</b> <b>instruction</b> principles was applied to training in computer programs.|$|E
50|$|Susan Meyer Markle (1928-2008) was an American psychologist. She {{worked with}} B. F. Skinner on <b>programmed</b> <b>instruction.</b>|$|E
50|$|In March 1962 the Society {{adopted a}} new name—National Society for <b>Programmed</b> <b>Instruction</b> (NSPI) and a {{constitution}} was adopted.|$|E
50|$|<b>Program</b> <b>instructions</b> {{are stored}} in {{non-volatile}} flash memory. Although the MCUs are 8-bit, each instruction takes one or two 16-bit words.|$|R
5000|$|Check the Program Counter for {{the mailbox}} number that {{contains}} a <b>program</b> <b>instruction</b> (i.e. zero {{at the start of}} the program) ...|$|R
5000|$|A Reference {{topic is}} for topics that {{describe}} command syntax, <b>programming</b> <b>instructions,</b> and other reference material, and usually contains detailed, factual material.|$|R
5000|$|... e. Developments in {{educational}} technology, educational television, <b>programmed</b> <b>instruction,</b> and computer-assisted instruction {{should be applied}} to music study and research.|$|E
50|$|Daily Oral Language and the Saxon method, a math programme, are {{specific}} implementations of <b>programmed</b> <b>instruction</b> which have {{an emphasis on}} repetition.|$|E
50|$|The four Squad Leader games use <b>Programmed</b> <b>Instruction</b> {{to teach}} the game system; each {{scenario}} included with the games listed the new rules sections introduced with that scenario.|$|E
50|$|Claim 2 {{generally}} mentions {{a computer}} readable medium containing <b>program</b> <b>instructions,</b> but mostly contains nearly identically the exact process described in Claim 3.|$|R
50|$|Control {{dependency}} is {{a situation}} in which a <b>program</b> <b>instruction</b> executes if the previous instruction evaluates in a way that allows its execution.|$|R
50|$|The way English {{learners}} are instructed {{depends on}} their level of English proficiency and the programs provided in their school or district. In some <b>programs,</b> <b>instructions</b> are taught in both, English and their home language. In other <b>programs,</b> <b>instructions</b> are only in English, but {{in a manner that}} is comprehensible to the students (Wright, 2010). Yet, there are other programs in which ELLs are pulled out of the classroom for separate English instruction, or the instruction can also be given in the classroom itself (Wright, 2010).|$|R
50|$|Programmed {{learning}} (or <b>programmed</b> <b>instruction)</b> is a research-based {{system which}} helps learners work successfully. The method {{is guided by}} research done {{by a variety of}} applied psychologists and educators.|$|E
5000|$|Mager {{is one of}} {{the founders}} of International Society for Performance Improvement (ISPI) in 1962, {{originally}} known as National Society for <b>Programmed</b> <b>Instruction</b> (NSPI), and was its president in 1965-66.|$|E
5000|$|<b>Programmed</b> <b>Instruction,</b> Learning, or Teaching (PILOT) is {{a simple}} {{programming}} language developed in the 1960s.Like its younger sibling LOGO, it was an early foray into the technology of computer-assisted instruction ...|$|E
5000|$|Decodes the <b>program</b> <b>instruction</b> in the IR, {{selecting}} machine resources, {{such as a}} {{data source}} register and a particular arithmetic operation, and coordinates activation of those resources.|$|R
50|$|This page {{provides}} the comparison tables of functional <b>programming</b> <b>instructions</b> between <b>programming</b> languages. Comparison of basic instructions of imperative paradigm {{is provided by}} the comparison of basic instructions.|$|R
5000|$|... 4001: 256-byte ROM (256 8-bit <b>program</b> <b>instructions),</b> and one {{built-in}} 4-bit I/O port. A 4001 ROM+I/O chip {{cannot be}} used in a system along with a 4008/4009 pair.|$|R
50|$|In 1961, Komoski {{began working}} as {{president}} of the Center for <b>Programmed</b> <b>Instruction</b> (CPI). Started as an independent nonprofit organization, the center affiliated with the Institute for Educational Technology at Columbia's Teachers College. Funded by the Carnegie Corporation of New York, CPI supported the development of <b>programmed</b> <b>instruction</b> as a practice. Komoski later served as associate executive director of the Institute for Educational Technology and adjunct associate professor of education at Columbia. While at Columbia, Komoski authored the first publication to document that many educational materials did not undergo field testing. Developers did not revise the materials with feedback from real learners.|$|E
5000|$|The Copper {{is another}} {{sub-component}} of Agnus; The name {{is short for}} [...] "co-processor". The Copper is a programmable finite state machine that executes a <b>programmed</b> <b>instruction</b> stream, synchronized with the video hardware.|$|E
5000|$|Characterized {{as one of}} the [...] "godmothers" [...] of <b>programmed</b> <b>instruction</b> and machine-based training, Dr. Markle {{was highly}} trained in her field, and had a long and {{distinguished}} career. Some of her accomplishments are: ...|$|E
50|$|TOTUS is {{a generic}} {{application}} tool {{that acts as}} a Bridge to Interface various bench instrumentation with ATE / PC’s using high level <b>programming</b> <b>instructions</b> and with Interactive GUI.|$|R
50|$|The Institute of Native American Studies (INAS) {{was founded}} in 2004 at the University of Georgia in Athens, Georgia, to provide <b>programming,</b> <b>instruction,</b> and {{research}} support in Native American Studies.|$|R
50|$|A stored-program digital {{computer}} {{is one that}} keeps its <b>program</b> <b>instructions,</b> {{as well as its}} data, in read-write, random-access memory (RAM). Stored-program computers were an advancement over the program-controlled computers of the 1940s, such as the Colossus and the ENIAC, which were programmed by setting switches and inserting patch cables to route data and to control signals between various functional units. In the vast majority of modern computers, the same memory is used for both data and <b>program</b> <b>instructions,</b> and the von Neumann vs. Harvard distinction applies to the cache architecture, not the main memory (split cache architecture).|$|R
