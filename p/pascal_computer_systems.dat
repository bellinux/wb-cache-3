0|10000|Public
40|$|AbstractRandom number {{generators}} are {{of great}} importance for many scientific and engineering applications. Although the <b>PASCAL</b> <b>computer</b> language is becoming increasingly important for such applications, in many <b>computer</b> <b>systems</b> no <b>PASCAL</b> functions are available for this purpose. This short note {{is concerned with the}} development of PASCAL functions for the generation of random numbers with uniform, exponential and normal distributions. The functions are based on well established mathematical methods and have been developed and tested on a VAX 11 / 785 minicomputer. However, the functions are written in standard PASCAL and can be used for other machines...|$|R
50|$|Smart Pascal is a dialect of the Object <b>Pascal</b> <b>computer</b> {{language}} that is derived from Delphi Web Script, but is enhanced and adapted for Smart Mobile Studio, a commercial development suite that generates JavaScript rather than machine code.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedVarious factors concerning the U. S. Coast Guard Standard Terminal microcomputer, including {{the large number}} of installation sites, steady turnover of user personnel, and conflicting demands of operational commitments indicate that computer-based training is a desirable approach for indoctrinating new users of the <b>computer</b> <b>system.</b> Any such instructional computer program developed for this purpose should consider the characteristics of the trainee audience, particularly the varied levels of procedural detail desired and constraints on time available for training. The Elaboration Theory of Instructional Design provides an excellent framework for creating a viable computer-based course of instruction. A <b>Pascal</b> <b>computer</b> program and demonstration lesson modules utilize the macro-strategy components of Elaboration Theory in an introductory course on computer procedures. Course presentation is controlled by special characters imbedded in the lesson text files and interpreted by the program. [URL] United States Coast Guar...|$|R
5|$|MacPaint {{was written}} by Bill Atkinson, a member of Apple's {{original}} Macintosh development team. The original MacPaint consisted of 5,804 lines of <b>Pascal</b> <b>computer</b> code, augmented by another 2,738 lines of 68000 assembly language. MacPaint's user interface was designed by Susan Kare, {{also a member of}} the Macintosh team. Kare also beta-tested MacPaint before release.|$|R
40|$|The Analytic Hierarchy Process (AHP), a {{decision-making}} method {{based upon}} division of problem spaces into hierarchies. This paper looks at AHP {{as a tool}} used in determination of industrial location. Solution of AHP method finished with the iteration process of through at scheme of <b>Pascal</b> <b>computer</b> program to assist the calculation process. From result of program device which {{have been made to}} be obtained the highest total priority value (TPV) was potential distribution and promotion trac...|$|R
40|$|A {{rule-based}} expert system, EMERGE, {{was designed}} to function in an emergency room setting. EMERGE is implemented in the standard <b>Pascal</b> <b>computer</b> language, is machine-independent, and can operate on a microcomputer. The knowledge base for EMERGE was derived from an existing medical outline known as a criteria map. In this paper, the adaptation of EMERGE to a new knowledge base is described. The new area of application is the diagnosis and management of diabetes mellitus. The rules for this knowledge base were again derived from an existing criteria map...|$|R
5000|$|California <b>Computer</b> <b>Systems</b> Clock (California <b>Computer</b> <b>Systems)</b> ...|$|R
40|$|<b>Computer</b> <b>systems</b> {{have become}} an {{important}} element of the world economy, with billions of dollars spent each year on development, manufacture, operation, and maintenance. Combining coverage of <b>computer</b> <b>system</b> reliability, safety, usability, and other related topics into a single volume, <b>Computer</b> <b>System</b> Reliability: Safety and Usability eliminates the need to consult many different and diverse sources in the hunt for the information required to design better <b>computer</b> <b>systems.</b> After presenting introductory aspects of <b>computer</b> <b>system</b> reliability such as safety, usability-related facts and figures...|$|R
50|$|Computers: The <b>computer</b> <b>systems</b> and {{compatibility}} of <b>computer</b> <b>systems.</b> Also includes data processing.|$|R
2500|$|List of <b>computer</b> <b>system</b> emulators - {{a list of}} Macintosh {{and other}} <b>computer</b> <b>system</b> emulators ...|$|R
50|$|Marko Calasan (Macedonian: Марко Чаласан) (born 24 July 2000) is a Macedonian <b>computer</b> <b>systems</b> prodigy. He {{is noted}} {{for being the}} {{youngest}} certified <b>computer</b> <b>systems</b> administrator {{at the age of}} eight and the youngest certified <b>computers</b> <b>systems</b> engineer at the age of nine.|$|R
40|$|This paper briefly {{surveys the}} data {{dependent}} statistical methods useful for <b>computer</b> <b>systems</b> modelling. The techniques are classified {{according to their}} applicability toward comparison, tuning and design of <b>computer</b> <b>systems.</b> A review of papers dealing with statistical modelling of <b>computer</b> <b>systems</b> is presented and a comprehensive bibliography is included to provide a useful source of reference toward the present and potential applications of statistical methods for <b>computer</b> <b>system</b> modelling. 1...|$|R
40|$|An {{analysis}} of the incomprehensibility of large, complex <b>computer</b> <b>systems</b> is made. The thesis Is that there is strong relationship between system incomprehensibility and the necessity to trust <b>computer</b> <b>systems.</b> A cogent definition of incomprehensi- bility in <b>computer</b> <b>systems</b> is established, with common themes drawn from interdisciplinary literature dealing wtth computers and society. Reasons {{for the creation of}} Incomprehensible <b>computer</b> <b>systems</b> are explored, as well as the consequences (both technical and social) of using and relying on them. The relationship between the real and perceived purposes of <b>computer</b> <b>systems</b> and the appropHateness of. trusting these systems Is analyzed [...] Approaches for dealing with the existence of vital <b>computer</b> <b>systems</b> which are functionally Incomprehensible are evaluated, and positive suggestions are made...|$|R
5000|$|The Public-Access <b>Computer</b> <b>Systems</b> Review (abbreviated PACS Review) {{was a free}} {{electronic}} journal about end-user <b>computer</b> <b>systems</b> in libraries.|$|R
5000|$|M.Sc <b>Computer</b> <b>Systems</b> EngineeringADMISSION REQUIREMENTB.Sc <b>Computer</b> <b>Systems</b> Engineering ProgramF.Sc. Pre-Engineering/ICS (Math, Physics, Computer Science) {{at least}} 60 % markOR ...|$|R
40|$|To equip {{students}} with a foundational understanding of the threats to <b>computer</b> <b>systems.</b> Students will be equipped to: • understand the practical principles and models for protecting <b>computer</b> <b>systems</b> from various forms of attacks; • understand the major security issues and problems in <b>computer</b> <b>systems,</b> and the countermeasures to mitigate the corresponding attacks; and • acquire practical skills in using various tools and resources to analyze the security of <b>computer</b> <b>systems,</b> particularly the web systems...|$|R
40|$|To impart the {{fundamental}} concepts of <b>computer</b> <b>system</b> performance evaluation. Course Outcomes: · Design of simulation models {{that represent the}} real-life <b>computer</b> <b>systems</b> · Usage of simulation models as laboratory models for generating artificial history of the <b>computer</b> <b>systems</b> over time · Design of experiments; and performance evaluation metric...|$|R
5000|$|On April 7, 2017, Troup County's <b>computer</b> <b>systems</b> {{were the}} victim of a ransomeware attack that caused all county <b>computer</b> <b>systems</b> to be inaccessible. This {{included}} the sheriff's office and district attorney's office. [...] After 5 days, the county was still working to get 400 <b>computer</b> <b>systems</b> back online.|$|R
40|$|This Unit is {{designed}} to enable users to evaluate <b>computer</b> <b>systems</b> and their major peripherals. The student will learn {{how to set up}} peripherals in order to transfer data between a <b>computer</b> <b>system</b> and the peripheral, methods used to reduce health and security risks associated with using a <b>computer</b> <b>system.</b> ...|$|R
50|$|A 1970s-era <b>computer</b> <b>system</b> {{coordinates}} {{the setting}} of 750 traffic lights. In 2009, the <b>computer</b> <b>system</b> failed for a brief period, causing considerable problems.|$|R
40|$|Abstract. The {{design of}} the <b>computer</b> <b>system</b> was {{significantly}} changed due to the emergence and popularization of the multicore processors. Moving to the advanced multicore processors, moving to the heterogeneous <b>computer</b> <b>systems</b> and increasing of the integrity level between <b>computer</b> <b>system</b> components are {{the main trends of}} the <b>computer</b> <b>systems</b> development. Significant changes in the <b>computer</b> <b>systems</b> design make reasonable the attempt of reviewing the operating system design to make it optimal for the new hardware platform. The proposed operation system design assume moving from monolithic centralized operating system to the decentralized network of the distributed independent nodes, each of which will play the role of the processor driver and threads container. The proposed design provide the numbers of the benefits against ordinal operating systems: dynamics in space and time, improved level of reliability and flexibility, support of the heterogeneous <b>computer</b> <b>systems...</b>|$|R
50|$|Engineers {{working in}} <b>computer</b> <b>systems</b> work on {{research}} projects {{that allow for}} reliable, secure, and high-performance <b>computer</b> <b>systems.</b> Projects such as designing processors for multi-threading and parallel processing are included in this field. Other examples of work in this field include development of new theories, algorithms, and other tools that add performance to <b>computer</b> <b>systems.</b>|$|R
40|$|My {{research}} interest lies in {{the area}} of <b>computer</b> <b>systems</b> security. In this statement, I discuss my current and future research to answer the following systems security question: How can we securely perform security-sensitive tasks on potentially compromised <b>computer</b> <b>systems?</b> Today’s networked world consists mainly of vulnerable systems. This makes attacking <b>computer</b> <b>systems</b> easy an...|$|R
40|$|Method of {{information}} processing in reconfigurable <b>computer</b> <b>systems</b> is formulated and its improvements that allow an information processing efficiency to increase are proposed. New type of high-performance <b>computer</b> <b>systems,</b> which are named self-configurable FPGA-based <b>computer</b> <b>systems</b> and perform information processing {{according to this}} improved method, is proposed. The structure of self-configurable FPGA-based <b>computer</b> <b>systems,</b> rules of application of computer software and hardware means, which are necessary for these systems implementation, are described and their execution time characteristics are estimated. The directions for further works are discussed...|$|R
40|$|Abstract [...] The paper {{presents}} an educational environment developed for teaching {{a course in}} Computer architecture and organization. It {{is made up of}} an educational <b>computer</b> <b>system,</b> a reference manual, a software package and a set of laboratory experiments. The educational <b>computer</b> <b>system</b> is devised to cover the basic structure of a <b>computer</b> <b>system.</b> The reference manual provides all its details. The software package includes the program development tools and the graphic simulator. The set of laboratory experiments demonstrates the functioning of the educational <b>computer</b> <b>system...</b>|$|R
40|$|From {{a common}} {{diversity}} of <b>computer</b> <b>systems</b> the significant group is selected, the main distinctive performance {{of which is}} the handling of document files only. For given group the analysis of forming mediums of <b>computer</b> <b>systems</b> is fulfilled. The approaches on the creation of the complex protection system of the information for standard <b>computer</b> <b>systems</b> are offered...|$|R
40|$|The paper {{presents}} a comparative {{study on the}} patterns {{of the life cycle}} of a <b>computer</b> <b>system.</b> There are analyzed the advantages of each pattern and presented the graphic schemes that point out each stage and step in the evolution of a <b>computer</b> <b>system.</b> In the end the classifications of the methods of projecting the <b>computer</b> <b>systems</b> are discussed...|$|R
50|$|Trusted <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) is a United States Government Department of Defense (DoD) {{standard}} that sets basic requirements {{for assessing the}} effectiveness of computer security controls built into a <b>computer</b> <b>system.</b> The TCSEC was used to evaluate, classify and select <b>computer</b> <b>systems</b> being considered for the processing, storage and retrieval of sensitive or classified information.|$|R
40|$|Practical formal {{verification}} of complex <b>computer</b> <b>systems</b> requires proof robustness and efficiency {{to protect against}} inevitable mistakes and system specification and design changes. PVS is a theoremproving system based on higher-order logic with which we demonstrate the kind of robust code proofs needed for verification of realistic-sized computing <b>systems.</b> 1 Introduction <b>Computer</b> <b>system</b> correctness {{can be difficult to}} establish. Formal proofs about formal models of <b>computer</b> <b>systems</b> have the potential to improve the reliability of <b>computer</b> <b>system</b> designs, but they have several drawbacks. Formal proofs about <b>computer</b> <b>systems</b> are often very complex and hard to get right, and the social process that is usually counted on to certify mathematical proofs is ineffective because particular <b>computer</b> <b>system</b> designs are often proprietary and in any case not of general interest. Mechanical theorem provers can help overcome both of these problems with formal proof: proofs generated with computer [...] ...|$|R
40|$|Recent {{manufacturing}} {{systems have}} been constructed from many <b>computer</b> <b>systems</b> such as PLC, CNC, FA controller and host <b>computer.</b> Each <b>computer</b> <b>system</b> has high performance because the ability of each <b>computer</b> <b>system</b> has been progressed according to the general computer technology. Although <b>computer</b> <b>systems</b> are connected to each other by network to exchange manufacturing data, these software systems are independent from the software system on the other <b>computer</b> <b>system.</b> The {{aim of this study}} is to develop a software platform for realizing a unified computing environment that shares mutually software modules between each <b>computer</b> <b>system</b> in a manufacturing system. This study proposes a concept of more flexible manufacturing software platform by the distributed object technology, and describes development of a new generation Computerized Numerical Controller (CNC in short) based on the proposed concept. INTRODUCTION Because of the complicated factors to be considered on a current product [...] ...|$|R
40|$|Abstract: Many {{computer}} users use <b>computer</b> <b>systems</b> {{to carry out}} their daily activities without recourse to a good maintenance culture. Users do wait until their systems stopped working before they begin to run from one pole to another seeking for professional technical attention. Housekeeping is a set of routine tasks you should perform on a regular basis, which will help keep your <b>computer</b> <b>system</b> running smoothly and efficiently. This paper examined practical approach of carrying out <b>computer</b> <b>system</b> Housekeeping routines. The paper also justified why <b>computer</b> <b>systems</b> Housekeeping and how to perform Housekeeping routine on PC external components. There are two ways to performing housekeeping routine which were discussed in this paper. One is the external components of the <b>computer</b> <b>system</b> and two, the <b>computer</b> <b>systems</b> files. This paper also discussed some useful hints a computer user can follow to elongate the life span of their systems...|$|R
5000|$|... "Workshop on the {{microarchitecture}} of <b>computer</b> <b>systems,</b> June 23-25, 1975, Nice / [...] " [...] Workshop on the Microarchitecture of <b>Computer</b> <b>Systems,</b> Nice, 1975. | 1975. | text ...|$|R
40|$|The discussions {{presented}} in this dissertation have been undertaken in answer {{to the need for}} securing the intellectual assets stored on <b>computer</b> <b>systems.</b> <b>Computer</b> vulnerabilities and their influence on <b>computer</b> <b>systems</b> and the intellectual assets they possess are the main focus of this research. In an effort to portray the influence of vulnerabilities on a <b>computer</b> <b>system,</b> a method for assigning a measure of risk to individual vulnerabilities is proposed. This measure of risk, in turn, gives rise {{to the development of the}} vulnerability risk status of a <b>computer</b> <b>system.</b> In short, vulnerability risk status is the total measure of risk a <b>computer</b> <b>system</b> is exposed to according to its vulnerabilities, at a certain point in time. A prototype was developed to create the vulnerability risk status of a <b>computer</b> <b>system,</b> which summarizes the purpose of the research in this dissertation. The discussions start with background information concerning the influence of the inherent vulnerabilities on <b>computer</b> <b>systems.</b> A conceptual model is proposed for achieving the creation of the vulnerability risk status of a <b>computer</b> <b>system.</b> Later chapters are concerned with categorizing all known vulnerabilities so that the main areas of vulnerability within a <b>computer</b> <b>system</b> can be identified. Different security technologies and tools are also evaluated to determine those that could aid the creation of vulnerability risk status. A security tool is selected and the generic, architectural elements are manipulated to allow the added functionality of vulnerability risk status. In conclusion, discussions are evaluated to determine whether the problem statements have been addressed and thoroughly resolved. Eloff, J. H. P., Prof...|$|R
50|$|John’s {{access to}} the Citigroup <b>computer</b> <b>system</b> was {{confined}} and {{she was aware of}} the Citigroup employee company’s policies, establishing restrictions {{on the use of the}} Citigroup <b>computer</b> <b>system.</b>|$|R
40|$|A {{behavioral}} {{model of}} Trojans which formalizes {{the features of}} Trojans functioning in <b>computer</b> <b>systems</b> is proposed. Software for <b>computer</b> <b>systems</b> Trojans diagnosis was developed. It is based on methods of diagnosing <b>computer</b> <b>systems</b> in monitor and scanner modes and allows improving reliability and efficiency. Trojan diagnosis software {{makes it possible to}} detect the new Trojans with high reliability and efficiency...|$|R
40|$|SUMMARY This paper {{proposes a}} soft-error model for {{accurately}} esti-mating reliability of a <b>computer</b> <b>system</b> at the architectural level within rea-sonable computation time. The architectural-level soft-error model identi-fies {{which part of}} memory modules are utilized temporally and spatially and which single event upsets (SEUs) are critical to the program execu-tion of the <b>computer</b> <b>system</b> at the cycle accurate instruction set simulation (ISS) level. The soft-error model is capable of estimating reliability of a <b>computer</b> <b>system</b> that has several memory hierarchies with it and finding which memory module is vulnerable in the <b>computer</b> <b>system.</b> Reliability estimation helps system designers apply reliable design techniques to vul-nerable part of their design. The experimental results {{have shown that the}} usage of the soft-error model achieved more accurate reliability estimation than conventional approaches. The experimental results demonstrate that reliability of <b>computer</b> <b>systems</b> depends on not only soft error rates (SERs) of memories but also the behavior of software running in <b>computer</b> <b>systems...</b>|$|R
