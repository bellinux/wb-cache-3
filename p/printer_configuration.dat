4|3|Public
5000|$|IEEE 1284.1-1997: Transport Independent Printer/System Interface- a {{protocol}} for returning <b>printer</b> <b>configuration</b> and status ...|$|E
50|$|The Network Printing Alliance Protocol (NPAP) was {{developed}} as a protocol for returning <b>printer</b> <b>configuration</b> and status via parallel, serial, network and later USB. In 1997, NPAP was approved as IEEE 1284.1 TIPSI. However, SNMP became the standard for network printer management and thus NPAP was never widely accepted. Lexmark {{appears to be the}} only manufacturer still supporting NPAP.|$|E
5000|$|In word {{processing}} and desktop publishing applications, WYSIWYG {{means that the}} display simulates the appearance and represents the effect of fonts and line breaks on the final pagination using a specific <b>printer</b> <b>configuration,</b> so that, for example, a citation on page 1 of a 500-page document can accurately refer to a reference three hundred pages later.|$|E
50|$|In System 7.1, a {{separate}} Fonts folder {{appeared in the}} System Folder. Fonts were automatically installed when dropped on the System Folder, and became available to applications after they were restarted. Font resources were generally grouped together in suitcase files. However, rules for storing printer fonts varied greatly between different system, <b>printer</b> and application <b>configurations</b> until {{the advent of the}} new Fonts folder. Typically, they had to be stored directly in the System Folder or in the Extensions Folder.|$|R
3000|$|... (i) Color {{digital camera}} High-resolution color digital camera (5.0 million pixels) for {{capturing}} images of coke microstructures and textures. Color {{depth of the}} images was of 64 bits. The camera has Peltier cooling element for effective reduction of thermal noise. Signal to noise ratio was of 1000 : 1. (ii) Interfaces All required interfaces; including optical C-mount adapter, FireWire interface and PCI interface card was supplied. PCI data transfer rates to be about 132  MB/s. (iii) Software Image processing software of Leica Qwin was used to capture images on-line, store and analyze. It has facilities for calibration measurement according to lens configuration. (iv) Data acquisition system This was comprised of a Personal Computer and <b>printer</b> having following <b>configuration</b> Processor—Intel 4 th generation I 3 generation processor, speed 3.4  GHz, co-processor in-built, RAM 2  GB (DDR 3), hard disk 80  GB, Win XP and Office XP preloaded and back-up in CD, PCI slot, CD-re-writer, video card, 17 inch color monitor, key board, optical mouse, high quality laser jet printer and UPS.|$|R
40|$|We designed, built, tested, and fielded a vote {{counting}} {{system called}} Scantegrity. Scantegrity {{is part of}} a new class of end-to-end (E 2 E) verifiable voting systems. E 2 E verifiable systems are designed to solve chain of custody problems in elections by providing a privacy-preserving receipt to each voter. The voter can use the receipt to check a public record and verify that his or her ballot is counted without revealing the selected candidate. The public record gives election officials the ability to provide a strong, universally-accessible audit of the results, enabling transparent, verifiable elections that maintain privacy expectations. E 2 E systems offer radical improvements to integrity and transparency of election systems, and the adoption of E 2 E systems in public-sector elections can improve outcome integrity. In our design, we carefully considered the balance between usability and security issues, and we discuss the changes we made to implement the system. We examined the implementation through the results of a practical test of Scantegrity in a mock election in April 2009, which evaluated the system's performance and surveyed the election participants about their experience with the system. We describe a number of changes we made to the system {{as a result of this}} test. For example, Scantegrity required better printing technology and a tally reconciliation system. We evaluated the modified system a second time by fielding it in the Takoma Park, Maryland, November 2009 municipal election, where we were able to survey voters and observe events throughout election day. In addition to examining the performance of the system during election day, we analyzed the survey results and found that most voters felt positively about the system despite some problems when taking advantage of the new features. We suggest further improvement to the usability of Scantegrity by proposing and analyzing the addition of an automatic receipt <b>printer</b> in different <b>configurations.</b> To design the receipt printer, we took advantage of protections provided by the Trusted Computing platform that improve the reliability and robustness of the component. The final system automatically provides each voter a privacy-preserving receipt that can be used to verify each ballot has been counted properly...|$|R
40|$|Maintaining the {{printing}} configuration files {{for a large}} site (400 machines, 60 public printers, 40 private printers, 30 print spoolers) can be a major job. At RPI, we developed a system that will automatically generate the <b>printer</b> <b>configuration</b> file for any machine, depending on what printers are driven by that machine. It also allows us to only have a printer appear only on a subset of machines, rather than on all machines. This paper describes the design and deployment of the system. We use a relational database to manage the printer information, printer type attributes, host grouping and to track hosts using the system. All sources and related information are available for anonymous FTP. Motivation One of the first parts of the Simon project 1, was a program called printmaster, which was used to generate the /etc/printcap file for any of our workstations or print servers. 2 While it did have attribute matching for printer types, it did not support host groups, and in [...] ...|$|E

