9|0|Public
40|$|We {{develop a}} coalgebraic theory of Kleene algebra with tests (KAT) {{along the lines}} of Rutten (1998) for Kleene algebra (KA) and Chen and <b>Pucella</b> (2003) for a limited version of KAT, resolving some {{technical}} issues raised by Chen and <b>Pucella.</b> Our treatment includes a simple definition of the Brzozowski derivative for KAT expressions and an automata-theoretic interpretation involving automata on guarded strings. We also give a complexity analysis, showing that an efficient implementation of coinductive equivalence proofs in this setting is tantamount to a standard automatatheoretic construction. It follows that coinductive equivalence proofs can be generated automatically in PSPACE. This matches the bound of Worthington (2008) for the automatic generation of equational proofs in KAT. ...|$|E
40|$|We {{present an}} {{inference}} {{system for a}} version of the pi-calculus in Haskell for the session type pro-posed by Honda et al. The session type is very useful in checking if the communications are well-behaved. The full session type implementation in Haskell was first presented by <b>Pucella</b> and Tov, which is ‘semi-automatic ’ in that the manual operations for the type representation was necessary. We give an automatic type inference for the session type by using a more abstract representation for the session type based on the ‘de Bruijn levels’. We show an example of the session type inference for a simple SMTP client. ...|$|E
40|$|Practical {{implementations}} {{of high-level}} languages must {{provide access to}} libraries and system services that have APIs specified in a low-level language (usually C). An important characteristic of such mechanisms is the foreign-interface policy that defines how to bridge the semantic gap between the high-level language and C. For example, IDL-based tools generate code to marshal data {{into and out of}} the high-level representation according to user annotations. The design space of foreign-interface policies is large and there are pros and cons to each approach. Rather than commit to a particular policy, we choose to focus on the problem of supporting a gamut of interoperability policies. In this paper, we describe a framework for language interoperability that is expressive enough to support very efficient implementations of a wide range of different foreign-interface policies. We describe two tools that implement substantially different policies on top of our framework and present benchmarks that demonstrate their efficiency. 1 Email: kfisher@research. att. com 2 Email: riccardo@cs. cornell. edu 3 Email: jhr@research. bell-labs. com This is a preliminary version. The nal version will be published in Electronic Notes in Theoretical Computer Science URL: www. elsevier. nl/locate/entcs Fisher, <b>Pucella,</b> and Reppy...|$|E
40|$|I {{give the}} price as quoted on amazon; however, the reader {{would do well}} to consult www. bestbookbuys. com or bookpool. com. In this column we review the {{following}} books. 1. Automata and Languages: Theory and Applications by Alexander Meduna. Review by James Rauff. This is a textbook in automata theory in the theorem-proof style. 2. Control Flow Semantics, by J. de Bakker and E. de Vink. Review by Riccardo <b>Pucella.</b> This book looks at semantics of imperative languages. 3. External Memory Algorithms (proceedings of DIMACS Workshop, May 20 - 22, 1998) Edited by J. M. Abello and J. S. Vitter. Review by Gianluca Della Vedova. This is a collection of articles on external memory algorithms, where are used when there is too much memory to store in core. 4. π- Unleashed. Authors: Jörg Arndt and Christoph Haenel. Review by David Marcus. This is a history of π with an emphasis on the progress made in computing in quickly. 5. Chaotic Elections! by Donald Saari and Mathematics and Politics by Alan Taylor. Review by William Gasarch. These book looks at some of the mathematical problems tha...|$|E
40|$|Hardy and Willi–Hans Steeb. Reviewed by Nick Papanikolaou, 2005. This is an {{undergraduate}} textbook which, {{as the title}} promises, has a rather wide coverage. 2. Integer Programming By Laurence A. Wolsey. Reviewed by E. Jonathan Chapin. This is a book on Integer Programming that is aimed at Advanced Undergraduates. 3. Computational Line Geometry by H. Pottmann and J. Wallner. Reviewed by Georg Essl. This is not a book on Computational Geometry, {{and it is not}} a book on Numerical Line Geometry. Its a new look at an old field — line geometry looked at in a way {{that can be used for}} computation. 4. Logic for Computer Scientists by Uwe Schöning. Review by Riccardo <b>Pucella.</b> This is a short introductory book on propositional and first-order logic, with a bias towards computer scientists. This is, its emphasis is computational. 5. Teaching Statistics Using Baseball by Jim Albert. Review by James Glenn. This is an undergrad text in statistics that uses Baseball for its main examples. Books I want Reviewed If you want a FREE copy of one of these books in exchange for a review, then email me a...|$|E
40|$|Abstract. We {{study the}} {{complexity}} of satisfiability for DLP + dyn, an expressive logic introduced by Demri that allows to reason about dynamic policies. DLP + dyn extends the logic DLPdyn of <b>Pucella</b> and Weissman, which in turn extends van der Meyden’s Dynamic Logic of Permission (DLP). DLP + dyn generously enhances DLP and DLPdyn by allowing to update the policy set by adding or removing policy transitions, which are defined as a direct product of two sets, each spec-ified by a formula of the logic itself. It is proven that satisfiability for DLP + dyn is complete for deterministic exponential time. Our results close the complex-ity gap of satisfiability for DLP + dyn from 2 EXP, and for DLPdyn from NEXP, to EXP respectively, matching the EXP lower bound both inherit from Propositional Dynamic Logic (PDL). To prove the EXP upper bound for DLP + dyn, we first proceed by accurately identifying a suitable generalization of PDL, which allows to use compressed programs and then find a satisfiability preserving translation from DLP + dyn to this extension of PDL. To finally show the EXP upper bound for, we prove that satisfiability of our extension of PDL lies in EXP. DLP + dyn...|$|E
40|$|The prices I {{provided}} {{this time}} are from amazon. com; however, the website www. bestbookbuys. com gives {{a range of}} prices from place to purchase books on the web. (amazon. com is usually not the cheapest, and its usually not even close.). Welcome to the Book Reviews Column. We hope to bring you at least two reviews of books every month. In this column four books are reviewed. 1. Proofs and Confirmations: {{the story of the}} alternating sign matrix conjecture, by David Bressoud. This is the exciting story of how the alternating sign conjecture was solved. It gives a nice view of how mathematics is actually done. Reviewed by Jeremy Avigad. 2. Proofs and Refutations by Imre Lakatos. This is an classic work in the philosophy of mathematics. It forces us to think of what we do in a new light. It is reviewed here since it is a nice companion review to Proofs and Confirmations. Reviewed by William Gasarch. 3. Dynamic Logic (Foundations of Computing) by D. Harel, D. Kozen and J. Tiuryn. This is a book about assigning logic and semantics to programs. Reviewed by Riccardo <b>Pucella.</b> 4. Analysis of Algorithms:An Active Learning Approach by Jeffrey J. McConnell. Review by Christopher Jennings This is a undergraduate text in algorithms that encourages a more hands-on approach then most books...|$|E
40|$|System {{administration}} {{has often been}} {{considered to be a}} “practice ” with no theoretical underpinnings. In this thesis, we begin to define a theory of system administration, based upon two activities of system administrators: configuration management and dependency analysis. We formalize and explore the complexity of these activities, and demonstrate that they are intractable in the general case. We define the concepts of system behavior, kinds of configuration operations, a model of configuration management, a model of reproducibility, and proofs that several parts of the process are NP-complete or NP-hard. We also explore how system administrators keep these tasks tractable in practice. This is a first step toward a theory of system administration and a common language for discussing the theoretical underpinnings of the practice. ii Acknowledgements This thesis is the result of four years of work whereby I have been accompanied and supported by many people. It is a pleasant aspect that I have now the opportunity to express my gratitude to all of them. The first person I would like to thank is my advisor Alva L. Couch. I have been working with him since 2001 when I started my Master’s project. His enthusiasm and integral view of research and his humor when things get tough have made a deep impact upon me. He patiently guided me and supported me throughout the course of my study. I would like to thank Professor Kofi Laing and Professor Lenore Cowen for their help on computation theory and for being committee members. I also thank Professor Ricardo <b>Pucella</b> for reviewing my work...|$|E
40|$|Slight {{change in}} {{information}} given: {{in the past}} I have provided price and ISBN numbers of books. The notion of price is ill-defined: the website www. bestbookbuys. com gives a range of prices from place to puchase books on the web. (amazon. com is usually not the cheapest, and its usually not even close.). Providing ISBN numbers is also not needed in this electronic age where such information {{is available at the}} touch of a button. If the price is notable – either rather high or rather low, this might be mentioned in the review. Welcome to the Book Reviews Column. We hope to bring you at least two reviews of books every month. In this column four books are reviewed. 1. Data Structures and Algorithms in Java (2 nd ed) by Michael T Goodrich and Roberto Tamassia. Review by Hassan Masum. This is a textbook for a sophmore course on data structures and algorithms using Java as its base language. This is not just a standard data structures book translated into Java — this should be viewed as a book on object-oriented data structures. 2. Selected Papers on Analysis of Algorithms by Donald E. Knuth. Review by Timothy H. McNicholl. This is a collection of papers by Donald Knuth on the Analysis of Algorithms. The papers take the reader through a large variety of mathematical techniques in a motivated way. 3. How to Solve It: Modern Heuristics by Zbigniew Michalewicz and David B Fogel. Review by Hassan Masum. This book presents an overview of several problem solving techniques including search-methods, evolutionary computation, and fuzzy systems. 4. Proof, Language, and Interaction: Essays in Honour of Robin Milner Edited by Plotkin, Stirling and Tofte. Review by Riccardo <b>Pucella.</b> This is a collection of essay about the work of Robin Milner. The essays are on semantic foundations, programming logic, programming languages, concurrency, and mobility. I am looking for reviewers for the following books If you want a FREE copy of one of these books in exchange for a review, then email me at gasarchcs. umd. edu If you want more information about any of these books, again, feel free to email me. Reviewing a book is a great way to learn a field. I have personally reviewed books and then went on to use what I learned in my research...|$|E

