0|10000|Public
50|$|A closed KPN has no {{external}} <b>input</b> or <b>output</b> <b>channels.</b> Processes {{that have}} no input channels act as data sources and processes {{that have no}} <b>output</b> <b>channels</b> act as data sinks. In an open KPN each process {{has at least one}} <b>input</b> and <b>output</b> <b>channel.</b>|$|R
5000|$|Supports {{any number}} of <b>input</b> and <b>output</b> <b>channels,</b> {{including}} massively multichannel setups ...|$|R
50|$|JSP uses semi-formal {{steps to}} capture the {{existing}} structure of a <b>program's</b> <b>inputs</b> and <b>outputs</b> {{in the structure of}} the program itself.|$|R
30|$|Message streams {{are sent}} through {{channels}} that have names. For example, we use “in”, “out”, and “err” for conventional standard <b>input,</b> <b>output,</b> and error streams. A program may lookup a channel name to obtain either an <b>input</b> or an <b>output</b> <b>channel.</b> Once obtained, the channel {{may be used}} to receive or to send data. Other requests permit to bind a channel to a given name as an <b>input</b> or an <b>output</b> <b>channel</b> and to unbind a name.|$|R
50|$|Users {{generally}} know standard streams as <b>input</b> and <b>output</b> <b>channels</b> that handle data {{coming from}} an input device, or that write {{data from the}} application. The data may be text with any encoding, or binary data.|$|R
25|$|Long {{distance}} switches may use a slower, {{more efficient}} switch-allocation algorithm than local central offices, {{because they have}} near 100% utilization of their <b>input</b> and <b>output</b> <b>channels.</b> Central offices have more than 90% of their channel capacity unused.|$|R
50|$|A dialog {{system or}} {{conversational}} agent (CA) {{is a computer}} system intended to converse with a human, with a coherent structure. Dialog systems have employed text, speech, graphics, haptics, gestures and other modes for communication on both the <b>input</b> and <b>output</b> <b>channel.</b>|$|R
40|$|Proposed {{matrix of}} {{electronically}} controlled shutters switches signals in optical fibers between multiple <b>input</b> and <b>output</b> <b>channels.</b> Size, weight, and power consumption reduced. Device serves as building block for small, low-power, broad-band television- and data-signal-switching systems providing high isolation between nominally disconnected channels...|$|R
40|$|Abstract: It {{has been}} shown that the {{capacity}} of a multiple-input multiple-output system increases linearly with the number of antennas, provided that the environment is rich scattering. However, this increase in the capacity is substantially degraded if the multiple <b>input</b> multiple <b>output</b> <b>channels</b> are correlated. In this paper, the capacity of correlated multiple <b>input</b> multiple <b>output</b> fading <b>channel</b> is investigated for laplacian and uniform angular energy distributions that implicitly represent two different scatterer distributions. The effect of the spatial correlation of a uniform circular antenna array is considered. Optimal power allocation is implemented to maximize the capacity. Through extensive Monte Carlo simulations, the results show that multiple <b>input</b> multiple <b>output</b> <b>channel</b> capacity {{is a function of the}} angle spread and antenna spacing. These two parameters play a major role in dictating the spatial correlation which in turn affects on the capacity. Large angle spread leads to lower correlation between the antenna elements and consequently higher capacity. The degradation in the capacity can be reduced by increasing the spacing between the antenna elements...|$|R
30|$|When used {{within a}} single UNIX process, the {{implementation}} for Clive channels in the runtime and a per-context table of <b>input</b> and <b>output</b> <b>channels</b> (indexed by their names) suffice. The implementation for making them work across different UNIX processes is more elaborate as we describe next.|$|R
2500|$|A binary {{symmetric}} channel (BSC) with {{crossover probability}} p is a binary <b>input,</b> binary <b>output</b> <b>channel</b> that flips the input bit with probability p. The BSC has {{a capacity of}} [...] bits per channel use, where [...] is the binary entropy function to the base-2 logarithm: ...|$|R
2500|$|A binary erasure channel (BEC) with erasure {{probability}} p is {{a binary}} <b>input,</b> ternary <b>output</b> <b>channel.</b> The possible <b>channel</b> <b>outputs</b> are 0, 1, {{and a third}} symbol 'e' called an erasure. The erasure represents complete loss of information about an input bit. The capacity of the BEC is [...] bits per channel use.|$|R
40|$|Multistage {{interconnection}} architectures {{can provide}} an arbitrary pattern of one-to-one connections between N <b>input</b> and N <b>output</b> <b>channels.</b> We show that bitonic multistage architectures, such as the Banyan architecture, result in the fundamentally least possible growth of system size with increasing N. In this Letter we are concerned with optical interconnection architectures that {{can provide an}} arbitrary pattern of one-to-one connections between N <b>input</b> <b>channels</b> and N <b>output</b> <b>channels.</b> We assume that the <b>input</b> and <b>output</b> <b>channels</b> are arrayed in a regular Cartesian manner at the <b>input</b> and <b>output</b> planes, respectively. It is desirable to pack the channels as densely as possible and also to make {{the distance between the}} <b>input</b> and <b>output</b> planes as small as possible. This is important {{not only because of the}} desirability of a compact system but also because of the need to reduce the latency between the input...|$|R
30|$|Pairwise device {{interaction}} {{has also}} explored how two touch screens {{could be used}} together by enabling or disabling their <b>input</b> and <b>output</b> <b>channels,</b> including combinations of smartphones with (large) interactive surfaces [19], smartwatches with interactive surfaces [5], or smartglasses with smartwatches [19], resulting in four different device combinations.|$|R
5000|$|A binary erasure channel (BEC) with erasure {{probability}} p is {{a binary}} <b>input,</b> ternary <b>output</b> <b>channel.</b> The possible <b>channel</b> <b>outputs</b> are 0, 1, {{and a third}} symbol 'e' called an erasure. The erasure represents complete loss of information about an input bit. The capacity of the BEC is 1 &minus; p bits per channel use.|$|R
40|$|Because of its {{linearity}} needs, {{the direct}} {{implementation of the}} cost effective blind matched filtering technique to multiple <b>input</b> multiple <b>output</b> communication <b>channels</b> was not possible. In this paper we show how to perform the cost effective blind matched filtering technique for these types of communication channels assuming a two-way transmission scenario. For this reason, the blind matched filter and the adaptive filtering blocks, which are required by the so called technique, are adapted for multiple <b>input</b> multiple <b>output</b> case. Besides its structural simplicity, such adaptation does also enable the use of no higher than second order statistics of the received signal for the matched filter identification purposes. Moreover, {{with the use of}} the novel receiver, the equalization of the multiple <b>input</b> multiple <b>output</b> <b>channel</b> is performed alongside the matched filter identification stage...|$|R
40|$|We explore optimal ways of {{communicating}} (with a power constraint) over multiple antenna communication systems by managing spatial power distribution. We find that Mutual Coupling (MC), {{the interaction between}} antenna elements of an array, determines the power efficient schemes. MC at the transmit array affects the amount of power drawn from the supply, and this power can be calculated by integrating the power radiated by the array in all directions. In this thesis, we focus on two problems, both of them assuming knowledge of perfect channel state information: (a) Finding the Signal to Noise Ratio maximizing scheme for Multiple <b>Input</b> Single <b>Output</b> <b>channels,</b> and (b) Determining the capacity achieving scheme for Multiple <b>Input</b> Multiple <b>Output</b> <b>channels.</b> Our solutions, Coupling Optimized BeamForming and Coupling Optimized WaterFilling outperform beamforming and waterfilling respectively, {{and the extent to}} which they do better depends on the strength of MC...|$|R
40|$|This paper {{deals with}} blind system {{identification}} of FIR MIMO (finite impulse response and multi <b>input</b> multi <b>output)</b> <b>channels</b> driven by colored signals. Based on second order statistics, a novel technique of blind identification is developed for irreducible MIMO channels. It requires a weaker condition on the input power spectra than some existing blind system identification methods and the computation is also reduced...|$|R
40|$|The {{computer}} program based on multicomponent chemically frozen boundary layer (CFBL) theory for calculating vapor and/or small particle deposition rates is documented. A specific application to perimter-averaged Na 2 SO 4 deposition rate calculations on a cylindrical collector is demonstrated. The manual includes a typical <b>program</b> <b>input</b> and <b>output</b> for users...|$|R
40|$|The {{features}} {{and use of}} the subsatellite operational analysis are examined. The model simulates several Earth-orbiting vehicles, their pilots, control systems, and interaction with the environment. The use of the <b>program,</b> <b>input</b> and <b>output</b> capabilities, executive structures, and properties of the vehicles and environmental effects which it models are described...|$|R
40|$|An algebra {{consists}} {{of a set of}} objects and a set of operators that act on those objects. We treat shader programs as first-class objects and define two operators: connection and combination. Connection is functional composition: the outputs of one shader are fed into the inputs of another. Combination concatenates the <b>input</b> <b>channels,</b> <b>output</b> <b>channels,</b> and computations of two shaders. Similar operators can be used to manipulate streams and apply computational kernels expressed as shaders to streams. Connecting a shader program to a stream applies that program to all elements of the stream; combining streams concatenates the record definitions of those streams...|$|R
40|$|Documentation {{for general}} {{usage of the}} QUALCAL program. QUALCAL is a camera {{calibration}} program designed for the Qualisys optical tracking system at IMD. This manual describes the <b>program's</b> <b>input</b> and <b>output</b> files, its graphical user interface, and its three main stages (marker clustering, marker correspondence,and the main calibration). Peer reviewed: NoNRC publication: Ye...|$|R
50|$|Within a micro {{instruction}} execution cycle, the CPU {{as well as}} an <b>input</b> / <b>output</b> controller is connected to an external 16 kByte huge random access memory device (RAM). Via the input-output controller device, communication with virtual <b>input</b> and <b>output</b> devices is supported by Direct Memory Access mode (DMA), Inter-Integrated Circuit Connection (I2C), and Interrupt request functionality (IRQ). A output port, a display, a timer, an event trigger, a digital-analog converter, a keyboard and data <b>input</b> / <b>output</b> <b>channel</b> is provided as virtual IC device for explaining didactically the communication with external devices.|$|R
3000|$|..., {{respectively}} {{represent the}} vector of <b>input</b> symbols, <b>channel</b> <b>outputs,</b> noise samples and the decoder decisions {{that influence the}} equalizer output at time k. Vector X [...]...|$|R
40|$|A web-based {{environment}} is utilized {{as a means}} to introduce advanced mass transfer processes concepts in environmental engineering and science courses. System development and implementation is presented, including detailed descriptions of the techniques employed to link software written in high level computer languages such as C++ and FORTRAN to an internet-based, user-friendly graphical user interface for both <b>program</b> <b>input</b> and <b>output...</b>|$|R
50|$|Jackson Structured Programming {{was seen}} by many as related to Warnier {{structured}} programming, but the latter method focused almost exclusively on the structure of the output stream. JSP and Warnier's method both structure programs and data using only sequences, iterations and selections, so they essentially create programs that are parsers for regular expressions which simultaneously match the <b>program's</b> <b>input</b> and <b>output</b> data streams.|$|R
5000|$|The {{particular}} set of capabilities for the terminal that a (terminal-aware) <b>program's</b> <b>input</b> and <b>output</b> uses is obtained from the database rather than hardwired into programs and libraries, and {{is controlled by the}} [...] environment variable (and, optionally for the termcap and terminfo libraries, the [...] and [...] environment variables, respectively). This variable is set by whatever terminal monitor program spawns the programs that then use that terminal for its <b>input</b> and <b>output,</b> or sometimes explicitly. For example: ...|$|R
30|$|The {{need for}} {{channels}} to behave better {{with respect to}} errors (as UNIX pipelines do) justifies modifying the Go compiler and runtime. But there is another reason for doing so. When multiple Clive processes share a single address space, a process exit must close automatically its <b>input</b> and <b>output</b> <b>channels</b> (to let others know). Therefore, it was also necessary to modify the Go runtime to support Clive application contexts including sets of I/O channels that are closed when the last process using a <b>channel</b> as <b>input</b> (or <b>output)</b> exits.|$|R
40|$|An {{iterative}} method for computing the channel capacity of both discrete and continuous <b>input,</b> continuous <b>output</b> <b>channels</b> is proposed. The efficiency of new method is demonstrated {{in comparison with}} the classical Blahut - Arimoto algorithm for several known channels. Moreover, we also present a hybrid method combining advantages of both the Blahut - Arimoto algorithm and our iterative approach. The new method is especially efficient for the channels with a priory unknown discrete input alphabet...|$|R
40|$|An {{optimization}} problem of minimizing the output load of a junction model with multiple <b>input</b> and <b>output</b> <b>channels</b> is solved by the replica method. Simulation {{results show that}} for the case of extensive connectivity, the replica solution obtained by assuming a vanishing solution space is satisfactory. However, for the case of intensive connectivity, the degeneracy of the solution space causes the simulation results to deviate from the replica solution of vanishing volume...|$|R
40|$|DECLARATION “I, Michael Mewburn, {{declare that}} the Master by Research thesis {{entitled}} “Multiple <b>Input</b> Multiple <b>Output</b> <b>channel</b> measurements and system performance ” {{is no more}} than 60, 000 words in length, exclusive of tables, figures, appendices, references and footnotes. This thesis contains no material that has been submitted previously, in whole or in part, for the award of any other academic degree or diploma. Except where otherwise indicated, this thesis is my own work”...|$|R
5000|$|There are two {{variables}} describing the interactivity {{of a given}} lesson: technology affordance and user freedom. Technology affordance, also known as manual operators, is {{the richness of the}} communication between the student and the instructor usually expressed in terms of the <b>input</b> and <b>output</b> <b>channels.</b> [...] User freedom, on the other hand, {{is a function of the}} degree of freedom the learning system grants the student in influencing the presentation of the lesson.|$|R
5000|$|The Underground Complex's SAGE {{computer}} equipment comprised {{a pair of}} computers, nicknamed [...] "Bonnie and Clyde", plus Maintenance & <b>Programming</b> and <b>Input</b> & <b>Output</b> areas. Combined, [...] "Bonnie and Clyde" [...] weighed 275 tons (245.5 metric tonnes); encompassed 11,900 square feet of floor space (.273 acres, 1,105.5 square meters—the floorspace of a dozen small houses); and had a (then) staggering memory capacity of about 256K. When the Maintenance & <b>Programming</b> and <b>Input</b> & <b>Output</b> areas are included, total floor space used by SAGE was 18,810 sq ft (1,747.5 sq m - equal in size to about 20 small homes).|$|R
40|$|The {{randomized}} fixe-composition with optimal decoding error exponents are studied Raul_ISIT,Raul_journal for {{the finite}} alphabet interference channel (IFC) with two transmitter-receiver pairs. In this paper we investigate the capacity {{region of the}} randomized fixed-composition coding scheme. A complete characterization of the capacity region of the said coding scheme is given. The inner bound is derived by showing {{the existence of a}} positive error exponent within the capacity region. A simple universal decoding rule is given. The tight outer bound is derived by extending a technique first developed in Dueck_RC for single <b>input</b> <b>output</b> <b>channels</b> to interference channels. It is shown that even with a sophisticated time-sharing scheme among randomized fixed-composition codes, the capacity region of the randomized fixed-composition coding is not bigger than the known Han-Kobayashi Han_Kobayashi capacity region. This suggests that the average behavior of random codes are not sufficient to get new capacity regions. Comment: In preparation for IEEE Transactions on I...|$|R
40|$|Design of {{practical}} coding techniques for the multiple antenna wireless channel is a challenging problem. A number of interesting solutions {{have been proposed}} recently ranging from block codes to trellis codes for the MIMO (multiple <b>input,</b> multiple <b>output)</b> <b>channel.</b> Here we consider linear block codes for the quasi-static, flat-fading, coherent MIMO channel. A linear code refers to an encoder that is linear with respect to scalar input symbols. We assume maximum likelihood decoding at the receiver. We provid...|$|R
5000|$|... 2007 Introduced SoundMan-Server, {{a virtual}} sound system (VSS) API {{with up to}} 1000 playback, live <b>input</b> and <b>output</b> <b>channels</b> and a million {{crosspoints}} with vectored gain, EQ and delay at each crosspoint. Also SoundMan-Designer, a theatrical playback, sound and show control application that fully emulates the older model AudioBox. The Universal Studios Hollywood Waterworld live stunt show based on the film {{was the first to}} be upgraded to this software, along with the latest version of ShowMan in September.|$|R
