3|85|Public
50|$|The railway was {{somewhat}} fictionalised, as a larger junction with two GNR branches added to it: one running north-west to Monaghan, {{and the other}} south-east to a LNWR <b>packet</b> <b>port</b> at Greenore. A typical Irish 3 foot gauge narrow gauge line ran South to Inniskeen.|$|E
50|$|As {{the port}} neared completion, Forrest lobbied the British to have Fremantle as {{the port of}} call for the Mail Packets. Victoria and New South Wales fought for the {{retention}} of Albany as the Mail <b>Packet</b> <b>port,</b> as they were fearful they would lose business. Forrest threatened Western Australia may {{stay out of the}} proposed federation of Australian colonies unless they agreed. On 3 August 1900, Forrest won when the Postmaster-General in London informed the Post Master-General in Perth that Fremantle would be substituted for Albany as the port of call for Mail Packets. Ten days later the Orient Steam Navigation Company's RMS Ormuz, homeward bound from Sydney to London, was the first British mail carrier to enter and berth in Fremantle Harbour. In 1901 Fremantle surpassed Albany {{for the first time in}} total tonnage of ships and the following year in the number of ships when it cleared 410 ships (1,045,170 tons) to Albany's 248 ships (540,910 tons).|$|E
40|$|This paper {{examines}} input/output buffered crossbar switches under combined packet {{and cell}} data. Our switch architecture uses input buffering with Virtual Output Queues to avoid Head of Line Blocking. The switch fabric is a crossbar with no speedup. We use a modified iSlip [Mc 95] crossbar scheduler geared towards packet data, called piSlip. Cell ports are largely unmodified from standard iSlip behavior. For packet output ports, we introduce {{changes to the}} "grant pointer" which minimizes output latency caused by packet reassembly. Our model uses several output states, including packet cut-through. From simulation results, we show that piSlip with virtual cut-through offers latency characteristics significantly better than unmodified iSlip with similar <b>packet</b> <b>port</b> interfaces. Simulation further shows that piSlip and iSlip have similar maximum and average buffering requirements...|$|E
40|$|Recent {{advances}} in generalized multiprotocol label switching (GMPLS) [1, 12] and the extensive study {{and understanding of}} packet-over-optical network architecture, {{has made it possible}} for a single integrated control plane to manage the resources of the packet network and underlying optical transport network in an unified manner. This opens up the possibility for coordinated actions across the two networking layers. In this paper, we propose and evaluate a joint protection/restoration scheme for a future packet-over-optical network. Since <b>packet</b> switch <b>ports</b> are typically more expensive than optical switch ports, the essence of the approach is to attempt to reuse <b>packet</b> service <b>ports</b> or the service wavelengths associated with optical switch ports for restoration rather than reserve additional standby <b>packet</b> <b>ports</b> exclusively for network recovery. This can be done when there are concerted actions between the packet and optical transport layers...|$|R
5000|$|Monitor TCP, UDP account {{showing the}} network <b>packets</b> for <b>port</b> {{connections}} of applications.|$|R
5000|$|After {{fighting}} stopped, Norfolk <b>Packet</b> departed <b>Port</b> Royal, South Carolina, 23 June 1865, decommissioned at the Philadelphia Navy Yard, 12 July, and {{was sold}} at public auction 10 August.|$|R
5000|$|The sending station sends a scout <b>packet</b> with a <b>port</b> {{number and}} a flag byte ...|$|R
50|$|Tcpdump {{works on}} most Unix-like {{operating}} systems: Linux, Solaris, BSD, macOS, HP-UX, Android and AIX among others. In those systems, tcpdump uses the libpcap library to capture <b>packets.</b> The <b>port</b> of tcpdump for Windows is called WinDump; it uses WinPcap, the Windows port of libpcap.|$|R
50|$|The {{remote control}} {{feature of the}} service {{processor}} requires that {{it be possible to}} exchange <b>packets</b> on UDP <b>port</b> 2000 between the adapter and the client.|$|R
50|$|There are {{multiple}} ways to acquire packets for deep <b>packet</b> inspection. Using <b>port</b> mirroring (sometimes called Span Port) {{is a very}} common way, {{as well as an}} optical splitter.|$|R
50|$|The {{concept of}} ports is what allows the same {{component}} {{to be used}} at more than one place in the network. In combination with a parametrization ability, called Initial Information <b>Packets</b> (IIPs), <b>ports</b> provide FBP with a component reuse ability, making FBP a component-based architecture. FBP thus exhibits what Raoul de Campo and Nate Edwards of IBM Research have termed configurable modularity.|$|R
50|$|Generally TCP sockets {{are handled}} by {{spawning}} a separate server to handle each connection concurrently. UDP sockets are generally handled {{by a single}} server instance that handles all <b>packets</b> on that <b>port.</b>|$|R
5000|$|A network hub, or a repeater, is {{a simple}} network device that does not manage any of the traffic coming through it. Any <b>packet</b> {{entering}} a <b>port</b> is flooded out or [...] "repeated" [...] on every other port, except for the port of entry. Specifically, each bit or symbol is repeated as it flows in (with a minimum delay for the line interface). Due to this, a repeater hub can only receive and forward at a single speed. Since every packet is repeated on every other <b>port,</b> <b>packet</b> collisions affect the entire network, limiting its overall capacity.|$|R
50|$|The {{useful life}} of PhoneNet was {{extended}} {{with the introduction}} of LocalTalk switching technology by Tribe Computer Works. Introduced in 1990, the Tribe LocalSwitch was a 16 <b>port</b> <b>packet</b> switch designed to speed up overloaded PhoneNet networks.|$|R
40|$|A {{network switch}} routes data packets between its {{multiple}} {{input and output}} <b>ports.</b> <b>Packets</b> from input <b>ports</b> are stored upon arrival in a switch fabric comprising multiple memory banks. This can result in memory contention when distinct output <b>ports</b> request <b>packets</b> from the same memory bank, resulting in a degraded switching bandwidth. To solve this problem, we propose to add redundant memory banks for storing the incoming packets. The problem we address is how to minimize the number of redundant memory banks given some guaranteed contention resolution capability. We present constructions of new switch memory architectures based on different coding techniques. The codes allow decreasing the redundancy by 1 / 2 or 2 / 3, depending on the request specifications, compared to non-coding solutions...|$|R
40|$|Abstract—Multiport {{switches}} {{are commonly}} used as data processing and routing devices in computer networks. A network switch routes data packets between its multiple input and output <b>ports.</b> <b>Packets</b> from input <b>ports</b> are stored upon arrival in a switch fabric comprising multiple memory banks. This can lead to memory contention when distinct output <b>ports</b> request <b>packets</b> from the same memory bank, resulting in a degraded switching bandwidth. To solve this problem, switch codes are introduced by Wang et al. [1] as a tradeoff between redundancy and service. Using techniques from combinatorial design theory, we im-prove their result on switch codes serving any one-burst request to a denser set of parameters. New constructions for switch codes serving repetition limited request and consecutive-generation request are also given. I...|$|R
40|$|Abstract—A {{network switch}} routes data packets between its {{multiple}} {{input and output}} <b>ports.</b> <b>Packets</b> from input <b>ports</b> are stored upon arrival in a switch fabric comprising multiple memory banks. This can result in memory contention when distinct output <b>ports</b> request <b>packets</b> from the same memory bank, resulting in a degraded switching bandwidth. To solve this problem, we propose to add redundant memory banks for storing the incoming packets. The problem we address is how to minimize the number of redundant memory banks given some guaranteed contention resolution capability. We present constructions of new switch memory architectures based on different coding techniques. The codes allow decreasing the redundancy by 1 / 2 or 2 / 3, depending on the request specifications, compared to non-coding solutions. I...|$|R
5000|$|Using UDP for denial-of-service attacks {{is not as}} {{straightforward}} as {{with the}} Transmission Control Protocol (TCP). However, a UDP flood attack can be initiated by sending {{a large number of}} UDP <b>packets</b> to random <b>ports</b> on a remote host. As a result, the distant host will: ...|$|R
50|$|Each packet {{traveling}} through a SpaceWire network can use path addressing (source routing) or logical addressing or some combination.The router examines the first data {{character of the}} packet; when it indicates some specific port of the router, the router discards that routing character and sends {{the rest of the}} <b>packet</b> out that <b>port.</b>|$|R
50|$|In 2002, {{a number}} of spammers began abusing the Windows Messenger service, a {{function}} of Windows designed to allow administrators to send alerts to users' workstations (not {{to be confused with}} Windows Messenger or Windows Live Messenger, a free instant messaging application) in Microsoft's Windows NT-based operating systems. Messenger Service spam appears as normal dialog boxes containing the spammer's message. These messages are easily blocked by firewalls configured to block packets to the NetBIOS ports 135-139 and 445 as well as unsolicited UDP <b>packets</b> to <b>ports</b> above 1024. Additionally, Windows XP Service Pack 2 disables the Messenger Service by default.|$|R
6000|$|Falmouth is well built, has {{abundance}} of shipping belonging to it, {{is full of}} rich merchants, and has a flourishing and increasing trade. I say [...] "increasing," [...] because by the late setting up the English <b>packets</b> between this <b>port</b> and Lisbon, {{there is a new}} commerce between Portugal and this town carried on to a very great value.|$|R
40|$|In {{distributed}} file systems, {{a well-known}} congestion collapse called TCP incast (Incast briefly) occurs because many servers almost simultaneously send {{data to the}} same client and then many <b>packets</b> overflow the <b>port</b> buffer of the link connecting to the client. Incast leads to throughput degradation in the network. In this paper, we propose three methods to avoid Incast {{based on the fact}} that the bandwidth-delay product is small in current data center networks. The first method is a method which completely serializes connection establishments. By the serialization, the number of <b>packets</b> in the <b>port</b> buffer becomes very small, which leads to Incast avoidance. The second and third methods are methods which overlap the slow start period of the next connection with the current established connection to improve throughput in the first method. Numerical results from extensive simulation runs show the effectiveness of our three proposed methods. ...|$|R
40|$|The router is a " Network Router " has a one {{input port}} {{from which the}} packet enters. It has five output <b>ports</b> where the <b>packet</b> is driven out. Packet {{contains}} 2 parts. They are Header, and data. Packet width is 8 bits {{and the length of}} the packet transferring can be between 1 bytes to 63 bytes. The switch drives the <b>packet</b> to respective <b>ports</b> based on this destination address of the <b>packets.</b> Each output <b>port</b> has 3 -bit unique port address. If the destination address of the <b>packet</b> matches the <b>port</b> address, then switch drives the packet to the output port, Length of the data is of 5 bits. In this paper the Xilinx ISE EDA Tool is used for synthesis and Modelsim is used for simulation. In the proposed design the FSM is designed with reduced number of states. Due to reduction of states the amount of time to produce the response became less obviously the frequency is improved. At the same time the memory required to design of this Router chip is also reduced. In the existed design no of LUTS are 724. In the existed design the Total memory usage is 297148 kilobytes and the maximum Frequency is 76. 374 MHz. Where as in the proposed design the no of LUTS are 240. In the proposed design the Total memory usage is 249164 kilobytes and the maximum Frequency is 81. 162 MHz...|$|R
40|$|Advanced packet {{scheduling}} algorithms in Internet routers {{work with}} fixed size cells. As IP packet length is not fixed, {{it is necessary}} to implement segmentation function for dividing IP packet in fixed sized cells. Also, {{it is necessary to}} reassemble original IP <b>packet</b> on output <b>port</b> of the router. Hardware implementation of these two functions will be presented in this paper...|$|R
50|$|Stateful packet {{inspection}} {{was developed}} to examine header information and the packet content to increase source and destination understanding. Instead of letting the packets through {{as a result of}} their addresses and <b>ports,</b> <b>packets</b> stayed on the network if the context was appropriate to the networks’ current ‘state’. This scheme was first used by Check Point firewalls and eventually Intrusion Prevention/Detection Systems.|$|R
25|$|Since SYN scans are not surreptitious enough, {{firewalls}} are, in general, scanning for {{and blocking}} packets {{in the form}} of SYN packets. FIN packets can bypass firewalls without modification. Closed ports reply to a FIN packet with the appropriate RST <b>packet,</b> whereas open <b>ports</b> ignore the <b>packet</b> on hand. This is typical behavior {{due to the nature of}} TCP, and is in some ways an inescapable downfall.|$|R
50|$|A portknock daemon on the {{firewall}} machine listens for <b>packets</b> {{on certain}} <b>ports</b> (either via the firewall log or by packet capture). The client user would carry an extra utility, {{which could be}} as simple as netcat or a modified ping program or as complicated as a full hash-generator, and use that before they attempted to connect to the machine in the usual way.|$|R
50|$|Since SYN scans are not surreptitious enough, {{firewalls}} are, in general, scanning for {{and blocking}} packets {{in the form}} of SYN packets. FIN packets can bypass firewalls without modification. Closed ports reply to a FIN packet with the appropriate RST <b>packet,</b> whereas open <b>ports</b> ignore the <b>packet</b> on hand. This is typical behavior {{due to the nature of}} TCP, and is in some ways an inescapable downfall.|$|R
50|$|When using {{source routing}} with Myrinet, the sender of the packet prepends the {{complete}} route, one byte for every crossbar, to each packet header.Each crossbar examines the first routing byte of the packet.When using source routing, that byte indicates a particular port of that crossbar; when that port becomes available, the router discards that routing byte and sends {{the rest of}} the <b>packet</b> out that <b>port.</b>|$|R
5000|$|The port [...] "knock" [...] {{itself is}} similar to a secret {{handshake}} and can consist of any number of TCP, UDP or even sometimes ICMP and other protocol <b>packets</b> to numbered <b>ports</b> on the destination machine. The complexity of the knock can be anything from a simple ordered list (e.g. TCP port 1000, TCP port 2000, UDP port 3000) to a complex time-dependent, source-IP-based and other-factor-based encrypted hash.|$|R
50|$|On Unix-like {{operating}} systems, traceroute sends, by default, {{a sequence}} of User Datagram Protocol (UDP) <b>packets,</b> with destination <b>port</b> numbers ranging from 33434 to 33534; the implementations of traceroute shipped with Linux, FreeBSD, NetBSD, OpenBSD, DragonFly BSD, and macOS include an option to use ICMP Echo Request packets (-I), or any arbitrary protocol (-P) such as UDP, TCP using TCP SYN packets, or ICMP. In Windows, traceroute sends ICMP echo requests instead of UDP packets.|$|R
5000|$|A {{network switch}} creates the layer 1 {{end-to-end}} connection only virtually, while originally it was mandatory. The bridging {{function of a}} switch uses information taken from layer 2 to select for each <b>packet</b> the particular <b>port(s)</b> {{it has to be}} forwarded to, removing the requirement that every node is presented with all traffic. As a result, the connection lines are not [...] "switched" [...] literally, instead they only appear that way on the packet level.|$|R
30|$|In {{the current}} deployment, the mesh is a multi-hop {{extension}} of the regular AP (access point) infrastructure. It is useful to use {{the concept of a}} layer- 2 switch to see the entire mesh as a single element that switches <b>packets</b> between its <b>ports.</b> A port can be defined as a mesh node that has at least two interfaces: one in an ad hoc mode for the back haul in the mesh and the other in an infrastructure mode to connect to clients.|$|R
40|$|Abstract. This paper proposes an IEC 61850 {{communication}} {{model for}} the network devices in smart substation based on the substation network status monitoring requirements through bringing the network device status information management into a unified monitoring and management system of smart substation. The substation monitoring system can directly get the state information and configuration information of the communication network and network devices, such as link status, bandwidth status, port forwarding state, the <b>port</b> <b>packet</b> loss rate, bit error rate and so on...|$|R
5000|$|Devices {{performing}} the probing {{can be of}} several forms, largely to meet the physical and transport configuration of the network they are attaching to. Probing is possible on electrical and optical bearers through tapping, optical splitters but is also common using specialised inline devices with failsafe modes. In ethernet networks, managed switches can also offer SPAN <b>port</b> <b>packet</b> duplication, but this is generally inefficient [...] both for the switch {{and the amount of}} data that may need to be collected.|$|R
50|$|TCP {{connections}} {{begin with}} a SYN packet being sent from client to server. The server responds with a SYN/ACK packet. Finally, the client sends an ACK packet. When the scanner sends a SYN packet and gets the SYN/ACK <b>packet</b> back, the <b>port</b> is considered open. When a RST packet is received instead, the port is considered closed. When no response is received the port is either considered filtered by a firewall or there is no running host at the IP address.|$|R
