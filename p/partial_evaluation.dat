1080|157|Public
2500|$|Alternatively, one can employ large base {{cases that}} still use a divide-and-conquer algorithm, but {{implement}} the algorithm for predetermined set of fixed sizes where the algorithm can be completely unrolled into code {{that has no}} recursion, loops, or conditionals (related to the technique of <b>partial</b> <b>evaluation).</b> [...] For example, this approach is used in some efficient FFT implementations, where the base cases are unrolled implementations of divide-and-conquer FFT algorithms {{for a set of}} fixed sizes. [...] Source code generation methods may be used to produce the large number of separate base cases desirable to implement this strategy efficiently.|$|E
5000|$|In <b>partial</b> <b>{{evaluation}},</b> evaluation {{may continue}} {{into the body}} of a function that has not been applied. Any sub-expressions that do not contain unbound variables are evaluated, and function applications whose argument values are known may be reduced. In the presence of side-effects, complete <b>partial</b> <b>evaluation</b> may produce unintended results; for this reason, systems that support <b>partial</b> <b>evaluation</b> tend to do so only for [...] "pure" [...] expressions (expressions without side-effects) within functions.|$|E
5000|$|<b>Partial</b> <b>Evaluation</b> and Semantics-Based Program Manipulation (PEPM) ...|$|E
40|$|Previous {{studies have}} shown that ratings of SEM (Strong Experiences of Music) {{strongly}} relate to ratings of physical reactions {{at the conclusion of the}} music. As physical reactions are aroused by fluctuating acoustical features of the music, it has been suggested that ratings of physical reactions for each music passage differ. In this light this study makes an attempt to clarify the relationship between overall and <b>partial</b> <b>evaluations</b> of physical reactions in listening to music. Four representatives of <b>partial</b> <b>evaluations</b> of physical reactions were calculated and it was hypothesized that one of them corresponded to overall evaluations of physical reactions. The four representatives considered were the mean, the median, the maximum, and the upper values of cumulative relative frequency distribution of <b>partial</b> <b>evaluations.</b> Absolute values of differences between overall <b>evaluations</b> and <b>partial</b> representatives of physical reactions were calculated, and then averaged to indicate degrees of correspondence. As a result, R 80, the 80 % value of cumulative relative frequency distribution, strongly corresponded to overall evaluations. This suggests that an overall evaluation is determined rather based on high <b>partial</b> <b>evaluations</b> than by averaging all <b>partial</b> <b>evaluations.</b> This study is expected to contribute to the quantitative clarification of SEM in the future. 1...|$|R
40|$|We {{present a}} sorting {{procedure}} for {{the assignment of}} alternatives to graded classes. The available information is given by <b>partial</b> <b>evaluations</b> of the alternatives on ordinal scales representing interacting points of view and a subset of prototypic alternatives whose assignment is imposed beforehand. The <b>partial</b> <b>evaluations</b> of each alternative are embedded in a common interval scale by means of commensurateness mappings, which in turn are aggregated by the discrete Choquet integral. The behavioral properties of this Choquet integral are then measured through importance and interaction indices...|$|R
50|$|In general, {{learning}} all {{inconsistencies in}} form of constraints and keeping them indefinitedly may exhaust the available memory and increase the cost of checking consistency of <b>partial</b> <b>evaluations.</b> These problems can be solved either by storing only some learned constraints or by occasionally discarding constraints.|$|R
5000|$|On {{the other}} hand, if {{a subset of}} this {{evaluation}} is inconsistent, the corresponding constraint {{may be useful in}} the subsequent search, as the same subset of the <b>partial</b> <b>evaluation</b> may occur again in the search. For example, the algorithm may encounter an evaluation extending the subset [...] of the previous <b>partial</b> <b>evaluation.</b> If this subset is inconsistent and the algorithm has stored this fact in form of a constraint, no further search is needed to conclude that the new <b>partial</b> <b>evaluation</b> cannot be extended to form a solution.|$|E
5000|$|<b>Partial</b> <b>evaluation</b> - {{a related}} {{technique}} for automatic program optimization ...|$|E
50|$|Refal also {{includes}} a feature called the freezer to support efficient <b>partial</b> <b>evaluation.</b>|$|E
50|$|In {{constraint}} satisfaction backtracking algorithms, constraint {{learning is a}} technique for improving efficiency. It works by recording new constraints whenever an inconsistency is found. This new constraint may reduce the search space, as future <b>partial</b> <b>evaluations</b> may be found inconsistent without further search. Clause learning {{is the name of}} this technique when applied to propositional satisfiability.|$|R
40|$|AbstractIn {{computer}} game-playing, {{the established}} method for constructing an evaluation function uses a scalar value computed as a weighted sum of features. This paper advocates {{the use of}} <b>partial</b> order <b>evaluation,</b> and describes an efficient new search method called partial order bounding (POB). Previous tree search algorithms using a <b>partial</b> order <b>evaluation</b> have attempted to propagate partially ordered values through the search tree, which leads to many problems in practice, such as the complexity of backing up sets of incomparable evaluations. POB compares partially ordered values only in the leaves of a game tree, and backs up boolean values through the tree. A closely related new algorithm, linear extension partial order bounding (LE-POB), uses a standard scalar alpha-beta search with values from a suitably chosen linear extension of the <b>partial</b> order <b>evaluation.</b> As an application, the effectiveness of <b>partial</b> order <b>evaluation</b> {{is shown in the}} case of modeling capturing races called semeai in the game ofÂ Go...|$|R
5000|$|In SDS agents perform cheap, <b>partial</b> <b>evaluations</b> of a {{hypothesis}} (a candidate {{solution to the}} search problem). They then share information about hypotheses (diffusion of information) through direct one-to-one communication. As {{a result of the}} diffusion mechanism, high-quality solutions can be identified from clusters of agents with the same hypothesis. The operation of SDS is most easily understood by means of a simple analogy [...] - [...] The Restaurant Game.|$|R
5000|$|<b>Partial</b> <b>evaluation</b> {{can be seen}} as {{a method}} for {{automating}} the simplest possible case of incremental computing, in which an attempt is made to divide program data into two categories: that which can vary based on the program's input, and that which cannot (and the smallest unit of change is simply [...] "all the data that can vary"). Of course, <b>partial</b> <b>evaluation</b> can be combined with other incremental computing techniques.|$|E
5000|$|Neil D. Jones, Carsten K. Gomard, and Peter Sestoft: <b>Partial</b> <b>Evaluation</b> and Automatic Program Generation Book, {{full text}} {{available}} online.|$|E
50|$|Bounded {{learning}} only stores constraints if the inconsistent <b>partial</b> <b>evaluation</b> {{they represent}} {{is smaller than}} a given constrant number. Relevance-bounded learning discards constraints (or does not store them at all) that are considered not relevant given the current point of the search space; in particular, it discards or does not store all constraints that represent inconsistent partial evaluations that differ from the current <b>partial</b> <b>evaluation</b> on {{no more than a}} given fixed number of variables.|$|E
40|$|This paper {{presents}} a multiple criteria decision aiding approach {{in order to}} build a ranking and suggest a choice 2 on a set of alternatives. The <b>partial</b> <b>evaluations</b> of the alternatives on the points of view can be fuzzy numbers. The aggregation is performed {{through the use of a}} fuzzy extension of the Choquet integral. We detail how to assess the parameters of the aggregator by using alternatives which are well-known to the decision maker, and which originate from his domain of expertise...|$|R
40|$|International audienceIn some situations, a {{decision}} is best represented by an incompletely analyzed act: conditionally to a certain event, {{the consequences of the}} decision on sub-events are perfectly known and uncertainty becomes expressable through probabilities, whereas the plausibility of this event itself remains vague and the decision outcome on the complementary event is imprecisely known. In this framework, we study an axiomatic decision model and prove a representation theorem. Decision criteria must aggregate <b>partial</b> <b>evaluations</b> consisting in: i) the conditional expected utility associated with the analyzed part of the decision and ii) the best and worst outcomes of its non-analyzed part...|$|R
40|$|In {{this paper}} it is {{described}} the learning achieved {{by students in}} the course of Physics I, in order to envision performances linked to the construction of that profile. It is analyzed the measurement activities, strength and motion, provided in instances of <b>partial</b> <b>evaluations</b> considering four dimensions: knowledge, purpose, method and Communication. The results indicate that students can identify phenomena representative establishing relationships between variables that describe them. It was determined that favored skills relate to performance in the first three dimensions, which involve the identification of variables and the relationship with the frameworks for the phenomenon interpretation...|$|R
50|$|Michael J. Breheny 1974. Towards Measures of Spatial Opportunity: a Technique for the <b>Partial</b> <b>Evaluation</b> of Plans. Elsevier Science & Technology Books.|$|E
50|$|Olivier Danvy is a French {{computer}} scientist specializing in programming languages, <b>partial</b> <b>evaluation,</b> and continuations at the University of Aarhus in Denmark.|$|E
50|$|When {{choosing}} a value for a variable, {{values that are}} inconsistent with all values of an unassigned variable can be neglected. Indeed, even if these values are all consistent with the current <b>partial</b> <b>evaluation,</b> the algorithm will later fail to find a consistent value for the unassigned variable. On the other hand, enforcing consistency with variables that are already evaluated is not necessary: if the algorithm chooses a value that is inconsistent with the current <b>partial</b> <b>evaluation,</b> inconsistency is detected anyway.|$|E
40|$|In some situations, a {{decision}} is best represented by an incompletely analyzed act: conditionally to a certain event, {{the consequences of the}} decision on sub-events are perfectly known and uncertainty becomes probabilizable, whereas the plausibility of this event itself remains vague and the decision outcome on the complementary event is imprecisely known. In this framework, we study an axiomatic decision model and prove a representation theorem. Decision criteria must aggregate <b>partial</b> <b>evaluations</b> consisting in: i) the conditional expected utility associated with the analyzed part of the decision and ii) the best and worst outcomes of its non-analyzed part...|$|R
40|$|The University {{experience}} is central {{in the life}} of the young. Universities should provide a high level student support. To this end, a careful evaluation of university services is necessary. This evaluation is complex because it involves many aspects. Therefore, a multi-aspect nonparametric method which allows to combine several <b>partial</b> <b>evaluations</b> is used. The method is applied to data from a sample survey conducted on students of the University of Padova that are at the end of the study process. In the paper we consider the quality of many services, such as registrarâs offices, the structure of exams, student socialization and reached skill...|$|R
40|$|Anthropological {{data of the}} Copper Age {{cemetery}} at RÃ¡kÃ³czifalvaâBivaly-tÃ³, Bagi fÃ¶ld 1. The cemetery, {{dated to}} the TiszapolgÃ¡r and BodrogkeresztÃºr Cultures provided anthropological remains of altogether 68 individuals. The poor condition of the anthropological material allowed only <b>partial</b> <b>evaluations.</b> The demographic analysis provided unreal results due to the complete lack of the neonatus age group in the series; only the square male/female ratio seems to be acceptable. Pathological observation was also very limited. Enthesopathy is a characteristic of this series, as {{is the presence of}} artificial, work-related abrasion on the incisors and canines of both sexes. The taxonomic data, corresponding with other coeval series, shows heterogeneity, but in this population brachycrany does not appear...|$|R
50|$|A {{particularly}} interesting {{example of the}} use of <b>partial</b> <b>evaluation,</b> first described in the 1970s by Yoshihiko Futamura, is when prog is an interpreter for a programming language.|$|E
50|$|Besides {{removing}} unused {{instructions from}} the compiled bytecode, ProGuard optimizes it using techniques such as control flow analysis, data-flow analysis, <b>partial</b> <b>evaluation,</b> static single assignment, global value numbering, and liveness analysis.|$|E
5000|$|The key {{difference}} between run-time specialization and <b>partial</b> <b>evaluation</b> {{is that the}} values of [...] on which [...] is specialised are not known statically, so the specialization takes place at run-time.|$|E
40|$|Continuing recent {{architectural}} {{trends that}} rely on branch predictions, value predictions, speculative execution, and reuse of results from instruction execution, we investigate the reuse of results from previous function invocations. In this paper we show that for integer benchmarks, {{it is possible to}} eliminate some function invocations since the same function is executed repeatedly with the same arguments. We feel that along with compiler techniques such as function cloning and <b>partial</b> <b>evaluations,</b> dynamic, hardware based techniques to check if a function should be invoked or the results from a prior execution can be used will lead to dramatic performance gains. We use HP Alpha based instrumentation tool called ATOM in our experiments on SPEC 2000 integer benchmarks...|$|R
40|$|We {{consider}} {{the problem of}} constructing an evaluation function for game tree search. The established method, which is used as {{the main component of}} almost all game playing programs, uses a scalar evaluation function, which is backed up through the tree in min-max fashion. We argue that partial orders can be used to construct a more expressive and more precise evaluation in many cases. Previous tree search algorithms which used <b>partial</b> order <b>evaluation</b> have attempted to propagate partially ordered values through the search tree. As a result, these algorithms have suffered from restrictions on the type of partial orders allowed and from the complexities involved in backing up sets of incomparable options through the search tree. To overcome these problems, we develop the new method of. This method compares <b>partial</b> order <b>evaluations</b> in the leaves of a game tree, but backs up only boolean values through the tree. We also define, a closely related algorithm that uses stan- dard alphabeta search with values from a suitably chosen linear extension of the partially ordered set. We discuss the use of <b>partial</b> order move <b>evaluation</b> for move ordering and for pruning dominated moves during search. We show an applica- tion of the method to capturing races called in Go. Liberty and eye counts of blocks in a semeai are used to construct an exact <b>partial</b> order <b>evaluation.</b> Experiments show the resulting speedups compared to standard alphabeta search. ...|$|R
40|$|Knowledge of the {{influences}} that change {{has had on}} social effectiveness {{is a matter for}} further implementation of change. Managers who initiate such a complex process know very well that the change may involve a period of time before the results start to emerge. They also know that arise during the implementation and other issues that were not expected to be resolved in time, otherwise running the process itself is questioned. However, the team of experts dealing with implementation of change can produce <b>partial</b> <b>evaluations,</b> regular employees to reinforce the belief that the mode of action is good, but the implementation process is complex and time-response to these requirements was shaped the second generation organizational development, organizational transformation known, differs substantially from the previous. management, organization, government, public, change, crisis...|$|R
50|$|Constraint {{learning}} algorithms differ {{not only}} on the choice of constraint corresponding to a given inconsistent <b>partial</b> <b>evaluation,</b> but also on the choice of which constraint they maintain and which ones they discard.|$|E
5000|$|Dynamo {{was later}} {{extended}} to DynamoRIO. One DynamoRIO-based project was {{a framework for}} interpreter construction that combines tracing and <b>partial</b> <b>evaluation.</b> It was used to [...] "dynamically remove interpreter overhead from language implementations".|$|E
50|$|If {{the value}} of {{only some of the}} {{arguments}} are known, the compiler may still be able to perform some level of compile-time function execution (<b>partial</b> <b>evaluation),</b> possibly producing more optimized code than if no arguments were known.|$|E
40|$|This thesis {{deals with}} a {{description}} and analysis of communication activities, which {{took place during the}} Å prechtÃ­me campaign in years 2011 - 2012. Campaign has been carried out by the Embassy of the Federal Republic of Germany together with the Embassy of Austria and other partners. The purpose of the campaign is to support the teaching of German language in the Czech Republic. The main advantage of knowledge of the language, according to Embassies, is a possibility to easily get a job, because the German and Austrian companies in the Czech Republic created nearly 125, 000 jobs. Furthermore, it is easier to communicate on vacation in the Alps. Mapping communication activities is accompanied by <b>partial</b> <b>evaluations,</b> further evaluation of the campaign as a whole. The last part is devoted to the recommendation of the author, which activities should be changed or strengthened...|$|R
40|$|The Tutte {{polynomial}} of a graph is a 2 -variable polynomial graph invariant {{of considerable}} importance in both combinatorics and statistical physics. It contains several other polynomial invariants, {{such as the}} chromatic polynomial and flow polynomial as <b>partial</b> <b>evaluations,</b> and various numerical invariants such {{as the number of}} spanning trees as complete evaluations. However, despite its ubiquity, there are no widely-available effective computational tools able to compute the Tutte polynomial of a general graph of reasonable size. In this paper we describe the implementation of an algorithm that exploits isomorphisms in the computation tree to extend the range of graphs for which it is feasible to compute their Tutte polynomials, and we demonstrate the utility of the program by finding counterexamples to a conjecture of Welsh on the location of the real flow roots of a graph...|$|R
40|$|The Tutte {{polynomial}} of a graph, {{also known}} as the partition function of the q-state Potts model, is a 2 -variable polynomial graph invariant of considerable importance in both combinatorics and statistical physics. It contains several other polynomial invariants, such as the chromatic polynomial and flow polynomial as <b>partial</b> <b>evaluations,</b> and various numerical invariants such as the number of spanning trees as complete evaluations. We have developed the most efficient algorithm to-date for computing the Tutte polynomial of a graph. An important component of the algorithm affecting efficiency is the choice of edge to work on at each stage in the computation. In this paper, we present and discuss two edge-selection heuristics which (respectively) give good performance on sparse and dense graphs. We also present experimental data comparing these heuristics against a range of others to demonstrate their effectiveness. ...|$|R
