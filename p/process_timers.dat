1|28|Public
50|$|So {{a process}} switch {{proceeds}} {{something like this}} - a process requests a resource that is not immediately available, maybe a read of a record of a file from a block which is not currently in memory, or the system timer has triggered an interrupt. The operating system code is entered and run {{on top of the}} user stack. It turns off user <b>process</b> <b>timers.</b> The current process is placed in the appropriate queue for the resource being requested, or the ready queue waiting for the processor if this is a preemptive context switch. The operating system determines the first process in the ready queue and invokes the instruction move_stack, which makes the process {{at the head of the}} ready queue active.|$|E
40|$|AbstractDistributed π-{{calculus}} and ambient calculus are extended with timers {{which may}} trigger timeout recovery <b>processes.</b> <b>Timers</b> provide a useful notion of relative time {{with respect to}} the interaction in a distributed system. The rather flat notion of space in timed distributed π-calculus is improved by considering a hierarchical representation of space in timed mobile ambients. Some basic results are proven, making sound both formal approaches. An easily understood example is used for both extensions, showing how it is possible to describe a non-monotonic behaviour and use a decentralized control to coordinate the interacting components in time and space...|$|R
40|$|Nowadays, many {{process has}} {{to be done in the}} {{internet}} such as online shopping, online ticket booking etc. During this <b>process,</b> <b>timer</b> {{has to be}} maintained to find the hacking process. This paper address the identification problem that does not detecting the variation of time values of real time data and non-real time data in a fast manner. To find the time variation of two activities, propose an active comparison algorithm to perform comparisons of real time data and non-real time data fastly. Based on result produced from the active comparison algorithm, and then find the normal and abnormal activity (anomalous activity). INDEX TERMS- Abnormal Activity detection, time stamped data, real time data, on-real time data, and temporal activity. I...|$|R
50|$|Since their introduction, {{automatic}} washing machines {{have relied on}} electromechanical timers to sequence the washing and extraction <b>process.</b> Electromechanical <b>timers</b> consist {{of a series of}} cams on a common shaft driven by a small electric motor via a reduction gearbox. At the appropriate time in the wash cycle, each cam actuates a switch to engage or disengage a particular part of the machinery (for example, the drain pump motor).|$|R
30|$|Adam et al.[24] study relay {{selection}} with explicit {{consideration of}} the energy required to receive data. They propose a relay selection scheme that exhibits benefits with respect to energy efficiency. Nodes compete in the relay selection <b>process</b> by setting <b>timers</b> based on the channel state.|$|R
50|$|The Timer Service {{provides}} a {{mechanism by which}} client <b>processes</b> can set <b>timers</b> and be notified when a timer expires. A timer is a logical object that is dynamically created and represents its expiry time as either an absolute time or duration from the current time.|$|R
5000|$|With a {{photochemical}} <b>process,</b> {{the color}} <b>timer</b> adjusts {{the color of}} the film via printer lights for greater consistency in the film's colors. With a digital intermediate process, the colorist can use digital tools in manipulating the image and has greater creative freedom in changing the aesthetic of a film.|$|R
40|$|In most network {{communication}} protocols, {{the timer}} {{is used as}} {{an efficient way to}} handle various expected and unexpected events. The timer management plays a very important role in the protocol implementation. Also, {{there are many ways to}} <b>process</b> the protocol <b>timers.</b> The purpose of this report is to find a protocol <b>timer</b> <b>process</b> mechanism which will improve the implementation performance of the Xpress Transport Protocol (XTP) [...] Sandia XTP, especially with XTP rate control. Based on previous work (Louis Harvey: In search of a rate control policy for XTP: unicast & multicast) and the analysis of the Sandia XTP implementation, the new timer management is proposed and implemented with Sandia XTP. Some experiments that focus on XTP rate control showed that the new timer management in Sandia XTP improved the XTP rate control and performance...|$|R
40|$|The Wing-Kristofferson {{movement}} timing model (A. M. Wing & A. B. Kristofferson, 1973 a, 1973 b) distinguishes central timer {{and motor}} implementation processes. Previous {{studies have shown}} that increases in interresponse interval (IRI) variability with mean IRI are due to central <b>timer</b> <b>processes,</b> not motor implementation. The authors examine whether this is true with IRI duration changes in binary rhythm production. Ten participants provided IRI and movement data in bimanual synchronous tapping under equal (isochronous) and alternating (rhythm) interval conditions. Movement trajectory changes were observed with IRI duration (300, 500, or 833 ms) and for 500 -ms IRIs produced in rhythm contexts (300 / 500 ms, 500 / 833 ms). However, application of the Wing-Kristofferson model showed that duration and context effects on IRI variability were attributable largely to <b>timer</b> <b>processes</b> with relatively little effect on motor processes. status: publishe...|$|R
40|$|The final {{publication}} {{is available}} at Elsevier via [URL] © 2015. This manuscript version is made available under the CC-BY-NC-ND 4. 0 license [URL] consider a single-server queueing system with Poisson arrivals and generally distributed service times. To systematically control the workload of the queue, we define for each busy period an associated <b>timer</b> <b>process,</b> {R(t), t ≥ 0 }, where R(t) represents the time remaining before the system is closed to potential arrivals. The process {R(t), t ≥ 0 } {{is similar to the}} well-known workload process, in that it decreases at unit rate and consists of up-jumps at the arrival instants of admitted customers. However, if X represents the service requirement of an admitted customer, then the magnitude of the up-jump for the <b>timer</b> <b>process</b> occurring at the arrival instant of this customer is (1 − q) X for a fixed q ∈ [0, 1]. Consequently, there will be an instant in time within the busy period when the <b>timer</b> <b>process</b> hits level zero, at which point the system immediately closes and will remain closed {{until the end of the}} current busy period. We refer to this particular blocking policy as the q-policy. In this paper, we employ a level crossing analysis to derive the Laplace–Stieltjes transform (LST) of the steady-state waiting time distribution of serviceable customers. We conclude the paper with a numerical example which shows that controlling arrivals in this fashion can be beneficial. NSERC (Natural Sciences and Engineering Research Council of Canada...|$|R
50|$|Scheduling {{was left}} {{entirely to the}} programs, if {{required}} at all (in the 1960s, multitasking was a debatable feature). One user could start up a session in a pre-emptive multitasking environment, while another might start in a single-user mode to run batch processing at higher speed. Real-time scheduling could be supported by sending messages to a <b>timer</b> <b>process</b> that would only return at the appropriate time.|$|R
40|$|While electing an {{eventual}} common leader, despite process crashes, in a shared memory system where the processes communicate only by {{reading and writing}} shared registers is possible when the processes progress synchronously, this problem becomes impossible to solve {{as soon as the}} processes can progress in a fully asynchronous way. So, an important problem consists in finding additional behavioral assumptions that are, at the same time, “as weak as possible ” (in order they are practically always satisfied), and “strong enough ” in order to allow implementing {{an eventual}} leader service despite the net effect of asynchrony and failures. This paper focuses on this dilemma. More explicitly, it investigates a timing assumption that allows implementing an eventual leader in presence of partial asynchrony and process crashes. The proposed timing assumptions are particularly weak. They are the following: after some time (i) there is a process that behaves synchronously, and (ii) (t; f) other <b>processes</b> have <b>timers</b> that work correctly (t is the maximal number of processes that may crash, and f the actual number of <b>process</b> crashes; a <b>timer</b> works incorrectly when it expires too early with respect to the value it has been set). Then, the paper proposes a t-resilient protocol that elects an eventual common leader in any shared memory system that satisfies the previous assumption. Interestingly, this protocol is based on simple design principles...|$|R
40|$|Industrial timer {{requirements}} are multifaceted. On-delay, off-delay, cyclic or sequential timing requirements, with usual time range varying from seconds to days, {{depending on the}} <b>process.</b> Custom build <b>timers</b> cannot provide all of these requirements simultaneously and hence an advanced timer rectifying this shortcoming has been designed and fabricated in this work. This timer {{is based on the}} real time clock chip used in mother boards. Our design can be programmed for a specific time requirement and can later be put to work in standalone mode. A demonstration board is fabricated and tested...|$|R
40|$|Based on the ITU-T Recommendation Z. 100 [27]|also {{known as}} SDL- 92 | we de ne a formal {{semantic}} {{model of the}} dynamic properties of Basic SDL {{in terms of an}} abstract SDL machine. More precisely, we use the concept of multi-agent real-time ASM [17] as a semantic platform on top of which we construct our mathematical description. The resulting interpretation model is not only mathematically precise but also reflects the common understanding of SDL in a direct and intuitive manner; it provides a concise and understandable representation of the complete dynamic semantics of Basic SDL. Moreover, the model can easily be extended and modified [...] a particularly important issue for an evolving technical standard. In this article, we consider all relevant aspects concerning the behavior of channels, <b>processes</b> and <b>timers</b> with respect to signal transfer operations and timer operations. The model we obtain is intended as a basis for formal documentation as well as fo...|$|R
30|$|The PR aims to {{identify}} whether the mobile cloud user is still {{registered with the}} home network. In this state, the home network begins the re-registration process because the registration timer has timed out. The RCC aims to intimate {{the change in the}} location of the mobile cloud user to the home network. During the re-registration <b>process,</b> the <b>timer</b> triggers the RCC, whereas the PR controls the changing parameters. The registration timer is required for both the RCC and PR to efficiently initiate the new session. In our proposed fast, seamless handover, the IPMS identifies the current registration status of the mobile cloud device. The process is also supported with the priority enforcement module (PEM) that reduces the traffic load when the handover is in progress, as this feature assigns the priority to each device based {{on the nature of the}} traffic. Furthermore, the IPMS also refreshes the registration timer during the session establishment process and cloud server-access. As a result, the time consumed for the PR can be reduced in our approach.|$|R
40|$|A {{laboratory}} type CVD {{reactor system}} with a vertical deposition chamber and sample pedestal heated by an external RF coil has been extensively modified by installation of mass flow controllers, automatic <b>process</b> sequence <b>timers,</b> and special bellows-sealed air-operated valves for overall improved performance. Various film characterization procedures, including classical metallography, SEM analyses, X ray diffraction analyses, surface profilometry, and electrical measurements (resistivity, carrier concentration, mobility, spreading resistance profiles, and minority-carrier lifetime by the C-V-t method) area used to correlate Si sheet properties with CVD parameters and substrate properties. Evaluation procedures and measurements are given. Experimental solar cell structures were made both in epitaxial Si sheet (on sapphire substrates) and in polycrystalline material on alumina substrates, the former to provide an indication {{of what might be}} an upper limit on performance of the latter. Preliminary results are given, as obtained in cell structures not specially designed to allow for the unique properties of the sheet material, and fabricated in material known to be far from optimum for photovoltaic performance. Low power conversion efficiencies have been obtained in the epitaxial as well as the polycrystalline Si sheet...|$|R
40|$|In this paper, an unified {{lightweight}} {{error recovery}} {{scheme based on}} coordinated checkpointing and rollback for distributed shared memory clusters is proposed. The new scheme maintains multiple globally consistent checkpoints {{of the state of}} a distributed shared memory cluster and recovers to a pre-fault checkpoint of the system. It also describes and evaluates the coordinated checkpointing. The coordinated checkpoint neither needs to exchange coordination messages nor adds information to the process messages. It only accesses stable storage when checkpoints are saved. Each of the processes saves its state independently from the other <b>processes.</b> The checkpoint <b>timers</b> are set at different processes. Based on the results of performance evaluation the proposed scheme is shown to outperform the previously proposed checkpoint and recovery schemes for distributed shared memory clusters...|$|R
50|$|On {{the early}} {{electromechanical}} timers, the motor ran {{at a constant}} speed throughout the wash cycle, although {{it was possible for}} the user to truncate parts of the program by manually advancing the control dial. However, by the 1950s demand for greater flexibility in the wash cycle led to the introduction of more sophisticated electrical timers to supplement the electromechanical timer. These newer timers enabled greater variation in functions such as the wash time. With this arrangement, the electric timer motor is periodically switched off to permit the clothing to soak, and is only re-energized just prior to a micro-switch being engaged or disengaged for the next stage of the <b>process.</b> Fully electronic <b>timers</b> did not become widespread until decades later.|$|R
5000|$|The {{provenance}} of {{the item}} {{described as the}} [...] "Mebo timer fragment" [...] was fatally undermined in 2012. In 1990 the fragment of printed circuit board (PCB) recovered among the Pan Am 103 wreckage was discovered by Scottish investigators to have circuitry coated with almost pure tin, consistent {{with the use of}} an amateur process known as [...] "liquid tin". However the PCBs used in the MEBO timers were coated with a tin/lead alloy consistent {{with the use of the}} standard industrial manufacturing <b>process.</b> All the <b>timer</b> units supplied to Libya had the standard alloy coating; the fragment found at Lockerbie did not. This fact was known to the investigators and the prosecution however it was concealed from the trial court.|$|R
30|$|Attack {{detection}} ratio: It is {{the rate}} at which the spoofing attacks and the flooding attacks are detected. When the network size increases the percentage of local IPDS increases which leads to the increase in attack detection ratio. Once the spoofing attacks are detected, the flooding attacks are detected easily in a timely manner. Figure 10 shows the attack detection ratio of the ColShield system with respect to the percentage of local IPDS in the WMN. The attack detection ratio calculates the percentage of spoofing attack detected by the system while running the bandwidth allocation <b>process</b> and the <b>timer</b> monitor protocol. The attack detection ratio also calculates the percentage of flooding attacks detected by the system while running the bandwidth monitor protocol. The attack detection ratio for spoofing attack and flooding attack is reasonably good which is the goal of the ColShield System.|$|R
40|$|Dynamic {{systems in}} DNA {{nanotechnology}} are often pro-grammed using a chemical reaction network (CRN) model {{as an intermediate}} level of abstraction. In this paper, we design and analyze a CRN model of a watchdog timer, a de-vice commonly used to monitor {{the health of a}} safety critical system. Our process uses incremental design practices with goal-oriented requirements engineering, software verification tools, and custom software to help automate the software engineering <b>process.</b> The watchdog <b>timer</b> is comprised of three components: an absence detector, a threshold filter, and a signal amplifier. These components are separately de-signed and verified, and only then composed to create the molecular watchdog timer. During the requirements-design iterations, simulation, model checking, and analysis are used to verify the system. Using this methodology several incom-plete requirements and design flaws were found, and the fi-nal verified model helped determine specific parameters for biological experiments. Keywords probabilistic model checking; requirements engineering; molec-ular programming; chemical reaction networks 1...|$|R
40|$|Existing position-based unicast routing algorithms, where packets are {{forwarded}} in {{the geographic}} {{direction of the}} destination, require that the forwarding node knows the positions of all neighbors in its transmission range. This information on direct neighbors is gained by observing beacon messages each node sends out periodically. The transmission of beacons and the storage of neighbor information consumes resources. Due to mobility, collected neighbor information can quickly get outdated which in turn can lead to packet drops. In this paper, we propose a mechanism to perform position-based forwarding {{without the help of}} beacons or the maintenance of neighbor tables. In our contention-based forwarding scheme (CBF) the next hop is selected through a distributed contention <b>process</b> using biased <b>timers.</b> To avoid packet duplication, the first node that is selected suppresses the selection of further nodes. We propose three suppression strategies which vary with respect to forwarding efficiency and suppression characteristics. We analyze the behavior of CBF with all three suppression strategies and compare it to an existing greedy routing approach by means of simulation with ns- 2. Our results demonstrate that CBF is a promising strategy for position-based routing...|$|R
40|$|An {{introduction}} to the ITU standard language Message Sequence Chart (MSC) is pro-vided. It is pointed out that MSC in many respects is complementary to the ITU speci-cation and design language SDL. MSC in combination with SDL or other languages, now {{plays a role in}} nearly all stages of the system development process. Since MSC has been standardized in the same study group as SDL, the language form is quite analogous, e. g. it has a graphical (MSC/GR) and a textual (MSC/PR) syntax form. The MSC language in the present recommendation Z. 120 (MSC' 92), comprises basic language elements- in-stance, message, environment, action, <b>timer,</b> <b>process</b> creation and termination, condition- and structural language elements- coregion and submsc. It is demonstrated how global and non-global conditions may be used for the composition of MSCs. Whereas in MSC' 92 main emphasis is put on the elaboration of basic concepts and a corresponding formal semanrics, in the new MSC version (MSC' 96) structural language constructs, essentially composition and object oriented concepts, will play a dominant role. With these new con-cepts, the power of MSC is enhanced considerably in order to overcome the traditional restriction of MSC to the specication of few selected system runs...|$|R
5000|$|Self-destruct {{mechanisms}} are frequent plot devices in science fiction stories, {{such as those}} in the Star Trek fictional universe, or the Alien universe. They are applied to military installations and spaceships which would be too valuable to allow an enemy to capture. An artificial intelligence may invoke self-destruct due to cognitive dissonance. In many such stories, such a mechanism causes massive destruction in a large area, obliterating the object protected by the device. Often the characters have a limited amount of time to escape the destruction or to disable the mechanism, creating story tension. In the television series The Man from U.N.C.L.E. and Mission Impossible, sensitive intelligence or equipment is shown to self-destruct in order to prevent it from falling into enemy hands. [...] Usually the self-destruct sequence is lengthy and complex, as in Alien, or requires multiple officers aboard the ship with individual passcodes to initiate the <b>process,</b> with countdown <b>timers</b> that can allow characters to escape. Passwords in 1970s and 1980s movies are noticeably unfit for purposes of such major impact, considering accounts with even low level security in modern times have far more complex password requirements, as the writers of the era did not anticipate the complexity level of computer generated brute-force attacks and security issues.|$|R
40|$|Have {{been done}} a making design {{to wake up}} the {{measuring}} instrument move of reflect use microcontroler AT 89 S 51. This system can delivered data to computer with serial communications. This peripheral applicable to measure the speed move of human reflect being, {{and can be used}} in so many need, for example measuring speed move of athlete reflect, knowing the condition of someone health and others. This system use hardware 4 Relay, 4 lamp, 4 saklar, Max RS 232 and microcontroler AT 89 S 51. Relay have function to control lamp, Max RS 232 for the communications of serial between microcontroler with the computer. Application program of computer use the program of Borland Delphi 7. 0 to sending and accepting serial data at mikrokontroler AT 89 S 51. On the program of Borland Delphi 7. 0 data serial sent to microcontroler, and then activate the <b>process</b> of count <b>timer</b> and also control the relay and lamp. Relay and lamp controlled by microcontroler AT 89 S 51 with the data input from saklar. Saklar deliver data to microcontroler and then by microcontroler will be processed,if corret so mikrokontroler will discontinue the process of the counting timer. From research done to be by result of measurement of time count move the reflek. measurement of time Count move the reflek a set of milisekon. Data of time Count move the reflek can be noted and presented. At this system, data in computer will save in microsoft exce...|$|R
40|$|RATIONALE: The {{impacts of}} psychoactive drugs on timing have usefully {{informed}} theories of timing and its substrates. OBJECTIVES: The {{objectives of the}} study are to test the effects of alcohol and caffeine on the explicit timing involved in tapping with the implicit timing observed in the coordinated picking up of an object, and with the temporal discrimination. MATERIALS AND METHODS: Participants in the "alcohol" experiment (N = 16) received placebo, "low" (0. 12 g/kg or 0. 14 g/kg for women/men, respectively) or "high" (0. 37 g/kg or 0. 42 g/kg, respectively) doses of alcohol, {{and those in the}} "caffeine" experiment (N = 16) received placebo, 200 or 400 mg caffeine. Time production variability was measured by repetitive tapping of specified intervals, and sources of variance attributable to central <b>timer</b> <b>processes</b> and peripheral motor implementation were dissociated. The explicit timing in tapping was compared with the implicit timing in the coordinated picking up of an object. Time perception was measured as discrimination thresholds for intervals of similar duration. Drug effects on reaction time were also measured. RESULTS: For tapping, alcohol significantly increased timer variability, but not motor variability; it did not affect coordination timing in the grip-lift task. Conversely, for time perception, the low dose of alcohol improved temporal discrimination. Caffeine produced no effects on any of the timing tasks, despite significantly reducing reaction times. CONCLUSIONS: The effects of alcohol argue against a common clock process underlying time interval perception and production in the range below 1 s. In contrast to reaction time measures, time perception and time production appear relatively insensitive to caffeine. status: publishe...|$|R
40|$|Any form {{of timing}} {{involves}} a rhythmic <b>process</b> as interval <b>timer.</b> It {{is useful to}} postulate a 'physiological clock' in the explanation of time estimation behaviour, provided that environmental factors are not forgotten, that the 'clock' is conceptualized in functional rather than anatomical terms, {{and that it is}} stressed that there may be many such 'clocks' within the organism, divided both in terms of physiological and behavioural system, and in terms of range of durations measured. Some such 'clock' must underlie the estimation by human beings of intervals ranging up to about 60 seconds, and wherever this 'clock' may be located one may expect it to be subject to the same effects of inheritance as other biological mechanisms. This hypothesis was investigated using the intra-pair comparison of MZ and DZ same-sex co-twins of above average intelligence, and intervals ranging from 3 to 5 seconds presented under a variety of modal and methodological conditions. No significant inter-zygosity difference in time estimation was found for pre-pubertal subjects. With post-pubertal twins (totalling 56 pairs) considerable evidence was found with reproduction and overwhelming evidence with opevative estimation that the intra-pair similarity for short interval time judgment is significantly greater for MZ co-twins than for same-sex DZ co-twins. It was also discovered that the MZ twins were somewhat more aoourate in their estimations. Sex difference {{does not appear to be}} of any significance in the judgment of duration. With verbal estimation of times ranging from 28 to 60 minutes, the intrapair similarity in judgment is considerably greater for MZ than for DZ cotwins, but with no inter-zygosity differences in accuracy. It is suggested that more attention should be paid to the method of retrieval of timing information...|$|R
40|$|Real-time {{operating}} systems (RTOSes) {{are required to}} run for years, and never fail, without human intervention. Safety is the primary concern for RTOSes because they usually control physical equipment. One strand of real-time operating system (RTOS) research {{is looking at the}} question: can developing an RTOS in a safe language result in a system that an errant process can’t crash? Choosing a good programming language can significantly improve the safety of the RTOS. In this thesis, we examine the advantages and associated problems of writing RTOSes in a safe language, namely Java. We design an RTOS named JARTOS that schedules processes on a micro-controller called TINI. The code of the JARTOS system is mainly written in Java, since Java provides both static and dynamic safety. The Java compiler handles potentially unsafe operations rather than the programmer. Also, Java includes run-time support to catch and handle run-time errors. JARTOS is designed to be a time-sharing system, where cooperative multiprocessing is used to schedule real-time processes. JARTOS switches <b>processes</b> on a <b>timer</b> interrupt. Each <b>process</b> is required to execute quickly and then give up the processor. Otherwise it will be timed out. To implement a timeout, JARTOS supports a timer interrupt that regularly updates a clock and checks for timeouts. To keep the number of interrupts to a minimum, input/output is done using polling where possible. Also, interrupts code is designed to be transparent to the processes. An interrupt handler sets flags and values, and then returns to the process it interrupted. In the context of achieving real-time performance, we look at the issues of implementing our system design in Java. We introduce how we used Java constructs to implement the design of JARTOS, and how we solved the low-level issues. RTOSes have to guarantee that real-time processes execute within specified time dead-lines. Loss of synchronization can occur when deadlines are not met. Timing problems are often very difficult to find. In JARTOS, we designed a set of performance measurements to investigate timing problems. These performance measurements are carefully designed to provide the right information at minimal cost in performance. Performance of TINI and JARTOS are measured and discussed...|$|R
40|$|Small GTP binding {{proteins}} {{function as}} molecular switches which cycles between GTP-bound ON and GDP-bound OFF states, and regulate {{a wide variety}} of cellular <b>processes</b> as biological <b>timers.</b> The first characterized member of the small GTPase family, the mutated oncogene p 21 src, later known as Harvey-Ras, was identified in the early 1980 s (Shih, T. Y. et al. 1980). In the following years small Ras-lik GTPases were found in several organisms and it was soon discovered that they took part in processes, such as signal transduction, gene expression, cytoskeleton reorganisation, microtubule organisation, and vesicular and nuclear transport. The first Rho (Ras homology) gene was cloned in 1985 from the sea slug Aplysia (Madaule, P. et al. 1985) and because of their homology to Ras it was first suspected that they could act as oncogenes. Later studies have shown that even though they participate in processes such as cell migration and motility they are not mutated in cancers. The first indications that Rho was a signaling protein regulating the actin cytoskeleton, came from experiments where activated forms of human RhoA was microinjected into 3 T 3 cells (Paterson, H. F. et al. 1990). Another Rho-like GTPase Rac 1 (named after Ras-related C 3 botulinum toxin substrate) was later shown to regulate actin cytoskeletal dynamics as well, suggesting that Rho-family members cooperate in controlling these processes (Ridley, A. J. et al. 1992). The Rac GTPase was also implicated in regulating the phagocytic NADPH oxidase, which produce superoxide for killing phagocytized microorganisms (Abo, A. et al. 1991). Thus, {{it soon became clear that}} Rac/Rho and the related GTPase Cdc 42 (cell division cycle 42) had central functions in many important cellular processes. There are at least three types of regulators for Rho-like proteins. The GDP/GTP exchange factors (GEFs) which stimulates conversion from the GDPbound form to the GTP-bound form. GDP dissociation inhibitors (GDIs) decrease the nucleotide dissociation from the GTPase and retrieve them from membranes to the cytosol. GTPase activating proteins (GAPs) stimulates the intrinsic GTPase activity and GTP hydrolysis. In addition there are probably regulators that dissociate GDI from the GTPase leaving it open for activation by the RhoGEFs. Ras and Rho-family proteins participate in a coordinated regulation of cellular processes such as cell motility, cell growth and division. The Ral GTPase is closely related to Ras and recent studies have shown that this GTPase is involved in crosstalk between both Ras and Rho proteins (Feig, L. A. et al. 1996; Oshiro, T. et al. 2002). Ral proteins are not found in plants and they appear to be restricted to animalia and probably yeast. During a screen for small GTPases in Drosophila melanogaster I discovered in 1993 several new members of the Ras-family, such as Drosophila Ral (DRal), Ric 1 and Rap 2. The functions of Ral GTPases in Drosophila have until recently been poorly known, but in paper 2 we present some of the new findings. Rho-like GTPases have been identified in several eukaryotic organisms such as, yeast (Bender, A. et al. 1989), Dictyostelium discoideum (Bush, J. et al. 1993), plants (Yang, Z. et al. 1993), Entamoeba histolytica (Lohia, A. et al. 1993) and Trypanosoma cruzi (Nepomuceno-Silva, J. L. et al. 2001). In our first publication, (Winge, P. et al. 1997), we describe the cloning of cDNAs from RAC -like GTPases in Arabidopsis thaliana and show mRNA expressions pattern for five of the genes. The five genes analyzed were expressed in most plant tissues with the exception of AtRAC 2 (named Arac 2 in the paper), which has an expression restricted to vascular tissues. We also discuss the evolution and development of RAC genes in plants. The third publication, (Winge, P. et al. 2000), describe the genetic structure and the genomic sequence of 11 RAC genes from Arabidopsis thaliana. As most genomic sequences of the AtRACs we analyzed came from the Landsberg erecta ecotype and the Arabidopsis thaliana genome was sequenced from the Columbia ecotype, it was possible to compare the sequences and identify new polymorphisms. The genomic location of the AtRAC genes plus the revelation of large genomic duplications provided additional information regarding the evolution of the gene family in plants. A summary and discussion of these new findings are presented together with a general study of small Ras-like GTPases and their evolution in cellular organisms. This study suggests that the small GTPases in eukaryots evolved from two bacterial ancestors, a Rab-like and a MglA/Arp-like (Arf-like) protein. The MglA proteins (after the mgl locus in Myxococcus xanthus) are required for gliding motility, which is a type of movement that take place without help of flagella. The second publication describes experiments done with the Drosophila melanogaster DRal gene and its effects on cell shape and development. Ectopic expression of dominant negative forms of DRal reveals developmental defects in eye facets and hairs, while constitutive activated forms affects dorsal closure, leaving embryos with an open dorsal phenotype. Results presented in this publication suggest that DRal act through the Jun N-terminal kinase (JNK) pathway to regulate dorsal closure, but recent findings may point to additional explanations as well. The results also indicate a close association between processes regulated by Rac/Rho and Ral proteins in Drosophila. dr. scient. dr. scient...|$|R

