21|1|Public
5000|$|... 1995. Constantine on <b>Peopleware.</b> Yourdon Press Computing Series.|$|E
5000|$|The {{concept of}} <b>peopleware</b> in the {{software}} community covers a variety of aspects: ...|$|E
5000|$|... 2001. The <b>Peopleware</b> Papers: Notes on the Human Side of Software. NJ: Prentice Hall.|$|E
5000|$|Lister's {{work with}} {{collaborator}} Tom DeMarco on non-technical factors affecting team and individual performance eventually resulted in their book, Peopleware: Productive Projects and Teams {{originally published in}} 1987. This work {{was the subject of}} a retrospective special session of IEEE International Conference on Software 2007 commemorating 20th anniversary of its publication. [...] <b>Peopleware's</b> prescriptions had mixed reception, with environmental factors like relative quiet and interrupt protection generally accepted, but other suggestions, particularly the use of enclosed space around a team in preference to open plan seating, largely ignored. The authors' Coding War Games study which supplies evidence for the book's conclusions about the effects of workplace factors on performance is still being cited in articles about workplace design more than 25 years after its initial publication.The term [...] "Peopleware" [...] is in general use [...] among software practitioners to describe the extent to which an organization does or not conform to the book's proposed ideals.|$|R
50|$|<b>Peopleware</b> is a {{term used}} to refer to one of the three core aspects of {{computer}} technology, the other two being hardware and software. <b>Peopleware</b> can refer to anything {{that has to do with}} the role of people in the development or use of computer software and hardware systems, including such issues as developer productivity, teamwork, group dynamics, the psychology of programming, project management, organizational factors, human interface design, and human-machine-interaction.|$|E
50|$|In <b>Peopleware,</b> {{a book on}} office work, Tom DeMarco and Tim Lister {{report that}} in an office environment, workers may take 15 minutes to achieve this state of flow in their concentration, {{and that it will}} be {{destroyed}} in a moment by an interruption such as a telephone call.|$|E
5000|$|<b>Peopleware</b> — Productive Projects and Teams (...) is a 1987 book on {{the social}} side of {{software}} development, specifically managing project teams. It was written by software consultants Tom DeMarco and Tim Lister, from their experience {{in the world of}} software development. This book was revised in 2013 (...) [...]|$|E
5000|$|<b>Peopleware</b> is {{a popular}} book about project management. The first chapter of the book claims, “The major {{problems}} of our work {{are not so much}} technological as sociological in nature”. The book approaches sociological or ‘political’ problems such as group chemistry and team jelling, [...] "flow time" [...] and quiet in the work environment, and the high cost of turnover. Other topics include the conflicts between individual work perspective and corporate ideology, corporate entropy, “teamicide” and workspace theory.|$|E
50|$|The term entropy {{is often}} used in popular {{language}} to denote a variety of unrelated phenomena. One example {{is the concept of}} corporate entropy as put forward somewhat humorously by authors Tom DeMarco and Timothy Lister in their 1987 classic publication <b>Peopleware,</b> a book on growing and managing productive teams and successful software projects. Here, they view energy waste as red tape and business team inefficiency as a form of entropy, i.e. energy lost to waste. This concept has caught on and is now common jargon in business schools.|$|E
40|$|The {{state of}} {{agricultural}} sector influences every person, determines {{the potential of}} national economy and politics. That is why the development of agricultural sector {{has always been one}} of the most urgent tasks for Russia and its regions. For the last few years the large-scale government support of the agricultural sector has been maintained which made the problem of peopleware of agricultural sector to be very significant. Staffing is known as fundamental principle of <b>peopleware.</b> Altai region is one of the farm production leaders, and problems of agricultural staffing are becoming more and more important...|$|E
40|$|The {{sociology}} of software project management is an often under-represented {{component in the}} education and professional development of software engineers even though factors such as team formation, role assignment, motivation, training, hiring, and many other <b>peopleware</b> 18 practices have been identified many times as at least equally important {{to the success of}} software projects as the technical 14, 16, 18, 42, 44, 45, 46. The reasons for this may be two-fold: the seeming arbitrariness of the sociological factors in software development is at odds with the formal and familiar technical aspects; and the lack of suitable tools with which to model and understand human dynamics [...] ...|$|E
40|$|This {{document}} {{presents a}} comprehensive plan for future growth in instructional computing in the Washington commuAty colleges. Two chapters define the curriculum objectives and content recommended for instructional courses in the community colleges which require access to computing facilities. The courses described include data processing technology, problem solving, general introduction to computers and computing, and computer science. The use of computers as adjuncts to classes is considered in sections on computer assisted instruction, computer based instruction, and computer managed instruction. other chapters define the software, hardware, <b>peopleware</b> and other support required to adequately {{meet the requirements of}} the identified course contents and objectives. The final chapter presents the resource specification and acquisition procedures which will permit the community colleges to move from the present level o...|$|E
40|$|A modern {{level of}} {{preparation}} of specialists {{is the basic}} condition of possibility for innova-tive development and economy growth of agro-industrial complex. Exceptionally new connections between a production, science and education are in high demand. The system of regional higher agrarian universities must perform as a generator of innovative scientific ideas and as a realization of innovative-investment projects for development. The analysis of agrarian science potential is conducted and priority industries of investments for <b>peopleware</b> are set. By means of expert method the system of estimation of personnel in agrarian field has been worked out and shaped {{that takes into account}} two constituents – intellectual and labour. Each employee except professional qualities must have a capacity for the innovative thinking. The new approaches to the personnel selection will allow activating innovative activities of enterprises...|$|E
40|$|Unlike {{construction}} project or similar projects which are physically obvious, information systems projects are substantially abstract in nature, both {{in term of}} its requirement, its solutions, and deliverables. With the objective to increase the effectiveness and probability of meeting stakeholders ’ expectation in information systems project management, this paper presents the application of Strategic Assumptions Surfacing and Testing (SAST) process for stakeholders and <b>peopleware</b> analysis in an information systems implementation project. To couple with SAST, WYSIWYG technology concept is adopted to embed {{into the mind of}} the stakeholders selected positive images and animations that symbolize the expectation of the different stakeholders at different phases of the project. The soft systems approach of managing information systems project is expected to significantly increase the success rate of meeting stakeholders ’ expectation...|$|E
40|$|In the {{information}} age, {{as we have}} become increasingly dependent upon complex information systems, {{there has been a}} focus on the vulnerability of these systems to computer crime and security attacks, exemplified by the work of the President’s Commission on Critical Infrastructure Protection. Because of the high-tech nature of these systems and the technological expertise required to develop and maintain them, {{it is not surprising that}} overwhelming attention has been devoted by experts to technological vulnerabilities and solutions. Yet, as captured in the title of a 1993 conference sponsored by the Defense Personnel Security Research Center, Computer Crime: A <b>Peopleware</b> Problem, it is people who designed the systems, people who attack the systems, and understanding the psychology of information systems criminals is crucial to protecting those systems. [2] A Management Information Systems (MIS) professional at a military facility learns she is going to be downsized. She decides t...|$|E
40|$|Most {{control systems}} are complex. They consist of complex {{hardware}} controlled and monitored by equally complex software and people ware. This overall system undergoes rigorous testing {{before it is}} made operational. This study examines the extent of testing required for new or replacement systems. The test procedure is essentially concerned with verifying previous assumptions; diagnostic analysis; lessons learned; customer acceptance and confirming manufacturer data. Although the software component of the complex system requires more test time than the hardware component, and the <b>peopleware</b> component has {{more often than not}} been ignored; it will be shown that the analysis can be carried out at a system level. The paper will apply this paradigm to a system made up of one or more programmable devices and associated software. The process will examine the reliability of the system design; separate the performance of the system functionally; assess risk probabilities based on the functions and recommend a method by which the system is optimally tested. I...|$|E
40|$|A formal pair {{programming}} {{experiment was}} run at North Carolina to empirically assess the educational {{efficacy of the}} technique in a CS 1 course. Results indicate that students who practice pair programming perform better on programming projects {{and are more likely}} to succeed by completing the class with a C or better. Student pairs are more self-sufficient which reduces their reliance on the teaching staff. Qualitatively, paired students demonstrate higherorder thinking skills than students who worked alone. These results are supportive of pair programming as a collaborative learning technique. In industry, programmers collaborate for the majority of their day. In <b>Peopleware</b> (DeMarco and Lister, 1987), it was reported that software developers generally spend 30 % of their time working alone, 50 % of their time working with one other person, and 20 % of their time working with two or more people. Yet, most often when completing their degree, programmers must learn to program alone; collaboration is considered cheating. This is unfortunate not only because collaboration is encouraged and required in a student’s future professional life, but there are also findings that cooperative and collaborative pedagogies are beneficial to student...|$|E
40|$|With {{all of the}} new {{technologies}} and buzzwords in the computer field, one might wonder why American Programmer returns to fundamental topics [...] <b>peopleware,</b> project management, and the like [...] so often. One reason is that our industry still isn't {{doing a very good job}} at the fundamentals, and another reason is that there always seems to be something new to say about them. Such is the case with software metrics: it's beennearly two years since we last covered the topic, and there are indeed some interesting new things to say. But Michael Mah and Larry Putnam (both from Quantitative Software Management) remind us that we tend to get distracted by the gadgets and buzzwords in the metrics field, just as we do in other aspects of computing. As they point out, "A key point to consider on metrics is this: rather than just musing on what 'new metric ' might apply in the ever-changing world of software, we should also be asking ourselves the more basic question, 'What will we do with metrics? ' [...] The problem oftentimes is that organizations don't have the basics down before they pile on measure after measure. " Mah and Putnam provide an excellent summary of the basics; for organizations still in a state of "metrics paralysis, " their article is an excellent place to start...|$|E
40|$|Hiring {{the right}} people means the {{difference}} between success and faiure. It’s not enough to hire ‘good enough ’ [...] . you need to hire the best, and nobody knows more than Johanna Rothman about that. This clear and comprehensive book joins <b>Peopleware</b> and The Mythical Man Month as must-reads for technical managers. ” —Joel Spolsky Founder, Fog Creek Software “Rothman lays out the tasks and the issues, then addresses actual situations that might arise. She covers the entire subject thoroughly [...] “If you are a hiring manager in a high-tech field, you must read this book. ” —Richard Mateosian IEEE Micro “If you are involved in any way with hiring techies, you need this book— {{not just as a}} one-time read, but as one you will refer to repeatedly. ” —Earl A. Everett, Director of Engineering, Vauban Advanced Technologies, posted on Amazon. com “I’m not aware of any other book like this. It’s a humane, yet toughminded approach to hiring. Any technical manager who wants to hire well will be thankful for it. ” —James Bach CEO, Satisfice, Inc. “ [...] . practical, pragmatic advice on finding and hiring the right person [...] full of examples, templates, and true stories that will help you make the best use of your time, fine-tune your hiring process, and hire the best. ...|$|E
40|$|Part 1 : Environmental Application in the Scope of the Future InternetInternational audienceIn {{terms of}} {{contemporary}} civilization development {{one of the}} key aspects of environmental protection is the effort to avoid wasting resources. In the case of environmental information systems there is a necessity to strive for such systems, which deliver the highest benefits with the lowest possible consumption of resources (material, energy, as well as human, etc.). Therefore, every information system must be regarded comprehensively, i. e. as a set of mutually interactive subsystems (components, parts). The experiences confirm that the information system, parts of which are not mutually balanced, leads to the lower effectiveness and efficiency of the system as a whole in contrast with a system which may be managed {{in such a way that}} all its parts are maintained at a comparable level. Thus, the effectiveness of environmental/information systems must be harmonized as a whole. This paper presents “the HOS method” developed in the Faculty of Business and Management of the Brno University of Technology. This method enables the primary assessment of the balance of organizations’ information systems. The HOS analysis is based on a considering of the basic subsystems: Hardware, Orgware and Software (hence the title HOS), but also the following subsystems: <b>Peopleware,</b> Dataware, Customers, Suppliers and Information System Management. The understandable and transparent HOS diagrams for assessing the balance of an information system are presented in a short case study where authors submit also some selected statistics about their current survey results obtained by means of empirical measurement of approximately four hundred chosen organizations from the Czech Republic and Slovak republic. The research is realized using the Zefis portal...|$|E
40|$|The {{continuing}} {{trend in}} technological advances {{has led to}} the implementation of complex systems in order to meet demands for improved services and products. Such implementation attempts to perform on-going activities in an effective and efficient manner. The size and complexity of these complex systems can be witnessed by the transportation systems, the highway systems, and the medium and heavy duty vehicles systems (engine, transmission, and brakes) which rely on electronic controls and require a combination of hardware (off-board diagnostic tools), software, and even <b>peopleware.</b> In this thesis work, an investigation is made to study the impact of implementing electronic controls to medium and heavy duty vehicles systems on the shop floor procedure when maintenance is performed. The impact reflects a significant change in the diagnostic procedures. Several manufacturers, such as Cummins, Caterpillar, Detroit Diesel, and Rockwell, design their systems with different electronic control units. Once these different systems are assembled together as a single entity in a vehicle, different formats and procedures must be followed when performing diagnostic procedures. Because of the change of procedures, traditional offboard diagnostic tools have to be replaced by new tools to ensure quality diagnostic repairs, thus introducing the cost consideration to system analysis. The main contribution of this thesis is to present a Systems Engineering Approach to integrate Medium and Heavy Duty Vehicles Electronic Controls (so the same off-board diagnostic tool can be used on all manufactured vehicles) and Shop Floor Procedures (human factors and quality control in maintenance). An intelligent off-board diagnostic tool will be designed and act as an expert system to aid the service technician(s) in performing diagnostic procedures. Consequently, a significant reduction of work time for repairing can be achieved for productivity improvement, and the retraining of the service technician(s) can also be realized. The results from this thesis work can effectively assist the top managers, service managers, and mechanics in performing diagnostic repairs, and can provide a mean for effective communications between the manufacturers, the repair facilities, and the customers...|$|E
40|$|In {{response}} to real and perceived short-comings {{in the quality}} and productivity of software engineering practices and projects, professionally-endorsed graduate and post-graduate curriculum guides {{have been developed to}} meet evolving technical developments and industry demands. Each of these curriculum guidelines identifies better software engineering management skills and soft, <b>peopleware</b> skills as critical for all graduating students, but they provide little guidance on how to achieve this. One possible way is to use a serious game — a game designed to educate players about some of the dynamic complexities of the field in a safe and inexpensive environment. This thesis presents the results of a qualitative research project that used a simple game of a software project to see if and how games could contribute to better software project management education; and if they could, then what features and attributes made them most efficacious. That is, shall we— should we— play games in software engineering management? The primary research tool for this project was a game called Simsoft. Physically, Simsoft comes in two pieces. There is an A 0 -sized printed game board around which the players gather to discuss the current state of their project and to consider their next move. The board shows the flow of the game while plastic counters are used to represent the staff of the project. Poker chips represent the team’s budget, with which they can purchase more staff, and from which certain game events may draw or reimburse amounts depending on decisions made {{during the course of the}} game. There is also a simple Java-based dashboard, through which the players can see the current and historical state of the project in a series of reports and messages; and they can adjust the project’s settings. The engine behind Simsoft is a system dynamics model which embodies the fundamental causal relationships of simple software development projects. In Simsoft game sessions, teams of students, and practicing project managers and software engineers managed a hypothetical software development project with the aim of completing the project on time and within budget (with poker chips left over). Based on the starting scenario of the game, information provided during the game, and their own real-world experience, the players made decisions about how to proceed— whether to hire more staff or reduce the number, what hours should be worked, and so on. After each decision set had been entered, the game was run for another next time period, (a week, a month, or a quarter). The game was now in a new state which the players had to interpret from the game board and decide how to proceed. The findings showed that games can contribute to better software engineering management education and help bridge the pedagogical gaps in current curriculum guidelines. However, they can’t do this by themselves and for best effect they should be used in conjunction with other pedagogical tools. The findings also showed that simple games and games in which the players are able to relate the game world to an external context are the most efficacious...|$|E

