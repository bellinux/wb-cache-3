937|5227|Public
2500|$|STEP-NC is not {{the first}} attempt at {{providing}} better quality information to a CNC. [...] The EIA 494 Basic Control Language (BCL) defined a control language that was portable and had toolpaths independent of machine geometry, but did not contain any of the other <b>product</b> <b>model</b> information found in STEP-NC.|$|E
2500|$|In November 2011, Apple updated its [...] "Apple Store" [...] iOS app to let U.S. {{customers}} use an [...] "EasyPay" [...] {{feature to}} buy products through their iPhone. The feature, which lets users choose the specific <b>product</b> <b>model</b> {{they want and}} gives users an option for picking up the product at a nearby Apple Store with the product in stock, aims to simplify and speed up shopping. If not immediately in stock, the feature gives users an estimated pick-up time. While inside an Apple Store, customers can also scan product barcodes to find technical specifications, ratings and reviews.|$|E
5000|$|Details of the <b>product</b> (<b>model,</b> {{description}} and {{the serial number}} where applicable) ...|$|E
40|$|This paper {{examines}} {{the history of}} <b>product</b> <b>modelling</b> including the main driving forces behind their development. Major projects which have furthered <b>product</b> <b>models</b> are discussed briefly and the recent development of the IAI {{and its relationship to}} the ISO-STEP project is discussed. Applications of <b>product</b> <b>models</b> are examined and likely future directions for <b>product</b> <b>models</b> predicted. The question of sufficiency of pure data models is examined and is shown to lead to a requirement for systems which integrate product, process, documents, legality and other topics into one system. The ToCEE project is used to highlight the benefits of integrating many different aspects of a project and then sharing this information out to all project participants. Further benefits of <b>product</b> <b>models</b> are examined including their use to find information across multiple manufacturers of product information. 2. History of <b>Product</b> <b>Modelling</b> The concepts behind much of the current work in <b>product</b> <b>modelling</b> have been around for decades, certainly before computers arrived on the scene. Many of the ideas behin...|$|R
40|$|This paper {{presents}} {{an approach to}} <b>product</b> <b>modelling</b> that uses computational agents to represent product data. These agents are situated, i. e. they produce all data representations {{in response to the}} specific need in the current situation. We have explored this characteristic {{in the context of the}} communication of product data to develop a framework for agent-based <b>product</b> <b>modelling.</b> This framework complements current standardisation efforts through its ability to construct <b>product</b> <b>models</b> on the fly to flexibly adapt to changes in the environment...|$|R
40|$|One of {{the most}} {{challenging}} tasks in the engineering profession is to develop new products that have the shortest lead-time, highest quality and lowest cost with optimal life-cycle consideration. The issue of <b>product</b> <b>modeling</b> {{is at the center of}} various new product development paradigms designed to meet this challenge, and, therefore, has received major attentions from application and research communities. Due to the fast developments of computer and information technologies and the increasing demands of competitiveness and productivity, the scopes and approaches of <b>product</b> <b>modeling</b> have evolved rapidly in recent years. This paper presents an overview of the state-of-the-art and practice of <b>product</b> <b>modeling</b> in terms of <b>product</b> <b>models</b> and process chains, and suggests some important issues for further investigation...|$|R
5000|$|<b>Product</b> <b>model</b> {{specific}} costing activities {{carried out}} in special projects with added emphasis on value analysis ...|$|E
5000|$|ISO 10303, Industrial {{automation}} {{systems and}} integration [...] - [...] Product data representation and exchange, informally known as Standard for the Exchange of <b>Product</b> <b>Model</b> Data (STEP) ...|$|E
50|$|EXPRESS is a {{standard}} data modeling language for product data. EXPRESS is formalized in the ISO Standard for the Exchange of <b>Product</b> <b>model</b> STEP (ISO 10303), and standardized as ISO 10303-11.|$|E
40|$|A {{conceptual}} PLM {{system architecture}} which contains a <b>product</b> <b>Modeling</b> framework and an information infrastructure is proposed {{in this paper}} The <b>product</b> <b>modeling</b> framework consists of a <b>product</b> information <b>modeling</b> architecture, a workflow modeling architecture and the extended enterprise resource modeling architecture. A multidisciplinary collaborative design method based on the <b>product</b> <b>modeling,</b> framework over Internet is discussed, and a J 2 EE standards based and multi-agents based information system infrastructure is presented {{in order to achieve}} the collaborative product development. Finally a PLM prototype system is implemented based on B/S scheme and the proposed conceptual PLM system architecture, and primary ideas have been validated. IEEE Comp Soc, TCE...|$|R
40|$|International audienceA {{critical}} {{aspect of}} PLM systems is their <b>product</b> information <b>modeling</b> architecture. Therefore, {{dealing with the}} <b>product</b> structure <b>model</b> and its evolutions or transformations {{plays a significant role}} in the development, adaptation and performance of PLM tools. This paper deals with the <b>product</b> structure <b>model</b> changes. It supposes to formulate a transformation function to allowing the evolution of a model such as the design <b>model</b> of a <b>product</b> line. In order to realize this objective, the joint evolution of generic <b>product</b> <b>models</b> and specific <b>product</b> <b>models</b> is studied, based on the principles of the MDA (Model Driven Architecture) approach, the transformation function is defined...|$|R
40|$|Supporting {{different}} stakeholder viewpoints {{across the}} product’s entire lifecycle requires semantic richness for representing product related information. This paper proposes a multi-layered <b>product</b> <b>modeling</b> framework that enables stakeholders {{to define their}} product-specific models and relate them to physical or simulated instances. The framework is defined within the Model-driven Architecture and adapted to the multi-layer approach of the architecture. The data layer represents real world <b>products,</b> the <b>model</b> layer includes <b>models</b> of those <b>products,</b> and the meta-model layer (M 2) defines the <b>product</b> <b>modeling</b> language. The semantic-based <b>product</b> <b>modeling</b> language described in this paper is specialized from a web ontology language enabling product designers to express the semantics of their <b>product</b> <b>models</b> explicitly and logically in an engineering-friendly way. The interactions between these three layers are described to illustrate how each layer in the framework is used in a product engineering context. A product example is provided for further understanding of the framework...|$|R
50|$|Newport News Shipbuilding used a {{full-scale}} three-dimensional <b>product</b> <b>model</b> developed in Dassault Systèmes CATIA V5 release 8 (which includes special features useful to shipbuilders) {{to design and}} plan {{the construction of the}} Ford class of aircraft carriers. This enables engineers and designers to test visual integration in design, engineering, planning and construction of components and subsystems. CVN-78 is the first aircraft carrier to be designed in {{a full-scale}} 3D <b>product</b> <b>model.</b> This modeling enabled the rooms within the ship to be modular, so that future upgrades can be implemented by designers simply by swapping a box in and locking it down.|$|E
50|$|The {{process of}} {{constructing}} the <b>product</b> <b>model</b> consists of six main activities, {{which can be}} decomposed in several sub-activities. The next table describes these activities and the sub-activities within them provided with a description about this activity.|$|E
50|$|The {{following}} multi-criteria decision-making {{methods have}} been confirmed to exhibit this paradox:The analytic hierarchy process (AHP) {{and some of its}} variants, the weighted <b>product</b> <b>model</b> (WPM), the ELECTRE (outranking) method and its variants and the TOPSIS method.|$|E
40|$|This thesis {{focuses on}} model-driven {{software}} product line development, {{which is the}} combination of the following two software development paradigms: (1) Model-Driven Engineering (MDE), which focuses on <b>modeling</b> software <b>products</b> and automating code generation from <b>product</b> <b>models.</b> In particular, Domain-Specific Modeling (DSM), as a technique in the arena of MDE, is about defining a Domain-Specific Language (DSL) and creating software <b>product</b> <b>models</b> using the language. (2) Software Product Line Engineering (SPLE), is a means to produce similar software products, by consolidating those into product lines to enable managed reuse. In a model-driven Software Product Line (SPL) which adopts DSM technique, products are represented as <b>product</b> <b>models</b> defined in a DSL. The variability (and commonality) of all intended products is specified in a <b>product</b> line <b>model,</b> typically using a variability modeling language. Based on the variability specified in the <b>product</b> line <b>model,</b> reusable model fragments specified using the base DSL, serving as the core assets of the product line, will be reused to derive all intended <b>product</b> <b>models.</b> This thesis provides methods for developing model-driven software product lines, in terms of development methodology, automated assistance and SPL evolution support. Firstly, this thesis presents two results on the methodology for developing a modeldriven SPL: (1) A generic and separate variability modeling language, which can be used to specify a <b>product</b> line <b>model</b> defining how intended <b>product</b> <b>models</b> can vary from each other, both at the domain conceptual level and the realization level (model object level). (2) Guidelines on how to define a DSL that is suitable to serve as the base language for a model-driven SPL, if the base language of the product line does not exist yet. Secondly, this thesis reports on two results in providing automated tool support for model-driven product line development: (1) A method for synthesizing a <b>product</b> line <b>model</b> from a set of existing <b>product</b> <b>models</b> when the <b>product</b> line is not built from scratch. (2) A method for ensuring that all the <b>product</b> <b>models</b> that can be derived from the <b>product</b> line <b>model</b> are intended. Thirdly, this thesis reports on three results in providing support for evolving model-driven SPLs: (1) A method for augmenting the existing <b>product</b> line <b>model</b> when new <b>product</b> <b>models</b> need to be included. (2) A method for suggesting automatic update to the <b>product</b> line <b>model</b> when the core assets of the product line have been changed. (3) A method for calculating semantic difference between two model-driven SPLs. We illustrate the application of our approaches in various case studies in different domains, provided by both industry and academia. Different phases of SPL development and evolution can require substantial amount of manual efforts, of which productivity can be improved by adopting our automatic tool support. We show that 2 by following our approaches, model-driven SPLs can be developed and evolved in a systematic and efficient manner...|$|R
40|$|Integrating {{machining}} sequences into CAD <b>models.</b> <b>Product</b> <b>modelling</b> offers consid- erable potentials of rationaliza- tion for {{the integration}} of design and work planning. While the standardization of STEP {{has not yet been}} concluded, benefits of <b>product</b> <b>modelling</b> can already be used today on the basis of advanced CAD systems, {{as can be seen in}} the following article...|$|R
40|$|As product {{complexity}} and marketing competition increase, a collaborative product development environment {{is necessary for}} production engineers developing high quality products in short lead-times. To support product designers from different fields, disciplines, and locations, wishing to exchange and share data/information, the neutral form <b>product</b> information <b>models,</b> independent of application platforms, are the underlying requirement of the collaborative development environment. In this paper, a complete solution for neutral <b>product</b> information <b>modelling</b> is proposed. A series of issues referring to the representation of <b>product</b> information <b>models</b> are discussed in detail. The system function <b>modelling,</b> <b>product</b> information <b>modelling,</b> and description of <b>product</b> information <b>model</b> are seriatim discussed. Based on STEP standard and IDEF definition methods, taking rolling bearing as an example, an application case of complete <b>product</b> information <b>modelling</b> is stated. Within VC++ environment, the implementation of <b>product</b> information <b>models</b> is described. Lastly, several general rules for <b>product</b> information <b>modelling</b> are stated. The studies provide a set of complete solutions for <b>product</b> information <b>modelling</b> with neutral forms independent of application platforms. It provides a feasible scheme for product information exchange and sharing within collaborative product development and concurrent engineering environments...|$|R
5000|$|The {{original}} <b>product</b> <b>model</b> included online {{speed dating}} sessions which lets users create or join topical live speed video chat sessions, connecting with 3 people in 3 minutes. Currently, WooMe is a one-on-one video chatting product where individuals can meet {{in an online}} atmosphere.|$|E
50|$|A {{facility}} {{information model}} is an information model {{of an individual}} facility that is integrated with data and documents about the facility. The facility can be any large facility that is designed, fabricated, constructed and installed, operated, maintained and modified; for example, a complete infrastructural network, a process plant, a building, a highway, a ship or an airplane.The difference with a <b>product</b> <b>model</b> is that a <b>product</b> <b>model</b> is typically a model about a kind of product expressed as a data structure, whereas a facility information model typically is an integration of 1000-10,000 components and their properties and relations and 10,000-50,000 documents. A facility information model is intended for users that search for data and documents about {{the components of the}} facility and their operation.|$|E
50|$|EPPML (Extensible Postal <b>Product</b> <b>Model</b> and Language) is a {{conceptual}} {{model for the}} interactions between parties of a postal communication system. Examples of such parties are mailers, posts, mail aggregators, providers of postal services and equipment and recipients. They create, publish, consume and deliver postal products.|$|E
40|$|Abstract: This paper {{describes}} {{and analyses}} {{the impacts of}} Finnish building <b>product</b> <b>modelling</b> methodology on the building process and on construction field organizations. The objective is also to recognize and monitor changes {{in the design and}} construction environments {{as well as in the}} software platforms. In Finland building <b>product</b> <b>modelling</b> has, after 10 - 15 years of preliminary research, evolved into a piloting phase where the developed modelling methods are currently tested in real-life projects. One quite possible – and even more desired – future scenario is that building <b>product</b> <b>modelling</b> will become an essential collaborative working platform of the building projects within the next 10 years. ...|$|R
40|$|This paper {{deals with}} the topics of design theory, {{decision}} support systems and <b>product</b> <b>modelling.</b> In {{order to be able}} to generate optimal decisions in the framework of architectural and building systems design it is necessary to use a proper base, like a design theory, which finally can lead towards a satisfying <b>product</b> <b>modelling</b> in a wide sense of this term...|$|R
40|$|Most of the propositions to {{improving}} the management of information in the construction process are either management or technological centric. The goal however is common in that they all aim at integrating the data generated by a generally multi-disciplined work force, and optimise its usage. This {{has resulted in a}} paradigm shift towards information, communication and technology related concepts such ‘virtual building teams’. The virtual building team paradigm encourages project development participants to create and share comprehensive project data throughout the construction lifecycle. Myriads of techniques and technologies have been proposed for this task; building <b>product</b> <b>modeling</b> is one of them. Building <b>product</b> <b>models</b> play a pivotal role in this regard because they use non-proprietary format approach to exchanging data. However, if data exchange is to run smoothly, it is vital to identify and contend with the challenges that come with <b>product</b> <b>models.</b> This paper discusses some of the challenges of using <b>product</b> <b>models</b> in construction, and how best to optimise the neutral data they possess...|$|R
5000|$|During that time, POSC Caesar {{also became}} a member of European Process Industries STEP Technical Liaison Executive (EPISTLE) where it collaborates with PISTEP (UK), and USPI-NL (The Netherlands) on the {{development}} of ISO 10303, also known as [...] "Standard for the Exchange of <b>Product</b> <b>model</b> data (STEP)." ...|$|E
50|$|STEP-NC is not {{the first}} attempt at {{providing}} better quality information to a CNC. The EIA 494 Basic Control Language (BCL) defined a control language that was portable and had toolpaths independent of machine geometry, but did not contain any of the other <b>product</b> <b>model</b> information found in STEP-NC.|$|E
50|$|If {{there is}} a change in part or <b>product</b> <b>model,</b> then the process {{engineer}} should also consider to balance the changeover time with run-time. If the changeover time is long, as it might be on a machine, batch size reduction is typically preceded with setup reduction techniques such as Single-Minute Exchange of Die.|$|E
5000|$|The IDS Project of POSC Caesar Association, {{to define}} <b>product</b> <b>models</b> {{required}} for data sheets ...|$|R
5000|$|VP/MS (Visual <b>Product</b> <b>Modeling</b> System), a <b>modeling</b> {{language}} and <b>product</b> lifecycle management tool by CSC ...|$|R
50|$|The Kissinger-Crookes Flying Saucer is a high-wing homebuilt glider {{based on}} the Amcraft <b>Products</b> <b>model</b> aircraft.|$|R
50|$|Why one survived Durbin and {{the other}} did not is a {{function}} of their differences in business models and program structures. Tempo had a <b>product</b> <b>model</b> tied to Discover and accepted signature debit which resulted in a pricing model and risk profile that would no longer be attractive to retailers under Durbin.|$|E
50|$|As an OMG UML 2.0 profile, SysML {{models are}} {{designed}} to be exchanged using the XML Metadata Interchange (XMI) standard. In addition, architectural alignment work is underway to support the ISO 10303 (also known as STEP, the Standard for the Exchange of <b>Product</b> <b>model</b> data) AP-233 standard for exchanging and sharing information between systems engineering software applications and tools.|$|E
50|$|Lasonic is a <b>product</b> <b>model</b> {{and former}} {{trademark}} of consumer electronics, including boom boxes {{made from the}} mid-1980s to mid-1990s by Yung Fu Electrical Appliances based in Tainan City, Taiwan. Other products include DVD home theater systems, television sets, DVD players, CD and cassette players, FM radios, speakers, external media storage devices, and more (MP3/MP4 players, digital photo frames).|$|E
40|$|This paper {{introduces}} a new “extended Process to <b>Product</b> <b>Modeling</b> (xPPM) ” for efficient Information Delivery Manual (IDM) development. The current IDM development typically uses Business Process Modeling Notation (BPMN) {{to represent a}} Process Map (PM). However, the resultant Process Map is isolated from the development of Exchange Requirements (ERs) and Functional Parts (FPs). ERs and FPs specify the information required when information is exchanged between different activities. The extended Process to <b>Product</b> <b>Modeling</b> (xPPM) method is proposed to provide a tight connection between PMs, ERs, and FPs. The theoretical framework {{is based on the}} Georgia Tech Process to <b>Product</b> <b>Modeling.</b> An xPPM tool is being developed in Java to support several IDM development efforts in South Korea...|$|R
40|$|The {{advantages}} of contemporary communication and information technologies based on virtual reality techniques offer for companies {{a totally new}} approach to cooperation. Use of virtual <b>product</b> <b>models</b> can be extended to product development, manufacturing, marketing, customization and selling of products for Internet based virtual enterprises. The presentation addresses how the virtual <b>product</b> <b>models</b> and personal mobile telepresence may be utilized as means of communication between product design, manufacturing, marketing and sales...|$|R
40|$|The {{existing}} civil structures must {{be maintained}} {{in order to ensure}} their expected lifelong serviceability. Careful rehabilitation and maintenance planning plays a significant role in that effort. Recently, construction information modelling (CIM) techniques, such as <b>product</b> <b>models,</b> are increasingly being used to facilitate structure maintenance. Using this methodology, laser scanning systems can provide point cloud data that are used to produce highly accurate and dense representations of civil structures. However, while numerous methods for creating a single surface exist, part decomposition is required in order to create <b>product</b> <b>models</b> consisting of more than one part. This research aims at the development of a surface reconstruction system that utilizes point cloud data efficiently in order to create complete <b>product</b> <b>models.</b> The research proposes using the application of local shape matching to the input point clouds in order to define a set of representative parts. These representative parts are then polygonized and copied to locations where the same types of parts exist. The results of our experiments show that the proposed method can efficiently create <b>product</b> <b>models</b> using input point cloud data. 1...|$|R
