11|26|Public
50|$|The Message Control Bank (MCB) is a <b>protected</b> <b>subsystem</b> that {{implements}} {{the message}} queues for transaction processing. It communicates with the transaction scheduler in the Exec. It also provides the APIs for applications to {{send and receive}} messages from the queues.|$|E
50|$|COMAPI is a sockets {{implementation}} for OS2200. It is a <b>protected</b> <b>subsystem</b> {{that provides}} APIs for programs that wish to communicate {{directly with the}} network. In addition to all the traditional sockets APIs for C, APIs are provided {{for all the other}} programming languages.|$|E
5000|$|The OS level {{contains}} {{the banks of}} the Exec. These banks are never directly accessible by either programs or global subsystems. Entry points to the OS are all handled {{in the same way as}} a <b>protected</b> <b>subsystem.</b> Calls made to the OS are always via [...] "gates," [...] instructions that exist for that purpose (ER = Executive Request), or via interrupts.|$|E
50|$|Central to a B1 {{system are}} the {{concepts}} of users and objects. Users have identities, clearance levels, compartments and privileges. Objects require certain combinations of those for various types of access. Objects in OS 2200 consist of files, <b>protected</b> <b>subsystems,</b> devices, and tape reels.|$|R
40|$|The {{design of}} {{mechanisms}} {{to control the}} sharing of information in the Multics system is described. Five design principles help {{provide insight into the}} tradeoffs among different possible designs. The key mechanisms described include access control lists, hierarchical control of access specifications, identification and authentication of users, and primary memory protection. The paper ends with a discussion of several known weaknesses in the current protection mechanism design. Key Words and Phrases: Multics, protection, security, privacy, access control, authentication, computer utilities, time- sharin g systems, proprietar y pro grams, <b>protected</b> <b>subsystems,</b> virtual memory, descriptor...|$|R
5000|$|The {{concept of}} <b>{{subsystem}}s</b> and <b>protected</b> <b>subsystems</b> {{are central to}} the design of OS 2200. A subsystem is most analogous to a [...]dll in Windows. It is code and data that may be shared among all programs running in the system. [...] In OS 2200 each subsystem has its own set of banks that reside in a separate part of the address space that cannot be directly accessed by any user program. Instead the hardware and the OS provide a [...] "gate" [...] that may be the target of a Call instruction. See Unisys 2200 Series system architecture for more information.|$|R
50|$|Ring allows {{overriding}} the Domain protection mechanism. User applications run at Ring=3. Protected subsystems run at Ring=2. This {{gives them}} access to their own data while still allowing them to access parameters and data in the calling user’s space. Note {{that it is still}} not possible for a thread to cause the <b>protected</b> <b>subsystem</b> to access some other user’s space as only this thread’s Bank Descriptor Tables are in use. Ring=0 is used by the OS and allows it to access its own data while still being able to access parameters passed from either user programs or protected subsystems.|$|E
50|$|The {{database}} {{managers are}} implemented as a <b>protected</b> <b>subsystem</b> and are called as a procedure from user programs and other subsystems. The implementation as a subsystem {{means that there}} is no upper limit to the potential concurrency of activities (threads) executing in the database manager. The thread of each user executes the database manager code but within its protection domain so that misbehaved and malicious programs cannot affect the integrity of the database. This approach also reduces the path lengths and overhead involved as messages {{do not have to be}} sent between the caller and the database manager. All communication is through parameters.|$|E
50|$|Another unique bank is the {{automatic}} storage bank (Activity Local Store stack). This {{is used by}} the compilers to hold local variables created within a block. It is also used to hold all parameter lists passed on a call. One of the checks made by the operating system both on its own behalf and when a call is made to a <b>protected</b> <b>subsystem</b> is to ensure that the operands are on the thread-local stack and that the thread has the right to access the memory region referenced by any parameters. Because the parameters are kept in thread-local space, there is no chance that some other thread may change them during or after validation. It {{is the responsibility of the}} called procedure to perform similar checks on any secondary parameters that may exist in shared space (i.e., the primary parameter points to a structure that contains pointers). The procedure is expected to copy any such pointers to its own local space before validating them and then to use only that internally held validated pointer.|$|E
40|$|Mobile code {{technologies}} such as Java, JavaScript, and ActiveX generally limit 911 programs to a single restrictive security policy. However, software-based protection can allow for more extensi-ble security models, with potentially significant performance im-provements over traditional hardware-based solutions. An extensi-ble security system {{should be able to}} <b>protect</b> <b>subsystems</b> and im-plement policies that are created after the initial system is shipped. We describe and analyze three implementation strategies for inter-posing such security policies in softwarebased security systems. Implementations exist for all three strategies: several vendors have adapted capabilities to Java, Netscape and Microsoft have exten-sions to Java’s stack introspection, and we built a name space man-agement system as an add-on to Microsoft Internet Explorer. The-oretically, all these systems are equivalently secure, but many pram-tical issues and implementation details favor some aspects of each system. ...|$|R
40|$|EROS is a capability-based {{operating}} system for commodity processors {{which uses a}} single level storage model. The single level store's persistence is transparent to applications. The performance consequences of support for transparent persistence and capability-based architectures are generally believed to be negative. Surprisingly, the basic operations of EROS (such as IPC) are generally comparable in cost to similar operations in conventional systems. This is demonstrated {{with a set of}} microbenchmark measurements of semantically similar operations in Linux. The EROS system achieves its performance by coupling well-chosen abstract objects with caching techniques for those objects. The objects (processes, nodes, and pages) are well-supported by conventional hardware, reducing the overhead of capabilities. Software-managed caching techniques for these objects reduce the cost of persistence. The resulting performance suggests that composing <b>protected</b> <b>subsystems</b> may be less costly than c [...] ...|$|R
40|$|This {{document}} details {{the design and}} implementation of an operating system written specifically for the M-Machine, a multicomputer currently being designed at MIT. The operating system {{is designed to be}} lightweight and flexible, able to support a UNIXlike operating system layer interface to higher-level code, {{while at the same time}} exposing machine primitives to user programs in a safe and efficient manner. The operating system's central features are its support for fast and efficient thread creation and built-in memory-coherence to present the view of global virtual memory to userlevel programs as well as higher-level <b>protected</b> <b>subsystems.</b> Four core components are presented - the physical and virtual memory managers, the thread manager, and the memory-coherence manager. Thesis Supervisor: William J. Dally Title: Associate Professor Acknowledgments My participation in the M-Machine project has involved the most exciting and challenging work that I have so far undertaken. I would li [...] ...|$|R
40|$|Protection of {{computations}} {{and information}} {{is an important}} aspect of a computer utility. In a system which uses segmentation as a memory addressing scheme, protection can be achieved in part by associating concentric rings of decreasing access privilege with a computation. This paper describes hardware processor mechanisms for implementing these rings of protection. The mechanisms allow cross-ring calls and subsequent returns to occur without trapping to the supervisor. Automatic hardware validation of references across ring boundaries is also performed. Thus, a call by a user procedure to a <b>protected</b> <b>subsystem</b> (including the the supervisor) is identical to a call to a companion user procedure. The mechanisms of passing and referencing arguments are the same in both cases as well...|$|E
40|$|Traditional {{methods of}} {{providing}} [...] . This paper examines guarded pointers, a hardware technique which uses tagged 64 -bit pointer objects to implement capability-based addressing. Guarded pointers encode a segment descriptor {{into the upper}} bits of every pointer, eliminating the indirection and related performance penalties associated with traditional implementations of capabilities. All processes share a single 54 -bit virtual address space, and access {{is limited to the}} data that can be referenced through the pointers that a process has been issued. Only one level of address translation is required to perform a memory reference. Sharing data between processes is efficient, and protection states are defined to allow fast <b>protected</b> <b>subsystem</b> calls and create unforgeable data keys...|$|E
40|$|Abstract: Protection of {{computations}} {{and information}} {{is an important}} aspect of a computer utility. In a system which uses segmentation as a memory addressing scheme, protection can be achieved in part by associating concentric rings of decreasing access privilege with a computation. This paper describes hardware processor mechanisms for implementing these rings of protection. The mechanisms allow cross-ring calls and subsequent returns to occur without trapping to the supervisor. Automatic hardware validation of references across ring boundaries is also performed. Thus, a call by a user procedure to a <b>protected</b> <b>subsystem</b> (including the the supervisor) is identical to a call to a companion user procedure. The mechanisms of passing and referencing arguments are the same in both cases as well...|$|E
50|$|Gates {{are another}} part of the {{protection}} mechanism. A gate is a data structure that controls transitions between domains. A gate lives in a gate bank and the hardware enforces that all references to gates must be to addresses at a proper offset (multiple of a gate size) within a gate bank. A gate contains the target address, new values for PP, Ring, and Domain, and may contain a hidden parameter to be passed to the target. <b>Protected</b> <b>subsystems</b> are not directly accessible to other subsystems. Instead a subsystem must request that a gate be built in its gate bank for access to that subsystem. This permits the operating system to perform any access control checks. The linking system will then find the gate address associated with an entry point. In fact, the whole mechanism is usually transparently handled within the linking system. The hidden parameter permits, for example, a file I/O gate to contain the address or handle of the file control block. Since this is guaranteed to be correct as it was created by the OS when the user opened the file, many error checks can be eliminated from the path length to do I/O.|$|R
40|$|While {{the safety}} of a number of access models has been {{formally}} established, few of these models are reflected in real systems. Most currently deployed commodity systems are based on access models that have been formally proven either unsafe or undecidable. Models that are decidable and safe, such as take-grant, fail to model issues that are needed to account for safety and security in capability-based operating systems. This paper introduces diminish, a new fundamental rights weakening operation, and diminishtake, a new access model based on take-grant that incorporates this operation and models indirect reference. As with the take-grant model, safety in diminish-take is decidable in linear time. In certain cases it is decidable in constant time using only local information. These cases prove particularly important for enforcement of the *-property and multi-level security in capability-based operating systems. We also describe the relationship between the model and a real system: EROS. EROS is a fast capability system for commodity processors whose higher-level security properties are based on the model described here. We show that the diminish operation is a critical underpinning for an efficient realization of several design patterns in EROS, including confinement, <b>protected</b> <b>subsystems,</b> and user-supplied memory managers...|$|R
40|$|This report proposes and explores an interprocess {{synchronization}} {{and communication}} mechanism {{compatible with the}} proposed WM protection mechanism [...] which is a "capability" based mechanism[Den 66]. Despite the advantages of capabilities, early capability systems, including one by the author [Wul 80], failed {{to have a major}} impact on practical security primarily because of the overhead of domain switching [Col 88]. Thus, before committing to a capability mechanism for WM, we want to be sure that we don't make the same mistake again. Thus, this report explores the mechanism in just enough detail to answer whether or not it is practical. Although our main goal is a mechanism for synchronization and communication among protection domains, if possible we would also like a single mechanism that can be used in the place of conventional interrupts, traps, "supervisor calls", entries to <b>protected</b> <b>subsystems,</b> and simple user-to-user interprocess communication. The mechanism we will explore is much-simplified version of the Ada rendezvous [Ada 83] in which the WM hardware performs all of the the necessary housekeeping, but software is still able to specify macroscopic policy decisions. At the outset, we stipulate that what we propose may be "too much to put into hardware". But it may not. Our purpose here is to define the mechanism is sufficient detail to be able to meaningfully ask and answer the question "is a hardware implementation practical and desirable"...|$|R
40|$|Pro·tection of {{computations}} {{and information}} {{is an important}} aspe·c-t""of a computer uti 1 tty. I n a system that uses segmentation as a memory addressing scheme, protection can be achieved In part by associating concentric rings of decreasing access capability with a computation. This paper describes processor mechanisms for implementing these rings of protection tn hardware. The mechanisms allow cross-ring calls and subsequent returns to occur withbut "traps". Automatic hardware validation of references across ring boundaries Is also performed. Thus, a call by a use~ procedure to a <b>protected</b> <b>subsystem</b> (Including the supervisor) is no more complex than a call to a companion user procedure. ihe complexity of ~asslng and referencing arguments 1 $ the same In both cases as well. PREPRINT This paper will be presented at th...|$|E
40|$|Decoherence-Free Subsystems (DFS) are a {{powerful}} means of protecting quantum information against noise with known symmetry properties. Although Hamiltonians theoretically exist that can implement a universal set of logic gates on DFS encoded qubits without ever leaving the <b>protected</b> <b>subsystem,</b> the natural Hamiltonians {{that are available}} in specific implementations do not necessarily have this property. Here we describe some of the principles {{that can be used}} in such cases to operate on encoded qubits without losing the protection offered by the DFS. In particular, we show how dynamical decoupling can be used to control decoherence during the unavoidable excursions outside of the DFS. By means of cumulant expansions, we show how the fidelity of quantum gates implemented by this method on a simple two-physical-qubit DFS depends on the correlation time of the noise responsible for decoherence. We further show by means of numerical simulations how our previously introduced "strongly modulating pulses" for NMR quantum information processing can permit high-fidelity operations on multiple DFS encoded qubits in practice, provided that the rate at which the system can be modulated is fast compared to the correlation time of the noise. The principles thereby illustrated are expected to be broadly applicable to many implementations of quantum information processors based on DFS encoded qubits. Comment: 12 pages, 7 figure...|$|E
40|$|We {{show that}} every correctable {{subsystem}} for an arbitrary noise operation can be recovered by a unitary operation, where {{the notion of}} recovery is more relaxed than the notion of correction insofar as it does not <b>protect</b> the <b>subsystem</b> from subsequent iterations of the noise. As an application, we demonstrate that the noiseless subsystems for the composition of a unital quantum operation with its dual are precisely the correctable subsystems for the map that can be corrected by a single unitary operation. Using the recently developed structure theory for noiseless subsystems, the identification of such correctable subsystems is reduced to an algebraic exercise...|$|R
40|$|Abstract- This {{tutorial}} paper {{explores the}} mechanics of protecting computer-stored information from unauthorized use or modification. It concentrates on those architectural structures [...] whether hardware or software [...] {{that are necessary to}} support information protection. The paper develops in three main sections. Section I describes desired functions, design principles, and examples of elementary protection and authentication mechanisms. Any reader familiar with computers should find the first section to be reasonably accessible. Section II requires some familiarity with descriptor-based computer architecture. It examines in depth the principles of modern protection architectures and the relation between capability systems and access control list systems, and ends with a brief analysis of <b>protected</b> <b>subsystems</b> and <b>protected</b> objects. The reader who is dismayed by either the prerequisites or the level of detail in the second section may wish to skip to Section III, which reviews {{the state of the art}} and current research projects and provides suggestions for further reading. Glossary The following glossary provides, for reference, brief definitions for several terms as used in this paper in the context of protecting information in computers. Access The ability to make use of information stored in a computer system. Used frequently as a verb, to the horror of grammarians. Access control list A list of principals that are authorized to have access to some object. Authenticate To verify the identity of a person (or other agent external to the protection system) making a request...|$|R
40|$|Composite {{materials}} have been steadily substituting {{metals and alloys}} due to their better thermomechanical properties. The successful application of composite materials for high temperature zones in aerospace applications has resulted in extensive exploration of cost effective ablative materials. High temperature heat shielding to body, be it external or internal, has become essential in the space vehicles. The heat shielding primarily protects the substrate material from external kinetic heating and the internal insulation <b>protects</b> the <b>subsystems</b> and helps to keep {{coefficient of thermal expansion}} low. The external temperature due to kinetic heating may increase to about maximum of 500 °C for hypersonic reentry space vehicles while the combustion chamber temperatures in case of rocket and missile engines range between 2000 °C and 3000 °C. Composite materials of which carbon-carbon composites or the carbon allotropes are the most preferred material for heat shielding applications due to their exceptional chemical and thermal resistance...|$|R
40|$|This {{project is}} to design and {{implement}} an EPS for the KN-SAT 1. The KN-SAT 1 is a Cubesat that has been developed in the University of Khartoum as the first educational Cubesat in the Sudan. The design must provide a reliable power source by satisfying the requirements of charging the batteries with power from the solar cells, regulating the battery voltage to the requested bus voltage and <b>protecting</b> the Cubesat <b>subsystems</b> from the overcurrent associated with the device failure. Cubesats are picosatellites of standardized dimensions which can be operated from universites or radio amateur ground stations. They offer hands-on experience to engineering students in designing, developing, testing and operating a real spacecraft system and its ground segment. One {{of the most critical}} aspects of the Cubesat is the Electrical Power System (EPS) since the electrical power is necessary for a Cubesat to operate. The EPS of the Cubesat consists mainly of solar cells, batteries, voltage converters and protection circuits. The EPS is responsible of providing stable power to the Cubesat subsystems. The purpose of this {{project is to}} design and implement an EPS for the KN-SAT 1. The KN-SAT 1 is a Cubesat that has been developed in the University of Khartoum as the first educational Cubesat in the Sudan. The design must provide a reliable power source by satisfying the requirements of charging the batteries with power from the solar cells, regulating the battery voltage to the requested bus voltage and <b>protecting</b> the Cubesat <b>subsystems</b> from the overcurrent associated with the device failure...|$|R
40|$|The {{combination}} of a real-time executive and off-the-shelf time-sharing operating systems {{has the potential of}} providing both predictability and the comfort of a large application base. Isolation between the components is required to <b>protect</b> the real-time <b>subsystem</b> from a significant class of faults in the (ever-growing) time-sharing operating systems but also to protect real-time applications from each other. Recent commodity computer hardware significantly improved the ability of these machines to support faithful virtualization. Virtual machines provide the strong isolation required for security reasons. But questions regarding the temporal isolation remain open. In this paper we analyze how and to which degree recent x 86 virtualization extensions influence the interrupt-response times of a real-time operating system hosting virtual machines. ...|$|R
40|$|Part 1 : Access ControlInternational audienceEffective {{access control}} is {{dependent}} {{not only on}} the existence of strong policies but also on ensuring that the access control enforcement <b>subsystem</b> is adequately <b>protected.</b> <b>Protecting</b> this <b>subsystem</b> has not been adequately addressed in the literature. In general, it is assumed to be implemented as a reference monitor in a trusted computing base (TCB) that is tamper-proof. However, in distributed access control, ensuring TCB security kernel to be tamper proof is not always feasible. It needs to be implemented in software and on platforms that can potentially have vulnerabilities. We posit that allowing a very limited opportunity to the attacker to enumerate exploitable vulnerabilities in the access control subsystem can considerably facilitate its protection. Towards this end we propose a moving target defense framework for access control in a distributed environment. In this framework, access control is provided by cooperation of several distributed modules that materialize randomly, announce their services, enforce access control and then disappear to be replaced by another module randomly. As a result, the attacker does not know which process can be targeted to compromise the access control system...|$|R
40|$|All long-duration {{spacecraft}} {{are susceptible}} to impacts by meteoroids and pieces of orbiting space debris. Such impacts are expected to occur at extremely high speeds and can damage internal and external flight-critical systems of spacecraft. An effective mechanism is developed to <b>protect</b> external spacecraft <b>subsystems</b> against damage by ricochet particles formed during such impacts. Equations and design procedures for protective shield panels are developed based on observed ricochet phenomena and calculated ricochet particle sizes and speeds. Panel dimensions are shown to be strongly dependent on their inclination and on their distribution around a spacecraft module. It is concluded that obliquity effects of high-speed impacts {{must be considered in}} the design of any structure exposed to the meteoroid and space debris environment...|$|R
40|$|International audienceThe {{installed}} {{energy production}} capacity of wind turbines is growing intensely {{on a global}} scale, making the reliability of wind turbine subsystems of greater significance. However, many faults like Inter-Turn Short-Circuit (ITSC) may affect the turbine generator and quickly lead {{to a decline in}} supplied power quality. In this framework, this paper proposes a Sliding Mode Observer (SMO) -based Fault Tolerant Control (FTC) scheme for Induction Generator (IG) -based variable-speed grid-connected wind turbines. First, the dynamic models of the wind turbine subsystems were developed. The control schemes were elaborated based on the Maximum Power Point Tracking (MPPT) method and Indirect Rotor Flux Oriented Control (IRFOC) method. The grid control was also established by regulating the active and reactive powers. The performance of the wind turbine system and the stability of injected power to the grid were hence analyzed under both healthy and faulty conditions. The robust developed SMO-based Fault Detection and Isolation (FDI) scheme was proved to be fast and efficient for ITSC detection and localization. Afterwards, SMO were involved in scheming the FTC technique. Accordingly, simulation results assert the efficacy of the proposed ITSC FTC method for variable-speed wind turbines with faulty IG in <b>protecting</b> the <b>subsystems</b> from damage and ensuring continuous connection of the wind turbine to the grid during ITSC faults, hence maintaining power quality...|$|R
40|$|The {{degree of}} {{integration}} of modern circuits {{has gone from}} singledie towards multi-die or even system partition integration. System-In-Package concepts allow to integrate in a hybrid form circuit components steming from different manufacturing processes e. g. CMOS, GaAs, MEMS as well as SMD chips. Combining Flip Chip technology, advanced PCB manufacturing, advanced assembly processes and large area overmolding, highly integrated and reliable sub-systems can be created. The paper describes the individual process steps for a GSM-Power Amplifier module, integrating the PA as a flip chip with the matching SMD components into a novel QFN concept featuring a laser structured bump-on-pad interconnect technology. Large area overmolding covers and <b>protects</b> the entire <b>subsystem</b> thus created. Manufacturing issues as well as specific fabrication details are highlighted and a reliability test shows {{the performance of the}} concept under harsh environmental load...|$|R
40|$|All {{spacecraft}} {{are susceptible}} to impacts by meteoroids and pieces of orbiting space debris. An effective mechanism is developed to <b>protect</b> external spacecraft <b>subsystems</b> against damage by ricochet particles formed during such impacts. Equations and design procedures for protective shield panels are developed based on observed ricochet phenomena and calculated ricochet particle sizes and speeds. It is found that {{the diameter of the}} most damaging ricochet debris particle can be as large as 40 percent of the original project tile diameter, and can travel at speeds between 24 and 36 percent of the original projectile impact velocity. Panel dimensions are shown to be strongly dependent on their inclination to the impact velocity vector and on their distribution around a spacecraft module. It is concluded that obliquity effects of high-speed impacts must be considered in the design of any structure exposed to the meteoroid and space debris environment...|$|R
40|$|Part 9 : Various Aspects of Computer SecurityInternational audienceThe {{mobility}} {{of the user}} and information is a factor that {{should be taken into}} account during the design and development of mechanisms protecting the sensitive stored, exchanged and processed information on mobile devices. This paper discusses the security profiles for the user and dispatcher <b>subsystems</b> <b>protecting</b> sensitive information on the mobile device called MobInfoSec. MobInfoSec is a system providing users with secure sensitive documents by using the specialized class SP cryptographic module, which protects directly the trusted system components through implementing ORCON access control rules. Protection Profile defines the security functional requirements for MobInfoSec system executing the encryption/decryption of documents based on addressed access policies. The article includes a general description of MobInfoSec system, including assets, assumptions, threats, policies and functional requirements necessary for the evaluation of security functions developed in accordance with requirements of the standard ISO/IEC 15408 (called the Common Criteria) ...|$|R
40|$|The Deep Space Avionics (DSA) Project is {{developing}} a Power Actuation and Switching Module (PASM). This component enables a modular and scalable design approach for power switching applications, which {{can result in a}} wide variety of power switching architectures using this simple building block. The PASM is designed to provide most of the necessary power switching functions of spacecraft for various Deep Space missions including future missions to Mars, comets, Jupiter and its moons. It is fabricated using an A SIC process that is tolerant of high radiation. The development includes two application specific integrated circuits (ASICs) and support circuitry all packaged using High Density Interconnect (HDI) technology. It can be operated in series or parallel with other PASMs, It can be used as a high-side or low-side switch and it can drive thruster valves, pyrotechnic devices such as NASA standard initiators, bus shunt resistors, and regular spacecraft component loads. Each PASM contains two independent switches with internal current limiting and over-current trip-off functions to <b>protect</b> the power <b>subsystem</b> from load faults. During turnon and turnoff each switch can limit the rate of current change (di/dt) to a value determined by the user. Threeway majority-voted On/Off commandability and full switch status telemetry (both analog and digital) are built into the module. This paper describes the development process used to design, model, fabricate, and test these compact and versatile power switches. Preliminary test results from prototype HDI PASM hardware are also discussed...|$|R
40|$|The X 2000 Power System Electronics (PSE) is a Jet Propulsion Laboratory (JPL) task {{to develop}} a new {{generation}} of power system building blocks for use on future deep-space missions. The effort includes the development of electronic components and modules that can be used as building blocks in the design of generic spacecraft power systems. All X 2000 avionics components and modules are designed for use in centralized or distributed spacecraft architectures. The Power Actuation and Switching Module (PASM) has been developed under the X 2000 program. This component enables a modular and scalable design approach for power switching applications, which can result {{in a wide variety of}} power switching architectures using this simple building block. The PASM is designed to provide most of the necessary power switching functions of spacecraft for various Deep Space missions including future missions to Mars, comets, Jupiter and its moons. It is fabricated using an ASIC process that is tolerant of high radiation. The development included two application specific integrated circuits (ASICs) and support circuitry all packaged using High Density Interconnect (HDI) technology. It can be operated in series or parallel with other PASMs. It can be used as a high-side or low-side switch and it can drive thruster valves, pyrotechnic devices such as NASA standard initiators, bus shunt resistors, and regular spacecraft component loads. Each PASM contains two independent switches with internal current limiting and over-current trip-off functions to <b>protect</b> the power <b>subsystem</b> from load faults. During turnon and turnoff each switch can limit the rate of current change (di/dt) to a value determined by the user. Three-way majority-voted On/Off commandability and full switch status telemetry (both analog and digital) are built into the module. This paper is a follow up to the one presented at he IECEC 2004 conference that will include the lessons learned and test results from the development...|$|R
40|$|Nordic Semiconductor ASA {{wishes to}} improve its product value by {{enabling}} Bluetooth Low Energy functionality on their new Cortex-M 0 based radio microcontrollers. The new device will be single-chip, thereby evolving their current dual-chip solution. % using a single chip, thereby evolving their current dual-chip solution. This report handles the challenge of <b>protecting</b> the radio <b>subsystem</b> from the user applications since they now must reside on the same microcontroller. The Bluetooth Low Energy protocol is a new specification {{that is expected to}} be embraced by the industry. The protocol is very comprehensive and is therefore presented in a brief manner with a focus on the timing of events. The default scenario pictured is that of a connection event between a connected slave and master. Example use cases of products applying Bluetooh Low Energy are presented. The motivation is to provide a clear picture of constraints and demands that solutions must account for. It is important to leave enough execution time for both the protocol and the user application. This makes the consequent restrictions highly product dependent. To solve the issue of temporal protection, the implications of an operating system or environment is explored. Available real-time operating systems for the Cortex-M 0 are presented, along with common operating system mechanisms. Specifically, the scheduling aspect of the operating system is essential, while the added value of other features are application dependent. The scheduling can separate the protocol and applications into tasks that are run according to priorities and deadlines. Alternatively, a simpler context switcher can be used to insure that the protocol is run, thereby relieving the user of using an operating system and its paradigms. To solve the issue of spatial protection, the memory management aspects of embedded systems are studied. Embedded systems benefit from smaller hardware memory protection units that only focuses on granting or not granting access to memory areas. Memory maps are used to determine access rights of the current instruction. Earlier papers and Nordic Semiconductor ASA have ideas on how to achieve this. Nordic Semiconductor ASA's in-development memory protection unit proves to coincide well with the state of the art. It is concluded that the isolation of protocol and user application is achievable by combining the memory protection unit and some form of operating environment. An operating system enables efficient and scalable scheduling, but a smaller interrupt based solution is also sufficient to satisfy the overall goals of the project. </p...|$|R
40|$|Thesis {{presented}} in ful lment {{of the requirements}} for the degree of Magister Technologiae in Electrical Engineering at the Cape Peninsula University of Technology, 2013 The power system is essentially {{one of the most}} critical subsystems to any satellite, without some form of power system a satellite would simply cease to function. The research within these pages investigates the areas pertaining to satellite power systems with the main focus towards the CubeSat platform. The end objective of this research was the development of a reliable analogue based switch-mode power system for a CubeSat. The research began with an investigation into the CubeSat platform, the space environment and a basic overview of a satellite and its systems. The research then focussed on satellite power systems, focussing primarily on satellite power system topologies and switch-mode power systems. Various components and concepts surrounding the satellite power system were investigate and included the photovoltaic (PV) solar cell, batteries, satellite power system topologies, protection concepts and typical CubeSat power systems. The nal part of the literature review included research into typical CubeSat power systems. The space environment complicates the design of satellite systems. The developed electrical power system harnessed electrical power from a PV solar panel by means of a fractional opencircuit voltage (FOCV) based maximum power point tracker (MPPT) with the use of a SEPIC DC-DC converter. The use of a SEPIC DC-DC converter allowed the system to operate at a greater e ciency than could be expected from linear designs. The requirement for an e cient system was important as the heat generated by the power system could bring rise to dissipation issues, resulting in over-heating of various components. The design took into account component sizing, as larger components would be more prone to damage during the high accelerations and vibrations associated with being launched into space. The use of a MPPT allowed the power system to better utilise the available PV solar panel power, by maintaining the PV solar panel near its optimum operating voltage. The design slid between MPPT and voltage regulation to harness as much power as possible while not over-charging the Lithium polymer battery. The power system consisted of battery under-voltage protection as well as over-current protection for the attached payloads and satellite subsystems. The SEPIC DC-DC converter was selected over other SMPS topologies, as this topology could be used in a 1 U and 3 U CubeSat with a wide variety of PV solar panel cell con gurations. The bene ts of this SMPS topology are due to the SEPIC DC-DC converter's ability to produce an output voltage greater than, less than or equal to the input voltage (National Semiconductor, 2008; Texas Instruments, 2008 a). This, along with the operation of the FOCV based MPPT, allowed the power system to be very exible. The designed FOCV based MPPT could be pre-set to di ering PV solar cell technologies due to the adjustable ratio between the maximum power point voltage, Vmpp, and the open-circuit voltage, Voc of the PV solar panel. It was decided not to select a Buck or Boost DC-DC converter based power system as this would limit the exibility of the system. Additionally, the SEPIC DC-DC converter brings with it the ability to isolate the input and output voltage upon shut down. This isolation is due to the SEPIC DC-DC converter's coupling capacitor and this topologies operation as described by National Semiconductor (2008) and Texas Instruments (2008 a). The prototype was versatile allowing a wide variety of PV solar cell technologies to be used. The wide operating voltage of the prototype allowed the design to be connected to a series or parallel combination of solar cells with an operating voltage of 3 V to 20 V. The power handling capability of the prototype per solar panel channel allows the design to be applied to a 1 U or 3 U CubeSat given that the channel did not exceed 10 W. All components of the prototype operated without fault, e ectively charging the Li-poly battery safely while <b>protecting</b> payloads and <b>subsystems.</b> The SEPIC DC-DC converter utilised by the MPPT achieved an e ciency of 71 % under full load and with an input voltage of 10 V...|$|R

