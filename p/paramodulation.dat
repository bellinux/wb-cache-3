152|0|Public
5000|$|<b>Paramodulation</b> is {{a related}} {{technique}} for reasoning on sets of clauses where the predicate symbol is equality. It generates all [...] "equal" [...] versions of clauses, except reflexive identities. The <b>paramodulation</b> operation takes a positive from clause, which must contain an equality literal. It then searches an into clause with a subterm that unifies with {{one side of}} the equality. The subterm is then replaced by {{the other side of the}} equality. The general aim of <b>paramodulation</b> is to reduce the system to atoms, reducing the size of the terms when substituting.|$|E
5000|$|The above example <b>paramodulation</b> {{computation}} {{corresponds to}} the following narrowing sequence ("↓" [...] indicating instantiation here): ...|$|E
50|$|If {{there is}} a {{convergent}} term rewriting system R available for E,the one-sided <b>paramodulation</b> algorithmcan be used to enumerate all solutions of given equations.|$|E
5000|$|Otter, {{developed}} at the Argonne National Laboratory, is based on first-order resolution and <b>paramodulation.</b> Otter has since been replaced by Prover9, which is paired with Mace4.|$|E
50|$|For an example, a term rewrite system R is used {{defining}} the append operator of lists built from cons and nil; where cons(x,y) {{is written in}} infix notation as x.y for brevity; e.g. app(a.b.nil,c.d.nil) → a.app(b.nil,c.d.nil) → a.b.app(nil,c.d.nil) → a.b.c.d.nil demonstrates the concatenation of the lists a.b.nil and c.d.nil, employing the rewrite rule 2,2, and 1. The equational theory E corresponding to R is the congruence closure of R, both viewed as binary relations on terms.For example, app(a.b.nil,c.d.nil) ≡ a.b.c.d.nil ≡ app(a.b.c.d.nil,nil). The <b>paramodulation</b> algorithm enumerates solutions to equations with respect to that E when fed with the example R.|$|E
50|$|Starting with G {{being the}} {{unification}} {{problem to be}} solved and S being the identity substitution, rules are applied nondeterministically until the empty set appears as the actual G, {{in which case the}} actual S is a unifying substitution. Depending on the order the <b>paramodulation</b> rules are applied, on the choice of the actual equation from G, and on the choice of R’s rules in mutate, different computations paths are possible. Only some lead to a solution, while others end at a G ≠ {} where no further rule is applicable (e.g. G = { f(...) ≐ g(...) }).|$|E
5000|$|The {{following}} example run, {{obtained from}} the E theorem prover, computes a completion of the (additive) group axioms as in Knuth, Bendix (1970).It starts with the three initial equations for the group (neutral element 0, inverse elements, associativity), using [...] for X+Y, and [...] for −X. The 10 equations marked with [...] "final" [...] represent the resulting convergent rewrite system."pm" [...] is short for [...] "paramodulation", implementing deduce. Critical pair computation is an instance of <b>paramodulation</b> for equational unit clauses."rw" [...] is rewriting, implementing compose, collapse, and simplify.Orienting of equations is done implicitly and not recorded.|$|E
40|$|International audienceWe {{present an}} {{inference}} system for clauses with ordering constraints, called Schematic <b>Paramodulation.</b> Then we show {{how to use}} Schematic <b>Paramodulation</b> to reason about decidability and stable infiniteness of finitely presented theories. We establish a close {{connection between the two}} properties: if Schematic <b>Paramodulation</b> for a theory halts then the theory is decidable; and if, in addition, Schematic <b>Paramodulation</b> does not derive the trivial equality X[*]=[*]Y then the theory is stably infinite. Decidability and stable infiniteness of component theories are conditions required for the Nelson-Oppen combination method. Schematic <b>Paramodulation</b> is loosely based on Lynch-Morawska's meta-saturation but it differs in several ways. First, it uses ordering constraints instead of constant constraints. Second, inferences into constrained variables are possible in Schematic <b>Paramodulation.</b> Finally, Schematic <b>Paramodulation</b> uses a special deletion rule to deal with theories for which Lynch-Morawska's meta-saturation does not halt...|$|E
40|$|International audienceMany {{verification}} {{problems can}} be reduced to a satisfiability problem modulo theories. For building satisfiability procedures the rewriting-based approach uses a general calculus for equational reasoning named <b>paramodulation.</b> Schematic <b>paramodulation,</b> in turn, provides means to reason on the derivations computed by <b>paramodulation.</b> Until now, schematic <b>paramodulation</b> was only studied for standard <b>paramodulation.</b> We present a schematic <b>paramodulation</b> calculus modulo a fragment of arithmetics, namely the theory of Integer Offsets. This new schematic calculus is used to prove the decidability of the satisfiability problem for some theories equipped with counting operators. We illustrate our theoretical contribution on theories representing extensions of classical data structures, e. g., lists and records. An implementation within the rewriting-based Maude system constitutes a practical contribution. It enables automatic decidability proofs for theories of practical use...|$|E
40|$|Chase {{procedures}} are well-known decision and semi-decision {{procedures for the}} implication problem among dependencies, {{a specific type of}} first-order logic formulas, that are used for expressing database constraints. Of course, the implication problem can also be treated by general refutationally complete inference systems, like resolution with <b>paramodulation.</b> Recently the inference rule of basic <b>paramodulation</b> has been introduced and investigated as a strategy for exploring the search space for a refutation most efficiently. This paper demonstrates that chase procedures can be seen as special instances of basic <b>paramodulation</b> by defining the parameters of basic <b>paramodulation,</b> a reduction ordering and a term selection function, appropriately. The mutual simulation of chase procedures and basic <b>paramodulation</b> also extends to the completeness proofs. 1 Introduction and survey Semantic constraints, as declared in a database schema, describe which database instances are allowed to actual [...] ...|$|E
40|$|International audienceThe {{notion of}} {{schematic}} <b>paramodulation</b> {{has been introduced}} to reason on properties of (standard) <b>paramodulation.</b> We present a schematic <b>paramodulation</b> calculus modulo a fragment of arithmetics, namely the theory of Integer Offsets. This new schematic calculus is used to prove the decidability of the satisfiability problem for some theories equipped with counting operators. We illustrate our theoretical contribution on theories representing extensions of classical data structures, e. g., lists and records...|$|E
40|$|We {{introduce}} {{the concept of}} semantic <b>paramodulation</b> as a "semantic " definition of <b>paramodulation</b> (in {{the sense that it}} applies to any model, not only to the term algebra) within the framework of category-based equational logic (introduced by [8, 9]). This not only generalises the traditional syntactic approaches to <b>paramodulation,</b> but also provides an abstract framework for a unified treatment of <b>paramodulation</b> and its refinements in a wide class of equational logical systems. This includes many sorted algebra, order sorted algebra, rewrite models, Horn clause logic, equational logic modulo axioms, constraint logic, and any combination of these. The possibility to give a direct treatment of refutations modulo axioms and to constraint computations is of special importance. Moreover, semantic <b>paramodulation</b> gives the possibility to develop equational logic programming over non-conventional structures (such as graphs) whose models might be essentially different from the traditional set [...] ...|$|E
40|$|International audienceVerification {{problems}} {{can often be}} encoded as first-order validity or satisfiability problems. The availability of efficient automated theorem provers is a crucial pre-requisite for automating various verification tasks {{as well as their}} cooperation with specialized decision procedures for selected theories, such as Presburger Arithmetic. In this paper, we investigate how automated provers based on a form of equational reasoning, called <b>paramodulation,</b> can be used in verification tools. More precisely, given a theory T axiomatizing some data structure, we devise a procedure to answer the following questions. Is the satisfiability problem of T decidable by <b>paramodulation?</b> Can a procedure based on <b>paramodulation</b> for T be efficiently combined with other specialized procedures by using the Nelson-Oppen schema? Finally, if <b>paramodulation</b> decides the satisfiability problem of two theories, does it decide satisfiability in their union? The procedure capable of answering all questions above is based on Schematic Saturation; an inference system capable of over-approximating the inferences of <b>paramodulation</b> when solving satisfiability problems in a given theory T. Clause schemas derived by Schematic Saturation describe all clauses derived by <b>paramodulation</b> so that the answers to the questions above are obtained by checking that only finitely many different clause schemas are derived or that certain clause schemas are not derived...|$|E
40|$|Abstract Transformation-based {{systems for}} general E-unification were first {{investigated}} by Gallier and Snyder. Their system extends the well-known rules for syntactic unification by Lazy <b>Paramodulation,</b> thus {{coping with the}} equational theory. More recently, Dougherty and Johann improved on this method by giving a restriction of the Lazy <b>Paramodulation</b> inferences. In this paper, we show that their system can be further improved by a stronger restriction on the applicability of Lazy <b>Paramodulation.</b> It {{turns out that the}} framework of proof trans-formations provides an elegant and natural means for proving comple-teness of the inference system. ...|$|E
40|$|We {{introduce}} {{a class of}} restrictions for the ordered <b>paramodulation</b> and superposition calculi (inspired by the basic strategy for narrowing), in which <b>paramodulation</b> inferences are forbidden at terms introduced by substitutions from previous inference steps. In addition we introduce restrictions based on term selection rules and redex orderings, which are general criteria for delimiting the terms which are available for inferences. These refinements are compatible with standard ordering restrictions and are complete without <b>paramodulation</b> into variables or using functional reflexivity axioms. We prove refutational completeness {{in the context of}} deletion rules, such as simplification by rewriting (demodulation) and subsumption, and of techniques for eliminating redundant inferences...|$|E
40|$|Abstract For many years, all {{existing}} completeness {{results for}} Knuth-Bendix completion and ordered <b>paramodulation</b> required the term order-ing ≻ to be well-founded, monotonic and total(izable) on ground terms. Then, {{it was shown}} that well-foundedness and the subterm property were enough for ensuring completeness of ordered <b>paramodulation.</b> Here we show that the subterm property is not necessary either. By us-ing a new restricted form of rewriting, we obtain a completeness proof of ordered <b>paramodulation</b> for Horn clauses with equality, where well-foundedness of the ordering suffices. Apart from the theoretical signifi-cance of this result, some potential applications motivating the interest of dropping the subterm property are given. The proof of the results included in this paper, being still technical in some parts, is pretty much shorter and easier to read than the one {{we have in the}} preliminary version of this work presented at the CADE 2002 conference [8]. Key words: term rewriting, equational reasoning, theorem proving, <b>paramodulation,</b> Knuth-Bendix completion...|$|E
40|$|The aim of {{this thesis}} is to present <b>Paramodulation</b> Operators {{deciding}} the (i) Ackermann class with Equality [FS 93] and (ii) the monadic class with equality [BGW 93]. Ad (i) a refinement of the Ordered <b>Paramodulation</b> calculus [HR 91] is used to define the appropriate inference operator; ad (ii) {{a variant of the}} Superposition calculus [BG 94] is employed for this purpose. It seemed natural to give a uniform presentation of these underlying equational calculi. Hence, {{the first part of this}} thesis is designed to be a uniform treatment of these calculi. In the definition of the <b>paramodulation</b> operator that decides the monadic class with equality ordering constraints are used. Therefor we choose to present all the inference rules that Ordered <b>Paramodulation</b> and Superposition define with respect to ordering constraints. These constraints are used to express the restrictions normally given with the description of an inference rule as part of the object language...|$|E
40|$|Two new theorem-proving {{procedures}} for equational Horn clauses are presented. The largest literal is selected for <b>paramodulation</b> in both strategies, except that one method treats positive literals as larger than negative ones {{and results in}} a unit strategy. Both use term orderings to restrict <b>paramodulation</b> to potentially maximal sides of equations and {{to increase the amount}} of allowable simplification (demodulation). Completeness is shown using proof orderings. ...|$|E
40|$|Transformation-based {{systems for}} general E-unification were first {{investigated}} by Gallier and Snyder. Their system extends the well-known rules for syntactic unification by Lazy <b>Paramodulation,</b> thus {{coping with the}} equational theory. More recently, Dougherty and Johann improved on this method by giving a restriction of the Lazy <b>Paramodulation</b> inferences. In this paper, we show that their system can be further improved by a stronger restriction on the applicability of Lazy <b>Paramodulation.</b> It {{turns out that the}} framework of proof transformations provides an elegant and natural means for proving completeness of the inference systemSIGLEAvailable from TIB Hannover: RR 1912 (93 - 237) +a / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekBundesministerium fuer Forschung und Technologie (BMFT), Bonn (Germany) DEGerman...|$|E
40|$|We {{introduce}} {{a class of}} restrictions for the ordered <b>paramodulation</b> and 0 ̆ 00 Asuperposition calculi (inspired by the ıt basic strategy for narrowing), 0 ̆ 00 Ain which <b>paramodulation</b> inferences are forbidden at terms introduced by 0 ̆ 00 Asubstitutions from previous inference steps. These refinements are compatible 0 ̆ 00 Awith standard ordering restrictions and are complete without <b>paramodulation</b> 0 ̆ 00 Ainto variables or using functional reflexivity axioms. We prove refutational 0 ̆ 00 Acompleteness {{in the context of}} deletion rules, such as simplification by 0 ̆ 00 Arewriting (demodulation) and subsumption, and of techniques for eliminating 0 ̆ 00 Aredundant inferences. Finally, we discuss experimental data obtained both from 0 ̆ 00 Aa modification of Otter and from our prototype Lisp implementation...|$|E
40|$|AbstractThis paper {{describes}} a theorem proving procedure which combines {{the approach of}} Resolution with that of Rewriting. The basic-theoretical result is the completeness of a strong restriction of <b>paramodulation</b> for locking resolution procedures. Its oriented character suggests to consider the restricted <b>paramodulation</b> {{as a form of}} superposition (the Rewriting operation). This is achieved by means of a new formalism of clauses, named equational clauses, in which each literal is converted into an equation. Thereby, superposition on equational clauses is shown to embody not only <b>paramodulation</b> but also binary resolution; so clausal superposition will build up our major rule of inference. In addition, term simplification is incorporated in our procedure as well as subsumption. Experimental results and potential applications for our theorem prover are lastly reported...|$|E
40|$|It is {{well known}} that the {{connection}} refinement of clause tableaux with <b>paramodulation</b> is incomplete (even with weak connections). In this paper, we present a new connection tableau calculus for logic with equality. This calculus is based on a lazy form of <b>paramodulation</b> where parts of the unification step become auxiliary subgoals in a tableau and may be subjected to subsequent paramodulations. Our calculus uses ordering constraints and a certain form of the basicness restriction...|$|E
40|$|A Many-Sorted Calculus Based on Resolution and <b>Paramodulation</b> {{emphasizes}} {{the utilization of}} advantages and concepts of many-sorted logic for resolution and <b>paramodulation</b> based automated theorem proving. This book considers some first-order calculus that defines how theorems from given hypotheses by pure syntactic reasoning are obtained, shifting all the semantic and implicit argumentation to the syntactic and explicit level of formal first-order reasoning. This text discusses the efficiency of many-sorted reasoning, formal preliminaries for the RP- and ?RP-calculus, and many-sorted term rewri...|$|E
40|$|Equality is an Important {{relation}} {{and many}} theorems {{can be easily}} symbolized through it's use. A proposed Inference rule called HL-resolution Is intended to have the benefits of hyper steps while controlling the application of <b>paramodulation.</b> It generates a resolvent by building a <b>paramodulation</b> and demodulation link between two terms using a pre pro ceased plan as a guide. The rule Is complete for E-unsatisfiable Horn sets. The linking process makes use of an equality graph which is constructed once {{at the beginning of}} the run. Once a pair of candidate terms for HL-resolutlon is chosen in the search, potential linkages can be found and tested for compatibility efficiently by looking at the paths in the graph. The method was implemented on an existing theorem-proving system. A number of algebra and a comparison with set-of-support <b>paramodulation</b> was made. 1...|$|E
40|$|INTRODUCTION Equational {{reasoning}} is fundamental in mathematics, logics, and many applications of formal methods in computer science. In this chapter {{we describe the}} theoretical concepts and results that {{form the basis of}} state-of-the-art automated theorem provers for first-order clause logic with equality. We mainly concentrate on refinements of <b>paramodulation,</b> such as the superposition calculus, that have yielded the most promising results to date in automated equational reasoning. We begin with some preliminary material in section 2 and then explain, in section 3, why resolution with the congruence axioms is an impractical theorem proving method for equational logic. In section 4 we outline the main results about <b>paramodulation</b> [...] -a more direct equational inference rule. This section also contains a description of the modification method, which can be used to demonstrate that the functional reflexivity axioms are redundant in the context of <b>paramodulation.</b> The modificatio...|$|E
40|$|ABSTRACT. <b>Paramodulation</b> {{can be used}} in {{conjunction}} with resolution for proving theoreIm in first-order logic with equality. Unit, input, and linear refutations using <b>paramodulation</b> and resolution are defined for theories with equality. It is proved that (a) if a set S of clauses has an input refutation, then S together with its unit factors and functionally reflexive axioms has a unit refutation; and (b) if C is a clause in an E-unsatisfiable set S of clauses including {x = x} and the functionally reflexive axioms and if (S- {C}) is E-satisfiable, then S has a linear re-futation with top clause C. (&quot;E-unsatisfiable &quot; is called &quot;R-unsatisfiable &quot; by some authors.) The refutation completeness theorem proved by Wos and Robinson for <b>paramodulation</b> with set of support is a corollary of our result (b). Our result (b) provides a link between heuristk programs and theorem-proving programs for first-order theories with equality...|$|E
40|$|Transformation-based {{systems for}} general E-unification were first {{investigated}} by Gallier and Snyder. Their system extends the well-known rules for syntactic unification by Lazy <b>Paramodulation,</b> thus {{coping with the}} equational theory. More recently, Dougherty and Johann improved on this method by giving a restriction of the Lazy <b>Paramodulation</b> inferences. In this paper, we show that their system can be further improved by a stronger restriction on the applicability of Lazy <b>Paramodulation.</b> It {{turns out that the}} framework of proof transformations provides an elegant and natural means for proving completeness of the inference system. 1 Introduction This paper describes a transformation based procedure for unification in an arbitrary equational theory representable by an equational system E. Since unification is now commonly being regarded as equation solving, the transformations operate on equational systems. J. Gallier and W. Snyder [2, 3] were the first to study transformation [...] ...|$|E
40|$|AbstractA {{technique}} for establishing completeness results for theorem proving systems in first-order logic with equality is presented. This technique is {{an adaptation of}} model theoretic forcing, which was originally {{designed to provide a}} method for constructing models of certain first-order logical theories. Our method applies to term orderings which may have infinitely many infinite extents, but transfinite trees are not used. We illustrate this method by proving the completeness of resolution and <b>paramodulation,</b> and the completeness of a set of inference rules consisting of restrictive forms of resolution and <b>paramodulation,</b> simplification and deletion of subsumed clauses...|$|E
40|$|Metis is an {{automated}} theorem prover based on ordered <b>paramodulation.</b> It is widely {{employed in the}} interactive theorem provers Isabelle/HOL and HOL 4 to automate proofs as well as reconstruct proofs found by automated provers. For both these purposes, the tableaux-based MESON tactic is frequently used in HOL Light. However, paramodulation-based provers such as Metis perform better on many problems involving equality. We created a Metis-based tactic in HOL Light which translates HOL problems to Metis, runs an OCaml version of Metis, and reconstructs proofs in Metis ’ <b>paramodulation</b> calculus as HOL proofs. We evaluate the performance of Metis as proof reconstruction method in HOL Light...|$|E
40|$|They are {{not capable}} to ground a {{canonicity}} of universal consistency. —Alexandra Deligiorgi (ΠAI∆EIA, 1998) We explore how different proof orderings induce different notions of saturation. We relate completion, <b>paramodulation,</b> saturation, redundancy elimination, and rewrite system reduction to proof orderings. ...|$|E
40|$|In this paper, a <b>paramodulation</b> {{calculus}} for equational {{reasoning is}} presented that combines {{the advantages of}} both Knuth-Bendix completion and goal directed strategies like the set of support strategy. Its soundness and completeness is proved, and finally the practical aspects of this method are discussed...|$|E
40|$|This paper {{considers}} {{the problem of}} E-unification for arbitrary equational theories E, and presents an inference rule approximating <b>Paramodulation</b> and leading to a complete E-unification procedure which generalizes Narrowing. This sheds {{some light on the}} boundary between arbitrary E-unification situations and E-unification under canonical E...|$|E
40|$|We {{show that}} superposition, a {{restricted}} form of <b>paramodulation,</b> {{can be combined}} with specifically designed simplification rules such that it becomes a decision procedure for the monadic class with equality. The completeness of the method follows from a general notion of redundancy for clauses and superposition inferences...|$|E
40|$|Up to now, all {{existing}} completeness {{results for}} ordered <b>paramodulation</b> and Knuth-Bendix completion require the term ordering to be well-founded, monotonic and total(izable) on ground terms. For several applications, these requirements are too strong, and hence weakening {{them has been}} a well-known research challenge. Here w...|$|E
40|$|We {{show that}} strict superposition, a {{restricted}} form of <b>paramodulation,</b> {{can be combined}} with specifically designed simplification rules such that it becomes a decision procedure for the monadic class with equality. The completeness of the method follows from a general notion of redundancy for clauses and superposition inferences...|$|E
40|$|International audienceWe {{devise a}} {{calculus}} {{based on the}} resolution and <b>paramodulation</b> rules and operating on schemata of formulæ. These schemata are defined inductively, using convergent rewrite systems encoding primitive recursive definitions. The main original feature of this calculus is that the rules operate on formulæ or terms occurring at arbitrarily deep positions inside the considered schemata, possibly by applying transformations on the corresponding rewrite system. Each inference step in the new calculus corresponds to several applications of the usual resolution or <b>paramodulation</b> rules over the instances of the considered schemata. The calculus has been implemented in the proof editor Shred. As an example of application we provide a formal refutation of a schema of clause sets generated by applying the CERES cut-elimination method on Fürstenberg's proof of the infinity of prime numbers...|$|E
