125|57|Public
25|$|Free Pascal {{bindings}} and an OOP wrapper component, via the libvlc.pp and vlc.pp units. This comes standard {{with the}} Free <b>Pascal</b> <b>Compiler</b> as of November 6, 2012.|$|E
25|$|Typical {{examples}} of large assembly language programs {{from this time}} are IBM PC DOS operating systems, the Turbo <b>Pascal</b> <b>compiler</b> and early applications such as the spreadsheet program Lotus 1-2-3. According to some industry insiders, the assembly language was the best computer language to use {{to get the best}} performance out of the Sega Saturn, a console that was notoriously challenging to develop and program games for. The 1993 arcade game NBA Jam is another example.|$|E
25|$|The {{compiler}} {{was first}} released as Compas Pascal for CP/M, and then released on November 20, 1983 as Turbo Pascal for CP/M (including the Apple II computer when {{fitted with a}} Z-80 SoftCard, effectively converting the 6502-based Apple into a CP/M machine, the Commodore 64 with CP/M cartridge, and the later DEC Rainbow), CP/M-86, and MS-DOS machines. On its launch in the United States market, Turbo Pascal retailed for USD49.99, a very low price for a compiler at the time. The integrated <b>Pascal</b> <b>compiler</b> was of good quality compared to other Pascal products of the time.|$|E
5000|$|Several <b>Pascal</b> <b>compilers</b> and interpreters are {{available}} for general use: ...|$|R
50|$|Object <b>Pascal</b> <b>compilers</b> are {{available}} {{for a wide range}} of operating systems and architectures.|$|R
50|$|The UCSD Pascal Project {{caused some}} controversy, with Pascal purists unhappy with UCSD Pascal {{extensions}} to the language. Some of these extensions are now present in modern <b>Pascal</b> <b>compilers.</b>|$|R
2500|$|The Turbo <b>Pascal</b> <b>compiler</b> {{was based}} on the Blue Label <b>Pascal</b> <b>compiler</b> {{originally}} produced for the NasSys cassette-based operating system of the Nascom microcomputer in 1981 by Anders Hejlsberg. Borland licensed Hejlsberg's [...] "PolyPascal" [...] compiler core (Poly Data was the name of Hejlsberg's company in Denmark), and added the user interface and editor. Anders Hejlsberg joined the company as an employee and was the architect for all versions of the Turbo <b>Pascal</b> <b>compiler</b> and the first three versions of Borland Delphi.|$|E
2500|$|Developers were {{required}} {{to learn how to}} write software that used the Macintosh's graphic user interface, and early in the computer's history needed a Lisa 2 or Unix system to write Macintosh software. Despite standardizing on Pascal for software development Apple did not release a native-code <b>Pascal</b> <b>compiler.</b> [...] Until third-party Pascal compilers appeared, developers had to write software in other languages while still learning enough Pascal to understand Inside Macintosh. MacWrite's inclusion with the Macintosh discouraged developers from creating other word processing software.|$|E
2500|$|... the MinGW and Cygwin {{projects}} {{also provide}} {{such an environment}} based on the GNU Compiler Collection (GCC), using a stand-alone header file set, to make linking against the Win32-specific DLLs simple. LCC-Win32 is a C compiler maintained by Jacob Navia, freeware for non-commercial use. Pelles C is a freeware C compiler maintained by Pelle Orinius. Free Pascal is a free software Object <b>Pascal</b> <b>compiler</b> that supports the Windows API. The MASM32 package is a mature project providing support for the Windows API under Microsoft Macro Assembler (MASM) by using custom made or converted headers and libraries from the Platform SDK. Flat assembler FASM allows building Windows programs without using an external linker, even when running on Linux.|$|E
50|$|Recent Object <b>Pascal</b> <b>compilers</b> however {{allow to}} escape {{keywords}} with &, this feature is mainly need when directly communication to foreign OOP systems like COM and COCOA that might use fields and methods based on Pascal keywords. C {{has no way}} to escape keywords.|$|R
50|$|Apple Computer created its own Lisa Pascal for the Lisa Workshop in 1982, and ported the {{compiler}} to the Apple Macintosh and MPW in 1985. In 1985 Larry Tesler, {{in consultation}} with Niklaus Wirth, defined Object Pascal and these extensions were incorporated in both the Lisa Pascal and Mac <b>Pascal</b> <b>compilers.</b>|$|R
5000|$|Although casting is {{possible}} {{on the most}} of <b>Pascal</b> <b>compilers</b> and interpreters, even in the code above a2c.a and a2c.b aren't required by any Pascal standardizations to share the same address space. Niklaus Wirth, the designer of Pascal, has written about the problematic nature of attempting type escapes using this approach: ...|$|R
5000|$|CDC 6000 <b>Pascal</b> <b>compiler</b> is {{the source}} code for the first (CDC 6000) <b>Pascal</b> <b>compiler.</b>|$|E
50|$|The MPW <b>Pascal</b> <b>compiler</b> was {{descended from}} the Lisa <b>Pascal</b> <b>compiler.</b> Apple's Larry Tesler worked with Niklaus Wirth {{to come up with}} Object Pascal {{extensions}} which Ken Doyle incorporated in one of the last versions of the Lisa <b>Pascal</b> <b>compiler.</b> This enabled MacApp.|$|E
5000|$|AmigaPascal {{is a free}} <b>Pascal</b> <b>compiler</b> for the Amiga computer.|$|E
50|$|Initially, Pascal was largely, but not exclusively, {{intended}} {{to teach students}} structured programming. A generation of students used Pascal as an introductory language in undergraduate courses. Variants of Pascal have also frequently been used for everything from research projects to PC games and embedded systems. Newer <b>Pascal</b> <b>compilers</b> exist which are widely used.|$|R
50|$|In 1984, feeling homesick for Denmark after {{fourteen}} years abroad, Brinch Hansen left USC {{and joined the}} faculty of the University of Copenhagen as a Professor of datalogy. In 1985, he was elected a Fellow of the IEEE. Later in 1985, his fourth book Brinch Hansen on <b>Pascal</b> <b>Compilers,</b> which he used for his own compiler course, was published.|$|R
50|$|In the 1950s, {{he participated}} in the MIT Whirlwind (computer) project. In 1969, Ross founded SofTech, Inc., which started as an early {{supplier}} of <b>Pascal</b> <b>compilers.</b> Ross lectured at MIT Electrical Engineering and Computer Science Department and was chairman emeritus. He retired at Softech, having served as the company's president from 1969 to 1975, when he became Chairman of the Board of directors.|$|R
5000|$|Pascal/SLAC, the <b>Pascal</b> <b>compiler</b> {{from the}} Stanford Linear Accelerator Center.|$|E
50|$|WOL Library for {{creating}} GUI applications with the Free <b>Pascal</b> <b>Compiler.</b>|$|E
5000|$|ROM: 128 KB (text editor, command interpreter, <b>Pascal</b> <b>compiler,</b> and assembler) ...|$|E
50|$|The company started {{offering}} compilers in 2004, {{with the}} release of mikroPascal for PIC and mikroBasic for PIC — compilers for programming 8-bit microcontrollers from Microchip Technology. Between 2004 and 2015 the company released C, Basic and <b>Pascal</b> <b>compilers</b> for seven microcontroller architectures: PIC, PIC32, dsPIC/PIC24, FT90x, AVR, 8051, and ARM® (supporting STMicroelectronics, Texas Instruments and Mircochip-based ARM® Cortex microcontrollers).|$|R
5000|$|Pastel was {{conceived}} by Jeffrey M. Broughton, then Project Engineer {{in charge of}} compilers and operating system software for the S-1 project, because of dissatisfaction with the PL/1 language in which Amber was being implemented. The language was named Pastel ("an off-color Pascal") and was the inspiration for Richard Stallman's GNU C compiler.Compared with <b>Pascal</b> <b>compilers</b> of that period, Pastel's features included: ...|$|R
50|$|Object Pascal {{source code}} is {{compiled}} to Java bytecode using the Free <b>Pascal</b> 3.0+ <b>compiler.</b>|$|R
5000|$|WDSibyl - Visual Development Environment and <b>Pascal</b> <b>compiler</b> for Win32 and OS/2 ...|$|E
5000|$|Dr. Pascal's Extended <b>Pascal</b> <b>Compiler</b> {{tested on}} DOS, Windows 3.1, 95, 98, NT.|$|E
50|$|The SuperPascal {{software}} {{can be accessed}} freely from the Brinch Hansen Archive. It consists of a compiler and interpreter, which are both written in normal, sequential Pascal (ISO Level 1 standard Pascal). This {{is supported by the}} GNU <b>Pascal</b> <b>compiler</b> and newer versions of the Free <b>Pascal</b> <b>compiler</b> (2.7.1+) with the -Miso switch, with the following respective small modifications to the code.|$|E
50|$|In Borland's hands, Turbo Pascal {{became one}} of the most commercially {{successful}} <b>Pascal</b> <b>compilers.</b> Hejlsberg remained with PolyData until the company came under financial stress, at which time, in 1989 he moved to California and became Chief Engineer at Borland. There he remained until 1996. During this time he developed Turbo Pascal further, and eventually became the chief architect for the team which produced the replacement for Turbo Pascal, Delphi.|$|R
50|$|This {{machine was}} used to run Wirth's PL/0, which was a <b>Pascal</b> subset <b>{{compiler}}</b> used to teach compiler development.|$|R
5000|$|In {{the early}} 1980s a change hit the company. The company's {{revenues}} {{stayed in the}} $15-16 million range during 1980 and 1981, but it lost over $0.6 {{million in the first}} year and over $1.5 million in the second. [...] Several business, including the service bureaus, were losing money, and there were significant cost overruns developing a set of <b>Pascal</b> <b>compilers.</b> [...] In addition there were accounting problems in 1980 regarding the accumulation of costs on some long-term contracts.|$|R
50|$|The UCSD <b>Pascal</b> <b>compiler</b> was {{distributed}} {{as part of}} a portable operating system, the p-System.|$|E
5000|$|Turbo51 {{is a free}} <b>Pascal</b> <b>compiler</b> for the 8051 {{family of}} microcontrollers, with Turbo Pascal 7 syntax.|$|E
5000|$|RatioField by Gert Buschmann, {{for windows}} with Pascal source code for Dev-Pascal 1.9.2 (with Free <b>Pascal</b> <b>compiler</b> [...] ) ...|$|E
50|$|Most {{of their}} work was done using a {{combination}} of x86 assembler and Pascal using either Turbo Pascal or Borland <b>Pascal</b> 7 <b>compilers.</b>|$|R
50|$|Aside from {{games and}} office {{applications}} such as word processors, spreadsheets, and database programs, the C64 was well equipped with development tools from Commodore as well as third-party vendors. Various assembler solutions were available; the MIKRO assembler came in ROM cartridge form and integrated seamlessly with the standard BASIC screen editor. The PAL Assembler by Brad Templeton was also popular. Several companies sold BASIC compilers, C <b>compilers</b> and <b>Pascal</b> <b>compilers,</b> and a subset of Ada, to mention but a few popular languages available for the machine.|$|R
5000|$|The Pascal dialect of UCSD Pascal {{came from}} the subset of Pascal {{implemented}} in Pascal-P2, which was not {{designed to be a}} full implementation of the language, but rather [...] "the minimum subset that would self-compile", to fit its function as a bootstrap kit for <b>Pascal</b> <b>compilers.</b> UCSD added strings from BASIC, and several other implementation dependent features. Although UCSD Pascal later obtained many of the other features of the full Pascal language, the Pascal-P2 subset persisted in other dialects, notably Borland Pascal, which copied much of the UCSD dialect.|$|R
