16|283|Public
40|$|AbstractFor {{the rapid}} test {{verification}} of aero-engine control and gas <b>path</b> <b>fault</b> diagnosis algorithm, the rapid prototyping hardware {{in the loop}} test verification method of the aircraft engine function algorithm module was designed, which based on the virtual instrument language and rapid prototypingtechnology. CompactRIO and its extension boards were utilized to build the rapid prototyping test verification platform for aircraft engine function algorithm, the control algorithm and the gas <b>path</b> <b>fault</b> diagnosis algorithm was deployed to the {{hardware in the loop}} whichbased on rapid prototyping, for the simulation of the algorithm on the platform. Finally, {{as an example of a}} turbofan engine PID control algorithm and gas <b>path</b> <b>fault</b> diagnosis algorithm, hardware in loop simulation test verification was carried through the rapid prototyping of platform. The results show that the rapid prototyping platform and its design method can realize the algorithm verification fast and flexible...|$|E
40|$|A {{recently}} proposed method obtains {{path delay}} fault coverages by estimating {{the count of}} the number of tested faults instead of actually enumerating them. The estimate become pessimistic when several paths share a set of lines. In this communication, we present a continuum of improved approximations for the counting method, approaching exact fault simulation, to allow trade-offs between accuracy and complexity. Higher accuracy is obtained at the expense of CPU time. We propose the use of flags corresponding to fixed-length path-segments. A flag indicates whether or not the segment has been included in a previously detected <b>path</b> <b>fault.</b> A <b>path</b> <b>fault,</b> detected by a pair of vectors, is counted as a new detection only if it includes at least one segment not included in any previously tested <b>path</b> <b>fault.</b> The results show that as the length of segments is increased, the accuracy approaches close to that of the exact fault simulation even with small segment lengths...|$|E
40|$|Aircraft engine {{performance}} trend monitoring and gas <b>path</b> <b>fault</b> diagnostics {{are closely related}} technologies that assist operators in managing the health of their gas turbine engine assets. Trend monitoring {{is the process of}} monitoring the gradual performance change that an aircraft engine will naturally incur over time due to turbomachinery deterioration, while gas path diagnostics is the process of detecting and isolating the occurrence of any faults impacting engine flow-path performance. Today, performance trend monitoring and gas <b>path</b> <b>fault</b> diagnostic functions are performed by a combination of on-board and off-board strategies. On-board engine control computers contain logic that monitors for anomalous engine operation in real-time. Off-board ground stations are used to conduct fleet-wide engine trend monitoring and fault diagnostics based on data collected from each engine each flight. Continuing advances in avionics are enabling the migration of portions of the ground-based functionality on-board, giving rise to more sophisticated on-board engine health management capabilities. This paper reviews the conventional {{engine performance}} trend monitoring and gas <b>path</b> <b>fault</b> diagnostic architecture commonly applied today, and presents a proposed enhanced on-board architecture for future applications. The enhanced architecture gains real-time access to an expanded quantity of engine parameters, and provides advanced on-board model-based estimation capabilities. The benefits of the enhanced architecture include the real-time continuous monitoring of engine health, the early diagnosis of fault conditions, and the estimation of unmeasured engine performance parameters. A future vision to advance the enhanced architecture is also presented and discusse...|$|E
40|$|Abstract â€” In this paper, {{we propose}} a new {{testability}} metric for <b>path</b> delay <b>faults.</b> The metric is computed efficiently using a non-enumerative algorithm. It has been validated through extensive experiments {{and the results}} indicate {{a strong correlation between}} the proposed metric and the <b>path</b> delay <b>fault</b> testability of the circuit. We further apply this metric to derive a <b>path</b> delay <b>fault</b> test application scheme for scan-based BIST. The selection of the test scheme is guided by the proposed metric. The experimental results illustrate that the derived test application scheme can achieve a higher <b>path</b> delay <b>fault</b> coverage in scan-based BIST. Because of the effectiveness and efficient computation of this metric, {{it can be used to}} derive other design-for-testability techniques for <b>path</b> delay <b>faults.</b> I...|$|R
40|$|We {{propose a}} linear {{complexity}} method to estimate robust <b>path</b> delay <b>fault</b> coverage in digital circuits. We adopt a path counting scheme for a true-value simulator that uses flags for each signal line. These flags determine the new <b>path</b> delay <b>faults</b> detected by the simulated vector pair. Experimental {{results are presented}} to show {{the effectiveness of the}} method in estimating <b>path</b> delay <b>fault</b> coverage. I. INTRODUCTION Two commonly used fault models are transition delay faults [5, 6, 10], which represent delay defects at inputs and outputs of gates, and <b>path</b> delay <b>faults</b> [9], which consider cumulative delays along combinational paths. The number of gate delay faults in a circuit is linearly proportional to the number of gates but the number of possible paths can be exponential making it impossible to enumerate all <b>path</b> delay <b>faults</b> in a large circuit. Still, many existing methods for computing fault coverage use some form of path enumeration. Storing of detected <b>path</b> delay <b>faults</b> [8] is [...] ...|$|R
40|$|We {{propose a}} linear {{complexity}} method to estimate robust <b>path</b> delay <b>fault</b> coverage in digital circuits. We adopt a path counting scheme for a true-value simulator that uses flags for each signal line. These flags determine the new <b>path</b> delay <b>faults</b> detected by the simulated vector pair. Experimental {{results are presented}} to show {{the effectiveness of the}} method in estimating <b>path</b> delay <b>fault</b> coverage...|$|R
40|$|A {{recently}} published method computes path delay fault coverage from {{the count of}} the number of path faults newly sensitized by a simulated vector pair. Such an estimate is pessimistic since several paths may share a set of lines. In this paper, we present a continuum of approximate methods, approaching exact fault simulation, for a tradeoff between accuracy and complexity. Higher accuracy is obtained at the expense of CPU time. We propose the use of flags corresponding to fixed-length path-segments. A flag indicates whether or not the segment has been included in a previously detected <b>path</b> <b>fault.</b> A <b>path</b> <b>fault</b> detected by a pair of vectors is counted as a new detection only if it includes at least one segment not included in any previously covered path. This gives us a pessimistic estimate {{of the number of}} newly detected faults by a simulated vector pair. When the numbers of fan-in and fan-out branches per gate are small, the method adds a modest overhead to good machine simulation prov [...] ...|$|E
40|$|AbstractIn {{consideration}} {{of the problem in}} traditional aero-engine fault diagnosis, a new algorithm was proposed, which does not rely on engine math model nor numerous data samples. This method based on grey relationship degree theory, engine gas <b>path</b> <b>fault</b> symptoms shifts were needed first, and then the relationship degree was calculated between ambiguous faults and specific faults to achieve the fault diagnosis. Finally, the CFM 56 - 3 fault example validates the effectiveness and feasibility of this method...|$|E
40|$|This paper {{presents}} analytical {{techniques for}} aiding system designers in making aircraft engine health management sensor selection decisions. The presented techniques, {{which are based}} on linear estimation and probability theory, are tailored for gas turbine engine performance estimation and gas <b>path</b> <b>fault</b> diagnostics applications. They enable quantification of the performance estimation and diagnostic accuracy offered by different candidate sensor suites. For performance estimation, sensor selection metrics are presented for two types of estimators including a Kalman filter and a maximum a posteriori estimator. For each type of performance estimator, sensor selection is based on minimizing the theoretical sum of squared estimation errors in health parameters representing performance deterioration in the major rotating modules of the engine. For gas <b>path</b> <b>fault</b> diagnostics, the sensor selection metric is set up to maximize correct classification rate for a diagnostic strategy that performs fault classification by identifying the fault type that most closely matches the observed measurement signature in a weighted least squares sense. Results from the application of the sensor selection metrics to a linear engine model are presented and discussed. Given a baseline sensor suite and a candidate list of optional sensors, an exhaustive search is performed to determine the optimal sensor suites for performance estimation and fault diagnostics. For any given sensor suite, Monte Carlo simulation results are found to exhibit good agreement with theoretical predictions of estimation and diagnostic accuracies...|$|E
40|$|This paper {{presents}} a BIST scheme {{for the detection}} of <b>path</b> delay <b>faults.</b> It differs from the traditional BIST schemes which aim at stuck-at faults by offering higher capability of two-pattern generation. The TPG scheme produces test sequences having exactly the same robust <b>path</b> delay <b>fault</b> coverage as single-input-change test sequences. By determining nonadjacent inputs, the reduction of both test length and area overhead can be achieved. Signature analysis under <b>path</b> delay <b>fault</b> is also discussed. Based on true-value simulation, error patterns under <b>path</b> delay <b>fault</b> model were obtained and were used in aliasing estimation. link_to_subscribed_fulltex...|$|R
40|$|The <b>path</b> delay <b>fault</b> {{model is}} the most {{realistic}} model for delay faults. Testing all the paths in a circuit achieves 100 % delay fault coverage according to traditional <b>path</b> delay <b>fault</b> coverage metrics. These metrics result in unrealistically low fault coverage if only a subset of paths is tested, and the real test quality is not reflected. For example, the traditional <b>path</b> delay <b>fault</b> coverage of any practical test for circuit c 6288 is close to 0 because this circuit has an exponential number of paths. In this paper, a statistical and realistic <b>path</b> delay <b>fault</b> coverage metric is presented. Then the quality of several existing test sets (path selection methods) is evaluated in terms of local and global delay faults using this metric, {{in comparison with the}} transition <b>fault</b> and traditional <b>path</b> delay <b>fault</b> coverage metrics. 1...|$|R
40|$|Delay {{testing of}} combinational logic in a clocked {{environment}} is analyzed. A model based upon paths is introduced for delay <b>faults.</b> Any <b>path</b> {{with a total}} delay exceeding the clock interval is called a &quot;path fault. &quot; This is a global delay fault model because it is associated with an entire path. The more familiar slow-to-rise or slow-to-fall gate delay fault, on the other hand, is a local fault model. A procedure is described which identifies paths which are tested for <b>path</b> <b>faults</b> {{by a set of}} patterns. It does not involve delay simulation. The paths so identified are tested for <b>path</b> <b>faults</b> independent of the delays of any individual gate of the network...|$|R
40|$|Abstract â€”In this paper, {{we propose}} a new {{multipath}} routing protocol for ad hoc wireless networks â€” Multi-path Source Routing (MSR), {{which is an}} extension of DSR (Dynamic Source Routing). Based on the measure-ment of RTT, we propose a scheme to distribute load among multiple paths. The simulation results show that our approach improves the packet delivery ratio and the throughput of TCP and UDP, and reduces the end-to-end delay and the average queue size, while adding little overhead. As a result, MSR decreases the network con-gestion and increases the <b>path</b> <b>fault</b> tolerance quite well. I...|$|E
40|$|In this test, we {{accumulate}} {{more than}} 10 hours of high-thrust state durability test on a turbofan engine. The test is conducted on a directly connected tube test cell which can simulate different flight altitudes and flight speeds. Performance parameters and important cross-section parameters are collected {{and the engine}} is decomposed after the test. The law of engine performance degradation caused by {{the aging of the}} engine parts performance is summarized based on the changes of performance parameters, important cross-section parameters and the structure of engine. Engine air <b>path</b> <b>fault</b> diagnosis is conducted using some test data to give approximate value of some component performance deterioration. The method and theoretic analysis are of some engineering value. </p...|$|E
40|$|This paper {{presents}} a model-based architecture for performance trend monitoring and gas <b>path</b> <b>fault</b> diagnostics designed for analyzing streaming transient aircraft engine measurement data. The technique analyzes residuals between sensed engine outputs and model predicted outputs for fault detection and isolation purposes. Diagnostic {{results from the}} application of the approach to test data acquired from an aircraft turbofan engine are presented. The approach is found to avoid false alarms when presented nominal fault-free data. Additionally, the approach is found to successfully detect and isolate gas path seeded-faults under steady-state operating scenarios although some fault misclassifications are noted during engine transients. Recommendations for follow-on maturation and evaluation of the technique are also presented...|$|E
40|$|This paper {{describes}} a new formulation to generate robust tests for <b>path</b> delay <b>faults</b> in combinational circuits based on Boolean satisfiability. Conditions {{to detect a}} target <b>path</b> delay <b>fault</b> are represented by a Boolean formula. Unlike the technique described in [16], which extracts the formula for each <b>path</b> delay <b>fault,</b> the proposed formulation needs to extract the formula only once for each circuit cone. Experimental results show tremendous time saving on formula extraction compared to other satisfiability-based ATPG algorithms. This also leads to low test generation time, especially for circuits that have many paths but few outputs. The proposed for-mulation has also been modied to generate other types of tests for <b>path</b> delay <b>faults...</b>|$|R
40|$|Abstract 1 This paper {{addresses}} {{the problem of}} testing <b>path</b> delay <b>faults</b> in a microprocessor core using its instruction set. We propose to self-test a processor core by running an automatically synthesized test program which can achieve a high <b>path</b> delay <b>fault</b> coverage. This paper discusses the method and the prototype software framework for synthesizing such a test program. Based on the processor's instruction set architecture, micro-architecture, RTL netlist as well as gate-level netlist on which the <b>path</b> delay <b>faults</b> are modeled, the method generates deterministic tests (in the form of instruction sequences) by cleverly combining structural and instruction-level test generation techniques. The experimental results for two microprocessors indicate that the test instruction sequences can be successfully generated for {{a high percentage of}} testable <b>path</b> delay <b>faults.</b> 1...|$|R
40|$|Abstract A fuzzy {{model is}} {{proposed}} {{to analyze the}} effectiveness of test pairs targeting <b>path</b> delay <b>faults.</b> This model is accurate enough to rank nonrobust tests by accounting for conditions not considered in existing models. It remains fully consistent with the traditional test robustness analysis. Finally, it also provides a coverage metric {{to be used to}} rank whole test sets. The proposed model has been implemented in a logic level <b>path</b> delay <b>fault</b> simulator. Its accuracy has been validated, for a set of combinational benchmarks, by means of a Monte Carlo logic-level event-driven <b>path</b> delay <b>fault</b> simulator...|$|R
40|$|Gas <b>path</b> <b>fault</b> {{isolation}} {{is one of}} the key techniques in Engine Health Management systems. In order to accomplish gas <b>path</b> <b>fault</b> isolation successfully for a gas turbine engine, both an accurate off-design performance model and an effective fault isolation approach are necessary. In this thesis, two original and useful contributions to knowledge are presented: a new gas turbine off-design performance model adaptation approach and a new gas turbine fault isolation approach. This new adaptation approach uses optimal multiple scaling factors obtained by using a Genetic Algorithm to scale inaccurate component characteristic maps in gas turbine performance models to improve their prediction accuracy in different off-design conditions. The major feature of this approach is that it provides non- linear map scaling and therefore is able to provide more effective adaptation. The new fault isolation approach can be used to discover knowledge hidden in engine fault samples, transfers that knowledge into rules, and then uses those rules for fault isolation. In addition, it is also capable of selecting appropriate measurements for fault isolation, dealing with uncertainty caused by measurement noise. Enhanced fault signatures, which are represented by the measurement deviations and their ranking pattern in terms of magnitude, are developed to make gas turbine faults easier to distinguish and hence make this fault isolation approach more effective. The new adaptation approach was applied to the off-design performance model adaptation of a gas turbine, while the new fault isolation approach was employed for fault isolation in a gas turbine. The results show that the new adaptation approach is very effective in improving the prediction accuracy of off- design performance models and the new fault isolation approach is not only effective in fault isolation but also in selecting measurements for isolation and generating fault isolation rules. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|E
40|$|We propose an {{efficient}} combinational circuit simulation technique for the recently proposed segment delay fault model. After simulation of a vector pair, activated segments are traced using a depth-first search. A segment numbering scheme finds {{the number of}} faults to be simulated. A labeling technique generates edge labels to compute a unique label for each segment fault. The use of labels avoids explicit storing of fault lists and allows efficient access to previously detected segment faults. Experimental results demonstrate several advantages of the segment delay fault model. First, {{the total number of}} faults remains manageable for small segment lengths. Second, many segments, not included in any robustly testable <b>path</b> <b>fault,</b> may have robust segment delay fault tests. Generating tests for such segments may increase the delay defect coverage...|$|E
40|$|This paper {{presents}} new logic synthesis {{techniques for}} generating multilevel circuits with concurrent error detection {{based on a}} parity-check code scheme that can detect all errors caused by single stuck-at faults. These synthesis techniques fully automate the design process and allow for a better quality result than previous methods thereby reducing the cost of concurrent error detection. An algorithm is described for selecting a good parity-check code for encoding the outputs of a circuit. Once the code has been chosen, a new procedure called structureconstrained logic optimization is used to minimize {{the area of the}} circuit as much as possible while still using a circuit structure that ensures that single stuck-at faults cannot produce undetected errors. The implementation that is generated is <b>path</b> <b>fault</b> secure and when augmented by a checker forms a self-checking circuit. Results indicate that self-checking multilevel circuits can be generated which require significantly less area than using duplication. ...|$|E
40|$|This paper {{presents}} {{a way to}} construct accumulator based test vector generators intended for efficient detection of <b>path</b> delay <b>faults.</b> Experiments conducted using our <b>path</b> delay <b>fault</b> simulator, GFault, shows that our proposed generator can give as much as 30 X reduction in test time for circuits in the ISCAS 85 benchmark suite compared to an accumulator based pseudo random generator...|$|R
40|$|A new {{methodology}} involving effect-cause {{analysis has}} been demonstrated for the diagnosis of <b>path</b> delay <b>faults.</b> We seek to pro-vide an improved understanding of the methods introduced in [6], {{with the goal of}} devising efficient representations and algorithms for the diagnosis of <b>path</b> delay <b>faults.</b> Results indicate that the di-agnostic resolution obtained is very high and includes all possible causes of the observed delay faults. ...|$|R
40|$|We {{describe}} algorithms {{and data}} structures for accurate and efficient computation of <b>path</b> delay <b>fault</b> coverage. Our method uses an interval-based representation of consecutively numbered <b>path</b> delay <b>faults.</b> We describe a modified 2 - 3 tree data structure to store and manipulate these intervals {{to keep track}} of tested faults. Some results obtained using non-robust simulation of benchmark circuits suggest the viability of this approach...|$|R
40|$|This paper {{presents}} a procedure for synthesizing multilevel circuits with concurrent error detection. All errors caused by single stuck-at faults are detected using a parity-check code. The synthesis procedure (implemented in Stanford CRC's TOPS synthesis system) fully automates {{the design process}} and reduces the cost of concurrent error detection compared with previous methods. An algorithm for selecting a good parity-check code for encoding the circuit outputs is described. Once the code has been selected, a new procedure called structure-constrained logic optimization is used to minimize {{the area of the}} circuit as much as possible while still using a circuit structure that ensures that single stuck-at faults cannot produce undetected errors. It is proven that the resulting implementation is <b>path</b> <b>fault</b> secure and when augmented by a checker forms a self-checking circuit. The actual layout areas required for self-checking implementations of benchmark circuits generated with the techniques described in this paper are compared with implementations using Berger codes, single-bit parity, and duplicate-and-compare. Results indicate that the self-checking multilevel circuits generated with the procedure described here are significantly more economical. 1...|$|E
40|$|A Kalman filter-based {{approach}} for integrated on-line aircraft engine performance estimation and gas <b>path</b> <b>fault</b> diagnostics is presented. This technique is {{specifically designed for}} underdetermined estimation problems where there are more unknown system parameters representing deterioration and faults than available sensor measurements. A previously developed methodology is applied to optimally design a Kalman filter to estimate a vector of tuning parameters, appropriately sized to enable estimation. The estimated tuning parameters can then {{be transformed into a}} larger vector of health parameters representing system performance deterioration and fault effects. The results of this study show that basing fault isolation decisions solely on the estimated health parameter vector does not provide ideal results. Furthermore, expanding the number of the health parameters to address additional gas path faults causes a decrease in the estimation accuracy of those health parameters representative of turbomachinery performance deterioration. However, improved fault isolation performance is demonstrated through direct analysis of the estimated tuning parameters produced by the Kalman filter. This was found to provide equivalent or superior accuracy compared to the conventional fault isolation approach based on the analysis of sensed engine outputs, while simplifying online implementation requirements. Results from the application of these techniques to an aircraft engine simulation are presented and discussed...|$|E
40|$|Gas <b>path</b> <b>fault</b> {{diagnosis}} {{involves the}} effective utilization of condition-based sensor signals along engine gas path to accurately identify engine performance failure. The rapid development of information processing technology {{has led to}} the use of multiple-source information fusion for fault diagnostics. Numerous efforts have been paid to develop data-based fusion methods, such as neural networks fusion, while little research has focused on fusion architecture or the fusion of different method kinds. In this paper, a data hierarchical fusion using improved weighted Dempsterâ€“Shaffer evidence theory (WDS) is proposed, and the integration of data-based and model-based methods is presented for engine gas-path fault diagnosis. For the purpose of simplifying learning machine typology, a recursive reduced kernel based extreme learning machine (RR-KELM) is developed to produce the fault probability, which is considered as the data-based evidence. Meanwhile, the model-based evidence is achieved using particle filter-fuzzy logic algorithm (PF-FL) by engine health estimation and component fault location in feature level. The outputs of two evidences are integrated using WDS evidence theory in decision level to reach a final recognition decision of gas-path fault pattern. The characteristics and advantages of two evidences are analyzed and used as guidelines for data hierarchical fusion framework. Our goal is that the proposed methodology provides much better performance of gas-path fault diagnosis compared to solely relying on data-based or model-based method. The hierarchical fusion framework is evaluated in terms to fault diagnosis accuracy and robustness through a case study involving fault mode dataset of a turbofan engine that is generated by the general gas turbine simulation. These applications confirm the effectiveness and usefulness of the proposed approach. gas turbine; performance fault diagnosis; data fusion; extreme learning machine; evidence theor...|$|E
40|$|Full {{testability}} is {{a desirable}} property network {{and maintaining the}} testability of multi-level logic synthesis is very complicated. In our paper propose new technique which maintains fully testable circuit with function mode under the robust <b>path</b> delay <b>fault</b> model. The preservation of testability of these networks under the stuck-at-fault model and Path delay model, preservation of testability the K-EPSOP is typical but it we proposed robust <b>path</b> delay <b>fault</b> model using binate property of variable with mux realization for remainder or without remainder. The whole our new architecture gives guarantees the <b>path</b> delay <b>fault</b> fully testable circuit a modification in design and operates on mode e. g. functional mode. Key Words: Design for testability, logic synthesis, multiplexor-based circuits, K-EPSOP...|$|R
40|$|<b>Path</b> delay <b>fault</b> {{testing has}} become {{increasingly}} important due to higher clock rates and higher process variability caused by shrinking geometries. Achieving high-coverage <b>path</b> delay <b>fault</b> testing requires the application of scan justified test vector pairs, coupled with careful ordering of the scan flip-flops and/or insertion of dummy flip-flops in the scan chain. Previous works on scan synthesis for <b>path</b> delay <b>fault</b> testing using scan shifting have focused exclusively on maximizing fault coverage and/or minimizing the number of dummy flip-flops, but have disregarded the scan wirelength overhead. In this {{paper we propose a}} layout-aware coverage-driven scan chain ordering methodology and give exact and heuristic algorithms for computing the achievable tradeoffs between <b>path</b> delay <b>fault</b> coverage and both dummy flip-flop and wirelength costs. Experimental results show that our scan chain ordering methodology yields significant improvements in path delay coverage with a very small increase in wirelength overhead compared to previous layout-driven approaches, and similar coverage with up to 25 times improvement in wirelength compared to previous layout-oblivious coverage-driven approaches. I...|$|R
40|$|Test {{sets for}} <b>path</b> delay <b>faults</b> in {{circuits}} {{with large numbers}} of paths are typically generated for <b>path</b> delay <b>faults</b> associated with the longest circuit paths. We show that such test sets may not detect faults associated with the next-to-longest paths. This may lead to undetected failures since shorter paths may fail without any of the longest paths failing. In addition, paths that appear to be shorter may actually be longer than the longest paths if the procedure used for estimating path length is inaccurate. We propose a test enrichment procedure that increases significantly the number of faults associated with the next-to-longest paths that are detected by a (compact) test set. This is achieved by allowing the underlying test generation procedure the flexibility of detecting or not detecting the faults associated with the next-to-longest <b>paths.</b> <b>Faults</b> associated with next-to-longest paths are detected without increasing the number of tests beyond that required to detect the faults associated with the longest paths. The proposed procedure thus improves the quality of the test set without increasing its size...|$|R
40|$|Delay {{fault testing}} and at-speed testing {{are widely used}} to verify the timing of {{synchronous}} digital ICâ€™s. The importance of these techniques is still growing because of the relevant ICâ€™s parameters uncertainties which characterize the current technologies. In order to drive this process, several fault models and test generation techniques have been developed that target different trade-offs between accuracy and efficiency. The largest fraction of these approaches is based upon gate level descriptions of the circuit. In case the basic building blocks are more complex than logic gates and their implementation is not known, functional level approaches have been proposed. For instance, {{this is the case}} for look-up tables based Field Programmable Gate Arrays (FPGAs) and it may be a perspective for deep submicron circuits that exploit logic bricks as basic building blocks. This class of circuits has been referred to as macro or module based. In this context, the main activities performed during the tree years of my PhD are related to the timing failures problems in module-based CMOS VLSI circuits. The attention to module-based (or block-based) circuits follows the current VLSI physical design trends that attempt to limit the parametric failures due to the scaling of technology toward nanometric feature sizes. In such technologies, in fact, the traditional design paradigms that are based on small (i. e gate level) cells may produce high levels of variability, thus resulting in parametric defects. The use of highly regular cell structures, called logic bricks has been proposed to solve these problems thus increasing the yield of VLSI circuits. A brick comprises a logic function created from a small set of logic primitives that are mapped on to a micro-regular fabric. Such logic function is typically more complex that those implemented in traditional VLSI libraries. Field Programmable Gate Array (FPGA) technology also exploits a module based design approach. Unlike logic bricks, FPGAs are completely programmable, because they are based on look up tables (a n-bit LUT can accomplish every n-bit function), but the drawback is related to the implementation of the LUT, that is unknown to designer and not optimized for regularity. In this scenario, the delay fault testing became a big issue, since {{it is very difficult to}} study a circuit built using modules whose implementation in not known, either for technological and for intellectual property reasons. Moreover, the aggressive timing policies used in todayâ€™s ICs make the need for delay fault testing more relevant. The main PhD activity, that will be explained in detail in this thesis, is related to a new method that we propose to generate test vectors for path delay faults in circuits based on modules. In particular, we consider the single path delay fault model in combinational circuits or in (enhanced) full-scan ones that are composed of functional blocks whose implementation is not known. In such circuits a <b>path</b> <b>fault</b> is detected by suitable conditions so that a test pair is able to propagate a transition through the path under test, in order to detect a path delay fault. In order to identify such conditions, we introduced a new signal representation that enables the use of boolean differential calculus. Also, additional conditions to prevent invalidation of tests by hazards have been identified. We suppose that the dynamic behavior of the block is modeled using input delays such as in the timing arc delay model. We target simple combinational blocks such as logic bricks, that are expected to present up to 8 - 10 inputs and a low logic depth. The used method is scalable, to generate conditions for path delay fault tests also at gate level. In order to assess the feasibility of the proposed approach, I realized a software, written in C/C++, that permits to find out robust and non-robust test pairs, starting from the BLIF description of a module based circuit. Such a software uses a BDD description of the blocksâ€™ functions on which we apply Boolean Differences to obtain local sensitization conditions at module level. Since there are circuits whose BDD structure may be very large and it may be inefficient (in some cases also infeasible) to treat it, we translate functions obtained at macros level to a CNF description. After that, a SAT solver generates the test pairs at circuit level starting from the conjunction of all the CNF functions. The software tool was used to verify the proposed approach on a set of benchmarks (both combinational or full-scan) from ITCâ€™ 99 and ISCASâ€™ 85 sets. Such benchmarks allowed to show the feasibility of the proposed approach, although they are not fully representative of the target circuits for which the method was developed. Another significant work, carried out during my PhD period, also deal with testing of macro-based circuits, but it concerns specifically logic bricks. In particular, a method for high quality functional fault simulation and test generation for such circuits was conceived and a software tool that implements it was developed. For both the approaches, results showed the feasibility of them, but also highlighted possibilities to improve and extend the work done...|$|E
40|$|<b>Path</b> delay <b>fault</b> testing becomes {{increasingly}} important due to higher clock rates and higher process variability caused by shrink-ing geometries. Achieving high-coverage <b>path</b> delay <b>fault</b> testing requires {{the application of}} scan justified test vector pairs, cou-pled with careful ordering of the scan flip-flops and/or insertion of dummy flip-flops in the scan chain. Previous works on scan syn-thesis for <b>path</b> delay <b>fault</b> testing using scan shifting have focused exclusively on maximizing fault coverage and/or minimizing the number of dummy flip-flops, but have disregarded the scan wire-length overhead. In t h s paper we consider both dummy flip-flop and wirelengtb costs, and focus on post-layout formulations that capture the achievable tradeoffs between these costs and delay fault coverage in scan chain synthesis. ...|$|R
40|$|In most of {{the delay}} fault testing {{literature}} {{there is a widespread}} belief that a non-robust test for a <b>path</b> delay <b>fault</b> can be invalidated only through the existence of another <b>path</b> delay <b>fault.</b> In this paper we present an analysis of conditions that can invalidate a non-robust test, and present four di#erent invalidation mechanisms. Three of these mechanisms, in addition to the pulse dampening described in # 1 #, do not require the existence of another <b>path</b> delay <b>fault</b> in a circuit. We also de#ne pseudo-VNR tests, and we show that this is the most common interpretation of validatable-non-robust tests in literature. Uncovering the invalidation mechanisms for non-robust tests is quite important given the fact {{that a large number of}} paths in a circuit usually do not haveany robust tests...|$|R
40|$|In {{this paper}} we explore the test {{complexity}} of the adder function {{with respect to the}} robust <b>path</b> delay <b>fault</b> model. A lower bound of Î©Î“ n 2) for the cardinality of a complete test set for a combinational n-bit adder is proven. This result is valid for any adder design known until now. In addition we present a fast O(p n) -time adder that is fully robust <b>path</b> delay <b>fault</b> testable with a test set of size Î˜(n 2) ...|$|R
40|$|We {{propose a}} novel Design for Tesiability {{technique}} to apply fwo paitern iesis for <b>path</b> delay <b>fault</b> iesting. Due to stringent timing requirements of deep-submicron VU 1 chips, design-for-test schemes have io be tailored for de-tecting stuck-at {{as well as}} delay faults quickly and ejj-cientfy. Existing iechniques such as enhanced scan add subsiantial hardware overhead, whereas techniques such as scan-shifing or functional justifcarion make the test gen-eraiion process complex and produce lower coverage for scan based designs as compared to non-scan designs. We exploit the characteristics of CMOS circuitry to enable the application of two-patiern iests. The proposed technique re-duces the problem of <b>path</b> delay <b>fault</b> testing for scan based designs to ihut of <b>path</b> delay <b>fault</b> testing with complete ac-cessibility io the combinuiional logic, and hus minimal area overhead. The scheme also provides signifcant reduction in power during scan operation. 1...|$|R
40|$|We {{propose a}} novel Design for Testability {{technique}} to apply two pattern tests for <b>path</b> delay <b>fault</b> testing. Due to stringent timing requirements of deep-submicron VLSI chips, design-for-test schemes {{have to be}} tailored for detecting stuck-at as well as delay faults quickly and efficiently. Existing techniques such as enhanced scan add substantial hardware overhead, whereas techniques such as scan-shifting or functional justification make the test generation process complex and produce lower coverage for scan based designs as compared to non-scan designs. We exploit the characteristics of CMOS circuitry to enable the application of two-pattern tests. The proposed technique reduces the problem of <b>path</b> delay <b>fault</b> testing for scan based designs to that of <b>path</b> delay <b>fault</b> testing with complete accessibility to the combinational logic, and has minimal area overhead. The scheme also provides significant reduction in power during scan operation. 1...|$|R
