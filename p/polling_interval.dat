31|29|Public
50|$|A <b>polling</b> <b>interval</b> defines {{how often}} the network device sends {{interface}} counters. sFlow counter sampling is more efficient than SNMP polling when monitoring {{a large number of}} interfaces.|$|E
50|$|Generally, {{the act of}} {{performing}} file integrity monitoring is automated using internal controls such as an application or process. Such monitoring can be performed randomly, at a defined <b>polling</b> <b>interval,</b> or in real-time.|$|E
50|$|The {{sampled data}} is sent as a UDP packet to the {{specified}} host and port. The official port number for sFlow is port 6343. The lack of reliability in the UDP transport mechanism does not significantly affect {{the accuracy of}} the measurements obtained from an sFlow agent. If counter samples are lost then new values will be sent when the next <b>polling</b> <b>interval</b> has passed. The loss of packet flow samples results in a slight reduction of the effective sampling rate.|$|E
40|$|The horned {{condition}} in cattle {{is believed to}} be the wild type with morphogenesis primarily occurring after birth. The polled condition has existed since domestication and has been selected for its economic importance. The polled locus has previously been mapped by genetic linkage analysis to the proximal region of bovine chromosome 1. In order to help us eventually identify the causative mutation, the objective of the study was to structurally and functionally characterize the <b>polled</b> <b>interval</b> from IFNAR 1 to SOD 1 on BTA 1. Our hypothesis was that the polled locus is a tissue specific transcription factor that is expressed in the developing horn buds and acts directly or indirectly upon SOX 9. A 2. 5 Mb BAC contig and STS content map of the <b>polled</b> <b>interval</b> was constructed. Three candidate genes encoding transcription factors were identified within this region but only C 21 orf 66 was expressed in the horn buds from 1 d old Bos indicus influenced calves. The C 21 orf 66 gene has 18 exons, spans 30, 976 bp of genomic DNA, and 144 SNP were identified. No single SNP discovered in C 21 orf 66 can be attributed as the causative mutation. None of the genes from the <b>polled</b> <b>interval</b> were differentially expressed in skin and horn from 1 d old Bos indicus influenced calves. However, there were significant differences in the levels of expression of RUNX 2, SOX 9, BMP 4, PRKCA, and FOXL 2 in these samples. Expression of RUNX 2 was localized to the osteoblasts, and both RUNX 2 and SOX 9 were expressed in sebaceous glands of the horn at 1 d of age. Histological examination of horns and scurs from newborn, 5 to 6 mo, and ~ 1. 5 yr old Bos indicus influenced cattle suggest that horns form through intramembranous ossification. Based on the data presented herein, we propose that the polled locus is upstream of RUNX 2 and SOX 9 in the osteogenic pathway, and could have its primary effect on the differentiation of mesenchymal condensations. The genes IL 10 RB, SFRS 15, C 21 orf 66, OLIG 1, OLIG 2 and HUNK remain candidates for the polled locus and warrant further investigation...|$|R
40|$|A set of {{planning}} guidelines {{is presented to}} help law enforcement agencies and vehicle fleet operators decide which automatic vehicle monitoring (AVM) system could best meet their performance requirements. Improvements in emergency response times and resultant cost benefits obtainable with various operational and planned AVM systems may be synthesized and simulated by means of special computer programs for model city parameters applicable to small, medium, and large urban areas. Design characteristics of various AVM systems and the implementation requirements are illustrated and cost estimated for the vehicles, the fixed sites, and the base equipments. Vehicle location accuracies for different RF links and <b>polling</b> <b>intervals</b> are analyzed...|$|R
40|$|This paper {{examines}} MPI’s {{ability to}} support continuous, dynamic load balancing for unbalanced parallel applications. We use an unbalanced tree search benchmark (UTS) to compare two approaches, 1) work sharing using a centralized work queue, and 2) work stealing using explicit polling to handle steal requests. Experiments indicate {{that in addition}} to a parameter defining the granularity of load balancing, message-passing paradigms require additional parameters such as <b>polling</b> <b>intervals</b> to manage runtime overhead. Using these additional parameters, we observed an improvement of up to 2 X in parallel performance. Overall we found that while work sharing may achieve better peak performance on certain workloads, work stealing achieves comparable if not better performance across a wider range of chunk sizes and workloads. ...|$|R
50|$|A symbol {{input device}} usually {{consists}} {{of a group of}} switches that are polled at regular intervals to see which switches are switched. Data will be lost if, within a single <b>polling</b> <b>interval,</b> two switches are pressed, or a switch is pressed, released, and pressed again. This polling can be done by a specialized processor in the device to prevent burdening the main CPU. When a new symbol has been entered, the device typically sends an interrupt, in a specialized format, so that the CPU can read it.|$|E
5000|$|Microsoft began {{offering}} real-time email notification with Windows Mobile 2003 (sending SMS messages when new mail arrived), then {{replaced it with}} a simulated push experience (long polling) in 2007 with the release of Windows Mobile 5 AKU2 under the name [...] "Direct Push Technology". 'Direct Push' technology is an additional feature added to Microsoft Exchange 2003 with service pack 2 that adds messaging and security features. A phone device running Windows Mobile 5 is enabled to poll the Exchange Server every 30 minutes. If new mail arrives in the <b>polling</b> <b>interval,</b> it is instantly pulled, using a subscriber's existing wireless phone account. This allows the device to have a changing IP or to traverse NAT/Proxy. To achieve push mail with email providers other than Exchange, there is a commercially available plug-in from Emansio that enables push mail with almost any public email provider, or any email server that supports IMAP IDLE.|$|E
30|$|When {{measuring}} the time taken to transfer Modbus data, {{there are two}} terms that must be defined: Round Trip Time (RTT) and the <b>Polling</b> <b>Interval.</b> Round Trip Time (RTT) is the time between sending a request until receiving the respective response with the sensor data. The <b>Polling</b> <b>Interval</b> is the time between sending requests to the same sensor. The <b>Polling</b> <b>Interval</b> is configured by the user and is often implemented {{in the form of}} a timer.|$|E
40|$|This report investigates four data {{structures}} {{intended to}} store (intermediate) search {{results in the}} Eff 2 Image Retrieval System. Eff 2 Image Retrieval System is a research project that involves developing a prototype of an image retrieval system based on local descriptors. This projects goal {{was to find a}} data structure that supports fast display of data to client interface but has as little influence on the efficiency of the search process as possible when polled frequently. Three different data structures where implemented and experiments conducted on them (data structures B,C and D). The fourth data structure studied is the one used in the Eff 2 Image Retrieval System (data structure A). The results indicate that data structure A is well suited when polling is not frequent. If the time between <b>polling</b> <b>intervals</b> drops and is lower than 3 - 5 seconds then data structure D shows best results. 1...|$|R
5000|$|Statistics, Trade-Offs, and Society. This chapter {{addresses}} trade-offs {{in public}} policy, the prisoners dilemma, type I and type II errors in statistics, when a true hypothesis {{is thought to}} be untrue or when a false hypothesis {{is thought to be}} true. <b>Polling</b> confidence <b>interval</b> is addressed, along with the law of large numbers, Correlation does not imply causation and other statistical mistakes.|$|R
30|$|When {{moving a}} SCADA system to cloud infrastructure, {{there is a}} need to ensure that the {{real-time}} monitoring and control demands of the industrial system can be achieved. By carrying out analysis of the EclipseSCADA system we made a series of recommendations that should be taken into consideration when migrating SCADA systems to the cloud. In general, latencies introduced by running SCADA system components in the cloud are not a limiting factor, given that response time requirements are usually in the order of several hundred milliseconds to seconds. While scalable compute power in a cloud-based system tempts to centralizing functionalities, this may lead to problems in given system designs. We have specifically discovered limitations with polling protocols processed in a serialized way. We propose in particular the adoption of event-driven communication protocols to reduce network transfer, doing protocol conversion close to the field devices, and replication of remote servers, to ensure <b>polling</b> <b>intervals</b> are met.|$|R
3000|$|If {{the average}} delay of the rtPS class is within {{predefined}} limits, {{it is possible}} to increase the <b>polling</b> <b>interval</b> to the nrtPS service (line 56 - 59), making a better distribution of the available resources at the network. Thus, {{it is possible to}} control the periodicity of sending unicast polling, in accordance with the QoS requirements of the applications. The symbol [...] "α" [...] in the algorithm represents the <b>polling</b> <b>interval</b> value that will be increased or decreased, depending on the available resources at the networks.|$|E
30|$|In [19], it {{was defined}} an {{analytical}} technique for obtaining an optimal <b>polling</b> <b>interval.</b> Using this <b>polling</b> <b>interval,</b> the BS should poll the SSs {{to ensure that}} the delay requirements of traffic are met. The authors also devised an opportunistic deficit round robin (O-DRR) scheme that schedule the sessions by taking into account the variations in the wireless channel and the delay constraints of multicast traffic. However, the utilization of the O-DRR scheduler introduces an extra overhead on the scheduling, because it is necessary to maintain a quantum size and a deficit count for each SS.|$|E
30|$|As {{it can be}} {{seen from}} Figure 10, the {{throughput}} of the nrtPS connections decreased as the rtPS load increased. This behavior was expected due to a load increase of a service class with higher priority. However, the proposed algorithm shows better performance than WRR and RR algorithms. The proposed algorithm interacts with the polling mechanism and adjusts the unicast <b>polling</b> <b>interval</b> dynamically. Thus, in accordance with the available resources, the SSs receive more grants to request more bandwidth, and the nrtPS service can get more bandwidth. On the other hand, the algorithms WRR and RR do not interact with the polling mechanism, and they use a fixed <b>polling</b> <b>interval,</b> receiving less bandwidth than the proposed algorithm.|$|E
40|$|Several {{transportation}} {{agencies are}} currently estimating freeway travel times using {{data provided by}} inductive loop detectors. These point detectors typically report only aggregated values of volume, lane occupancy, and time-mean-speed at relatively short <b>polling</b> <b>intervals.</b> Travel time estimation methods that assume speeds measured at points are representative of actual travel speeds over segments of roadway are called extrapolation methods. While the literature indicates that extrapolation methods {{should not be used}} during congested traffic conditions, little research has been completed to quantify the nature of the specific estimation errors. Meanwhile, travel times estimated and predicted using these methods continue to be disseminated in real-time to motorists along major freeways in several large U. S. cities. The goals of this research are to examine the prevailing issues that reduce the accuracy of extrapolation-based travel time estimation methods and to quantify the errors resulting from these driving implementation issues. First, the three primary sources of error that routinely threaten the accuracy of extrapolation methods are identified and criticall...|$|R
40|$|Due to an {{increasing}} number of public and private access points in indoor and urban environments, Wi-Fi positioning becomes more and more attractive for pedestrian navigation. In the last ten years different approaches and solutions have been developed. But Wi-Fi hardware and network protocols have not been designed for positioning. Therefore, Wi-Fi devices have different hardware characteristics that lead to different positioning accuracies. In this article we analyze and discuss hardware characteristics of Wi-Fi devices with a focus on the so called Wi-Fi fingerprinting technique for positioning. The analysis is based on measurements collected using a static setup in an anechoic chamber to minimize signal reflections and noise. Characteristics like measurement offsets and practical <b>polling</b> <b>intervals</b> of different mobile devices have been examined. Based on this analysis a calibration approach to compensate the measurement offsets of Wi-Fi devices is proposed. Experimen tal results in a typically office building are presented to evaluate the improvement in localization accuracy using the calibration approach...|$|R
40|$|Abstract: Many map {{matching}} algorithms {{have been developed}} to match GPS points to a digital map in previous studies. But the previous studies assume short polling time intervals(about 1 second) of the GPS data. And the {{map matching}} algorithms of such studies are not appropriate for the GPS data with relatively long polling time intervals(about 2 ~ 5 minutes). In this paper, we will review the previous map matching algorithms and discuss the map matching algorithms which can be used under circumstances of relatively long <b>polling</b> time <b>intervals...</b>|$|R
30|$|The {{numbers of}} {{simulators}} were varied between 1 and 800, with a polling rate of 1 millisecond. Typically SCADA systems are setup with a slower <b>polling</b> <b>interval</b> of seconds, but {{with thousands of}} sensors. A polling rate of 1 millisecond was deliberately chosen to put more load on the system, in order to adjust {{for the number of}} sensors.|$|E
30|$|The {{behavior}} of the proposed algorithm was analyzed {{in an environment where}} various MCSs were used and also in an environment where only one MCS was used. Simulations reveal that the proposed algorithm is efficient in both environments, minimizing the average delay according to the MCSs used in the PHY. This algorithm also interacts with the polling mechanism, adapting the <b>polling</b> <b>interval,</b> and guaranteeing the minimal bandwidth to the real-time and non-real-time applications.|$|E
30|$|For the {{admission}} control in HCCA mode, the accepted flow has been granted by QAP {{based on current}} available resources and requested information from QSTA's flow: mean data rate, mean MSDU size, maximum MSDU size, maximum service interval (SI), and physical data rate. QAP maintains a polling list according to the accepted flows. Each flow will receive a fixed TXOP (transmission opportunity) duration for transmission in each <b>polling</b> <b>interval,</b> granted by QAP.|$|E
40|$|In this paper, the {{analysis}} of the dynamic characteristics of an on-line real-time software system is described. An on-line real-time computer system on some assumptions is proposed, and the relation between the message processing and the system performance is analyzed. The multi-thread method is introduced in the on-line system, where the disc device is mainly used. The message processing programs are controlled by the monitor, CCP (Communicaton Control Program), and an on-line control program. The message processed by the message processing program is classified into three types, i. e. the simple response message, the compound response message, and the branch response message. The model is simulated in detail by GPSS/ 60. The main objects of this paper are (1) to be helpful to the system construction, (2) to be applicable to the modification of the proposed model flexibly, and (3) to be applicable to many job scheduling methods. Therefore it is clear that we can assign the priority, the routine to be usable or to be reusable, and that we can decide the <b>polling</b> <b>intervals</b> and the overlay structure in this model. The simulation program was executed by FACOM 230 - 60,through which we have affirmed that the simulation is accurate and practical. Finally we found that the modeling of an on-line real-time computer system for GPSS/ 60 improved the system performance...|$|R
40|$|One of {{the most}} {{influencing}} factors on the overall end-user perceived quality from applications and services, i. e., QoE, running on the smartphones is their limited battery life. Particular cloud-based applications/services on the smartphone with a constrained battery life might consume high energy even when the smartphone is in screen-OFF state. The cellular radio module of the smartphone is one {{of the most}} power-consuming components, which depends on the running applications' information polling characteristics that eventually cause the radio module to toggle occasionally between the cellular data energy states even during a sleep state. In this paper, we investigate the energy consumption of a set of applications that tend to retain up-to-date information via aggressive polling patterns. We show that limiting the network traffic and increasing the resource utilization efficiency amongst the applications and services can highly reduce the total energy consumption. We control the network activity of a smartphone with different cellular data-enabled and data-disabled durations at the screen-OFF state. First, we run controlled-lab energy measurements to have a ground truth on the power consumption patterns of a set of cloud-based popular applications/services; and next we conduct a subjective study with our proposed solution (ExpCO 2), to understand first the user behaviour on the smartphone and then present how the reduced <b>polling</b> <b>intervals</b> of applications and notifications influence the end-user perceived quality. We indicate that ExpCO 2 has a potential to save energy...|$|R
40|$|It is a {{well-known}} issue that the polling I/O, such as select() and poll(), has a poor scalability. As a so-lution of the problem, we previously proposed the inter-val control technique of the polling I/O, which eases exces-sively frequent invocations of the polling I/O [1]. Although the benchmark tests proved that the technique effectively reduced the service latency, it still has a problem of high processor usage {{when the number of}} concurrent sockets grows large. This problem is caused by unexpected context switches, which degrade the efficacy of the interval control. In this paper, we propose the interval control technique with POSIX real-time scheduling that prevents such unexpected interruptions. Because programs under real-time schedul-ing are difficult to develop and they often cause a system-wide freeze, simple application of real-time scheduling to the interval control mechanism is considered. KEY WORDS <b>polling</b> I/O, <b>interval</b> control, real-time scheduling, select(), poll(), server performance...|$|R
3000|$|The minimum {{bandwidth}} {{is defined}} by the MinimumReservedTrafficRate variable, which expresses the minimal data rate value in bps and is used as a threshold. In each frame, the algorithm stores the amount of bandwidth received for each connection (lines 7 and 25), and verifies, using the QoSMonitoring (...) module, if the minimum bandwidth of the rtPS and nrtPS services is within the predefined limits (lines 36 and 41). If so, the BS maintains the initial configuration. This means that the priority of the connections does not change. However, if not, the BS will execute the Adjust_periodicity_polling (...) method, aiming at keeping the minimum bandwidth. This method will increase the priority of the connection among the other connections at the same service class and will decrease the <b>polling</b> <b>interval</b> of the connection. It is important to see (lines 56 - 59) that the <b>polling</b> <b>interval</b> of the nrtPS connections will be decreased only if the average delay of the rtPS connections is within predefined limits. Otherwise, only the priority of the connection will be changed. The estimated delay is calculated by QoSMonitoring (...) module (line 35). As it can be seen (lines 23 - 27), the nrtPS scheduling algorithm is simpler than rtPS scheduling algorithm, because this service class does not have temporal restriction.|$|E
40|$|Abstract. We {{developed}} the first prototype toward a Japanese Virtual Observatory (JVO) {{by using the}} Globus Tool Kit 2 (GTK 2). We found that the system worked as we had expected, including the functionality of JVO Query Language. However, it took a very long to initiate each Grid process. Thus we replaced the GTK 2 with a tool distributed by NSF Middleware Initiative, and shortened the <b>polling</b> <b>interval</b> of the jobmanager from 30 seconds to 3 seconds. As a result, the serious problem was partially resolved, and the elapsed time for a query reduced to {{about half of the}} previous one. 1...|$|E
40|$|Abstract-This paper {{presents}} a novel {{dynamic bandwidth allocation}} (DBA) scheme, called SLICT, for service level agreeable EPON. To guarantee the upper bound of maximum <b>polling</b> <b>interval,</b> we introduce sliding cycle time constraint. A new concept of shared time and remnant time {{is used to calculate}} extended bandwidth allocation. For service level agreeable EPON, we propose a design method to support multiple services such as fixed, guaranteed and extended bandwidth service. We show that simple remnant time management based on greedy contention guarantees steady state fairness. Simulation results show that proposed scheme outperforms existing schemes in aspects of throughput, delay, loss, and average queue size under self similar traffic. Keywords- EPON, DBA, sliding cycle time, remnant time management, multi-service capabilit...|$|E
40|$|Efficient {{management}} {{of a road}} network requires continuous decision-making based on conditions on the network {{and an understanding of}} the impacts of the decisions made. These conditions are usually measured with fixed-point surveillance systems, most of which are deployed in such a manner as to require communication links that are always connected and are <b>polled</b> at regular <b>intervals.</b> All of the sensor data are typically sent to a Traffic Management Center (TMC) for assessment, yet most of the time no action is taken in response to the data, leading to unnecessarily high communication costs. ...|$|R
40|$|The polled locus {{has been}} mapped by genetic linkage {{analysis}} to the proximal region of bovine chromosome 1. As an intermediate step in {{our efforts to}} identify the polled locus and the underlying causative mutation for the polled phenotype, we have constructed a BAC-based physical map of the <b>interval</b> containing the <b>polled</b> locus. Clones containing genes and markers in the critical interval were isolated from the TAMBT (constructed from Angus and Longhorn genomic DNA) and CHORI- 240 (constructed from horned Hereford genomic DNA) BAC libraries and ordered based on fingerprinting and {{the presence or absence}} of 80 STS markers. A single contig spanning 2. 5 Mb was assembled. Comparison of the physical order of STSs to the corresponding region of human chromosome 21 revealed the same order of genes within the <b>polled</b> critical <b>interval.</b> This contig of overlapping BAC clones from horned and polled breeds is a useful resource for SNP discovery and characterization of positional candidate genes. Peer reviewe...|$|R
30|$|In the uplink scheduling, the BS {{makes the}} {{allocation}} {{decisions based on}} the bandwidth requests from the SS and the associated QoS parameters. Thus, {{it is important to}} take into account the polling mechanisms and also the scheduling mechanisms to guarantee the QoS for the applications. However, most of the previous studies [20 – 23] take into account only the scheduling mechanisms. The scheduling algorithm proposed in this study differs from these previous studies mainly because it interacts with the polling mechanisms aiming at adjusting the <b>interval</b> <b>polling</b> dynamically, and then to guarantee the QoS requirements to the real-time and non-real-time applications.|$|R
40|$|I {{describe}} the statistical considerations used to design systems whose clocks are compared {{by the use}} of dial-up telephone lines or the Internet to exchange timing information. The comparison is usually used to synchronize the time of a client system to the time of a server, which is, in turn, synchronized to the time scale of a national timing laboratory. The design includes a dynamic estimate of the system performance and a comparison between the performance and a parameter that specifies the required stability based on external considerations. The algorithm adjusts the <b>polling</b> <b>interval</b> and other parameters of the algorithm to realize the specified performance at minimal cost, where the cost is taken to be proportional to the inverse of the interval between message exchanges using either the Internet or dial-up telephone calls...|$|E
40|$|Abstract — In {{this paper}} we propose polling based uplink {{scheduling}} schemes for TCP based applications in a multipointto-point fixed broadband IEEE 802. 16 network. Our schemes adapt the transmission rates between Subscriber Stations (SSs) and the Base Station (BS) dynamically using adaptive modulation. We ensure fairness among the SSs via a credit-based approach in which an SS that misses a chance to transmit due to bad channel gets more weightage when the channel favors scheduling. We also propose a method to compute an optimal <b>polling</b> <b>interval</b> that aims to maximize slot utilization and TCP throughput. We demonstrate through exhaustive simulations that the proposed schedulers maximize link utilization, provide long-term fairness and minimize contraction of TCP congestion window. Implementation of the proposed schemes requires a cross-layer based feedback protocol stack at the BS and SSs. I...|$|E
30|$|Adaption of {{event-driven}} protocols for {{cloud based}} SCADA systems {{would require the}} use of smart sensors that would be able to respond to requests made by the cloud. The complexity of these field devices means that simulators are not readily available. Polling protocols are based on timers transfer the same amount of data every <b>polling</b> <b>interval.</b> When working with event driven simulators, the amount of data being transferred would change depending on the registered events (which is depended {{on the size of the}} system and application). For this reason experiments with event driven protocols must include the simulation of realistic datasets, and ideally under different applications and scenarios. Future work would extend the experimental methodology to event driven protocols, which would require the collection of datasets from large scale SCADA installations and the development of simulators which would playback these datasets.|$|E
30|$|In this article, an {{efficient}} scheduling algorithm {{and a new}} adaptive polling scheme for uplink traffic in WiMAX networks were proposed. The algorithm uses a new deadlines-based scheme defined to the real-time applications and uses a cross-layer approach. The deadlines calculation is made using {{the information about the}} MCSs in the PHY and the information about the BW-REQ messages sent by the SSs to the BS. Moreover, the algorithm interacts with the polling mechanisms of BS to control the periodicity of sending unicast polling to the rtPS and nrtPS service classes. Thus, the <b>interval</b> <b>polling</b> is adjusted dynamically.|$|R
40|$|The {{variety of}} Bluetooth {{applications}} has increased greatly in recent times. The energy consumption in such applications {{has emerged as}} an important problem. The research presented in this dissertation investigates the low power operations of current Bluetooth Basic Rate/Enhance Data Rate (BR/EDR) technology and explores several novel power saving optimization approaches for applications. In order to manage power consumption in these applications, certain features in Bluetooth BR/EDR are provided to allow low-power operations, e. g. using various operation modes and packet handling processes. As such, the research focuses on Bluetooth BR/EDR technology and improving power consumption by a packet transmission e ciency protocol and optimizing design of new operation modes. Firstly, a Packet Reassembly and Segmentation Protocol (P-RASP) in the Bluetooth baseband is proposed to operate during the idle/sleep interval duration in Bluetooth controllers. The protocol will re-assemble small host controller interface (HCI) data packets in the transmit bu ers to a larger one, so that the BT link manager can assemble a larger baseband packet type with full payload. Secondly, the research proposes a new strategy for reducing power consumption by improving the polling operation. The new approach uses a set of three di erent <b>polling</b> <b>intervals</b> in the Bluetooth BR/EDR controllers, whereby the controllers can choose the intervals and link state transfers from active to idle adaptively based on a common algorithm. The simulation results show this approach has very low average end-to-end packet delay and is easier and more exible in setting the parameters than Sni mode. Given the common algorithm or state-transition rules, a system model was established based on the Hidden Markov Model (HMM). The analysis shows the HMM can be a common model to analyze state-transition issues and be used to design and develop more e cient low power modes for Bluetooth in the future. The corresponding HMM utilization can be applied for the established system model. Finally, the design employs a M/G(M/M) / 1 /N queueing model and proposes a cross-layer approach to transmit data with the Hold mode in a low rate Bluetooth- based Medical Body Area Network. By using the proposed approaches and protocols above, the power consumption in Bluetooth can be signi cantly reduced. The results of this research may aid research and development teams to model, analyze and design a new operation mode to optimize power saving and improve e ciency for special Bluetooth applications...|$|R
40|$|Understanding {{the spatial}} {{distribution}} {{and intensity of}} fishing activity {{is a prerequisite for}} estimating fishing impacts on seabed biota and habitats. Vessel monitoring system data provide information on fishing activity at large spatial scales. However, successive position records can be too infrequent to describe the complex movements fishing vessels make. High-frequency position data were collected to evaluate how polling frequency and the method of analysis influenced the estimates of fishing impact on the seabed and associated epifaunal communities. Comparisons of known positions with predictions from track interpolation revealed that the performance of interpolation depended on fleet behaviour. Descriptions and indicators of fishing intensity were influenced significantly by the analytical methods (track reconstruction, density of position records) and grid-cell resolution used for the analysis. These factors can lead to an underestimation of fishing impact on epifaunal communities. It is necessary to correct for such errors to quantify the effects of fishing on various ecosystem components and hence to inform ecosystem-based management. <b>Polling</b> at <b>intervals</b> of 30 min would provide a desirable compromise between achieving precise estimates of fishing impacts on the seabed and minimizing the cost of data collection and handling...|$|R
