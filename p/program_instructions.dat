160|2091|Public
5|$|Each 32-bit word of RAM could contain {{either a}} program {{instruction}} or data. In a program instruction, bits 0–12 represented the memory {{address of the}} operand to be used, and bits 13–15 specified the operation to be executed, such as storing a number in memory; the remaining 16bits were unused. The SSEM's single operand architecture meant that the second operand of any operation was implicit: the accumulator or the program counter (instruction address); <b>program</b> <b>instructions</b> specified only {{the address of the}} data in memory.|$|E
5|$|The machine's most {{significant}} innovation {{is generally considered}} to be its incorporation of index registers, commonplace on modern computers. The SSEM had included two registers, implemented as Williams tubes: the accumulator (A) and the program counter (C). As A and C had already been assigned, the tube holding the two index registers, originally known as B-lines, was given the name B. The contents of the registers could be used to modify <b>program</b> <b>instructions,</b> allowing convenient iteration through an array of numbers stored in memory. The Mark 1 also had a fourth tube, (M), to hold the multiplicand and multiplier for a multiplication operation.|$|E
25|$|Random-access {{memory is}} used to store both <b>program</b> <b>instructions</b> and data. Typically, both need {{to be present in}} memory in order for a program to execute. Often {{multiple}} programs will want access to memory, frequently demanding more memory than the computer has available. The kernel is responsible for deciding which memory each process can use, and determining what to do when not enough memory is available.|$|E
40|$|Includes bibliographical {{references}} (pages 39 - 42) The {{purpose of}} this research project was to develop and test {{the effectiveness of a}} <b>programmed</b> <b>instruction</b> for diabetic diets. Subjects used in the study included 20 patients placed on a diabetic diet by their physicians. The <b>programmed</b> <b>instruction</b> was a 90 frame linear type. A pretest was given prior to the completion of the <b>programmed</b> <b>instruction.</b> The post-test was similar in content to the pretest and was given upon completion of the program. Results from the study showed a significant increase in knowledge of diabetic diets after completion of the <b>programmed</b> <b>instruction.</b> Therefore, it was concluded that <b>programmed</b> <b>instruction</b> is an effective educational tool for diabetic patients. <b>Programmed</b> <b>instruction</b> should not be used as the only means of instruction for diabetic diets...|$|R
40|$|Web-based {{software}} {{was used to}} deliver and record the effects of <b>programmed</b> <b>instruction</b> that progressively added formal prompts until attempts were successful, <b>programmed</b> <b>instruction</b> with one attempt, and prose tutorials. Error-contingent progressive prompting took significantly longer than <b>programmed</b> <b>instruction</b> and prose. Both forms of <b>programmed</b> <b>instruction</b> substantially increased the appropriate use of behavioral vocabulary during subsequent interpretive essays. These behavioral gains extended to a different setting, suggesting that more was being learned than simply how to answer programmed tutorial frames correctly...|$|R
40|$|The article: <b>Programmed</b> <b>Instruction,</b> The Contribution of Skinner and Crowder {{discusses}} {{exactly what}} is meant by the term <b>Programmed</b> <b>Instruction,</b> and the contribution made by Skinner and Crowder in particular are analysed. Recent developments in this field are looked at and the conclusion is drawn that the full potential of <b>Programmed</b> <b>Instruction</b> has not nearly been realised and that much still has to be accomplished in this field...|$|R
500|$|The SSEM's 32-bit {{word length}} was {{increased}} to 40 bits. Each word could hold either one 40-bit number or two 20-bit <b>program</b> <b>instructions.</b> The main store initially {{consisted of two}} double-density Williams tubes, each holding two arrays of 32 x 40-bit words– known as pages– backed up by a magnetic drum capable of storing an additional 32 pages. [...] The capacity was increased in the Final Specification version to eight pages of main store on four Williams tubes and 128 magnetic drum pages of backing store. The [...] diameter drum, initially known as a magnetic wheel, contained a series of parallel magnetic tracks around its surface, {{each with its own}} read/write head. Each track held 2,560bits, corresponding to twopages (2×32×40bits). One revolution of the drum took 30milliseconds, during which time both pages could be transferred to the CRT main memory, although the actual data transfer time depended on the latency, the time it took for a page to arrive under the read/write head. Writing pages to the drum took about twice as long as reading. The drum's rotational speed was synchronised to the main central processor clock, which allowed for additional drums to be added. Data was recorded onto the drum using a phase modulation technique still known today as Manchester coding.|$|E
2500|$|Elgot-Robinson {{investigate}} {{the possibility of}} allowing their RASP model to [...] "self modify" [...] its <b>program</b> <b>instructions.</b> The idea was an old one, proposed by Burks-Goldstine-von Neumann (1946-7), and sometimes called [...] "the computed goto." [...] Melzak (1961) specifically mentions the [...] "computed goto" [...] by name but instead provides his model with indirect addressing.|$|E
2500|$|IBM {{introduced}} a smaller, more affordable computer in 1954 that proved very popular. The IBM 650 weighed over 900kg, the attached power supply weighed around 1350kg {{and both were}} held in separate cabinets of roughly 1.5 meters by 0.9 meters by 1.8 meters. It cost US$500,000 ($ as of [...] ) or could be leased for US$3,500 a month ($ as of [...] ). Its drum memory was originally 2,000 ten-digit words, later expanded to 4,000 words. [...] Memory limitations such as this were to dominate programming for decades afterward. [...] The <b>program</b> <b>instructions</b> were fetched from the spinning drum as the code ran. [...] Efficient execution using drum memory was provided {{by a combination of}} hardware architecture: the instruction format included the address of the next instruction; and software: the Symbolic Optimal Assembly Program, SOAP, assigned instructions to the optimal addresses (to the extent possible by static analysis of the source program). Thus many instructions were, when needed, located in the next row of the drum to be read and additional wait time for drum rotation was not required.|$|E
2500|$|Computed goto: A RASP <b>program</b> of <b>instructions</b> that modifies the [...] "goto address" [...] in a conditional- or unconditional-jump <b>program</b> <b>instruction.</b>|$|R
40|$|The {{purpose of}} this paper is to propose some new <b>programmed</b> <b>instruction</b> {{techniques}} that appear to be superior to those used in the past. The idea of <b>programmed</b> <b>instruction</b> was originally advanced by B. F. Skinner (Skinner, 1954), and the first practical implementation of <b>programmed</b> <b>instruction</b> to train people was achieved in 1960 by Basic Systems, Inc. In the early 1960 s, the proponents of <b>programmed</b> <b>instruction,</b> including Skinner, defined <b>programmed</b> <b>instruction</b> as using (1) active response by the learner; (2) immediate reinforcement of correct responses; and (3) successive approximations towards the knowledge to be learned, in a sequence of steps so small that the learner can take each one with little difficulty. Skinner stated, from the start, that in order for <b>programmed</b> <b>instruction</b> to work well it is important to prevent the learner from seeing the correct answer before making his own response, and that to accomplish this, a teaching machine is necessary (Skinner, 1958). But I doubted this, and so in 1959 I developed an elementary algebra program to demonstrate that <b>programmed</b> <b>instruction</b> material presented without the use of a machine is adequate and more practical. I believed that if the steps of the program were properly designed and of the right size, the learner could be relied upon to keep the correct answer covered and out of view until he had committed himself. By 1961 this viewpoint had become widel...|$|R
2500|$|A RASP or Random access {{stored program}} machine {{begins as a}} counter machine with its [...] "program of instruction" [...] placed in its [...] "registers". Analogous to, but {{independent}} of, the finite state machine's [...] "Instruction Register", {{at least one of}} the registers (nicknamed the [...] "program counter" [...] (PC)) and one or more [...] "temporary" [...] registers maintain a record of, and operate on, the current instruction's number. The finite state machine's TABLE of instructions is responsible for (i) fetching the current <b>program</b> <b>instruction</b> from the proper register, (ii) parsing the <b>program</b> <b>instruction,</b> (iii) fetching operands specified by the <b>program</b> [...] <b>instruction,</b> and (iv) executing the <b>program</b> <b>instruction.</b>|$|R
50|$|A Program Store is {{dedicated}} to each CPU and is a memory for the <b>program</b> <b>instructions</b> required by that CPU for processing calls, maintenance and for administrative tasks. The PS associated with the other CPU contains identical <b>program</b> <b>instructions.</b>|$|E
50|$|<b>Program</b> <b>instructions</b> {{are stored}} in {{non-volatile}} flash memory. Although the MCUs are 8-bit, each instruction takes one or two 16-bit words.|$|E
50|$|Claim 2 {{generally}} mentions {{a computer}} readable medium containing <b>program</b> <b>instructions,</b> but mostly contains nearly identically the exact process described in Claim 3.|$|E
40|$|Includes bibliographical {{references}} (pages 47 - 49) The {{purpose of}} this study was to develop a written <b>programmed</b> <b>instruction</b> for low sodium diet patients. Testing was necessary to provide an objective measure of student learning. The subjects used in the study were twenty-six hospital inpatients and clinic outpatients who had been placed on low sodium diets by their physicians. The sample was not selected randomly. The <b>programmed</b> <b>instruction</b> was a sixty-eight frame linear type. The criterion test was a true-false type chosen for simplicity in answering and scoring. The pretest and post-test were not identical, but covered exactly the same content. The post-test was given immediately after the <b>programmed</b> <b>instruction.</b> Results of the study showed that there was a considerable increase in knowledge following <b>programmed</b> <b>instruction.</b> The mean post-test score showed an 85. 5 percent level of correctness. The mean change in scores between pretest and post-test was a gain of 20. 5 percent. The results compared favorably with reports in the literature on <b>programmed</b> diet <b>instruction.</b> It was concluded that this type of instruction could be used in teaching patients basic facts about low sodium diets. The dietitian should always follow up the <b>programmed</b> <b>instruction</b> with oral instruction...|$|R
40|$|<b>Programmed</b> <b>instruction</b> {{involves}} {{breaking down}} and providing information in small chunks called frames, asking frequent {{questions of the}} learner, requesting frequent answers, and providing immediate feedback on the correctness of the answers. With the recent widespread diffusion of inexpensive computers and their connection through the Internet, it has become possible to adapt <b>programmed</b> <b>instruction</b> {{to take advantage of}} modern personal computers and their communication capabilities. This paper describes an attempt to adapt <b>programmed</b> <b>instruction</b> to desktop computers using popular web browser software as the presentation medium and the built-in JavaScript programming language as the vehicle for making the <b>programmed</b> <b>instruction</b> interactive. By using the regular expression facility of JavaScript, it becomes possible to parse the answers given by students to ascertain their correctness and to provide helpful feedback to the students in cases where the answers are not correct. The Internet provides a convenient route for students to send a record of their use of <b>programmed</b> <b>instruction</b> back to the author, allowing the author to improve the design of the instruction on...|$|R
40|$|Includes bibliographical {{references}} (pages 44 - 50) The {{purpose of}} this study was to develop and test a written <b>programmed</b> <b>instruction</b> for cardiac rehabilitation diets. The <b>programmed</b> <b>instruction</b> included information about fat, cholesterol and sodium, as well as information on weight loss and cooking methods. The subjects used in the study were 30 patients who had suffered heart attacks and had not been instructed on a cardiac rehabilitation diet. The sample was not randomly selected. The <b>programmed</b> <b>instruction</b> was a 100 -frame linear program. A 50 -question, true-false pre-test was given prior to administration of the <b>programmed</b> <b>instruction.</b> The post-test, given after completion of the program, contained the same questions as the pre-test but the questions were presented in a different order. Results of the study showed that there was a significant increase in patients' knowledge about the cardiac rehabilitation diet after completion of the <b>programmed</b> <b>instruction.</b> The Student's "t" test was used to determine the significance of the difference between the mean of the pre-test scores and the mean of the post-test scores. The mean post-test score was 80 percent. The mean change in scores between the pre-test and the post-test was an improvement of 14 percent. It was concluded that the <b>programmed</b> <b>instruction</b> was an effective method for teaching patients about cardiac rehabilitation diets...|$|R
5000|$|... 4001: 256-byte ROM (256 8-bit <b>program</b> <b>instructions),</b> and one {{built-in}} 4-bit I/O port. A 4001 ROM+I/O chip {{cannot be}} used in a system along with a 4008/4009 pair.|$|E
50|$|A stored-program digital {{computer}} {{is one that}} keeps its <b>program</b> <b>instructions,</b> {{as well as its}} data, in read-write, random-access memory (RAM). Stored-program computers were an advancement over the program-controlled computers of the 1940s, such as the Colossus and the ENIAC, which were programmed by setting switches and inserting patch cables to route data and to control signals between various functional units. In the vast majority of modern computers, the same memory is used for both data and <b>program</b> <b>instructions,</b> and the von Neumann vs. Harvard distinction applies to the cache architecture, not the main memory (split cache architecture).|$|E
50|$|A stored-program {{computer}} {{is one that}} stores <b>program</b> <b>instructions</b> in electronic memory. Often the definition is extended with the requirement that the treatment of programs and data in memory be interchangeable or uniform.|$|E
40|$|The aims of {{this project}} include the study and use of <b>programmed</b> <b>instruction</b> {{as a means of}} {{explaining}} to Telfarm cooperators the functions of the Telfarm system with emphasis on the proper methods of recording input data. Unfortunately, time will not allow me to study the effects of <b>programmed</b> <b>instruction</b> on Telfarm cooperators {{in order to have a}} better estimate of its usefulness in this type of situation. But, I will present the need for a change in the present method of instruction and will exhibit the potential available through use of <b>programmed</b> <b>instruction.</b> Agricultural Finance,...|$|R
50|$|The idea {{of mastery}} {{learning}} resurfaced {{in the late}} 1950s and early 1960s {{as a corollary of}} <b>programmed</b> <b>instruction,</b> a technology invented by B.F. Skinner to improve teaching. Underlying <b>programmed</b> <b>instruction</b> was the idea that the learning of any behavior, no matter how complex, rested upon the learning of a sequence of less-complex component behaviors.|$|R
40|$|Includes bibliographical {{references}} (pages 39 - 43) The {{purpose of}} this research was to develop and test the effectiveness of a written <b>programmed</b> <b>instruction</b> on renal diets. The subjects used in the study were twenty-two renal dialysis patients who had been placed on renal diets by their physicians. The sample was not selected randomly. The prograrrnned instruction was a 94 frame linear type. A pre-test was given prior to the completion of the <b>programmed</b> <b>instruction.</b> The identical test was given as a post-test following completion of the <b>programmed</b> <b>instruction.</b> Results of the study showed that there was {{a significant increase in the}} patients' basic knowledge about the renal diets after completion of the <b>programmed</b> <b>instruction.</b> The F test for analysis of variance was used to test the mean scores between pre-test and post-test for significance. The mean change in score between pre-test and post-test was 16...|$|R
50|$|In {{computer}} programming, a subroutine is {{a sequence}} of <b>program</b> <b>instructions</b> that perform a specific task, packaged as a unit. This unit can then be used in programs wherever that particular task should be performed.|$|E
50|$|The VAL {{language}} {{consists of}} monitor commands and program instructions.The monitor commands {{are used to}} prepare the system for execution of user-written programs. <b>Program</b> <b>instructions</b> provide the repertoire necessary to create VAL programs for controlling robot actions.|$|E
50|$|The <b>program</b> <b>instructions</b> {{written for}} {{embedded}} systems {{are referred to}} as firmware, and are stored in read-only memory or flash memory chips. They run with limited computer hardware resources: little memory, small or non-existent keyboard or screen.|$|E
40|$|Includes bibliographical {{references}} (pages 44 - 47) A {{review of}} the literature showed that there was a need for innovative teaching techniques in the area of nutrition education. It also showed that <b>programmed</b> <b>instruction</b> had been effective in nutrition education at various educational levels but apparently had not,been tried at the elementary school level. This project involved preparation of a 50 -frame linear <b>programmed</b> <b>instruction</b> booklet on carbohydrates, fats, and protein for the upper elementary school level. The booklet was tested with sixth grade private school students alone and with conventional instruction. The control group consisted of students who received only conventional instruction. The results showed that the students who received <b>programmed</b> <b>instruction</b> plus conventional instruction made the greatest gain in score between the pretest and post test scores. Use of <b>programmed</b> <b>instruction</b> is therefore recommended as a supplement to conventional instruction at the upper elementary school level...|$|R
40|$|Includes bibliographical {{references}} (pages 60 - 65) The current {{venereal disease}} epidemic attacks {{hundreds of people}} daily. Many of those afflicted with syphilis or gonorrhea have turned to the free clinics for treatment of these health problems. Until now, there have been limited educational efforts at the Los Angeles Free Clinic. This thesis proposed a multi-faceted venereal disease education program. In addition to conventional methods, a <b>programmed</b> <b>instruction</b> in venereal disease was developed and validated. This <b>programmed</b> <b>instruction</b> was designed to provide clinic volunteers with a teaching instrument which they can study at their own pace, without the assistance of an instructor. The venereal disease information that the volunteers learn from the <b>programmed</b> <b>instruction</b> prepares them to serve as health education aides. It was recommended that the <b>programmed</b> <b>instruction</b> be utilized {{as part of a}} program to train clinic volunteers to do individual venereal disease counseling...|$|R
40|$|Includes bibliographical {{references}} (pages 37 - 40) The {{purpose of}} this thesis {{was to develop a}} unique but effective programmed manual to help teach parents, pre-school teachers, student nurses, and other para-professionals in the health field about the early stages of infant development. While the presentation leans toward the behavioral school of child development, it cannot be characterized as favoring any particular school of psychology and it is eclectic in its scope and emphasis. <b>Program</b> <b>instruction</b> techniques were utilized in the preparation of this "Manual" because <b>programmed</b> <b>instruction</b> materials are self-teaching and self-evaluative. An instructor or classroom is not needed. Furthermore, <b>programmed</b> <b>instruction</b> materials enable the student to learn at his own pace. Developmental testing on eleven subjects was conducted to perfect the content and design of the programmed manual. A pre-test and a post-test were than conducted on a group sampled from the target population. Results of the pre-test and post-test show an average increment in scores between the pre-test and the post-test and an increase in knowledge. Statistical treatment showed that the scores of the group became significantly higher after three hours study of the <b>programmed</b> <b>instruction</b> manual. Subjects liked and approved of the <b>programmed</b> <b>instruction</b> manual especially when accompanied with visual aid (pictorial in this case). On the basis of the above findings, it is recommended that the nursing personnel in collaboration with nursery school staff use the <b>programmed</b> <b>instruction</b> technique in developing further programs in child development...|$|R
50|$|Similar {{procedures}} {{would be}} followed {{for any other}} type of call. In every case the MCU would decide, in accordance with its <b>program</b> <b>instructions,</b> what connection pattern was appropriate in the circumstances indicated and issue orders for setting the paths.|$|E
50|$|The {{execution}} process {{carries out}} {{the instructions in}} a computer <b>program.</b> <b>Instructions</b> express the computations performed by the computer. They trigger sequences of simple actions on the executing machine. Those actions produce effects according to the semantics of the instructions.|$|E
50|$|The {{instruction}} unit (IU) in {{a central}} processing unit (CPU) is responsible for organising <b>program</b> <b>instructions</b> to be fetched from memory, and executed, in an appropriate order. It {{is a part of}} the control unit, which in turn is part of the CPU.|$|E
40|$|The {{purpose of}} this study was to {{determine}} whether a social studies programmed instructional textbook plus teacher interaction produced positive, significant achievement and retention for low reading ability students at the grade six level. [...] The research experiment involved nine grade six classes within the Avalon Consolidated School Board and the Roman Catholic School Board of St. John's, Newfoundland. All students were administered a reading test, grades were computed an only low reading ability students were assigned to groups. [...] Three treatments, conventional teaching, <b>programmed</b> <b>instruction,</b> and <b>programmed</b> <b>instruction</b> plus teacher interaction, were utilized. Through the use of a Table of Random Selection (Glass and Stanley, 1970) the low reading ability groups were assigned to treatments. A 'Posttest Only Control Group' design was used to state the hypotheses. An analysis of covariance was conducted on the posttest and delayed posttest scores to test significant differences. The appropriate post-hoc test, Newman-Kuels (Winer, 1971), was used to test the significance of the difference between group means. [...] The results of the study indicated that the treatment group utilizing conventional teaching had significantly higher achievement and retention scores than the treatment group exposed to <b>programmed</b> <b>instruction</b> or the treatment group utilizing <b>programmed</b> <b>instruction</b> plus teacher interaction. The <b>programmed</b> <b>instruction</b> plus teacher interaction treatment group had significantly higher achievement scores on the posttest than the treatment group receiving <b>programmed</b> <b>instruction.</b> However, no significant differences existed between the retention scores of these two treatment groups...|$|R
5000|$|Target <b>program</b> <b>instruction</b> set: { INC h; DEC h; JZ h,xxx, HALT } ...|$|R
5000|$|... #Caption: Skinner's {{teaching}} machine, {{a mechanical}} device to control student progress in <b>programmed</b> <b>instruction</b> ...|$|R
