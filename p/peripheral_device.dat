191|824|Public
5|$|Pokémon Channel was {{developed}} by Nintendo subsidiary Ambrella and published by Nintendo and The Pokémon Company. It was created both {{to serve as a}} spiritual successor to Hey You, Pikachu!—a similar digital pet-type game wherein the player plays with a Pikachu—and to promote the Nintendo e-Reader <b>peripheral</b> <b>device.</b> The game included three e-Reader-compatible cards, but not the e-Reader device itself. When scanned, the cards upload new templates for the player to paint and for Smeargle to critique.|$|E
5|$|In 2010, the Kinect was {{released}} by Microsoft as a 3D scanner/webcam hybrid <b>peripheral</b> <b>device</b> which provides full-body detection of Xbox 360 players and hands-free control of the user interfaces of video games and other software on the console. This was later modified by Oliver Kreylos of University of California, Davis {{in a series of}} YouTube videos which showed him combining the Kinect with a PC-based virtual camera. Because the Kinect is capable of detecting a full range of depth (through computer stereo vision and Structured light) within a captured scene, Kreylos demonstrated the capacity of the Kinect and the virtual camera to allow free-viewpoint navigation of the range of depth, although the camera could only allow a video capture of the scene as shown {{to the front of the}} Kinect, resulting in fields of black, empty space where the camera was unable to capture video within the field of depth. Later, Kreylos demonstrated a further elaboration on the modification by combining the video streams of two Kinects in order to further enhance the video capture within the view of the virtual camera. Kreylos' developments using the Kinect were covered among the works of others in the Kinect hacking and homebrew community in a New York Times article.|$|E
25|$|A {{limitation}} of X terminals and most thin clients {{is that they}} are not capable of any input or output other than the keyboard, mouse, and display. All relevant data is assumed to exist solely on the remote server, and the X terminal user has no methods available to save or load data from a local <b>peripheral</b> <b>device.</b>|$|E
40|$|The {{object of}} investigation: the {{integral}} circuits on the PZS with the built-in <b>peripheral</b> <b>devices.</b> Given {{have been the}} results of the theoretical analysis of the accuracy of the spatial-time conversion of signals in PZS, confirmed by experiment theoretical model for evaluation of the thermal limitations of the matrix FPZS with the built-in <b>peripheral</b> <b>devices.</b> The library of the standard functional elements of the <b>peripheral</b> <b>devices</b> has been created, the display transmitter and the delay lines in PZS with the buil-in <b>peripheral</b> <b>devices</b> have been developed. The efficiency of the delay lines application in PZS in PAL/SECAM-decoders of coloring. The field of application: the development of the element base and measuring devices on the base of PZSAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
5000|$|Information technologies: computers, terminals, <b>peripheral</b> <b>devices,</b> components, consumables, audiovisuals, {{electronics}} ...|$|R
5000|$|Computers may {{transfer}} {{files to}} <b>peripheral</b> <b>devices</b> such as USB flash drives ...|$|R
25|$|Many second-generation CPUs {{delegated}} <b>peripheral</b> <b>device</b> communications to {{a secondary}} processor. For example, while the communication processor controlled card reading and punching, the main CPU executed calculations and binary branch instructions. One databus would bear data between the main CPU and core memory at the CPU's fetch-execute cycle rate, and other databusses would typically serve the peripheral devices. On the PDP-1, the core memory's cycle time was 5 microseconds; consequently most arithmetic instructions took 10 microseconds (100,000 operations per second) because most operations took {{at least two}} memory cycles; one for the instruction, one for the operand data fetch.|$|E
500|$|While {{attending}} university, Iwata {{worked for}} HAL Laboratory {{as a part-time}} programmer in 1980. Among their first creations was a <b>peripheral</b> <b>device</b> that enabled older computers to display graphics for video games. With this device, Iwata and members of HAL created multiple games that were [...] "straight rip-offs of Namco’s Rally-X, Galaxian, and others". Despite this, HAL became the first company to establish a license with Namco for developing games. He joined the company in a full-time capacity after graduating in 1982, becoming its fifth employee and only programmer. Around the same time, Iwata's father was elected mayor of Muroran. Despite his passion, Iwata's family did not approve of his career choice, and his father did not talk with him for six months after Iwata joined HAL.|$|E
500|$|SaGa Frontier 2 {{was first}} {{announced}} in a September 1998 issue of Japanese The PlayStation magazine, where Square claimed the game {{would be taking}} a stylistic departure from the original SaGa Frontier released one year earlier, as well as confirming the title's release for spring 1999. A representative from the company stated {{that they would be}} abandoning the CG full-motion videos and computer-style graphics of the previous title to focus on a more traditional, hand-drawn look. The game's art style was achieved by using hand-drawn and painted artwork produced on a canvas that would be scanned and digitized to produce the game's backgrounds and character sprites. [...] Many of the game's towns, locations, and characters draw heavily from medieval Germanic influence, with much of the story taking place within a fictional time-frame similar to the 13th century. New features not seen in the previous SaGa Frontier title include compatibility with the PlayStation's DualShock analog controller and PocketStation <b>peripheral</b> <b>device</b> for accessing additional content.|$|E
5000|$|... <b>peripheral</b> <b>devices</b> (teleprinters, {{punched tape}} reader/punchers, {{parallel}} printers and punched card readers).|$|R
50|$|These devices include {{personal}} computers and <b>peripheral</b> <b>devices,</b> and electrical ballasts for fluorescent lights.|$|R
5000|$|... 4468737 Circuit for {{extending}} a multiplexed address and data bus to distant <b>peripheral</b> <b>devices</b> ...|$|R
50|$|The SCSI {{protocol}} defines {{communication from}} host to host, host to a <b>peripheral</b> <b>device,</b> <b>peripheral</b> <b>device</b> to a <b>peripheral</b> <b>device.</b> However most peripheral devices are exclusively SCSI targets, incapable of acting as SCSI initiators—unable to initiate SCSI transactions themselves. Therefore, peripheral-to-peripheral communications are uncommon, but possible in most SCSI applications. The Symbios Logic 53C810 chip {{is an example}} of a PCI host interface that can act as a SCSI target.|$|E
50|$|For input or output, each {{peripheral}} processor accesses a <b>peripheral</b> <b>device</b> over a communication link called a data channel. One <b>peripheral</b> <b>device</b> can {{be connected to}} each data channel; however, a channel can be modified with hardware to service more than one device.|$|E
5000|$|<b>Peripheral</b> <b>device</b> {{configuration}} {{was fixed}} during boot time. Configuration {{changes were made}} using the [...] command.|$|E
5000|$|Zeidman, Robert M. “Use of {{hardware}} <b>peripheral</b> <b>devices</b> with software simulations,” U.S. Patent 8,195,442.|$|R
50|$|Protocols used by I/O {{channels}} {{to communicate with}} <b>peripheral</b> <b>devices</b> include ESCON and newer FICON.|$|R
50|$|A {{front end}} {{processor}} (FEP), or a communications processor, is a small-sized computer which interfaces to the host computer a number of networks, such as SNA, or a number of <b>peripheral</b> <b>devices,</b> such as terminals, disk units, printers and tape units. Data is transferred between the host computer and the {{front end processor}} using a high-speed parallel interface. The front end processor communicates with <b>peripheral</b> <b>devices</b> using slower serial interfaces, usually also through communication networks. The purpose is to off-load from the host computer the work of managing the <b>peripheral</b> <b>devices,</b> transmitting and receiving messages, packet assembly and disassembly, error detection, and error correction. Two examples are the IBM 3705 Communications Controller and the Burroughs Data Communications Processor.|$|R
5000|$|<b>Peripheral</b> <b>device</b> access: IN# and PR# (although IN without [...] "#" [...] {{is listed}} among {{reserved}} words) ...|$|E
5000|$|In modern {{personal}} computer, {{almost every}} <b>peripheral</b> <b>device</b> uses an adapter {{to communicate with}} system bus, for example: ...|$|E
50|$|The CPU then issues an RD {{signal to}} read {{the data from the}} {{external}} <b>peripheral</b> <b>device</b> via the system data bus.|$|E
5000|$|... 6: The model {{within the}} generation. This {{indicates}} {{the mixture of}} on-board <b>peripheral</b> <b>devices</b> and number of pins.|$|R
50|$|Many IBM <b>peripheral</b> <b>devices</b> {{that were}} part of System/360, but were adapted from second-generation designs, {{continued}} to use SMS circuitry instead of the newer SLT. These included the 240x-series tape drives and controllers, the 2540 card reader/punch and 1403N1 printer, and the 2821 Integrated Control Unit for the 1403 and 2540. A few SMS cards used in System/360 <b>peripheral</b> <b>devices</b> even had SLT-type hybrid ICs mounted on them.|$|R
40|$|A modular and {{reconfigurable}} {{embedded computer}} system for designing and prototyping electronic musical interfaces is presented. The system {{is based on an}} ARM 7 microcontroller that configures <b>peripheral</b> <b>devices,</b> collates input signals, and processes/synthesizes audio. <b>Peripheral</b> <b>devices,</b> each equipped with its own processor, are fully reconfigurable enabling processing and conversion of both analog and digital signals. Communication between the ARM and the <b>peripheral</b> <b>devices</b> is accomplished using the I 2 C protocol, allowing for multi-master-slave operation. Although the system operates without the use of a personal computer, a serial interface was implemented to facilitate prototyping with a computer terminal running a text or graphicsbased user interface. Applications for this platform include a standalone electronic musical instrument and an augmented acoustic trumpet. 1...|$|R
50|$|Chip Support Package (CSP) is a {{software}} set that contains chip-specific software. A CSP usually includes <b>peripheral</b> <b>device</b> drivers and definition files.|$|E
50|$|A stick PC can be {{connected}} to a <b>peripheral</b> <b>device</b> such as a monitor, TV, or kiosk display to produce visual or audio output.|$|E
50|$|While bus {{mastering}} theoretically {{allows one}} <b>peripheral</b> <b>device</b> to directly communicate with another, in practice almost all peripherals master the bus exclusively to perform DMA to main memory.|$|E
30|$|Moreover, the learners’ {{engagement}} can {{be strengthened}} through low-cost <b>peripheral</b> <b>devices</b> such as headphones, smart glasses and data gloves.|$|R
50|$|Various {{aftermarket}} USB or Bluetooth <b>peripheral</b> <b>devices,</b> such as keyboards {{and mice}} can {{be connected to}} the Surface 3.|$|R
5000|$|Microcontrollers {{integrate}} {{a microprocessor}} with <b>peripheral</b> <b>devices</b> in embedded systems. These {{tend to have}} different tradeoffs compared to CPUs.|$|R
50|$|To {{carry out}} an input, output or memory-to-memory operation, the host {{processor}} initializes the DMA controller with a count {{of the number of}} words to transfer, and the memory address to use. The CPU then sends commands to a <b>peripheral</b> <b>device</b> to initiate transfer of data. The DMA controller then provides addresses and read/write control lines to the system memory. Each time a byte of data is ready to be transferred between the <b>peripheral</b> <b>device</b> and memory, the DMA controller increments its internal address register until the full block of data is transferred.|$|E
5000|$|A SCSI <b>Peripheral</b> <b>Device</b> Type {{describes}} the capabilities {{provided by a}} SCSI device. It is a five-bit field in the first byte returned {{in response to an}} Inquiry Command.|$|E
50|$|CPU then {{issues a}} WR signal to write {{data to the}} {{selected}} port via the system data bus. This data is then received by the external <b>peripheral</b> <b>device</b> connected to the selected port.|$|E
2500|$|Full USB 3.0 {{support for}} faster {{connections}} to <b>peripheral</b> <b>devices</b> for Virtual Machines starting from Parallels Desktop 8.0.18305 (see http://kb.parallels.com/en/115008) ...|$|R
5000|$|Embedded system {{implementations}} {{intended for}} use in devices where resources are limited and demands are lower, such as Bluetooth <b>peripheral</b> <b>devices.</b>|$|R
25|$|A {{number of}} <b>peripheral</b> <b>devices</b> and {{software}} packages were released for the Famicom. Few {{of these devices}} were ever released outside Japan.|$|R
