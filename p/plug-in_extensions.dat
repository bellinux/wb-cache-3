11|56|Public
50|$|Many work places, {{schools and}} colleges {{restrict}} the web sites and online services that are accessible and available in their buildings. Governments also censor undesirable content. This is done either with a specialized proxy, called a content filter (both commercial and free products are available), or by using a cache-extension protocol such as ICAP, that allows <b>plug-in</b> <b>extensions</b> to an open caching architecture.|$|E
5000|$|TeamPage Winter 2016 release [...] adds {{numerous}} {{improvements to}} support new business process, quality management, daily report, and other <b>plug-in</b> <b>extensions.</b> Other highlights include finer grained {{control over what}} events appear in Personal Calendars; New [...] "Assigned to Me" [...] and [...] "Notify Me" [...] filter options for Task lists and other views; {{an updated version of}} the TinyMCE rich text editor; support for SHA-2 algorithms for Certificate Signing Requests (CSRs); automatic backup of the Managed Trust Store before certificates or keys are removed or replaced; and a new [...] "Indexing Mode" [...] setting for TeamPage's Premium Search module that offers administrators a single point of control over how TeamPage tracks and dispatches new and updated documents to an external search engine index. This release also includes new user experience and performance improvements, bug fixes, extensions of the TeamPage SDK, and architectural enhancements to extend the capabilities of the TeamPage platform.|$|E
40|$|This report {{develops}} a queueing-theoretic solution to predict, for a real-time system, the average-case latency of aperiodic tasks managed by a sporadic server. The report applies this theory to a model problem drawn {{in the domain}} of industrial robot control. In this model problem, a controller with hard periodic deadlines is 2 ̆ 2 open 2 ̆ 2 to third-party <b>plug-in</b> <b>extensions.</b> The sporadic server is used to limit the invasiveness of aperiodic tasks on the controller 2 ̆ 7 s hard deadlines. The theory developed in this report is used to predict the average-case latency of a plug-in managed by a sporadic server...|$|E
50|$|Some applications, such as GIMP, and {{software}} with additional functionality from <b>plug-ins,</b> use <b>extensions</b> or add-ons which are downloaded {{separately from the}} main application. These can be created by either the software developer or by third party developers. <b>Plug-ins,</b> <b>extensions,</b> and add-ons add extra functionality which might have otherwise been packaged in the main program.|$|R
50|$|Modern {{operating}} systems support extensibility through device drivers and loadable kernel modules.Many modern applications support extensibility through <b>plug-ins,</b> <b>extension</b> languages, applets, etc.The trend of increasing extensibility negatively affects software security.|$|R
50|$|Unofficial {{playback}} of SACD disc {{images on}} a PC is possible through freeware audio player foobar2000 for Windows using an open source <b>plug-in</b> <b>extension</b> called SACDDecoder. Mac OS X music software Audirvana also supports playback of SACD disc images.|$|R
40|$|Abstract. A key early {{objective}} of Active Networking (AN) was to support on-the-fly network evolution. Although AN {{has been used}} relatively extensively to build application-customized protocols and even whole networking systems, demonstrations of evolution have been limited. This paper examines three AN mechanisms and how they enable evolution: active packets and <b>plug-in</b> <b>extensions,</b> well-known to the AN community, and update extensions, which are novel to AN. We devote our presentation {{to a series of}} demonstrations of how each type of evolution {{can be applied to the}} problem of adding support for mobility to a network. This represents the most large-scale demonstration of AN evolution to date. These demonstrations show what previous AN research has not: that AN technology can, in fact, support very significant changes to the network, even while the network is operational. ...|$|E
40|$|Abstract. GYOTO, {{a general}} {{relativistic}} ray-tracing code, is presented. It aims at computing images of astronomical {{bodies in the}} vicinity of compact objects, as well as trajectories of massive bodies in relativistic environments. This code is capable of integrating the null and timelike geodesic equations not only in the Kerr metric, but also in any metric computed numerically within the 3 + 1 formalism of general relativity. Simulated images and spectra have been computed for a variety of astronomical targets, such as a moving star or a toroidal accretion structure. The underlying code is open source and freely available. It is user-friendly, quickly handled and very modular so that extensions are easy to integrate. Custom analytical metrics and astronomical targets can be implemented in C++ <b>plug-in</b> <b>extensions</b> independent from the main code...|$|E
40|$|Diagram-centric {{applications}} such as software design tools, project planning tools and business process modelling tools are usually ‘thick-client’ applications running as stand-alone desktop applications. There are several advantages to providing such design tools as Web-based or even PDA- and mobile-phone-based applications. These include ease of access and upgrade, provision of collaborative work support and Web-based integration with other applications. However, building such thin-client diagram editing tools is very challenging. We have developed several thin-client diagram editing applications realized {{as a set of}} <b>plug-in</b> <b>extensions</b> to a meta-tool for visual design environment development. In this paper, we discuss key user interaction and software architecture issues, illustrate examples of interacting with our thin-client diagram editing tools, describe our design and implementation approaches, and present the results of several different evaluations of the resultant applications. Our experiences will be useful for those interested in developing their own thin-client diagram editing architectures and applications...|$|E
2500|$|Unofficial {{playback}} of DVD-Audio on a PC {{is possible}} through freeware audio player foobar2000 for Windows using an open source <b>plug-in</b> <b>extension</b> called DVDADecoder. VLC media player has DVD-Audio support Cyberlink's PowerDVD Version 8 provides an official method of playing DVD-Audio discs. [...] This feature was dropped from version 9 onwards. Creative {{also provide a}} dedicated DVD-Audio player with some of its Soundblaster Audigy and X-Fi cards.|$|R
50|$|When ADSL {{was first}} {{introduced}} in the UK it was installed by an engineer who replaced the front part of the NTE5 (if the property still had an old style master socket it would be replaced with an NTE5) with one containing a filter. Any hardwired phone extensions were disconnected from the original front part and connected to filtered terminals {{on the back of}} the filter. The DSL modem (which at the time was also BT supplied) and, if present, a phone or <b>plug-in</b> <b>extension,</b> could then be plugged into the front. If it was desired to locate the DSL modem away from the master socket a <b>plug-in</b> ADSL <b>extension</b> kit could be purchased.|$|R
50|$|Batch file {{processing}} {{is provided in}} the registered edition through a <b>plug-in</b> <b>extension</b> dubbed File Utilities which provides rule-based point-and-click file management. Files can be selected {{from a number of}} parameters including Exif data, GPS position, speed, heading or altitude, file type, size, orientation, XMP rating, or dates. Actions can be performed on the selected files includes batch renaming, copy, move, delete, set rating, export to JPEG, send to FTP server.|$|R
40|$|Smart {{spaces are}} gaining {{relevance}} as promising deployment environments for novel classes of applications {{stemming from the}} dynamic discovery and interaction between smart objects and the resources available in their physical localities, e. g., seamlessly exploiting smartphones to control embedded home equipment. The Semantic Information Broker (SIB) of the Smart-M 3 platform can well support interoperability of statically unknown devices and service/application components in a smart space based on lightweight semantically-tagged data sharing. The paper focuses on the experience made and the {{lessons learned from the}} work of design, implementation, deployment, and experimental validation/evaluation of the SIB “Plug-in” extension. This extension allows SIB administrators to personalize and extend SIB installations simply and with a well-defined methodology, by cleanly adding <b>plug-in</b> <b>extensions</b> that can support domain- and deployment-specific facilities, thus opening new market opportunities for Smart-M 3 exploitation. The reported results show the feasibility and effectiveness of the proposed approach: in particular, we report the experience made with a notable example of plug-in component that can measure the runtime-offered SIB quality of service, expressed as a set of concise performance indicators...|$|E
40|$|Transportation {{accounts}} for around {{one third of}} CO 2 emissions in Sweden. Personal cars in Sweden {{have one of the}} highest average fuel demands per km in Europe. Mitigation strategies involve mandatory biofuel shares together with high taxation on gasoline and diesel fuels. From the current situation, one possible step to further increase car fuel efficiency is adoption of hybrid drivelines, which could be especially interesting with high pump prices. Furthermore the Swedish electricity production is highly carbon neutral; therefore it may be desirable to use electricity from the grid to power personal vehicles. Here we investigate under which circumstances <b>plug-in</b> <b>extensions</b> of hybrids with different all-electric range are cost-effective options for energy and fuel savings. It is shown that plug-ins with a reasonably small all-electric range (30 - 40 km) {{for a wide range of}} circumstances could become a viable option in comparison to conventional, hybrid electric, and electric vehicles. The implications of large scale application of such a system in Sweden on the energy demand, electricity, and the potential for bioenergy to cover all the personal transport demands are outlined...|$|E
40|$|Abstract — Smart {{spaces are}} gaining {{relevance}} as promising deployment environments for novel classes of applications {{stemming from the}} dynamic discovery and interaction between smart objects and the resources available in their physical localities, e. g., seamlessly exploiting smartphones to control embedded home equipment. The Semantic Information Broker (SIB) of the Smart-M 3 platform can well support interoperability of statically unknown devices and service/application components in a smart space based on lightweight semantically-tagged data sharing. The paper focuses on the experience made and the {{lessons learned from the}} work of design, implementation, deployment, and experimental validation/evaluation of the SIB “Plug-in” extension. This extension allows SIB administrators to personalize and extend SIB installations simply and with a well-defined methodology, by cleanly adding <b>plug-in</b> <b>extensions</b> that can support domain- and deployment-specific facilities, thus opening new market opportunities for Smart-M 3 exploitation. The reported results show the feasibility and effectiveness of the proposed approach: in particular, we report the experience made with a notable example of plug-in component that can measure the runtime-offered SIB quality of service, expressed as a set of concise performance indicators. Keywords- Smart spaces, ubiquitous computing, lightweight semantic technologies, interoperability, dynamic extensibility I...|$|E
40|$|This paper {{deals with}} two {{different}} approaches in programming sphere, and joins {{them in one}} entity through its practical part. One approach is context searching that is applied on the second approach, functional graphic library wxHaskell that is designed and implemented within Eclipse development environment through the <b>plug-in</b> <b>extension.</b> As searching object lies at the wxHaskell documentation, it is lexically analyzed, what forms a hashing table determined to searching for records...|$|R
40|$|Abstract: Many users like {{to watch}} video by a mobile phone, but the media player has many limitations. With a rapid {{development}} of communication and network, multimedia based technology is adopted in media player. Different approaches of media player shown in this paper are <b>plug-in</b> <b>extension</b> technology, multimedia based on hierarchy, media player based on file browser, media player based on FFmpeg (Fast Forward Moving Picture Expert Group), media player based on file server...|$|R
50|$|Early cobrowsing was {{achieved}} by local execution of software {{that had to be}} installed on the computer of each participant. More advanced tools didn't have to be installed, but still required local execution of software or at least web-browser <b>plug-ins,</b> <b>extensions,</b> or applets. Most tools were limited to a single user that was able to navigate, while the others could only watch. Newer cobrowsing solutions no longer require downloads, installations, or plug-ins. Instead, these solutions rely on peer-to-peer connections and DOM manipulation.|$|R
40|$|Abstract. Debugging virtual {{machines}} (VMs) presents unique challenges, especially meta-circular VMs, {{which are}} written in the same language they implement. Making sense of runtime state for such VMs requires insight and interaction at multiple levels of abstraction simultaneously. For example, debugging a Java VM written in Java requires understanding execution state at the source code, bytecode and machine code levels. However, the standard debugging interface for Java, which has a platform-independent execution model, is itself platform-independent. By definition, such an interface provides no access to platform-specific details such as machine code state, stack and register values. Debuggers for low-level languages such as C and C++, on the other hand, have direct access only to low-level information from which they must synthesize higher-level views of execution state. An ideal debugger for a meta-circular VM would be a hybrid: one that uses standard platformindependent debugger interfaces but which also interacts with the execution environment in terms of low-level, platform-dependent state. This paper presents such a hybrid architecture for the meta-circular Maxine VM. This architecture adopts unchanged a standard debugging interface, the Java Platform Debugger Architecture (JPDA), {{in combination with the}} highly extensible NetBeans Integrated Development Environment. Using an extension point within the interface, additional machine-level information can be exchanged between a specialized server associated with the VM and <b>plug-in</b> <b>extensions</b> within NetBeans. ...|$|E
50|$|Some desktop {{publishing}} systems permit developers to create <b>plug-ins</b> (<b>extensions</b> that perform {{a variety of}} functions that the system itself lacks), and this capability has also been used for kerning. In general, these plug-ins permit the user to apply a kerning change automatically to a certain character pair throughout an entire document, instead of applying it by searching manually for those pairs. So far only basic kerning features have been implemented through plug-ins, and {{it is unclear whether}} the more advanced features can be effectively implemented in this manner.|$|R
5000|$|Allowing these <b>{{plug-ins}},</b> <b>extensions,</b> and/or add-ons {{reduces the}} space used {{on any one}} machine, because even though the application, the [...] "plug-in interface", and all the plug-ins combined are larger than the same functionality compiled into one monolithic application, it allows each user to install only the particular add-on features required by that user, rather than forcing every user to install a much larger monolithic application that includes 100% of the available features. This results in a [...] "stripped-down" [...] or [...] "out-of-the-box" [...] application that is delivered in a compact package yet ready for users to add only the functionality that they will actually use.|$|R
50|$|A {{client-side}} web API is a programmatic interface {{to extend}} functionality within {{a web browser}} or other HTTP client. Originally these were most commonly {{in the form of}} native <b>plug-in</b> browser <b>extensions</b> however most newer ones target standardized JavaScript bindings.|$|R
50|$|Modern Windows desktop {{systems can}} use SAPI 4 and SAPI 5 {{components}} to support speech synthesis and speech recognition. SAPI 4.0 was available as an optional add-on for Windows 95 and Windows 98. Windows 2000 added Narrator, a text-to-speech utility {{for people who}} have visual impairment. Third-party programs such as JAWS for Windows, Window-Eyes, Non-visual Desktop Access, Supernova and System Access can perform various text-to-speech tasks such as reading text aloud from a specified website, email account, text document, the Windows clipboard, the user's keyboard typing, etc. Not all programs can use speech synthesis directly. Some programs can use <b>plug-ins,</b> <b>extensions</b> or add-ons to read text aloud. Third-party programs are available that can read text from the system clipboard.|$|R
5000|$|AOCE's Open Directory {{and related}} {{software}} introduced {{the concept of}} directory entries (such as business cards) as first-class desktop objects. This was {{used to create a}} drag-and-drop metaphor for mail, fax, and other directory-based activities. Each endpoint, a mail server for instance, was driven by a <b>plug-in</b> <b>extension</b> that was driven by a common AOCE-supplied queue and queue viewer. PowerTalk provided a set of standard forms for interacting with the items in the queues, and a common interface for mail, and a universal mailbox. Encryption was supported by a single [...] "keychain" [...] that remembered all your passwords and digital signatures, encrypting them together so only a single password needed to be remembered.|$|R
50|$|OpenCandy's various {{undesirable}} side-effects include {{changing the}} user's homepage, desktop background or search provider, and inserting unwanted toolbars, <b>plug-ins</b> and <b>extension</b> add-ons in the browser. It also collects and transmits various {{information about the}} user and his/her Web usage without notification or consent.|$|R
40|$|Summary: Many {{different}} {{programs are}} available to analyse microarray images. Most programs are commercial packages, some are free. In the latter group only few propose automatic grid alignment and batch mode. More often than not a program implements only one quantification algorithm. AGScan is an open source program that works on all major platforms. It {{is based on the}} ImageJ library [1] and offers a <b>plug-in</b> <b>extension</b> system to add new functions to manipulate images, align grid and quantify spots. It is appropriate for daily laboratory use and also as a framework for new algorithms. Availability: The program is freely distributed under X 11 Licence. The install instructions {{can be found in the}} user manual. The software can be downloaded fro...|$|R
40|$|Fireguard is {{a secure}} {{portable}} browser {{designed to reduce}} both data leakage from browser data remnants and cyber attacks from malicious code exploiting vulnerabilites in browser <b>plug-ins,</b> <b>extensions</b> and software updates. A browser can leave data remnants on a host PC hard disk drive, often unbeknown to a user, {{in the form of}} cookies, histories, saved passwords, cached web pages and downloaded objects. Forensic analysis, using freely available computer forensic tools, may reveal sensitive and confidential information. A browser’s capability to increase its features through <b>plug-ins</b> and <b>extensions</b> and perform patch management or upgrade to a new release via a software update provides an opportunity for an attacker to embed malicious software and subsequently launch a cyber attack. Fireguard has been implemented using both Mozilla Firefox and the storage and protection capabilities of the Mini-SDV, a secure Portable Execution and Storage Environment (PESE). In this paper the design and development of Fireguard is discussed. The requirement for a secure PESE and the functionality of the Mini-SDV is presented. An overview is given of the motivation for the development of Fireguard. The reasons Firefox was selected and the Firefox structure and security vulnerabilities are summarised. The implementation approach adopted is discussed and the results of an analysis of the Firefox implementation are presented. The Mini-SD...|$|R
40|$|Protégé OWL 1 is an {{open source}} tool created to support {{ontology}} development for the Semantic Web. It is a <b>plug-in</b> <b>extension</b> to the Protégé ontology development platform. Protégé OWL allows users to edit ontologies in the Web Ontology Language (OWL) and to use description logic classifiers to maintain consistency of their ontologies. Protégé OWL can also assist developers of intelligent applications in biomedicine, {{because many of the}} problem-solving tasks they seek to automate can be construed as classification tasks. Protégé OWL provides access to emerging knowledge representation standards such as OWL and high-performance classifiers. Being integrated with Protégé, the OWL Plug-in allows users to exploit Protégé’s core features and services such as graphical user interfaces, a variety of storage formats, and data acquisition and visualization tools. Finally, Protégé OWL provides an API allowing it to be integrated into applications...|$|R
40|$|Most {{software}} engineering tools come with fixed functionality or limited <b>plug-in</b> <b>extension</b> capabilities. Building software development environments that support truly dynamic extension capabilities to incorporate {{a wide range}} of additional facilities at run-time {{has proved to be a}} very challenging task. We describe a new approach using web service components to support the dynamic discovery, integration and invocation of remote software tool facilities for JEdit, an open source Integrated Development Environment. In this approach discrete software tool functionality is encapsulated in software "toolets", accessed as remote web service-based components. These toolet services are registered and discovered, and then dynamically integrated and invoked from within the JEdit IDE as required. We describe the architecture of our approach, key design and implementation issues, and illustrate the feasibility of the approach with several prototype toolet components and results of their evaluation...|$|R
50|$|The {{system was}} {{designed}} to be extensible using a <b>plug-in</b> architecture (voice <b>extensions)</b> for custom functionality and included a software developer kit (SDK) for third-party applications.|$|R
50|$|NAS is {{generally}} not as customizable in terms of hardware (CPU, memory, storage components) or software (<b>extensions,</b> <b>plug-ins,</b> additional protocols) as a general-purpose server supplied with DAS.|$|R
50|$|One {{feature of}} Freeplane is {{the support for}} installable enhancements. Add-ons are a way to extend and {{customize}} Freeplane similar to how <b>plug-ins</b> and <b>extensions</b> {{can be used to}} extend and customize well-known applications like Firefox or LibreOffice. Freeplane add-ons can be used to provide a single function, a bundle of multiple functions, bind those functions to a menu item, etc.|$|R
40|$|Abstract—In {{this paper}} the CITLAB tool for Combinatorial Interaction Testing is presented. The tool allows importing/exporting models of {{combinatorial}} problems from/to different application domains, {{by means of}} a common interchange syntax notation and a corresponding interoperable semantic metamodel. Moreover, the tool is a framework allowing embedding and transparent invocation of multiple, different implementations of combinatorial algorithms. CITLAB has been designed tightly integrated with the Eclipse IDE framework, by means of its <b>plug-in</b> <b>extension</b> mechanism. It is intended to easy the spread of CIT testing both in industrial practice and in academic research, by allowing users and researchers to apply multiple test suite generation algorithms, each with its peculiarities, on the same problem models, and let them compare the results in order to select the one that best fits their needs, while alleviating from the pain of knowing all the different details and notations of the underlying CIT tools. Index Terms—Combinatorial testing model, domain-specific language, Eclipse, XTEXT. I...|$|R
40|$|Developing ontologies in many {{different}} domain areas {{has led to a}} huge amount of distributed information. On one hand, correlating this distributed information seems so worthwhile for providing additional information and reusing ontologies. On the other hand, keeping ontologies in small modules would be helpful for maintaining and managing ontologies. Therefore, recently composing and decomposing ontologies become of the most significant topics in the semantic web researches and the related applications. In this poster, a new tool called “OWL Linker ” which provides an environment for combining OWL ontologies would be presented. This novel tool is a <b>plug-in</b> <b>extension</b> of Protégé which provides a very flexible user interface for connecting two separate ontologies based on the e-connection method such that user is able to browse, edit and manipulate link properties and also define individuals and restrictions for these new types of properties. Providing reasoning and updating e-connected ontologies are the other main facilities of this system...|$|R
40|$|Abstract. This paper {{describes}} the OntoMaven {{implementation of a}} resolution algo-rithm for importation in the ISO Common Logic (Edition 2) language. OntoMaven is a <b>plug-in</b> based <b>extension</b> of the Apache Maven software build tool for the de-velopment and reuse of knowledge base (KB) artifacts, such as ontologies and rule bases, managed in distributed (Web) repositories, such as Github and Subversion. The OntoMaven CL 2 import plug-in contributes a proof-of-concept implementation of CL 2 importation semantics that handles circular imports...|$|R
40|$|Single-event upsets (SEUs) or bitflips are {{computer}} memory errors caused by radiation. BITFLIPS (Basic Instrumentation Tool for Fault Localized Injection of Probabilistic SEUs) {{is a computer}} program that deliberately injects SEUs into another computer program, while the latter is running, {{for the purpose of}} evaluating the fault tolerance of that program. BITFLIPS was written as a <b>plug-in</b> <b>extension</b> of the open-source Valgrind debugging and profiling software. BITFLIPS can inject SEUs into any program that can be run on the Linux operating system, without needing to modify the program s source code. Further, if access to the original program source code is available, BITFLIPS offers fine-grained control over exactly when and which areas of memory (as specified via program variables) will be subjected to SEUs. The rate of injection of SEUs is controlled by specifying either a fault probability or a fault rate based on memory size and radiation exposure time, in units of SEUs per byte per second. BITFLIPS can also log each SEU that it injects and, if program source code is available, report the magnitude of effect of the SEU on a floating-point value or other program variable...|$|R
