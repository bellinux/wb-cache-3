3403|10000|Public
5|$|The September 1964 {{issue of}} Ebony dramatized MalcolmX's {{defiance}} of these threats by publishing {{a photograph of}} him holding an M1 carbine while <b>peering</b> out a window.|$|E
5|$|Passengers {{gathered}} in the third class common room where they could play chess or cards, or walk along the poop deck. Third class children played in the common room or explored the ship—nine-year-old Frank Goldsmith recalled <b>peering</b> into the engine room and climbing up the baggage cranes on the poop deck.|$|E
5|$|When Chandler was 14, {{he began}} {{stealing}} cars and was arrested 20times as a juvenile. As an adult, {{he was charged}} with a variety of crimes, including possession of counterfeit money, loitering and prowling, burglary, kidnapping, and armed robbery. He was also accused of masturbating while <b>peering</b> inside a woman's window. In one incident, Chandler and an accomplice broke into a Florida couple's home, held them at gunpoint, and robbed them. Chandler told his accomplice to tie up the man with speaker wire and took the woman into the bedroom, where he made her strip to her underwear, tied her up, and rubbed the barrel of his revolver across her stomach.|$|E
3000|$|The {{concept of}} [...] "multipoint {{relaying}} (MPR)" [...] scheme is developed {{to reduce the}} number of duplicate transmissions. Here, on receipt of a message, a <b>peer</b> forwards the message to all the neighbor <b>peers</b> but only some of the neighbor <b>peers</b> forward the message to other <b>peers.</b> Each <b>peer</b> is assumed to know not only the first neighbor <b>peers</b> but also the second neighbor <b>peers.</b> First neighbor <b>peers</b> are <b>peers</b> with which the <b>peer</b> can directly communicate. The <b>peer</b> is assumed to know every second neighbor <b>peer,</b> but cannot directly communicate with it. By taking into consideration the second neighbor <b>peers,</b> each <b>peer</b> selects a subset of the first neighbor <b>peers</b> only which forward the message. The selected neighbor <b>peers</b> are referred to as relay <b>peers.</b> The other neighbor <b>peers</b> which just receive the message and do not forward the message are leaf <b>peers.</b> In a directed acyclic graph (DAG) as shown in Figure 5, <b>peers</b> colored black and white to show relay and leaf <b>peers,</b> respectively. Relay <b>peers</b> (black one) forwards the message to the other <b>peers,</b> leaf <b>peers</b> (white one) only receives the message and does not forward it to the others. By reducing the number of <b>peers</b> to forward the message to the other <b>peers,</b> totally the MPR algorithm can significantly reduce the number of message which broadcast in the network. Therefore, we can save the network bandwidth for other network activities.|$|R
50|$|Professional <b>peer</b> {{review is}} common {{in the field of}} health care, where it is usually called {{clinical}} <b>peer</b> review. Further, since <b>peer</b> review activity is commonly segmented by clinical discipline, there is also physician <b>peer</b> review, nursing <b>peer</b> review, dentistry <b>peer</b> review, etc. Many other professional fields have some level of <b>peer</b> review process: accounting, law, engineering (e.g., software <b>peer</b> review, technical <b>peer</b> review), aviation, and even forest fire management.|$|R
40|$|Information {{is stored}} in a {{plurality}} of mobile <b>peers.</b> The <b>peers</b> communicate in a <b>peer</b> to <b>peer</b> fashion, using a short-range wireless network. Occasionally, a <b>peer</b> initiates a search for information in the <b>peer</b> to <b>peer</b> network by issuing a query. Queries and pieces of information, called reports, are transmitted among <b>peers</b> that are within a transmission range. For each search additional <b>peers</b> are utilized, wherein these additional <b>peers</b> search and relay information {{on behalf of the}} originator of the search...|$|R
5|$|Finn {{wakes up}} to {{discover}} that Princess Bubblegum (voiced by Hynden Walch) is now his wife {{and he is now}} the king of the Candy Kingdom, however things begin to hint that reality is not what it seems. Peppermint Butler (voiced by Steve Little) tells Finn that he is trapped in a dream and that he needs to find the King Worm (voiced by Erik Estrada) and break it. The scene shifts, and Finn is at first being fed soup by Flame Princess (voiced by Jessica DiCicco), then he is in a library. <b>Peering</b> through a window, he sees Jake, who is being given advice on how to wrap a present by a deformed Lady Rainicorn. The two brothers conclude that they are trapped in a dream, and set off, trailing the King Worm.|$|E
5|$|In 1912 Southampton, 17-year-old {{first-class}} passenger Rose DeWitt Bukater, her fiancé Cal Hockley, and {{her mother}} Ruth board the luxurious Titanic. Ruth emphasizes that Rose's marriage will resolve their family's financial problems and retain their high-class persona. Distraught over the engagement, Rose considers suicide by jumping from the stern; Jack Dawson, a penniless artist, intervenes and discourages her. Discovered with Jack, Rose tells a concerned Cal that she was <b>peering</b> over the edge and Jack saved her from falling. When Cal becomes indifferent, she suggests to him that Jack deserves a reward. He invites Jack to dine with them in first class the following night. Jack and Rose develop a tentative friendship, despite Cal and Ruth being wary of him. Following dinner, Rose secretly joins Jack {{at a party in}} third class.|$|E
5|$|Landing safely on the Moon, {{the astronomers}} {{get out of}} the capsule (without the need of space suits) and watch the Earth rise in the distance. Exhausted by their journey, they unroll their {{blankets}} and sleep. As they sleep, a comet passes, the Big Dipper appears with human faces <b>peering</b> out of each star, old Saturn leans out of a window in his ringed planet, and Phoebe, goddess of the Moon, appears seated in a crescent-moon swing. Phoebe causes a snowfall that awakens the astronomers, and they seek shelter in a cavern where they discover giant mushrooms. One astronomer opens his umbrella; it promptly takes root and turns into a giant mushroom itself.|$|E
30|$|The MapReduce P 2 P system {{architecture}} possesses a super <b>peer</b> Gnutella network that contains super <b>peers</b> and <b>peers.</b> A super <b>peer</b> must satisfy some requirements, {{such as being}} not behind a firewall, having sufficient bandwidth, uptime and processing power. Super <b>peers</b> connect to each other to form a P 2 P network of super <b>peers,</b> while <b>peers</b> choose to connect to a super <b>peer</b> to form a cluster of the super <b>peer</b> and <b>peers.</b> Super <b>peers</b> act as proxies to the Gnutella P 2 P network for <b>peers.</b> Query mechanism uses client server paradigm in the cluster and P 2 P paradigm in the super <b>peer</b> network with various routing methods. The super <b>peer</b> network resolves heterogeneity problem, and also increases the scalability of the Gnutella network by {{reducing the number of}} incapable <b>peers</b> incorporating in query routing activities.|$|R
30|$|In normal operation, {{a mobile}} <b>peer</b> joins a super <b>peer</b> that is {{geographically}} close to it. The Query Service maintains relevant data of mobile <b>peers.</b> When a mobile <b>peer</b> switches from one super <b>peer</b> to another, the new super <b>peer</b> will get user {{information from the}} previous one. When a mobile <b>peer</b> is disconnected, updated information will be published to the <b>peer</b> network.|$|R
30|$|In EigenTrust [9], {{the global}} {{reputation}} of each <b>peer</b> {{is given by}} the local trust values assigned to it by other <b>peers,</b> weighted by the global reputations of the assigning <b>peers.</b> Trust values are normalized so no <b>peer</b> can assign arbitrarily high or low values to other <b>peers</b> in order to subvert the system. Then trust is aggregated by taking into account peers’ recommendations weighted with the trust the node has on those other <b>peers.</b> Each <b>peer</b> has a number M of score managers and since each <b>peer</b> also acts as a score manager, it has assigned a set of daughters referenced by the indexes of <b>peers</b> whose trust value computation is covered by the <b>peer.</b> As a score manager, a <b>peer</b> also maintains the opinion vector of its daughter <b>peers</b> and it also learns the set of <b>peers,</b> which downloaded files from its daughter <b>peers,</b> receiving trust assessments from these <b>peers</b> referring to its daughter <b>peer.</b> Finally, a <b>peer</b> also gets to know the set of <b>peers</b> which its daughter <b>peers</b> downloaded files from and the trust assessments on those <b>peers</b> from its daughter <b>peers.</b> Their results have shown a reduced number of inauthentic files on the network {{under a variety of}} threat scenarios. Furthermore, rewarding highly reputable <b>peers</b> with better quality of service incentivizes honest <b>peers</b> to share more files and to self-police their own file repository for inauthentic files.|$|R
5|$|Rudy's {{attraction}} to the veterinarian's wife leads to them having consensual sex {{in front of her}} husband. Humiliated, the vet hangs himself in a motel bathroom. Rudy and Fran move on, barely acknowledging the suicide. They check into an El Paso hotel used by criminals as a safe house because Rudy knows that the McCoys will be heading to the same place. When Doc and Carol check in at the hotel, they ask for food to be delivered, but the manager, Laughlin, says he is working alone and cannot leave the desk. Doc soon realizes that Laughlin sent his family away because something is about to happen. He urges Carol to dress quickly so they can escape. An armed Rudy comes to their door while Fran poses as a delivery girl who needs to be paid for the food. <b>Peering</b> from an adjacent doorway, Doc is surprised to see Rudy alive. He sneaks up behind Rudy, knocks him out, and does the same to Fran.|$|E
5|$|Though {{they were}} {{documented}} by droppings and tracks, {{pictures of the}} Bornean rhinoceros were first taken and widely distributed by modern conservationists in April 2006, when camera traps photographed a healthy adult in the jungles of Sabah in Malaysian Borneo. On 24 April 2007, {{it was announced that}} cameras had captured the first-ever video footage of a wild Bornean rhino. The night-time footage showed the rhino eating, <b>peering</b> through jungle foliage, and sniffing the film equipment. The World Wildlife Fund, which took the video, has used it in efforts to convince local governments to turn the area into a rhino conservation zone. Monitoring has continued; 50 new cameras have been set up, and in February 2010, {{what appeared to be a}} pregnant rhino was filmed.|$|E
5|$|The {{ferocity of}} the fight {{convinced}} Black Hawk that Apple River Fort was impossible to defeat. He considered burning the fort, but feared the rising smoke would alert other militia in the area. His war-party slackened their fire as their fellow braves raided cabins near the fort. Taken were meat, flour, clothing, cooking utensils. Left behind was a paucity of real vandalism. Braves then raided the livestock: horses were run off and pigs and cattle were shot down and the choicest cut of meat taken. In the gathering darkness, Black Hawk quietly withdrew his war party and retreated back to the gap in Terrapin Ridge and gained the Galena Road. Casualties were few, given {{the intensity of the}} battle. Courier George Harkleroad was shot in the neck early in the battle and died; it has been documented that he was killed while <b>peering</b> over the stockade wall's pickets. Besides Welch, the only other garrison casualty was Josiah Nutting, who suffered a non-lethal wound to the side of his head. The number of Sauk casualties is unknown.|$|E
30|$|In the {{previous}} works [20, 21], we mainly discuss how to reliably deliver messages {{in a group}} of multiple <b>peers</b> after the group has been established. A group is constructed in a way that first neighbors, i.e. neighbors of an initiator <b>peer</b> are first included and then first neighbors of each first neighbor <b>peer</b> are included, until the number of members satisfy the group objectives like the scale of a required group. We discuss the trustworthiness-based broadcast (TBB) algorithm [22] to chose most trustworthy members to deliver the initiator message to the other <b>peers</b> as a relay <b>peer</b> in the group established. The trustworthiness of each <b>peer</b> is not considered when a group is established. The evaluation results o the TBB algorithm shows that, if <b>peers</b> in the group do not have enough number of directly connected neighbor <b>peers,</b> it is difficult to deliver messages to each <b>peers</b> in the group. The basic idea of the TBB algorithm is to chose most trustworthy <b>peers</b> (relay <b>peer)</b> to deliver messages to the other <b>peers</b> which do not have direct connections with the initiator <b>peer.</b> Since the relay <b>peers</b> forward the messages to other <b>peers,</b> the relay <b>peers</b> have to be more trustworthy. From the evaluation results, we found, if some <b>peers</b> which are selected as relay <b>peers</b> do not have enough number of first neighbor pees in the group, there is possibility that relay <b>peers</b> are not able to deliver the message from the initiator <b>peer</b> to all the other <b>peers</b> in the group. Here, some <b>peers</b> which are introduced to the initiator <b>peer</b> may not be trustworthy. That is, even if the <b>peers</b> receive messages, the <b>peers</b> may not forward the message to other <b>peers.</b> In this paper, we try to make a trustworthy group which is composed of trustworthy <b>peers.</b>|$|R
3000|$|... through {{neighbors of}} the {{initiator}} <b>peer,</b> the initiator <b>peer</b> knows which <b>peer</b> is introduced by which neighbor <b>peer</b> and the trustworthiness of the <b>peers.</b> The information about other members {{can be used}} by the initiator <b>peer</b> p [...]...|$|R
30|$|Relay <b>peers</b> {{in the set}} P(D=i- 1)forward {{messages}} to <b>peers</b> in a set P(D=i). By checking <b>peers</b> in the sets P(D=i)and P(D=i- 1), we can find whether or not some <b>peers</b> in the set P(D=i)receive message from multiple (≥ 2) relay <b>peers</b> in the set P(D=i- 1). If a <b>peer</b> receives a message from multiple <b>peers,</b> we can select only the most trustworthy relay <b>peer</b> to deliver {{the message to the}} <b>peer.</b> Thus, we can not only more reliably deliver {{messages to}} <b>peers</b> but also reduce unnecessary message delivery.|$|R
25|$|ISPs may {{engage in}} <b>peering,</b> where {{multiple}} ISPs interconnect at <b>peering</b> points or Internet exchange points (IXs), allowing routing of data between each network, without charging {{one another for}} the data transmitted—data that would otherwise have passed through a third upstream ISP, incurring charges from the upstream ISP.|$|E
25|$|<b>Peering</b> {{through a}} break in the clouds in the far {{distance}} is a snow-capped Mt. Rosalie, named after Bierstadt’s wife.|$|E
25|$|Telehouse America is a {{data center}} / {{colocation}} services provider in the United States with carrier-neutral facilities in New York City, Newark and Los Angeles, {{as well as}} international Internet exchanges, managed IT services and disaster recovery solutions. In 1996, Telehouse America launched the New York International Internet Exchange point (NYIIX), Manhattan's largest and most heavily trafficked <b>peering</b> exchange, as well as established the first Los Angeles International Internet Exchange point (LAIIX), a <b>peering</b> gateway to the Asia-Pac Rim.|$|E
30|$|In group {{communications}} [15, 16], each <b>peer</b> has {{to deliver}} messages to every <b>peer</b> and receives messages from every <b>peer</b> in a group. There are many discussions {{on how to}} causally deliver messages in a group [17]. Efficient and reliable mechanisms to broadcast messages to every <b>peer</b> are {{required in order to}} casually deliver messages and realize the cooperation of multiple <b>peers</b> in a scalable group. The basic approach to broadcasting messages is the flooding algorithm [18]. Here, each <b>peer</b> sends a message to its neighbors and the neighbors forward the messages to their neighbor neighbor <b>peers.</b> In the multipoint relying (MPR) mechanism [19], each <b>peer</b> transmits a message to every neighbor <b>peer</b> but only some, not all of the neighbor <b>peers</b> forward the message. In order to increase the fault-tolerance, we discuss a novel trustworthiness-based broadcast (TBB) algorithm to reliably and efficiently deliver messages to every <b>peer</b> in a group. Here, each <b>peer</b> sends a message to its neighbor <b>peers</b> and only trustworthy <b>peers</b> out of the neighbor <b>peers</b> forward the message to their neighbors. Hence, even if untrustworthy <b>peers</b> are faulty, other <b>peers</b> can receive messages through trustworthy <b>peers.</b>|$|R
30|$|A super <b>peer</b> {{is a full}} {{featured}} node {{that operates}} as a service provider server to serve a set of mobile <b>peers.</b> Multiple super <b>peers</b> can connect {{to each other in}} P 2 P fashion to provide load balancing and scalability. The difference between a super <b>peer</b> and a mobile <b>peer</b> is that a super <b>peer</b> is responsible for creating and monitoring the overlay network and providing services to other super <b>peers</b> and mobile <b>peers.</b> Super <b>peers</b> also provide message propagation and information caching. Mobile <b>peers</b> can switch from one super <b>peer</b> to another whilst maintaining relevant data using query service. The details are provided in Sect.  3.1.|$|R
3000|$|In P 2 P systems, each <b>peer</b> has {{to obtain}} {{information}} of other <b>peers</b> and propagate the information to other <b>peers</b> through neighbor (acquaintance) <b>peers.</b> A neighbor <b>peer</b> p [...]...|$|R
25|$|In 2014, critics {{expressed}} concern that the deal would give Comcast greater negotiating power in a number of areas, including rebroadcast fees with television channels, and <b>peering</b> agreements with ISPs.|$|E
25|$|According {{to friends}} and neighbors of Zimmerman, three weeks prior to the {{shooting}} on February 2, Zimmerman called police to report a young man <b>peering</b> into the windows of an empty Twin Lakes home. By the time police arrived, the suspect had fled. On February 6, workers witnessed two young black men lingering in the yard of a Twin Lakes resident {{around the same time}} a new laptop and some gold jewelry was stolen from her home. The next day police discovered the stolen laptop in the backpack of a young black man whom Zimmerman identified as the same person he had spotted <b>peering</b> into windows on February 2.|$|E
25|$|These are {{computers}} that are synchronized to stratum 2 servers. They employ the same algorithms for <b>peering</b> and data sampling as stratum 2, and can themselves act as servers for stratum 4 computers, and so on.|$|E
30|$|We assume each <b>peer</b> {{dynamically}} updates {{the subjective}} trustworthiness {{value of each}} neighbor <b>peer</b> on completion of each transaction with the corresponding neighbor <b>peer.</b> We also assume that each <b>peer</b> periodically calculates the trustworthiness value for each of its neighbor <b>peer</b> by requesting other neighbor <b>peers</b> to send the subject trustworthiness values. Therefore, each <b>peer</b> holds an up-to-date subjective trustworthiness value and trustworthiness value to each of its neighbor <b>peers.</b>|$|R
30|$|The {{current review}} {{followed}} five phases: (1) identification of keywords/themes, (2) searching relevant sources, (3) determination for inclusion, (4) coding and (5) analyzing and interpreting. The first phase {{was concerned with}} identifying these keywords: feedback, interaction, commenting patterns, <b>peer</b> feedback, <b>peer</b> review, <b>peer</b> revision, <b>peer</b> correction, <b>peer</b> response, <b>peer</b> evaluation, language functions, focus areas of comments, scope of <b>peer</b> feedback, FFPR, CAPR, synchronous and asynchronous <b>peer</b> review and ESL/EFL writing.|$|R
30|$|<b>Peer</b> monitor is {{designed}} to check online <b>peer</b> status periodically. This component is essential because mobile <b>peers</b> may frequently disconnect from the <b>peer</b> network in the mobile environment. Since JXTA protocol {{does not provide a}} mechanism to keep the real-time online status of <b>peers,</b> a <b>peer</b> status protocol has been developed to retain information about the type of <b>peer,</b> associated services (e.g., news/movie service), <b>peer</b> information (e.g., uptime, ping statistics, device status) and status. The status of a <b>peer</b> is represented in six levels: UNKNOWN, ONLINE, AWAY, BUSY, INVISIBLE, and OFFLINE, which can be assigned by relevant applications automatically or by the user manually. Recommendation services are also based on a user’s status. For example, if a user sets his/her status to BUSY, the proactive recommendation services will postpone information pushing to the user. In order to minimize energy consumption, <b>peer</b> monitor in mobile <b>peer</b> will only submit information to super <b>peer</b> when a <b>peer’s</b> status changes. Super <b>peers</b> only check mobile <b>peer’s</b> status after an inactive period. When the battery energy is low, <b>peer</b> monitor automatically increases the checking time interval.|$|R
25|$|In 2010, Netflix {{signed an}} {{agreement}} with Level 3 Communications to carry its data. Shortly after, Level 3 entered a heated dispute concerning whether Level 3 would have to pay Comcast to bridge their respective networks, in an agreement known as <b>peering.</b> The disagreement continued as Netflix's current carrier, Cogent Communications, explicitly placed blame for Netflix bottlenecks on Comcast and several other ISPs. In February 2014, after rumors surfaced that Comcast and Netflix had reached an unspecified agreement, the companies confirmed that Netflix was paying Comcast to connect to its network. The details of the agreement are not public, and speculation disagrees about whether the agreement is a precedent against net neutrality, or a continuation of normal <b>peering</b> agreements.|$|E
25|$|Peering: Horizontal {{organization}} {{as with the}} 'opening up' of the Linux program where users are free to modify and develop it provided that they make it available for others. <b>Peering</b> succeeds because it encourages self-organization– a style of production that works more effectively than hierarchical management for certain tasks.|$|E
25|$|The {{first scene}} opens in the McArdle's stateroom. Teddy is {{standing}} on his father’s expensive suitcase, <b>peering</b> out of the porthole. Mr. McArdle, apparently hung-over, is attempting to verbally assert control over his son; Mrs. McArdle indulges the boy as a provocative counterpoint to her husband’s bullying: neither adult has any real impact on the child's behavior.|$|E
3000|$|... sends {{a message}} to its {{trustworthy}} neighbor <b>peers</b> p 01 and p 02 and then the <b>peers</b> forward the message to the <b>peers</b> p 10,..., p 15 as shown in Figure 7. Here, we discuss the scenarios shown in Figures 8 and 9. Here, there is possibility that some <b>peers</b> are both neighbors of <b>peers</b> p 01 and p 02. The <b>peer</b> p 12 and <b>peers</b> p 10, p 11, and p 12 are shared neighbor <b>peers</b> of both the <b>peers</b> p 01 and p 02, respectively. Because at the group creation phase, the initiator <b>peer</b> p [...]...|$|R
30|$|In a {{group of}} {{multiple}} <b>peers,</b> each <b>peer</b> has to deliver a message {{to all the other}} <b>peers.</b> In a scalable P 2 P overlay network, each <b>peer</b> cannot directly send a message to every other <b>peer</b> of a group due to the scalability of the network. Each <b>peer</b> can only send a message to its neighbor <b>peers,</b> i.e. acquaintance <b>peers.</b> One approach to broadcasting a message is pure flooding scheme where messages are forwarded from <b>peers</b> to their neighbor <b>peers.</b> However, the pure flooding scheme implies the huge network overhead due to the message explosion.|$|R
40|$|Similarity in {{substance}} use among adolescents and their <b>peers</b> is usually attributed to <b>peer</b> influence or, occasionally, to either <b>peer</b> influence or selection. This paper suggests that similarity {{is due to}} both <b>peer</b> influence and selection. For some adolescents, <b>peer</b> influence outside the chain occurs first and selection follows; for others, selection occurs first and <b>peer</b> influence within the chain follows. Whichever occurs first, all adolescents are selected and nearly all are influenced. <b>Peer</b> networks contribute to similarity by providing a pattern of <b>peer</b> ties in which <b>peer</b> influence can flourish. Chain reactions result from the pattern and <b>peer</b> influence...|$|R
