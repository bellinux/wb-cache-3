25|65|Public
50|$|Some {{computers}} displayed graphics in bit-plane format, {{most notably}} the Amiga and Atari ST, contrasting with the more common <b>packed</b> <b>format.</b> This allowed certain classes of image manipulation to be performed using bitwise operations (especially by a blitter chip), and parallax scrolling effects.|$|E
50|$|Bokkoms is a {{delicacy}} typical to the Western Cape of South Africa, {{and specifically}} the West Coast. Although {{it has a}} significant market in the Western Cape (where it is very popular {{and can be found}} in hotels, bars, bottle stores (in UK: off-licence), fish shops and beach kiosks on the beaches and holiday resorts), it {{has not been able to}} become a common product in the larger part of Southern African butcheries, fisheries and grocery stores like biltong has. It is, however, available for ordering and shipping through the internet in vacuum <b>packed</b> <b>format.</b>|$|E
5000|$|These free-flight kites are governable parachutes and {{are used}} as payload {{delivery}} systems, sport gliding parachuting or skydiving, BASE jumping, scale-model parachuting. When used for delivery of sensitive payloads or carrying humans, the fast opening from <b>packed</b> <b>format</b> is damped by use of a slider. The wing remains unpowered and kited by bridle tethering lines; the lines attach to platforms or harnesses. The size and design of the kited wing is customized for the final type of use where packing, opening, and sink rate are important feature. Control systems are specialized for the specific use. Control systems sometimes include radio control from remote locations.|$|E
5000|$|Chichester - on {{the south}} coast of England, this site {{produces}} a variety of <b>pack</b> <b>formats</b> from cans and jars to pouches and microwavable pots ...|$|R
5000|$|In late 2006, WizKids {{announced}} that the blind booster <b>pack</b> <b>format</b> was over for MechWarrior: Age of Destruction {{and that they would}} switch to non-blind faction-specific [...] "Action Packs" [...] for all 2007 releases. The first Action Pack releases are: ...|$|R
40|$|New features: Soil types {{interpolation}} from planar cross-sections {{given in}} another file. New demonstration example (ex 6 project). Updates: Tecplot output file written in BLOCK data <b>packing</b> <b>format</b> to enable support of cell-centered data such as soil type ID. Update copyright notice in all files headers {{to be compliant with}} GPL v 3 requirements...|$|R
40|$|The Extended Euclidean {{algorithm}} for matrix Pade approximants {{is applied}} to compute matrix Pade approximants in rectangular full <b>packed</b> <b>format</b> (RFP) if the coefficient matrices of the input matrix polynomial are triangular. The procedure given by Gustavson et al for packing a triangular matrix in rectangular full <b>packed</b> <b>format</b> {{is applied to}} pack sequence of lower triangular matrices of a matrix polynomial in Rectangular Full <b>Packed</b> <b>format.</b> This RFP format of a matrix polynomial is applied to compute matrix Pade approximants of the matrix polynomial using Matrix Pade Extended Euclidean Algorithm. Algorithms for the multiplication of two triangular matrices and inverse of a triangular matrix in RFP format are also presented. The CPU time and memory comparison in computing the matrix Pade approximants of a matrix polynomial between RFP format case and non packed case are elucidated in detail...|$|E
40|$|Four {{routines}} called DPOTF 3 i, i = a,b,c,d, are presented. DPOTF 3 i are a novel type of level- 3 BLAS {{for use by}} BPF (Blocked <b>Packed</b> <b>Format)</b> Cholesky factorization and LAPACK routine DPOTRF. Performance of routines DPOTF 3 i {{are still}} increasing when the performance of Level- 2 routine DPOTF 2 of LAPACK starts decreasing. This is our main result and it implies, due {{to the use of}} larger block size nb, that DGEMM, DSYRK, and DTRSM performance also increases! The four DPOTF 3 i routines use simple register blocking. Different platforms have different numbers of registers. Thus, our four routines have different register blocking sizes. BPF is introduced. LAPACK routines for POTRF and PPTRF using BPF instead of full and <b>packed</b> <b>format</b> are shown to be trivial modifications of LAPACK POTRF source codes. We call these codes BPTRF. There are two variants of BPF: lower and upper. Upper BPF is “identical ” to Square Block <b>Packed</b> <b>Format</b> (SBPF). “LAPACK ” implementations on multicore processors use SBPF. Lower BPF is less efficient than upper BPF. Vector inplace transposition converts lower BPF to upper BPF very efficiently. Corroborating performance results for DPOTF 3 i versus DPOTF 2 on a variety of common platforms are given for n ≈ nb a...|$|E
40|$|Note: {{before using}} this routine, please read the Users ’ Note for your {{implementation}} {{to check the}} interpretation of bold italicised terms and other implementation-dependent details. 1 Purpose F 07 GFF (DPPEQU) computes a diagonal scaling matrix S intended to equilibrate a real n by n symmetric positive-definite matrix A, stored in <b>packed</b> <b>format,</b> and reduce its condition number...|$|E
5000|$|A - Applesoft BASIC {{programs}} (also {{stored in}} a <b>packed,</b> space-saving <b>format)</b> ...|$|R
50|$|The {{product claims}} to be Britain's best-loved pub snack. During the 1970s and 1980s, the product was notorious for its saucy promotional displays, whereby the packets of peanuts were {{tessellated}} {{in front of a}} picture of a scantily clad woman. They re designed their <b>pack</b> <b>formats</b> in 2016 and moved away from the card designs of previous years.|$|R
50|$|The AmigaOS packers and cruncher {{libraries}} are centralized {{by using}} the XPK system. The XPK system consists of a master library and several (de)packer sublibraries. Programs use only the master library directly, while sublibraries (akin to plug-ins) implement the actual (de)compression. When unpacking/decrunching, the applications {{do not need to}} know which library was used to pack or crunch the data. XPK is a wrapper for crunchers; to decrunch non-XPK <b>packed</b> <b>formats</b> requires XFD.|$|R
40|$|A new compact way {{to store}} a {{symmetric}} or triangular matrix called RPF for Recursive <b>Packed</b> <b>Format</b> is fully described. Novel ways to transform RPF {{to and from}} standard <b>packed</b> <b>format</b> is included. A new algorithm, called RPC for Recursive Packed Cholesky that operates on the RPF format is presented. Algorithm RPC is level 3 BLAS based and require algorithms TRSM and SYRK that work on RPF. We thus introduce and fully describe novel recursive algorithms RP TRSM and RP SYRK that the RPC algorithm requires. It turns out, that both RP TRSM and RP SYRK only call GEMM. Hence RPC mostly calls GEMM during execution. The advantage of this storage scheme compared to traditional packed storage is demonstrated. First, both storage schemes use the minimal amount of storage for the symmetric or triangular matrix. Second, RPC gives a level 3 implementation of Cholesky factorization that only requires standard full format GEMM whereas standard packed implementations are only level 2. Hence [...] ...|$|E
40|$|Note: {{before using}} this routine, please read the Users ’ Note for your {{implementation}} {{to check the}} interpretation of bold italicised terms and other implementation-dependent details. 1 Purpose F 01 VAF (DTRTTP) copies a real triangular matrix stored in full format in a two-dimensional array to a standard <b>packed</b> <b>format</b> in a one-dimensional array. Packed storage format is described in Section 3. 3. 2 i...|$|E
40|$|Note: {{before using}} this routine, please read the Users ’ Note for your {{implementation}} {{to check the}} interpretation of bold italicised terms and other implementation-dependent details. 1 Purpose F 07 GAF (DPPSV) computes the solution to a real system of linear equations AX B, where A is an n by n symmetric positive-definite matrix stored in <b>packed</b> <b>format</b> and X and B are n by r matrices...|$|E
40|$|Packaging {{accessibility}} is {{a significant}} problem for many older people. Whilst the majority of {{studies have focused on}} issues surrounding strength, work has shown that dexterity required to open a pack is also a major issue for many older people. Hence, the work undertaken here reports a quantitative study that aimed to analyse motion coordination patterns across digits 2 – 5 (index to little finger) during interactions with three of the most common types of packaging: plastic bottles, jars and crisps packets, and comparing those interactions with a common measure of dexterity, the Perdue Pegboard. Ten subjects (six male participants and four female participants) were examined whilst reaching forward to grasp and open a 300 ml plastic bottle and a 500 g jar. A 10 -camera optoelectronic motion capture system measured trajectories of 25 miniature reflective markers placed on the dorsal surface landmarks of the hand. Joint angular profiles for 12 involved flexion–extension movements were derived from the measured coordinates of surface markers. The results showed that finger correlations vary widely across the differing <b>pack</b> <b>formats</b> with the crisps having the lowest finger movement correlation and the jar having the highest. Speed and jerk metrics were also seen to vary across the various <b>pack</b> <b>formats.</b> However, finger correlations were seen to be more relevant to perceive dexterity of pack opening than finger speeds and jerk motions...|$|R
40|$|As society ages {{there is}} a growing need to {{understand}} issues surrounding declining user capabilities. One such area has been accessibility of packaging by older people. To date much of the current research in this area has focused on measuring strength of older people and analysing the force needed to open various <b>pack</b> <b>formats</b> and has largely concentrated on accessibility of jam or sauce jars. However, a survey by 'Yours' magazine indicated that problems with thin film pack forms and peelable packaging was also an issue for older people. Hence the authors undertook a small-scale study to understand the issues surrounding accessing a rigid plastic container with a peelable lid. To that end the authors built a bespoke measuring device to measure container peeling forces, measured finger friction between pack and finger and undertook an observational analysis on 60 users accessing packaging of this type. Results indicated that the force needed to open containers of this type is lower than measured user forces including older people and it is therefore likely that the issues surrounding accessibility of this type of <b>pack</b> <b>format</b> are related to dexterity not strength. However, the authors also showed that this can be affected by context of use in that oily fingers could reduce the friction coefficient between finger and pack such that older people may not have sufficient strength to open packs of this type...|$|R
50|$|Disk drives with {{exchangeable}} disk packs or disk cartridges generally {{required the}} data heads {{to be aligned}} to allow <b>packs</b> <b>formatted</b> on one drive to be read and written on another compatible drive. Alignment required a special alignment pack, an oscilloscope, an alignment tool that moved the read/write heads, and patience. The pattern generated on the scope looks like a row of alternating C and E characters on their backs. Head alignment needed to be performed after head replacement, {{and in any case}} on a periodic basis as part of the routine maintenance required by the drives.|$|R
40|$|We {{describe}} a new data format for storing triangular, symmetric, and Hermitian matrices called Rectangular Full <b>Packed</b> <b>Format</b> (RFPF). The standard two-dimensional arrays of Fortran and C (also known as full format) {{that are used}} to represent triangular and symmetric matrices waste nearly half of the storage space but provide high performance via the use of Level 3 BLAS. Standard <b>packed</b> <b>format</b> arrays fully utilize storage (array space) but provide low performance as there is no Level 3 packed BLAS. We combine the good features of packed and full storage using RFPF to obtain high performance via using Level 3 BLAS as RFPF is a standard full-format representation. Also, RFPF requires exactly the same minimal storage as packed the format. Each LAPACK full and/or packed triangular, symmetric, and Hermitian routine becomes a single new RFPF routine based on eight possible data layouts of RFPF. This new RFPF routine usually consists of two calls to the corresponding LAPACK full-format routine and two calls to Level 3 BLAS routines. This mean...|$|E
40|$|Note: {{before using}} this routine, please read the Users ’ Note for your {{implementation}} {{to check the}} interpretation of bold italicised terms and other implementation-dependent details. 1 Purpose F 08 TAF (DSPGV) computes all the eigenvalues and, optionally, all the eigenvectors of a real generalized symmetric-definite eigenproblem, of the form Az Bz, ABz z or BAz z, where A and B are symmetric, stored in <b>packed</b> <b>format,</b> and B is also positive-definite...|$|E
40|$|Abstract — Matrix {{computations}} are expensive, and GPUs {{have the}} potential to deliver results at reduced cost by exploiting parallel computation. We focus on dense matrices of the form AD 2 A T, where A is an m × n matrix (m ≤ n) and D is an n × n diagonal matrix. Many important numerical problems require solving linear systems of equations involving matrices of this form. These problems include normal equations approaches to solving linear least squares and weighted linear least squares problems, and interior point algorithms for linear and nonlinear programming problems. Index Terms — GPGPU, general purpose graphics processing units, symmetric matrix, triangular matrix, rectangular <b>packed</b> <b>format,</b> matrix computation, factorization, decomposition, weighted least squares. I...|$|E
40|$|Abstract. We present three {{algorithms}} for Cholesky factorization using minimum block {{storage for}} a distributed memory (DM) environment. One of the distributed square block <b>packed</b> (SBP) <b>format</b> algorithms performs similar to ScaLAPACK PDPOTRF, and our algorithm with iteration overlapping typically outperforms it by 15 – 50 % for small and medium sized matrices. By storing the blocks contiguously, we get better performing BLAS operations. Our DM algorithms are not sensitive to cache conflicts and thus give smooth and predictable performance. We also investigate {{the intricacies of}} using rectangular full <b>packed</b> (RFP) <b>format</b> with ScaLAPACK routines and point out some advantages and drawbacks. ...|$|R
5000|$|Various {{implementations}} of {{the program}} have been written. The most commonly known is the GNU Project's implementation using Lempel-Ziv coding (LZ77). OpenBSD's version of gzip is actually the compress program, to which support for the gzip format was added in OpenBSD 3.4. The 'g' in this specific version stands for [...] FreeBSD, DragonFlyBSD and NetBSD use a BSD-licensed implementation instead of the GNU version; it is actually a command-line interface for zlib intended to be compatible with the GNU implementation's options. These implementations originally come from NetBSD, and supports decompression of bzip2 and the Unix <b>pack</b> <b>format.</b>|$|R
50|$|<b>Format</b> <b>Packs</b> - These stamp <b>Format</b> <b>Packs</b> are {{specialist}} products {{issued by}} the Royal Mail and contain gutter pairs, cylinder blocks, traffic lights or top left corner of the selvedge of certain stamp issues within a sealed cellophane cover. They were sold at face value and available from the Philatelic Bulletine and selected Post Offices.|$|R
40|$|Abstract. Graphics {{processing}} units (GPUs), {{present in}} every laptop and desktop computer, are potentially powerful computational engines for solving numerical problems. We present a CPU-GPU algorithm for solving linear programming problems using interior point methods. This algorithm, {{based on the}} rectangular-packed matrix storage scheme of Gunnels and Gustavson, uses the GPU for computationally intensive tasks such as matrix assembly, Cholesky factorization, and forward and back substitution. Comparisons with a CPU implementation demonstrate that we can improve performance by using the GPU for sufficiently large problems. Since GPU architectures and programming languages are rapidly evolving, we expect that GPUs will be an increasingly attractive tool for matrix computation in the future. Key words. GPGPU, Cholesky factorization, matrix decomposition, forward and back substitution, linear programming, interior point method, rectangular <b>packed</b> <b>format</b> AMS subject classifications. 90 C 05, 90 C 51, 15 A 23, 68 W 10 1. Introduction. Hidde...|$|E
40|$|Abstract. We {{describe}} a new data format for storing triangular and symmetric matrices called RFP (Rectangular Full Packed). The standard two dimensional arrays of Fortran and C (also known as full format) {{that are used}} to store triangular and symmetric matrices waste half the storage space but provide high performance via the use of level 3 BLAS. <b>Packed</b> <b>format</b> arrays fully utilize storage (array space) but provide low performance as there are no level 3 packed BLAS. We combine the good features of packed and full storage using RFP format to obtain high performance using L 3 (Level 3) BLAS as RFP is totally full format. Also, RFP format requires exactly the same minimal storage as packed storage. Each full and/or packed symmetric/triangular routine becomes a single new RFP routine. We present LAPACK routines for Cholesky factorization and inverse computation in RFP format to illustrate this new work and to describe its performance on the Intel, IBM, Itanium, SGI, and Sun platforms. Performance of RPF verses LAPACK full routine...|$|E
40|$|This thesis {{deals with}} the {{development}} of efficient and reliable algorithms and library software for factorizing matrices and solving matrix equations on high-performance computer systems. The architectures of today's computers consist of multiple processors, each with multiple functional units. The memory systems are hierarchical with several levels, each having different speed and size. The practical peak performance of a system is reached only by considering all of these characteristics. One portable method for achieving good system utilization is to express a linear algebra problem in terms of level 3 BLAS (Basic Linear Algebra Subprogram) transformations. The most important operation is GEMM (GEneral Matrix Multiply), which typically defines the practical peak performance of a computer system. There are efficient GEMM implementations available for almost any platform, thus an algorithm using this operation is highly portable. The dissertation focuses on how recursion can be applied to solve linear algebra problems. Recursive linear algebra algorithms have the potential to automatically match the size of subproblems to the different memory hierarchies, leading to much better utilization of the memory system. Furthermore, recursive algorithms expose level 3 BLAS operations, and reveal task parallelism. The first paper handles the Cholesky factorization for matrices stored in <b>packed</b> <b>format.</b> Our algorithm uses a recursive packed matrix data layout that enables the use of high-performance matrix [...] matrix multiplication, in contrast to the standard <b>packed</b> <b>format.</b> The resulting library routine requires half the memory of full storage, yet the performance is better than for full storage routines. Paper two and tree introduce recursive blocked algorithms for solving triangular Sylvester-type matrix equations. For these problems, recursion together with superscalar kernels produce new algorithms that give 10 -fold speedups compared to existing routines in the SLICOT and LAPACK libraries. We show that our recursive algorithms also {{have a significant impact on}} the execution time of solving unreduced problems and when used in condition estimation. By recursively splitting several problem dimensions simultaneously, parallel algorithms for shared memory systems are obtained. The fourth paper introduces a library [...] -RECSY [...] -consisting of a set of routines implemented in Fortran 90 using the ideas presented in paper two and three. Using performance monitoring tools, the last paper evaluates the possible gain in using different matrix blocking layouts and the impact of superscalar kernels in the RECSY library...|$|E
5000|$|Dad's Root Beer was {{the first}} product to use the six <b>pack</b> <b>format</b> invented by the Atlanta Paper Company in the 1940s. Dad's also {{introduced}} the half-gallon bottle, becoming the first brand to market this size. Dad's was marketed as a family. [...] "Junior" [...] bottle size was the smallest, 7, 10 or 12 ounces. [...] "Mama" [...] was a quart bottle, and [...] "Papa" [...] was a half gallon bottle. (The image of the young boy featured on the [...] "Junior" [...] size bottle is Barney Berns' son, Gene Berns.) A common promotion in the 1940s was the 1 cent sale - purchase the Papa half gallon at regular price and get the Mama quart for 1 cent.|$|R
5000|$|Big D is a British {{brand of}} peanuts and snack food, {{introduced}} in 1967.They produce 50g packets of Carded nuts and Tumble (Loose) which are hugely popular within the licensed and retail trade within the UK and Ireland via {{their association with}} Tayto. They are growing rapidly after re designing their cards and pack designs. Their flavours include Salted Peanuts, Dry Roasted, Birds Eye Chilli and Honey Roasted. They also produce Salted Cashews in (30g bags) and Smoked Almonds (40g bags), which are also targeted at the licensed and retail sector. In addition to these <b>pack</b> <b>formats</b> they do {{a number of different}} shelf keeping units to cater for all occasions and channels of trade.|$|R
50|$|The DEC Radix-50, called Radix 508 <b>format,</b> <b>packs</b> three {{characters}} {{plus two}} bits in each 18-bit word.|$|R
40|$|Abstract—The 2 D Discrete Wavelet Transform (DWT) is a {{time-consuming}} kernel in many multimedia {{applications such}} as JPEG 2000 and MPEG- 4. The 2 D DWT consists of horizontal filtering along the rows followed by vertical filtering along the columns. The vertical filtering is easy to vectorize (assuming row-major order), but to vectorize the horizontal filtering many overhead instructions are required. In this {{paper we propose some}} SIMD architectural enhancements, such as the MAC operation, extended subwords, and the matrix register file technique, to develop high-performance implementations of the 2 D DWT on SIMD architectures. The MAC operation performs four 32 -bit single-precision floating-point multiplications with accumulation. The matrix register file allows to load data stored consecutively in memory to a column of the register file, where a column corresponds to corresponding subwords of different registers. These techniques avoid the need of data rearrangement instructions. In addition, in order to avoid data type conversion instructions, the extended subword technique is applied for the (5, 3) lifting transform. Extended subwords use registers that are wider than the <b>packed</b> <b>format</b> used to store the data. These techniques provide speedups of up to 2. 90 and 1. 32 for the (5, 3) lifting and Daub- 4 transforms, respectively. Keywords-Parallelization, SIMD Architectures, DWT. I...|$|E
40|$|During {{the course}} of this thesis, two {{scenarios}} are considered. In the first one, we contribute to feature extraction algorithms. In the second one, we use features to improve object detection solutions and localization. The two scenarios give rise to into four thesis sub-goals. First, we present a new shape skeleton pruning algorithm based on contour approximation and the integer medial axis. The algorithm effectively removes unwanted branches, conserves the connectivity of the skeleton and respects the topological properties of the shape. The algorithm is robust to significant boundary noise and to rigid shape transformations. It is fast and easy to implement. While shape-based solutions via boundary and skeleton analysis are viable solutions to object detection, keypoint features are important for textured object detection. Therefore, we present a keypoint featurebased planar object detection framework for vision-based localization. We demonstrate that our framework is robust against illumination changes, perspective distortion, motion blur, and occlusions. We increase robustness of the localization scheme in cluttered environments and decrease false detection of targets. We present an off-line target evaluation strategy and a scheme to improve pose. Third, we extend planar object detection to a real-time approach for 3 D object detection using a mobile and uncalibrated camera. We develop our algorithm based on two novel naive Bayes classifiers for viewpoint and feature matching that improve performance and decrease memory usage. Our algorithm exploits the specific structure of various binary descriptors in order to boost feature matching by conserving descriptor properties. Our novel naive classifiers require a database with a small memory footprint because we only store efficiently encoded features. We improve the feature-indexing scheme to speed up the matching process creating a highly efficient database for objects. Finally, we present a model-free long-term tracking algorithm based on the Kernelized Correlation Filter. The proposed solution improves the correlation tracker based on precision, success, accuracy and robustness while increasing frame rates. We integrate adjustable Gaussian window and sparse features for robust scale estimation creating a better separation of the target and the background. Furthermore, we include fast descriptors and Fourier spectrum <b>packed</b> <b>format</b> to boost performance while decreasing the memory footprint. We compare our algorithm with state-of-the-art techniques to validate the results...|$|E
40|$|In this dissertation, a novel SIMD {{extension}} called Modified MMX (MMMX) for multimedia computing is presented. Specifically, the MMX {{architecture is}} enhanced with the extended subwords and the matrix register file techniques. The extended subwords technique uses SIMD registers that are {{wider than the}} <b>packed</b> <b>format</b> used to store the data. The extended subwords technique avoids data type conversion overhead and increases parallelism in SIMD architectures. This is because promoting the subwords of the source SIMD registers to larger subwords {{before they can be}} processed and demoting the results again before they can be written back to memory incurs conversion overhead. The matrix register file technique allows to load data that is stored consecutively in memory into a column of the register file, where a column corresponds to the corresponding subwords of different registers. In other words, this technique provides both row-wise as well as column-wise accesses to the media register file. It is a useful approach for matrix operations that are common in multimedia processing. In addition, in this work, new and general SIMD instructions addressing the multimedia application domain are investigated. It does not consider an ISA that is application specific. For example, special-purpose instructions are synthesized using a few general-purpose SIMD instructions. The performance of the MMMX architecture is compared to the performance of the MMX/SSE architecture for different multimedia applications and kernels using the sim-outorder simulator of the SimpleScalar toolset. Additionally, three issues related to the efficient implementation of the 2 D Discrete Wavelet Transform (DWT) on general-purpose processors, in particular the Pentium 4, are discussed. These are 64 K aliasing, cache conflict misses, and SIMD vectorization. 64 K aliasing is a phenomenon that happens on the Pentium 4, which can degrade performance by an order of magnitude. It occurs if two or more data items whose addresses differ by a multiple of 64 K need to be cached simultaneously. There are also many cache conflict misses in the implementation of vertical filtering of the DWT, if the filter length exceeds the number of cache ways. In this dissertation, techniques are proposed to avoid 64 K aliasing and to mitigate cache conflict misses. Furthermore, the performance of the 2 D DWT is improved by exploiting the data-level parallelism using the SIMD instructions supported by most general-purpose processors. Electrical Engineering, Mathematics and Computer Scienc...|$|E
5000|$|The {{product is}} made by Trigon Snacks Trading Ltd. This {{manufacturer}} also licenses the American brand Planters peanuts, they entered administration in 2013. It was bought out of administration by Natco Foods and has grown from strength to strength ever since.The Trigon Snacks Site at Aintree has been home to nuts and snacks since the 70's and they are currently enjoying a resurgence due to their promotion of new <b>packs</b> <b>formats</b> and designs. They are also a key [...] "Own Label" [...] supplier and supply {{some of the largest}} National retailers in the UK. Due to Natco's connections to wider international markets it has opened up new opportunities for the brand and they continue to develop their product range in 2017.|$|R
5000|$|The 2311, with a {{removable}} 1316 disk pack, {{was based on}} the IBM 1311 and had a theoretical capacity of 7.2 MB, although actual capacity varied with record design. (When used with a 360/20, the 1316 <b>pack</b> was <b>formatted</b> into fixed-length 270 byte sectors, giving a maximum capacity of 5.4MB.) ...|$|R
50|$|Many {{countries}} around the world now issue Presentation <b>Packs</b> in similar <b>formats</b> as they are a convenient way to sell and display a whole stamp issue.|$|R
