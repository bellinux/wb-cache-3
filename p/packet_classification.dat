512|37|Public
5000|$|Two Sun Neptune 10 Gigabit Ethernet ports (embedded {{into the}} T2 processor) with <b>packet</b> <b>classification</b> and {{filtering}} ...|$|E
5000|$|... nftables is {{intended}} to replace Netfilter, as the new general-purpose in-kernel <b>packet</b> <b>classification</b> engine. [...] , as the new userspace utility, {{is intended}} to replace , , [...] and [...]|$|E
50|$|DiffServ uses a 6-bit {{differentiated}} services code point (DSCP) in the 8-bit differentiated services field (DS field) in the IP header for <b>packet</b> <b>classification</b> purposes. The DSCP {{field and}} ECN field replace the outdated IPv4 TOS field.|$|E
5000|$|Fast {{technique}} (compared to deep <b>packet</b> inspection <b>classification)</b> ...|$|R
40|$|In this paper, an {{efficient}} FPGA-based header classification circuit is proposed for network {{intrusion detection system}} (NIDS). The circuit is based on simple shift registers and symbol encoders for the fast <b>packet</b> header <b>classification</b> in hardware. As compared with related work, experimental {{results show that the}} proposed work achieves higher throughput and less hardware resource in the FPGA implementations of NIDS systems...|$|R
30|$|Therefore, the TCP {{throughput}} for wireless networks can {{be improved}} by accurately identifying the cause of packet loss [34, 62, 490] and reducing the TCP transmission rate only when congestion is detected. However, TCP congestion control has no mechanism for identifying the cause of packet loss. We term this problem as <b>packet</b> loss <b>classification</b> and various efforts {{have been made to}} propose solutions to this problem. In general, the solutions for <b>packet</b> loss <b>classification</b> fall in two broad categories, depending on where the solution is implemented in the network, that is, at intermediate nodes or in end-systems. The former requires additional implementation at the intermediate nodes that either hide the error losses from the sender [32, 33], or communicate to the sender extra statistics about the network state, such as congestion notification [483] and burst acknowledgment (ACK) [490]. It is important to mention that hiding error losses may violate TCP end-to-end principle as it may require splitting the TCP connection by sending an ACK to the sender before the packet arrives at the receiver [129].|$|R
50|$|Routing {{typically}} {{only works}} on the Internet Protocol layer and is very limited in <b>packet</b> <b>classification.</b> It {{is bound to be}} stateless {{due to the nature of}} IP routers. Typically, classification is limited to the destination IP address prefix, source IP address and incoming network interface.|$|E
50|$|George {{also worked}} with Eatherton and Dittia on the Tree bitmap IP lookup {{algorithm}} that is used in Cisco’s CRS-1 router, which many {{believe to be the}} fastest router in the world. Tree bitmap and hypercuts (with Sumeet Singh and Florin Baboescu) appear to be among the best algorithms (excluding CAMs) for IP lookup and <b>packet</b> <b>classification</b> today.|$|E
50|$|Varghese {{has also}} worked {{extensively}} on fast IP lookup and <b>packet</b> <b>classification.</b> His work with G. Chandranmenon on Threaded indexes predates {{the work done}} at Cisco Systems and Juniper Networks on tag switching. His work on multibit tries (with V. Srinivasan) {{has been used by}} a number of companies including Microsoft. His work on scalable IP packet lookup (with Waldvogel and Turner) for longer addresses such as IPv6 is being considered for use by Linux.|$|E
40|$|Abstract—Ternary content {{addressable}} memories (TCAMs) {{are attractive}} for {{applications such as}} <b>packet</b> forwarding and <b>classification</b> in network routers. However, the high cost and power consumption are limiting their popularity and versatility. In this paper, we present a comparative study of the design techniques for low-power TCAMs. I...|$|R
40|$|Abstract—Passive network {{monitoring}} is {{a complex}} activity that mainly consists in <b>packet</b> capturing and <b>classification.</b> Unfortunately this architecture often {{cannot be applied to}} gigabit networks, as the amount of data to capture is too large for the monitoring applications. This paper describes the challenges and lessons learnt by the author while monitoring networks at gigabit speeds and above. Finally, it describes an architecture able to successfully monitor networks at high speeds using commodity hardware and open source software...|$|R
30|$|Congestion {{control is}} {{fundamental}} to network operations and is responsible for throttling the number of packets entering the network. It ensures network stability, fairness in resource utilization, and acceptable packet loss ratio. Different network architectures deploy their own set of congestion control mechanisms. The most well-known congestion control mechanisms are those implemented in TCP, since TCP along with IP constitute {{the basis of the}} current Internet [13]. TCP congestion control mechanisms operate in the end-systems of the network to limit the packet sending rate when congestion is detected. Another well-known congestion control mechanism is queue management [72] that operates inside the intermediate nodes of the network (e.g. switches and routers) to complement TCP. There have been several improvements in congestion control mechanisms for the Internet and evolutionary network architectures, such as Delay-Tolerant Networks (DTN) and Named Data Networking (NDN). Despite these efforts, there are various shortcomings in areas such as <b>packet</b> loss <b>classification,</b> queue management, Congestion Window (CWND) update, and congestion inference.|$|R
5000|$|In 2015, Viegas and {{his colleagues}} [...] {{proposed}} an anomaly-based intrusion detection engine, aiming System-on-Chip (SoC) for applications in Internet of Things (IoT), for instance. The proposal applies machine learning for anomaly detection, providing energy-efficiency to a Decision Tree, Naive-Bayes, and k-Nearest Neighbors classifiers implementation in an Atom CPU and its hardware-friendly implementation in a FPGA. In the literature, {{this was the first}} work that implement each classifier equivalently in software and hardware and measures its energy consumption on both. Additionally, {{it was the first time}} that was measured the energy consumption for extracting each features used to make the network <b>packet</b> <b>classification,</b> implemented in software and hardware.|$|E
50|$|DiffServ {{operates}} {{on the principle}} of traffic classification, where each data packet is placed into a limited number of traffic classes, rather than differentiating network traffic based on the requirements of an individual flow. Each router on the network is configured to differentiate traffic based on its class. Each traffic class can be managed differently, ensuring preferential treatment for higher-priority traffic on the network. The premise of Diffserv is that complicated functions such as <b>packet</b> <b>classification</b> and policing can be carried out {{at the edge of the}} network by edge routers who then mark the packet to receive a particular type of per-hop behavior. Core router functionality can then be kept simple. No classification and policing is required. Such routers simply apply PHB treatment to packets based on the marking. PHB treatment is achieved by core routers using a combination of scheduling policy and queue management policy.|$|E
40|$|This bachelor&# 8217;s thesis {{deals with}} <b>packet</b> <b>classification</b> in {{computer}} networks. In the introduction it describes some areas where <b>packet</b> <b>classification</b> is used. Then, necessary theoretical background is introduced, together with requirements for classification algorithm. It describes four high-level {{approaches to the}} <b>packet</b> <b>classification.</b> It describes principle of various algorithms for each high-level approach. Algorithm EffiCuts is chosen for detailed analysis and implementation. This <b>packet</b> <b>classification</b> algorithm is compared with other <b>packet</b> <b>classification</b> algorithms from NetBench library...|$|E
40|$|Abstract. The {{objective}} of this work is the comparison of two types of feature sets for the classification of encrypted traffic such as SSH. To this end, two learning algorithms – RIPPER and C 4. 5 – are employed using packet header and flow-based features. Traffic classification is performed without using features such as IP addresses, source/destination ports and payload information. Results indicate that the feature set based on packet header information is comparable with flow based feature set {{in terms of a}} high detection rate and a low false positive rate. Keywords: Encrypted Traffic <b>Classification,</b> <b>Packet,</b> Flow, and Security. ...|$|R
30|$|Liu et al. [282] proposed, to {{the best}} of our knowledge, the first {{approach}} using ML for inferring the cause of packet loss in hybrid wired-wireless networks. Particularly, they distinguish between losses due to congestion and errors in wireless transmission. They employ EM to train a 4 -state HMM based on loss pair RTT values, that is RTT measured before a packet loss. The Viterbi algorithm [455] is applied on the trained HMM to infer the cause of packet loss. The resultant ML-based packet loss classifier exhibits greater flexibility and superiority over TCP-Vegas [73]. Since, TCP-Vegas has been shown to outperform non-ML-based packet loss classifiers [60], the ML-based solution of [282] was fundamental in creating a niche and instigating the feasibility of ML-based solutions for <b>packet</b> loss <b>classification</b> problems. However, the authors assume that the RTT values never change during measurement. This is an unrealistic assumption since a modification in the return path changes the RTT values without affecting the cause of packet loss. Thus, affecting the correlation between RTT and cause of packet loss.|$|R
40|$|Network {{processing}} {{is becoming}} increasingly challenging to the network architects and engineers in terms of hardware design and application development due {{to an increase in}} packet processing complexity and constantly evolving protocol standards. New inventions in the transmission medium such as DWDM, SDH and GigaEthernet increase bandwidth capacity of the network. Meanwhile, more network-oriented applications are becoming popular. All these require faster and programmable packet processing capabilities in the inter-connecting network nodes. Packet processing technology of network equipment is seeing a migration from ASIC solutions to NP. In this paper, we review the latest technology of NP, which has been designed today for next generation networks. NP has to adapt to rapid protocol standards change and perform at wire speed like ASIC solutions, using considerably easier programmable NPs besides maintaining short time-to-market and time-in-market which is essential to meet tomorrow’s network demand. This paper discusses the trend in NP architecture, <b>packet</b> processing <b>classification</b> functions and the challenges ahead for the network processors architecture. The authors feel this is the first survey paper on NP...|$|R
40|$|As {{computer}} networking {{grows more}} important in daffy usage, its security is also paramount. Network Intrusion Detection System (NIDS) observes network traffic for identifying malicious packets. Core to NIDS function is <b>packet</b> <b>classification</b> component. It {{is in charge of}} scanning network packet header. An improved <b>packet</b> <b>classification</b> component bears direct result for NIDS performance. This paper discusses technique to improve <b>packet</b> <b>classification</b> through the use of Bloom Filter and hash table lookup. Because <b>packet</b> <b>classification</b> is an important function to other networking infrastructure, for instance firewall quality of service, multimedia communication, an improved <b>packet</b> <b>classification</b> scheme could benefit application in related areas...|$|E
40|$|<b>Packet</b> <b>classification</b> {{is one of}} {{the most}} {{important}} enabling technologies for next generation network services. Four of the main challenges in the <b>packet</b> <b>classification</b> are increase in size of the classifier, link speed, amount of multimedia traffic, and number of media-rich and bandwidth intensive internet applications. Due to this there is a need of memory efficient and high throughput <b>packet</b> <b>classification</b> schemes. In this paper a novel technique for fast parallel <b>packet</b> <b>classification</b> (FPPC) is proposed. A recent paper [14] showed how to construct a hierarchica...|$|E
40|$|Routers can use <b>packet</b> <b>classification</b> {{to support}} {{advanced}} {{functions such as}} QoS routing, virtual private networks and access control. Unlike traditional routers, which forward packets based on destination address only, routers with <b>packet</b> <b>classification</b> capability can forward packets based on multiple header fields, such as source address, protocol type, or application port numbers. The destinationbased forwarding {{can be thought of}} as one-dimensional <b>packet</b> <b>classification...</b>|$|E
40|$|One of {{the most}} {{challenging}} problems in target classification is the extraction of a robust feature, which can effectively represent a specific type of targets. The use of seismic signals in unattended ground sensor (UGS) systems makes this problem more complicated, because the seismic target signal is non-stationary, geology-dependent and with high-dimensional feature space. This paper proposes a new feature extraction algorithm, called wavelet packet manifold (WPM), by addressing the neighborhood preserving embedding (NPE) algorithm of manifold learning on the wavelet packet node energy (WPNE) of seismic signals. By combining non-stationary information and low-dimensional manifold information, WPM provides a more robust representation for seismic target classification. By using a K nearest neighbors classifier on the WPM signature, the algorithm of wavelet <b>packet</b> manifold <b>classification</b> (WPMC) is proposed. Experimental results show that the proposed WPMC can not only reduce feature dimensionality, but also improve the classification accuracy up to 95. 03 %. Moreover, compared with state-of-the-art methods, WPMC is more suitable for UGS in terms of recognition ratio and computational complexity...|$|R
40|$|Abstract — This paper {{presents}} a novel cross-layer rate control scheme for optimizing 3 D wavelet scalable video transmission over the IEEE 802. 11 e wireless local area networks. The proposed scheme {{consists of a}} macro and a micro rate control schemes residing at the application layer and the network sublayer respectively. The macro rate control uses bandwidth estimation to achieve optimal bit allocation with minimum distortion. The micro rate control employs an adaptive mapping of <b>packets</b> using video <b>classifications.</b> This prioritizes appropriately the video traffic to maximize the transmission protection to the important video packets. The performance is investigated by simulations showing advantages of our cross-layer design. I...|$|R
40|$|Routers {{classify}} packets {{to determine}} which flow they belong to, and to decide what service they should receive. Classification may, in general, be based on an arbitrary number of fields in the <b>packet</b> header. Performing <b>classification</b> quickly on an arbitrary number of fields {{is known to be}} difficult, and has poor worst-case performance. In this paper, we consider a number of classifiers taken from real networks. We find that the classifiers contain considerable structure and redundancy that can be exploited by the classification algorithm. In particular, we find that a simple multi-stage classification algorithm, called RFC (recursive flow classification), can classify 30 million packets per second in pipelined hardware, or one million packets per second in software. ...|$|R
40|$|<b>Packet</b> <b>classification</b> can {{be applied}} in network security, QoS, routing, network load balancing, {{bandwidth}} sharing etc. Algorithms of <b>packet</b> <b>classification</b> are categorized into either hardware-based or software-based solutions. Nowadays <b>packet</b> <b>classification</b> implementations are inefficient in IPv 6 network environment because much longer address fields have to be processed. In this paper, we propose schemes that use cache memory to improve the performance ofIPv 6 <b>packet</b> <b>classification.</b> We evaluate the performance of our schemes through simulation under different cache sizes, architectures, and replacement policies. We use real world IPv 6 traffic flows for the experiment, and the numerical results show that our schemes achieve higher than 90 % hit rate when cache size is no less than 1024 entries in 4 -way associative cache memory architecture, this significantly improves the performance ofIPv 6 <b>packet</b> <b>classification.</b> 1...|$|E
40|$|Multi field <b>packet</b> <b>classification</b> is the {{enabling}} {{function for}} many novel and emerging network applications. Exponential growth of Internet traffic and classification rule sets demand novel hardware based architectural approaches to <b>packet</b> <b>classification.</b> Even {{though this is}} an immensely studied area, <b>packet</b> <b>classification</b> that supports scalability in both line rates and rule sets is scarce. In this paper we present experience gained while implementing a parallel <b>packet</b> <b>classification</b> engine architecture on a popular reconfigurable router platform. The architecture exploits parallelism offered in modern hardware technologies to classify multiple packets simultaneously to increase the throughput. The architecture is also capable of utilizing temporal locality present in internet traffic to increase the throughput. The Architecture was implemented on NetFPGA platform and <b>packet</b> <b>classification</b> was done at full line rate without degrading the data rate or the round trip time...|$|E
40|$|High-performance <b>packet</b> <b>classification</b> {{is crucial}} for a {{multitude}} of emerging network services. Diffserv edge routers, firewalls, intrusion-detection devices and many QoS-enabled routers need to classify packets to determine {{what to do with}} them. With link rates of 10 Gb/s and higher this becomes a difficult task at best, and <b>packet</b> <b>classification</b> becomes a bottleneck. This dissertation addresses that problem by providing <b>packet</b> <b>classification</b> techniques with increased scalability. The contributions of this work include a new TCAM architecture called Extended TCAMs, a refinement of that approach (inspired in part by Parallel <b>Packet</b> <b>Classification)</b> and a method for reducing the size of data structures used in Recursive Flow Classification. Extended TCAMs are studied in detail and are shown to allow <b>packet</b> <b>classification</b> using over 100, 000 rules {{at the same rate as}} a standard TCAM while reducing powe...|$|E
40|$|Abstract — A {{new type}} of a neural-network architecture, the {{parallel}} consensual neural network (PCNN), is introduced and applied in classification/data fusion of multisource remote sensing and geographic data. The PCNN architecture is based on statistical consensus theory and involves using stage neural networks with transformed input data. The input data are transformed several times and the different transformed data are used {{as if they were}} independent inputs. The independent inputs are first classified using the stage neural networks. The output responses from the stage networks are then weighted and combined to make a consensual decision. In this paper, optimization methods are used in order to weight the outputs from the stage networks. Two approaches are proposed to compute the data transforms for the PCNN, one for binary data and another for analog data. The analog approach uses wavelet packets. The experimental results obtained with the proposed approach show that the PCNN outperforms both a conjugate-gradient backpropagation neural network and conventional statistical methods in terms of overall classification accuracy of test data. Index Terms — Consensus theory, wavelet <b>packets,</b> accuracy, <b>classification,</b> probability density estimation, statistical patter...|$|R
5000|$|P4080 - Includes eight e500mc cores, {{each with}} 32/32kB instruction/data L1 caches and a 128 kB L2 cache. The chip has dual 1 MB L3 caches, each {{connected}} to a 64-bit DDR2/DDR3 memory controller. The chip contains a security and encryption module, capable of <b>packet</b> parsing and <b>classification,</b> and acceleration of encryption and regexp pattern matching. The chip can be configured with up to eight Gigabit and two 10 Gigabit Ethernet controllers, three 5 GHz PCIe ports and two RapidIO interfaces. It also has various other peripheral connectivity such as two USB2 controllers. It is designed to operate below 30 W at 1.5 GHz. The processor is manufactured on a 45 nm SOI process and begun sampling to customers in August 2009.|$|R
40|$|Abstract — A cross-layer {{design for}} {{optimizing}} 3 D wavelet scalable video transmission over the IEEE 802. 11 e networks is proposed. A thorough {{study on the}} behavior of the IEEE 802. 11 e protocol is conducted. Based on our findings, all timescales rate control is developed featuring a unique property of soft capacity support for multimedia delivery. The design consists of a macro timescale and a micro timescale rate control schemes residing at the application layer and the network sublayer respectively. The macro rate control uses bandwidth estimation to achieve optimal bit allocation with minimum distortion. The micro rate control employs an adaptive mapping of <b>packets</b> from video <b>classifications</b> to appropriate network priorities which preemptively drops less important video packets to maximize the transmission protection to the important video packets. The performance is investigated by simulations highlighting advantages of our crosslayer design...|$|R
40|$|Two stage <b>packet</b> <b>classification</b> using most {{specific}} {{more than}} 11 dependent memory accesses {{in the critical}} path independent {{of the size of}} the classification database. The memory access bandwidth of our scheme is also bounded when our scheme is accelerated in hardware. Compared to other <b>Packet</b> <b>classification</b> is the process of identifying flows from among streams of packets that arrive at routers. <b>Packet</b> <b>classification</b> is still an impor-tant and open networking problem because the erved...|$|E
40|$|This {{bachelor}} thesis {{contains an}} introduction to <b>packet</b> <b>classification,</b> types of <b>packet</b> <b>classification</b> techniques and different metrics. It describes different algorithms used for <b>packet</b> <b>classification</b> and implementation of Recursive flow classification algorithm {{is also part of}} this bachelors thesis. It presents different configuration parameters of RFC algorithm and describes its advantages and disadvantages. This work is concluded with a set of experiments describing characteristics of implemented algorithm together with comparison of other classification approaches...|$|E
40|$|Abstract—With {{the rapid}} growth of network technologies, many new web {{services}} have been developed to provide various applications and computing functions. These services rely deeply on the internet. Therefore, <b>packet</b> <b>classification</b> is an important issue of network security that typically adopts a flexible packet filtering system to classify each processed packet. Traditional <b>packet</b> <b>classification</b> requires hung computing time to process large amount of internet packets. Hence, we propose a GPGPU-based parallel <b>packet</b> <b>classification</b> method to decrease the computational cost. We also evaluate the performance of the proposed method with implementation on various memory architectures of CUDA device. The experiment results demonstrate that the proposed method can achieve significant speed up over the sequential <b>packet</b> <b>classification</b> algorithms on single CPU...|$|E
40|$|Machine Learning (ML) {{classifiers}} {{have been}} shown to provide accurate, timely and continuous IP flow classification when evaluating sub-flows (short moving windows of packets within flows). They can be used to provide automated QoS management for interactive traffic, such as fast-paced multiplayer games or VoIP. As with other ML classification approaches, previous sub-flow techniques have assumed all packets in all flows are being observed and evaluated. This limits scalability and poses a problem for practical deployment in network core or edge routers. In this paper we propose and evaluate subflow packet sampling (SPS) to reduce an ML sub-flow classifier's resource requirements with minimal compromise of accuracy. While random <b>packet</b> sampling increases <b>classification</b> time from <; 1 second to over 30 seconds and can reduce accuracy from 98 % to <; 90 %, our tailored SPS technique retains classification times of <; 1 second while providing 98 % accuracy...|$|R
40|$|Abstract—Ternary Content Addressable Memories (TCAMs) {{have been}} {{emerging}} as a popular device in designing routers for <b>packet</b> forwarding and <b>classifications.</b> Despite their premise on high-throughput, large TCAM arrays are prohibitive due to their excessive power consumption and lack of scalable design schemes. This paper presents a TCAM-based router architecture that is energy and storage efficient. We introduce prefix aggregation and expansion techniques to compact the effective TCAM size in a router. Pipelined and paging schemes are employed in the architecture to activate {{a limited number of}} entries in the TCAM array during an IP lookup. The new architecture provides low power, fast incremental updating, and fast table look-up. Heuristic algorithms for page filling, fast prefix update, and memory management are also provided. Results have been illustrated with two large routers (bbnplanet and attcanada) to demonstrate the effectiveness of our approach. Index Terms—Router, TCAMs, IP lookup, partition, compaction, page table...|$|R
40|$|Abstract. For many network services, such as firewalling, load balanc-ing, or {{cryptographic}} acceleration, data packets need to {{be classified}} (or filtered) before network appliances can apply any action processing on them. Typical actions are header manipulations, discarding packets, or tagging packets with additional information required for later process-ing. Structured data, such as XML, is independent from any particular presentation format and is an ideal information exchange format for a va-riety of heterogeneous sources. In this paper, we propose a new algorithm for fast and efficient classification of structured data in the network. In our approach, <b>packet</b> processing and <b>classification</b> is performed on struc-tured payload data rather than only packet header information. Using a combination of hash functions, Bloom filter, and set intersection theory our algorithm builds a hierarchical and layered data element tree over the input grammar that requires logarithmic time and tractable space complexity. ...|$|R
