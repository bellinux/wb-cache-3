10000|4680|Public
5|$|Canning is {{a process}} during which the enzymes in {{vegetables}} are deactivated and the micro-organisms present killed by heat. The sealed can excludes air from the foodstuff to prevent subsequent deterioration. The lowest necessary heat and the minimum <b>processing</b> <b>time</b> are used {{in order to prevent}} the mechanical breakdown of the product and to preserve the flavor as far as is possible. The can is then able to be stored at ambient temperatures for a long period.|$|E
5|$|Preparation for {{the mission}} began on June 3, with the {{assembly}} of the shuttle's solid rocket boosters (SRB) on the Mobile Launcher Platform. The boosters were stacked on June 20, 1983, and the external tank mated to the assembly on June 23. Challenger arrived at Kennedy Space Center on June 29, and {{was transferred to the}} Orbiter Processing Facility on June 30. After post-flight maintenance and preparation for the new mission, including the installation of most flight payloads, the shuttle was transferred to the Vehicle Assembly Building on July 27, and mated to the booster/tank stack. The stack was checked out on July 29 and 30, and moved to Launch Complex 39A on August 2, 1983. INSAT-1B was loaded into the orbiter when on the pad; the overall <b>processing</b> <b>time</b> from Challenger arriving at KSC to being ready for launch was only sixty-two days, a record for the program at the time.|$|E
25|$|Maximum <b>processing</b> <b>time</b> is 30 {{days for}} regular {{applications}} (60 days at diplomatic-consular missions), and 48 hours for urgent applications. Fee is RSD 3,600.00.|$|E
5000|$|Deterministic (fixed) <b>processing</b> <b>times</b> or {{probabilistic}} <b>processing</b> <b>times</b> ...|$|R
50|$|There are {{separate}} <b>processing</b> <b>times</b> {{reported for the}} appeals processing. As of February 1, 2016, the <b>processing</b> <b>times</b> for administrative appeals for all categories of Form I-140 is 6 months or less.|$|R
40|$|Optimizing jobshop-scheduling {{problems}} (JSSPs), in wh ich imprecise <b>processing</b> <b>times</b> are modeled as fuzzy numbers, {{results in}} more flexible solution. That is, the produced schedule is flexible; it stays valid and can cope with all possible durations within the specified range. In this paper, we present evidences {{that support the}} claim that solving JSSPs with fuzzy <b>processing</b> <b>times</b> would produce schedules less sensitive to variations in <b>processing</b> <b>times.</b> Empirical evidence is introduced to show that optimal solutions of the crisp JSSPs seem {{more sensitive to the}} variations in <b>processing</b> <b>times</b> than the optimal solutions of the fuzzy JSSPs. Therefore; optimizing fuzzy JSSPs cannot be reduced to optimizing crisp JSSPs. To show this, three different benchmark problems, FT 6 x 6, La 11, and La 12 were tested using their crisp and fuzzy <b>processing</b> <b>times...</b>|$|R
25|$|When {{it comes}} to factory automation, Host Simulation Software (HSS) is a {{commonly}} used testing tool {{that is used to}} test the equipment software. HSS is used to test equipment performance with respect to Factory Automation standards (timeouts, response time, <b>processing</b> <b>time).</b>|$|E
25|$|Under {{the current}} system, {{immediate}} family members (spouse, child, and dependent mother and father), have priority status for green cards and generally wait 6 {{months to a}} year to have their green card application approved. For non-immediate family members, the process may take up to 10 years. Paperwork is processed on a first-come, first-served basis, so new applications may go untouched for several months. To address the issue of slow processing times, USCIS has made a policy allowing applicants to submit the I-130 and I-485 forms at the same time. This has reduced the <b>processing</b> <b>time.</b> Another delay in the process comes when applications have mistakes. In these cases papers are sent back to the applicant, further delaying the process. Currently the largest issue creating long wait times is not <b>processing</b> <b>time,</b> but rather immigrant visa quotas set by Congress.|$|E
25|$|To {{illustrate}} the potential improvements possible even in well established algorithms, a recent significant innovation, relating to FFT algorithms (used {{heavily in the}} field of image processing), can decrease <b>processing</b> <b>time</b> up to 1,000 times for applications like medical imaging. In general, speed improvements depend on special properties of the problem, which are very common in practical applications. Speedups of this magnitude enable computing devices that make extensive use of image processing (like digital cameras and medical equipment) to consume less power.|$|E
40|$|Abstract. This paper {{studies the}} {{complexity}} variations of scheduling problems in di erent machine environments when replacing operations with arbitrary <b>processing</b> <b>times</b> by the chains of operations with unit <b>processing</b> <b>times.</b> Special {{attention is paid}} to polynomial-time algorithms for chain-like precedence-constrained problems with unit <b>processing</b> <b>times</b> and transformations of their solutions to each other. Due to the small size, the problems of this type cannot be solved in polynomial time by the algorithms solving in polynomial time their extensions with tree-like or general precedence constraints. There are also considered reductions of preemptive problems with arbitrary <b>processing</b> <b>times</b> to nonpreemptive problems with unit <b>processing</b> <b>times</b> in cross or equal machine environments involving parallel machines, a ow shop andanopenshop. The complexity status of several problems that were open before is clari ed. 1...|$|R
40|$|We study {{a single}} machine {{scheduling}} problem of minimizing total completion <b>time</b> with step-improving <b>processing</b> <b>times.</b> For step-improving <b>processing</b> <b>times,</b> job <b>processing</b> <b>times</b> reduce by a job-dependent amount after a common critical date. We {{show that the}} problem is NP-hard in general. We formulate a Mixed Integer Programming model and develop an LP-based heuristic for the problem. Finally, we perform computational experiments showing that the proposed heuristic provides effective solutions...|$|R
40|$|This paper {{studies the}} {{complexity}} variations of scheduling problems in different machine environments when replacing operations with arbitrary <b>processing</b> <b>times</b> by the chains of operations with unit <b>processing</b> <b>times.</b> Special {{attention is paid}} to polynomial-time algorithms for chain-like precedence-constrained problems with unit <b>processing</b> <b>times</b> and transformations of their solutions to each other. Due to the small size, the problems of this type cannot be solved in polynomial time by the algorithms solving in polynomial time their extensions with tree-like or general precedence constraints. There are also considered reductions of preemptive problems with arbitrary <b>processing</b> <b>times</b> to nonpreemptive problems with unit <b>processing</b> <b>times</b> in cross or equal machine environments involving parallel machines, a flow shop and an open shop. The complexity status of several problems that were open before is clarified. 1. Introduction Recent papers devoted to unit-time flow-shop, open-shop and job [...] ...|$|R
25|$|The {{light green}} area in Fig. 5 {{indicates}} those neural maps and processing modules, which process a syllable {{as a whole}} unit (specific <b>processing</b> <b>time</b> window around 100ms and more). This processing comprises the phonetic map and the directly connected sensory state maps within the sensory-phonetic processing modules and the directly connected motor plan state map, while the primary motor map {{as well as the}} (primary) auditory and (primary) somatosensory map process smaller time windows (around 10ms in the ACT model).|$|E
25|$|Programming {{languages}} {{commonly associated}} with buffer overflows include C and C++, which provide no built-in protection against accessing or overwriting data {{in any part of}} memory and do not automatically check that data written to an array (the built-in buffer type) is within the boundaries of that array. Bounds checking can prevent buffer overflows, but requires additional code and <b>processing</b> <b>time.</b> Modern operating systems use a variety of techniques to combat malicious buffer overflows, notably by randomizing the layout of memory, or deliberately leaving space between buffers and looking for actions that write into those areas ("canaries").|$|E
25|$|The {{only way}} to obtain a TTP is to arrange a tour {{operated}} by a Tibet-based travel agent which at least includes hotels and transportation. Visitors are also not permitted to travel by public buses across Tibet and are only allowed to travel by private transportation as organised in the tour. Moreover, if entering Tibet from Nepal, one must also join a group tour and be only allowed on a group visa. The TTP has to be handed in to the tour guide upon arrival at the airport or train station, and the tour guide will keep the permit until the traveler leaves the TAR. The <b>processing</b> <b>time</b> of a TTP is at least 15 days.|$|E
40|$|Abstract In a {{scheduling}} problem with controllable <b>processing</b> <b>times</b> the job pro-cessing {{time can be}} compressed through incurring an additional cost. We present polynomial time approximation schemes for the non-preemptive caseof several identical parallel machine {{scheduling problem}}s with controllable <b>processing</b> <b>times...</b>|$|R
40|$|This paper {{presents}} a procedure for sequencing jobs {{on a single}} machine with jobs having a common due date and stochastic <b>processing</b> <b>times.</b> The performance measure to be optimized is the expected incompletion cost. Job <b>processing</b> <b>times</b> are normally distributed random variables, and the variances of the <b>processing</b> <b>times</b> are proportional to their means. The optimal sequences are shown to have a W- or V-shape. Based on this property computationally attractive solution methods are presented. © 1990...|$|R
40|$|Background and PurposezzThere {{is little}} {{information}} available {{about the effects}} of Emergency Medical Service (EMS) hospital notification on transfer and intrahospital <b>processing</b> <b>times</b> in cases of acute ischemic stroke. MethodszzThis study retrospectively investigated the real transfer and imaging <b>processing</b> <b>times</b> for cases of suspected acute stroke (AS) with EMS notification of a requirement for intravenous (IV) tissue-type plasminogen activator (t-PA) and for cases without notification. Also we compared the intra-hospital <b>processing</b> <b>times</b> for receiving t-PA between patients with and without EMS prehospital notification...|$|R
25|$|VA {{disability}} {{benefits for}} PTSD have evolved over time, {{in response to}} legislation, scientific advances, political pressure, revised diagnostic classification schemes, regulatory changes, case law, and administrative decisions. Veterans advocacy organizations, researchers, clinicians, politicians, administrators, and citizens will no doubt continue to influence how the United States evaluates, adjudicates, and administers the program. For example, current efforts at change or reform include urging the VA to place more emphasis on vocational rehabilitation and treatment versus cash payments; revising the General Rating Formula for Mental Disorders to better reflect problems experienced by veterans with PTSD; establishing a balance between efforts to decrease claims <b>processing</b> <b>time</b> (productivity) {{with the need for}} consistency and accuracy of examination results and rating decisions (quality); and considering a veteran's quality of life as a factor in determining the disability rating.|$|E
25|$|The Cryptophon {{is built}} on the {{foundation}} of an 8051 compatible microprocessor which controls the whole system and peripherals (e.g. ISDN controller, keypad and display). For the cryptography, Floricic used cheap DSPs from Texas Instruments which he scrapped out of old computer modems, but which could also be bought at affordable prices. As this type of DSP is not powerful enough for the cryptography algorithm chosen, Floricic used two of them for the Cryptophon – one for sending and one for receiving. He planned to extend the phone so {{it would also be}} possible to encrypt data-connections. Floricic developed both the operating software of the phone as well as the cryptography implementation in the DSPs. He found a new way to implement IDEA to save significant <b>processing</b> <b>time.</b>|$|E
25|$|However, in {{contrast}} to simple convergence, the SC integrates information to create an output that differs from {{the sum of its}} inputs. Following a phenomenon labelled the 'spatial rule', neurons are excited if stimuli from multiple modalities fall on the same or adjacent receptive fields, but are inhibited if the stimuli fall on disparate fields. Excited neurons may then proceed to innervate various muscles and neural structures to orient an individual's behaviour and attention toward the stimulus. Neurons in the SC also adhere to the 'temporal rule', in which stimulation must occur within close temporal proximity to excite neurons. However, due to the varying <b>processing</b> <b>time</b> between modalities and the relatively slower speed of sound to light, it has been found the neurons may be optimally excited when stimulated some time apart.|$|E
40|$|We {{consider}} the single-machine sequencing model with stochastic <b>processing</b> <b>times</b> {{and the problem}} of minimizing the number of stochastically tardy jobs. In general, this problem is NP-hard. Recently, however, van den Akker and Hoogeveen found some special cases that could be solved in polynomial time. We generalize their findings by providing a polynomial solution for any stochastically ordered <b>processing</b> <b>times.</b> We then show that the algorithm applies as well to basic linearly associated <b>processing</b> <b>times,</b> thus allowing more realistic modeling of positive dependencies...|$|R
40|$|We {{study the}} problem of {{preemptive}} scheduling n jobs with given release times on m identical parallel machines. The objective is to minimize the average flow time. We show that when all jobs have equal <b>processing</b> <b>times</b> then the problem can be solved in polynomial time using linear programming. Our algorithm can also {{be applied to the}} open-shop problem with release <b>times</b> and unit <b>processing</b> <b>times.</b> For the general case (when <b>processing</b> <b>times</b> are arbitrary), we show that the problem is unary NP-hard. ...|$|R
40|$|International audienceIn this paper, we {{consider}} a cyclic job shop problem where {{a subset of}} tasks have varying <b>processing</b> <b>times.</b> The minimum <b>processing</b> <b>times</b> and maximum <b>processing</b> <b>times</b> of these tasks are known. We propose a branch and bound method that finds the schedule which minimizes the mean cycle time with respect to variations. We show that the evaluation of a schedule {{can be considered as}} a volume calculus of some polytopes. Indeed, for each schedule we can associate a set of polytopes whose volumes provide information on the variation effect on the considered schedule...|$|R
25|$|The time {{resolution}} needed depends on brain <b>processing</b> <b>time</b> for various events. An {{example of the}} broad range here is given by the visual processing system. What the eye sees is registered on the photoreceptors of the retina within a millisecond or so. These signals get to the primary visual cortex via the thalamus in tens of milliseconds. Neuronal activity related to the act of seeing lasts for more than 100ms. A fast reaction, such as swerving to avoid a car crash, takes around 200ms. By about half-a-second, awareness and reflection of the incident sets in. Remembering a similar event may take a few seconds, and emotional or physiological changes such as fear arousal may last minutes or hours. Learned changes, such as recognizing faces or scenes, may last days, months, or years. Most fMRI experiments study brain processes lasting a few seconds, with the study conducted over some tens of minutes. Subjects may move their heads during that time, and this head motion needs to be corrected for. So does drift in the baseline signal over time. Boredom and learning may modify both subject behavior and cognitive processes.|$|E
500|$|For soldiers, the {{benefits}} are straightforward, but for the officers {{in charge of the}} system {{the benefits}} are much more extensive. [...] Transporting U.S. currency overseas costs the military {{hundreds of thousands of dollars}} annually [...] during the Iraq War, for every $1,000,000 sent to pay soldiers in Iraq, it cost $60,000 in security, logistics, and support fees. [...] It also eliminates the need for the World War II practice of producing the Military Payment Certificate. [...] The use of a cashless economy at military stores reduces transaction times, freeing personnel from tasks like stamping money orders or counting coins [...] during 9 months of the Iraq War, this saved approximately 5000 hours of <b>processing</b> <b>time</b> for financial personnel. [...] It also prevents counterfeiting.|$|E
2500|$|In March 2016, the {{government}} of TAR announced intentions of reform, which include the streamlining of TTP and ATP application procedures and shortening <b>processing</b> <b>time</b> of the permits. There is no timeline of implementation of these measures as officials claimed that they were [...] "still being studied".|$|E
40|$|Abstract Motivated by a {{high-throughput}} logging system, {{we investigate}} the sin-gle machine scheduling problem with batching, where jobs have release <b>times</b> and <b>processing</b> <b>times,</b> and batches require a setup time. Our {{objective is to}} minimize the total flow time, in the online setting. For the online problem where all jobs have iden-tical <b>processing</b> <b>times,</b> we propose a 2 -competitive algorithm and we prove a cor-responding lower bound. Moreover, we show that if jobs with arbitrary <b>processing</b> <b>times</b> can be processed in any order, any online algorithm has a linear competitive ratio in the worst case...|$|R
40|$|New {{complexity}} {{results are}} derived. It is {{shown that the}} two machine flow shop problem with a single server is NP-hard if either the setup <b>times</b> or the <b>processing</b> <b>times</b> are constant. Furthermore, polynomial algorithms are given for special cases in which both setup <b>times</b> and <b>processing</b> <b>times</b> are constant...|$|R
40|$|AbstractWe study {{a single}} machine {{scheduling}} problem in which <b>processing</b> <b>times</b> or due-dates are non-negative {{independent random variables}} and random weights (or penalties) are imposed on both early and tardy jobs. The objective is to find an optimal sequence that minimizes the expected total weighted number of early and tardy jobs. We explore three scenarios of the problem including a scenario with deterministic <b>processing</b> <b>times</b> and stochastic due-dates, a scenario with stochastic <b>processing</b> <b>times</b> and deterministic due-dates, and a scenario with stochastic <b>processing</b> <b>times</b> and stochastic due-dates. These problem scenarios are NP-hard to solve; however, when there are special structures on the stochasticity of <b>processing</b> <b>times</b> or due-dates, we establish certain conditions under which the various resulting cases are solvable exactly. We also approximate the solutions for the general versions of these cases. The proposed exact and approximate solution methods {{as well as our}} illustrative examples demonstrate that variations in <b>processing</b> <b>times,</b> due-dates, and earliness/tardiness penalties affect scheduling decisions. Furthermore, we show that the problem studied here is general in the sense that its special cases such as the stochastic problem of minimizing the expected weighted number of tardy jobs and the stochastic problem of minimizing the expected weighted number of early jobs are both solvable by the proposed exact or approximate methods. KeywordsScheduling, Single machine, Stochastic, Number of early and tardy job...|$|R
2500|$|Macro {{parameter}} substitution {{is strictly}} by name: at macro <b>processing</b> <b>time,</b> {{the value of}} a parameter is textually substituted for its name. The most famous class of bugs resulting was the use of a parameter that itself was an expression and not a simple name when the macro writer expected a name. In the macro: ...|$|E
2500|$|Citizens of [...] {{who also}} hold a valid B2 visa {{issued by the}} United States or a Schengen visa can obtain an Electronic Travel Authorization (AVE) {{at a cost of}} US$50 prior to {{travelling}} to Argentina. The validity of U.S. or Schengen visas must be more than 3 months. The <b>processing</b> <b>time</b> is 10 business days.|$|E
2500|$|Notepad is {{a common}} text-only (plain text) editor. The {{resulting}} files—typically saved with the [...]txt extension—have no format tags or styles, making the program suitable for editing system files to use in a DOS environment and, occasionally, source code for later compilation or execution, usually through a command prompt. It is also useful for its negligible use of system resources; making for quick load time and <b>processing</b> <b>time,</b> especially on under-powered hardware.|$|E
5000|$|Guidelines for <b>processing</b> <b>times</b> for {{petitions}} {{after they}} receive {{a response to}} a RFE or NOID: There are no general <b>processing</b> <b>times</b> reported for petitions after they receive {{a response to a}} RFE or NOID, since it varies from case to case, and it is best to communicate directly with the Service Center.|$|R
40|$|This paper {{deals with}} the problem of {{optimization}} of job sequence in a two-machine flow shop problem in the presence of uncertainty. It is assumed that the <b>processing</b> <b>times</b> of jobs on the machines are described by triangular fuzzy sets. A new optimization algorithm based on Johnson’s algorithm for deterministic <b>processing</b> <b>times</b> and on an improvement of McCahon & Lee’s algorithm is developed and presented. In order to compare fuzzy <b>processing</b> <b>times,</b> McCahon and Lee use mean values of their corresponding fuzzy sets. It is shown that this approach cannot fully explore possible relationships between fuzzy sets. In order to overcome this drawback we consider different fuzzy sets determined by �-cuts of the fuzzy <b>processing</b> <b>times.</b> Extensive experiments show that the new algorithm gives better solutions with respect to makespan than existing McCahon and Lee’s algorithm. 1...|$|R
40|$|This study {{focuses on}} {{identical}} parallel machine scheduling of jobs with deteriorating <b>processing</b> <b>times</b> and rate-modifying activities. We consider non linearly increasing <b>processing</b> <b>times</b> of jobs {{based on their}} position assignment. Rate modifying activities are also considered to recover the increase in <b>processing</b> <b>times</b> of jobs due to deterioration. We also propose heuristics algorithms that rely on ant colony optimization and simulated annealing algorithms {{to solve the problem}} with multiple RMAs in a reasonable amount of time. Finally, we show that ant colony optimization algorithm generates close optimal solutions and superior results than simulated annealing algorithm...|$|R
