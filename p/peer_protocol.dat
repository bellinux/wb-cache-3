16|205|Public
50|$|It {{differs from}} a PDU {{in that the}} PDU {{specifies}} the data that {{will be sent to}} the <b>peer</b> <b>protocol</b> layer at the receiving end, as opposed to being sent to a lower layer.|$|E
50|$|It is {{the same}} system as used with Motorola's {{stand-alone}} DTR-series walkie-talkies, but DTR handsets and iDEN handsets set to MOTO Talk {{are not able to}} communicate with each other due to software settings. Motorola Solutions Inc sells DTR series two-ways radios that carry this peer to <b>peer</b> <b>protocol.</b> It can be used for voice communication, as well as SMS (short message services) between devices over more than 8 miles in flat terrain conditions.|$|E
40|$|This {{document}} {{analyzes the}} common parameters {{that are essential}} for deriving incentive mechanisms to promote peer cooperation and system robustness in a P 2 P system, and proposes to incorporate these proincentive parameters in information exchanges in the P 2 P streaming protocols to be specified, e. g., in the tracker protocol proposed in [draft-gu-ppsp-tracker-protocol], {{and in the future}} in the <b>peer</b> <b>protocol</b> proposed in [draft-gu-ppsp-peer-protocol]...|$|E
40|$|The {{models of}} <b>peer</b> to <b>peer</b> <b>protocols</b> are {{presented}} {{with the help of}} one-step processes. On the basis of this presentation and the method of randomization of one-step processes described method for constructing models of <b>peer</b> to <b>peer</b> <b>protocols.</b> As specific implementations of proposed method the models of FastTrack and Bittorrent protocols are studied. Comment: in Russian; in Englis...|$|R
50|$|STANAG 5066 {{provides}} <b>peer</b> <b>protocols</b> {{that operate}} above an HF modem {{and below the}} application level. STANAG 5066 includes the mandatory SIS (Subnet Interface Sublayer, sometimes called Subnet Interface Service) protocol that enables an application to connect to an HF modem through a STANAG 5066 server over TCP/IP. This enables a clean separation between application and modem.|$|R
30|$|The {{comparative}} analysis {{has shown that}} energy-aware <b>peering</b> routing <b>protocol</b> (EPR) [45], QoS-aware <b>peering</b> routing <b>protocol</b> for delay sensitive data (QPRD) [41] and QoS aware <b>peering</b> routing <b>protocol</b> for reliability sensitive data (QPRR) [38] have less power consumption {{when compared to other}} protocols. Some protocols do not consider energy consumption, while others. One of the most used QoS aware protocols is data-centric multi objective QoS-aware routing protocol (DMQoS) [50] because it can decrease the delay for delay-sensitive information, and similarly, it can provide reliable routing for reliable-sensitive information. The other QoS-aware protocols are used or selected for a particular network, according to the data type and its QoS requirements.|$|R
40|$|P 2 P Streaming Protocol Pro-incentive Parameters draft-zeng-ppsp-protocol-pro-incentive-para- 00 This {{document}} {{analyzes the}} common parameters {{that are essential}} for deriving incentive mechanisms to promote peer cooperation and system robustness in a P 2 P system, and proposes to incorporate these proincentive parameters in information exchanges in the P 2 P streaming protocols to be specified, e. g., in the tracker protocol proposed in [draft-gu-ppsp-tracker-protocol], {{and in the future}} in the <b>peer</b> <b>protocol</b> to be specified...|$|E
40|$|This paper {{discusses}} {{the merits of}} using synchronous group remote method call (GRMC) to implement peer protocols in group communication settings. Peer protocols are used in layered protocol stacks to communicate horizontally between two layers of the same type. We will show that the higher abstraction level of G-RMC leads to less code, better understanding of a <b>peer</b> <b>protocol</b> and improved maintainability. However, ordering properties commonly required by group communication stacks may interfere with the synchronous calling of remote methods, causing deadlocks. We will present a solution that detects and resolves such deadlocks...|$|E
40|$|Abstract. Future {{communication}} and computation devices require mech-anisms {{for on the}} fly reconfiguration in their protocol stack to operate in different situations and networks. This paper proposes a component-based framework for dynamic-reconfigurable protocol stack. The frame-work presents required phases for reconfiguration of a running protocol component including freezing the component in a safe state, changing the component, and state transferring to a new component. Considering that every running protocol component communicates {{with at least one}} peer component, unlike related work we perform finding safe states and state transferring with respect to the peer component. Our framework supports synchronous reconfiguration of two <b>peer</b> <b>protocol</b> components in two communicating protocol stacks. Keywords: Protocol Stack, Dynamic Reconfiguration, Software Framewor...|$|E
5000|$|Patent 7,065,579 - System using peer {{discovery}} and <b>peer</b> membership <b>protocols</b> for accessing peer-to-peer platform resources {{on a network}} ...|$|R
40|$|The use of {{peer to peer}} {{file sharing}} {{networks}} such as Gnutella is proliferating on the Internet, but its use is bandwidth consuming due to the broadcast nature of some <b>peer</b> to <b>peer</b> <b>protocols.</b> This is undesirable for mobile devices due to their bandwidth and power constraints. This paper proposes an architecture that uses mobile agents {{to participate in the}} Gnutella network on behalf of mobile devices {{in order to reduce the}} amount of traffic for the mobile device, as well as providing support for device mobility. Using real Gnutella traffic characteristics, analysis on the viability of the architecture is presented. 1...|$|R
40|$|This paper proposes and evaluates {{different}} <b>protocols</b> {{for individual}} <b>peers</b> to self-configure the P 2 P overlay networks in various network environments. For smallscale homogeneous networks, an optimizer <b>peer</b> selection <b>protocol</b> is proposed {{and found to}} be superior to other <b>peer</b> selection <b>protocols,</b> including random, egoist, altruist and greedy protocols, in terms of network diameter and node eccentricity. For large-scale heterogeneous P 2 P systems, peer-power based <b>peer</b> selection <b>protocols</b> are proposed to self-configure semi-structured overlay networks for heterogeneous P 2 P systems. An index-based query mechanism is also proposed for peers to search documents in the P 2 P network. Performance studies demonstrate that the proposed self-configuration protocols and search scheme are efficient and viable, and the self-configured P 2 P network has a significantly lower query cost than traditional Gnutella-like P 2 P systems. In addition, a caching-assisted query mechanism is proposed to exploit the surplus storage power of the peers, improving further the query efficiency. Caching-assisted query permits a quicker response to subsequent queries for popular data without incurring the excessive overhead of globally replicated directory information...|$|R
40|$|This paper {{evaluates the}} {{feasibility}} of mobile nodes as peers in a structured peer-to-peer overlay network. Our performance analysis {{is based on the}} Peer-to-Peer Protocol (P 2 PP), which is a <b>peer</b> <b>protocol</b> candidate for the Peer-to-Peer Session Initiation Protocol (P 2 PSIP). We use both, live-network measurements and simulations, to evaluate two performance metrics: resource lookup success rate and mobile battery duration. While lookup success rate measures P 2 PP performance in general, battery duration is crucial for mobile use of P 2 PP. Restricted battery life limits {{the feasibility of}} mobile peers. We reveal the tradeoff between lookup success rate and battery duration. Based on the findings it is possible to find more suitable protocol parameters for mobile peers. The battery duration measurements, made with UDP in UMTS and WLAN access networks, are also applicable in the wireless usage of other application-layer protocols...|$|E
40|$|Forthcoming {{networked}} systems require {{mechanisms for}} on-the-fly reconfiguration in their protocol stacks {{to be able}} to operate in different situations and networks. Since every protocol in a protocol stack has at least one <b>peer</b> <b>protocol</b> in another system, dy-namic reconfiguration of a protocol raises the need for reconfiguration in the peer stack. For an assured dynamic (run-time) reconfiguration, executions of two peer protocols are stopped in a safe state, new protocols are initialized, and stacks switch to the new proto-cols at the same time. This paper proposes a software framework for dynamic reconfigu-ration of two communicating protocol stacks. A distributed algorithm is implemented in the framework of two communicating stacks in order to present an assured and synchro-nous reconfiguration of protocols. For demonstration, we have implemented a prototype of the framework and the algorithm to reconfigure two communicating TCP components by their secure version...|$|E
40|$|Ubiquitous {{computing}} environment includes wireless networks, autonomic networked systems and devices with heterogeneous standards and protocols for different contexts and situations. Autonomic networked systems require mechanisms for automatic on-the-fly reconfigurations in their protocol stacks {{to be able}} to operate in different situations and contexts. Automatic reconfigurations allow the system to continue its normal operation without any need for human intervention. Since every protocol in a protocol stack has at least one <b>peer</b> <b>protocol</b> in another system, a dynamic reconfiguration of a protocol may raise the need for a reconfiguration in the peer stack. Depending on the reconfiguration type, the reconfiguration maybe carried out in a single or in both peer systems. For an assured dynamic (run-time) reconfiguration of a protocol, the execution of the protocol component is stopped in a safe state, a new protocol is initialized, and stacks switch to the new protocol at the same time. This paper proposes a protocol stack framework to support automatic and assured reconfigurations of protocol components. Our evaluation and performance measurement show the feasibility of automatic reconfigurations and an acceptable level of transparency in dynamic reconfigurations...|$|E
40|$|PuppetCast is a <b>protocol</b> for secure <b>peer</b> {{sampling}} in large-scale distributed systems. A <b>peer</b> sampling <b>protocol</b> continuously provides each node in {{the system}} with a uniform random sample of the node population, and is an important building block for gossip-based protocols for information dissemination, aggregation, load balancing and network management. Existing <b>peer</b> sampling <b>protocols</b> are either very vulnerable to attacks by malicious nodes, do not scale to large systems or provide only a static sample of the population. PuppetCast continues to operate when 50 % (or more) of the nodes are acting maliciously, is shown to scale to systems of significant size and continuously provides new samples. 1...|$|R
40|$|Abstract. With {{the growing}} use of {{protocols}} obfuscation techniques, protocol identification for Q. O. S enforcement, traffic prohibition, and intrusion detection has became a complex task. This paper {{address this issue}} with a probabilistic identification analysis that combines multiples advanced identification techniques and returns an ordered list of probable protocols. It combines a payload analysis with a classifier based on several discriminators, including packet entropy and size. We show with its implementation, that it overcomes the limitations of traditional port-based protocol identification when dealing with hard to classify <b>protocol</b> such as <b>peer</b> to <b>peer</b> <b>protocols.</b> We also details how it deals with tunneled session and covert channel...|$|R
50|$|At {{each level}} N, two {{entities}} at the communicating devices (layer N <b>peers)</b> exchange <b>protocol</b> data units (PDUs) {{by means of}} a layer N protocol. Each PDU contains a payload, called the service data unit (SDU), along with protocol-related headers or footers.|$|R
40|$|Peer to peer content {{streaming}} is {{the next}} generation content delivery method, making obsolete the client-server communication model which is not sustainable in the current Internet environment. One effort to standardize this new protocol {{is represented by the}} Libswift-PPSPP (Peer to Peer Streaming <b>Peer</b> <b>Protocol)</b> Information Centric Network (ICN). In this thesis we lay the foundation for developing a Libswift ICN router using FPGA technology. We start by describing the protocol, provide a set of requirements for the generic router and identify a subset that we will implement. Using the NetFPGA development platform, we build a hash (SHA 1) computation accelerator, {{which is one of the}} fundamental building blocks for the Libswift ICN router. Our measurements show that the prototype outperforms a general purpose CPU in hash calculation. The measured speedup is of 1. 54 and the area overhead is small considering the complete system. Possible optimizations are discussed and the impact of those optimizations is compared with our working implementation. We conclude with a brief description of further work needed to obtain a complete Libswift-PPSPP ICN Router. Microelectronics & Computer EngineeringElectrical Engineering, Mathematics and Computer Scienc...|$|E
40|$|Peer-to-peer (P 2 P) {{applications}} {{have become}} available for portable devices as the processing {{power and the}} storage capacity of the devices {{as well as the}} network bandwidth have increased. The traditional P 2 P applications have been considered too heavy for mobile usage. New, lightweight P 2 P protocols are needed for mobile P 2 P applications. P 2 P Session Initiation Protocol (P 2 PSIP) is a protocol under development that provides the session establishment functions of SIP in a serverless fashion. The main objective of this thesis was to simulate a P 2 PSIP overlay network operating with Resource Location And Delivery (RELOAD) <b>peer</b> <b>protocol</b> and study its bandwidth consumption, lookup overhead and lookup success rate. The effect of churn, the process of nodes arriving to the overlay and leaving it, on these results was also one of our concerns. We study if this kind of network is applicable to be implemented on top of current mobile telephone networks. This study compares the performance of two distributed hash table (DHT) algorithms, Chord and Kademlia. The simulations were carried out with OverSim overlay network simulato...|$|E
40|$|We {{design a}} test {{methodology}} to analyze {{in detail the}} video quality received at each peer in a peer-to-peer (P 2 P) video streaming system. The metrics that we employ at each peer include video PSNR, statistical analysis of frame-freeze events, {{the amount of time}} to wait before video playback starts, nature of the data-paths established to serve the <b>peer,</b> <b>protocol</b> overhead and duplicate data received. These metrics are estimated by analyzing the packet reception times at each peer and utilizing information about the original uncompressed video as well as the encoded video. We use this framework to compare the performance of three P 2 P video streaming systems by deploying them on our controlled traffic-shaped network test-bed. We can emulate the same network conditions and peer behavior for testing different systems and ensure that the experiments are repeatable. These measurements highlight the differences between systems based upon their underlying implementation, overlay architecture, and choice of protocols. This measurement study helps to gauge the performance of currently available P 2 P video streaming systems and points out desirable performance improvements. Index Terms — peer-to-peer video streaming, video traces, overlay architectures 1. INTRODUCTION AND RELATE...|$|E
40|$|AbstractA choreography {{specifies}} {{activities and}} interactions among {{a set of}} services from a global point of view. From this specification, local implementations or peers can be automatically generated. Generation of peers that precisely implement the choreography specification is not always possible: this problem is known as realizability. This paper presents an encoding of the Chor choreography calculus into the FSP process algebra. This encoding allows to: (i) validate and verify Chor specifications using the FSP toolbox (LTSA), (ii) generate <b>peer</b> <b>protocols</b> from its choreography specified in Chor, (iii) test for realizability of the Chor specification, and (iv) generate Java code from FSP for rapid prototyping purposes. Our proposal is supported and completely automated by a prototype tool we have implemented...|$|R
50|$|The Local <b>Peer</b> Discovery <b>protocol,</b> {{specified}} as BEP-14, is {{an extension}} to the BitTorrent file-distribution system. It is designed to support the discovery of local BitTorrent peers, aiming to minimize the traffic through the Internet service provider's (ISP) channel and maximize use of higher-bandwidth local area network (LAN).|$|R
50|$|WinMX {{began its}} {{life as an}} OpenNAP client capable of {{connecting}} to several servers simultaneously, although Frontcode later created a proprietary <b>protocol,</b> termed WinMX <b>Peer</b> Network <b>Protocol</b> (WPNP), which was used starting with WinMX 2 in May 2001. Frontcode had operated several cache servers to aid WPNP network operation.|$|R
40|$|For a few decades, the Boarder Gateway Protocol (BGP) {{realized}} Internet to be {{robust and}} acceptably stable despite its overwhelming growth. Although it {{is a fairly}} simple peer to <b>peer</b> <b>protocol,</b> yet because of the scale of Internet at which BGP is deployed, {{it is very difficult}} to understand behavior of BGP. It is considered a complex task to state what trends BGP may show if different internal factors (i. e. routing table size, parameter setting at BGP routers etc.) or external factors (such as size and shape of network, flow of BGP traffic, underlying protocols, performance and capacity of BGP routers, etc.) are varied. In addition certain emergent behaviors may only arise when protocol is simulated at Internet wide scale. We attempt to understand how the underlying topology; one of the factors effecting BGP; at which protocol is deployed influences BGP performance. We use a highly scalable simulator, capable of simulating current full scale AS-level Internet, and give diverse topologies as input to it. The topologies that we use have operational semantics like the real Internet. We found that BGP is sensitive to certain topological characteristics of Internet, while remains completely unaffected on variation in some other characteristics. Key word...|$|E
40|$|In many {{distributed}} systems robustness {{is a major}} concern since network nodes might fail spontaneously. Such failures can be a major problem when a workflow needs to be run on a set of unreliable and distributed nodes. Replication is a widely used architecture paradigm to increase system reliability. This thesis addresses robustness of workflow execution in {{distributed systems}} using replication. A workflow is a plan that describes how a number of tasks needs to be executed and is defined using a workflow definition language. A task is the description of a single operation contained within such a workflow. The first part of this thesis gives an overview over available workflow definition languages focusing mainly on declarative ones. Task types present in this languages are identified and their impact on replication is evaluated. A basic problem of workflow replication is that not all tasks within a workflow can be executed arbitrarily often. To solve this issue the execution of such tasks must be coordinated. The goal of this thesis is to propose and evaluate methods to coordinate the execution of such workflow replicas in a distributed environment. The proposed replica coordination algorithms are implemented as a peer to <b>peer</b> <b>protocol</b> and simulated using the peer to peer simulator PeerSim. A synthetic workflow generator is used to provide a large number of workflows for evaluation to test the performance, scalability and robustness under different conditions. The evaluation is concluded with the replication of a real workflow to judge the significance of the synthetic tests to the real world...|$|E
40|$|The {{gateways}} {{that connect}} networks {{must deal with}} heterogeneity in the protocols they support. One approach is to implement a protocol converter on the gateway to translate and synchronize the messages between different protocols {{in such a way}} that the required service of the common upper layer protocol is satisfied. In this thesis we explore one of the main problems of heterogeneous network interconnection at a gateway: the protocol conversion problem. The protocol conversion problem deals with the rules for message exchanges and the behavioral concerns that deal with the reconciliation between different protocol message formats, their orderings and the service they provide. This thesis provides a formulation of the protocol conversion problem in a general framework. Formal methods have been proposed for the protocol conversion problem based on a common specification model for protocols: the Communicating Finite State Machine (CFSM) model. These formal methods require that the conversion requirements be defined formally as well. There are two types of conversion requirements: protocol-level conversion requirements that specify the translation requirements and the synchronization requirements of the protocol converter in terms of <b>peer</b> <b>protocol</b> messages, and service-level conversion requirements that specify the service requirements in terms of the service primitives of the conversion system. Based on the presented formulation of the protocol conversion problem, in this thesis an approach to synthesize service-level conversion requirements is proposed. Furthermore, an approach to synthesize the protocol-level conversion requirements that capture the semantic relation between the two protocols as it is specified by the service-level conversion requirements is proposed. It is then shown that existing formal methods can be used to synthesize a protocol converter using the constructed protocol conversion requirements. (Abstract shortened by UMI. ...|$|E
50|$|<b>Peer</b> Name Resolution <b>Protocol</b> (PNRP) is a {{peer-to-peer}} protocol designed by Microsoft. PNRP enables dynamic name publication and resolution, and requires IPv6.|$|R
40|$|This {{tutorial}} {{paper is}} intended for the reader who is unfamiliar with computer networks, to prepare him for reading the more detailed technical literature on the subject. The approach here is to start with an ordered list of the functions that any network must provide in tying two end users together, and then to indicate how this leads naturally to layered <b>peer</b> <b>protocols</b> out of which the architecture of a computer network is constructed. After a discussion of a few block diagrams of private (commercially provided) and public (common carrier) networks, the layer and header structures of SNA and DNA architectures and the X. 25 interface are briefly described. An introduction to network architectures and protocols by P. E. Green Ever since computer users began accessing the machine resources from remote terminals over twenty-five years ago, compute...|$|R
40|$|Abstract — We propose in this paper, an optimized, polymorphic, hybrid {{multicast}} {{routing protocol}} for MANET. The protocol proposed {{is based on}} the principle of adaptability and multibehavioral modes of operations. It is able to change behavior in different situations in order to improve certain metrics like maximizing battery life, reducing communication delays, improving deliverability, etc. This new polymorphic protocol attempts to benefit of the high efficiency of proactive behavior and the low cost of network traffic of the reactive behavior, while being power, mobility and vicinity density aware. The protocol is augmented by an optimization scheme, adapted from the one proposed for the optimized link state routing protocol (OLSR) in which only selected neighbor nodes propagate control packets {{to reduce the amount of}} control overhead. Extensive simulations and comparison to <b>peer</b> <b>protocols</b> demonstrated the effectiveness of the proposed protocol in improving performance and in extending battery power longevity. I...|$|R
40|$|The Internet in {{its most}} basic form is a complex {{information}} sharing organism. There are billions of interconnected elements with varying capabilities that work together supporting numerous activities (services) through this information sharing. In recent times, these elements have become portable, mobile, highly computationally capable and more than ever intertwined with human controllers and their activities. They are also rapidly being embedded into other everyday objects and sharing more and more information {{in order to facilitate}} automation, signaling that the rise of the Internet of Things is imminent. In every human society there are always miscreants who prefer to drive against the common good and engage in illicit activity. It is no different within the society interconnected by the Internet (The Internet Society). Law enforcement in every society attempts to curb perpetrators of such activities. However, it is immensely difficult when the Internet is the playing field. The amount of information that investigators must sift through is incredibly massive and prosecution timelines stated by law are prohibitively narrow. The main solution towards this Big Data problem is seen to be the automation of the Digital Investigation process. This encompasses the entire process: From the detection of malevolent activity, seizure/collection of evidence, analysis of the evidentiary data collected and finally to the presentation of valid postulates. This paper focuses mainly on the automation of the evidence capture process in an Internet of Things environment. However, in order to comprehensively achieve this, the subsequent and consequent procedures of detection of malevolent activity and analysis of the evidentiary data collected, respectively, are also touched upon. To this effect we propose the Live Evidence Information Aggregator (LEIA) architecture that aims to be a comprehensive automated digital investigation tool. LEIA is in essence a collaborative framework that hinges upon interactivity and sharing of resources and information among participating devices in order to achieve the necessary efficiency in data collection {{in the event of a}} security incident. Its ingenuity makes use of a variety of technologies to achieve its goals. This is seen in the use of crowdsourcing among devices in order to achieve more accurate malicious event detection; Hypervisors with inbuilt intrusion detection capabilities to facilitate efficient data capture; Peer to Peer networks to facilitate rapid transfer of evidentiary data to a centralized data store; Cloud Storage to facilitate storage of massive amounts of data; and the Resource Description Framework from Semantic Web Technologies to facilitate the interoperability of data storage formats among the heterogeneous devices. Within the description of the LEIA architecture, a peer to <b>peer</b> <b>protocol</b> based on the Bittorrent protocol is proposed, corresponding data storage and transfer formats are developed, and network security protocols are also taken into consideration. In order to demonstrate the LEIA architecture developed in this study, a small scale prototype with limited capabilities has been built and tested. The prototype functionality focuses only on the secure, remote acquisition of the hard disk of an embedded Linux device over the Internet and its subsequent storage on a cloud infrastructure. The successful implementation of this prototype goes to show that the architecture is feasible and that the automation of the evidence seizure process makes the otherwise arduous process easy and quick to perform...|$|E
40|$|The Session Initiation Protocol (SIP) has {{in recent}} years become a popular {{protocol}} for the exchange of text, voice and video over IP networks. This thesis proposes {{the use of a}} class of structured <b>peer</b> to <b>peer</b> <b>protocols</b> - commonly known as Distributed Hash Tables (DHTs) - to provide a SIP overlay with services such as end-point location management and message relay, in the absence of traditional, centralised resources such as SIP proxies and registrars. A peer-to-peer layer named OverCord, which allows the interaction with any specific DHT protocol via the use of appropriate plug-ins, was designed, implemented and tested. This layer was then incorporated into a SIP user agent distributed by NIST (National Institute of Standards and Technology, USA). The modified user agent is capable of reliably establishing text, audio and video communication with similarly modified agents (peers) as well as conventional, centralized SIP overlays...|$|R
50|$|If both peers {{agree to}} Address field and Control field {{compression}} during LCP, then those fields are omitted. Likewise if both <b>peers</b> agree to <b>Protocol</b> field compression, then the 0x00 byte can be omitted.|$|R
50|$|Gateway is {{a server}} or daemon {{typically}} installed onto physical or virtual appliance placed into DMZ.Gateway public interface {{is exposed to}} the Internet (or other untrusted network) and accepts TCP/IP connections from mobile applications. It operates on IPv4 and/or IPv6 networks. Incoming client connections typically use SSL/TLS to provide security for the network communication and a mutual trust of communicating <b>peers.</b> Communication <b>protocol</b> is typically based on HTTP.|$|R
40|$|P 2 P {{systems are}} exposed to an unusually broad range of attacks. These include a {{spectrum}} of denial-of-service or attrition attacks from low-level packet flooding to high-level abuse of the <b>peer</b> communication <b>protocol.</b> We identify a set of defenses that systems can deploy against such attacks and potential synergies among them. We illustrate the application of these defenses {{in the context of}} the LOCKSS digital preservation system...|$|R
5000|$|Local Peer Discovery is {{implemented}} with HTTP-like messages on User Datagram Protocol (UDP) multicast group 239.192.152.143:6771 {{which is an}} administratively scoped multicast address. Since implementation is simple, Local Peer Discovery {{is implemented}} in several clients (µTorrent, BitTorrent/Mainline, MonoTorrent, libtorrent and its derivatives, Transmission 2.0, aria2 [...] ). An alternative multicast <b>peer</b> discovery <b>protocol</b> is published as BEP 26, but is not widely adopted since it is considered too complex in comparison.|$|R
