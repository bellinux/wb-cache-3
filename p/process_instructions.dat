27|508|Public
5000|$|While {{the process}} is [...] "waiting", it waits for the {{scheduler}} to do a so-called context switch and load the process into the processor. The process state then becomes [...] "running", and the processor executes the <b>process</b> <b>instructions.</b>|$|E
50|$|The K5 {{was based}} upon an {{internal}} highly parallel 29k RISC processor architecture with an x86 decoding front-end. The K5 offered good x86 compatibility. All models had 4.3 million transistors, with five integer units that could <b>process</b> <b>instructions</b> out of order and one floating point unit. The branch target buffer was four {{times the size of}} the Pentium's and register renaming improved parallel performance of the pipelines. The chip's speculative execution of instructions reduced pipeline stalls. It had a 16 KB, four-way set associative instruction cache and an 8 KB data cache. The K5 lacked MMX instructions, which Intel started offering in its Pentium MMX processors that were launched in early 1997.|$|E
5000|$|During learning, fusion ART formulates {{recognition}} {{categories of}} input patterns across multiple channels. The knowledge that fusion ART discovers during learning, {{is compatible with}} symbolic rule-based representation. Specifically, the recognition categories learned by the [...] category nodes are compatible with a class of IF-THEN rules that maps a set of input attributes (antecedents) in one pattern channel to a disjoint set of output attributes (consequents) in another channel. Due to thiscompatibility, at any point of the incremental learning <b>process,</b> <b>instructions</b> {{in the form of}} IF-THEN rules can be readily translated into the recognition categories of a fusion ART system. The rules are conjunctive {{in the sense that the}} attributes in theIF clause and in the THEN clause have an AND relationship. Augmenting a fusion ART network with domain knowledge throughexplicit instructions serves to improve learning efficiency and predictive accuracy.|$|E
5000|$|Find any {{associated}} {{data that}} is needed to <b>process</b> the <b>instruction</b> ...|$|R
50|$|A process {{moves into}} the running state when it is chosen for execution. The <b>process's</b> <b>instructions</b> are {{executed}} {{by one of the}} CPUs (or cores) of the system. There is at most one running process per CPU or core. A process can run in either of the two modes, namely kernel mode or user mode.|$|R
50|$|They are 5 {{types of}} edugraphics: Oneshot subject, timeline, <b>process,</b> gameboard, <b>instructions.</b>|$|R
5000|$|It {{is often}} seen that the tools used for DFSS {{techniques}} vary widely from those used for DMAIC Six Sigma. In particular, DMAIC, DDICA practitioners often use new or existing mechanical drawings and manufacturing <b>process</b> <b>instructions</b> as the originating information to perform their analysis, while DFSS practitioners often use simulations and parametric system design/analysis tools to predict both cost and performance of candidate system architectures. While it can be claimed that two processes are similar, in practice the working medium differs enough so that DFSS requires different tool sets in order to perform its design tasks. DMAIC, IDOV and Six Sigma may still be used during depth-first plunges into the system architecture analysis and for [...] "back end" [...] Six Sigma processes; DFSS provides system design processes used in front-end complex system designs. Back-front systems also are used. This makes 3.4 defects per million design opportunities if done well.|$|E
40|$|The diploma thesis {{focuses on}} {{possible}} usage of home made experiment applications within physics lessons. The term home made experiment is clearly defined {{in this thesis}} {{as well as its}} corresponding involvement in educational <b>process.</b> <b>Instructions</b> and worksheets related to home made experiments are included. Below created materials were applied to verify the tasks and can be used in physics lessons at elementary school. The efficiency verification was performed by the attached and particularly analyzed didactic probes...|$|E
40|$|The {{trend towards}} ever-shorter product life cycles {{produces}} {{a need to}} find tools and methods of working for integrated product and manufacturing process development. This paper describes a project, which has investigated the potential of digital visualisation technology for use in training operators to assemble new products prior to actual physical production, {{with the purpose of}} shortening the time needed for training. The project has been carried out in conjunction with Volvo Car Corporation in Gothenburg, Sweden. The aim of the project, has been to find a methodology for formulating future working instructions, which describe more than primarily {{what is to be done}} in order to assemble a car. The results indicate that there is a need to complement the instructions in order to provide better information on how it is to be done. This can be carried out using the simulation and visualisation technology. It is suggested that the results should be called Visual <b>Process</b> <b>Instructions.</b> The possession of propositional knowledge is not enough when designing models representing knowing-how - involve people with practical knowledge in the development process. Visual <b>Process</b> <b>Instructions</b> can never completely capture all the elements of craftsmanship, but help us transfer more of vocational knowledge...|$|E
50|$|Branch {{prediction}} guesses {{the next}} instruction to execute and inserts the next assumed instruction to the pipeline. Guessing wrong is called branch misprediction. The partially <b>processed</b> <b>instructions</b> {{in the pipeline}} after the branch have to be discarded and the pipeline has to start over at the correct branch when a branch misprediction is detected. This slows down the program execution.|$|R
40|$|In this bachelor´s {{thesis is}} {{processed}} analysis of part called cover {{and there is}} also processed proposal of the technology its manufacturing. Into proposal of manufacturing are included conventional tools which are compared with different type of manufacturing by tool called EcoCut. For both varieties is elaborated technological <b>process,</b> <b>instruction</b> for turning with counted mechanical times and consumption of changeable cutting tips...|$|R
25|$|The {{microprocessor}} is {{a computer}} chip that <b>processes</b> <b>instructions</b> and communicates with outside devices, controlling most of the operations of a computer through the central processing unit on a single integrated circuit. The first commercially available microprocessor was a silicon-based chip, the Intel 4004, co-invented in 1971 by Ted Hoff, Federico Faggin, and Stanley Mazor for a calculator company named Busicom, and produced by Intel.|$|R
40|$|A {{conceptual}} {{model for a}} computer based educational game for the training of assembly work in the automotive industry is presented. The prospects of succeeding to achieve the necessary educational quality are discussed. One conclusion {{is that it is}} not economically feasible today to implement and maintain such an advanced concept. An alternative learning form for the required needs is presented - an educational venture to develop Visual <b>Process</b> <b>Instructions</b> together with individual plans for human resource development including parallel training for a professional career after the period of being an assembly worker...|$|E
40|$|Abstract. We {{develop an}} {{algebraic}} theory of threads, synchronous co-operation of threads and interaction of threads with Maurer machines, and investigate program parallelization using the resulting theory. Pro-gram parallelization underlies techniques for speeding up instruction pro-cessing {{on a computer}} that {{make use of the}} abilities of the computer to <b>process</b> <b>instructions</b> simultaneously in cases where the state changes in-volved do no in uence each other. One of our ndings is that a strong induction principle is needed when proving theorems about sucient conditions for the correctness of program parallelizations. The induction principle introduced has brought us to construct a projective limit model for the theory developed...|$|E
40|$|Photoshop for Interior Designers {{introduces}} step-by-step {{techniques for}} interior designers to successfully use Adobe Photoshop to visually communicate their design concept through graphic images and to illustrate design ideas through a visual thinking <b>process.</b> <b>Instructions</b> show how to integrate hand drawings and freehand sketches into digital drawings. Basic and advanced techniques presented include creating floor plans and elevations, preparing perspectives or isometric drawings, and applying materials, lightings, background and entourages for interior design presentations. Taking a multi-media approach, the text demonstrates {{how to use}} Photoshop to refine and modify drawings created in Google Sketchup, AutoCAD and other 3 D software programs, and introduces how to use InDesign to seamlessly create graphic layouts for presentation to clients...|$|E
40|$|The goal of {{this study}} is to reveal {{possible}} influence that the participants' age and Information and Communications Technologies (ICT) usage in the <b>instruction</b> <b>process</b> can have on behavior that defines whether students and teachers belong to one of the Digital Native/Immigrant or Visitor/Resident groups. We collected data through two surveys that covered a total of 1273 students and 382 teachers from southern regions of Serbia. The surveys consisted of questions about availability of computers and internet, ICT use in the <b>instruction</b> <b>process,</b> and communication habits in the ICT-empowered <b>instruction</b> <b>process.</b> The first survey covered both, students and teachers that were involved in the <b>instruction</b> <b>process</b> mostly deprived of the ICT usage. The second survey covered participants of an <b>instruction</b> <b>process</b> that was successfully improved by an ICT usage. Data analysis shows a shift in communication patterns of teachers and a sharp improvement in computer use for educational purposes for both groups included in the surveys. The change is induced by a proper ICT usage in the <b>instruction</b> <b>process.</b> Conclusions that followed the data analysis lead us to better approaches in organizing ICT usage in the <b>instruction</b> <b>process</b> that enable participants fully employ their resources in order to improve teaching techniques and learning...|$|R
40|$|Background: Strategy-focussed writing {{instruction}} trains students both to set explicit product {{goals and}} to adopt specific procedural strategies, particularly for planning text. A {{number of studies}} have demonstrated that strategy-focussed writing instruction is effective in developing writing performance. Aim: The present study aimed to determine whether teaching process strategies provides additional benefit over teaching students to set product goals. Sample: 94 typically developing Spanish sixth-grade (upper primary) students. Method: Students received 10 hours of instruction in one of three conditions: Strategy-focussed training in setting product goals and in writing procedures (planning and revision; Product-and-Process), strategy-focussed training in setting product goals (Product-Only), and product-focussed instruction (Control). Students' writing performance was assessed before, during, and after intervention with process measures based on probed self-report and holistic and text-analytic measures of text quality. Results: Training that included <b>process</b> <b>instruction</b> was successful in changing students' writing processes, with no equivalent process changes in the Product-Only or control conditions. Both Process-and-Product and Product-Only conditions resulted in substantial improvements in the quality of students' texts relative to controls, but with no evidence of benefits of <b>process</b> <b>instruction</b> over those provided by the Product-Only condition. Teaching process substantially increased time-on-task. Conclusions: Our findings confirm the value of strategy-focussed writing instruction, but question the value of training specific process strategies...|$|R
50|$|Single instruction, {{multiple}} data (SIMD), is a {{class of}} parallel computers in Flynn's taxonomy. It describes computers with multiple processing elements that perform the same operation on multiple data points simultaneously. Thus, such machines exploit data level parallelism, but not concurrency: there are simultaneous (parallel) computations, but only a single <b>process</b> (<b>instruction)</b> at a given moment. SIMD is particularly applicable to common tasks like adjusting the contrast in a digital image or adjusting the volume of digital audio. Most modern CPU designs include SIMD instructions {{in order to improve}} the performance of multimedia use.|$|R
40|$|This paper {{describes}} the tradeoff between latency performance and throughput {{performance in a}} power-constrained environment. We show {{that the key to}} achieving both excellent latency performance as well as excellent throughput performance is to dynamically vary the amount of energy expended to <b>process</b> <b>instructions</b> according to the amount of parallelism available in the software. We survey four techniques for achieving variable energy per instruction: voltage/frequency scaling, asymmetric cores, variable-size cores, and speculation control. We estimate the potential range of energies obtainable by each technique and conclude that a combination of asymmetric cores and voltage/frequency scaling offers the most promising approach to designing a chip-level multiprocessor that can achieve both excellent latency performance and excellent throughput performance. 1...|$|E
40|$|There {{are quiet}} a few XSLT Processors that are {{designed}} to work with XML documents whose structure is defined in a stylesheet. But many of these have limited or no support for external calls from an XML document. This paper describes the implementation of an XSLT processor that works with a dynamic XML document. The PHP calls within the XML documents render this dynamism. Enabling an XSLT processor to <b>process</b> <b>instructions</b> in PHP combines the advantages of XML and programming options of PHP at the same time. We show how the Processor is integrated with the PHP interpreter, and discuss the areas where the system can be extended. We compare the performance of the resulting system with the non-PHP-enabled system and summarize the results. 1...|$|E
40|$|This paper {{explores the}} {{relation}} between the position of discourse markers and the instructions they provide on the information structure of utterances. We assume that, next to other types of indications, discourse markers encode during their grammaticalization <b>process</b> <b>instructions</b> about the informative status of the discourse constituents on which they operate and about their relevance for text progression. Our aim is to account for these indications and show the benefits of using a model of discourse units for the description of markers. For this purpose, we will adopt the Basel model for discourse segmentation, which regards text as a pragmatic unit consisting of hierarchically organized information units. The study concludes that metalinguistic operations such as reformulation in written language can be better explained {{on the grounds of the}} dynamics governing text construction and organization...|$|E
5000|$|Superscalar {{processors}} {{differ from}} multi-core processors {{in that the}} several execution units are not entire processors. A single processor is composed of finer-grained execution units such as the ALU, integer multiplier, integer shifter, FPU, etc. There may be multiple versions of each execution unit to enable execution of many instructions in parallel. This differs from a multi-core processor that concurrently <b>processes</b> <b>instructions</b> from multiple threads, one thread per processing unit (called [...] "core"). It also differs from a pipelined processor, where the multiple instructions can concurrently be {{in various stages of}} execution, assembly-line fashion.|$|R
30|$|A wiki {{is used to}} {{maintain}} information of the release <b>process,</b> provides <b>instructions</b> for developers to make releases, and details of the current release schedule, such as important dates.|$|R
40|$|The main {{theme of}} this bachelor's thesis is the {{production}} of aluminum housing for the oil filter module on a CNC machine. The work includes an introduction to its casting, a brief acquaintance with the various components of which the oil module consists, {{a description of the}} function of the oil module and a selection of CNC machine and the tools. The work also includes production <b>process,</b> <b>instruction</b> cards and drawings. Finally here is NC program according to which the functioning unit was produced. In the conclusion of the bachelor's thesis there follows an economic evaluation...|$|R
40|$|A robust {{system that}} understands route {{instructions}} {{should be able}} to <b>process</b> <b>instructions</b> generated naturally by humans. Also desirable would be the ability to handle repairs and other modifications to existing instructions. To this end, we collected a corpus of spoken instructions (and modified instructions) produced by subjects provided with an origin and a destination. We found that instructions could be classified into four categories, depending on their intent such as imperative, feedback, or meta comment. We asked a different set of subjects to follow these instructions to determine the usefulness and comprehensibility of individual instructions. Finally, we constructed a semantic grammar and evaluated its coverage. To determine whether instructiongiving forms a predictable sub-language, we tested the grammar on three corpora collected by others and determined that this was largely the case. Our work suggests that predictable sub-languages may exist for well-defined tasks...|$|E
40|$|Abstract. Consistent and {{flawless}} {{communication between}} humans and machines is the precondition for a computer to <b>process</b> <b>instructions</b> correctly. While machines use well-defined languages and formal rules to process information, humans prefer natural language expressions with vague semantics. Similarity comparisons {{are central to the}} human way of thinking: we use similarity for reasoning on new information or new situations by comparing them to knowledge gained from similar experiences in the past. It is necessary to overcome the differences in representing and processing information to avoid communication errors and computation failures. We introduce an approach to formalize the semantics of natural language spatial relations and specify it in a computational model which allows for similarity comparisons. This paper describes an experiment that investigates human similarity perception between spatial relations and compares it to the similarity determined by the our semantic similarity measure. ...|$|E
40|$|Control {{and data}} flow {{speculation}} can improve processor performance through increased ILP. First it is demonstrated how aggressive speculation on both control decisions and data values can produce parallelism {{in a simple}} "sequential" problem. It is then shown through simulation that a speculative architecture can extract parallelism from more complex code examples. Finally {{a discussion about the}} effects of limiting resources in an aggressive speculative architecture is entered into. 1 Introduction In modern computer architectures one means to increase processor performance is to <b>process</b> <b>instructions</b> in parallel. This is commonly known as instruction level parallelism (ILP). In dynamic forms of ILP instructions enter a re-order buffer where they are pooled awaiting execution. These in-flight instructions are processed outof -order to utilize the available computation resources. Where resources are adequate the size of the in-flight instruction window places upper limit on parallelism t [...] ...|$|E
50|$|Superscalar {{computers}} {{may contain}} multiple ALUs, {{allowing them to}} <b>process</b> several <b>instructions</b> simultaneously. Graphics processors and computers with SIMD and MIMD features often contain ALUs that can perform arithmetic on vectors and matrices.|$|R
5000|$|Robert C. (Bob) Calfee was an {{educational}} psychologist {{specializing in the}} study of reading and writing <b>processes</b> and <b>instruction</b> [...] He is known for his work on Project Read and the LeapFrog learning system.|$|R
50|$|The District's four {{elementary}} schools offer {{students in grades}} K-4 a comprehensive educational program emphasizing <b>process</b> <b>instruction</b> techniques, cooperative learning, and integration of subject content areas. The K-2 program uses a balanced literacy approach to reading while math and science are taught through hands-on experiences. In heterogeneous classes, these students also study social studies and use computers. The 3-5 program includes literature-based reading, process writing, hands-on math and science, social studies and computers, all taught in heterogeneous classes. Teachers develop themes to integrate content areas wherever possible. Related arts instruction includes art, music, computer education, library skills, physical education, health and family life and world languages.|$|R
40|$|A {{tenement}} house, {{which will}} be built from wood-frame walls filled with straw bales, {{was designed to be}} seismic resistant on basis of experimental research results of shear strength of a test panel 230 cm long. Test panel with a window opening and a test panel without an opening were vertically stressed and horizontal quazistatic load protocol was applied. This load protocol omogoca [...] . The measured response of the panel was used to determine basic material characteristics which were applied to the calculation model that was made to [...] . The analysis was made with the help of computer program SAP 2000, version 8 nonlinear. During the calculating <b>process</b> <b>instructions</b> of standards EC 8 and EC 5 were considered. The assignment [...] . In my work I also reviewed different methods of building with straw bales, history of building with straw bales and I described (gradbeno-fizikalne) features of wall panels with straw bales...|$|E
40|$|Assembly time {{estimation}} {{is traditionally}} a time-intensive manual process that requires detailed geometric and process information, {{which is often}} subjective and qualitative in nature. As a result, assembly time estimation is rarely applied during early design iterations. In this paper, the authors explore the possibility of automating the assembly time estimation process while reducing the level of design detail required. In this approach, they train artificial neural networks (ANNs) to estimate the assembly times of vehicle sub-assemblies using either assembly connectivity or liaison graph properties, respectively as input data. The effectiveness of estimation is evaluated based {{on the distribution of}} estimates provided by a population of ANNs trained on the same input data using varying initial conditions. Results indicate that this method can provide time estimates of an assembly process with +/- 15 % error while relying exclusively on the geometric part information rather than <b>process</b> <b>instructions...</b>|$|E
40|$|The {{creation}} of a virtual benchmarking model {{as a tool for}} professional development of teachers is examined in this article. The process employed authentic learning criteria as reflection and dialogue tools in a peer review of e-courses. The learning space the virtual benchmarking process provided and its effectiveness in supporting professional development as experienced by teachers are described. Strengths and development challenges of the model are discussed. The project itself became an authentic learning environment in which elements structuring authentic learning promoted peer learning and collaborative construction of knowledge. Virtual methodologies were tested and developed with the use of Adobe Connect Pro and Ning. Teachers felt new knowledge could immediately be transferred to their work and authenticity in e-learning fostered by increasing collaborative construction of knowledge, strengthening reflection and deploying interactive social media. While considered useful and a time-saver, further improvements to the multiphase model should focus on <b>process</b> <b>instructions</b> and role clarification...|$|E
50|$|In Computational {{complexity}} theory, computing efficiency, Combinatorial optimization, Supercomputing, computational cost (Algorithmic efficiency) {{and other}} computational metrics, MEMS is {{a measurement unit}} {{for the number of}} memory accesses used or needed by a <b>process,</b> function, <b>instruction</b> set, algorithm or data structure.|$|R
5000|$|... “In the 20th century Joseph Beuys said: ‘Everyone is an artist’. In the 21st century I say: ‘Everyone is a {{potential}} work of art’. Those willing to be sculpted, undergo a <b>process</b> of <b>instruction</b> before being declared Living Works of Art.” ...|$|R
50|$|Computers run sets of <b>instructions</b> {{called a}} <b>process.</b> In {{operating}} systems, {{the execution of}} the process can be postponed if other processes are also executing. In addition, the operating system can schedule when to perform the action that the process is commanding. For example, suppose a process commands that a computer card's voltage output be set high-low-high-low and so on at a rate of 1000 Hz. The operating system may choose to adjust the scheduling of each transition (high-low or low-high) based on an internal clock. The latency is the delay between the <b>process</b> <b>instruction</b> commanding the transition and the hardware actually transitioning the voltage from high to low or low to high.|$|R
