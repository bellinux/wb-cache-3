14|16|Public
25|$|The lower 15 bits of each {{memory word}} held AGC {{instructions}} or data, with each word being {{protected by a}} 16th odd parity bit. This bit was set to 1 or 0 by a <b>parity</b> <b>generator</b> circuit so a count of the 1s in each memory word would always produce an odd number. A parity checking circuit tested the parity bit during each memory cycle; if the bit didn't match the expected value, the memory word {{was assumed to be}} corrupted and a parity alarm panel light was illuminated.|$|E
50|$|For example, the 74LVC1G386 {{microchip}} is {{advertised as}} a three-input logic gate, and implements a <b>parity</b> <b>generator.</b>|$|E
50|$|The lower 15 bits of each {{memory word}} held AGC {{instructions}} or data, with each word being {{protected by a}} 16th odd parity bit. This bit was set to 1 or 0 by a <b>parity</b> <b>generator</b> circuit so a count of the 1s in each memory word would always produce an odd number. A parity checking circuit tested the parity bit during each memory cycle; if the bit didn't match the expected value, the memory word {{was assumed to be}} corrupted and a parity alarm panel light was illuminated.|$|E
40|$|Topological method {{uses the}} eye as pattern {{detector}} to trace path of transmission on truth table. Pathway selection is continually supervised by logician, {{allowing him to}} seek planar iterative solution desirable for fabrication of monolithic circuits. Method applies to <b>parity</b> <b>generators,</b> multiple output functions, full adders, and bit comparators...|$|R
50|$|The Department of Electronics and Communication Engineering was {{established}} in 1998. The department has a Microprocessor Lab. The Digital Electronics Lab is used for study of encoders and decoders, multiplexers and demulti, flip -flops, counters and shift registers, and <b>parity</b> <b>generators</b> and checkers. A brief idea of digital I.C. is also provided.|$|R
40|$|We {{present a}} new {{multi-level}} logic synthesis technique based on minimizing communication complexity. Intuitively, {{we believe this}} approach is viable because for many types of circuits lower bounds on the area needed to implement those circuits have been obtained considering only communication complexity. It performs especially well for functions which are hierarchically decomposable (e. g., adders, <b>parity</b> <b>generators,</b> comparators, etc.). Unlike many other multi-level logic synthesis techniques, a lower hound can be computed to deter-mine how well the synthesis was performed. We also present a new multi-level logic synthesis program based on the techniques described for reducing communication complexity...|$|R
50|$|It is {{most common}} to regard {{subsequent}} inputs as being applied through {{a cascade of}} binary exclusive-or operations: the first two signals are fed into an XOR gate, then the output of that gate is fed into a second XOR gate together with the third signal, and so on for any remaining signals. The result is a circuit that outputs a 1 {{when the number of}} 1s at its inputs is odd, and a 0 when the number of incoming 1s is even. This makes it practically useful as a <b>parity</b> <b>generator</b> or a modulo-2 adder.|$|E
40|$|Abstract — Digital data {{transmission}} is the mostly {{used in the}} communication. The {{data transmission}} from source to destination should be without loss of information. This is made possible by using the method of <b>parity</b> <b>generator</b> and parity checker. The parity checker and the <b>parity</b> <b>generator</b> are of two types they are even <b>parity</b> <b>generator</b> and parity checker, odd <b>parity</b> <b>generator</b> and checker. Reversible logic gates compremises various parameters in the data transmission. There are various reversible logic gates {{to meet the needs}} of the <b>parity</b> <b>generator</b> and parity checker. Reversible gates probably reduce the number of gates utilised in the conventional method. The <b>Parity</b> <b>generator</b> and the parity ckecker is effective method to find the error in the destination end. The reversible logic gate called Feynman gate is used in the process which make the data transmissionmuch more effective with no data loss and is simulated using the simulator ’Modelsim’...|$|E
40|$|We {{propose a}} method to {{efficiently}} design a “parity generator”, which is a stand-alone block producing multiple parity bits of a given circuit. The <b>parity</b> <b>generator</b> is designed by duplicating the original circuit, by XOR-ing given groups of its outputs and resynthesizing the whole circuit. The resulting circuitry is smaller than the original circuit in most of cases. The major task to be solved is to properly select the groups of outputs to be XORed to obtain multiple parity bits and maximally reduce the generator size. A method based on principles of the FC-Min minimizer is proposed in this paper. The <b>parity</b> <b>generator</b> can be exploited in on-line diagnostics, to design self-checking circuits. In our solution the self-checking circuits are basic blocks of the modified duplex system architecture used for increasing dependability parameters of a reliable design based on FPGAs. The method is tested on standard MCNC benchmark circuits and its efficiency is evaluated...|$|E
40|$|Abstract [...] In {{transmission}} and data storage of information security {{becomes more important}} in the fast evolution of data exchange. It is more important to protect the confidential data from unauthorized access. To overcome that difficulty, we examine the Advanced Encryption Standard (AES) and modify it, to reduce the calculation of algorithm and for improving the data transmission. In modified AES algorithm instead of using Mixcolumn we use <b>parity</b> bit <b>generator</b> to reflect a high level security and better data transmission...|$|R
40|$|Design {{paradigms}} {{of logic}} circuits with Quantum-dot Cellular Automata (QCA) have been extensively {{studied in the}} recent past. Unfortunately, {{due to the lack}} of mature fabrication support, QCA-based circuits often suffer from various types of manufacturing defects and variations, and therefore, are unreliable and error-prone. QCA-based Exclusive-OR (XOR) gates are frequently used in the construction of several computing subsystems such as adders, linear feedback shift registers, <b>parity</b> <b>generators</b> and checkers. However, none of the existing designs for QCA XOR gates have considered the issue of ensuring fault-tolerance. Simulation results also show that these designs can hardly tolerate any fault. We investigate the applicability of various existing fault-tolerant schemes such as triple modular redundancy (TMR), NAND multiplexing, and majority multiplexing in the context of practical realization of QCA XOR gate. Our investigations reveal that these techniques incur prohibitively large area and delay and hence, they are unsuitable for practical scenarios. We propose here realistic designs of QCA XOR gates (in terms of area and delay) with significantly high fault-tolerance against all types of cell misplacement defects such as cell omission, cell displacement, cell misalignment and extra/additional cell deposition. Furthermore, the absence of any crossing in the proposed designs facilitates low-cost fabrication of such systems. Comment: 9 pages, 26 figures, Microprocessors and Microsystems Journal (communicated...|$|R
40|$|We {{present a}} new {{probabilistic}} modelling framework {{based on the}} recent notion of normal factor graph (NFG). We show that the proposed NFG models and their transformations unify some existing models such as factor graphs, convolutional factor graphs, and cumulative distribution networks. The two subclasses of the NFG models, namely the constrained and generative models, exhibit a duality in their dependence structure. Transformation of NFG models further extends {{the power of this}} modelling framework. We point out the well-known NFG representations of <b>parity</b> and <b>generator</b> realizations of a linear code as generative and constrained models, and comment on a more prevailing duality in this context. Finally, we address the algorithmic aspect of computing the exterior function of NFGs and the inference problem on NFGs...|$|R
40|$|Parity is {{an extra}} bit {{which is used}} to add in digital {{information}} to detect error at the receiver end. It can be even and odd parity. In case of even parity, the number of one's will be even included the parity and reverse in the case of odd parity. The circuit {{which is used to}} generate the parity at the transmitter side, called the <b>parity</b> <b>generator</b> and the circuit which is used to detect the parity at receiver side is called as parity checker. In this paper, an even and odd <b>parity</b> <b>generator</b> and checker circuits are designed using electro-optic effect inside lithium niobate based Mach–Zehnder Interferometers (MZIs). The MZIs structures collectively show powerful capability in switching an input optical signal to a desired output port from a collection of output ports. The paper constitutes a mathematical description of the proposed device and thereafter simulation using MATLAB. The study is verified using beam propagation method (BPM) ...|$|E
30|$|In this paper, {{the authors}} {{investigate}} this hybrid concatenated coding scheme. Afterwards, their interests go towards irregular TCs [4]. In our work, {{we focused on}} {{the improvement of the}} 3 GPP 2 code used in the third-generation (3 G) cdma 2000 mobile phone communication systems [5]. Then, the two constituent encoders are eight-state recursive systematic convolutional (RSC) encoders with feedback polynomial 1 + D 2 + D 3 and <b>parity</b> <b>generator</b> polynomial 1 + D + D 3.|$|E
30|$|The {{choice of}} the post-encoder {{influences}} also the performance in both the waterfall and error floor regions. It has to meet different requirements already detailed in [2, 3, 6]. In [7], we justified the {{choice of the}} post-encoder by means of EXIT analysis. A four-state binary convolutional encoder is used in practice. The RSC code with feedback polynomial 1 + D 2 and <b>parity</b> <b>generator</b> polynomial 1 has been selected to be the post-encoder in different simulations of the 3 D TC.|$|E
40|$|Recent {{methods of}} synthesizing logic that is fully and robustly {{testable}} for dynamic faults, namely path delay, transistor stuck-open and gate delay faults, rely {{almost exclusively on}} flattening given logic expressions into sum-of-products form, minimizing the cover to obtain a fully dynamic-fault testable two-level representation of the functions, and performing structural transformations to resynthesize the circuit into a multilevel network, while also maintaining full dynamic-fault testability. While this technique will work well for random or control logic, it is not practical for many regular structures. To deal with the synthesis of regular structures for dynamic-fault testability, we present a method that involves {{the development of a}} library of cells for these regular structures such that the cells are all fully path-delay-fault, transistor stuck-open fault or gate-delay-fault testable. These cells can then be utilized whenever one of these standard functions is encountered. We analyze various regular structures such as adders, arithmetic logic units, comparators, multipliers, and <b>parity</b> <b>generators</b> to determine if they are testable for dynamic faults, or how they can be modified to be testable for dynamic faults while still maintaining good area and performance characteristics. In addition to minimizing the area and delay, another key consideration is to get designs which can be scaled to an arbitrary number of bits while still maintaining complete testability. In each case, the emphasis is on obtaining circuits which are fully path-delay-fault testable. In the process of design modification to produce fully robustly testable structures, we have derived a number of new composition rules that allow cascading individual modules while maintaining robust testability under dynamic fault models. United States. Defense Advanced Research Projects Agency (Contract N 00014 - 87 -K- 0825) National Science Foundation (U. S.) (Young Investigator Award...|$|R
40|$|Abstract: In Literature, Unequal Error Protection codes (UEP) are {{described}} and studied based on <b>parity</b> check or <b>generator</b> matrices. In this paper {{we present a}} computational algorithm which provides generator polynomials for cyclic and pseudo-cyclic (polynomial) codes which have UEP properties. We devised several C++ programs and then we realized a complete table with all the polynomial codes with UEP properties having length n# 30 and distances up to 9. Key words: Error-correcting codes Protection level Cyclic code Separation vecto...|$|R
40|$|We {{present an}} {{efficient}} new {{method of obtaining}} a generator matrix G from certain types of parity check matrices with a defective cyclic block structure. This novel approach describes <b>parity</b> check and <b>generator</b> matrices in terms of polynomials. Moreover, by using this polynomial algebra we have found efficient ways to implement the scheme. In addition, this method is as such interesting as {{it allows us to}} convert H into G without a systematic encoder in between (i. e., there is no diagonal subpart in the output). This alone is interesting as normally G would be dense if we were to form it from the given H by Gaussian elimination. ...|$|R
30|$|Plasmonic metal-insulator-metal (MIM) waveguides sustain {{excellent}} {{property of}} confining the surface plasmons up {{to a deep}} subwavelength scale. In this paper, linear and S-shaped MIM waveguides are cascaded together to design the model of Mach-Zehnder interferometer (MZI). Nonlinear material {{has been used for}} switching of light across its output ports. The structures of even and odd parity generators are projected by cascading the MZIs. <b>Parity</b> <b>generator</b> and checker circuit are used for error correction and detection in an optical communication system. Study and analysis of proposed designs are carried out by using the MATLAB simulation and finite-differencetime-domain (FDTD) method.|$|E
40|$|Abstract — This paper {{presents}} {{a detailed analysis}} of an architectural pipeline scheme for Quantum-dot Cellular Automata (QCA); this scheme utilizes the so-called Bennett clocking for attaining high throughput and low power dissipation. In this arrangement, computation stages (utilizing Bennett clocking) and memory stages combine the low power dissipation of reversible computing with the high throughput feature of a pipeline. An example of the application of the proposed scheme to an XOR tree circuit (<b>parity</b> <b>generator)</b> is presented; {{a detailed analysis of}} throughput and power consumption is provided to show the effectiveness of the proposed architectural solution for QCA. I...|$|E
40|$|A channel {{encoding}} {{apparatus and}} method {{are provided in}} which part of the parity bits are set to erroneous bits, and full parity bits are created by correcting the erroneous bits using a channel decoding apparatus of a receiver in a communication system. In the channel encoding apparatus, in order to generate a coded bit stream by adding a parity bit stream to a message bit stream, a partial <b>parity</b> <b>generator</b> generates a partial parity bit stream {{as a part of}} the parity bit stream using the message bit stream, an erasure generator generates a bit stream having an erroneous value as the remaining part of the parity bit stream, and a decoder calculates the value of the parity bit stream by correcting the bit stream having the erroneous value using a parity-check matrix that determines the parity bit stream, the message bit stream, and the partial parity bit stream. Samsung Electronics Co., Ltd. Georgia Tech Research Corporatio...|$|E
2500|$|... 2-bit {{errors in}} a (multiple) {{distance}} of the longest bitfilter of even <b>parity</b> to a <b>generator</b> polynomial are not detected; all others are detected. For degrees up to 32 there is an optimal generator polynomial with that degree and even number of terms; {{in this case the}} period mentioned above is [...] For [...] this means that blocks of 32767 bits length do not contain undiscovered 2-bit errors. For uneven number of terms in the generator polynomial there can be a period of however, these generator polynomials (with odd number of terms) do not discover all odd number of errors, so they should be avoided. A list of the corresponding generators with even number of terms {{can be found in the}} link mentioned at the beginning of this section.|$|R
40|$|This article {{deals with}} {{problems}} of parity space-based fault detection {{for a class}} of discrete-time linear Markovian jump systems. A new algorithm is firstly introduced to reduce the computation of mode-dependent redundancy relation parameter matrices. Different from the case of linear time invariant systems, the <b>parity</b> space-based residual <b>generator</b> for a Markovian jump system cannot be designed off-line because {{it depends on the}} history of system modes in the last finite steps. In order to overcome this difficulty, a finite set of parity matrices is pre-designed applying a unified approach to linear time invariant systems. Then the on-line residual generation can be easily implemented. Moreover, the problem of residual evaluation is also considered which includes the determination of a residual evaluation function and a threshold. Finally, a numerical example is given to illustrate the effectiveness of the proposed method. Maiying Zhong, Qiang Ding and Peng Sh...|$|R
40|$|For modular Lie superalgebras, new notions are introduced: Divided power {{homology}} {{and divided}} power cohomology. For illustration, we give presentations (in terms of analogs of Chevalley generators) of finite dimensional Lie (super) algebras with indecomposable Cartan matrix in characteristic 2 (and in other characteristics for completeness of the picture). We correct the currently {{available in the}} literature notions of Chevalley generators and Cartan matrix in the modular and super cases, and an auxiliary notion of the Dynkin diagram. In characteristic 2, the defining relations of simple classical Lie algebras of the A, D, E types are not only Serre ones; these non-Serre relations are same for Lie superalgebras with the same Cartan matrix and any distribution of <b>parities</b> of the <b>generators.</b> Presentations of simple orthogonal Lie algebras having no Cartan matrix are also given [...] Comment: Expounds math/ 0611391 and math/ 0611392, it contains new theorems, new material on relations for p= 2, and - most important - on div. power (co) homology. To appear in Homol. Homot. App...|$|R
40|$|Exclusive OR (XOR) gate {{is highly}} {{utilized}} in various digital system {{applications such as}} full adder, comparator, <b>parity</b> <b>generator</b> and encryption processor, which leads to increased in the interests to enhance the performance of XOR gate. A novel design of low power and high performance XOR gate using six transistors application are proposed in this paper. The new XOR gate has been compared with previous design in term of power,delay and power-delay product (PDP). The XOR gate is simulated using Cadence Spectre with 65 nm Complementary Metal Oxide Semiconductor (CMOS) technology at different supply voltages {{with a range of}} 0. 6 V to 1. 2 V. The area of the core circuit is approximately 48 μm 2. The critical path propagation delay is 1. 585 ns with power dissipation of only around 3. 256 fW at 0. 8 V supply voltage. The results demonstrate that the proposed design achieve a lowest power consumption and high speed with respect to other designs...|$|E
40|$|XOR and XNOR {{are popular}} gates in microprocessors. They are {{fundamental}} unit circuits used in adder, multiplexer, comparator, <b>parity</b> checker and <b>generator</b> circuits. This project proposes a new five transistors XOR-XNOR design using FinFET. The use of conventional MOSFET as basic unit of XOR and XNOR design has reached its performance limit due to short channel effects (SCEs) at nanoscale region. International Technology Roadmap for Semiconductors (ITRS) had proposed FinFET to replace conventional MOSFET {{to overcome the}} limitations of MOSFET at nanoscale region. Impact of variation FinFET parameters such as gate length, fin height and fin thickness to performance of proposed design are analyzed. In this project, the proposed design is compared with other existing designs in terms of power, delay, power delay product (PDP) and energy delay product (EDP). Simulation results demonstrate the power, delay, PDP and EDP at different supply voltage range from 0. 6 V to 1. 2 V using HSPICE alongside with CosmosScope. The simulation results reveal that the proposed design has full output swing with all input combinations. It consumes least power compared to existing designs and has low PDP and EDP. This project also compare the performance between SG FinFET and IG FinFET based designs. IG FinFET based design consumes lesser power but bigger delay. Thus, higher PDP and EDP compared to SG FinFET based desig...|$|R
40|$|The growing {{complexity}} of integrated circuits {{and the large}} variety of architectures of Field Programmable Gate Arrays (FPGAs) require sophisticated logic design tools. In {{the beginning of the}} eighties the research in logic design was concentrated on the development of fast two-level AND-OR logic minimizers like the well known ESPRESSO. However, most logic functions have a smaller and often faster circuit realization as a multi-level circuit. Thus, synthesis tools emerged for the minimization of the circuit area in a multi-level realization. Most of these synthesis tools are based on the 2 ̆ 2 unate paradigm 2 ̆ 2. Therefore, the synthesis methods are only advantageous for functions having a minimal circuit realization based on AND-OR gates. However, many common functions have a minmal circuit realization having a mix of AND, OR and EXOR gates like counters, adders, multipliers, and <b>parity</b> <b>generators.</b> Therefore, the design of such functions with synthesis tools based on the 2 ̆ 2 unated paradigm 2 ̆ 2 is very inefficient. Circuits incorporating the EXOR gate have received less attention than AND-OR circuits because the EXOR gate was perceived as slower and larger in terms of its circuit realization than the AND and the OR gate. However, the upcoming of Field Programmable Gate Arrays (FPGAs) like the Xilinx Table-Look-Up (TLU) architecture the Actel ACTâ„¢ series and the CLi 6000 series from Concurrent Logic, which allow the realization of the EXOR gate with the same speed and circuit cost as the AND and OR gate, eliminates the disadvantages of the EXOR gate over the AND and OR gate. Thus, there is a strong need for logic synthesis tools that take advantage of EXOR gates. The mapping to the new FPGAs recently obtained an increased interest. The developed synthesis algorithms for FPGAs are based on the mapping and restructuring of the Directed Acyclic Graph (DAG) representation of the logic function. Even though the new FPGAs allow the realization of the EXOR gate without any speed and circuit size penalty in comparison to the AND and OR gate, the synthesis methods have been based on the 2 ̆ 2 unate paradigm 2 ̆ 2. To overcome the disadvantages of the current logic synthesis tools with respect to (nearly) linear functions and FPGA synthesis, this dissertation introduces an extended theory of spectral methods for multiple-valued input, incompletely specified binary output logic. The spectral methods have not been popular in logic synthesis because of their four major drawbacks: (1) the computational complexity, especially if no Fast Transform exists, (2) the memory requirement to store the function in the necessary minterm representation, (3) they cannot take efficiently advantage of incompletely specified functions, (4) suitable only for few applications in logic synthesis. To overcome the two last stated drawbacks, this dissertation introduces the T spectrum. The T spectrum separates the information obtained for the specified and not specified parts of the underlying function. Thus, it is possible to determine directly the contribution of the specified and the not specified part of the function to a single spectral coefficient. Moreover, the T spectrum is an extension of the known spectra like Walshtype, Adding, Arithmetic, and Reed-Muller spectra to any orthogonal and nonorthogonal transform describing logic functions. Thus, transforms can be constructed that describe certain gate structures, as for example the realizable functions of a FPGA macrocell. This allows the development of special synthesis algorithms for the different types of FPGA architectures. As an exemplification of this method, a complete multi-level synthesis algorithm is introduced for the circuit realization with multiplexer modules, which form the basic macrocell of the Actel ACfâ„¢ FPGA series. Additionally, this dissertation presents the classification of the applications of spectral methods in logic synthesis into three categories: (1) The decomposition of logic functions based on the information obtained by the computation of a single spectrum. As an example the linearization procedure developed by Karpowsky is generalized to incompletely specified multi-output Boolean functions. The linearization procedure is based on the computation of the Rademacher-Walsh spectrum with a following decomposition of the underlying function based on high value spectral coefficients. (2) The circuit realization of a logic function based on the repetitive application of (1). This synthesis method is exemplified by an multi-level synthesis algorithm for multiplexer gates. (3) The realization of a logic function as an AND-EXOR circuit based on a GF 2 (Galois Field (2)) spectrum. The GF 2 transforms exhibit the property that they describe a realization of the underlying function as a two-level AND-EXOR circuit. The Multiple-Valued Input Kronecker Reed-Muller (MIKRM) form is introduced as an application of GF 2 transforms. To overcome the drawbacks of spectral methods concerning the computational complexity and high memory requirements, this dissertation presents a computation method for spectra from disjoint representations. The introduced application of the disjoint cube representation and the Ordered Decision Diagrams for the computation of spectra proves to be an ideal concept. Thus, this dissertation presents general synthesis methods based on new spectral methods that overcome the deficiencies of current logic synthesis methods with respect to the synthesis for FPGAs as well as the computational complexity and memory requirements of spectral methods...|$|R

