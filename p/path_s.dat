41|593|Public
5000|$|These {{predictions}} may not {{be feasible}} {{when some of the}} variables are unobserved, as in most policy evaluation problems. The effect of the action [...] can still be predicted, however, whenever a criterion called [...] "back-door" [...] is satisfied. It states that, if a set Z of nodes can be observed that d-separates (or blocks) all back-door paths from X to Y then [...] A back-door path is one that ends with an arrow into X. Sets that satisfy the back-door criterion are called [...] "sufficient" [...] or [...] "admissible." [...] For example, the set Z = R is admissible for predicting the effect of S = T on G, because R d-separate the (only) back-door <b>path</b> <b>S</b> ← R → G. However, if S is not observed, there is no other set that d-separates this path and the effect of turning the sprinkler on (S = T) on the grass (G) cannot be predicted from passive observations. We then say that P(G | do(S = T)) is not [...] "identified." [...] This reflects the fact that, lacking interventional data, we cannot determine if the observed dependence between S and G is due to a causal connection or is spurious(apparent dependence arising from a common cause, R). (see Simpson's paradox) ...|$|E
30|$|From the {{calculation}} results, {{we can see}} <b>path</b> <b>S</b> → B → C → D is better than <b>path</b> <b>S</b> → A → C → D, which matches the analysis above. Thus, CDE can describe the actual channel distribution along paths.|$|E
30|$|Figure  1 {{illustrates}} the block diagram of an ANC and {{illustrates the}} location of the secondary <b>path</b> <b>S</b> and its estimated secondary <b>path</b> <b>Ŝ.</b> The secondary path is a transfer function which can be represented by a group of a digital-to-analog (D/A) converter, a power amplifier, a canceling loudspeaker, an error microphone, and an (A/D) converter.|$|E
5000|$|The four yogas of mahāmudrā {{have been}} {{correlated}} with the Mahāyāna five <b>paths</b> (<b>S.</b> pañcamārga) as follows: ...|$|R
25|$|If {{there is}} a <b>path</b> from <b>s</b> to u with at most i edges, then Distance(u) is at most {{the length of the}} {{shortest}} <b>path</b> from <b>s</b> to u with at most i edges.|$|R
5000|$|Given a {{weighted}} directed graph G = (V, E) {{and a source}} vertex s, the SPFA algorithm finds the shortest <b>path</b> from <b>s</b> to each vertex v in the graph. The length of the shortest <b>path</b> from <b>s</b> to v is stored in d(v) for each vertex v.|$|R
40|$|STREETS: Ardmore Ave. [736 - 793]; Beck [94 - 132]; Bloomfield Ave.; Bodine Court; Byers Ave.; Corson Ave. [65 - 145]; Crosby [663 - 849]; Delia Ave. [833 - 870]; Dodge Ave. [1 - 192]; Elmore Ave. [800 - 859]; Exchange W. [763 - 930]; Grand Ave.; Hollinger Ave. [100 - 183]; Howes Ave. [1 - 80]; Market W. [706 - 866]; Payne Ave.; Portage <b>Path</b> <b>S.</b> [1 - 31]; Portage <b>Path</b> <b>S.</b> [256 - 270]; Portage <b>Path</b> <b>S.</b> [32 - 255]; Sichley [790 - 865]; Wildwood Ave. [215 - 291]; SPECIALS: Ohio State Telephone Co. : Automatic Exchange Howes Ave.; Portage Path Public Schoo...|$|E
40|$|STREETS: Beck [134 - 245]; Claremont Place; Crosby [528 - 730]; Exchange W. [486 - 699]; Exchange W. [701 - 755]; Gale; Grace Ave.; Hyde Ave.; Maple S. [364 - 564]; Portage <b>Path</b> <b>S.</b> [257 - 275]; Portage <b>Path</b> <b>S.</b> [300 - 475]; Rhodes Ave. [111 - 346]; Westwood Ave. [78 - 302]; Westwood Place; Woodland Ave. [490 - 521]; SPECIALS: Grace Public Schoo...|$|E
40|$|STREETS: Beck Ave. [139 - 242]; Burt Court; Claremont Place; Copley Road [480 - 560]; Crosby [580 - 730]; Exchange W. [600 - 699]; Exchange W. [701 - 765]; Gale [78 - 202]; Hyde Ave. [140 - 199]; Maple S. [452 - 478]; Portage <b>Path</b> <b>S.</b> [245 - 281]; Portage <b>Path</b> <b>S.</b> [319 - 481]; Rhodes Ave. [113 - 248]; Rhodes Ave. [250 - 346]; Trigonia Drive [300 - 387]; Vivian Court; SPECIALS: Grace Evangelical Lutheran Churc...|$|E
40|$|A <b>path</b> from <b>s</b> to t on a {{polyhedral}} {{terrain is}} descending if {{the height of}} a point p never increases while we move p along the <b>path</b> from <b>s</b> to t. No efficient algorithm is known to find a shortest descending <b>path</b> from <b>s</b> to t in a polyhedral terrain. We give some properties of such paths. In the case where the face sequence is specified, we show that the shortest descending path is unique, and give an ɛ-approximation algorithm that computes the path in O(n 3. 5 log (1 ɛ...|$|R
40|$|A <b>path</b> from <b>s</b> to t on a {{polyhedral}} {{terrain is}} descending if {{the height of}} a point p never increases while we move p along the <b>path</b> from <b>s</b> to t. No efficient algorithm is known to find a shortest descending <b>path</b> (SDP) from <b>s</b> to t in a polyhedral terrain. We give two approximation algorithms (more precisely, FPTASs) that solve the SDP problem on general terrains. Both algorithms are simple, robust and easy to implement. Comment: 24 pages, 8 figure...|$|R
40|$|AbstractA <b>path</b> from <b>s</b> to t on a {{polyhedral}} {{terrain is}} descending if {{the height of}} a point p never increases while we move p along the <b>path</b> from <b>s</b> to t. No efficient algorithm is known to find a shortest descending <b>path</b> from <b>s</b> to t in a polyhedral terrain. We give some properties of such paths. In the case where the face sequence is specified, we show that the shortest descending path is unique, and use convex optimization to give an ϵ-approximation algorithm that computes the path in O(n 3. 5 log(1 ϵ)) time...|$|R
3000|$|... 0)= 0 and F_T_ 0 (S_T_ 0)> 0. By left-continuity of F, we {{actually}} have F_T_ 0 (·)> 0 in an open neighborhood U⊂ C_S(0)([0,T],R^d) of the <b>path</b> <b>S.</b>|$|E
40|$|STREETS: Beechwood Drive [296 - 499]; Briarwood Drive [396 - 485]; Copley Road [562 - 710]; Exchange W. [700 - 764]; Fernwood Drive [286 - 485]; Hillwood Drive [296 - 489]; Norway Drive [740 - 869]; Portage <b>Path</b> <b>S.</b> [320 - 480]; Shadyside Ave. [790 - 869]; Wildwood Ave. [301 - 499]; Work Drive [736 - 860]; SPECIALS: Good Convalescent Hom...|$|E
40|$|Substitution of aquo – lingands from hexaaqouchromolum (III) ion by Cysteine (Hcys) {{has been}} studied Kinetically at [H +] of 1. 0 x 10 - 2 mol dm - 3. The {{calculated}} activation parameters (H* and S*) have been {{compared with those of}} water – exchange and related anation reactions of haxaaquochromium (III) ion. The obtained results support an associated <b>path</b> <b>S</b> N 2) ...|$|E
5000|$|Solving the {{quadratic}} for the <b>path</b> length <b>s,</b> factoring, and rearranging, ...|$|R
40|$|Let s be a {{point source}} of light inside a simple polygon P of n vertices. A <b>path</b> from <b>s</b> to some point t inside P is called a diffuse {{reflection}} path if the turning points of the path lie in the interiors of the boundary edges of P. A diffuse reflection path {{is said to be}} optimal if it has the minimum number of turning points amongst all diffuse reflection <b>paths</b> between <b>s</b> and t. A diffuse reflection <b>path</b> between <b>s</b> and t inside P is said to be constrained if the path is simple and it intersects only the eaves of the Euclidean shortest <b>path</b> between <b>s</b> and t. For computing a constrained diffuse reflection <b>path</b> from <b>s</b> to t having the minimum number of turns amongst all such paths, we present an O(n 22 e) time algorithm, where e ≥ 0 is the number of eaves. The exponential factor in the running time can be removed by computing a longer path that may require two more additional turns per eave. The constrained diffuse reflection path computed by our algorithm has at most c times the number of turns in the optimal diffuse reflection path, where 2 ≤ c ≤ 4. ...|$|R
40|$|AbstractLet P be {{a set of}} n {{points in}} convex {{position}} in the plane. The path graph G(P) of P is the graph with one vertex for each plane spanning path of P, in which two <b>paths</b> <b>S</b> and T are adjacent if one {{can be obtained from}} the other by a single edge exchange. We prove that if n⩾ 3, then G(P) is hamiltonian...|$|R
40|$|STREETS: Beck Ave. [1 - 138]; Belvidere Way [1 - 88]; Byers Ave. [1 - 160]; Crosby [579 - 729]; Dodge Ave. [1 - 138]; Grand Ave. [1 - 105]; Market W. [572 - 770]; Payne Ave. [600 - 731]; Portage <b>Path</b> <b>S.</b> [149 - 243]; Rhodes Ave. [1 - 112]; Westmoreland Terrace [100 - 133]; SPECIALS: Fire Dept. Engine Co. No. 3 98 Dodge Ave...|$|E
40|$|STREETS: Ardmore Ave. [737 - 787]; Borton Ave. [1 - 53]; Corson Ave. [21 - 60]; Corson Ave. [63 - 83]; Everett Ave. [59 - 105]; Jefferson Ave. [933 - 976]; Market W. [1020 - 1090]; Market W. [878 - 919]; Market W. [920 - 936]; Marvin Ave. [1 - 90]; Mull Ave. [5 - 87]; Orchard Road [1 - 49]; Portage Path N. [2 - 38]; Portage <b>Path</b> <b>S.</b> [2 - 54...|$|E
40|$|STREETS: Atlas; Augusta Ave.; Bailey Ave.; Borton Ave.; Corson Ave. [1 - 64]; Dick Ave.; Everett Ave. [1 - 99]; Exchange W. [1081 - 1099]; Exchange W. [1100 - 1129]; Jefferson Ave.; Maplewood Ave.; Market W. [878 - 1123]; Marvin Ave. [1 - 190]; Mayfield Ave. [1 - 142]; Metlin Ave.; Mull Ave.; Nelia Ave.; Overlook Ave.; Paige Ave.; Portage Ave.; Portage Path N.; Portage <b>Path</b> <b>S.</b> [2 - 30]; Rose Ave.; Wye Drive; SPECIALS: Monroe United Presby'n Mem'l Church; St. Saviour's Chapel and Parish Hous...|$|E
2500|$|If Distance(u) is not infinity, it {{is equal}} to the length of some <b>path</b> from <b>s</b> to u; ...|$|R
30|$|In Row 2, the Dijkstra {{algorithm}} [20], well-known form graph theory, {{is adopted}} to associate to each node v_i∈ V, {{the cost of}} the (minimum) <b>path</b> from <b>s</b> to v_i, and the node v_i- 1 preceding v_i in the minimum cost path. Then (Row 3), the minimum cost <b>path</b> from <b>s</b> to d is read from the results of Dijkstra algorithm and S is consequently built in Rows 4 and 5.|$|R
5000|$|... where T is {{the average}} time to {{navigate}} through the path, C is the <b>path</b> parameterized by <b>s,</b> W(s) is {{the width of the}} <b>path</b> at <b>s,</b> and a and b are experimentally fitted constants. In general, the path may have a complicated curvilinear shape (such as a spiral) with variable thickness W(s).|$|R
40|$|Using 192 channel multi-simultaneous data {{acquisition}} system, the Authors measured wind pressures on a prism model in natural wind. It was {{showed that the}} occurrence condition of wind pressures on the prism model was that the radius r of curvature of stream <b>path</b> <b>s</b> was longer than 5 times of {{the width of the}} prism model. In this case, the severe suctions was observed to move downward and leeward on the side face of the prism model, when the incident wind perpendicularly attacked upon the front face of the prism model...|$|E
40|$|STREETS: Ardmore Ave. [740 - 782]; Bloomfield Ave. [790 - 849]; Bloomfield Ave. [850 - 888]; Bodine Court [218 - 235]; Corson Ave. [95 - 141]; Delia Ave. [836 - 868]; Dodge Ave. [139 - 192]; Duane Drive; Elmore Ave. [798 - 851]; Exchange W. [766 - 877]; Exchange W. [879 - 961]; Grand Ave. [106 - 199]; Hollinger Ave. [100 - 185]; Kingston Place; Portage <b>Path</b> <b>S.</b> [64 - 270]; Stadelman Court; Stadelman Way [778 - 853]; Volga Way; Wildwood Ave. [215 - 299]; Work Drive [737 - 859...|$|E
40|$|We {{investigate}} Monte Carlo Markov Chain (MCMC) {{procedures for}} the random sampling of some one-dimensional lattice paths with constraints, for various constraints. We will see that an approach inspired by optimal transport allows us to efficiently bound the mixing time of the associated Markov chain. The algorithm is robust and easy to implement, and samples an ”almost ” uniform path of length n in n 3 +ε steps. This bound makes use of a certain contraction property of the Markov chain, and {{is also used to}} derive a bound for the running time of Propp-Wilson’s Coupling From The Past algorithm. 1 Lattice Paths with Constraints We are interested in this paper in some families of one-dimensional lattices paths. We fix three integers n, a, b> 0, and consider the paths of length n, with steps +a / − b, that is, the words of n letters taken in the alphabet {a,−b}. Such a word s = (s 1, s 2, [...] ., sn) is identified to the <b>path</b> <b>S</b> = (S 1, [...] ., Sn) : = (s 1, s 1 +s 2, [...] ., s 1 +s 2 + · · ·+sn). On the right, one sees the lattice <b>path</b> <b>S</b> = (1, 2, 0, 1, 2, 3, 1) associated to the word s = (1, 1,− 2, 1, 1, 1,− 2) ...|$|E
3000|$|In a K-user {{multi-layer}} network (linear deterministic or Gaussian) with 1 -local view if {{there exists a}} <b>path</b> from <b>S</b> [...]...|$|R
30|$|It is {{difficult}} to know exactly the entropy gained by laser ablation on PE-SiO 2 targets. According to Sugita et al. (2003), gained entropy is ~ 10 kJ/K/kg for laser intensity 1.0 × 109 W/cm 2 on a basalt target. Silica might absorb less energy than basalt because of its lower absorbance at the laser wavelength. Thus, we consider four adiabatic <b>paths,</b> <b>S</b> = 7, 8, 9, and 10 kJ/K/kg, along which the equilibrium composition is determined.|$|R
30|$|Complexity: It is NP-complete, it {{contains}} {{as a special}} case (D 1 =(V,t 1 s 1), D 2 =(V,t 2 s 2) and D 3 =D) the following directed 2 -commodity integral flow problem that is NP-complete [6]: Given a directed graph D and two pairs of vertices, s 1,t 1 and s 2,t 2, decide whether there exist a <b>path</b> from <b>s</b> 1 to t 1 and a <b>path</b> from <b>s</b> 2 to t 2 that are arc-disjoint.|$|R
40|$|Models {{of urban}} {{traveler}} route choice are reviewed {{in the context}} of Intelligent Transportation Systems, particularly Advanced Traveler Information S ystems. Existing models suffer from assumptions of perfect information about travel conditions a nd infinite information processing capabilities of drivers. We present evidence that a majority of travelers fail to minimize travel time or distance. We also show that travelers with more network knowledge appear to vary their commute route to respond to changing travel conditions. Coefficient estimates of a model of network knowledge, based on the geographical idea of spatial ability, are presented. To better understand habitual route choice behavior, we examine many possible route generation algorithms. A simulation approach is preferred because it allows for heterogeneity in driver perceptions and it has a quick computational time. Alternative route choice model specifications such as Multinomial Logit, C-Logit, Path Size Logit, Cross-Nested Logit and Logit Kernel Probit are evaluated. The exponential specification of the <b>Path</b> <b>S</b> ize term, using a large parameter value, offers a considerable improvement in fit over MNL, C -Logit and CNL. A hybrid Path Size Logit and Logit Kernel Probit model offers the best overall fit; however, the stability of these estimates requires further examination. The hybrid <b>Path</b> <b>S</b> ize Logit and CNL model provides the next best empirical fit. Random coefficient specifications of MNL, PS L and LK Probit models were also examined. Significant random coefficient parameter estimates were only obtained for the MNL model. This result suggests that random coefficients capture variation in route choice models that would be more effectively explained by a <b>Path</b> <b>S</b> ize or LK Probit specification. Model fit can be further improved by adding an Implicit Availability/Perception term that includes estimated network knowledge. However, this term provides limited explanatory power, as can be seen by its standard errors and by forecasts that are relatively insensitive to changes in traveler knowledge. These results suggest that continued development of better attitudinal surveys to assess network knowledge and wayfinding strategies would allow estimation of route choice models with better explanatory power. by Michael Scott Ramming. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, Dept. of Civil and Environmental Engineering, 2002. Includes bibliographical references (p. 225 - 236) ...|$|E
40|$|An In-coil in Qn, the n-dimensional unit cube, is {{a simple}} cycle C in Qn such that C has no chords in Qn. An In-snake {{is a simple}} (open) <b>path</b> <b>S</b> in Qn which has no chords in Qn. The problem of finding a snake of maximum length suffers from severe {{combinatorial}} explosion. This paper describes {{the use of a}} Genetic Algorithm for finding snakes, and how thiscodewas interfaced with the software package PVM (Parallel Virtual Machine), allowing us to adapt GA code written for single processor machines for use on a cluster of single processor machines acting in parallel...|$|E
40|$|Let {¿(n) }n¿Z be a three-color random scenery, i. e., {{a random}} {{coloration}} of Z in three colors, {{such that the}} colors of the different points in N are i. i. d. Let {S(n) }n¿N be a symmetric random walk starting at 0. Our main result shows that a. s., ¿°S (the composition of ¿ and S) determines ¿ up to translation and reflection. In other words, by observing the scenery along the random walk <b>path</b> <b>S,</b> we can a. s. reconstruct ¿ up to translation and reflection. This result allows us to give a positive {{answer to the question of}} H. Kesten of whether one can a. s. detect a single defect in a three-color random scenery by observing it only along a random walk path...|$|E
40|$|The (Single-Edge) Replacement Paths {{problem is}} defined as follows: Given a {{weighted}} graph G(V, E), two nodes s and t, and the shortest <b>path</b> from <b>s</b> to t in G, compute the shortest <b>path</b> from <b>s</b> to t in the graph G i for 1 p. In other words, the single-edge replacement paths problem studies how a given s-t shortest path changes with the deletion of an edge lying on the path. We study a two-edge generalization of this problem for directed graphs, termed the Edge Pairs Replacement Paths problem: Given G, s, t, and (s, t) as defined above, compute the shortest <b>path</b> from <b>s</b> to t when two edges of pairs of edges of (s, t). We present an O(n) algorithm for this problem, and establish an #(mn) lower bound in the path comparison model for shortest path algorithms which was introduced in [10]...|$|R
40|$|A <b>path</b> from <b>s</b> to t on a {{polyhedral}} {{terrain is}} de-scending if {{the height of}} a point p never increases while we move p along the <b>path</b> from <b>s</b> to t. No ef-ficient algorithm is known to find an exact shortest descending <b>path</b> (SDP) from <b>s</b> to t in a general poly-hedral terrain, although approximation algorithms for general terrains [2, 6] and exact algorithms for special classes of terrains [1, 5] have been devised. The crucial property that permits efficient short-est path algorithms on polyhedral surfaces is that a locally shortest (or geodesic) path unfolds to a straight line. Thus it is easy to: (1) extend a lo-cally shortest path into the next face; and (2) find a shortest <b>path</b> from <b>s</b> to t through a given face se-quence. Locally shortest descending paths (LSDPs) do not unfold to straight lines [1, Lemma 4], and problems (1) and (2) become non-trivial. In this note we solve problem (1) efficiently by characteriz-ing the bends in LSDPs. We also show that problem (2) is the only barrier to applying the approach of Chen and Han [3] to find SDPs in polynomial time. ...|$|R
30|$|To {{perform the}} {{traversal}} managing multiple visits (corresponding to different traversal times), we use two stacks: <b>Path</b> and <b>S,</b> where <b>Path</b> contains the nodes {{corresponding to the}} journey currently under visit and S contains the edges to be visited. In both <b>Path</b> and <b>S,</b> we store also time-stamps, to register {{the time of the}} first visit of nodes in Path and the time for the future visits of edges in S. If a node happens to be revisited at a later time, in fact, it is treated as a new node.|$|R
