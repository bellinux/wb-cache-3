701|10000|Public
25|$|One or more {{cryptographic}} primitives {{are often}} used to develop a more complex algorithm, called a cryptographic system, or cryptosystem. Cryptosystems (e.g., El-Gamal encryption) are designed to provide particular functionality (e.g., <b>public</b> <b>key</b> <b>encryption)</b> while guaranteeing certain security properties (e.g., chosen-plaintext attack (CPA) security in the random oracle model). Cryptosystems use {{the properties of the}} underlying cryptographic primitives to support the system's security properties. Of course, as the distinction between primitives and cryptosystems is somewhat arbitrary, a sophisticated cryptosystem can be derived from a combination of several more primitive cryptosystems. In many cases, the cryptosystem's structure involves back and forth communication among two or more parties in space (e.g., between the sender of a secure message and its receiver) or across time (e.g., cryptographically protected backup data). Such cryptosystems are sometimes called cryptographic protocols.|$|E
2500|$|Early in the 1970s, {{the concept}} for <b>public</b> <b>key</b> <b>encryption</b> was {{developed}} and proven by James H. Ellis, a GCHQ staff member since 1952, who lacked the necessary number theory expertise necessary to build a workable system. [...] Subsequently, a feasible implementation scheme via an asymmetric key algorithm was invented by another staff member Clifford Cocks, a mathematics graduate. This fact was kept secret until 1997.|$|E
50|$|EPKE {{consists}} of a two-stage process that includes both <b>Public</b> <b>Key</b> <b>Encryption</b> (PKE) and a digital signature. Both <b>Public</b> <b>Key</b> <b>Encryption</b> and digital signatures make up the foundation of Enveloped <b>Public</b> <b>Key</b> <b>Encryption</b> (these two processes are described in full in their own sections).|$|E
3000|$|Cryptography {{and secure}} storage: <b>public</b> <b>key</b> signature, <b>encryption,</b> and {{decryption}} to enable secure {{storage of data}} and digital secrets; [...]...|$|R
50|$|GPGMail is an {{extension}} for Apple Mail that provides <b>public</b> <b>key</b> email <b>encryption</b> and signing. GPGMail works under macOS and the actual cryptographic functionality is handled by GNU Privacy Guard.|$|R
5000|$|Anybody {{knowing the}} <b>public</b> <b>keys</b> for the <b>encryption</b> methods , can verify the shares.|$|R
50|$|Major {{authentication}} algorithms include passwords, Kerberos, and <b>public</b> <b>key</b> <b>encryption.</b>|$|E
50|$|EPOC (Efficient Probabilistic <b>Public</b> <b>Key</b> <b>Encryption)</b> is a {{probabilistic}} public-key encryption scheme.|$|E
5000|$|... #Caption: Illustration of how {{encryption}} is used within servers <b>Public</b> <b>key</b> <b>encryption.</b>|$|E
40|$|This paper {{describes}} an algorithm for secure {{transmission of information}} via open communication channels based on the discrete logarithm problem. The proposed algorithm also provides sender identification (digital signature). It is {{twice as fast as}} the RSA algorithm and requires fifty per cent fewer exponentiations than the ElGamal cryptosystems. In addition, the algorithm requires twice less bandwidth than the ElGamal algorithm. Numerical examples illustrate all steps of the proposed algorithm: system design (selection of private and <b>public</b> <b>keys),</b> <b>encryption,</b> transmission of information, decryption and information recovery. </p...|$|R
40|$|Part 2 : The 2014 Asian Conference on Availability, Reliability and Security, AsiaARES 2014 International audienceWe {{report a}} fatal flaw of CSP-ElG scheme, one of <b>public</b> <b>key</b> <b>encryptions</b> based on conjugacy search problem {{proposed}} in INSCRYPT 2010. It does not satisfy the security property claimed as it is. We also discuss imperfections of security proofs {{of the other}} proposals: CSP-hElG and CSP-CS schemes. Following the technique given by Gennaro et al. to smooth a distribution of DH transform outputs, we introduce a computational assumption related to monoid actions and fix the CSP-ElG scheme using a universal hash function and the leftover hash lemma...|$|R
50|$|Enigmail is a data {{encryption}} and decryption extension for Mozilla Thunderbird and the SeaMonkey internet suite {{that provides}} OpenPGP <b>public</b> <b>key</b> e-mail <b>encryption</b> and signing. Enigmail works under Microsoft Windows, Unix-like, and Mac OS X operating systems. Its cryptographic functionality is handled by GNU Privacy Guard.|$|R
50|$|ACE (Advanced Cryptographic Engine) — the {{collection}} of units, implementing both a <b>public</b> <b>key</b> <b>encryption</b> scheme and a digital signature scheme. Corresponding names for these schemes — «ACE Encrypt» and «ACE Sign». Schemes are based on Cramer-Shoup <b>public</b> <b>key</b> <b>encryption</b> scheme and Cramer-Shoup signature scheme. Introduced variants of these schemes are intended to achieve a good balance between performance and security of the whole encryption system.|$|E
50|$|Any {{authenticated}} <b>public</b> <b>key</b> <b>encryption</b> {{system can}} be used to build a key exchange with forward secrecy.|$|E
50|$|The goal of <b>Public</b> <b>Key</b> <b>Encryption</b> (PKE) is {{to ensure}} that the {{communication}} being sent is kept confidential during transit.|$|E
40|$|The exact {{hardness}} {{of computing}} a Nash equilibrium {{is a fundamental}} open question in algorithmic game theory. This problem is complete for the complexity class PPAD. It {{is well known that}} problems in PPAD cannot be NP-complete unless NP = coNP. Therefore, a natural direction is to reduce the hardness of PPAD to the hardness of problems used in cryptography. Bitansky, Paneth, and Rosen [FOCS 2015] prove the hardness of PPAD assuming the ex-istence of quasi-polynomially hard indistinguishability obfuscation and sub-exponentially hard one-way functions. This leaves open the possibility of basing PPAD hardness on simpler, poly-nomially hard, computational assumptions. We make further progress in this direction and reduce PPAD hardness directly to polyno-mially hard assumptions. Our first result proves hardness of PPAD assuming the existence of polynomially hard indistinguishability obfuscation (iO) and one-way permutations. While this improves upon Bitansky et al. ’s work, it does not give us a reduction to simpler, polynomi-ally hard computational assumption because constructions of iO inherently seems to require assumptions with sub-exponential hardness. In contrast, <b>public</b> <b>key</b> functional <b>encryption</b> is a much simpler primitive and does not suffer from this drawback. Our second result shows that PPAD hardness can be based on polynomially hard <b>public</b> <b>key</b> functional <b>encryption</b> and one-way permutations. Our results further demonstrate the power of polynomially hard <b>public</b> <b>key</b> functional <b>encryption</b> which is believed to be weaker than indistinguishability obfuscation...|$|R
40|$|We {{propose a}} lattice-based {{cryptosystem}} by modifying the Regev’ 05 cryptosystem (STOC 2005), and design a proof of secret-key knowledge. Lattice-based public-key identification schemes {{have already been}} proposed, however, it is unknown that their <b>public</b> <b>keys</b> {{can be used for}} the <b>public</b> <b>keys</b> of <b>encryption</b> schemes. Our modification admits the proof of knowledge on its secret key, however, we need a stronger assumption than that required by the original cryptosystem...|$|R
50|$|A <b>public</b> <b>key</b> {{infrastructure}} {{is a type}} of key management system that uses hierarchical digital certificates to provide authentication, and <b>public</b> <b>keys</b> to provide <b>encryption.</b> PKIs are used in World Wide Web traffic, commonly in the form of SSL and TLS.|$|R
5000|$|Envelope Data (PKE) - this encapsulates the key using <b>public</b> <b>key</b> <b>encryption.</b> This is {{extended}} by RFC 4738 and RFC 6267.|$|E
5000|$|Featuring Stuart Sikes, President of Parks and Associates, Whitfield Diffie, {{father of}} <b>public</b> <b>key</b> <b>encryption</b> and Bo Begole, Senior Scientist from PARC, a Xerox company as {{speakers}} ...|$|E
50|$|Moglen {{was part}} of Philip Zimmermann's defense team, when Zimmermann was being {{investigated}} over the export of Pretty Good Privacy, a <b>public</b> <b>key</b> <b>encryption</b> system, under US export laws.|$|E
40|$|Cloud {{computing}} {{has become}} the more accepted answer to the current information needs. With today’s enterprises operating across multilingual and multicultural spectrum, cloud computing search algorithms should be upgraded to perform searches based on multilingual languages. Data stored in cloud is in encrypted form this is {{in order to maintain}} the data integrity, the data search techniques used in the cloud needs to maintain this encryption as the cloud service provider should not be able to ascertain what is entering and leaving the cloud. This paper proposes a solution,which will provides a method for finding exact encrypted data by using multilingual search queries, phonetic based and also keeping the data integrity of the stored data in the cloud intact. The paper also provides a comparative study between the various <b>public</b> <b>key</b> <b>encryptions</b> and the proposed scheme...|$|R
50|$|IPP is {{implemented}} using the Hypertext Transfer Protocol (HTTP) and inherits {{all of the}} HTTP streaming and security features. For example, authorization can take place via HTTP's Digest access authentication mechanism, GSSAPI, or via <b>public</b> <b>key</b> certificates. <b>Encryption</b> is provided using the SSL/TLS protocol-layer, either in the traditional always-on mode used by HTTPS or using the HTTP Upgrade extension to HTTP (RFC 2817). Streaming is supported using HTTP chunking.|$|R
5000|$|The server usually then sends {{back its}} {{identification}} {{in the form}} of a digital certificate. The certificate contains the server name, the trusted certificate authority (CA) and the server's <b>public</b> <b>encryption</b> <b>key.</b>|$|R
5000|$|Public-Key (MIKEY-PK): The Common Secret is {{exchanged}} {{with the}} help of <b>public</b> <b>key</b> <b>encryption.</b> In larger systems, this requires a PKI to handle the secure distribution of public keys.|$|E
50|$|<b>Public</b> <b>key</b> <b>encryption</b> schemes {{based on}} the Diffie-Hellman key {{exchange}} have been proposed. The first such scheme is the ElGamal encryption. A more modern variant is the Integrated Encryption Scheme.|$|E
50|$|A {{publicly}} available <b>public</b> <b>key</b> <b>encryption</b> application called Pretty Good Privacy (PGP) {{was written in}} 1991 by Phil Zimmermann, and distributed free of charge with source code; it was purchased by Symantec in 2010 and is regularly updated.|$|E
50|$|Usher is {{a digital}} {{credential}} and identity intelligence product {{that offers a}} secure, convenient way for organizations to control digital and physical access. By replacing physical badges and passwords with secure digital badges, Usher is able to generate critical information on user behavior and resource usage {{that can be used}} to make organizations more productive and secure. Usher's technology architecture incorporates the use of three-factor authentication, out-of-band channels, time-limited codes, and bidirectional <b>public</b> <b>key</b> infrastructure <b>encryption.</b>|$|R
50|$|Accounts {{allow for}} {{exclusive}} connections. A server node may establish accounts and then distribute the credentials information. Accounts create an artificial web of trust without exposing the <b>public</b> <b>encryption</b> <b>key</b> and without attaching {{the key to}} an IP address.|$|R
50|$|Newbridge Networks {{primarily}} acquired Calmos Microsystems for its single chip high-speed <b>public</b> <b>key</b> data <b>encryption</b> system, {{which became}} a selling point for Newbridge Networks systems to the U.S. federal government. The rest of the original Calmos Product line though revenue generating and profitable was not {{a major reason for}} the acquisition, these products continued to be sources of revenue well after the division was spun out as Tundra, most notably this include the 8085 variant which was sold as late as 1999.|$|R
50|$|The Grid Security Infrastructure (GSI) in WLCG/EGEE enables secure {{authentication}} {{and communication}} {{over an open}} network. GSI is based on <b>public</b> <b>key</b> <b>encryption,</b> X.509 certificates, and the Secure Sockets Layer (SSL) communication protocol, with extensions for single sign-on and delegation.|$|E
5000|$|In this form, the theorem finds many uses in {{cryptography}} and, in particular, {{underlies the}} computations {{used in the}} RSA <b>public</b> <b>key</b> <b>encryption</b> method. The special case with [...] a prime may be considered a consequence of Fermat's little theorem.|$|E
5000|$|There are {{a variety}} of {{cryptographic}} algorithms which work using the RLWE paradigm. There are <b>public</b> <b>key</b> <b>encryption</b> algorithms, homomorphic encryption algorithms, and RLWE digital signature algorithms in addition to the public key, key exchange algorithm presented in this article ...|$|E
25|$|The server usually then sends {{back its}} {{identification}} {{in the form}} of a digital certificate. The certificate contains the server name, the trusted certificate authority (CA) that vouches for the authenticity of the certificate, and the server's <b>public</b> <b>encryption</b> <b>key.</b>|$|R
40|$|We {{describe}} two new <b>public</b> <b>key</b> broadcast <b>encryption</b> {{systems for}} stateless receivers. Both systems are fully secure against {{any number of}} colluders. In our first construction both ciphertexts and private keys are of constant size (only two group elements), for any subset of receivers. The <b>public</b> <b>key</b> size in this system is linear in {{the total number of}} receivers. Our second system is a generalization of the first that provides a tradeoff between ciphertext size and <b>public</b> <b>key</b> size. For example, we achieve a collusion resistant broadcast system for n users where both ciphertexts and <b>public</b> <b>keys</b> are of size O (√ n) for any subset of receivers. We discuss several applications of these systems. ...|$|R
40|$|Traditional {{encryption}} {{systems are}} designed {{in such a}} way that either the whole data is decrypted, if the <b>encryption</b> and decryption <b>keys</b> match, or nothing is decrypted otherwise. However, there are applications that require a more flexible encryption system which supports decrypting data partially. Searchable encryption is a technique that provides functionalities to decrypt data partially by searching encrypted data. In searchable encryption, each message of data is associated with a set of keywords. Searchable encryption transforms both, the message and the associated keywords, to an encrypted form, {{in such a way}} that the encrypted keywords can be queried later. This allows a client to retrieve or decrypt only the messages of the data that contain a particular keyword without decrypting the data. Searchable encryption can be based on either symmetric <b>key</b> or <b>public</b> <b>key</b> cryptography. In the symmetric key setting, only the client who stores the data on the server can search the encrypted data. This setting is appropriate for situations where the client stores encrypted data on an honest but curious server, in such a way the the encrypted data can be retrieved selectively. Using symmetric <b>key</b> searchable <b>encryption,</b> the server learns as little information as possible after the storage and the search. In <b>public</b> <b>key</b> searchable <b>encryption,</b> anyone can encrypt data using a <b>public</b> <b>key,</b> while only the owner of the corresponding private key can query encrypted data. <b>Public</b> <b>key</b> searchable <b>encryption</b> allows a client to delegate a decryption key to other users, {{in such a way that}} the delegated decryption key can decrypt parts of data only. The main aspects of searchable encryption are security and efficiency. The efficiency of a scheme is evaluated by the complexity of the scheme. The security of a scheme shows the ability of the scheme in hiding both, the message and the associated keywords, from adversaries. To define the security formally, security models are proposed where each model defines certain computational resources and restrictions for the adversary. Since security is never free, there is a trade off between efficiency and security. Searchable encryption schemes that achieve security in a security model with a more powerful adversary have a higher complexity. The best trade off is achieved when the scheme achieves certain level of security with the lowest possible complexity. The main contributions of this thesis are the efficient and provably secure searchable encryption schemes which have a lower complexity compared to existing schemes. Our focus in this thesis is the complexity of the search, which is the main functionality of searchable encryption. In this thesis we propose: • A searchable encryption scheme in the symmetric key setting which is secure in the symmetric <b>key</b> searchable <b>encryption</b> model. This security model is the only security model proposed in the symmetric key setting. Our scheme, called SES, has a lower complexity for the search compared to existing symmetric <b>key</b> searchable <b>encryption</b> schemes. • A <b>public</b> <b>key</b> searchable <b>encryption</b> scheme which is secure in the random oracle model. A ransom oracle is a function that maps an input value to a true random output value. In the random oracle model anyone including the adversary has access to a random oracle. Our scheme, called SEPE, allows searching and enforcing an access control policy, while revealing as little as possible about the data and the policy. The SEPE scheme has a lower complexity to perform the search and enforce an access control policy compared to existing schemes. • A <b>public</b> <b>key</b> searchable <b>encryption</b> scheme which is secure in the selective security model. The adversary in the selective security model must inform in advance of the attack which keyword is intended to be attacked. Our scheme, called SEPS, supports wildcards in the queried keyword. The SEPS scheme is more efficient that existing schemes which allow searching keywords with wildcards on encrypted data. • A <b>public</b> <b>key</b> searchable <b>encryption</b> scheme which is fully secure. The full security model is the strongest proposed security model. Our scheme, called SEPF, has a lower search complexity compared to existing fully secure schemes...|$|R
