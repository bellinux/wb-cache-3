4|0|Public
40|$|Abstract: This {{paper is}} a {{generalization}} of our previous publications [2, 19 - 20] where some newly developed {{models of the}} harmonization theory, together with various practical applications, have been outlined. The goal of the paper under consideration is to describe in depth both the general concepts of the harmonization theory and the fitness of the latter by citing an example from a widely used class of stochastic network projects (<b>PERT-COST</b> models). Harmonization theory is a multi-parametric optimization model {{in order to maximize}} the system's utility as a generalized quality measure of the system's functioning. We have implemented all the principles of the developed theory in a <b>PERT-COST</b> project and have outlined all the mechanisms to evaluate the project's utility. A numerical example is presented. Key words: System's utility; Multi-parametrical harmonization theory; <b>PERT-COST</b> network projects with random activity durations; Independent and dependent basic parameters; Twolevel optimization algorithm; Partial harmonization model 202 Quantitative Methods Inquires 1...|$|E
40|$|This {{paper is}} a {{generalization}} of our previous publications [2, 19 - 20] where some newly developed {{models of the}} harmonization theory, together with various practical applications, have been outlined. The goal of the paper under consideration is to describe in depth both the general concepts of the harmonization theory and the fitness of the latter by citing an example from a widely used class of stochastic network projects (<b>PERT-COST</b> models). Harmonization theory is a multi-parametric optimization model {{in order to maximize}} the system's utility as a generalized quality measure of the system's functioning. We have implemented all the principles of the developed theory in a <b>PERT-COST</b> project and have outlined all the mechanisms to evaluate the project's utility. A numerical example is presented...|$|E
40|$|We {{show the}} {{polynomial}} solvability of the <b>PERT-COST</b> project scheduling {{problem in the}} case of: (i) the objective being a piecewise-linear, convex (possibly, non- monotone) function of the job durations {{as well as of}} job start/finish times, and (ii) the precedence relations between jobs being presented {{in the form of a}} general (not necessary, acyclic) directed graph with arc lengths of any sign. For the latter problem, we present a network flow algorithm (of pseudo-linear complexity) which is easy to implement and which behaves well when the objective values grow slowly with the growth of the problem size while the number of breakpoints in the objective grows fast...|$|E
40|$|One of {{the major}} {{contributions}} to the planning and management of Research and Development organizations is the evolution of methods for dealing with <b>PERT-Cost</b> or CPM-Cost problems. Classically however, variations of the critical path-cost (CPM-Cost) problem, arising when different cost duration relationships are assumed, have been mostly studied via techniques other than dynamic programming. If the precedence relations possess a serial structure, one can develop two essentially equivalent dynamic programming formulations, of the resource allocation variety, by minimizing either the project cost or the completion time. When nonserial precedence relationships are involved, this problem cannot be solved by routine invocation of conventional dynamic programming formulations or algorithms. The intent {{of this paper is}} to show that efficient nonserial dynamic programming formulations can be developed for several complex nonserial CPM-Cost problem situations. In particular, the project time minimization procedure results in less complex dynamic programming models and is thus employed in this paper. Three recent computational reduction techniques based primarily on the introduction of the artifice of pseudo-tasks and pseudo-stages are invoked to treat different variations of this essentially nonserial critical path-cost problem. Considerable savings in computational requirements are achieved by consolidating all phases preceding a junction node prior to the invocation of the dynamic programming procedure. The advantages of these approaches over existing mathematical programming methods include their ability to handle nonlinear cost functions and constraints, as well as their highly efficient parametrization capabilities. Further, the complexity of the dynamic programming formulation does not, unlike other methods, increase with the number of phases (tasks) but only with the degree in which the additional tasks change the structure of the precedence relations. ...|$|E

