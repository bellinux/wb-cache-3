24|235|Public
5|$|Xgrid is a <b>proprietary</b> <b>program</b> and {{distributed}} computing protocol {{developed by the}} Advanced Computation Group subdivision of Apple Inc that allows networked computers {{to contribute to a}} single task.|$|E
50|$|Corel Paint Shop Pro (<b>proprietary</b> <b>program)</b> can {{natively}} edit this file format.|$|E
50|$|CorelDRAW (<b>proprietary</b> <b>program)</b> can {{natively}} edit this {{file format}} with some limitations.|$|E
50|$|For {{modifications}} of the system, the <b>proprietary</b> <b>programming</b> language C/AL is used.|$|R
50|$|In {{technical}} terms, SOLO was a <b>proprietary</b> <b>programming</b> {{language to}} develop sets of application programming interfaces (APIs).|$|R
50|$|RTML is a <b>proprietary</b> <b>programming</b> {{language}} used exclusively by Yahoo!'s Yahoo! Store and Yahoo! Site web hosting services.|$|R
50|$|Updating the reader's {{firmware}} is done via a <b>proprietary</b> <b>program</b> (eSlick Update Setup Package).|$|E
50|$|DrawPlus (<b>proprietary</b> <b>program)</b> can import v9 {{and above}} {{versions}} of this file format (must be saved as being PDF compatible).|$|E
5000|$|Xara Xtreme (<b>proprietary</b> <b>program)</b> has {{support for}} the format that is {{described}} as [...] "working". Xara Xtreme for Linux has similar support.|$|E
50|$|The KUKA Robot Language, {{also known}} as KRL, is a <b>proprietary</b> <b>programming</b> {{language}} similar to Pascal and used to control KUKA robots.|$|R
50|$|Today most Linux distros combine GNU {{packages}} with a Linux kernel {{which contains}} proprietary binary blobs {{and a number}} of <b>proprietary</b> <b>programs.</b>|$|R
50|$|Although most of {{the most}} {{commonly}} used programming languages have fully open specifications and implementations, many programming languages exist only as <b>proprietary</b> <b>programming</b> languages with the implementation available only from a single vendor, which may claim that such a proprietary language is their intellectual property. <b>Proprietary</b> <b>programming</b> languages are commonly domain specific languages or internal scripting languages for a single product; some proprietary languages are used only internally within a vendor, while others are available to external users.|$|R
5000|$|FreeHand (<b>proprietary</b> <b>program)</b> can {{natively}} {{open and}} edit [...]ai file format version 8 or lower. FreeHand will export to [...]ai version 7 format.|$|E
5000|$|The core work of {{the free}} {{software}} movement focused on software development. The free software movement also rejects proprietary software, refusing to install software that does not give them the freedoms of free software. According to Stallman, [...] "The only thing in the software field that is worse than an unauthorised copy of a <b>proprietary</b> <b>program,</b> is an authorised copy of the <b>proprietary</b> <b>program</b> because this does the same harm to its whole community of users, and in addition, usually the developer, the perpetrator of this evil, profits from it." ...|$|E
50|$|Xgrid is a <b>proprietary</b> <b>program</b> and {{distributed}} computing protocol {{developed by the}} Advanced Computation Group subdivision of Apple Inc that allows networked computers {{to contribute to a}} single task.|$|E
50|$|QtiPlot is a {{cross-platform}} {{computer program}} for interactive scientific graphing and data analysis. It {{is similar to}} the <b>proprietary</b> <b>programs</b> Origin or SigmaPlot.|$|R
50|$|Early PLCs, {{up to the}} mid-1990s, were <b>programmed</b> using <b>proprietary</b> <b>programming</b> panels or {{special-purpose}} programming terminals, {{which often}} had dedicated function keys representing the various logical elements of PLC <b>programs.</b> Some <b>proprietary</b> <b>programming</b> terminals displayed the elements of PLC programs as graphic symbols, but plain ASCII character representations of contacts, coils, and wires were common. Programs were stored on cassette tape cartridges. Facilities for printing and documentation were minimal {{due to lack of}} memory capacity. The oldest PLCs used non-volatile magnetic core memory.|$|R
5000|$|NetLinx {{is both a}} {{range of}} {{controllers}} manufactured by AMX {{and the name of}} the <b>proprietary</b> <b>programming</b> language (loosely based on C) used to program the devices.|$|R
50|$|SciDAVis (Scientific Data Analysis and Visualization) is an {{open-source}} cross-platform {{computer program}} for interactive scientific graphing and data analysis. Development started in 2007 as fork of QtiPlot, {{which in turn}} is a clone of the <b>proprietary</b> <b>program</b> Origin.|$|E
5000|$|According to the FSF, [...] "The GPL {{does not}} require you to release your {{modified}} version, or any part of it. You are free to make modifications and use them privately, without ever releasing them." [...] However, if one releases a GPL-licensed entity to the public, there is an issue regarding linking: namely, whether a <b>proprietary</b> <b>program</b> that uses a GPL library is {{in violation of the}} GPL.|$|E
50|$|Gambas is {{intended}} to provide a similar experience as developing in Microsoft Visual Basic, {{but it is not}} a free software clone of the popular <b>proprietary</b> <b>program.</b> The author of Gambas makes it clear that there are similarities to Visual Basic, such as syntax for BASIC programs and the integrated development environment; Gambas was written from the start to be a development environment of its own and seeks to improve on the formula.|$|E
50|$|RPG is a {{high-level}} programming language (HLL) for business applications. RPG is an IBM <b>proprietary</b> <b>programming</b> language and its later versions are available only on IBM i- or OS/400-based systems.|$|R
50|$|AdvPL (Advanced Protheus Language) is a <b>proprietary</b> <b>programming</b> {{language}} {{based on}} xBase. It {{was released in}} 1999 and is used for development of applications in the ERP Protheus made by TOTVS.|$|R
5000|$|And while VVPAT is {{designed}} {{to serve as a}} check on DRE (Direct Recording Electronic) vote recorders, it relies on the same <b>proprietary</b> <b>programming</b> and electronics to produce the audit trail.|$|R
5000|$|SPICE was {{developed}} at the Electronics Research Laboratory of the University of California, Berkeley by Laurence Nagel with direction from his research advisor, Prof. Donald Pederson. SPICE1 was largely a derivative of the CANCER program, which Nagel had worked on under Prof. Ronald Rohrer. CANCER was an acronym for [...] "Computer Analysis of Nonlinear Circuits, Excluding Radiation," [...] a hint to Berkeley's liberalism in the 1960s: at these times many circuit simulators were developed under the United States Department of Defense contracts that required the capability to evaluate the radiation hardness of a circuit. When Nagel's original advisor, Prof. Rohrer, left Berkeley, Prof. Pederson became his advisor. Pederson insisted that CANCER, a <b>proprietary</b> <b>program,</b> be rewritten enough that restrictions could be removed and the program could {{be put in the}} public domain.|$|E
40|$|The paper {{presents}} {{a mathematical model}} of the pearlite - austenite transformation. The description of this process uses the diffusion mechanism which takes place between the plates of ferrite and cementite (pearlite) as well as austenite. The process of austenite growth was described {{by means of a}} system of differential equations solved {{with the use of the}} finite difference method. The developed model was implemented in the environment of Delphi 4. The <b>proprietary</b> <b>program</b> allows for the calculation of the rate and time of the transformation at an assumed temperature as well as to determine the TTT diagram for the assigned temperature range...|$|E
40|$|The use of LiDAR data (Light Detection And Ranging) {{has been}} {{increasing}} and is, today, {{the most commonly used}} data source for the generation of digital elevation models. Until now, there was no FOSS package able to process laser data with certain guarantees, however, SDPlib library supplies this lack. The SDPlib library is the implementation of the SPD format (Sorted Pulse Data) but also a set of tools for LiDAR data manipulation, processing and analysis. SPDlib is able to convert between different data formats, to classify the point cloud, to generate elevation models and to calculate statistical metrics. SPDlib tools are mainly used by command line, however, a new graphical interface has been integrated into QGIS desktop client. It is our intention to present here the SPDlib interface based on the QGIS Processing Toolbox and also to briefly show its use in order to produce basic cartography. A case of study is used to show the benefits that these tools may offer over other <b>proprietary</b> <b>program...</b>|$|E
50|$|A <b>proprietary</b> <b>programming</b> {{language}} {{developed by}} Civilized Software, Inc., MLAB allows matrix manipulations, plotting of functions and data, {{and implementation of}} algorithms, and provides support for curve-fitting, differential equations, statistics and graphics.|$|R
50|$|Map {{matching}} {{is implemented}} {{in a variety}} of programs, including the open source GraphHopper and Open Source Routing Machine routing engines. It is also included {{in a variety of}} <b>proprietary</b> <b>programs</b> and mapping/routing applications.|$|R
50|$|Code {{is written}} in PLEX (a <b>proprietary</b> <b>programming</b> {{language}} tied to the AXE hardware, designed by GÃ¶ran Hemdahl), SDL and ASA210C programming languages. Code for Regional Processors (controlling hardware Extension Modules) {{is written in}} ASA210R.|$|R
40|$|The 3 D-modelling {{of complex}} {{geological}} structures {{is still a}} rather laborious task, {{because of the large}} number of different basic informations and the often complicated geometry that are characteristic for geological bodies. Therefore systems for 3 D-modeling of geological bodies often make use of high speed and large storage computers combined with enhanced Graphics capabilities, and require a considerable amount of interactive work. The present paper proposes a different approach how, for the purpose of the assessment of hard coal deposits, the geometry of stratified geological bodies delimited by tectonical elements may be modelled with reduced working expenditure. With some compromises concerning the detail of the 3 D model, we use standard PC hardware equipment, standard database and graphics software, and a <b>proprietary</b> <b>program</b> for geometric construction. (orig. /UKE) SIGLEAvailable from TIB Hannover: DtF QN 1 (92, 53) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekBundesministerium fuer Bildung, Wissenschaft, Forschung und Technologie, Bonn (Germany) DEGerman...|$|E
40|$|In {{this work}} we propose a joint two-side masking {{procedure}} for automatic analysis of mammographic images. The primary objective is {{the improvement of}} computerized systems capability in revealing additional findings, as the asymmetrical changes of the breast parenchyma. The method allows the proper comparison of {{the left and right}} breast by progressive selection of paired small areas on the mammogram, primarily the so-called "forbidden areas", zones that need special attention in mammographic interpretation. The masking of specific areas of the mammogram requires the identification of two anatomical structures of the breast: the pectoral muscle and the nipple used, together with the breast skin line, to find paired matching points on the images for comparison. With this purpose, specific algorithms have been developed. In particular, a new method for nipple extraction will be presented and validated by expert radiologists, by the use of a <b>proprietary</b> <b>program</b> developed by the authors. Finally, an application example of the automatic Tabar masking procedure will be shown, in order to point out the potential of this method in detection of suspicious areas in mammograms...|$|E
40|$|We study binary axicons {{of period}} 4, 6, and 8 [*]Î¼m {{fabricated}} by photolithography with a 1 [*]Î¼m resolution, 500 [*]nm depth, and 4 [*]mm diameter. Near-field diffraction focal spots varying in diameter from 3. 5 Î» to 4. 5 Î» (for the axicon of period T= 4 [*]Î¼m) and from 5 Î» to 8 Î» (for the axicon with T= 8 [*]Î¼m) are experimentally {{found on the}} optical axis {{at a distance of}} up to 40 [*]Î¼m from the axicon for the wavelength Î»= 0. 532 [*]Î¼m. The first focal spot is found at distance 2 [*]Î¼m (T= 4 [*]Î¼m), with the period of the focal spots being 2 [*]Î¼m (T= 4 [*]Î¼m) and 4 [*]Î¼m (T= 8 [*]Î¼m). Diffraction of linearly polarized plane and diverging waves is simulated using FullWAVE (RSoft) and a <b>proprietary</b> <b>program</b> BOR-FDTD, which implement finite-difference schemes to solve three-dimensional Maxwell's equations in the Cartesian and cylindrical coordinates. The numerically simulated values for diameters of the near-field focal spots for the axicon of period T= 4 [*]Î¼m are in good agreement with the experimental values...|$|E
50|$|Richard Stallman and the FSF {{specifically}} encourage library-writers {{to license}} under the GPL so that <b>proprietary</b> <b>programs</b> cannot use the libraries, {{in an effort}} to protect the free-software world by giving it more tools than the proprietary world.|$|R
50|$|Crobots borrows {{the concept}} used {{from the game}} RobotWar that ran on the {{original}} Apple II computer. Robots were <b>programmed</b> in a <b>proprietary</b> <b>programming</b> language that was interpreted and included a real-time view of the game as it was played.|$|R
50|$|These {{games were}} {{graphical}} {{in nature and}} very advanced for their time, but were <b>proprietary</b> <b>programs</b> that were unable to spread beyond PLATO. Textual worlds, which typically ran on Unix, VMS, or DOS, were far more accessible to the public.|$|R
