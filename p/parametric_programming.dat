160|311|Public
5000|$|The {{development}} of <b>Parametric</b> <b>Programming</b> theory, {{as well as}} the {{development of}} novel algorithms and solution procedures for certain classes of problems.|$|E
5000|$|Depending on {{the nature}} of [...] and [...] and whether the {{optimization}} problem features integer variables, <b>parametric</b> <b>programming</b> problems are classified into different sub-classes: ...|$|E
50|$|<b>Parametric</b> <b>programming</b> {{is a type}} of {{mathematical}} optimization, where the optimization problem is solved as a function of one or multiple parameters. Developed in parallel to sensitivity analysis, its earliest mention {{can be found in a}} thesis from 1952. Since then, there have been considerable developments for the cases of multiple parameters, presence of integer variables as well as nonlinearities. In particular the connection between <b>parametric</b> <b>programming</b> and model predictive control established in 2000 has contributed to an increased interest in the topic.|$|E
5000|$|ISO 13584-101, Geometrical view {{exchange}} protocol by <b>parametric</b> <b>program</b> ...|$|R
40|$|Abstract. We {{study in}} this paper the first-order {{behavior}} of value functions in <b>parametric</b> dynamic <b>programming</b> with linear constraints and nonconvex cost functions. By establishing an abstract result on the Fréchet subdifferential of value functions of <b>parametric</b> mathematical <b>programming</b> problems, some new formulas on the Fréchet subdifferential of value functions in <b>parametric</b> dynamic <b>programming</b> are obtained...|$|R
40|$|We {{study in}} this paper the first-order {{behavior}} of value functions in <b>parametric</b> dynamic <b>programming</b> with linear constraints and nonconvex cost functions. By establishing an abstract result on the Frechet subdifferential of value functions of <b>parametric</b> mathematical <b>programming</b> problems, some new formulas on the Frechet subdifferential of value functions in <b>parametric</b> dynamic <b>programming</b> are obtained. Dynamic programming Value functions Frechet normal cones Frechet subgradients The Frechet subdifferential...|$|R
5000|$|The {{application}} of <b>Parametric</b> <b>Programming</b> to model predictive control (MPC), {{which allows for}} the explicit solution of the underlying optimization problem, hence removing the necessity of online optimization ...|$|E
50|$|A {{more recent}} {{advancement}} in CNC interpreters is support of logical commands, known as <b>parametric</b> <b>programming</b> (also known as macro programming). Parametric programs include both device commands {{as well as}} a control language similar to BASIC. The programmer can make if/then/else statements, loops, subprogram calls, perform various arithmetic, and manipulate variables to create a large degree of freedom within one program. An entire product line of different sizes can be programmed using logic and simple math to create and scale an entire range of parts, or create a stock part that can be scaled to any size a customer demands.|$|E
40|$|In {{this paper}} the {{application}} of <b>parametric</b> <b>programming</b> to CNC machining is discussed. As one of the less frequently utilized features of CNC machines, <b>parametric</b> <b>programming</b> {{has the potential to}} increase the efficiency of CNC operations. This feature is particularly beneficial to companies with group technology manufacturing where parts with similar design or operational requirements are processed within a machine cell. Using two case studies, the capabilities of <b>parametric</b> <b>programming</b> for CNC machines are illustrated...|$|E
40|$|The theory {{presented}} in Part I {{of this paper}} led to a Basic Parametric Procedure for a broad class of strictly concave <b>parametric</b> <b>programs.</b> In this part, additional theory is developed that facilitates efficient computational implementation. An illustrative graphical example is given, and some extensions are indicated. ...|$|R
40|$|This note {{illustrates}} how Voronoi diagrams and Delaunay triangulations of point sets can be computed by applying <b>parametric</b> linear <b>programming</b> techniques. We specify <b>parametric</b> linear <b>programming</b> problems that yield the Delaunay triangulation or the Voronoi Diagram of an arbitrary {{set of points}} S in R n. ...|$|R
5000|$|... {{computing}} the lexicographic minimum using <b>parametric</b> integer <b>programming</b> ...|$|R
40|$|The article {{presents}} {{the possibilities of}} <b>parametric</b> <b>programming</b> of CNC machine tools for the SINUMERIK 840 D sl control system. The kinds and types {{of the definition of}} variables for the control system under discussion described. On the example of the longitudinal cutting cycle, <b>parametric</b> <b>programming</b> possibilities are shown. The program’s code and its implementation in the control system is described in detail. The principle of <b>parametric</b> <b>programming</b> in a high-level language is also explained...|$|E
40|$|<b>Parametric</b> <b>programming</b> {{is one of}} the {{broadest}} areas of applied mathematics. Practical problems, that can be described by <b>parametric</b> <b>programming,</b> were recorded in the rock art about thirty millennia ago. As a scientific discipline, <b>parametric</b> <b>programming</b> began emerging only in the 19502 ̆ 7 s. In this tutorial we introduce, briefly study, and illustrate some of the elementary notions of <b>parametric</b> <b>programming.</b> This is done using a limited theory (mainly for linear and convex models) and by means of examples, figures, and solved real-life case studies. Among the topics discussed are stable and unstable models, such as a projectile motion model (maximizing the range of a projectile), bilevel decision making models and von Stackelberg games of market economy, law of refraction and Snell 2 ̆ 7 s law for the ray of light, duality, Zermelo 2 ̆ 7 s navigation problems under the water, restructuring in a textile mill, ranking of efficient DMU (university libraries) in DEA, minimal resistance to a gas flow, and semi-abstract <b>parametric</b> <b>programming</b> models. Some numerical methods of input optimization are mentioned and several open problems are posed...|$|E
30|$|The MCP {{proposed}} algorithm in fuzzy time-varying is not applied {{goal and}} <b>parametric</b> <b>programming</b> techniques.|$|E
40|$|As an {{alternative}} {{to the development of a}} full feature-based CAD system, we suggest a fairly simple extension to a system that possesses parametric capabilities so that feature-based modelling interface is simulated. We use programming-by-example in defining features by <b>parametric</b> <b>programs</b> following a purely procedural approach. The <b>parametric</b> <b>programs</b> constitute the feature model which is built up in a bottom-up manner. The structuring of the object in feature allows modification to the parametric description in a graphical manner. Some problems related to the use of features in an engineering system for the purpose of simulation and analysis as well as the handling of duality and complementarity in a feature model are discussed. We have restricted our approach to 2 D models and have implemented Electric Machinery specific features into a 2 D CAD system...|$|R
40|$|Abstract — A novel {{splitting}} {{scheme to}} solve <b>parametric</b> multi-convex <b>programs</b> is presented. It {{consists of a}} fixed number of proximal alternating minimisations and a dual update per time step, which makes it attractive in a real-time NMPC framework and for distributed computing environments. Assuming that the <b>parametric</b> <b>program</b> is semi-algebraic and that its KKT points are strongly regular, a contraction estimate is derived and it is proven that the sub-optimality error remains stable if two key parameters are tuned properly. Efficacy of the method is demonstrated by solving a bilinear NMPC problem to control a DC motor. I...|$|R
40|$|Abstract. Because of {{the complex}} {{structure}} of grader working device, its optimization is a repeated, continuously improved process. A new model has {{to be set up}} before each optimization. In order {{to solve the problem of}} repeating modeling and improve the product optimization efficiency, a second development system of working device is established. Parametric driving about working device is realized in term of spatial mechanism. At first, the overall design framework of this second development system was established, then customized user interface was completed based on UG/Open API and <b>parametric</b> <b>programs</b> about the working device system were complied based on UG/Open Grip subsequently. The connection among customized user interface, <b>parametric</b> <b>programs</b> and human-computer interaction was realized by using Visual C++, the integrated second development system design of working device was eventually completed. This second development system could not only provide engineers with a rapid design method to shorten the new product development cycle, but solve the problem of repeating modeling during optimization design as well...|$|R
40|$|This {{bachelor}} thesis {{deals with}} postoptimality analysis of <b>parametric</b> <b>programming</b> problems. <b>Parametric</b> <b>programming</b> problem is problem, {{where some of}} the coefficients are not constant but depend on one or several parameters. Postoptimality analysis explores intervals of stability of coefficients in an initial solution and impact of additional changes in the assignment of the problem. Mentioned theory explains main terms and methods, which were illustrated on practical examples...|$|E
40|$|The main {{contributions}} {{in this thesis}} are advances in <b>parametric</b> <b>programming.</b> The thesis {{is divided into three}} parts; theoretical advances, application areas and constrained control allocation. The first part deals with continuity properties and the structure of solutions to convex parametric quadratic and linear programs. The second part focuses on applications of parametric quadratic and linear programming in control theory. The third part deals with constrained control allocation and how <b>parametric</b> <b>programming</b> can be used to obtain explicit solutions to this problem. </p...|$|E
40|$|For {{researchers}} {{intending to}} investigate mid- to large-scale portfolio selection, good, inexpensive and understandable quadratic <b>parametric</b> <b>programming</b> software, capable of computing the efficient frontiers {{of problems with}} up to two thousand securities without simplifications to the covariance matrix, is hardly known to be available anywhere. As an alternative to Markowitz’s critical line method, a full explication of a simplexbased quadratic <b>parametric</b> <b>programming</b> procedure, utilizing well-known components, is coded in Java for public domain use on modern desktops and laptops. The advantage of the different design is to provide an algorithm that can ultimately be extended (not {{a part of this}} paper) to portfolio problems with objectives beyond mean and variance. Using the code, aspects of portfolio selection problems are investigated and computational experience is reported. Keywords: Portfolio selection, quadratic <b>parametric</b> <b>programming,</b> Kuhn-Tucker Conditions, efficient frontier, nondominated frontier, turning points...|$|E
40|$|Program {{behavior}} {{may depend on}} parameters, which are either configured before compilation time, or provided at runtime, e. g., by sensors or other input devices. <b>Parametric</b> <b>program</b> analysis explores how different parameter settings may affect the program behavior. In order to infer invariants depending on parameters, we introduce parametric strategy iteration. This algorithm determines the precise least solution of systems of integer equations depending on surplus parameters. Conceptually, our algorithm performs ordinary strategy iteration on the given integer system for all possible parameter settings in parallel. This is made possible by means of region trees to represent the occurring piecewise affine functions. We indicate that each required operation on these trees is polynomial-time if only constantly many parameters are involved. Parametric strategy iteration for systems of integer equations allows to construct parametric integer interval analysis as well as parametric analysis of differences of integer variables. It thus provides a general technique to realize precise <b>parametric</b> <b>program</b> analysis if numerical properties of integer variables are of concern. ...|$|R
40|$|A novel {{splitting}} {{scheme to}} solve <b>parametric</b> multiconvex <b>programs</b> is presented. It {{consists of a}} fixed number of proximal alternating minimisations and a dual update per time step, which makes it attractive in a real-time Nonlinear Model Predictive Control (NMPC) framework and for distributed computing environments. Assuming that the <b>parametric</b> <b>program</b> is semi-algebraic and that its KKT points are strongly regular, a contraction estimate is derived and it is proven that the sub-optimality error remains stable if two key parameters are tuned properly. Efficacy of the method is demonstrated by solving a bilinear NMPC problem to control a DC motor. Comment: To appear in Proceedings of the 53 rd IEEE Conference on Decision and Control 201...|$|R
40|$|Abstract—A novel {{splitting}} {{scheme to}} solve <b>parametric</b> multi-convex <b>programs</b> is presented. It {{consists of a}} fixed number of proximal alternating minimisations and a dual update per time step, which makes it attractive in a real-time Nonlinear Model Predictive Control (NMPC) framework and for distributed com-puting environments. Assuming that the <b>parametric</b> <b>program</b> is semi-algebraic and that its critical points are strongly regular, a contraction estimate is derived and it is proven that the sub-optimality error remains stable under some mild assumptions. Efficacy of the method is demonstrated by solving a bilinear NMPC problem to control a DC motor. In particular, {{the effect of the}} sampling period on the optimality tracking error is analysed for a fixed computational power. I...|$|R
40|$|A new {{analytical}} method called "marginal value analysis" {{is used in}} this paper to provide economic information for all stream flows inside a refinery. Three types of marginal values are defined that represent respectively the de-bottlenecking effect, production cost and product value of an intermediate material flow. Important insights are generated using the analysis to find production bottlenecks, assist in decision making and price intermediate materials, etc. Sensitivity analysis and <b>parametric</b> <b>programming</b> are studied in this paper to provide more comprehensive information for pricing, retrofitting and investment evaluation. Several case studies are used to illustrate the research on marginal value analysis, sensitivity analysis and <b>parametric</b> <b>programming...</b>|$|E
40|$|Many {{studies and}} reports support the {{significant}} {{impact of the}} application of group technology on various aspects of product design and manufacturing. The fact that group technology is the common solution to similar problems is {{the main source of}} such impact. In this paper, one of the less frequently utilized features of CNC technology known as parametric part programming is used to implement the common solution feature of group technology in processing a set of similar parts. Using three part families, the advantages of blending the concept of group technology and <b>parametric</b> <b>programming</b> for CNC machining operations are illustrated. The efficiency improvement due to the use of <b>parametric</b> <b>programming</b> in terms of number of setups and size of program is discussed...|$|E
40|$|Two-dimensional {{data can}} be {{smoothed}} by minimizing {{a combination of the}} sum of weighted absolute deviations from initial estimates and the sums of absolute values of differences in the two directions. The techniques of <b>parametric</b> <b>programming</b> make it feasible to explore the different results obtained by varying the emphasis given to fit vs smoothness. I...|$|E
40|$|This paper brings {{together}} two fundamental topics: polyhedral projection and <b>parametric</b> linear <b>programming.</b> First, it is shown that, given a <b>parametric</b> linear <b>program</b> (PLP), a polyhedron exists whose projection provides {{the solution to}} the PLP. Second, the converse is tackled and it is shown how to formulate a PLP whose solution is the projection of an appropriately defined polyhedron described as the intersection of a finite number of halfspaces. The input to one operation can be converted to an input of the other operation and the resulting output can be converted back to the desired form in polynomial time—this implies that algorithms for computing projections or methods for solving <b>parametric</b> linear <b>programs</b> can be applied to either problem class...|$|R
40|$|This paper studies {{stability}} aspects of solutions of <b>parametric</b> mathematical <b>programs</b> and generalized equations, respectively, with disjunctive constraints. We present sufficient conditions that, under some constraint qualifications ensuring metric subregularity of the constraint mapping, continuity results of upper Lipschitz and upper Hölder type, respectively, hold. Furthermore, we apply the above results to <b>parametric</b> mathematical <b>programs</b> with equilibrium constraints and demonstrate, how some classical {{results for the}} nonlinear programming problem can be recovered and even improved by our theory...|$|R
40|$|Conference Name:International Conference on Green Power, Materials and Manufacturing Technology and Applications (GPMMTA 2011). Conference Address: Chongqing, PEOPLES R CHINA. Time:JUL 15 - 18, 2011. Because of {{the complex}} {{structure}} of grader working device, its optimization is a repeated, continuously improved process. A new model has {{to be set up}} before each optimization. In order {{to solve the problem of}} repeating modeling and improve the product optimization efficiency, a second development system of working device is established. Parametric driving about working device is realized in term of spatial mechanism. At first, the overall design framework of this second development system was established, then customized user interface was completed based on UG/Open API and <b>parametric</b> <b>programs</b> about the working device system were complied based on UG/Open Grip subsequently. The connection among customized user interface, <b>parametric</b> <b>programs</b> and human-computer interaction was realized by using Visual C++, the integrated second development system design of working device was eventually completed. This second development system could not only provide engineers with a rapid design method to shorten the new product development cycle, but solve the problem of repeating modeling during optimization design as well...|$|R
40|$|In {{this paper}} we will present custom design and <b>parametric</b> <b>programming</b> {{strategies}} {{for the design of}} complex spatial structures based on our applied research for a 10. 000 m freeform technology centre in Düzce, Turkey. The goal is to develop intuitive, easy-to-use parametric design components for layout, analysis, optimisation and aesthetic architectural free form design...|$|E
40|$|When {{we speak}} about <b>parametric</b> <b>programming,</b> {{sensitivity}} analysis, or related topics, we usually mean {{the problem of}} studying specified perturbations of the data such that for a given optimization problem some optimality criterion remains satisfied. In this paper, we turn to another question. Suppose that A is a matrix having a specific property P. What are the maximal allowable variations of the data such that the property still remains valid for the matrix? We study two basic forms of perturbations. The first is a perturbation in a given direction, which {{is closely related to}} <b>parametric</b> <b>programming.</b> The second type consists of all possible data variations in a neighbourhood specified by a certain matrix norm; this is related to the tolerance approach to sensitivity analysis, or to stability. The matrix properties discussed in this paper are positive definiteness; P-matrix, H-matrix and P-matrix property; total positivity; inverse M-matrix property and inverse nonnegativity...|$|E
40|$|We {{show that}} the Balanced Network Flow Problem {{in the case of}} general weights, i. e., the problem of finding a {{feasible}} flow on a given network which minimizes the difference between the maximum and the minimum weighted flow on single arcs, can be solved in strongly polynomial time. The proposed solution algorithm consists of extending Megiddo's approach for <b>parametric</b> <b>programming...</b>|$|E
40|$|We {{consider}} the convex <b>parametric</b> quadratic <b>programming</b> problem when {{the end of}} the parametric interval is caused by a multiplicity of possibilities ("ties"). In such cases, there is no clear way for the proper active set to be determined for the parametric analysis to continue. In this thesis, we show that the proper active set may be determined in general by solving a certain non-parametric quadratic programming problem. We simplify the <b>parametric</b> quadratic <b>programming</b> problem with a parameter both in the linear part of the objective function and in the right-hand side of the constraints to a quadratic programming without a parameter. We break the analysis into three parts. We first study the <b>parametric</b> quadratic <b>programming</b> problem with a parameter only in the linear part of the objective function, and then a parameter only in the right-hand side of the constraints. Each of these special cases is transformed into a quadratic programming problem having no parameters. A similar approach is then applied to the <b>parametric</b> quadratic <b>programming</b> problem having a parameter both in the linear part of the objective function and in the right-hand side of the constraints...|$|R
40|$|This {{bachelor}} thesis {{focuses on}} the use of the additive technology Rapid Prototyping for the design and the production of the beer glass model. The part of this work is to create the real 3 D model of the beer glass with the <b>parametric</b> <b>program</b> SolidWorks with the subsequent description of available Rapid Prototyping technologies. Production of the beer glass will be implemented on the 3 D printer uPrint with using the Fused Deposition Modeling method and compared with other available methods...|$|R
40|$|In this paper, {{stochastic}} programming problems {{are viewed as}} <b>parametric</b> <b>programs</b> {{with respect to the}} probability distributions of the random coefficients. General results on quantitative stability in parametric optimization are used to study distribution sensitivity of stochastic programs. For recourse and chance constrained models quantitative continuity results for optimal values and optimal solution sets are proved (with respect to suitable metrics on the space of probability distributions). The results are useful to study the effect of approximations and of incomplete information in {{stochastic programming}}...|$|R
