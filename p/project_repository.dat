61|366|Public
50|$|As of December 15, 2006 the XDXF <b>project</b> <b>repository</b> {{contains}} 615 dictionaries, {{which are}} collectively 936,189,613 bytes in size (compressed) and contain 24,804,355 articles.|$|E
5000|$|A set {{of notes}} of lessons learned (often the hard way) {{which may be}} useful to future projects. The lesson learn {{document}} or information may be stored in <b>Project</b> <b>Repository</b> ...|$|E
50|$|Quilt {{evolved from}} a set of patch-management scripts {{originally}} written by Linux kernel developer Andrew Morton, and was developed by Andreas Grünbacher for maintaining Linux kernel customizations for SuSE Linux. It is now being developed as a community effort, hosted at the GNU Savannah <b>project</b> <b>repository</b> and distributed as free software (its license is GNU General Public License v2 or later). Quilt's name originated from patchwork quilt.|$|E
50|$|The FreeBSD Core Team is now {{an elected}} body {{comprising}} nine members from the pool of project developers with rights to directly change the <b>Project</b> <b>repositories</b> (committers). Committers are entitled to vote in Core elections if they have made at least one change {{to one of the}} <b>Project's</b> <b>repositories</b> in the past 12 months.|$|R
5000|$|The European Middleware Initiative [...] and the European Grid Infrastructure [...] {{distribute}} {{it through}} their <b>project</b> <b>repositories.</b>|$|R
40|$|Knowledge {{has been}} broadly {{recognized}} as the key element for gaining competitive advantage. Companies are investing more on knowledge management systems. However, no models are customized to evaluate the success of knowledge management systems. To address this issue, this study seeks to develop and test two models {{for the assessment of}} the success of a particular type of KMS: <b>project</b> <b>repositories.</b> These two models are based on DeLone and McLean’s model of Information Systems Success and Seddon’s respecified model. Their models are updated for <b>project</b> <b>repositories</b> through the addition of three relationships...|$|R
5000|$|SVN Notifier {{is a tool}} {{to monitor}} one's Subversion <b>project</b> <b>repository</b> for changes. SVN Notifier notifies a person about recent commits and helps you keep one's local copy up to date. A person reviews all the changes and updates their local copy right from the application. It is free {{software}} released under the GNU General Public License. It uses SVN, TortoiseSVN and Microsoft [...]NET Framework 2.0.|$|E
5000|$|An open {{energy system}} {{modeling}} project typically comprises a codebase, datasets, and software documentation and perhaps scientific publications. [...] The <b>project</b> <b>repository</b> may be hosted on an institutional server or {{on a public}} code-hosting site, such as GitHub. Some projects release only their codebase, while others ship {{some or all of}} their datasets as well. Projects may also offer email lists, chat rooms, and web forums to aid collaboration.|$|E
50|$|The SILS Digital <b>Project</b> <b>Repository</b> {{was created}} by {{information}} and library science graduate students at the University of North Carolina at Chapel Hill (originally developed by SILS students Matthew Bachtell and Ying Zhang for Dr. Gary Marchionini’s Digital Libraries course). The DPR serves as an archive and showcase of student work. The “Pathfinder Digital Library”, {{as it was then}} called, housed two archived pathfinders and provided organized lists of externally linked pathfinders. The project was later taken over by SILS students Becca Cahill, Adam Webb, and Kristen Wilson, who renamed it the SILS Digital <b>Project</b> <b>Repository</b> (DPR) and expanded its scope to include portals, digital archives, and other HTML format projects. These students archived about sixty pathfinders and other projects during their administration of the site in hopes of preserving projects housed on impermanent student webspace. In the Spring of 2006 the DPR was adopted by Lori Eakin, Emily Riley, and Ellen Whisler and worked to collect detailed metadata for projects housed on-site and off-site in preparation for future development of the DPR.|$|E
50|$|Another feature Grml is {{its use of}} the Z shell (zsh) as {{the default}} login shell. The {{customized}} zsh configuration used by Grml can be retrieved from the <b>project's</b> <b>repository.</b>|$|R
50|$|According to {{the terms}} of service, if {{bandwidth}} usage for an account, <b>project</b> or <b>repository</b> exceeds 500 MB/month, or significantly exceeds the average bandwidth usage of other Gitorious.org users or customers, Gitorious.org reserves the right to immediately disable or throttle the account, <b>project</b> or <b>repository</b> until the account owner can reduce the bandwidth consumption.|$|R
2500|$|... http://www.kunisada.de/ The Utagawa Kunisada <b>Project</b> Vast <b>repository</b> of {{information}} about Kunisada's works ...|$|R
50|$|The core {{principle}} of software diagnosis is to automatically extract information from all available information sources {{of a given}} software projects such as source code base, <b>project</b> <b>repository,</b> code metrics, execution traces, test results, etc. To combine information, software-specific data mining, analysis, and visualization techniques are applied. Its strength results, among various reasons, from integrating decoupled information spaces in the scope of a typical software project, for example development and developer activities (recorded by the repository) and code and quality metrics (derived by analyzing source code) or key performance indicators (KPIs).|$|E
50|$|The JA2-Stracciatella project {{aims for}} cross {{platform}} capabilities for JA2 by porting the vanilla JA2 Wildfire source code to SDL as underlying library. Mac OS, Linux and Android and other source ports were released as result. Also, Stracciatella {{can be seen}} as an unofficial patch project, since the second focus is the fixing of technical errors (like Buffer overflows) and the removal of technical limitations without changing the game's balancing. The last commit of project initiator Tron in the <b>project</b> <b>repository</b> was r7072 from August 2010. In March 2013 the JA2-Stracciatella project was continued by another developer and transferred to a new repository. Support for higher resolutions and additional fixes were introduced.|$|E
5000|$|... 2010-06 - v2.0 alpha: Chamilo 2.0 was {{originally}} (first plans {{date back to}} 2006 in the Dokeos Users Day in Valence, France) meant to be released as Dokeos 2.0, as a completely new backend for the LMS. The complete team of developers working on this version decided, in 2009, {{to move to the}} Chamilo project, thus leaving the Dokeos <b>project</b> <b>repository</b> with incomplete sources. Although Dokeos promised since then to release version 2.0 on the 10th of October 2010 (with a corresponding counter counting down from more than 200 days before that), it is not the total remake it was supposed to be, and it is actually expected to be equivalent in features to 1.8.6.1, mostly adding valuable visual and usability improvements.|$|E
30|$|GitHub is {{a web-based}} hosting service that allows {{developers}} to host their software <b>project</b> <b>repositories</b> using the Git revision control system. Since its launch in April 2008, GitHub {{has become one}} of the most popular source code hosting services with over twenty million projects maintained by over eight million registered developers [18]. It is now the largest code host in the world [9].|$|R
50|$|The {{system also}} has {{technology}} for audio streaming to multiple device sinks in a synchronized way. Source {{code of the}} AllJoyn framework {{is located in the}} AllJoyn Open Source <b>Project's</b> <b>repositories</b> AllJoyn Git. Details for all current projects are available at AllJoyn Wiki. Also there is a slack channel dedicated for developers discussion managed by both AllJoyn and third party developers.|$|R
5000|$|MetRep. From JISC's Overlay journal {{infrastructure}} for Meteorological Sciences (OJIMS) <b>project.</b> The <b>repository</b> is forthcoming.|$|R
3000|$|... (6)You {{should find}} your newly created/imported core in the <b>Project</b> <b>Repository</b> of the IP Catalog; right click on it, and select Add IP.|$|E
40|$|This report {{presents}} appendices {{related to}} the preliminary assessment and risk analysis for high-level radioactive waste transportation routes to the proposed Yucca Mountain <b>Project</b> <b>repository.</b> Information includes data on population density, traffic volume, ecologically sensitive areas, and accident history...|$|E
30|$|Participants {{selected}} the JUnit <b>project</b> <b>repository</b> and, then, the Ant project. After, {{they used the}} TDAnalyzer view to search for files with TD indicators in each project. Next, they {{selected the}} files that had the largest amount of TD indicators.|$|E
40|$|Students and {{instructors}} struggle {{to provide an}} integrated view of learning content that is spread over personal and shared file systems, course management systems, team <b>project</b> <b>repositories,</b> wikis, blogs, and other content storage and retrieval systems. Further, they struggle to organize this content when each system provides a different organizational mechanism and strategy. Course management systems fragment content by semester, course, and class session. File systems fragment content into hierarchically organized folders and files with only folder and file names to describe the content. <b>Project</b> <b>repositories</b> fragment information into versions, artifact types, and subsystems organized as folders. It is especially a challenge for a student who does not yet have the knowledge for how to organize and describe their learning content. We have developed an initial version of a learning and knowledge management system and piloted it for an Introduction to Software Engineering course. To hold the common repository of learning content, we used digital library technology. To organize content, we tagged content using subject headings based on the Software Engineering Body of Knowledge (SWEBOK) subject taxonomy. Instructors and students can contribute content, tag it using SWEBOK an...|$|R
50|$|As of October 23, 2008, {{the last}} {{activity}} in the <b>project's</b> CVS <b>repository</b> was dated June 11, 2004. The project website is no longer registered.|$|R
40|$|Many {{vulnerabilities}} in today’s software {{products are}} rehashes of past vulnerabilities. Developers are often unaware of past problems {{or they are}} unable to keep track of vulnerabilities that others have reported and solved. Interestingly, this is not because of a scarcity of information. In fact, a plethora of information about past vulnerabilities is available to developers. Most software development projects dedicate some effort to documenting, tracking, and studying reported vulnerabilities. This information is recorded in <b>project</b> <b>repositories,</b> such as change logs in source code version control systems...|$|R
40|$|As of this version, {{this package}} has been {{successfully}} submitted to, vetted, and accepted for publication in the Bioconductor <b>project</b> <b>repository.</b> The first official release of this software (v 1. 0. 0) {{will be available in}} the release of Bioconductor 3. 6 on 31 October 2017. This is a fully stable early release...|$|E
40|$|This paper {{describes}} {{a number of}} ‘good ideas’ designed to assist staff {{who are involved in}} the management, delivery or support of student project work. The ideas were formed from a Disciplinary Commons. The good ideas discussed include online forums, a <b>project</b> <b>repository,</b> alternative project structures, project preparation, progress reviews, instant supervision, peer support and anti-cheating mechanisms. Readers are encouraged to dip in, consider the ideas and implement those of most use for their own institutions...|$|E
40|$|Software {{organizations}} are putting {{efforts to improve}} the accuracy of the project cost estimation. This in turn helps them to allocate resources. Software cost estimation has been an area of key interest in software engineering community. Many estimation models divided among various categories have been proposed over a period of time. Function Point (FP) is one of the useful software cost estimation methodology that was first proposed twenty-five years ago using the <b>project</b> <b>repository</b> that contained information about various aspects of software project. In the last twenty five years software development productivity has grown rapidly but the complexity weight metrics values assigned to count standard FP still remain same. This fact raises critical questions about the validity of the complexity weight values and accuracy of the estimation process. The objective of this work is to present a genetic algorithm based approach to calibrate the complexity weight metrics of FP using the <b>project</b> <b>repository</b> of International Software Benchmarking Standards Group (ISBSG) dataset. The contribution of this work shows that information reuse and integration of past project’s function-point structural elements improves the accuracy of software estimation process...|$|E
40|$|Coordination is an {{important}} success factor for a development project. Communication gaps, e. g. between product owners shaping the requirements and testers verifying the developed software can result in wasted effort and unsuccessful products. We propose improving the communication between project members with recommendations of whom to interact with and what to discuss based on link prediction in multi-layered proximity-based social graphs based on data mined from <b>project</b> <b>repositories.</b> We plan to explore and validate these ideas through prototyping and by applying a design-science approach in collaboration with an industrial partner...|$|R
50|$|The Yii <b>project</b> {{includes}} a <b>repository</b> of user-contributed extensions.|$|R
5000|$|The GaiaEHR project {{originally}} forked {{from the}} popular OpenEMR in September 2009 as MitosEHR butafter a few years the <b>project</b> and <b>repository</b> were renamed to GaiaEHR. Currently GaiaEHR still in active development ...|$|R
40|$|Atanasov, N., Slavi, M., Milen, P. (2007) Notes for KRSM tool usage. Documentation for the {{software}} client. The tool is available as an open source product, under the three clause BSD license, copyright TENCompetence Foundation through the TENCompetence Sourceforge software <b>project</b> <b>repository.</b> The first validated {{version of the}} KRSM client, used as a proof of concept toolThe work on this publication has been sponsored by the TENCompetence Integrated Project that is funded by the European Commission's 6 th Framework Programme, priority IST/Technology Enhanced Learning. Contract 027087 [[URL]...|$|E
40|$|The {{software}} is available as an open source product through the TENCompetence Sourceforge software <b>project</b> <b>repository,</b> {{as well as}} a compiled product. Available under the three clause BSD licence, Copyright TENCompetence Foundation. The first version of the 360 degree feedback assessment product, conformable to TenCompetence Assessment Specification version 1. 0, used as a proof-of-concept toolThe work on this publication has been sponsored by the TENCompetence Integrated Project that is funded by the European Commission's 6 th Framework Programme, priority IST/Technology Enhanced Learning. Contract 027087 [[URL]...|$|E
40|$|This paper {{highlights}} {{the key elements}} that make an estimation process both credible and auditable. This includes a discussion {{on the quality of}} the input measures (products, processes and resources), the reliability of the productivity models built into an estimation process, the other inputs to the estimation process (key assumptions, constraints and expert judgments) and the type of decisions that should be taken on the basis of the confidence level of the outcomes of the estimation process. This is illustrated with examples from the multi-organizational <b>project</b> <b>repository</b> of the International Software Benchmarking Standards Group [...] ISBS...|$|E
40|$|Abstract—Clustering is {{of great}} {{practical}} value in retrieving reusable requirements artifacts from the ever-growing software <b>project</b> <b>repositories.</b> Despite the development of automated cluster labeling techniques in information retrieval, little is understood about automatic labeling of requirements clusters. In this paper, we review the literature on cluster labeling, and conduct an experiment to evaluate how automated methods perform in labeling requirements clusters. The results show that differential labeling outperforms cluster-internal labeling, and that hybrid method does not necessarily lead to the labels best matching human judgment. Our work sheds light on im-proving automated ways to support search-driven development. Keywords-clustering; labeling; requirements; software reuse; I...|$|R
40|$|At present, {{more and}} more {{commercial}} firms are getting involved, to various extents, in the Open Source (OS) movement. While several studies have examined incentives and business models of these OS-based software companies, very few works have investigated whether and how firms actively participate to open projects. This paper {{contributes to the literature}} by providing empirical evidence on the role and the activities of software houses in community developed projects. The research proposes an original methodology of large-scale primary data collection from OS <b>project</b> <b>repositories</b> and linked Web sites. The findings show how different today’s OS movement is from its origins and how important firm involvement has become...|$|R
40|$|Establishing {{trust between}} {{developers}} working at distant sites facilitates team collaboration in distributed software development. While {{previous research has}} focused on how to build and spread trust in absence of direct, face-to-face communication, it has overlooked the effects of the propensity to trust, i. e., the trait of personality representing the individual disposition to perceive the others as trustworthy. In this study, we present a preliminary, quantitative analysis on how the propensity to trust affects the success of collaborations in a distributed project, where the success is represented by pull requests whose code changes and contributions are successfully merged into the <b>project's</b> <b>repository.</b> Comment: 5 page...|$|R
