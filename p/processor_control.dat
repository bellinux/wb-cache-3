58|683|Public
25|$|The early {{versions}} of Windows are {{often thought of}} as graphical shells, mostly because they ran on top of MS-DOS and use it for file system services. However, even the earliest Windows versions already assumed many typical operating system functions; notably, having their own executable file format and providing their own device drivers (timer, graphics, printer, mouse, keyboard and sound). Unlike MS-DOS, Windows allowed users to execute multiple graphical applications at the same time, through cooperative multitasking. Windows implemented an elaborate, segment-based, software virtual memory scheme, which allows it to run applications larger than available memory: code segments and resources are swapped in and thrown away when memory became scarce; data segments moved in memory when a given application had relinquished <b>processor</b> <b>control.</b>|$|E
5000|$|Virtualize all {{input-output}} and <b>processor</b> <b>control</b> instructions ...|$|E
5000|$|The PCC — The <b>Processor</b> <b>Control</b> Card — a Motorola 68000 based shelf {{control card}} ...|$|E
5000|$|The Asynchronous Operation <b>Processor</b> <b>controls</b> {{the whole}} {{asynchronous}} operation ...|$|R
5000|$|... 1987 AP-100 on air micro <b>processor</b> <b>controlled</b> radio {{broadcast}} console introduced ...|$|R
5000|$|Fonteditor - keypad - font editor {{directly}} runable from Desktop word <b>processor,</b> <b>controlled</b> by keyboard, ...|$|R
50|$|<b>Processor</b> <b>Control</b> Region (PCR) is a Windows {{kernel mode}} data {{structure}} that contains {{information about the}} current processor. It can be accessed via the fs segment register.|$|E
50|$|The PCR {{contains}} a substructure called <b>Processor</b> <b>Control</b> Block (KPRCB), which contains {{information such as}} CPU step and a pointer to the thread object of the current thread.|$|E
50|$|The goal of {{multithreading}} hardware {{support is}} to allow quick switching between a blocked thread and another thread ready to run. To achieve this goal, the hardware cost is to replicate the program visible registers, {{as well as some}} <b>processor</b> <b>control</b> registers (such as the program counter). Switching from one thread to another thread means the hardware switches from using one register set to another; to switch efficiently between active threads, each active thread needs to have its own register set. For example, to quickly switch between two threads, the register hardware needs to be instantiated twice.|$|E
50|$|Once a run {{has been}} started, getting {{access to the}} <b>processor</b> <b>controls</b> its rate of progress. The heart of the Exec is the Dispatcher which manages all the processors.|$|R
40|$|The broiler {{industry}} presents two puzzles regarding production contracts: why do <b>processors</b> <b>control</b> growers' inputs, {{and why do}} {{they use}} a statistically insufficient estimator to calculate growers' compensation? This paper provides an agency theoretic framework that explains these puzzles in terms of processors' response to grower heterogeneity and production risk and to grower risk aversion. <b>Processors</b> <b>control</b> inputs to reduce the information rents paid to agents. By forcing agents to bear additional income risk {{through the use of}} an imprecise estimator, processors can increase profits, due to the combined moral hazard-adverse selection nature of the informational problem. Copyright 2000, Oxford University Press. ...|$|R
50|$|Code {{is written}} in PLEX (a {{proprietary}} programming language tied to the AXE hardware, designed by Göran Hemdahl), SDL and ASA210C programming languages. Code for Regional <b>Processors</b> (<b>controlling</b> hardware Extension Modules) {{is written in}} ASA210R.|$|R
5000|$|Instead of FS segment {{descriptor}} on x86 {{versions of}} the Windows NT family, GS segment descriptor is used to point to two operating system defined structures: Thread Information Block (NT_TIB) in user mode and <b>Processor</b> <b>Control</b> Region (KPCR) in kernel mode. Thus, for example, in user mode GS:0 is {{the address of the}} first member of the Thread Information Block. Maintaining this convention made the x86-64 port easier, but required AMD to retain the function of the FS and GS segments in long mode — even though segmented addressing per se is not really used by any modern operating system.|$|E
50|$|The early {{versions}} of Windows are {{often thought of}} as graphical shells, mostly because they ran on top of MS-DOS and use it for file system services. However, even the earliest Windows versions already assumed many typical operating system functions; notably, having their own executable file format and providing their own device drivers (timer, graphics, printer, mouse, keyboard and sound). Unlike MS-DOS, Windows allowed users to execute multiple graphical applications at the same time, through cooperative multitasking. Windows implemented an elaborate, segment-based, software virtual memory scheme, which allows it to run applications larger than available memory: code segments and resources are swapped in and thrown away when memory became scarce; data segments moved in memory when a given application had relinquished <b>processor</b> <b>control.</b>|$|E
50|$|As {{shown in}} Fig 2, {{in the case}} of mutual {{exclusion}} (Mutex), one thread blocks a critical section by using locking techniques when it needs to access the shared resource and other threads have to wait to get their turn to enter into the section. This prevents conflicts when two or more threads share the same memory space and want to access a common resource.The simplest method to prevent any change of <b>processor</b> <b>control</b> inside the critical section is implementing a semaphore. In uni processor systems, this can be done by disabling interrupts on entry into the critical section, avoiding system calls that can cause a context switch while inside the section, and restoring interrupts to their previous state on exit. Any thread of execution entering any critical section anywhere in the system will, with this implementation, prevent any other thread, including an interrupt, from being granted processing time on the CPU—and therefore from entering any other critical section or, indeed, any code whatsoever—until the original thread leaves its critical section.|$|E
50|$|The {{basic and}} detail {{architecture}} of the Mobile device consists of Hardware and Software architecture. The main hardware componentsof the mobile phone is the application <b>processor</b> that <b>controls</b> all other components of the device such as display, keypad, power, audio , video etc. The radio signals are handled by base bandprocessor which in turn communicates with other processors to use their functionality. Power and audio <b>processor</b> <b>controls</b> the functioning of speaker and microphone {{with the help of}} applicationprocessor. Subscriber Identification Module (SIM) contains the details about the subscriber.|$|R
50|$|The 8061 and its {{derivatives}} {{were used}} in almost all Ford automobiles built from 1983 {{through the end of}} the 20th century. This <b>processor</b> <b>controlled</b> fuel mixture and injection timing, spark advance (often in conjunction with a separate spark module), exhaust gas recirculation, and other engine functions.|$|R
40|$|An {{automated}} system for incubation of pelagic fish eggs is described. The system has an internal air driven water circulation which separates healthy and dead or strongly infected eggs. A <b>processor</b> <b>controlled,</b> pulsed water exchange provides a strongly reduced water requirement. The equipment has also an automated temperature and salinity control and adjustment...|$|R
50|$|A vector {{inserted}} to form {{a molecular}} processor is described in part. The objective was to promote angiogenesis, blood vessel formation and improve cardiovasculature. Vascular endothelial growth factor (VEGF) and enhanced green fluorescent protein (EGFP) cDNA was ligated {{to either side of}} an internal ribosomal re-entry site (IRES) to produce inline production of both the VEGF and EGFP proteins. After in vitro insertion and quantification of integrating units (IUs), engineered cells produce a bioluminescent marker and a chemotactic growth factor. In this instance, increased fluorescence of EGFP is used to show VEGF production in individual cells with active molecular processors. The production was exponential in nature and regulated through use of an integrating promoter, cell numbers, the number of integrated units (IUs) of molecular processors and or cell numbers. The measure the molecular processors efficacy was performed by FC/FACS to indirectly measure VEGF through fluorescence intensity. Proof of functional molecular processing was quantified by ELISA to show VEGF effect through chemotactic and angiogenesis models. The result involved directed assembly and coordination of endothelial cells for tubule formation by engineered cells on endothelial cells. The research goes on to show implantation and VEGF with dosage capabilities to promote revascularization, validating mechanisms of molecular <b>processor</b> <b>control.</b>|$|E
5000|$|Various {{forms of}} dynamic recompilation, {{including}} the popular Just In Time compiler (JIT) technique, try to circumvent these problems by {{waiting until the}} <b>processor</b> <b>control</b> flow jumps into a location containing untranslated code, and only then ("just in time") translates a block of the code into host code that can be executed.The translated code is kept in a code cache, and the original code is not lost or affected; this way, even data segments can be (meaninglessly) translated by the recompiler, resulting in {{no more than a}} waste of translation time. Speed may not be desirable as some older games were not designed with the speed of faster computers in mind. A game designed for a 30 MHz PC with a level timer of 300 game seconds might only give the player 30 seconds on a 300 MHz PC. Other programs, such as some DOS programs, may not even run on faster computers. Particularly when emulating computers which were [...] "closed-box", in which changes to the core of the system were not typical, software may use techniques that depend on specific characteristics of the computer it ran on (i.e. its CPU's speed) and thus precise control of the speed of emulation is important for such applications to be properly emulated.|$|E
40|$|Abstract. This paper uses {{digital signal}} <b>processor</b> <b>control</b> {{horizontal}} continuous casting traction motor three states of positive rotation, inversion rotation and stop, to achieve the copper pull, stop, reverse thrust sport. At the same time, we can improve the yield, reduce the production cost by change the casting speed, the traction frequency and pitch...|$|E
40|$|Six {{computers}} operate synchronously and are interconnected {{by three}} independent data buses. <b>Processors</b> <b>control</b> one subsystem. Some can control buses to transfer data at 1 megabit per second. Every 2. 5 msec each processor examines {{list of things}} to do during next interval. This spacecraft control system could be adapted for controlling complex industrial processes...|$|R
50|$|Though {{used for}} manuscripts, letters, and {{personal}} records since the 19th century, {{the need for}} special type long restricted printed syllabics to missionary publications. However, {{with the development of}} syllabic typewriters and, later, word <b>processors,</b> <b>control</b> of the script passed to native speakers, and it is now used for schoolbooks, periodicals, and official documents.|$|R
50|$|The {{processor}} runs in {{real mode}} immediately after power on, so an operating system kernel, or other program, must explicitly switch to another mode if it wishes {{to run in}} anything but real mode. Switching modes is accomplished by modifying certain bits of the <b>processor's</b> <b>control</b> registers after some preparation, and some additional setup may be required after the switch.|$|R
40|$|Hydrogen {{reformate}} gas powered {{fuel cell}} systems require sensors for carbon monoxide level monitoring and feedback control. • Develop a low temperature sensor for measuring 10 - 100 ppm range concentrations for stack poisoning control. • Develop a high temperature sensor for {{the measurement of}} 0. 1 to 2 % carbon monoxide in the reformate gas for fuel <b>processor</b> <b>control...</b>|$|E
40|$|In {{this paper}} we discuss a locally-generated daughter-board {{extension}} to the popular SHARC DSP evaluation module (EVM). The board improves the performance of this inexpensive hardware in many applications that involve feedback control. We discuss the use of this hardware in a simple servo-motor control experiment that demonstrates many of the fundamentals of digital signal <b>processor</b> <b>control</b> of physical plants...|$|E
40|$|Direct {{torque control}} {{is one of}} modern methods of A. C. {{machines}} control. The direct torque control methods with direct calculation of the vector voltage and vector pulse width modulator were developed and experimentally tested at the Department of Electronics. The paper describes the theoretical assumptions of developed control methods and differences from classical direct torque methods. In the paper, important quantities are shown which were measured on a real induction motor drive with digital signal <b>processor</b> <b>control</b> system...|$|E
5000|$|A bus {{interface}} {{through which}} a <b>processor</b> can <b>control</b> the acquisition and access the data ...|$|R
50|$|The PRX205 (PRX/A) is a <b>processor</b> <b>controlled</b> {{reed relay}} {{telephone}} exchange developed by Philips Telecommunicatie Industrie BV (PTI) in Hilversum {{during the late}} 1960s and early 1970s. The first public switch was installed in Overvecht in Utrecht in 1972. About half of all sales were in the Netherlands. The last PRX switch {{was taken out of}} service on 7 December 2010 at Volendam in the Netherlands.|$|R
40|$|In this work, {{two types}} of codes such that they both {{dominate}} and locate the vertices of a graph are studied. Those codes might be sets of detectors in a network or <b>processors</b> <b>controlling</b> a system whose set of responses should determine a malfunctioning processor or an intruder. Here, we present our contributions on λ-codes and η-codes concerning bounds, extremal values and realization theorems. Peer ReviewedPostprint (published version...|$|R
40|$|The {{use of the}} Convex Computer Corporation {{supercomputers}} {{for flight}} simulation is discussed focusing on a real-time input/output system for supporting the flight simulation. The flight simulation computing system is based on two single <b>processor</b> <b>control</b> data corporation CYBER 175 computers, coupled through extended memory. The Advanced Real-Time Simulation System for digital data distribution and signal conversion is a state-of-the-art, high-speed fiber-optic-based, ring network system {{which is based on}} the computer automated measurement and control technology...|$|E
40|$|Maximum {{intensity}} contrast {{has been}} used as a measure of lens defocus. A photodiode array under the control of 8085 microprocessor is used to measure the maximum intensity contrast and to position the lens for best focus. The lens is moved by a stepper motor under <b>processor</b> <b>control</b> at a speed of 350 to 500 steps/s. At this speed, focusing time was found to be between 5 and 8 s. Under coherent illuminating conditions, an accuracy of ± 50 μm has been achieved...|$|E
40|$|Methods of {{achieving}} look-ahead in processing units are discussed. An optimality criterion is proposed, and several schemes are compared against the optimum under varying assumptions. These schemes include existing and proposed machine organizations, and theoretical treatments not mentioned before in this context. The problems of eliminating associative searches in the <b>processor</b> <b>control</b> and {{the handling of}} loop-forming decisions are also considered. The inherent limitations of such processors are discussed. Finally, a number of enhancements to look-ahead processors is qualitatively surveyed...|$|E
50|$|A {{cell site}} or cell tower is a {{cellular}} telephone site where antennae and electronic communications equipment are placed — typically {{on a radio}} mast, tower, or other raised structure — to create a cell (or adjacent cells) in a cellular network. The raised structure typically supports antennae and one or more sets of transmitter/receivers transceivers, digital signal <b>processors,</b> <b>control</b> electronics, a GPS receiver for timing (for CDMA2000/IS-95 or GSM systems), primary and backup electrical power sources, and sheltering.|$|R
40|$|Barchelor thesis {{focuses on}} the design of {{tankless}} heating and cooling using Peltier elements. The theoretical part deals with conventional cooling capabilities, principles and options of using Peltier elements and considerate issues of design for use in the food industry. In the practical part, author {{focuses on the}} design and construction of mechanical parts, design and construction of <b>processor</b> <b>controled</b> power source. Final device is compared to the alternative commercial product and possibilities of real usage are considered...|$|R
40|$|To allow CERN to {{test and}} {{maintain}} HIPPI equipment (High Performance Parallel Interface), a powerful test falcility is required. A tester {{has been developed}} at Los Alamos National Laboratories [9, 10]. The CERN HIPPI testbox allows testing of HIPPI equipment {{both inside and outside}} the specifications. This includes the possibility of deliberately introducing errors. The main features of this testbox are: Manual set-up <b>Processor</b> <b>controlled</b> set-up Possibilities for remote analysis Checking the HIPPI specifications Checking illegal condition...|$|R
