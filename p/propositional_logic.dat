2482|1507|Public
5|$|Commutativity is a {{property}} of some logical connectives of truth functional <b>propositional</b> <b>logic.</b> The following logical equivalences demonstrate that commutativity is {{a property}} of particular connectives. The following are truth-functional tautologies.|$|E
25|$|Usually in truth-functional <b>propositional</b> <b>logic,</b> {{formulas}} {{are interpreted}} as having either a truth value of true or a truth value of false. Truth-functional <b>propositional</b> <b>logic</b> and systems isomorphic to it, {{are considered to}} be zeroth-order logic.|$|E
25|$|In <b>propositional</b> <b>logic,</b> 0 {{may be used}} {{to denote}} the truth value false.|$|E
40|$|In this paper, {{we study}} logics of {{dependence}} on the propositional level. We prove that several interesting <b>propositional</b> <b>logics</b> of dependence, including <b>propositional</b> dependence <b>logic,</b> <b>propositional</b> intuitionistic dependence <b>logic</b> as well as <b>propositional</b> inquisitive <b>logic,</b> are expressively complete and have disjunctive or conjunctive normal forms. We provide deduction systems and prove the completeness theorems for these logics...|$|R
50|$|The {{theory of}} {{abstract}} algebraic logic has also provided means to classify logics, with most results having been obtained for <b>propositional</b> <b>logics.</b> The current algebraic hierarchy of <b>propositional</b> <b>logics</b> has five levels, {{defined in terms}} of properties of their Leibniz operator: protoalgebraic, (finitely) equivalential, and (finitely) algebraizable.|$|R
40|$|<b>Propositional</b> <b>logics</b> in general, {{considered}} {{as a set of}} sentences, can be undecidable even if they have “nice” representations, e. g., are given by a calculus. Even decidable <b>propositional</b> <b>logics</b> can be computationally complex (e. g., already intuitionistic logic is PSPACE-complete). On the other hand, finite-valued logics are computationally relatively simple—at worst NP. Moreover, finite-valued semantics are simple, and general methods for theorem proving exist. This raises the question to what extent and under what circumstances <b>propositional</b> <b>logics</b> represented in various ways can be approximated by finite-valued logics. It is shown that the minimal m-valued logic for which a given calculus is strongly sound can be calculated. It is also investigated under which conditions <b>propositional</b> <b>logics</b> can be characterized as the intersection of (effectively given) sequences of finite-valued logics...|$|R
25|$|While <b>propositional</b> <b>logic</b> {{deals with}} simple {{declarative}} propositions, first-order logic additionally covers predicates and quantification.|$|E
25|$|In {{a context}} of <b>propositional</b> <b>logic,</b> {{functionally}} complete sets of connectives are also called (expressively) adequate.|$|E
25|$|Algebraic logic {{uses the}} methods of {{abstract}} algebra to study the semantics of formal logics. A fundamental example {{is the use of}} Boolean algebras to represent truth values in classical <b>propositional</b> <b>logic,</b> and the use of Heyting algebras to represent truth values in intuitionistic <b>propositional</b> <b>logic.</b> Stronger logics, such as first-order logic and higher-order logic, are studied using more complicated algebraic structures such as cylindric algebras.|$|E
5000|$|... #Subtitle level 2: Example: Hilbert {{systems for}} two <b>propositional</b> <b>logics</b> ...|$|R
40|$|In {{this note}} we compare <b>propositional</b> <b>logics</b> for closed substitutions and <b>propositional</b> <b>logics</b> for open substitutions in {{constructive}} arithmetical theories. We provide a strong example where these logics diverge in an essential way. We prove that for Markov’s Arithmetic, i. e. Heyting’s Arithmetic plus Markov’s principle plus Extended Church’s Thesis, {{the logic of}} closed and the logic of open substitutions are the same. ...|$|R
40|$|The {{range of}} <b>propositional</b> <b>logics</b> with the 'converse Ackermann property' is {{proved to be}} wider than {{currently}} assumed. Subintuitionistic, positive intuitionistic and intuitionistic <b>propositional</b> <b>logics</b> with the 'converse Ackermann property' are defined and axiomatized. A particular version of intuitionistic negation is involved {{in some of these}} systems. Complete ternary relational semantics are offered for all logics studied in the paper...|$|R
25|$|Quantum logic can be {{formulated}} {{either as}} {{a modified version of}} <b>propositional</b> <b>logic</b> or as a noncommutative and non-associative many-valued (MV) logic.|$|E
25|$|A {{sentence}} of <b>propositional</b> <b>logic</b> is consistent iff {{it is true}} under at least one interpretation. It is inconsistent {{if it is not}} consistent.|$|E
25|$|Syntactically, every Boolean term {{corresponds}} to a propositional formula of <b>propositional</b> <b>logic.</b> In this translation between Boolean algebra and <b>propositional</b> <b>logic,</b> Boolean variables x,y… become propositional variables (or atoms) P,Q,…, Boolean terms such as x∨y become propositional formulas P∨Q, 0 becomes false or ⊥, and 1 becomes true or T. It is convenient when referring to generic propositions to use Greek letters Φ, Ψ,… as metavariables (variables outside the language of propositional calculus, used when talking about propositional calculus) to denote propositions.|$|E
5000|$|Well-formed {{formulae}} of <b>propositional</b> t-norm <b>logics</b> {{are defined}} from propositional variables (usually countably many) by the above logical connectives, {{as usual in}} <b>propositional</b> <b>logics.</b> In order to save parentheses, {{it is common to}} use the following order of precedence: ...|$|R
5000|$|Well-formed {{formulae}} of BL {{are defined}} as usual in <b>propositional</b> <b>logics.</b> In order to save parentheses, {{it is common to}} use the following order of precedence: ...|$|R
40|$|Abstract. In 1979, H. Lewis {{shows that}} the {{computational}} complexity of the Boolean satisfiability problem dichotomizes, depending on the Boolean operations available to for-mulate instances: intractable (NP-complete) if negation of implication is definable, and tractable (in P) otherwise [17]. Recently, an investigation in the same spirit has been ex-tended to nonclassical <b>propositional</b> <b>logics,</b> modal logics in particular [18, 19]. In this note, we pursue this line {{in the realm of}} many-valued <b>propositional</b> <b>logics,</b> and obtain complex-ity classifications for the parameterized satisfiability problem of two pertinent samples, Kleene and Gödel logics...|$|R
25|$|Logical connectives. A formula in {{the form}} , , etc. is {{evaluated}} according to the truth table for the connective in question, as in <b>propositional</b> <b>logic.</b>|$|E
25|$|A {{formula is}} logically valid (or simply valid) {{if it is}} true in every interpretation. These {{formulas}} play a role similar to tautologies in <b>propositional</b> <b>logic.</b>|$|E
25|$|Galen also {{rejected}} Stoic <b>propositional</b> <b>logic</b> {{and instead}} embraced a hypothetical syllogistic which was {{strongly influenced by}} the Peripatetics and based on elements of Aristotelian logic.|$|E
40|$|We {{introduce}} a generic notion of <b>propositional</b> categorical <b>logic</b> {{and provide a}} construction of an institution with proofs out of such a logic, following the Curry-Howard-Tait paradigm. We then prove logic-independent soundness and completeness theorems. The framework is instantiated {{with a number of}} examples: classical, intuitionistic, linear and modal <b>propositional</b> <b>logics.</b> Finally, we speculate how this framework may be extended beyond the propositional case...|$|R
40|$|Abstract. Effective {{optimisation}} {{techniques can}} make a dramatic difference {{in the performance of}} knowledge representation systems based on expressive description logics. Because of the correspondence between description <b>logics</b> and <b>propositional</b> modal <b>logic</b> many of these techniques carry over into <b>propositional</b> modal <b>logic</b> satisfiability checking. Currently-implemented representation systems that employ these techniques, such as FaCT and DLP, make effective satisfiable checkers for various <b>propositional</b> modal <b>logics.</b> ...|$|R
40|$|<b>Propositional</b> primal <b>logic,</b> {{as defined}} by Gurevich and Neeman, has two kinds of quotations: p said ϕ, and p implied ϕ. Note 1. The {{derivation}} problem for <b>propositional</b> primal <b>logic</b> with one kind of quotations is solvable linear time. Note 2. In the Hilbertian calculus for <b>propositional</b> primal <b>logic,</b> the shortest derivation of a formula ϕ from hypotheses H may be exponential in the length of (H, ϕ). ...|$|R
25|$|Symbolic {{logic is}} the study of {{symbolic}} abstractions that capture the formal features of logical inference. Symbolic logic is often divided into two main branches: <b>propositional</b> <b>logic</b> and predicate logic.|$|E
25|$|In {{logic and}} {{mathematics}} second-order logic {{is an extension}} of first-order logic, which itself {{is an extension of}} <b>propositional</b> <b>logic.</b> Second-order logic is in turn extended by higher-order logic and type theory.|$|E
25|$|These {{semantics}} {{permit a}} translation between tautologies of <b>propositional</b> <b>logic</b> and equational theorems of Boolean algebra. Every tautology Φ of <b>propositional</b> <b>logic</b> {{can be expressed}} as the Boolean equation Φ = 1, which will be a theorem of Boolean algebra. Conversely every theorem Φ = Ψ of Boolean algebra corresponds to the tautologies (Φ∨¬Ψ) ∧ (¬Φ∨Ψ) and (Φ∧Ψ) ∨ (¬Φ∧¬Ψ). If → is in the language these last tautologies can also be written as (Φ→Ψ) ∧ (Ψ→Φ), or as two separate theorems Φ→Ψ and Ψ→Φ; if ≡ is available then the single tautology Φ ≡ Ψ can be used.|$|E
40|$|Both <b>propositional</b> {{dependence}} <b>logic</b> and inquisitive logic are expressively complete. As a consequence, every formula in {{the language}} of inquisitive logic with intuitionistic disjunction or intuitionistic implication can be translated equivalently into a formula {{in the language}} of <b>propositional</b> dependence <b>logic</b> without these two connectives. We show that although such a (noncompositional) translation exists, neither intuitionistic disjunction nor intuitionistic implication is uniformly definable in <b>propositional</b> dependence <b>logic.</b> </p...|$|R
40|$|In {{this paper}} we prove {{that three of}} the main <b>propositional</b> <b>logics</b> of {{dependence}} (including <b>propositional</b> dependence <b>logic</b> and inquisitive logic), none of which is structural, are structurally complete with respect to a class of substitutions under which the logics are closed. We obtain an analogous result with respect to stable substitutions, for the negative variants of some well-known intermediate logics, which are intermediate theories that are closely related to inquisitive logic...|$|R
40|$|A simple {{extension}} of the <b>propositional</b> temporal <b>logic</b> of linear time is proposed. The extension consists of strengthening the until operator by indexing it with the regular programs of <b>propositional</b> dynamic <b>logic.</b> It is shown that DLTL, the resulting logic, is expressively equivalent to the monadic second-order theory of !-sequences. In fact, a sublogic of DLTL which corresponds to <b>propositional</b> dynamic <b>logic</b> with a linear time semantics is already expressively complete. We show that DLTL has an exponential time decision procedure and admits a finitary axiomatization. We also point to a natural {{extension of}} the approach presented here to a distributed setting. 1 Introduction We present here a simple {{extension of the}} <b>propositional</b> temporal <b>logic</b> of linear time. The basic idea is to strengthen the until modality by indexing it with the regular programs of <b>propositional</b> dynamic <b>logic.</b> The resulting logic, called dynamic linear time temporal logic (DLTL), is easy to handle. It has the ful [...] ...|$|R
25|$|The Fermi paradox {{has been}} criticized as being based on an {{inappropriate}} use of <b>propositional</b> <b>logic.</b> According to a 1985 paper by Robert Freitas, when recast as a statement in modal logic, the paradox no longer exists, and carries no probative value.|$|E
25|$|A logical {{system is}} decidable {{if there is}} an {{effective}} method for determining whether arbitrary formulas are theorems of the logical system. For example, <b>propositional</b> <b>logic</b> is decidable, because the truth-table method can be used to determine whether an arbitrary propositional formula is logically valid.|$|E
25|$|Finding {{solutions}} to <b>propositional</b> <b>logic</b> formulas is an NP-complete problem. However, practical methods exist (e.g., DPLL algorithm, 1962; Chaff algorithm, 2001) {{that are very}} fast for many useful cases. Recent work has extended the SAT solver algorithms to work with propositions containing arithmetic expressions; these are the SMT solvers.|$|E
40|$|AbstractIn {{this paper}} a new proof {{procedure}} for some propositional and first-order normal modal logics is given. It combines a tableau-like approach and a resolution-like inference. Completeness and decidability for some <b>propositional</b> <b>logics</b> are proved. An extension for the first-order case is presented...|$|R
40|$|A {{so-called}} Program Scheme Technique (PST) is a self-contained, automata free {{technique for}} proving elementary decidability of program and polymodal <b>propositional</b> <b>logics.</b> A particular advantage of PST is its expressive power which {{is equal to}} the expressive power of Second Order Theory of Monadic Successors in Herbrand Models. This time it leads to decidability of CTL with double exponential upper time bound. Key words: full branching time <b>logic,</b> second order <b>propositional</b> dynamic <b>logic.</b> Submission for: International Conference on Temporal Logic (ICTL 2000). ...|$|R
40|$|AbstractLet p be {{a formula}} in {{deterministic}} <b>propositional</b> dynamic <b>logic.</b> A decision procedure for the satisfiability of p is given {{along with a}} construction of a finite model for every satisfiable p. The decision procedure runs in deterministic time 2 cn {{and the size of}} the model is bounded by n 2 · 4 n, where n is the length of p. Finally, a complete axiomatization for deterministic <b>propositional</b> dynamic <b>logic</b> is given, based on the Segerberg axoms for <b>propositional</b> dynamic <b>logic...</b>|$|R
