16|1|Public
2500|$|When {{the color}} depth of a truecolor image {{is reduced to}} an 8-bit palette (as in GIF), the {{resulting}} image data is typically much smaller. [...] Thus a truecolor PNG is typically larger than a color-reduced GIF, although PNG could store the color-reduced version as a <b>palettized</b> file of comparable size. [...] Conversely, some tools, when saving images as PNGs, automatically save them as truecolor, even if the original data use only 8-bit color, thus bloating the file unnecessarily. Both factors {{can lead to the}} misconception that PNG files are larger than equivalent GIF files.|$|E
50|$|The {{information}} in the buffer typically consists of color values for every pixel to be shown on the display. Color values are commonly stored in 1-bit binary (monochrome), 4-bit <b>palettized,</b> 8-bit <b>palettized,</b> 16-bit high color and 24-bit true color formats. An additional alpha channel is sometimes used to retain information about pixel transparency. The total amount of memory required for the framebuffer depends on {{the resolution of the}} output signal, and on the color depth or palette size.|$|E
5000|$|Resolution 640×480 (interpolated), 320×240 (actual) 60 Hz for NTSC version, and 768×576 (interpolated), 384×288 (actual) 50 Hz for PAL {{version with}} either 16-bit <b>palettized</b> color (from 24-bit) or 24-bit truecolor.|$|E
40|$|The paper {{describes}} {{a solution of}} the problem of <b>palettizing</b> parcels of mixed sizes. The IPA has developed a <b>palettizing</b> system for mixed sized parcels which will rise the rate of automation of distribution centers in mail order houses, post offices, railways and in the food industry. The system was presented at the Hannover Fair 1991 in April. The whole system consists of a small 6 -parcel-buffer in front of the industrial robot (gantry robot), a robot control unit and a PC serving a s cell controller and it can therefore substitute any manual <b>palettizing</b> station. Beside the hardware equipment the most important part to speak about is the fast on-line <b>palettizing</b> algorithm. We reach an average filling rate of about 74 % which is nearly the same as if done by hand...|$|R
5000|$|The BITFIELD {{mechanism}} {{described above}} {{allows for the}} definition {{of tens of thousands}} different pixel formats, however only several of them are used in practice, all <b>palettized</b> formats RGB8, RGB4, and RGB1 (marked in yellow in the table above, [...] MEDIASUBTYPE names) and: ...|$|E
50|$|Other major {{features}} include preemptive multitasking with finer granularity (DMA buffer, primitive, triangle, pixel, or instruction-level), reduced memory footprint, improved resource sharing, and improved timeout detection and recovery. 16-bit color surface formats (565, 5551, 4444) are mandatory in Windows 8, and Direct3D 11 Video supports YUV 4:4:4/4:2:2/4:2:0/4:1:1 video formats with 8, 10, and 16-bit precision, {{as well as}} 4 and 8-bit <b>palettized</b> formats.|$|E
50|$|QuickTime Graphics is a lossy video {{compression}} and decompression algorithm (codec) developed by Apple Inc. and first released {{as part of}} QuickTime 1.x in the early 1990s. The codec is also known by the name Apple Graphics and its FourCC SMC. The codec operates on 8-bit <b>palettized</b> RGB data. The bit-stream format of QuickTime Graphics has been reverse-engineered and a decoder has been implemented in the projects XAnim and libavcodec.|$|E
50|$|The codec was {{available}} in Microsoft NetShow Encoder, which was later renamed Windows Media Encoder, and made available via the SDK. The NetShow encoder allowed the user to select a 2 pass option, where in the first pass the video was analyzed to create a color palette, {{and in the second}} pass converted to the <b>palettized</b> color space and encoded. Before encoding, the video could be scaled. Later versions of Windows Media Encoder dropped support for Microsoft Video 1 and only supported Windows Media Video.|$|E
50|$|When {{the color}} depth of a truecolor image {{is reduced to}} an 8-bit palette (as in GIF), the {{resulting}} image data is typically much smaller. Thus a truecolor PNG is typically larger than a color-reduced GIF, although PNG could store the color-reduced version as a <b>palettized</b> file of comparable size. Conversely, some tools, when saving images as PNGs, automatically save them as truecolor, even if the original data use only 8-bit color, thus bloating the file unnecessarily. Both factors {{can lead to the}} misconception that PNG files are larger than equivalent GIF files.|$|E
50|$|The input {{video that}} the codec {{operates}} on {{is in an}} 8-bit <b>palettized</b> RGB colorspace. Compression is achieved by conditional replenishment and by reducing the palette from 256 colors to a per-4×4 block adaptive palette of 1-16 colors. Because Apple Video operates in the image domain without motion compensation, decoding is much faster than MPEG-style codecs which use motion compensation and perform coding in a transform domain. As a tradeoff, the compression performance of Apple Graphics is lower. The decoding complexity is approximately 50% that of the QuickTime Animation codec.|$|E
50|$|Nowadays, color {{quantization}} {{is mainly}} used in GIF and PNG images. GIF, {{for a long}} time the most popular lossless and animated bitmap format on the World Wide Web, only supports up to 256 colors, necessitating quantization for many images. Some early web browsers constrained images to use a specific palette known as the web colors, leading to severe degradation in quality compared to optimized palettes. PNG images support 24-bit color, but can often be made much smaller in filesize without much visual degradation by application of color quantization, since PNG files use fewer bits per pixel for <b>palettized</b> images.|$|E
50|$|QuickTime Animation format (also {{known as}} QuickTime RLE) is a video {{compression}} format and codec created by Apple Computer to enable playback of RGB video {{in real time}} without expensive hardware. It is generally found in the QuickTime container with the FourCC 'rle '. It can perform either lossless or lossy compression {{and is one of}} the few video codecs that supports an alpha channel. Supported color depths are 1-bit (monochrome), 15-bit RGB, 24-bit RGB, 32-bit ARGB, as well as <b>palettized</b> RGB. As a result of reverse-engineering of the format, a decoder is implemented in XAnim as well as an encoder and decoder in libavcodec.|$|E
50|$|Basic normal mapping can be {{implemented}} in any hardware that supports <b>palettized</b> textures. The first game console to have specialized normal mapping hardware was the Sega Dreamcast. However, Microsoft's Xbox was the first console to widely use the effect in retail games. Out of the sixth generation consoles, only the PlayStation 2's GPU lacks built-in normal mapping support, though it can be simulated using the PlayStation 2 hardware's vector units. Games for the Xbox 360 and the PlayStation 3 rely heavily on normal mapping and were the first generation {{to make use of}} parallax mapping. The Nintendo 3DS has been shown to support normal mapping, as demonstrated by Resident Evil Revelations and Metal Gear Solid: Snake Eater.|$|E
50|$|Microsoft Video 1 {{operates}} {{either in}} a 8-bit <b>palettized</b> color space or in a 15-bit RGB color space. Each frame is split into 4×4 pixel blocks. Each 4×4 pixel block can be coded {{in one of three}} modes: skip, 2-color or 8-color. In skip mode, the content from the previous frame is copied to the current frame in a conditional replenishment fashion. In 2-color mode, two colors per 4×4 block are transmitted, and 1 bit per pixel is used to select between the two colors. In 8-color mode, the same scheme applies with 2 colors per 2×2 block. This can be interpreted as a 2-color palette which is locally adapted on either a 4×4 block basis or a 2×2 block basis. Interpreted as vector quantization, vectors with components red, green, and blue are quantized using a forward adaptive codebook with two entries.|$|E
40|$|We {{propose a}} {{lossless}} compression technique {{specifically designed for}} <b>palettized</b> synthetic images. Predictive techniques do not work very well for these images, as a prediction "formula" based on some average of the values or palette indices of neighbors {{is not likely to}} be very meaningful. The proposed algorithm uses patterns of neighborhood pixels to predict and code each pixel. The prediction rules for different patterns are learned adaptively from the image itself. Using a large number of test images of the above kind (maps, clip-art, line drawings), the proposed method is found to reduce the size achieved by GIF compression by 50 %, and the size resulting from the previous best approach (CALIC with optimized palette reordering) by 20 %. 1. Introduction In this work, we propose a lossless image compression technique, targeted for compression of <b>palettized</b> synthetic images (a <b>palettized</b> color image consists of a color look-up table; the value of each pixel is stored as an index into [...] ...|$|E
40|$|The World Wide Web has rapidly {{become the}} hot new mass {{communications}} medium. Content creators are using similar design and layout styles as in printed magazines, i. e., with many color images and graphics. The information is transmitted over plain telephone lines, where the speed/ price trade-off is much more severe than {{in the case of}} printed media. The standard design approach is to use <b>palettized</b> color and to limit as much as possible the number of colors used, so that the images can be encoded with a small number of bits per pixel using the Graphics Interchange Format (GIF) file format. The World Wide Web standards contemplate a second data encoding method (JPEG) that allows color fidelity but usually performs poorly on text, which is a critical element of information communicated on this medium. We analyze the spatial compression of color images and describe a methodology for using the JPEG method in a way that allows a compact representation while preserving full color fidelity...|$|E

