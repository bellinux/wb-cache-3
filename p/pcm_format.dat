48|43|Public
25|$|Audio {{is stored}} on the disc in Linear <b>PCM</b> <b>format,</b> which is either {{uncompressed}} or losslessly compressed with MLP (Meridian Lossless Packing). The maximum permissible total bit rate is 9.6 Megabits per second. Channel/resolution combinations that would exceed this {{need to be}} compressed. In uncompressed modes, {{it is possible to}} get up to 96/16 or 48/24 in 5.1, and 192/24 in stereo. To store 5.1 tracks in 88.2/20, 88.2/24, 96/20 or 96/24 MLP encoding is mandatory.|$|E
50|$|A PCM adaptor is {{a device}} used for {{recording}} digital audio in the <b>PCM</b> <b>format,</b> {{which in turn}} connects to a video cassette recorder (acting as a transport) for storage and playback of the digital audio information.|$|E
50|$|In Mac OS X, these discs {{are easily}} {{accessed}} through iTunes and QuickTime (When a CDDA track is dragged to a folder {{other than the}} CD, QuickTime automatically converts it to AIFF, which is a lossless <b>PCM</b> <b>format).</b>|$|E
50|$|Note: <b>PCM</b> <b>formats</b> are encoded as signed data (as {{opposed to}} unsigned).|$|R
50|$|For users {{wanting to}} be able to re-encode audio into any format, and for digital audio editing, it is best to retain a master copy in a {{lossless}} format (such as FLAC, ALAC, TTA, WavPack, and others) that take around half the storage space needed when compared to original uncompressed <b>PCM</b> <b>formats</b> (such as WAV, and AIFF), as lossless formats usually have the added benefit of having meta data options, which are either completely missing or very limited in <b>PCM</b> <b>formats.</b> These lossless formats can be transcoded to <b>PCM</b> <b>formats</b> or transcoded directly from one lossless format to another lossless format, without any loss in quality. They can be transcoded into a lossy format, but these copies will then not be able to be transcoded into another format of any kind (PCM, lossless, or lossy) without a subsequent loss of quality.|$|R
5000|$|Supports {{almost any}} of fixed point <b>PCM</b> audio <b>formats</b> (Floating point formats are not supported) ...|$|R
50|$|A SoundFont bank {{contains}} base {{samples in}} <b>PCM</b> <b>format</b> (similar to WAV files) that are mapped to sections on a musical keyboard. A SoundFont bank also contains other music synthesis parameters such as loops, vibrato effect, and velocity-sensitive volume changing.|$|E
5000|$|Historically, {{when used}} with the {{appropriate}} gear, the circuit was used to emulate an analog standard definition circuit by sampling the analog data at 12-15 megasamples per second, carrying the samples in <b>PCM</b> <b>format.</b> This replaced dedicated coaxial cable circuits with managed digital circuits but that use became rare in the early 21st century, ...|$|E
50|$|The format was {{designed}} to be directly playable on the Amiga without additional processing: for example, samples are stored in 8-bit <b>PCM</b> <b>format</b> ready to be played on the Amiga DACs, and pattern data is not packed. Playback required very little CPU time on an Amiga, and many games used MOD files for their background music.|$|E
50|$|Sound Juicer is a GTK+-based {{graphical}} front-end to (or GUI for) the cdparanoia CD ripping library. It {{allows the}} user to extract audio from compact discs and convert it into audio files that a personal computer or digital audio player can play. It supports ripping to any audio codec supported by a GStreamer plugin, such as mp3 (via LAME), Ogg Vorbis, FLAC and uncompressed <b>PCM</b> <b>formats.</b> Versions after 2.12 implement CD playing capability.|$|R
40|$|User {{displays}} telemetric data in {{variety of}} formats. TDPlus {{system is a}} data-processing subsystem designed for use in testing pulse-code-modulation (PCM) telemetry equipment. Accommodates variety of <b>PCM</b> <b>formats.</b> Includes custom-built set of four circuit cards that plug into any personal computer compatible with Industry Standard Architecture (ISA) bus. Software written in 'C', very user-friendly, and enables anyone who has basic knowledge of telemetry to use system without instruction manual. Built for about tenth of cost of currently available commercial unit of similar capability...|$|R
40|$|ITC/USA 2006 Conference Proceedings / The Forty-Second Annual International Telemetering Conference and Technical Exhibition / October 23 - 26, 2006 / Town and Country Resort & Convention Center, San Diego, CaliforniaThe {{quantity}} {{and types of}} measurements and measurement instrumentation required for a test are growing. This paper describes a methodology to define and program multi-vendor instrumentation using abstraction models in a database that allows new instrumentation to be defined rapidly. This allows users to support multiple vendorsâ€™ systems while using a common user interface to define instrumentation networks, bus catalogs, measurements, pulse code modulated (<b>PCM)</b> <b>formats,</b> and data processing requirements...|$|R
50|$|Because of {{the nature}} of sigma-delta converters, one cannot make a direct {{comparison}} between DSD and PCM. An approximation is possible, though, and would place DSD in some aspects comparable to a <b>PCM</b> <b>format</b> that has a bit depth of 20 bits and a sampling frequency of 96 kHz. PCM sampled at 24 bits provides a (theoretical) additional 4 dB of dynamic range.|$|E
50|$|Audio {{is stored}} on the disc in Linear <b>PCM</b> <b>format,</b> which is either {{uncompressed}} or losslessly compressed with MLP (Meridian Lossless Packing). The maximum permissible total bit rate is 9.6 Megabits per second. Channel/resolution combinations that would exceed this {{need to be}} compressed. In uncompressed modes, {{it is possible to}} get up to 96/16 or 48/24 in 5.1, and 192/24 in stereo. To store 5.1 tracks in 88.2/20, 88.2/24, 96/20 or 96/24 MLP encoding is mandatory.|$|E
5000|$|The {{majority}} of Telarc International Corporation's releases are on (generally hybrid) SACD, and are DSD recordings. Telarc often works with early audiophile company Soundstream, and has re-released {{many of its}} original Soundstream recordings in SACD format. [...] Soundstream, which made the first ever digital recording, recorded in 16 bit PCM at a sample rate of 50 kHz via its own proprietary digital recorder. This 50 kHz <b>PCM</b> <b>format</b> was converted to DSD for release on Telarc SACD.|$|E
50|$|Together {{they include}} {{over a dozen}} {{different}} <b>PCM</b> and ADPCM <b>formats.</b>|$|R
30|$|All speech {{recordings}} were downsampled to 16 -kHz 16 -bit <b>PCM</b> mono <b>format</b> {{for training}} and testing. The whole acoustic database was manually annotated by our team of trained annotators using the Transcriber tool [12], double checked, and corrected.|$|R
50|$|Many {{audio file}} formats and digital audio {{workstations}} (DAWs) now support <b>PCM</b> <b>formats</b> with samples represented by floating point numbers. Both the WAV file format and the AIFF file format support floating point representations. Unlike integers, whose bit pattern {{is a single}} series of bits, a floating point number is instead composed of separate fields whose mathematical relation forms a number. The most common standard is IEEE floating point which is composed of three bit patterns: a sign bit which represents whether the number is positive or negative, an exponent and a mantissa which is raised by the exponent. The mantissa is expressed as a binary fraction in IEEE base-two floating point formats.|$|R
50|$|The general {{functionality}} of OpenAL is {{encoded in}} source objects, audio buffers {{and a single}} listener. A source object contains a pointer to a buffer, the velocity, position {{and direction of the}} sound, and the intensity of the sound. The listener object contains the velocity, position and direction of the listener, and the general gain applied to all sound. Buffers contain audio data in <b>PCM</b> <b>format,</b> either 8- or 16-bit, in either monaural or stereo format. The rendering engine performs all necessary calculations as far as distance attenuation, Doppler effect, etc.|$|E
50|$|Another {{format for}} DSD editing is Digital eXtreme Definition (DXD), a <b>PCM</b> <b>format</b> with 24-bit {{resolution}} sampled at 352.8 kHz (or alternatively 384 kHz). DXD was initially {{developed for the}} Merging Pyramix workstation and introduced together with their Sphynx 2, AD/DA converter in 2004. This combination meant {{that it was possible}} to record and edit directly in DXD, and that the sample only converts to DSD once before publishing to SACD. This offers an advantage to the user as the noise created by converting DSD raises dramatically above 20 kHz, and more noise is added each time a signal is converted back to DSD during editing.|$|E
50|$|SONET and SDH, {{which are}} {{essentially}} the same, were {{originally designed to}} transport circuit mode communications (e.g., DS1, DS3) {{from a variety of}} different sources, but they were primarily designed to support real-time, uncompressed, circuit-switched voice encoded in <b>PCM</b> <b>format.</b> The primary difficulty in doing this prior to SONET/SDH was that the synchronization sources of these various circuits were different. This meant that each circuit was actually operating at a slightly different rate and with different phase. SONET/SDH allowed for the simultaneous transport of many different circuits of differing origin within a single framing protocol. SONET/SDH is not a communications protocol in itself, but a transport protocol.|$|E
5000|$|Decode {{sound in}} MP2, <b>PCM</b> or AC-3 <b>format</b> and output (with {{optional}} AC-3 to stereo downmixing) on stereo connector, optical or electric digital connector ...|$|R
40|$|ITC/USA 2011 Conference Proceedings / The Forty-Seventh Annual International Telemetering Conference and Technical Exhibition / October 24 - 27, 2011 / Bally's Las Vegas, Las Vegas, NevadaPreviously, we have {{presented}} {{an approach to}} achieving standards-based multi-vendor hardware configuration using the Instrumentation Hardware Abstraction Language (IHAL) and an associated Application Programming Interface (API) specification. In this paper, we extend this approach to include support for configuring <b>PCM</b> <b>formats.</b> This capability is an appropriate fit for IHAL since changes to hardware settings can affect the current telemetry format and vice versa. We describe extensions made to the IHAL API {{in order to support}} this capability. Additionally, we show how complete instrumentation configurations can be described using an integrated IHAL and TMATS XML. Finally, we describe a demonstration of this capability implemented for data acquisition hardware produced by L- 3 Telemetry East...|$|R
5000|$|Fundamental {{distortion}} {{mechanisms are}} present in the conventional implementation of DSD. These distortion mechanisms can be alleviated to some degree by using digital converters with a multi-bit design. Historically, state-of-the-art ADCs were based around sigma-delta modulation designs. Oversampling converters are frequently used in linear <b>PCM</b> <b>formats,</b> where the ADC output is subject to bandlimiting and dithering. Many modern converters use oversampling and a multi-bit design. It has been suggested that bitstream digital audio techniques are theoretically inferior to multi-bit (PCM) approaches: J. Robert Stuart notes, [...] "1-bit coding would be a totally unsuitable choice for a series of recordings that set out to identify the high-frequency content of musical instruments, despite claims for its apparent wide bandwidth. If it is unsuitable for recording analysis then we should also be wary of using it for the highest quality work." ...|$|R
50|$|The Enhanced Full Rate (GSM 06.60) {{technical}} specification describes the detailed mapping between input blocks of 160 speech samples in 13-bit uniform <b>PCM</b> <b>format</b> to encoded blocks of 244 bits and from encoded blocks of 244 bits to output blocks of 160 reconstructed speech samples. It also specifies the conversion between A-law or Î¼-law (PCS 1900) 8-bit PCM and 13-bit uniform PCM. This part of specification also describes the codec {{down to the}} bit level, thus enabling the verification of compliance to the part to {{a high degree of}} confidence by use of a set of digital test sequences. These test sequences are described in GSM 06.54 and are available on disks.|$|E
50|$|The first {{consumer}}-oriented <b>PCM</b> <b>format</b> used consumer {{video tape}} formats (Beta and VHS) as the storage medium. These systems used the EIAJ digital format, which sampled at 44.056 kHz at 14 bits. The Sony PCM-F1 system debuted in 1981, and Sony {{from the start}} offered the option of 16-bit wordlength. Other systems were marketed by Akai, JVC, Nakamichi and others. Panasonic, via its Technics division, briefly sold a digital recorder that combined an EIAJ digital adapter with a VHS video transport, the SV-P100. These machines were marketed by consumer electronics companies to consumers, but they were very pricey compared to cassette or even reel-to-reel decks of the time. They did catch on with the more budget conscious professional recordists, and some boutique-label professional releases were recorded using these machines.|$|E
50|$|The Super Audio CD (SACD) format {{was created}} by Sony and Philips, who were also the {{developers}} of the earlier standard audio CD format. SACD uses Direct Stream Digital (DSD), which works quite differently from the <b>PCM</b> <b>format</b> discussed in this article. Instead of using {{a greater number of}} bits and attempting to record a signal's precise amplitude for every sample cycle, a DSD recorder uses a technique called sigma-delta modulation. Using this technique, the audio data is stored as a sequence of fixed amplitude (i.e. 1- bit) values at a sample rate of 2.884 MHz, which is 64 times the 44.1 kHz sample rate used by CD. At any point in time, the amplitude of the original analog signal is represented by the relative preponderance of 1's over 0's in the data stream. This digital data stream can therefore be converted to analog by the simple expedient of passing it through a relatively benign analog low-pass filter. The competing DVD-Audio format uses standard, linear PCM at variable sampling rates and bit depths, which at the very least match and usually greatly surpass those of a standard CD Audio (16 bits, 44.1 kHz).|$|E
50|$|On August 28, 2013, the Acoustic Sounds label {{launched}} SuperHiRez.com, {{which sells}} mainstream albums from major record labels that were produced with Direct Stream Digital or <b>PCM</b> audio <b>formats.</b> On September 4, 2013, Acoustic Sounds announced {{an agreement with}} Sony Music Entertainment to provide the company's new digital download service with albums that have been produced or remastered in Direct Stream Digital format.|$|R
5000|$|... iTunes Match debuted on November 14, 2011. It was {{initially}} available to US users only. For an annual fee, customers can scan and match {{tracks in the}}ir iTunes music library, including tracks copied from CDs or other sources, with tracks in the iTunes Store, so customers {{do not have to}} repurchase said tracks. Customers may download up to 100,000 tracks in 256 kbit/s DRM-free AAC file format that match tracks in any supported audio file formats in customers' iTunes libraries, including ALAC and MP3. Customers also have the choice to keep their original copies stored on their computers or have them replaced by copies from the iTunes Store. Any music not available in the iTunes Store is uploaded for download onto customers' other supported devices and computers; doing this will not take storage from the customers' iCloud's storage allowance. Any such tracks stored in the higher quality lossless audio ALAC, or original uncompressed <b>PCM</b> <b>formats,</b> WAV and AIFF, are transcoded to 256 kbit/s DRM-free AAC format before uploading to the customers' iCloud storage account, leaving the original higher quality local files in their original format.|$|R
40|$|International Telemetering Conference Proceedings / October 14 - 16, 1975 / Sheraton Inn, Silver Spring, MarylandThe {{bit error}} rate (BER) of the tape {{recorder}} is a primary factor in determining the overall accuracy of a space to ground PCM data link. The {{ultimate goal is to}} obtain a recorder BER signature that is dependent solely on tape quality; however, in practice, the BER may be several orders of magnitude worse than the goal. Usually this occurs when the data transfer rate is not preserved during dropout intervals - intervals where the net signal-to-noise ratio is insufficient to guarantee valid data cell boundary detection. This paper investigates tape dropout signatures and addresses the problem of maintaining time coherency between reproduced data and clock assurance throughout the dropout interval. A digital approach is presented that utilizes a dual threshold detector in conjunction with a clock recovery generator. The generator is synchronized to the tape signal by a clock, N-times the data transfer rate, coherent with the transport servo reference. Implementation of the approach is discussed for two popular <b>PCM</b> <b>formats.</b> The effectiveness of the approach as a function of cell boundary detection, system signal-to-noise ratio, and transport time base error (TBE) is considered...|$|R
5000|$|The soundtrack for Lunar: Eternal Blue was {{composed}} by Noriyuki Iwadare, {{who had previously}} co-produced the music for Lunar: The Silver Star. The game utilizes studio-quality Red Book audio {{for one of the}} two vocal songs. (Both are CD tracks in the US version.) Every other piece of music was encoded into 16 kHz PCM files. Dialogue and certain ambient effects also used the <b>PCM</b> <b>format.</b> Most sound effects were generated through the Sega Genesis sound processor. [...] Along with music director Isao Mizoguchi, Iwadare's goal was to produce music that contained [...] "a high degree of originality" [...] when compared to both the previous game and role-playing games in general. [...] While the original game's music represented a number of styles and genres, Iwadare purposefully narrowed his range of composition to give the songs a unified feel. The English version contains an original title not found in the Japanese release, named the [...] "Star Dragon Theme". It was used as the BGM for the Star Tower dungeon. [...] The game's ending theme, [...] "Eternal Blue ~Thoughts of Eternity~" [...] (ETERNAL BLUE) performed by Chisa Yokoyama, is one of Iwadare's favorite compositions. An official soundtrack featuring selected tracks from the game was released in Japan on February 22, 1995 by Toshiba-EMI Records.|$|E
5000|$|Once we {{know the}} {{decoding}} coefficients we can start decoding the stream: static int32_t* past_samples; // Previously decoded samples from each channel, zeroed at start (size = 2*channel_count) static uint_fast32_t sample_index = 0; // sample_index is the index of sample set {{that needs to be}} decoded next static ADX_header* adx_header; [...] // buffer is where the decoded samples will be put // samples_needed states how many sample sets (one sample from every channel) need to be decoded to fill the buffer // looping_enabled is a boolean flag to control use of the built-in loop // Returns the number of sample sets in the buffer that could not be filled (EOS) unsigned decode_adx_standard( [...] int16_t* buffer, unsigned samples_needed, bool looping_enabled [...] ) { unsigned const samples_per_block = (adx_header->block_size - 2) * 8 / adx_header->sample_bitdepth; int16_t scaleadx_header->channel_count [...] if (looping_enabled && !adx_header->loop_enabled) looping_enabled = false; [...] // Loop until the requested number of samples are decoded, or the end of file is reached while (samples_needed > 0 && sample_index < adx_header->total_samples) { // Calculate the number of samples that are left to be decoded in the current block unsigned sample_offset = sample_index % samples_per_block; unsigned samples_can_get = samples_per_block - sample_offset; // Clamp the samples we can get during this run if they wont fit in the buffer if (samples_can_get > samples_needed) samples_can_get = samples_needed; [...] // Clamp the number of samples to be acquired if the stream isnt long enough or the loop trigger is nearby if (looping_enabled && sample_index + samples_can_get > adx_header->loop_end_index) samples_can_get = adx_header->loop_end_index - sample_index; else if (sample_index + samples_can_get > adx_header->total_samples) samples_can_get = adx_header->total_samples - sample_index; [...] // Calculate the bit address of the start of the frame that sample_index resides in and record that location unsigned long started_at = (adx_header->copyright_offset + 4 + \ sample_index / samples_per_block * adx_header->block_size * adx_header->channel_count) * 8; [...] // Read the scale values from the start of each block in this frame for (unsigned i = 0 i < adx_header->channel_count ++i) { bitstream_seek( [...] started_at + adx_header->block_size * i * 8 [...] ); scalei = ntohs( [...] bitstream_read( [...] 16 [...] ) [...] ); } [...] // Pre-calculate the stop value for sample_offset unsigned sample_endoffset = sample_offset + samples_can_get; [...] // Save the bitstream address of the first sample immediately after the scale in the first block of the frame started_at += 16; while ( [...] sample_offset < sample_endoffset [...] ) { for (unsigned i = 0 i < adx_header->channel_count ++i) { // Predict the next sample double sample_prediction = coefficient0 * past_samples+ 0 + coefficient1 * past_samples+ 1; [...] // Seek to the sample offset, read and sign extend it to a 32bit integer // Implementing sign extension is left as an exercise for the reader // The sign extension will also need to include a endian adjustment if there are more than 8 bits bitstream_seek( [...] started_at + adx_header->sample_bitdepth * sample_offset + \ adx_header->block_size * 8 * i [...] ); int_fast32_t sample_error = bitstream_read( [...] adx_header->sample_bitdepth [...] ); sample_error = sign_extend( [...] sample_error, adx_header->sample_bitdepth [...] ); [...] // Scale the error correction value sample_error *= scalei; [...] // Calculate the sample by combining the prediction with the error correction int_fast32_t sample = sample_error + (int_fast32_t)sample_prediction; [...] // Update the past samples with the newer sample past_samples+ 1 = past_samples+ 0; past_samples+ 0 = sample; [...] // Clamp the decoded sample to the valid range for a 16bit integer if (sample > 32767) sample = 32767; else if (sample < -32768) sample = -32768; [...] // Save the sample to the buffer then advance one place *buffer++ = sample; } ++sample_offset; // Weve decoded one sample from every block, advance block offset by 1 ++sample_index; // This also means were one sample further into the stream --samples_needed; // And so there is one less set of samples that need to be decoded } [...] // Check if we hit the loop end marker, if we did we need to jump to the loop start if (looping_enabled && sample_index == adx_header->loop_end_index) sample_index = adx_header->loop_start_index; } [...] return samples_needed; }Most of the above code should be straightforward enough for anyone versed in C. The [...] pointer refers to the data extracted from the header as outlined earlier, it is assumed to have already been converted to the host Endian. This implementation is not intended to be optimal and the external concerns have been ignored such as the specific method for sign extension and the method of acquiring a bitstream from a file or network source. Once it completes, there will be samples_needed sets (if stereo, there will be pairs for example) of samples in the output buffer. The decoded samples will be in host-endian standard interleaved <b>PCM</b> <b>format,</b> i.e. left 16bit, right 16bit, left, right, etc. Finally, if looping is not enabled, or not supported, then the function will return the number of sample spaces that were not used in the buffer. The caller can test if this value is not zero to detect the end of the stream and drop or write silence into the unused spaces if necessary.|$|E
40|$|This paper {{summarizes}} the problems, {{definitions and requirements}} that are important {{for the evaluation of}} onset tracking systems for audio signals in <b>PCM</b> <b>format.</b> Different procedures and metrics for evaluation and parametrization are presented and commented. Overall, a complete methodology for the evaluation of automatic onset detection systems is proposed...|$|E
40|$|ITC/USA 2006 Conference Proceedings / The Forty-Second Annual International Telemetering Conference and Technical Exhibition / October 23 - 26, 2006 / Town and Country Resort & Convention Center, San Diego, CaliforniaWe {{describe}} {{the design and}} development of a baseband telemetry system for multistage launch vehicles. The system is organized as a three tier one with remote data acquisition and processing units and a centralized control unit. The front-end Data Acquisition Units (DAUs) feature software programmable amplification, offset, filtering and sensor excitation and thus are flexible to interface directly {{to a variety of}} sensors used in launch vehicles. The Data Processing Units (DPUs) gather data from DAUs through a serial link compatible to RS- 485 standards and carry out a variety of data analysis and data compression functions on selected channels under software control. The central Telemetry Control Unit (TCU) receives this data through a transformer isolated link compatible to MIL- 1553 B standards and performs the functions of data delay, data storage, onboard computer data monitoring, <b>PCM</b> <b>formatting</b> and pre-modulation signal conditioning to achieve miniaturization. The configuration and features of this telemetry system make its integration simple without compromising on data integrity and reliability and suit the adoption of futuristic technologies and concepts such as smart sensor networks, adaptability, reconfiguration and vehicle health management...|$|R
5000|$|... "Party Girl" [...] was {{performed}} both nights, on 9 May with Bono and a fan, {{and the second}} night with the full band and the same fan. However, neither was included on the DVD. A brief clip of the band rehearsing the song at the 10 May soundcheck {{can be seen on}} the documentary found on the second disc. All other songs performed between the two nights were included on the DVD, in the correct order. Audio was recorded for playback in the Dolby Digital 5.1, DTS 5.1, and <b>PCM</b> Stereo <b>formats.</b>|$|R
30|$|The ASR {{system we}} have used was {{originally}} proposed for processing Czech, a highly inflective Slavic language [12],[32], so it supports large vocabularies (it can operate with 500, 000 vocabulary items in the on-line mode). The inputs are converted via the FFmpeg codec to the standard 16 kHz pulse-code modulation (<b>PCM)</b> wave <b>format</b> (16 bits per sample), this way the system supports most audio (and video) input formats. The parametrization uses standard 39 -MFCC vectors computed on 20 ms frames with 10 ms overlap, and the feature vector is processed with the cepstral mean subtraction (CMS) normalization.|$|R
