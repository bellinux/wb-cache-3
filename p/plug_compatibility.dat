4|5|Public
50|$|In general, 60x where x is any numeric {{other than}} 0 or 5 {{indicates}} a non-standard <b>plug.</b> <b>Compatibility</b> and designs vary from maker to maker.|$|E
40|$|A {{composition}} language {{based on}} a formal semantic foundation will facilitate precise specification of glue abstractions and compositions, and will support reasoning about their behaviour. The semantic foundation, however, must address a set of requirements like encapsulation, objects as processes, components as abstractions, <b>plug</b> <b>compatibility,</b> a formal object model, and scalability. In this work, we propose the #L-calculus, {{an extension of the}} #-calculus, as a formal foundation for software composition, define a language in terms of it, and illustrate how this language can be used to plug components together. 1. 1 Introduction One of the key challenges for programming language designers today is to provide the tools that will allow software engineers to develop robust, flexible, distributed applications from plug-compatible software components [NM 95]. Current object-oriented programming languages typically provide an ad hoc collection of mechanisms for constructing and composing obje [...] ...|$|E
40|$|The aim of {{this paper}} is to propose a general {{interface}} for coupling general circulation models (GCMs) to land surface schemes (LSS) in order to achieve a <b>plug</b> <b>compatibility</b> between these complex models. As surface parameterizations include more processes, they have moved from being subroutines of GCMs to independent schemes which can also be applied for other purposes. This evolution has raised the problem within climate modeling groups of coupling these schemes to GCMs in a simple and flexible way. As LSS reaches a larger independence, a general interface is needed to enable exchange within the community. This paper discusses the tasks LSS have to fulfill when coupled to a GCM after a review of the current state of the art and the likely future evolutions of both components. The numerical schemes used for the processes which couple the land surfaces to the atmosphere are reviewed to ensure that the interface can be applied to all LSS and GCMs after only minor changes...|$|E
50|$|These subpixel layouts are {{specifically}} designed to operate with proprietary algorithms for subpixel rendering embedded in the display driver, allowing <b>plug</b> and play <b>compatibility</b> with conventional RGB (Red-Green-Blue) stripe panels.|$|R
50|$|A USB 3.0 Standard-B {{receptacle}} accepts {{either a}} USB 3.0 Standard-B plug or a USB 2.0 Standard-B <b>plug.</b> Backward <b>compatibility</b> applies to connecting a USB 2.0 Standard-B plug into a USB 3.0 Standard-B receptacle. However, {{it is not}} possible to plug a USB 3.0 Standard-B plug into a USB 2.0 Standard-B receptacle, due to a physically larger connector. The Standard-B is used at the device side.|$|R
50|$|Denmark (CEE 7/17 and Danish {{standard}} 107-2-D1 {{are widely}} used, they accept CEE 7/7 <b>plugs</b> but without <b>compatibility</b> for earth connections. CEE 7/5 and CEE 7/3 sockets with child-proof shutters {{have been allowed}} since 2008/2011, but people are not using them yet).|$|R
40|$|Interoperability is {{the ability}} of two or more {{software}} components to cooperate despite differences in language, interface, and execution platform. It is a scalable form of reusability, being concerned with the reuse of server resources by clients whose accessing mechanisms may be plug-incompatible with sockets of the server. <b>Plug</b> <b>compatibility</b> arises most literally with electrical appliances that require both static compatibility of shape and dynamic compatibility of voltage and frequency. If there is no direct match, interoperability of electrical appliances can be achieved by adapters and transformers. The client-server software paradigm is a plug and socket paradigm with static compatibility specified by types and dynamic compatibility by protocols. As with electrical appliances, incompatibility of software plugs and sockets can be mediated by adapters. Static compatibility between calling and called procedures in strongly typed languages can be determined by type checking. Type compatibility guarantees that the plug of the caller fits the socket of the server but not that the service provided is that expected by the caller. But some of the most powerful systems of interoperation, like UNIX pipes an...|$|E
50|$|Due to its {{proximity}} to mainland China, electrical products from there are present in Hong Kong, especially those {{as a result of}} cross-boarder purchase carried out by mainland Chinese immigrants. Nevertheless, even if the product meets the safety requirements in China, they are not necessarily confirmed to BS 1363 standard, thus may have <b>plug</b> and socket <b>compatibility</b> issues when using them in Hong Kong.|$|R
50|$|In Serato DJ, Serato {{developed}} a software to combine their two products, Scratch Live and ITCH, {{into a single}} product. Serato DJ can be controlled by both timecode vinyl and controllers, allowing more flexibility for DJs. Unveiled in 2012 with {{the launch of the}} Pioneer DDJ SX, Serato DJ later added future DVS and Controller support with a native <b>plug</b> and play <b>compatibility</b> with leading hardware.|$|R

