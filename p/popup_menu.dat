21|18|Public
5000|$|Beginning with Mac OS X 10.7 Lion, Preview {{restricts the}} Format option <b>popup</b> <b>menu</b> in the Save As dialog to {{commonly}} used types. It {{is possible to}} access the full format list by holding down the Option key when clicking the Format <b>popup</b> <b>menu.</b> (GIF, ICNS, JPEG, JPEG-2000, Microsoft BMP, Microsoft Icon, OpenEXR, PDF, Photoshop, PNG, SGI, TGA, TIFF) ...|$|E
5000|$|Future Wars {{is played}} by left-clicking for {{character}} movement, and right-clicking for character actions. The actions available in the right-click <b>popup</b> <b>menu</b> are: Operate, Examine, Take, Use and Inventory. [...] "Use" [...] had a subcategory which enabled the player to drag and select the items in their inventory.|$|E
50|$|XTND was a {{document}} import/export system developed by Claris {{for their products}} on the Apple Macintosh. Products supporting XTND placed an additional <b>popup</b> <b>menu</b> in the open and save dialogs, allowing users {{to read and write}} documents from any supported format. The name is a four-letter contraction of extend, the Mac using four-letter identifiers in its system resource files.|$|E
5000|$|Blu-ray Disc {{classes in}} the package tree : the DAVIC and DVB classes depend upon to {{recognize}} additional events peculiar to the BD-J platform such as <b>popup</b> <b>menus</b> and to locate media on the Blu-ray disc.|$|R
40|$|Window Toolkit (AWT). This {{has been}} {{implemented}} elsewhere on several platforms [...] for example Windows, Motif and the Macintosh. It does, however, {{rely on the}} availability of a heavyweight underlying window system. This is expected to provide facilities such as <b>popup</b> <b>menus,</b> buttons, scroll-bars etc. Providing a complete AWT implementation over the lightweight Nemesis `client renders' system would therefore involve a large amount of work and would be impracticable...|$|R
40|$|Reported here is {{a general}} Graphical User Interface (GUI) for {{automatic}} reliability modeling of Processor Memory Switch (PMS) structures using a Markov model. This GUI {{is based on a}} hierarchy of windows. One window has graphical editing capabilities for specifying the system's communication structure, hierarchy, reconfiguration capabilities, and requirements. Other windows have field texts, <b>popup</b> <b>menus,</b> and buttons for specifying parameters and selecting actions. An example application of the GUI is given...|$|R
50|$|The {{system menu}} (also called the window menu or control menu) is a <b>popup</b> <b>menu</b> in Microsoft Windows, {{accessible}} by left-clicking on the upper-left icon of most windows, or by pressing the Alt and Space keys. This menu provides the user {{with the ability}} to perform some common tasks on the window, some in atypical ways. For example, normally a user would move a window by dragging the title bar of the window - but with the option in the system menu the user gets a different cursor and procedure to move the window with.|$|E
50|$|Somewhat {{like the}} system trays of other {{operating}} systems, the Control Strip allowed {{easy access to}} status information about and control of simple tasks such as screen resolution, AppleTalk activity, battery status etc. Each task appears as a button-like <b>popup</b> <b>menu</b> called a module, these modules are managed in the Finder as individual module files, which have their own folder in the System Folder ("Control Strip Modules") and are executed alongside the Control Strip as it starts up or can be dragged directly onto the strip while it is running.|$|E
50|$|Pie menus are {{faster and}} more {{reliable}} to select from than linear menus, because selection depends on direction instead of distance. The circular menu slices are large in size and near the pointer for fast interaction (see Fitts's law). Experienced users use muscle memory without looking at the menu while selecting from it. Nested pie menus can efficiently offer many options, and some pie menus can pop up linear menus, and combine linear and radial items in the same menu. Pie menus just like any <b>popup</b> <b>menu</b> are shown only when requested, resulting in less visual distraction and cognitive load than toolbars and menu bars that are always shown.|$|E
40|$|VEGAS {{computer}} program enables application programmers to create X-Y plots in various modes through high-level subroutine calls. Modes consist of passive, autoupdate, and interactive modes. In passive mode, VEGAS takes input data, produces plot, and returns control to application program. In autoupdate mode, forms plots and automatically updates them as more information received. In interactive mode, displays plot and provides <b>popup</b> <b>menus</b> for user to alter appearance of plot or to modify data. Written in FORTRAN 77...|$|R
50|$|In 2012, BTRC {{published}} {{its first}} major revamp of the EABA rules as EABA v2. In addition to significant revamping of the combat turn system, this version {{made use of}} many of the built-in features of the Adobe PDF format, and was streamlined for use on tablet or latptop computers. Players have access to automated character sheets, dice rollers, <b>popup</b> <b>menus</b> and on-screen mapping, embedded directly into the PDF file. It is compatible with any computer or device that can read this file type, including smart phones and tablets. The file can also be printed and read like any ordinary rulebook.|$|R
5000|$|Gray, {{white and}} blue are the three {{principal}} colors which define the Aqua style. Window toolbars, window backgrounds, buttons, menus and other interface elements are all found in either of these colors. For instance, toolbars and sidebars are often grey or metal-colored, window backgrounds and <b>popup</b> <b>menus</b> are white and buttons (in older systems also scrollbar handles) are accented with a bright blue. In versions of OS X prior to OS X Yosemite, most controls have a [...] "glass" [...] or [...] "gel" [...] effect applied to them. David Pogue described this effect as [...] "lickable globs of Crest Berrylicious Toothpaste Gel".|$|R
50|$|Modules {{are what}} make LiteStep look and behave {{the way you}} want it to. There are {{graphical}} modules that are used to build GUI elements and non-graphical modules used to create hotkeys, watch window classes for scripted events, and create LiteStep-specific commands called !bang commands. !bang commands are a way to execute event-driven functions within a given theme. These commands can reference files, folders, namespaces, executables, or elements of the theme itself. Many !bang commands are hardcoded into the LiteStep core, and others may be provided through user scripts or through the currently loaded modules. Bangs are the primary way you control the modules. !bangs can be triggered through a hotkey, <b>popup</b> <b>menu,</b> shortcut, or through module-specific events.|$|E
50|$|The Moxi DVR {{features}} a user interface called the Moxi Menu. The Moxi Menu is presented fully in HD. It has a horizontal band {{that makes up}} the top level of menu choices. As users select a category on the horizontal band, choices within that category expand in a vertical list. When the user selects an item such as a channel {{or a piece of}} media, a <b>popup</b> <b>menu</b> gives them choices for that media, such as watch or record. The available choices vary {{depending on the type of}} item that is being accessed. If the user holds down an arrow button on the remote while navigating the menu, the menu scrolls by more quickly. A TV window in the upper right corner continues playing content while the menu is accessed.|$|E
5000|$|Values are {{assigned}} to variable names by entering in the GUI text input/result field a variable name followed by 0 or more spaces, followed by the = character, followed by 0 or more spaces, followed by either a numeric value or an existing variable name, e.g. [...] "x = 2" [...] or [...] "result = subtotal" [...] (if subtotal was already assigned a numeric value). A numeric value is assigned to the first variable name. If the value was entered as an existing variable name {{rather than as a}} numeric value, the existing variable's value is assigned to the first variable name. Assignment to a variable name that does not exist creates the new variable by name with the assigned value. The &rarr;R (assign variable) GUI button shows a <b>popup</b> <b>menu</b> of existing variables (and the current value of each), to which selected variable is assigned the current numeric value displayed in the calculator, just as if that variable name were entered in the GUI text field followed by a = followed by the numeric value.|$|E
5000|$|MacWeb {{pioneered the}} [...] "click and hold" [...] gesture {{to display a}} <b>popup</b> contextual <b>menu.</b> This mouse gesture was {{commonly}} used on the Macintosh before the prevalence of two-button mice on the Mac platform. MacWeb's preferences dialog allowed users to customize display styles on a per-tag basis similar to Cascading style sheets ...|$|R
40|$|Natural {{language}} interfaces to databases (NLIDB) {{facilitate the}} user to state query to database in natural language. NLIDB then interprets the natural language query into Structured Query Language (SQL) to perform action on target database. Menubased NLIDB provides restricted set of elements on screen that are utilized to build natural language query. The latest menubased NLIDB’s use WYSIWYM interfaces that focus on automatic formation of <b>popup</b> <b>menus</b> relevant to typed word on editor. The automatic functionality has made the NLIDB more complex with heavy resource requirement to load and execute multiple processes simultaneously. This paper proposes an optimization approach to efficiently use system memory by menu-based NLIDB. It suggests the order of loading and unloading processes in memory at right time. Finally, proposed approach is evaluated on a real dataset. The application following this approach runs efficiently even on low resources system...|$|R
50|$|Teashark is a {{discontinued}} mobile {{web browser}} for Java MIDP 2.0. It is a browsing client that works {{in cooperation with}} the Teashark servers, which transcode (and partly pre-renders) websites and then sends the results to the mobile device, like Opera Mini. Such 'transcoding' is not necessarily faster (as this is extra overhead) than 'direct' browsing like most phones built-in browsers or Opera Mobile does, particularly when Wi-Fi, UMTS or HSDPA is used as data transfer medium. It supports Javascript, as long as no interactive actions are used like <b>popup</b> <b>menus</b> or timed events. It features a preview based history, tabbed browsing (up to 3-4 pages open at a time), a list of all visited pages like desktop browsers and a nice bookmarking capability. Moreover, it uses an AppleWebkit / Linux user agent which allows viewing full web sites rather than limited mobile sites what other mobile browsers do.|$|R
5000|$|The Start menu {{received}} its first major overhaul on XP, {{switching to a}} two-column layout {{with the ability to}} list, pin, and display frequently used applications, recently opened documents, and the traditional cascading [...] "All Programs" [...] menu. The taskbar can now group windows opened by a single application into one taskbar button, with a <b>popup</b> <b>menu</b> listing the individual windows. The notification area also hides [...] "inactive" [...] icons by default. The taskbar can also be [...] "locked" [...] to prevent accidental moving or other changes. A [...] "common tasks" [...] list was added, and Windows Explorer's sidebar was updated to use a new task-based design with lists of common actions; the tasks displayed are contextually relevant to the type of content in a folder (i.e. a folder with music displays offers to play all the files in the folder, or burn them to a CD).Fast user switching allows additional users to log into a Windows XP machine without existing users having to close their programs and logging out. Although only one user at the time can use the console (i.e. monitor, keyboard and mouse), previous users can resume their session once they regained control of the console.|$|E
40|$|We {{describe}} a navigation tool for a collaborative Web space (CoWeb) containing meta information on aggregated interaction history. We represent the history information by annotating links inside the CoWeb. The navigation tool presents all links {{on a page}} together with their meta information in a <b>popup</b> <b>menu.</b> A sonification gives an auditory overview {{of the distribution of}} history information. The <b>popup</b> <b>menu</b> itself uses both conventional link markers as well as sound to communicate the meta information to the user. Keywords Social Navigation, History Enriched Environments, Sonificatio...|$|E
40|$|KeyMenu is a {{keyboard}} based hierarchical menu system {{intended for use}} on a wearable computer. It is designed for use {{in conjunction with the}} Twiddler one [...] handed wearable keyboard. Unlike traditional menus and shortcut keys, our system employs a one [...] to [...] one mapping between buttons on the keyboard and menu items. With the addition of a <b>popup</b> <b>menu</b> interaction technique, the KeyMenu design consistently supports both novice and expert users...|$|E
40|$|An {{interactive}} program for algebraic generation of structured surface grids in three dimensional space was developed on the IRIS 4 D series workstations. Interactive tools {{are available to}} ease construction of edge curves and surfaces in 3 -D space. Addition, removal, or redistribution of points at arbitrary locations on a general 3 -D surface or curve is possible. Also, redistribution of surface grid points may be accomplished through use of conventional surface splines or a method called 'surface constrained transfinite interpolation'. This method allows the user to redistribute the grid points {{on the edges of}} a surface patch; the effect of the redistribution is then propagated to the remainder of the surface through a transfinite interpolation procedure where the grid points will be constrained to lie on the surface. The program was written to be highly functional and easy to use. A host of utilities are available to ease the grid generation process. Generality of the program allows the creation of single and multizonal surface grids according to the user requirements. The program communicates with the user through <b>popup</b> <b>menus,</b> windows, and the mouse...|$|R
50|$|Appcelerator 5.2.1.GA is {{the latest}} version of the Appcelerator Platform. It {{includes}} numerous new features including support for iOS 9.1 Live Photos, <b>Menu</b> <b>Popup,</b> Apple Pencil, Storyboard Launch Files for iPad Pro, Split View and Slide Over, Swift WatchOS 2 template and Android View Transitions.|$|R
40|$|International audienceAbstract. Pop-up targets, such as {{the items}} of <b>popup</b> <b>menus,</b> and {{animated}} targets, {{such as the}} moving windows in Mac OS X Exposé, are common in current desktop environments. This paper describes an initial study of pointing on popup and animated targets. Since {{we are interested in}} expert performance, we study the situation where the user has previous knowledge of the (final) position of the target. We investigate the effect of the DELAY factor, i. e. the delay before the target pops up (for pop-up targets) or the duration of the animation (for animated targets). We find little difference between the two techniques in terms of pointing performance (time and error), however a kinematic analysis reveals differences {{in the nature of the}} pointing movement. We also find that movement time increases with DELAY, but the degradation is smaller when the target is farther away than when it is closer. Indeed, larger distances require a longer movement time therefore the target reaches its destination while the participant is still moving the pointer, providing more opportunity to correct the movement than with short distances. Finally we take into account these results to propose an extension to Fitts' Law that better predicts movement time for these tasks...|$|R
30|$|To add the chart, {{you should}} {{right-click}} on the “Charts” {{item in the}} “Scenario Tree” in the lower left panel of the Repast Simphony runtime interface. You should then choose “Add Time Series Chart” from the <b>popup</b> <b>menu.</b> You should type in “Total Innovation” for the “Name” and then choose “Next.” You should then click on the “totalInnovation” line on the chart properties wizard page and again choose “Next.” You should type in “Total Innovation” for the chart title and “Innovation” for the Y-Axis title on the next wizard page and then click “Finish.” To complete this step you, should save the chart definition by clicking on the floppy disk icon on the upper {{right corner of the}} Repast Simphony runtime interface.|$|E
40|$|Contents 1 Introduction 4 1. 1 Running mgv............................................. 4 2 The Main Window 5 3 The File Menu 5 3. 1 The Document Information Dialog................................. 7 4 The Page Menu 8 5 The View Menu 8 6 The Mark Menu 9 7 The Magstep Menu 9 8 The Orientation Menu 10 9 The Media Menu 10 10 The Options Menu 11 11 The Help Menu 11 11. 1 About Dialog............................................. 12 11. 2 Build Options Dialog......................................... 13 12 The <b>Popup</b> <b>Menu</b> 13 13 The Tool Bar 14 14 Printing 14 CONTENTS 2 15 Zooming 15 16 Reading From The Standard Input 15 17 Sticky Dialogs 16 18 The Ghostscript Message Log 16 19 Application Resources 17 19. 1 Help Resources............. ...|$|E
40|$|At Eurospeech 97 we {{presented}} a perception experiment on identifying regional variants of High German from digit strings in telephone speech (Draxler, Burger 1997). This experiment has been modified as follows: i) use {{of high quality}} speech recordings from the RVG 1 (Burger, Schiel, 1998) corpus instead of SpeechDat telephone speech, ii) a geographically precise dialect determination of the speaker by an expert, and iii) a clickable map instead of a <b>popup</b> <b>menu</b> for the region classification. 46 utterances (one male and one female speaker for each dialect region) of telephone number digit strings were selected by a dialect expert. 39 test persons from 10 dialect regions classified all 46 utterances via the WWW. From these classifications, a confusion matrix was computed. The main results are that for the entire German dialects region Swiss German, Austrian, and Saxonian were identified best. Within Germany, the Saxonian, Bavarian, and Svabian dialects were recognized best. These findings [...] ...|$|E
40|$|This {{document}} {{gives the}} details of a Graphical User Interface(GUI) developed for a CFD (Computational Fluid Dynamics) code on an INDY workstation using X/Motif Programming. The interface integrates the various modules using pulldown <b>menus,</b> <b>popup,</b> dialog boxes, pushbuttons amp; windows to provide interaction with the user. The package is basically a shell around the core module written in FORTRAN...|$|R
40|$|Abstract—Calcite {{is a new}} Eclipse plugin {{that helps}} address the {{difficulty}} of understanding and correctly using an API. Calcite finds the most popular ways to instantiate a given class or interface by using code examples. To allow the users to easily add these object instantiations to their code, Calcite adds items to the <b>popup</b> completion <b>menu</b> that will insert the appropriate code into the user’s program. Calcite also uses crowdsourcing {{to add to the}} menu instructions in the form of comments that help the user perform functions that people have identified as missing from the API. In a user study, Calcite improved users’ success rate by 40 %...|$|R
5000|$|<b>Popup</b> {{buttons and}} <b>menus</b> are fully native {{persistent}} {{objects in the}} project file's image with scripts in SuperTalk, and are referenced as 'item [...] "copy" [...] of menu [...] "edit"' and the like, while in HyperTalk they are transient objects that are added to a global menu bar shared by all stacks using the 'create menu' command, are referenced by 'menuItem [...] "copy" [...] of menu [...] "edit"' and can only have a single-line 'menuMessage' they send when picked.|$|R
40|$|Digital {{whiteboards}} {{that only}} sense pen input {{are limited in}} their interactive capabilities. One way to artificially add touch support is through personal mobile devices, which people carry with them. This work investigates how smartphones {{can be used as}} portable quick-access toolboxes held by the non-dominant hand to provide assistive touch commands for pen-driven whiteboard tasks. We developed two interface designs, one based on a classic remote with standard GUI controls and another optimised for eyes-free operation to eliminate gaze shifts between the two devices. In a controlled evaluation based on an established mode-switching study protocol, we compare the two phone inter-faces and a baseline technique consisting of a pen-triggered <b>popup</b> <b>menu</b> on the whiteboard. Our results show a superior efficiency of the phone UIs over the popup. The eyes-free UI only partially performed better than the classic interface at the subtask level after subtracting the costs of errors. Author Keywords Interactive whiteboards; mode switching; eyes-free inter...|$|E
40|$|The {{objective}} is experimentation with various boolean network models, Kauffman (N-K) and variants. More precisely, {{the student has}} to carry out attractor studies, perturbation studies, execution timing studies (synchronous, asynchronous), as well as behavioral studies of other gene types. See detailed instructions in section 3. 2 Implementation of the testbed 2. 1 User’s manual The applet’s screen shows a gray area on the left where the simulated network lies. Genes are visualized in black or white, depending on their value (true/ 1 or false/ 0, respectively). The user may drag a gene to another position on the screen to better visualize the network. For visualization purposes, the user may also automatically rearrange the genes on the screen by using the <b>popup</b> <b>menu</b> that {{is shown in the}} above snapshot. The “rearrange ” option allows to reposition all genes either randomly or regularly around a circle (as vertices of a N-gon). The “directions ” option allows to manipulate the visibility parameters for the directions of the gene-gene connections. By default, the network edges are represented with a small ball near the destination- gene o...|$|E
40|$|Abstract- A lab {{assignment}} for CS 2 students, {{first time in}} a team environment, to design and implement a Task-List Manager with advanced Graphical User Interface in two one-hour labs has been well received. Students had studied list and binary search tree implementations and Java I/O but with minimal knowledge of Graphical User Interface. A student acted as the system architect providing Unified Modeling Language diagrams for design. The Task-List Manager consists of a split-pane on the left side containing a tree (for task-list creation and selection), the right side containing another split-pane with a table (containing the tasks in the selected task-list) in the top side, and a text pane in the bottom for detailed notes of the selected task. Students were required to look up the Java documentation for appropriate classes. The tree may contain folders with nested folders and task-lists with layout adjustable with drag-and-drop. A right click on any folder or task-list produces a <b>popup</b> <b>menu</b> with editing options. Based on student feedback, the success stems from creating a practical product and learning through independently investigating the Java documentation for data structure and graphical user interface classes and hands-on software development in a team environment...|$|E
50|$|A {{context menu}} (also called contextual, shortcut, and <b>popup</b> or pop-up <b>menu)</b> is a menu in a {{graphical}} user interface (GUI) that appears upon user interaction, such as a right-click mouse operation. A context menu offers a limited set of choices that {{are available in the}} current state, or context, of the operating system or application to which the menu belongs. Usually the available choices are actions related to the selected object. From a technical point of view, such a context menu is a graphical control element.|$|R
40|$|This paper {{reports on}} a study that {{examined}} the ability of resource authors to create acceptable metadata in an organizational setting. The results indicate that authors can create good quality metadata when working with the Dublin Core, and that is {{in some cases they}} may be able to create metadata that is of better quality than what a metadata professional can produce. This research establishes that authors think metadata is valuable for resource discovery, that it should be created for web resources, and that they, as authors, should be involved in metadata production for their works. The study also indicates that a simple web form, with textual guidance and selective use of features (e. g., <b>popup</b> windows, drop-down <b>menus,</b> etc.) can assist authors in generating good quality metadata. Keywords: Author-generated metadata, NIEHS, Dublin Core, metadata evaluation. 1...|$|R
40|$|Abstract This paper {{presents}} a MATLAB-based toolbox with a Graphical User Interface (GUI), {{which can be}} used to compute reduced models of a large system by using one of the twenty order reduction techniques available in the toolbox. The methods that have been implemented in the toolbox include the Padé, Routh, Cauer, Continued-Fraction Expansion, and algorithms that provide mixtures of these techniques. Upon execution of the toolbox, a GUI will appear with four frames named “Methods”, “High Order System”, “Output Options”, and “Results”. In “Methods ” frame, {{one or more of the}} reduction techniques can be selected. The high order system is defined by its transfer function numerator and denominator in “High Order System ” frame. In this frame, a number of high order benchmark systems, in a <b>popup</b> <b>menu,</b> are provided that can be selected by the user for testing purposes. In “Output Options ” frame, the order of the reduced model and the types of the desired output plots are selected. The impulse response and step response are available as an output. In the output plot, the software shows and compares the reduced models responses with nominal system response. The graphs of step and/or impulse responses will be appeared in two different windows. The numerator and denominator of the computed reduced order models will be shown in “Results ” frame...|$|E
