3|24|Public
50|$|A KWIC {{index is}} a special case of a <b>permuted</b> <b>index.</b> This term refers {{to the fact that}} it indexes all cyclic {{permutations}} of the headings. Books composed of many short sections with their own descriptive headings, most notably collections of manual pages, often ended with a <b>permuted</b> <b>index</b> section, allowing the reader to easily find a section by any word from its heading. This practice, also known as KWOC (“Key Word Out of Context”), is no longer common.|$|E
5000|$|... ptx is a Unix utility, {{named for}} the <b>permuted</b> <b>index</b> which can perform the {{function}} of the Keyword in Context (KWIC) search mode. There is a corresponding IBM mainframe utility which performs the same function. permuted indexes are often used in such places as bibliographic or medical databases, thesauruses, or web sites to aid in locating entries of interest.|$|E
40|$|The access vocabulary, {{which is}} {{essentially}} a <b>permuted</b> <b>index,</b> provides access to any word or number in authorized postable and nonpostable terms. Additional entries include postable and nonpostable terms, other word entries and pseudo-multiword terms that are permutations of words that contain words within words. The access vocabulary contains almost 42, 000 entries that give increased access to the hierarchies in Volume 1 - Hierarchical Listing...|$|E
5000|$|In {{the above}} pseudocode, the {{statement}} [...] "yield P" [...] means to output or record {{the set of}} <b>permuted</b> <b>indices</b> P. If the algorithm is implemented correctly, P will be yielded exactly n! times, each with {{a different set of}} <b>permuted</b> <b>indices.</b>|$|R
5000|$|... where [...] is the {{subgroup}} of permutations such {{that for all}} i, and w acts on variables by <b>permuting</b> <b>indices.</b>|$|R
5000|$|... {{and because}} cyclic {{permutations}} of indices in the ε symbol {{does not change}} its value, cyclically <b>permuting</b> <b>indices</b> in εkm to obtain εmk allows us to use the above δ-ε identity to convert the ε symbols into δ tensors: ...|$|R
40|$|Our {{contribution}} {{relates to}} lossless compression of pseudo color images (images with a palette). The proposed method is a preprocessing step preceeding actual compression. Indices in the palette are semioptimally permuted during preprocessing. For actual image compression, our own nonlinear predictor based method is used 1 but the proposed invisible palette modification {{is relevant to}} most of other compression techniques too. Experiments with numerous images show that indices reordering in the palette yields data savings from 10 to 50 % for typical images. We suggest a preprocessing phase that (a) analyses statistics of the adjacency relations of index values, (b) performs optimization, and (c) <b>permutes</b> <b>indices</b> to palette to achieve more smooth image. The smoother image causes that the lossless image compression methods yield less output data. The task to optimally <b>permute</b> <b>indices</b> is a NP complete combinatorial optimization. Instead of checking all possibilities, we propose a reasona [...] ...|$|R
5000|$|Replacing {{the matrix}} A by its {{transpose}} AT {{is equivalent to}} <b>permuting</b> the <b>indices</b> of its components: ...|$|R
40|$|We {{address the}} problem of pseudocolor image compression. Image values {{represent}} indices into a look up table (palette). Due to quantization, the neighbouring pixel values (indices) change too much. This deteriorates performance of both lossless and lossy image compression methods. We suggest a preprocessing phase that (a) analyses statistics of the adjacency relations of index values, (b) performs palette optimization, and (c) <b>permutes</b> <b>indices</b> to palette to achieve more smooth image. The smoother image causes that the lossless image compression methods yield less output data. The task to optimally <b>permute</b> palette <b>indices</b> is a NP complete combinatorial optimization. Instead of checking all possibilities, we propose a reasonable initial guess and a fast suboptimal hill climbing optimization. The proposed permutation of indices should enhance performance of most lossless compression method used after it. To our knowledge, the proposed reordering followed by our own nonlinear [...] ...|$|R
5000|$|... #Caption: Flow graph {{for three}} {{simultaneous}} equations. The edges incident on each node are colored differently just for emphasis. Rotating the figure by 120° simply <b>permutes</b> the <b>indices.</b>|$|R
2500|$|Using {{that the}} symbols are {{symmetric}} {{in the lower}} two indices, one can solve explicitly for the Christoffel symbols {{as a function of}} the metric tensor by <b>permuting</b> the <b>indices</b> and resumming: ...|$|R
5000|$|Let V be any {{vector space}} over the complex numbers. Consider then the tensor product vector space [...] (n times). Let Sn act on this tensor product space by <b>permuting</b> the <b>indices.</b> One then has a natural group algebra {{representation}} [...] on [...]|$|R
40|$|Many {{scientific}} indexing structures {{thought to}} have been developed in the computer era were invented about a millennium earlier, in the domain of religion. Hans Wellisch traced the origins of alphabetical indexing to a fourth-century index to a compilation of sayings of the Greek Church fathers. The Masoretes standardized the text of the Hebrew Bible {{and in the course of}} their work created alphabetical lists of words and phrases. These tenth-century lists may be viewed as the predecessors of thirteenth-century Latin biblical concordances. Structurally, Masoretic lists and biblical concordances are analogous to KWOC (keyword out of context) indexes. Masoretic lists anticipated search features, including truncation and adjacency, developed in the latter half of the twentieth century. The Masoretes also created <b>permuted</b> <b>indexes</b> and produced frequenc...|$|R
40|$|This paper {{analyzes}} {{the most important}} proposals following the Shannon and Weaver's Mathematic Theory of Communication that have influenced in pro-ceedings of automatic content analysis. It's explained the methodological applica-tions of this theory in our discipline, especially about information retrieval. After this, describes the mathematical models applied to automatic content analysis: Laws of Zipf and Goffman, anti-dictionaries to <b>permuted</b> <b>indexes,</b> Statistical Inde-xation of terms by frequencies, n-grams and stemming algorisms. Also studies the methods of relation and classification like clusters by value of discrimination and by relevance of terms: for example, methods of relations based in Graph Theory, mass core, the K-means or incremental K-means, and the ISODATA algorism. Fi-nally, explains the scientometrics indicators as Chen's coowording and methods with learning systems...|$|R
40|$|The orbit {{problem is}} at the heart of {{symmetry}} reduction methods for model checking concurrent systems. It asks whether two given configurations in a concurrent system (represented as finite strings over some finite alphabet) are in the same orbit with respect to a given finite permutation group (represented by their generators) acting on this set of configurations by <b>permuting</b> <b>indices.</b> It is known that the problem is in general as hard as the graph isomorphism problem, whose precise complexity (whether it is solvable in polynomial-time) is a long-standing open problem. In this paper, we consider the restriction of the orbit problem when the permutation group is cyclic (i. e. generated by a single permutation), an important restriction of the problem. It is known that this subproblem is solvable in polynomial-time. Our main result is a linear-time algorithm for this subproblem. Comment: Accepted in Acta Informatica in Nov 201...|$|R
40|$|Let sij {{represent}} a transposition in Sn. A polynomial P in Q[Xn] {{is said to}} be m-quasiinvariant with respect to Sn if (xi − xj) 2 m+ 1 divides (1 − sij) P for all 1 ≤ i, j ≤ n. We call the ring of m-quasiinvariants, QIm[Xn]. We describe a method for constructing a basis for the quotient QIm[X 3]/(e 1, e 2, e 3). This leads to the evaluation of certain binomial determinants that are interesting in their own right. The symmetric group Sn acts on the ring of polynomials Q[Xn] by <b>permuting</b> <b>indices.</b> That is for any permutation σ ∈ Sn σP(x 1, [...] ., xn) = P(x σ(1), [...] .,x σ(n)). A polynomial P {{is said to be}} Sn-invariant or symmetric if and only if σ(P) = P for all σ ∈ Sn. The fundamental theorem of symmetric functions [9, p. 292] states that any invariant of Sn can be written as a polynomial in {e 1, e 2, [...] ., en} where ek...|$|R
5000|$|As {{all three}} {{variables}} enter these recast equations in a symmetrical fashion, the symmetry is {{retained in the}} graph by placing each variable {{at the corner of}} an equilateral triangle. Rotating the figure 120° simply <b>permutes</b> the <b>indices.</b> This construction can be extended to more variables by placing the node for each variable at the vertex of a regular polygon with as many vertices as there are variables.|$|R
5000|$|The {{operators}} {{satisfy the}} commutation relationsand the corresponding {{relations with the}} <b>indices</b> <b>permuted</b> cyclically. The [...] satisfy anomalous commutation relations (have a minus sign on the right hand side). The two sets mutually commute,and the total operators squared are equal, ...|$|R
40|$|Medical terminologies {{continue}} to grow in scope, completeness and detail. The emerging generation of terminology systems define concepts {{in terms of their}} position within a categorical structure. It is still necessary, however, to access and represent the concepts using everyday spoken and written language, which introduces both lexical and semantic ambiguity. This ambiguity can {{have a negative impact on}} both selectivity and recall when it comes to associating free-form textual phrases with their coded equivalent. Lexical ambiguity issues can often be addressed algorithmically, but semantic ambiguity presents a more difficult problem. A common solution to the semantic problem is to associate many different representational permutations with a given target concept. This approach has several drawbacks. An alternate solution is to build separate synonym tables that can serve as <b>permuted</b> <b>indices</b> into the terms representing the underlying concepts. A potential shortcoming of this approach, however, is a further reduction in the lookup selectivity. One possible source of loss of selectivity could be "meaning drift" [...] the gradual change in meaning that can be introduced when following a chain of nearly synonymous words. We posited that organizing synonyms into separate "meaning clusters" might reduce this loss in precision, but the results of this study did not bear that out...|$|R
40|$|AbstractThe concept class TCM of "translation-closed monomials" was {{proposed}} by Maragos and Valiant {{as a natural}} {{starting point for the}} investigation of the computational complexity of learning translation-invariant concepts. Concepts in TCM are (satisfying assignments to) DNF formulas such as (x 0 ∧ x 1 ∧ x 3) ∨ (x 1 ∧ x 2 ∧ x 4) ∨ ··· ∨ (x 4 ∧ x 0 ∧ x 2) (over the variables x 0, x 1, [...] ., x 4), which are generated from a single monomial (conjunction of variables) by cyclically <b>permuting</b> <b>indices</b> and forming a disjunction. Note that concepts in TCM are invariant under cyclic permutation of the variable set. This note investigates the computational complexity of learning TCM concepts within the Valiant (PAC) model. Despite their obvious simplicity, TCM concepts are apparently difficult to learn. Indeed: (i) the concept class TCM is not polynomially learnable unless RP = NP; (ii) TCM is polynomially predictable if and only if the concept class of DNF formulas is polynomially predictable; (iii) TCM is not polynomially predictable from positive examples alone. The second of these results relates the computational complexity of predicting TCM concepts to a well known open problem in computational learning theory...|$|R
40|$|A {{compilation}} of materials which are productions of the 19 Research and Training Centers, this bibliography of rehabilitation research is prepared {{as part of}} the Centers' Information Exchange and Clearinghouse Program. The specific intent of the program is to enhance the communication process between the Centers concerning their scientific activities [...] Bibl;pgraphical references appearing are entered by Center title and numbered in consecutive alphabetical order by author [...] 0 ther contents include: (1) a <b>permuted</b> subject <b>index,</b> (2) an author index, and. 3) addresses of the Research and Training Centers. (Author/MO e...|$|R
3000|$|This paper {{presents}} {{a new type}} of orbits, called Boolean Orbits, that permit one to deal effectively with strong symmetries as well as partial and total symmetries. Boolean orbits are computed with respect to the Boolean input vectors of a function rather than with respect to the variables. (Again, {{it is important to note}} that Boolean orbits are properties of permutation groups, not of Boolean functions.) Permutations of degree [...] n [...] can operate on n-element vectors by <b>permuting</b> the <b>indices</b> of the elements. For example, one can apply the permutation (1,  2,  3) to the vector [...] (v_ 1,v_ 2,v_ 3 [...]) [...] to obtain [...] (v_ 3,v_ 1,v_ 2 [...]) [...]. Applying this permutation to the specific vector (1,  1,  0) yields the vector (0,  1,  1). The concept of Boolean orbits is formalized in the following definition.|$|R
40|$|The {{so-called}} permutation separability {{criteria are}} simple operational {{conditions that are}} necessary for separability of mixed states of multipartite systems: (1) <b>permute</b> the <b>indices</b> of the density matrix and (2) check if the trace norm {{of at least one}} of the resulting operators is greater than one. If it is greater than one then the state is necessarily entangled. A shortcoming of the permutation separability criteria is that many permutations give rise to dependent separability criteria. Therefore, we introduce a necessary condition for two permutations to yield independent criteria called combinatorical independence. This condition basically means that the map corresponding to one permutation cannot be obtained by concatenating the map corresponding to the second permutation with a norm-preserving map. We characterize completely combinatorically independent criteria, and determine simple permutations that represent all independent criteria. The representatives can be visualized by means of a simple graphical notation. They are composed of three basic operations: partial transpose, and two types of so-called reshufflings. In particular, for a four-partite system all criteria except one are composed of partial transpose and only one type of reshuffling; the exceptional one requires the second type of reshuffling. Furthermore, we show how to obtain efficiently for every permutation a simple representative. This method allows to check easily if two permutations are combinatorically equivalent or not. Comment: 9 pages, corrected proof of rule...|$|R
40|$|Chaotic based image {{permutation}} and DNA encoding {{methods are}} used {{extensively in the}} area of the image encryption. This paper presents a hybrid approach of chaos and DNA encoding methods for image encryption. Chaos sequence is used for permutation and DNA Encoding is used for the diffusion process. Index based chaotic sequence is generated using 1 D logistic map for permutation; and DNA sequence matrix is obtained by encoding the <b>permuted</b> image and <b>index</b> based chaotic sequence using DNA encoding rule. The DNA matrices are added using DNA addition operation to generate a new matrix. The generated matrix is decoded using DNA decoding rule and encrypted the image is produced. The proposed approach has two unique characteristics: (i) the way integer sequence is generated from the real valued chaotic logistic sequence; and (ii) the formation of the encoded DNA key matrix. The simulation results indicate that the proposed algorithm is highly secure, is resistant to statistical attacks, and has a larger key space...|$|R
40|$|A Doctoral Thesis. Submitted in partial {{fulfillment}} of the requirements for the award of Doctor of Philosophy of Loughborough University. A 'Subject Indexing Language' (SIL) is an artificial language used for formulating names of subjects. Although classificationists have sought for universals in many fields of study such as, philosophy, biology, general systems theory, etc., {{the search for a}} deep structure of SILs formally began with Ranganathan's idea of 'absolute syntax' and was brought to the present by G. Bhattacharyya and D. Austin. Whereas Bhattacharyya's deep structure of SIL is primarily based on classificatory principles (parallel to 'absolute syntax'), the deep structure proposed by Austin has a linguistic connotation. The present study describes and compares two such deep structurebased SILs, viz., PRECIS (PREserved Context Index System) and DSIS (Deep Structure Indexing System), a recent computerized version of POPSI (POstulate-based <b>Permuted</b> Subject <b>Indexing),</b> developed by F. J. Devadason at Documentation Research and Training Centre, Bangalore, India. Both also belong to the category of SILs typified as 'string indexing' languages. The study involves: i) writing of a suitable DSIS index entry generation program, ii) using both PRECIS (in-house) and DSIS programs to index a collection of representative sample documents from the soft sciences, iii) analyzing and comparing their respective syntactic and semantic aspects in terms of both linguistic and classificatory principles, and iv) applying some measures of efficiency and effectiveness. It was realized that certain modifications in the existing DSIS string manipulation algorithms are necessary to make the program fully operational. Although, no {{attempts have been made to}} quantify the measures of effectiveness and efficiency as such, suggestions have been provided as to what these probably would be. Some indications of their searching difficulties for a prospective searcher have been put forward as well...|$|R
40|$|If a {{classical}} r-matrix r is skewsymmetric, its quantization R can lose the skewsymmetry property. Even when R is skewsymmetric, {{it may not}} be unique. Let r be {{a classical}} r-matrix. In general, it means that we have a family of vector spaces {Vα}, α ∈ A, and a collection of linear operators r(α,β) : Vα ⊗ Vβ → Vβ ⊗ Vα, ∀ α ̸ = β ∈ A, (1) satisfying the misnamed “Classical Yang-Baxter ” equation (CYB) [c(r) ] ϕψξ ijk (α,β,γ) : = r(α,β) sϕ ij r(β,γ) ξψ sk + r(α,β) ψs ij r(α,γ) ξϕ sk + c. p. (i,j,k;ϕ,ψ,ξ;α, β,γ) = 0 where “c. p ” stands for the sum on cyclically <b>permuted</b> triples of <b>indices</b> indicated, and r(α,β) uv ij are the matrix elements of the operators r(α,β) (1) in a collection of fixed basises: r(α,β) e α i ⊗ e β j = r(α,β) ℓk ij e β ℓ ⊗ eαk; (3) the convention of summation over repeated upper-lower indices is in force. In most applications, all the vector spaces Vα are isomorphic to each other, Vα ≈ V; in addition, often, – but not always, – the operator r: V ⊗ V → V ⊗ V is skewsymmetric: (2) PrP = −r, r kℓ ij = −rℓk ji, (4) where P is the permutation operator, P(x ⊗ y) = y ⊗ x. (5) We shall consider this particular framework from now on. Copyright c ○ 1999 by B. A. Kupershmidt 270 B. A. Kupershmidt To quantize a given r-matrix r is to find an operator family R = R(h) : V ⊗ V → V ⊗ V, (6) depending upon a parameter h, such that R(h) = P + hr + O(h 2), (7) and R satisfies the Artin braid relation (also misnamed as the “Quantum Yang-Baxter” equation, QYB) : R 12 R 23 R 12 = R 23 R 12 R 23, (8) where this equality of operators acting on V ⊗ V ⊗ V employs the standard notation R 12 (x ⊗ y ⊗ z) = R(x ⊗ y) ⊗ z, R 23 (x ⊗ y ⊗ z) = x ⊗ R(y ⊗ z). (9) How does the skewsymmetry condition on r, (4), translate into R = R(h) ? There are at least two possible, logically independent, answers, only one of which is correct. The first one is what is commonly accepted in the literature under the name of “unitarity”: R(h) − 1 = R(h) ...|$|R

