0|588|Public
50|$|The bit (b) is the {{smallest}} unit of information in the <b>binary</b> <b>numeration</b> <b>system</b> and {{is represented by the}} digits 0 and 1.|$|R
30|$|See Fig.  1, where graphs of {{the first}} eight {{elements}} of the Walsh basis are shown. Here we identify { 0, 1 }^ω with the unit interval [0,  1] via real <b>binary</b> <b>numeration</b> <b>system.</b>|$|R
40|$|A {{determined}} {{algorithm is}} presented for solving the rSUM problem for any natural r with a sub-quadratic assessment of time complexity in some cases. In {{terms of an}} amount of memory used the obtained algorithm is the nlog^ 3 (n) order. The idea of the obtained algorithm is based not considering integer numbers, but rather k (is a natural) successive bits of these numbers in the <b>binary</b> <b>numeration</b> <b>system.</b> It is shown that if a sum of integer numbers is equal to zero, then the sum of numbers presented by any k successive bits of these numbers must be sufficiently "close" to zero. This {{makes it possible to}} discard the numbers, which a fortiori, do not establish the solution...|$|R
40|$|Zeckendorf's theorem {{states that}} every {{positive}} integer {{can be written}} uniquely as a sum of nonconsecutive Fibonacci numbers. This theorem induces a <b>binary</b> <b>numeration</b> <b>system</b> for the positive integers known as Fibonacci coding. Fibonacci code is a variable-length prefix code that is robust against insertion and deletion errors and is useful in data transmission and data compression. In this paper, we generalize the theorem of Zeckendorf and prove that every element of a free Z-module can be represented as a sum of elements from a Fibonacci sequence of higher order. Immediate applications of these results include a Fibonacci coding for free Z-modules, where encoding and decoding algorithms are obtained naturally from the approach of our theorems...|$|R
40|$|AbstractSeveral {{measures}} are defined and investigated, which allow {{the comparison of}} codes as to their robustness against errors. Then new universal and complete sequences of variable-length codewords are proposed, based on representing the integers in a <b>binary</b> Fibonacci <b>numeration</b> <b>system.</b> Each sequence is constant and needs not be generated for every probability distribution. These codes {{can be used as}} alternatives to Huffman codes when the optimal compression of the latter is not required, and simplicity, faster processing and robustness are preferred. The codes are compared on several “real-life” examples...|$|R
40|$|New {{formulae}} {{are presented}} which express various generalizations of Fibonacci numbers as simple sums of binomial and multinomial coefficients. The equalities are inferred {{from the special}} properties of the representations of the integers in certain <b>numeration</b> <b>systems.</b> 1. Introduction A well-known combinatorial formula for the Fibonacci numbers Fn, defined by F 0 = 0, F 1 = 1, Fn = F nΓ 1 + F nΓ 2 for n 2, is bn= 2 c X i= 0 / n Γ i i ! = F n+ 1 for n 0; (1) which can be shown by induction (see for example Knuth [11, Exercise 1. 2. 8 [...] 16]). The following proof, however, is easily generalizable to various other recursively defined sequences of integers. The Fibonacci numbers fF 2; F 3; : : :g are the basis elements of the <b>binary</b> Fibonacci <b>numeration</b> <b>system</b> (see [11, Exercise 1. 2. 8 [...] 34] or Fraenkel [7]). Every integer K in the range 0 K ! F n+ 1 has a unique binary representation of n Γ 1 bits, k nΓ 1 k nΓ 2 ΔΔΔ k 1, such that K = P n. ̇...|$|R
40|$|Several {{measures}} are defined and investigated, which allow {{the comparison of}} codes as to their robustness against errors. Then new universal and complete sequences of variable-length codewords are proposed, based on representing the integers in a <b>binary</b> Fibonacci <b>numeration</b> <b>system.</b> Each sequence is constant and need not be generated for every probability distribution. These codes {{can be used as}} alternatives to Huffman codes when the optimal compression of the latter is not required, and simplicity, faster processing and robustness are preferred. The codes are compared on several "real-life" examples. 1. Motivation and Introduction Let A = fA 1; A 2; ΔΔΔ; An g be a finite set of elements, called cleartext elements, to be encoded by a static uniquely decipherable (UD) code. For notational ease, we use the term `code' as abbreviation for `set of codewords'; the corresponding encoding and decoding algorithms are always either given or clear from the context. A code i [...] ...|$|R
40|$|A travel {{distance}} model for debris flows and slides is presented {{based on information}} collected in southeast British Columbia, Canada. The model incorporates a variable that represents terrain morphology by a single number, quantification made using a one-to-one correspondence between the <b>binary</b> and decimal <b>numeration</b> <b>systems.</b> The terrain morphology coding has a site-specific character, providing a process-based representation of local conditions. Multiple regression {{analysis was used to}} assess the dependence of event {{travel distance}} on terrain morphology, slope, stand height, terrain curvature and canopy closure (R 2 = 0. 975, p < 0. 001). The model fulfills all the assumptions and requirements of regression analysis (i. e. normality, homoscedasticity, non correlated errors, lack of colinearity or outliers). An independent data set was used to test the model. The model successfully predicted {{all but one of the}} test dataset events, and one of four outliers. The model consists of an equation that can be used in mass movement risk assessment associated, with different forest activities (e. g. harvesting, road building).  </span...|$|R
40|$|At present, {{there are}} no {{effective}} methods for modeling on representing sequence containing position information in some special problems. A novel varying-radix <b>numeration</b> <b>system</b> is proposed to solve this kind of problems. This varying-radix <b>numeration</b> <b>system</b> differs from common fixed radixes <b>numeration</b> <b>systems.</b> The applications of varying-radix <b>numeration</b> <b>system</b> in a First-In-Last-Out (FILO) stack problem and Multi-Pulse Excited Linear Prediction (MPELP) vocoder have illustrated the availability and benefit of this specific <b>numeration</b> <b>system...</b>|$|R
40|$|In this paper, {{we study}} the {{representational}} properties of <b>numeration</b> <b>systems.</b> We argue that <b>numeration</b> <b>systems</b> are distributed representationsÑrepresentations that are distributed across the internal {{mind and the}} external environment. We analyze number representations at four levels: dimensionality, dimensional representations, bases, and symbol representations. The representational properties at these four levels determine the representational efficiencies of <b>numeration</b> <b>systems</b> {{and the performance of}} numeric tasks. From this hierarchical structure, we derive a cognitive taxonomy that can classify most <b>numeration</b> <b>systems...</b>|$|R
40|$|Abstract <b>numeration</b> <b>systems</b> were {{introduced}} in 2001 by P. Lecomte and M. Rigo. This new way to represent numbers generalizes that of usual positional <b>numeration</b> <b>systems</b> such as integer base <b>numeration</b> <b>systems</b> and linear <b>numeration</b> <b>systems.</b> Some standard properties are preserved in this wider framework though some others are not. Yet, the advantages of these systems stem from their great generality: current research on this subject strives to highlight the properties that are independent of the target <b>numeration</b> <b>system,</b> such as properties related {{to the complexity of}} the numeration language. In this talk I will introduce this topic. In particular, I will present many open questions in the area and highlight the connections with combinatorics on words...|$|R
40|$|Abstract. For a given <b>numeration</b> <b>system,</b> the {{successor}} function maps {{the representation of}} an integer n onto the representation of its successor n+ 1. In a general setting, {{the successor}} function maps the n-th word of a genealogically ordered language L onto the (n+ 1) -th word of L. We show that, if {{the ratio of the}} number of elements of length n + 1 over the number of elements of length n of the language has a limit β> 1, then the amortized cost of the successor function is equal to β/(β − 1). From this, we deduce the value of the amortized cost for several classes of <b>numeration</b> <b>systems</b> (integer base <b>systems,</b> canonical <b>numeration</b> <b>systems</b> associated with a Parry number, abstract <b>numeration</b> <b>systems</b> built on a rational language, and rational base <b>numeration</b> <b>systems).</b> ...|$|R
40|$|For the k-ary <b>numeration</b> <b>system,</b> we {{characterize}} the sets of integers {{such that the}} corresponding representations make up a star-free regular language. This result can be transposed to some linear <b>numeration</b> <b>systems</b> built upon a Pisot number like the Fibonacci system and also to k-adic <b>numeration</b> <b>systems.</b> Moreover we study {{the problem of the}} base dependence of this property and obtain results which are related to Cobham's Theorem. Peer reviewe...|$|R
40|$|For a given <b>numeration</b> <b>system,</b> the {{successor}} function maps {{the representation of}} an integer n onto the representation of its successor n+ 1. In a general setting, {{the successor}} function maps the n-th word of a genealogically ordered language L onto the (n+ 1) -th word of L. We show that, if {{the ratio of the}} number of elements of length n + 1 over the number of elements of length n of the language has a limit b> 1, then the amortized cost of the successor function is equal to b/(b − 1). From this, we deduce the value of the amortized cost for several classes of <b>numeration</b> <b>systems</b> (integer base <b>systems,</b> canonical <b>numeration</b> <b>systems</b> associated with a Parry number, abstract <b>numeration</b> <b>systems</b> built on a rational language, and rational base <b>numeration</b> <b>systems).</b> Peer reviewe...|$|R
40|$|A <b>numeration</b> <b>system</b> {{associates}} {{a unique}} string, Ξ(n), with each positive integer n, where each string {{is over the}} same finite alphabet. Various digit counting statistics of Ξ(n) are of interest {{with respect to a}} <b>numeration</b> <b>system.</b> An example is the digital sum, which is the sum of the digits in the number. We present a unifying framework for deriving identities for the generating functions of such statistics in many of the more popular <b>numeration</b> <b>systems.</b> ...|$|R
40|$|Abstract <b>numeration</b> <b>systems</b> on bounded {{languages}} and multiplication by a constant. (English summary) Integers 8 (2008), A 35, 19 pp. 1553 - 1732 Summary: “A set of integers is S-recognizable in an abstract <b>numeration</b> <b>system</b> S if the language <b>numeration</b> <b>systems</b> built over bounded languages {{with at least}} three letters, we show that multiplication by an integer λ ≥ 2 does not preserve S-recognizability, meaning that there always exists an S-recognizable set X such that λX is not S-recognizable. The main tool is a bijection between the representation of an integer over a bounded language and its decomposition as a sum of binomial coefficients with certain properties, the so-called combinatorial <b>numeration</b> <b>system.</b> ...|$|R
40|$|Alternate <b>numeration</b> <b>systems</b> {{are common}} in preservice teacher (PST) {{mathematics}} curricula, but there is limited research on how to leverage alternate systems to promote the development of mathematical knowledge for teaching. I analyzed the role of alternate <b>numeration</b> <b>systems</b> in three ways. I conducted a thematic analysis of current PST textbooks to consider the role of alternate <b>numeration</b> <b>systems</b> in written curricula. I conducted a teaching experiment to analyze PSTs 2 ̆ 7 mathematical activity as they engaged with a base five task sequence to reinvent an algorithm for multiplication. And I introduced problematizing mathematical contexts as a design heuristic, situating this within the design theory of Realistic Mathematics Education. I found that alternate <b>numeration</b> <b>systems</b> can be leveraged to create opportunities for PSTs to (a) engage in guided reinvention of an algorithm, (b) improve understanding of base ten by comparing it to other <b>numeration</b> <b>systems,</b> and (c) reflect on their learning experience and the learning experiences of children...|$|R
40|$|International audienceIn {{this chapter}} we {{essentially}} {{focus on the}} representation of non-negative integers in a given <b>numeration</b> <b>system.</b> The main role of such a system [...] - like the usual integer base k <b>numeration</b> <b>system</b> [...] - is to replace numbers or more generally sets of numbers by their corresponding representations, i. e., by words or by languages. First we consider integer base <b>numeration</b> <b>systems</b> to present the main concepts but rapidly we will introduce non-standard systems and their relationships with substitutions...|$|R
40|$|AbstractIn this paper, <b>numeration</b> <b>systems</b> {{defined by}} {{recurrent}} sequences are considered. We present {{a class of}} recurrences yielding <b>numeration</b> <b>systems</b> for which the words corresponding to greedy expressions for natural numbers are easily described. Those sequences, in turn, enumerate classes of words with forbidden substrings...|$|R
40|$|International audienceWe survey {{definitions}} and properties of numeration from a dynamical point of view. That is we focuse on <b>numeration</b> <b>systems,</b> their associated compactifications, and the dynamical systems {{that can be}} naturally defined on them. The exposition is unified by the notion of fibred <b>numeration</b> <b>system.</b> A lot of examples are discussed. Various numerations on natural, integral, real or complex numbers are presented with a special attention payed to beta-numeration and its generalisations, abstract <b>numeration</b> <b>systems</b> and shift radix systems. A section of applications ends the paper...|$|R
40|$|In this thesis, I {{study the}} {{stability}} of recognizability under arithmetic operations like addition, multiplication by a constant or multiplication, in an abstract <b>numeration</b> <b>system.</b> The main result presented in this work concerns the abstract <b>numeration</b> <b>system</b> built on the bounded language a^*b^*. It shows that, in this case, multiplication by a constant preserves recognizability {{if and only if}} this constant is an odd square. I end this text by providing some partial results of a generalization to abstract <b>numeration</b> <b>system</b> built on any bounded language...|$|R
40|$|One of {{the main}} {{interesting}} concerns in work about <b>numeration</b> <b>systems</b> is studying the relationship that exist between arithmetic properties of numbers and syntactical properties of their representation. More precisely, we prefer to manipulate set of numbers whose representations are characterized by very simple syntactical rules, that is, forming a regular language. Such sets are called S-recognizable sets, where S is the <b>numeration</b> <b>system</b> we are working with. In particular, {{we would like to}} obtain <b>numeration</b> <b>systems</b> in which the whole set N is recognizable, partly due to the fact that, if the set of representations of all integers is regular, there are very simple algorithms making it possible to decide if a word stands or does not stand for a number. Some general questions in this area are the following. • Characterization of the recognizable parts in a fixed <b>numeration</b> <b>system.</b> • Determination of the <b>numeration</b> <b>systems</b> for which a given set of numbers is recognizable. • To examine the stability of recognizability under arithmetic operations. In this poster we present our research about that last problem. First, we will define the abstract <b>numeration</b> <b>systems</b> based on a regular language. Then we will study the relationship between multiplication by a constant and the S-recognizability for languages of the type a_ 1 ^∗... a_k^∗...|$|R
40|$|We define an {{infinite}} array A of nonnegative integers {{based on a}} linear recurrence, whose second row provides basis elements of an exotic ternary <b>numeration</b> <b>system.</b> Using the <b>numeration</b> <b>system</b> we explore many properties of A. Further, we propose and analyze a family Frankenstein of 2 -player pebbling games played on a semi-infinite strip, and present a winning strategy based on certain subarrays of A. Though the strategy looks easy, it is actually computationally hard. The <b>numeration</b> <b>system</b> is then used {{to decide whether the}} family has an efficient strategy or not...|$|R
40|$|Abstract: A <b>numeration</b> <b>system</b> {{originally}} {{implies a}} digitization of real numbers, {{but in this}} paper it rather implies a compactification of real numbers {{as a result of}} the digitization. By definition, a <b>numeration</b> <b>system</b> with G, where G is a nontrivial closed multiplicative subgroup of R+, is a nontrivial compact metrizable space Ω admitting a continuous (λω + t) -action of (λ, t) ∈ G × R to ω ∈ Ω, such that the (ω + t) -action is strictly ergodic with the unique invariant probability measure µΩ, which is the unique G-invariant probability measure attaining the topological entropy |log λ | of the transformation ω ↦ → λω for any λ ̸ = 1. We construct a class of <b>numeration</b> <b>systems</b> coming from weighted substitutions, which contains those coming from substitutions or β-expansions with algebraic β. It also contains those with G = R+. We obtained an exact formula for the ζ-function of the <b>numeration</b> <b>systems</b> coming from weighted substitutions and studied the properties. We found a lot of applications of the <b>numeration</b> <b>systems</b> to the β-expansions, Fracta...|$|R
40|$|We are {{interested}} in the links between numbers and their representations. In the decimal <b>numeration</b> <b>system,</b> a number is even if its representation ends with 0, 2, 4, 6, or 8, which give rise to a simple representation set, that is, accepted by a finite automaton. More generally, in an integer base <b>numeration</b> <b>system,</b> any divisibility criterion is recognized by a finite automaton. The state complexity of a regular language is the number of states of the minimal automaton accepting this language. The syntactic complexity is the size of the associated syntactical monoid. The first one only takes into account the context on the right side, whereas the second considers both left and right contexts. Given a set of integers, we want to answer the following questions. What is the associated state complexity? What is the associated syntactic complexity? These questions extend to more general <b>numeration</b> <b>systems,</b> as linear <b>numeration</b> <b>systems</b> or abstract <b>numeration</b> <b>systems.</b> Such problems are motivated by decidability problems. For example : given an automaton recognizing a set of integers, decide if this set is ultimately periodic...|$|R
5000|$|... #Subtitle level 2: <b>Numeration</b> <b>systems</b> {{based on}} the hyperoperation {{sequence}} ...|$|R
40|$|AbstractWe {{show how}} to {{represent}} an interval of real numbers in an abstract <b>numeration</b> <b>system</b> {{built on a}} language {{that is not necessarily}} regular. As an application, we consider representations of real numbers using the Dyck language. We also show that our framework {{can be applied to the}} rational base <b>numeration</b> <b>systems...</b>|$|R
40|$|In this paper, {{we study}} the {{representational}} properties of <b>numeration</b> <b>systems.</b> We argue that <b>numeration</b> <b>systems</b> are distributed representations [...] -representations that are distributed across the internal {{mind and the}} external environment. We analyze number representations at four levels: dimensionality, dimensional representations, bases, and symbol representations. The representational properties at these four levels determine the representational efficiencies of <b>numeration</b> <b>systems</b> {{and the performance of}} numeric tasks. From this hierarchical structure, we derive a cognitive taxonomy that can classify most <b>numeration</b> <b>systems.</b> Introduction We all know that Arabic numerals are more efficient than Roman numerals for calculation (e. g., 73 × 27 is easier than LXXIII × XXVII), even though they both represent the same entities [...] - numbers. This representational effect, the effect that different representations of a common abstract structure can cause different behaviors, is a cognitive phenome [...] ...|$|R
40|$|Given {{a linear}} <b>numeration</b> <b>system</b> U {{and a set}} X (include in N) such that repU(X) is {{recognized}} by a (deterministic) finite automaton. Is it decidable whether or not X is ultimately periodic, i. e., whether or not X is a finite union of arithmetic progressions? Honkala showed that this problem {{turns out to be}} decidable for the usual b-ary <b>numeration</b> <b>system</b> (b greater than 2) defined by U_n = bU_{n- 1 } for n greater than 1 and U_ 0 = 1. In this work, we give a decision procedure for this problem for a large class of linear <b>numeration</b> <b>systems...</b>|$|R
40|$|We {{show how}} to {{represent}} an interval of real numbers in an abstract <b>numeration</b> <b>system</b> {{built on a}} language {{that is not necessarily}} regular. As an application, we consider representations of real numbers using the Dyck language. We also show that our framework {{can be applied to the}} rational base <b>numeration</b> <b>systems.</b> Comment: 18 page...|$|R
50|$|In 1898 he {{presented}} {{a note to}} the Academy about <b>binary</b> <b>numeration</b> {{and its ability to}} be used to represent the sounds of languages. He also became so frustrated with publishing delays (due to his demand that formulae be printed on one line) that he purchased a printing press.|$|R
40|$|A set of {{integers}} is S-recognizable in {{an abstract}} <b>numeration</b> <b>system</b> S if the language {{made up of}} the representations of its elements is accepted by a finite automaton. For abstract <b>numeration</b> <b>systems</b> built over bounded languages with at least three letters, we show that multiplication by an integer λ ≥ 2 does not preserve S-recognizability, meaning that there always exists a S-recognizable set X such that λX is not S-recognizable. The main tool is a bijection between the representation of an integer over a bounded language and its decomposition as a sum of binomial coefficients with certain properties, the so-called combinatorial <b>numeration</b> <b>system...</b>|$|R
40|$|Abstract. Consider a {{non-standard}} <b>numeration</b> <b>system</b> {{like the}} one built over the Fibonacci sequence where nonnegative integers are represented by words over { 0, 1 } without two consecutive 1. Given a set X of integers such that the language of their greedy representations in this system is accepted by a finite automaton, we consider the problem of deciding whether or not X is a finite union of arithmetic progressions. We obtain a decision procedure for this problem, under some hypothesis about the considered <b>numeration</b> <b>system.</b> In a second part, we obtain an analogous decision result for a particular class of abstract <b>numeration</b> <b>systems</b> built on an infinite regular language. 1...|$|R
40|$|A <b>numeration</b> <b>system</b> {{originally}} {{implies a}} digitization of real numbers, {{but in this}} paper it rather implies a compactification of real numbers {{as a result of}} the digitization. By definition, a <b>numeration</b> <b>system</b> with G, where G is a nontrivial closed multiplicative subgroup of R_+, is a nontrivial compact metrizable space Ω admitting a continuous (λω+t) -action of (λ,t) ∈ G×R to ω∈Ω, such that the (ω+t) -action is strictly ergodic with the unique invariant probability measure μ_Ω, which is the unique G-invariant probability measure attaining the topological entropy |λ| of the transformation ωλω for any λ 1. We construct a class of <b>numeration</b> <b>systems</b> coming from weighted substitutions, which contains those coming from substitutions or β-expansions with algebraic β. It also contains those with G=R_+. We obtained an exact formula for the ζ-function of the <b>numeration</b> <b>systems</b> coming from weighted substitutions and studied the properties. We found a lot of applications of the <b>numeration</b> <b>systems</b> to the β-expansions, Fractal geometry or the deterministic self-similar processes which are seen in K 4. This paper is based on K 3 changing the way of presentation. The complete version of this paper is in K 4. Comment: Published at [URL] in the IMS Lecture Notes [...] Monograph Series ([URL] by the Institute of Mathematical Statistics ([URL]...|$|R
40|$|We present {{here the}} notion of breadth-first {{signature}} and its relationship with <b>numeration</b> <b>system</b> theory. It is the serialisation into an infinite word of an ordered infinite tree of finite degree. We study which class of languages corresponds to which class of words and,more specifically, using a known construction from <b>numeration</b> <b>system</b> theory, we prove that the signature of rational languages are substitutive sequences. Comment: 15 page...|$|R
50|$|This non-uniqueness is {{a feature}} of the <b>numeration</b> <b>system,</b> since both 1.0000 and 0.101010... are in {{standard}} form.|$|R
