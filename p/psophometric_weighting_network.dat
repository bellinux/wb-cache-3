0|1398|Public
50|$|In European practice, <b>psophometric</b> <b>weighting</b> may be, as {{indicated}} by context, equivalent to dBm0p, which is preferred.|$|R
5000|$|... dBrnC: dBrnC {{represents}} an audio level measurement, typically {{in a telephone}} circuit, relative to the circuit noise level, with the measurement of this level frequency-weighted by a standard C-message weighting filter. The C-message weighting filter was chiefly used in North America. The Psophometric filter is {{used for this purpose}} on international circuits. See <b>Psophometric</b> <b>weighting</b> to see a comparison of frequency response curves for the C-message <b>weighting</b> and <b>Psophometric</b> <b>weighting</b> filters.|$|R
25|$|Although A-weighting {{with a slow}} rms detector, as {{commonly}} used in sound level meters is frequently used when measuring noise in audio circuits, a different weighting curve, ITU-R 468 <b>weighting</b> uses a <b>psophometric</b> <b>weighting</b> curve and a quasi-peak detector. This method, formerly known as CCIR weighting, is preferred by the telecommunications industry, broadcasters, and some equipment manufacturers as it reflects more accurately the audibility of pops and short bursts of random noise as opposed to pure tones. <b>Psophometric</b> <b>weighting</b> is used in telephony and telecommunications where narrow-band circuits are common.|$|R
50|$|Although A-weighting {{with a slow}} rms detector, as {{commonly}} used in sound level meters is frequently used when measuring noise in audio circuits, a different weighting curve, ITU-R 468 <b>weighting</b> uses a <b>psophometric</b> <b>weighting</b> curve and a quasi-peak detector. This method, formerly known as CCIR weighting, is preferred by the telecommunications industry, broadcasters, and some equipment manufacturers as it reflects more accurately the audibility of pops and short bursts of random noise as opposed to pure tones. <b>Psophometric</b> <b>weighting</b> is used in telephony and telecommunications where narrow-band circuits are common.Hearing weighting curves are also used for sound in water.|$|R
50|$|<b>Psophometric</b> <b>{{weighting}}</b> {{refers to}} any weighting curve {{used in the}} measurement of noise. In the field of audio engineering it has a more specific meaning, referring to noise weightings used especially in measuring noise on telecommunications circuits. Key standards are ITU-T O.41 and C-message weighting as shown here.|$|R
50|$|Usually, noise means audible noise, in audio systems, {{broadcast}} {{systems or}} telephone circuits. In {{this case the}} weighting is {{sometimes referred to as}} <b>Psophometric</b> <b>weighting,</b> though this term is best avoided because, although strictly a general term, the word Psophometric is sometimes assumed to refer to a particular weighting used in telecommunications.|$|R
50|$|In {{the field}} of telecommunications, {{weighting}} filters are widely used in the measurement of electrical noise on telephone circuits, and {{in the assessment of}} noise as perceived through the acoustic response of different types of instrument (handset). Other noise-weighting curves have existed, e.g. DIN standards. The term <b>psophometric</b> <b>weighting,</b> though referring in principle to any weighting curve intended for noise measurement, is often used to refer to a particular weighting curve, used in telephony for narrow-bandwidth voiceband speech circuits.|$|R
50|$|It is {{important}} to realise that the 468 specification covers both weighted and 'unweighted' (using a 22 Hz to 22 kHz 18 dB/octave bandpass filter) measurement and that both use a very special quasi-peak rectifier with carefully devised dynamics (A-weighting uses RMS detection for no particular reason). Rather than having a simple 'integration time' this detector requires implementation with two cascaded 'peak followers' each with different attack time-constants carefully chosen to control the response to both single and repeating tone-bursts of various durations. This ensures that measurements on impulsive noise take proper account of our reduced hearing sensitivity to short bursts. This quasi-peak measurement is also called <b>psophometric</b> <b>weighting.</b>|$|R
40|$|Introduction This {{specification}} provides {{basic requirements}} for psophometers {{to be used}} for the measurement of noise and other interfering signals on international telephone circuits and circuit sections. 2 General To accomplish the measurements as stated above, a psophometer should have the following significant characteristics: a) The relative sensitivity of the instrument, at various frequencies, should be as specified by the <b>psophometric</b> <b>weighting</b> characteristics. b) The reference point for the sensitivity of the instrument should be 0 dBm (one milliwatt) at 800 Hz. c) The r. m. s. (root mean square) value of the weighted noise signal should be detected and displayed. d) The dynamics of the detector and display device should meet requirements given in 3. e) The overall accuracy of the instrument when being used in its normal range and environmental conditions should be ± |. 0 dB or better. Specific tests for accuracy of various aspects of th...|$|R
50|$|A {{psophometer}} usually {{incorporates a}} <b>weighting</b> <b>network.</b> The {{characteristics of the}} <b>weighting</b> <b>network</b> depend {{on the type of}} circuit under investigation, such as whether the circuit is used for high-fidelity music or for normal speech.|$|R
40|$|Circuit {{includes}} serial-in/parallel-out {{shift register}} and <b>weighting</b> <b>network</b> {{that are used}} to eliminate effects of noise and other nonrepetitive circuit transients. Register and <b>weighting</b> <b>network</b> average decisions from section of signal where decisions are more dependable or where differences between two consecutive samples are larger...|$|R
30|$|Thirdly, the fuzzy-analytic {{hierarchy}} {{process is}} used to calculate the subjective <b>weights</b> of <b>network</b> attributes, and α as an adjustment coefficient to integrate the objective weights and subjective <b>weights</b> of <b>network</b> attributes. Afterwards, the combined <b>weight</b> of <b>network</b> attributes is obtained.|$|R
5000|$|Psophometric voltage is {{a circuit}} noise voltage {{measured}} with a psophometer that includes a CCIF-1951 <b>weighting</b> <b>network.</b>|$|R
50|$|The {{weighting}} curve is specified by both a circuit diagram of a <b>weighting</b> <b>network</b> and {{a table of}} amplitude responses.|$|R
25|$|During {{his time}} there, he {{measured}} the amplitude/frequency response of human ears, {{and used the}} results to design the first <b>weighting</b> <b>networks.</b>|$|R
40|$|The {{design of}} a {{transmultiplexer}} capable of performing the bilateral conversion between one 1544 kbit/s digital signal (which represents 24 PCM coded voice channels) and two analog group signals (each one containing 12 voice channels in the 60 - 108 kHz band) is investigated. It is shown that an FIR filter bank required as part of such a transmultiplexer can be realized efficiently by cascading a discrete cosine transform processor and a <b>weighting</b> <b>network.</b> Fast convolution algorithms are derived for evaluating the cosine transform. A method of using the symmetry conditions to reduce the computation rate in the <b>weighting</b> <b>network</b> and an elegant hardware configuration for implementing it are also discussed...|$|R
40|$|In {{this paper}} {{the problem of}} Doppler {{frequency}} sidelobes control is addressed with reference to a WiFi-based Passive Bistatic Radar (PBR). In particular we show that the Ambiguity Function of typical WiFi transmissions usually yield a high sidelobes level which might strongly limit the detection capability of the PBR. Conventional <b>weighting</b> <b>networks</b> are shown to be ineffective against such Doppler sidelobes structures. Thus an innovative method is introduced to design effective <b>weighting</b> <b>networks</b> based on the solution of a constrained optimization problem. The performed analysis against both simulated and real data demonstrates that the proposed technique allows a significant improvement in terms of Peak to Sidelobes Ratio thus making the considered waveform more attractive for passive local area surveillance...|$|R
30|$|In {{the above}} formula, α can be {{dynamically}} adjusted. When α[*]=[*] 1, {{this means that}} only the objective <b>weights</b> of <b>network</b> attributes are considered. On the contrary, when α[*]=[*] 0, this means that only the subjective <b>weights</b> of <b>network</b> attributes are considered.|$|R
40|$|Vector {{is divided}} into three {{variable}} sections, and each section is processed by unary-to-binary decoder or adder. Resulting network performs on iterative collection process; all outputs of same kind are collected in same manner. In combination with simple comparator gates, <b>weighting</b> <b>network</b> can also be used as majority network...|$|R
40|$|This paper {{focused on}} PSL (peak {{sidelobe}} level) reduction for subarrayed beam scanning in phased array radars. The desired GSP (Gaussian Subarray Patterns) are achieved {{by creating a}} subarray <b>weighting</b> <b>network.</b> The GSP-based method could reduce PSL of array pattern; compared with the method based on the desired subarray pattern which is defined by ideal space-domain filter, the PSL reduction performance is improved remarkably. Further, based on the concept adopting superelement patterns to approximately express original subarray patterns, the simplified GSP-based method is proposed. So the dimension of each matrix required for creating the <b>weighting</b> <b>network,</b> which was originally {{the same as the}} element number, could be reduced to the same as the subarray number. Consequently, we achieve remarkable reduction of the computation burden; simultaneously, the PSL mitigation performance is degraded slightly. Simulation results demonstrate the validity of the introduced methods...|$|R
50|$|Bipartite network {{projection}} is an extensively used {{method for}} compressing information about bipartite networks. Since the one-mode projection is always less informative {{than the original}} bipartite graph, an appropriate method for <b>weighting</b> <b>network</b> connections is often required. Optimal weighting methods reflect {{the nature of the}} specific network, conform to the designer's objectives and aim at minimizing information loss.|$|R
40|$|We explore {{techniques}} to significantly improve the compute efficiency {{and performance of}} Deep Convolution Networks without impacting their accuracy. To improve the compute efficiency, we focus on achieving high accuracy with extremely low-precision (2 -bit) <b>weight</b> <b>networks,</b> and to accelerate the execution time, we aggressively skip operations on zero-values. We achieve the highest reported accuracy of 76. 6...|$|R
40|$|Neural {{network is}} a {{computational}} approach, which {{based on the}} simulation of biology neural network. This approach is conducted by several parameters; learning rate, initialized <b>weights,</b> <b>network</b> architecture, and so on. However, this paper would be focused {{on one of these}} parameters that is weights. The aim is to shed lights on the mutation <b>weights</b> through training <b>network</b> and its effects on the results. The experiment was done using backpropagation neural network with one hidden layer. The results reveal the role of mutation in escape from the local minima and making the chang...|$|R
30|$|Secondly, the entropy {{method is}} used to {{calculate}} the objective <b>weights</b> of <b>network</b> attributes.|$|R
30|$|If the {{variance}} is zero, {{or if it}} is low compared to edge <b>weights,</b> <b>network</b> distances are a good proxy for time delays (see “Identification of the source class” section). We refer to this setting as a low-variance regime, as opposed to the high-variance regime in which time delays are very noisy and network distances no longer work as a proxy for time delays.|$|R
30|$|We use the {{well-established}} backpropagation algorithm {{to adjust}} the <b>network</b> <b>weights.</b> When performing it, we backpropagate error gradients until the input layer, which allows us {{to adjust the}} word representations {{as if they were}} neural <b>network</b> <b>weights.</b>|$|R
40|$|Mars Advanced Radar for Subsurface and Ionosphere Sounding (MARSIS) {{is a low}} frequency, pulse-limited radar sounder and {{altimeter}} {{selected by}} ESA as a payload of the Mars Express mission. This work retraces the processing {{that leads to the}} extraction of parameters needed to perform the data inversion pointing out an effect caused by the <b>weighting</b> <b>network</b> application in presence of volume scattering that could jeopardize the backscattering-related geometry interpretation on a specific set of data...|$|R
30|$|W <b>network</b> <b>weighting</b> function.|$|R
5000|$|Initially, {{the genetic}} {{algorithm}} is encoded with the neural <b>network</b> <b>weights</b> in a predefined manner where one gene in the chromosome represents one <b>weight</b> link.The whole <b>network</b> is {{represented as a}} single chromosome. The fitness function is evaluated as follows: ...|$|R
30|$|Data {{processing}} and the <b>network</b> <b>weights</b> calculation.|$|R
30|$|Other methods {{exist to}} extract {{significant}} weights in graphs. For example, [44] used the hypergeometric distribution for finding the expected link <b>weights</b> for bipartite <b>networks</b> and measured the global p-value. Serrano et al. [45] used a disparity filtering method to infer significant <b>weights</b> in <b>networks.</b> Similar to our work, [46] proposed pair-wise connection probability by the configuration model {{and used the}} p-value to measure statistical significance of the links.|$|R
40|$|Classical methods from {{optimal control}} theory {{are used in}} {{deriving}} general forms for neural <b>network</b> <b>weights.</b> The <b>network</b> learning or application task is encoded in a performance index of a general structure. Consequently, different instances of this performance index lead to special cases of weight rules, including some well-known forms. Comparisons are made with the outer product rule, spectral methods, and recurrent back-propagation. Simulation results and comparisons are presented...|$|R
40|$|We {{study the}} {{structure}} of loops in networks using the notion of modulus of loop families. We introduce a new measure of network clustering by quantifying the richness of families of (simple) loops. Modulus tries to minimize the expected overlap among loops by spreading the expected link-usage optimally. We propose <b>weighting</b> <b>networks</b> using these expected link-usages to improve classical community detection algorithms. We show that the proposed method enhances the performance of certain algorithms, such as spectral partitioning and modularity maximization heuristics, on standard benchmarks. Comment: 8 pages, 20 figure...|$|R
40|$|Multi-robot {{concurrent}} {{learning on}} how to cooperatively work through the interac-tion with the environment {{is one of the}} ultimate goals in robotics and artificial in-telligence research. In this paper, we introduce a distributed multi-robot learning algorithm that integrates reinforcement learning and neural <b>networks</b> (<b>weighting</b> <b>network).</b> By retrieving continuous environment state and implicit feedback (re-ward), the robots can generate appropriate behaviors without deliberative hard coding. We test the learning algorithm in the “museum ” problem, in which robots collaboratively track moving targets. Simulation results demonstrate the efficacy of our learning algorithms. Key words...|$|R
40|$|Conventional {{training}} {{methods for}} neural networks involve starting al a random {{location in the}} solution space of the <b>network</b> <b>weights,</b> navigating an error hyper surface to reach a minimum, and sometime stochastic based techniques (e. g., genetic algorithms) to avoid entrapment in a local minimum. It is further typically necessary to preprocess the data (e. g., normalization) to keep the training algorithm on course. Conversely, Bayesian based learning is an epistemological approach concerned with formally updating the plausibility of competing candidate hypotheses thereby obtaining a posterior distribution for the <b>network</b> <b>weights</b> conditioned on the available data and a prior distribution. In this paper, we developed a powerful methodology for estimating the full residual uncertainty in <b>network</b> <b>weights</b> and therefore <b>network</b> predictions by using a modified Jeffery's prior combined with a Metropolis Markov Chain Monte Carlo method...|$|R
40|$|Abstract. Traditional {{short-term}} {{traffic flow}} forecasting of road usually based on back propagation neural network, {{which has a}} low prediction accuracy and convergence speed. This paper introduces a spline <b>weight</b> function neural <b>networks</b> which has a feature that the weight function can well reflect sample information after training, thus propose a short-term traffic flow forecasting method base on the spline <b>weight</b> function neural <b>network,</b> specify the network learning algorithm, and make a comparative tests bases on the actual data. The result proves that in short-term traffic flow forecasting, the spline <b>weight</b> function neural <b>network</b> {{is more effective than}} traditional methods...|$|R
