64|154|Public
50|$|The Mini Memory <b>plug-in</b> <b>module</b> also {{contains}} 4kB of RAM {{that can be}} used as a persistent RAM disk (it contained a button cell) or to load a machine-code program.|$|E
5000|$|Like most {{scripting}} languages, COFFEE is used {{to extend}} or modify the functionality of the host software. This technique is preferable to writing a so-called <b>plug-in</b> <b>module</b> using a traditional language such as C {{for a number of}} reasons, among them: ...|$|E
50|$|In 1999, SoftDev {{created a}} VBA-based plug-in known as AnimationLab, {{which is now}} up to version 4. This <b>plug-in</b> <b>module</b> allows users to create {{scenarios}} using the Key Frames Editor, assign a soundtrack for each actor, calculate the sound scene taking into account distance to the actors, speed, and overall environment.|$|E
5000|$|Front panels, <b>plug-in</b> <b>modules,</b> subracks {{and printed}} circuit boards ...|$|R
5000|$|... #Subtitle level 3: HP Network Node Manager i Smart <b>Plug-in</b> <b>Modules</b> ...|$|R
5000|$|... 1958 Modular sight {{direction}} finder with <b>plug-in</b> <b>modules</b> for varying frequencies and functions ...|$|R
5000|$|In 2011, DCS World was {{launched}} with concept of plug-in [...] "modules". This allowed using previously stand-alone simulations in same scenario while sharing assets. DCS: A-10C Warthog was made available as <b>plug-in</b> <b>module</b> for it, while DCS: Black Shark became DCS: Black Shark 2 {{as part of}} an upgrade to the simulation.|$|E
50|$|The {{game was}} {{followed}} by a sequel named A-10 Cuba!, originally as a stand-alone game on the Mac and Windows-based PC's, but later re-released on the Mac as a <b>plug-in</b> <b>module</b> for the original game. The Mac OS versions were produced by Parsoft, while the PC version of Cuba was a joint production with Activision. This partnership was renewed for Parsoft's final release, Fighter Squadron: The Screamin' Demons Over Europe.|$|E
50|$|The central {{computer}} in the modular infotainment platform, housed in the glove box, comprises two main units in a single housing - the Radio Car Control Unit and the MMX (Multi-Media eXtension) board. Along with its working and flash memories, the <b>plug-in</b> <b>module</b> integrates a Tegra processor from Nvidia, which can handle all online, media, voice control, navigation, and telephone functions. The new architecture {{makes it easy to}} update the hardware; the fact that the MMX board can be swapped out ensures the system is always up to date.|$|E
5000|$|Some window {{managers}} have a modular construction that enables <b>plug-in</b> <b>modules</b> to provide features as required.|$|R
50|$|CODESYS V3.x {{is based}} on the {{so-called}} CODESYS Automation Platform, an automation framework device manufacturers can extend by their own <b>plug-in</b> <b>modules.</b>|$|R
40|$|A new {{software}} configuration method using plug-in style components was {{established for the}} tool with the incremental development of software used in protein structural study. Our memory database provides the interface of data and functions among <b>plug-in</b> <b>modules</b> and its host program. A molecular structure browser program was developed together with several <b>plug-in</b> <b>modules</b> on our programming library that maintains graphics portability and user @interfaces. This plug-in software architecture is generally useful for large-scale software development and for prototyping parts of the system...|$|R
5000|$|The {{addressable}} by the CPU {{address space}} is segmented into regions {{for the system}} software, freely usable memory, pluggable extensions and the graphics memory. The frequently referred to simply as a machine language monitor designated system software is depending on the computer version on either 2KB or 4KB ROM chips housed, their memory addresses range from $ F000 to $ F7FF or $ FFFF. For Provision of variables uses the system software after the computer {{in addition to the}} immediate early region of memory ($0000 - $0100), so this is not for the user without further disposal.The addresses of the freely usable memory of almost 16 KB RAM submit to the Z and Z 1013.01 1013.16 from $0100 to $ 3FFF. If the system is extended to two RAM modules with 16 KB of RAM, this memory area is extended to address $ E000. When total shipments with 64 KB RAM Z 1013.64 he reaches to the required video memory for image representation, which follows from $ EC00 and extends to $ EFFF. For programming of the computer such as the 4 KB comprehensive the required languages Tiny BASIC 87 to load or with 10 KB much richer BASIC of KC earlier by cassette into memory. In the basic configuration with 16 KB RAM thus are, for example, after loading of Tiny BASIC about 11 KB of RAM to create BASIC programs available, so that a memory upgrade is recommended for larger programming projects. The programming can is on a <b>plug-in</b> <b>module,</b> so the usable memory at Z1013.01 and Z1013.16 does not change. 11For connecting peripherals to computers equipped with a cassette interface and a user port by a build in U855-PIO. These units are, in the case of Z1013.01 also to reject types. For expansion, there is a slot ("Bus Expansion") ready. 4 ...|$|E
40|$|The {{dissertation}} {{covers the}} process of automatic software testing. It describes fundamental principles of tests creation and presents common tools for concurrent integration. The main objective of the dissertation is improvement of the automatic testing process in the Department Corporate Technology Development Center of the Company Siemens Ltd., which was realized through the <b>plug-in</b> <b>module</b> for the TeamCity tool that makes reporting of test results more transparent. At {{the end of the}} dissertation, there are designed extensions of the <b>plug-in</b> <b>module</b> that could have a further benefit for automatic testing process by means of the TeamCity tool. The dissertation also includes the manual for easy installation of the implemented solution...|$|E
40|$|Vulnerabilities can be {{classified}} based on their location as application vulnerabilities, network vulnerabilities and host vulnerabilities. This thesis focuses on host vulnerabilities and can be divided in two parts. The first part describes Ferret, a new tool developed for checking host vulnerabilities. Ferret helps system administrators by quickly finding vulnerabilities that are present on a host. It is designed and implemented in a modular way: a different <b>plug-in</b> <b>module</b> is used for a specific vulnerability checked, and each possible output format is specified by a <b>plug-in</b> <b>module.</b> Ferret is freely available open-source software implemented in Perl. The {{second part of the}} thesis talks about the data analysis of host vulnerabilities. This exercise was conducted on two sets of data collected extensively for the purpose to understand how host vulnerabilities are evolving over a period of time...|$|E
5000|$|HP-IL Development <b>Module</b> (<b>plug-in</b> Application ROM <b>module</b> for HP-41C) ...|$|R
5000|$|... targetcli is a user space single-node {{management}} {{command line}} interface (CLI) for LIO. It supports all fabric modules {{and is based on}} a modular, extensible architecture, with <b>plug-in</b> <b>modules</b> for additional fabric modules or functionality.|$|R
40|$|XActor is a {{distributed}} transaction manager that affords transactional remote invocations over an open-ended set of transports. Its support to transactional interactions is dynamic, {{in the sense}} that the transaction manager fully exploits a collection of RMI mechanisms and transport protocols that grows with the addition of <b>plug-in</b> <b>modules</b> to running instances of XActor. A {{distributed transaction}} can employ any combination of the transports that the currently installed plug-ins provide. Two-phase commit (logging and failure recovery included) runs over any such combination of transports. Aimed at server-side application containers, XActor can be integrated with those systems in a way that allows its <b>plug-in</b> <b>modules</b> to take advantage of the dynamic deployment facilities of the container environment. 1...|$|R
40|$|Evaluation of {{computing}} system security requires {{knowledge of the}} vulnerabilities present {{in the system and}} of potential attacks against the system. Vulnerabilities can be classified based on their location as application vulnerabilities, network vulnerabilities, or host vulnerabilities. This paper describes Ferret, a new software tool for checking host vulnerabilities. Ferret helps system administrators by quickly finding vulnerabilities that are present on a host. It is designed and implemented in a modular way: a different <b>plug-in</b> <b>module</b> is used for each vulnerability checked, and each possible output format is specified by a <b>plug-in</b> <b>module.</b> As a result, Ferret is extensible, and can easily be kept up-to-date through addition of checks for new vulnerabilities as they are discovered; the modular approach also makes it easy to provide specific configurations of Ferret tailored to specific operating systems or use environments. Ferret is a freely available open-source software implemented in Perl...|$|E
40|$|This thesis {{deals with}} cues {{used by the}} human {{auditory}} system to identify the location of sound and methods for sound localisation based these cues, namely, vector based amplitude panning and ambisonics, which are described in detail. These methods have been implemented as a VST <b>plug-in</b> <b>module.</b> This thesis also contains listening tests of second order ambisonics along with acquired data analysis...|$|E
30|$|GPC is an {{independent}} <b>plug-in</b> <b>module</b> which can read the necessary electrical information, according to the mapping relationship of the program, within Ethernet to identify faults. All-in-one device obtains fault information of protection area and identifies the fault with the integrated decision recognition algorithm. When the identification result is uncertain, it starts {{a new round of}} negotiation and takes fault-tolerant measures to identify faulty components.|$|E
5000|$|Argo {{based on}} the W3A, an API for WWW browser applets. The browser {{featured}} <b>plug-in</b> <b>modules,</b> or [...] "applets", which allowed for the addition of new functionality without recompilation. Examples of such functionality provided by the applets includes adding support for the following: ...|$|R
50|$|There {{are many}} {{software}} packages available to merge text and images into VDP print files. Some are stand-alone software packages, however {{most of the}} advanced VDP software packages are actually <b>plug-in</b> <b>modules</b> for one or more publishing software packages such as Adobe Creative Suite.|$|R
25|$|Many {{oscilloscopes}} {{have different}} <b>plug-in</b> <b>modules</b> for different purposes, e.g.,high-sensitivity amplifiers of relatively narrow bandwidth, differential amplifiers, amplifiers with {{four or more}} channels, sampling plugins for repetitive signals of very high frequency, and special-purpose plugins, including audio/ultrasonic spectrum analyzers, and stable-offset-voltage direct-coupled channels with relatively high gain.|$|R
40|$|This {{thesis is}} focused on {{synthesis}} of audio signals and algorithm implementation by the help of technology designed for real-time processing. Analyzing individual methods of sound synthesis, the MIDI communication protocol and procedure of real-time signal processing. It is developed an appropriate software simulation,on ground of studying these aspects, implemented by using C++ language. A result of this work is sound generator supporting MIDI protocol as a <b>plug-in</b> <b>module</b> designed for Windows platforms...|$|E
40|$|The {{objective}} of the ESA funded project “Development of MERIS Lake Water Algorithms ” (January 2007 – June 2008) was to develop and validate a <b>plug-in</b> <b>module</b> for the BEAM toolbox that allows the retrieval of water quality parameters in lake waters from MERIS imagery. For this purpose, new algorithms were developed, based on the optical properties of lakes and atmospheric aerosols from different areas of Europe. The validation campaigns were carried out in eleve...|$|E
40|$|Output from a {{deterministic}} radiation transport code {{running on}} a CRAY SV 1 is imported into a standard distributed, parallel, visualization tool for analysis. Standard output files, consisting of tetrahedral meshes, are imported to the visualization tool {{through the creation of}} a application specific <b>plug-in</b> <b>module.</b> Visualization samples are included, providing visualization of steady state results. Different plot types and operators are utilized to enhance the analysis and assist in reporting the results of the analysis...|$|E
50|$|Distributing {{software}} in <b>plug-in</b> <b>modules</b> was also {{seen as the}} next big thing in copy protection, with an implementation very similar to game cartridges in entertainment systems. However, the impractical requirement of carrying around multiple modules, not to mention the potential impact on delicate pins, prevented widespread adoption.|$|R
50|$|Many {{oscilloscopes}} {{have different}} <b>plug-in</b> <b>modules</b> for different purposes, e.g., high-sensitivity amplifiers of relatively narrow bandwidth, differential amplifiers, amplifiers with {{four or more}} channels, sampling plugins for repetitive signals of very high frequency, and special-purpose plugins, including audio/ultrasonic spectrum analyzers, and stable-offset-voltage direct-coupled channels with relatively high gain.|$|R
50|$|The Parsytec CC (Cognitive Computer) (picture) {{system was}} an {{autonomous}} {{unit at the}} card rack level.The CC card rack subsystem provided the system with its infrastructure including power supply and cooling. The system could be configured as a standard 19 rack mountable unit which accepted the various 6U <b>plug-in</b> <b>modules.</b>|$|R
40|$|A <b>plug-in</b> <b>module</b> {{has been}} built for {{reception}} of optically transmitted data by gigabit applications. The optical receiving module {{is based on a}} 12 -channel optical receiver and an FPGA with embedded high-speed deserializers. It is compatible with the serializer ASIC used by many LHC systems. Due to its compact design, several of these modules could be plugged into VME readout systems. This module will be the principle element for both the CMS Preshower data concentrator card and the TOTEM front-end driver...|$|E
40|$|This paper {{presents}} our aspect-oriented system specialized for debugging named Bugdel. Bugdel is a <b>plug-in</b> <b>module</b> for Eclipse, {{which is}} an integrated development environment. Unlike other general-purpose aspect-oriented systems, Bugdel allows user to specify aspects using a graphical user interface. Furthermore, Bugdel provides new functions that AspectJ or others do not provide, since they break the modularity of classes. This paper discusses limitations of related general-purpose aspect-oriented systems, such as AspectJ, and shows the solutions that we have implemented in Bugdel. ...|$|E
40|$|This diploma thesis {{deals with}} design and {{implementation}} of complex software system for post-production of popular music. The system was implemented as a <b>plug-in</b> <b>module</b> in C++ language using JUCE application framework. The emphasis was on creating a well arranged and intuitive graphic user interface. The plug-in provides a set of audio effects and processors that can be connected into the desired graph structure. For less experienced users, there is a database of preset configurations usable {{for a variety of}} input signals...|$|E
40|$|Microscopic traffic {{simulation}} {{models have been}} widely accepted in the evaluations of new treatments in the surface transportation system. These include new highway, lane usage (e. g., high occupancy vehicle lane or high occupancy toll lane), speed limits (e. g., variable speed limit, and uniform or differential speed limits), etc. Additional needs such as considering lateral movements within the lane made researchers develop <b>plug-in</b> <b>modules</b> {{on the basis of}} application programming interface (API). With a recent initiation of IntelliDrive or cooperative vehicle infrastructure system, a traffic simulation research community has faced to consider directions for the future microscopic traffic simulation modeling tools. This paper conducted comprehensive assessments on the existing practices in the microscopic simulation modeling and future modeling needs, and recommended that the development of traffic simulation model independent <b>plug-in</b> <b>modules.</b> Additional recommendations including short-term and long-term approaches were discussed...|$|R
40|$|Using Moodle is a complete, {{hands-on}} {{guide for}} instructors {{learning how to}} use Moodle, the popular course management system (CMS) that enables remote web-based learning and supplements traditional classroom learning. Updated for the latest version, this new edition explains exactly how Moodle works by offering plenty of examples, screenshots and best practices for its many features and <b>plug-in</b> <b>modules...</b>|$|R
50|$|The {{standard}} was originally {{defined by the}} ESONE Committee as standard EUR 4100 in 1972, and covers the mechanical, electrical, and logical elements of a parallel bus (dataway) for the <b>plug-in</b> <b>modules.</b> Several standards have been defined for multiple crate systems, including the Parallel Branch Highway definition and Serial Highway definition. Vendor-specific Host/Crate interfaces have also been built.|$|R
