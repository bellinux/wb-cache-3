11|205|Public
5000|$|... #Caption: AMD DirectGMA {{is a form}} of DMA. It enables low-latency {{peer-to-peer}} data transfers between devices on the PCIe bus and AMD FirePro-branded products. Serial {{digital interface}} (SDI) devices supporting DirectGMA can write directly into the graphics memory of the GPU and vice versa the GPU can directly access the memory of a <b>peer</b> <b>device.</b>|$|E
50|$|In January 2011, UniPro Version 1.40 was completed. Its {{main purpose}} is full {{support for a}} new Physical Layer: M-PHY® {{including}} support for power modes change and <b>peer</b> <b>device</b> configuration. In July 2012 UniPro v1.40 has been upgraded to UniPro v1.41 to support the newer higher speed M-PHY v2.0. The UniPro v1.4x specifications have been released together with a formal specification model (SDL).|$|E
50|$|In UniPro version 1.1, {{an option}} was {{introduced}} to allow simple endpoint devices to implement {{only one of the}} two Traffic Classes if they choose to. This can be useful when device designers are more concerned with implementation cost than with control over frame arbitration. The connected L2 <b>peer</b> <b>device</b> detects such devices during the link initialization phase and can avoid using the missing Traffic Class.|$|E
40|$|A decentralised, {{distributed}} approach to performing authorisation involves receiving an authorisation request at a service providing device, for example 'Carol', and then retrieving trust information from other <b>peer</b> <b>devices</b> in the network. The gathered information {{is used by}} the device 'Carol' to make a well-informed authorisation decision...|$|R
50|$|In UniPro v1.4 {{connection}} setup {{is assumed to}} be relatively static: the parameters of the paired CPorts are configured by setting the corresponding connection Attributes in the local and <b>peer</b> <b>devices</b> using the DME. This will be supplemented by a dynamic connection management protocol in a future version of UniPro.|$|R
40|$|This paper details a {{mechanism}} to distribute time coded objects to devices in order to synchronise and control video playback within a web environment. We comment on a three-tier architecture of server, client and second screen and {{the implementation of a}} system that offers the functionality to track playback sessions and distribute them to <b>peer</b> <b>devices</b> in order to fulfil use cases and generate a communal aspect around a particular piece of media content...|$|R
40|$|Authentication in an ad-hoc {{network is}} {{established}} between a first device (for example a service-requesting device) {{and a second}} device (for example a service-providing device) using a third device (a <b>peer</b> <b>device).</b> An authentication request is transmitted from the first device to the second device. The second device transmits a query message {{to at least one}} third device (i. e. <b>peer</b> <b>device).</b> If the <b>peer</b> <b>device</b> has previously been authenticated with the first device, the <b>peer</b> <b>device</b> sends an authentication credential, for example an authentication key, to the first and second devices. Upon receiving the authentication credential, the first device sends the authentication credential to the second device. The second device then compares the authentication credential received from the first device with the authentication credential received from the third device, and authenticates the first device with the second device if the authentication credentials match. Preferably the authentication credential from the third (<b>peer)</b> <b>device</b> to the first device is encrypted...|$|E
3000|$|PCS {{based on}} the power level {{received}} from the corresponding <b>peer</b> <b>device</b> (i.e., the AP in UL). According to the proposal, the transmission power is reduced by Δ [...]...|$|E
40|$|Mobile Crowdsourcing System is an {{emerging}} service paradigm base on numerous personal smart devices, where the Deviceto- Device communication among opportunistically encountered participating devices is an indispensable part of task allocation, file transmission and data collaboration. Considering that participating devices are privately held and opportunistically encountered, we design the Trustworthy Device Pairing (TDP) scheme that realizes user-transparent sharing secret key negotiation and reliable <b>peer</b> <b>device</b> determination for trustworthy spontaneous D 2 D transactions. TDP is demonstrated {{to be effective}} based on our proof-of-concept implementation, and a further evaluation on efficiency will be conducted...|$|E
50|$|In {{addition}} to the L1.5 link power management the PACP {{is also used to}} access control and status parameters of the <b>peer</b> UniPro <b>device.</b>|$|R
30|$|For indoor localizations, {{the most}} popular and {{widespread}} technology used is Wi-Fi because it has become a commodity in every mobile device made nowadays. This reduces the cost and allows for leveraging the existing Wi-Fi infrastructure devices (i.e., base stations or access points) or other <b>peer</b> <b>devices</b> (i.e., other client devices in ad hoc mode) as reference nodes to obtain position information. Thus, using Wi-Fi for indoor localization represents a great opportunity to investigate efficient and low-cost solutions. Even though Wi-Fi may achieve acceptable performance, yet it still poses many limitations and challenges.|$|R
5000|$|The device {{acting as}} {{grandmaster}} {{can either be}} auto selected or can be specifically assigned (e.g., if the network is used in a professional environment that needs [...] "house clock" [...] (audio), or [...] "genlock" [...] (video), or if the timing hierarchy needs to be specified for other reasons). AVB devices typically exchange capability information after physical link establishment. If <b>peer</b> <b>devices</b> on a link are network synchronization capable they will start to exchange clock synchronization frames. If not, then an AVB timing domain boundary is determined (as shown in Figure 2).|$|R
40|$|Abstract—Adapting {{wireless}} {{devices to}} communicate within grid networks empowers us by providing {{range of possibilities}} [...] These devices create a mechanism for consumers and publishers to create modern networks with or without <b>peer</b> <b>device</b> utilization. Emerging mobile networks creates new challenges {{in the areas of}} reliability, security, and adaptability. In this paper, we propose a system encompassing mobility management using AAA context transfer for mobile grid networks. This system ultimately results in seamless task processing and reduced packet loss, communication delays, bandwidth, and errors. Keywords—Mobile Grid, AAA, Mobility Management. I...|$|E
40|$|Mobile Crowdsourcing is a {{promising}} service paradigm utilizing ubiquitous mobile devices to facilitate largescale crowdsourcing tasks (e. g. urban sensing and collaborative computing). Many applications in this domain require Device-to-Device (D 2 D) communications between participating devices for interactive operations such as task collaborations and file transmissions. Considering the private participating devices and their opportunistic encountering behaviors, {{it is highly}} desired to establish secure and trustworthy D 2 D connections in a fast and autonomous way, which is vital for implementing practical Mobile Crowdsourcing Systems (MCSs). In this paper, we develop an efficient scheme, Trustworthy Device Pairing (TDP), which achieves user-transparent secure D 2 D connections and reliable <b>peer</b> <b>device</b> selections for trustworthy D 2 D communications. Through rigorous analysis, we demonstrate the effectiveness and security intensity of TDP in theory. The performance of TDP is evaluated based on both real-world prototype experiments and extensive trace-driven simulations. Evaluation results verify our theoretical analysis and show that TDP significantly outperforms existing approaches in terms of pairing speed, stability, and security...|$|E
40|$|Bluetooth Service Discovery Protocol (SDP) {{enables a}} client {{application}} on {{a device to}} discover information about services on other Bluetooth devices. Every service is represented by a profile, identified by a 128 -bit Universally Unique Identifier (UUID). A match occurs on a <b>peer</b> <b>device</b> {{if and only if}} at least one UUID specified by the client is contained in one or more of its service records. We believe that the advantages of UUID-based matching to support service discovery are restricted to ad-hoc Bluetooth networks consisting of resource constrained devices. The more common case for applications using Bluetooth networks, is the existence of one or more resource rich devices (e. g., the Compaq iPAQ) in the network. This calls for a matching mechanism that uses semantic information associated with services and attributes to decide {{the success or failure of}} a query. We present an enhanced version of Bluetooth SDP that supports semantic matching and provides service registration. We evaluate the performance of this enhanced version of SDP and compare it with regular SDP. We show that enhanced SDP performs comparably to regular SDP in terms of Round Trip Time and matching time. I...|$|E
40|$|Ultrasound {{has been}} {{proposed}} as out-of-band channel for authentication of <b>peer</b> <b>devices</b> in wireless ad hoc networks. Ultrasound can implicitly contribute to secure communication based on inherent limitations in signal propagation, and can additionally be used explicitly by peers to measure and verify their relative positions. In this paper we analyse potential attacks on an ultrasonic communication channel and peer-to-peer ultrasonic sensing, and investigate how potential attacks translate to application-level threats for peers seeking to establish a secure wireless link. Based on our analysis we propose a novel method for authentic communication of short messages over an ultrasonic channel. 1...|$|R
30|$|Only {{a single}} subflow is active with this mode. MPTCP {{is able to}} keep the {{established}} connection open for retransmission time out (RTO) time after the active subflow is lost. This feature enables <b>peer</b> <b>devices</b> to continue data transfer with the open subflow after a new IP address is acquired for the same interface or from different interface. A handover for a smartphone can be from Wi-Fi to 3 G/ 4 G network after it is disconnected from the Wi-Fi network. Compared to the backup mode, this mode waits for two more round-trip times before the new MPTCP subflow is established and data can be sent.|$|R
40|$|Openness and {{adaptation}} are the fundamental properties of reflective middleware platforms. Self-managed or autonomic systems require this behaviour, and therefore, reflective middleware platforms are {{ideally suited to}} the support of such systems. However, new classes of self-managed applications increasingly require support for co-coordinated, distributed reconfiguration, and there is limited provision for this in current reflective middleware approaches. In this paper, we document a general, flexible architecture meta-model for the safe and valid adaptation of components {{that make up the}} implementation of coordinating middleware nodes distributed across <b>peer</b> <b>devices.</b> We also investigate the flexibility of this approach in supporting different reconfiguration types in different environmental conditions...|$|R
40|$|Part 4 : Network Security and Security ProtocolsInternational audienceIn {{this paper}} we study content {{protection}} techniques {{to defend against}} piracy for streaming content in home networks where multiple digital devices are connected into a peer-based cluster and seamlessly work together. We are {{particularly interested in the}} anonymous rebroadcasting attack where pirates re-distribute the per-content encrypting key or the decrypted plain content. In literature, to defend against an anonymous attack, content is usually built with different variations. For example, content is divided into multiple segments, each segment comes with multiple variations (e. g., watermarks), and each variation is differently encrypted. Each device only has the key to decrypt and play back one variation per segment through the content. The re-distributed keys can be linked back and used to identify the original devices (terms as traitors) who were given those keys and involved in the piracy. This technology works well for prerecorded content scenarios in which a trusted party outside the device pool can deliberately author the content with multiple variations. However it cannot be applied to a peer-based home network when the streaming content is brought into the home network via a <b>peer</b> <b>device</b> who is not a special trust party and who is not allowed to know the secret keys of other peer devices. On the other hand, the trend of the consumer appetite for digital content is increasingly switching from physical media to streaming and internet consumption. In this paper we have designed the first content protection system that allows a recording device inside the home network to bring the streaming content into the home network in a secure way that devices and only devices in the same home network can playback the recording. More importantly, the recorded content without variations can still be used to obtain forensic information, when anonymous piracy attacks occurs, to identify the source devices that participated in the piracy attack. The identified traitorous devices can be revoked for future content access. The technology described in this paper is used to enable the secure sharing of premium quality High Definition content across a consumer’s all audio-video devices at its home networks...|$|E
40|$|Abstract: More {{powerful}} smart devices come {{onto the}} market and {{into the hands of}} consumers every year. These devices provide less reliance on fixed mediums for information and content sharing by supporting peer-to-peer connections such as Wi-Fi Direct, Bluetooth and Near Field Communication. Technologies such as these enable resource sharing that is not hindered by fixed access point range or costly Internet connections. This new-found mobility has enabled a greater degree of freedom for smart device users to share and consume resources wherever they are. New technologies not only support unrestricted content sharing, but also introduce new threats to the security of personal and corporate information resident on smart devices. Peer-to-peer technologies do not provide a means to enable streamlined sharing for multiple files. It quickly becomes a cumbersome task to synchronise content such as files or calendars without a third-party application such as DropBox or iCloud, which may incur additional costs to the user. To combat this limitation, smart spaces can enable the sharing of resources on-the-go, whenever other capable devices are in range. Smart spaces provide a managed means for users to share and protect their resources. Although current smart spaces can manage user resources in a secure way, they lack the ability to allow users to define content sharing preferences and have them considered when access control is performed. Current smart spaces thus provide a greater degree of autonomy and security, but they do not support the measure of personalisation and control needed by today’s smart device users. In order to address the contents sharing and personalisation concerns relating to smart spaces, this dissertation proposes the concept of a Local Personal Smart space to provide user-tailored services to smart devices in close proximity. This research proposes a Local Personal Smart Space framework that is geared to provide secure resource sharing by supporting resources and access control policy management to perform access control locally on a <b>peer</b> <b>device</b> without the reliance on third parties. This dissertation defines a trust- and context-based access control model capable of catering to user preferences and the security of groups of devices and files through the use of local and global policies which are combined to consider the personal preference of the device owner and the security rules set by the group owner. To test the Local Personal Smart Space framework and its access control model, this research developed the SmartNet prototype to verify their effectiveness at providing user-tailored services and security for content resident on the devices. The SmartNet application also serves to verify the effectiveness of this research in achieving its research objectives. M. Sc. (Information Technology...|$|E
30|$|Ecma 392 {{standard}} {{is the first}} CR standard which aims to develop the communication standard for personal/portable devices to exploit the TVWS [3, 4]. Ecma 392 specifies the PHY and MAC protocols for personal/portable devices. Adaption to worldwide regulatory requirements and robust support for real-time traffic are two main characteristics of Ecma 392. Unlike the infrastructured network in IEEE 802.22 standard, two kinds of network architectures are supported by Ecma 392, which are master-slave and peer-to-peer networks, respectively. In the master-to-slave network, the dynamic frequency selection (DFS), transmit power control (TPC) and channel measurement are conducted by the master. However, these functions described above are coordinated by <b>peer</b> <b>devices</b> with a distributed manner in the peer-to-peer network.|$|R
40|$|We propose an {{architecture}} for {{digital rights management}} based on a renewable, random key pre-distribution (KPD) scheme, HARPS (hashed random preloaded subsets). The proposed architecture caters for broadcast encryption by a trusted authority (TA) and by "parent" devices (devices used by vendors who manufacture compliant devices) for periodic revocation of devices. The KPD also facilitates broadcast encryption by <b>peer</b> <b>devices,</b> which permits <b>peers</b> to distribute content, and efficiently control access to the content encryption secret using subscription secrets. The underlying KPD also caters for broadcast authentication and mutual authentication of any two devices, irrespective of the vendors manufacturing the device, and thus provides a comprehensive solution for securing interactions between devices {{taking part in a}} DRM system...|$|R
40|$|Basically {{near field}} {{communication}} is a cousin of Bluetooth but is far more advantageous in the most peculiar forms, being said because of its very short range which {{is no more than}} a few centimetres and having a data rate of 424 Kbits/sec. Near field communication or the NFC, its name itself suggest that data transfer at very close proximity. Which is one of its very key features that ensures the security of the data. NFC is standardized as ISO 18092 and uses RFID(Radio Frequency Identification) which is one very crux part of powering up the NFC tags, emulation cards or <b>peer</b> <b>devices.</b> NFC devices like smartphone’s and tablets have NFC either built into its phone or on to the battery of the phone...|$|R
5000|$|Commercially {{available}} mobile databases {{include those}} shown on this comparison chart. *Peer To <b>Peer</b> (P2P) or <b>Device</b> To Device ...|$|R
40|$|This report {{presents}} the methodology for designing context-driven views, {{to support the}} automatic se-lection and interpretation of the shared resources to be imported to the <b>devices</b> of different <b>peers</b> in a sematic community. First of all, we will introduce the concept of context and its model, a data structure that expresses knowledge on the user, {{the environment and the}} possible scenarios. We will then focus on the proposed methodology for selecting, by means of context information, the relevant data to be made available on the <b>peer’s</b> <b>device.</b> An application of the proposed methodology is the possibility to select data of interest for portable devices, where computation, memory, power and connectivity resources are limited, and thus, tailoring the available, usually too rich, data according to context is a mandatory task...|$|R
40|$|The {{number of}} {{different}} types of devices on the home network is expanding greatly. While this explosion of innovation provides compelling new devices to consumers, it problems with ensuring compatibility among these devices, and providing a useful overall user interface for them. This paper describes an experimental set-top box platform for home media applications. The key feature of this platform is that it can dynamically exchange code with other devices on the home network, allowing it to not only acquire new capabilities at runtime, but also provide new capabilities to <b>peer</b> <b>devices</b> on the network. These new capabilities can take the form of new data transmission protocols, CODECs, or user interfaces. We describe the underlying architecture of our platform, as well as the user interface that allows control over a variety of home devices...|$|R
40|$|The {{principle}} {{emphasis is}} to develop a methodology to formally verify correct synchronization communication of devices in a composed hardware system. Previous system integration efforts have focused on vertical integration of one layer on top of another. This task examines 'horizontal' integration of <b>peer</b> <b>devices.</b> To formally reason about communication, we mechanize a process algebra in the Higher Order Logic (HOL) theorem proving system. Using this formalization we show how four types of device interactions can be represented and verified to behave as specified. The report also describes the specification of a system consisting of an AVM- 1 microprocessor and a memory management unit which were verified in previous work. A proof of correct communication is presented, and the extensions to the system specification to add a direct memory device are discussed...|$|R
50|$|Insteon {{technology}} uses a dual-mesh networking topology {{in which}} all <b>devices</b> are <b>peers</b> and each <b>device</b> independently transmits, receives, and repeats messages.|$|R
40|$|In this paper, {{we propose}} a new Scalable Video Coding (SVC) quality-adaptive {{peer-to-peer}} television (P 2 PTV) system executed at the peers {{and at the}} network. The quality adaptation mechanisms are developed as follows: on one hand, the Layer Level Initialization (LLI) is used for adapting the video quality with the static resources at the peers {{in order to avoid}} long startup times. On the other hand, the Layer Level Adjustment (LLA) is invoked periodically to adjust the SVC layer to the fluctuation of the network conditions with the aim of predicting the possible stalls before their occurrence. Our results demonstrate that our mechanisms allow quickly adapting the video quality to various system changes while providing best Quality of Experience (QoE) that matches current resources of the <b>peer</b> <b>devices</b> and instantaneous throughput available at the network state...|$|R
40|$|The {{dream of}} having {{information}} {{while on the}} move anywhere anytime, is a reality. The challenging problems of sharing information must be overcome. First, due to the limited or absence of quality of service (QoS) in present day architectures, a very reliable architecture is needed to integrate mobile devices in fixed and mobile P 2 P networks. Second, efficient search technique is important to locate the required information. Third, strong and robust routing schemes are required to route information between these <b>peer</b> <b>devices.</b> Fourth, the load on peers has to be distributed to lightly loaded peers to achieve better system performance. We examine routing schemes and load sharing principles in the existing P 2 P architectures. The focus is on improving the architecture and providing routing schemes to efficiently use bandwidth in the P 2 P network. Load sharing schemes to enhance the overall performance and reliability of P 2 P systems are also addressed. Extended Super-Peer based file sharing Architecture (ESPA) for mobile and fixed <b>peer</b> <b>devices</b> is essential since the existing architectures lack QoS support and seamless integration of <b>peer</b> <b>devices.</b> We investigate routing schemes for ESPA architecture. A Static Path Capacity to Hop QoS (SPCHQ) routing is proposed to demonstrate the selection of an efficient path with more available bandwidth. We look at inaccuracies in the link state information during routing. Since, the available bandwidth changes dynamically, information becomes out-of-date. We define a probabilistic metric and propose two algorithms: Probabilistic Path Capacity (PPC) and Probabilistic Path Capacity to Hop (PPCH) that capture the dynamic nature of the available link state information and route data files in P 2 P networks. We also propose probabilistic QoS path selection with re-routing when congestion occurs. Since the probability of finding a good path is very much dependent on the accuracy of the available bandwidth or delay on the links in the P 2 P network, we propose a regression model to obtain the frequency of the occurrences of paths. To minimise the load on super-peers, load sharing techniques such as Periodic Push based Replication (PPR) and On-Demand Replication methods are proposed since the presence of non-uniform data distribution and dynamic network conditions cause very heavy load on the ESPA. In PPR, data is pushed by a super-peer to other super-peers based only on an access frequency threshold, whereas in ODR, data can be pulled by any other super-peers at any given time. Some of the super-peers may become unavailable due to heavy traffic load. These replication schemes ignore this, and do not indicate to how many super-peers data items need to be replicated. Therefore, enhanced approaches such as Reliable Periodic Push based Replication (RPPR) and Reliable Periodic Rejuvenation based Replication (RPRR) algorithms are proposed to enhance content availability and overall system reliability. Detailed analytical models and experiments of the proposed ESPA demonstrate that it not only reduces file download times by exploiting efficient QoS path selection algorithms, but also significantly improves the overall system reliability by deploying advanced data replication strategies...|$|R
40|$|Abstract: The {{emergence}} of fast, cheap embedded processors presents {{the opportunity for}} inexpensive processing to occur on the network interface. We are investigating how a system design incorporating such an intelligent network interface {{can be used to}} support streaming multimedia applications. We are developing an extensible execution environment, called SPINE, that enables applications to compute directly on the network interface and communicate with other applications executing on the host CPU, <b>peer</b> <b>devices,</b> and remote nodes. Using SPINE, we have implemented a video client that executes on the network interface, and transfers video data arriving from the network directly to the region of frame buffer memory representing the applications window. As a result of this system structure the video data is transferred only once over the I/O bus and places no load on the host CPU to display video at aggregate rates exceeding 80 Mbps. ...|$|R
40|$|Abstract—A feature {{common to}} many {{pervasive}} computing scenarios is that devices acquire {{information about their}} environment from peers through short-range ad-hoc wireless connections {{and use it to}} maintain a model of their current context. A fundamental issue in such situations, is that knowledge obtained from <b>peer</b> <b>devices</b> may vary in reliability with devices providing incorrect data either inadvertently out of ignorance or other limitations or intentionally in pursuit of malicious or self-serving goals. We describe a heuristic based on a Bayesian approach to infer which of the received answers is most likely to be correct. The suggested answers and the reputation values of the sources themselves are used to determine the most likely answer. We have implemented the techniques and evaluated them in a prototype system using the Glomosim network simulator, and show that our scheme improves data accuracy in low trust environments. I...|$|R
40|$|The {{emergence}} of fast, cheap embedded processors presents {{the opportunity for}} inexpensive processing to occur on the network interface. We are investigating how a system design incorporating such an intelligent network interface {{can be used to}} support streaming multimedia applications. We are developing an extensible execution environment, called SPINE, that enables applications to compute directly on the network interface and communicate with other applications executing on the host CPU, <b>peer</b> <b>devices,</b> and remote nodes. Using SPINE, we have implemented a video client that executes on the network interface, and transfers video data arriving from the network directly to the region of frame buffer memory representing the applications window. As a result of this system structure the video data is transferred only once over the I/O bus and places no load on the host CPU to display video at aggregate rates exceeding 80 Mbps. 1 Introduction Multimedia applications often move large amount [...] ...|$|R
40|$|Embedded {{networked}} {{devices are}} required to produce dependable outputs and communicate with <b>peer</b> <b>devices</b> given limited computing resources. These devices monitor and control processes within the physical world. They are used in applications related to environmental monitoring, telecommunications, social networking, and also life-critical applications in domains such as health care, aeronautics, and automotive manufacturing. For such applications, software errors can be costly- {{both in terms of}} financial and human costs. Therefore, software programs installed on these devices must meet the appropriate requirements. To guarantee this, one must verify that the implemented code meets the corresponding specifications. Manual trial-and-error validation of such applications, especially life-critical software programs, is not a feasible option. This work presents a verifying compiler developed for embedded network programs by ex-tending the RESOLVE verifying compiler with a software module that translates RESOLVE code to equivalent C code. Specifications and implementations for embedded networked applications are written in the RESOLVE language. The compiler supports automated verification, automati-cally generating mathematical assertions, which, if satisfied, ensure that the code is correct. Thes...|$|R
40|$|In {{this paper}} we show how an {{interactive}} {{system can be}} distributed among several <b>peer</b> <b>devices.</b> By {{taking advantage of the}} current trend towards ambient intelligent environments, we can make use of a combination of computing resources in the surrounding of the user to function as one logical interactive system; an interaction space. Our approach relies on the fact that nowadays most computing resources are network-enabled and publish their device profile using some special-purpose protocol. For this reason, federations of devices that support the tasks of the user can be composed automatically according to the requirements of these tasks. This distribution of the user interface over a federation of devices can be local or non-local. It raises the opportunity for supporting collaborative tasks with the same user interface with little or no extra effort from the user interface designer. Future tools supporting the design, creation and deployment of distributed interactive systems using device federations should maintain usability and usefulness of a dynamic distributed system. We use two different metrics to cope with these problems: interface completeness and interface continuity...|$|R
40|$|Abstract — When the node {{density in}} a network {{decreases}} below the level necessary to sustain ad-hoc and mesh networks, communication can succeed only by leveraging node mobility and transitioning to message-based communications. In the 7 DS (Seven Degrees of Separation) project, we have been investigating how to emulate two core Internet services, namely web access for information retrieval and email for delivering messages from mobile nodes to the Internet. We have implemented and evaluated a 7 DS prototype system that leverages search, feedback and propagation limits to build a scalable system that can deliver data to and from mobile nodes. 7 DS makes data exchange in disconnected networks possible by providing an application-level set of protocol services that will enable exchange of information between <b>peer</b> <b>devices.</b> It enables dynamic information exchange by using a proxy server, a multicast query system, a search engine, and a transport entity. With these entities, 7 DS can perform efficient and transparent data exchange among peers {{in the absence of}} a network connection. Data exchange with the larger Internet occurs when peers enter or exit the peer network. I...|$|R
