75|680|Public
25|$|Regarding {{production}} planning, {{there is}} a basic distinction between the push approach and the pull approach, with the later including the singular approach of just in time. Pull means that the production system authorizes production based on inventory level; push means that production occurs based on demand (forecasted or present, that is purchase orders). An individual production system can be both push and pull; for example activities before the CODP may work under a pull system, while activities after the CODP may work under a <b>push</b> <b>system.</b>|$|E
50|$|The European version {{connects to}} the web and email <b>push</b> <b>system</b> via the Vodafone GPRS network.|$|E
5000|$|Installation stock (Q, r) {{is also a}} <b>push</b> <b>system</b> as are echelon stock (Q, r) systems {{because neither}} imposes a limit {{on the number of}} orders in the system.|$|E
50|$|<b>Push</b> <b>systems</b> differ markedly. Unlike the “bottom-up,” demand-driven, pull systems, {{they are}} “top-down,” supply-driven systems whereby the {{supplier}} plans or estimates demand. <b>Push</b> <b>systems</b> typically accumulate large inventory stockpiles {{in anticipation of}} customer need. In IT, <b>push</b> <b>systems</b> often introduce waste through an over-abundance of “just-in-case” inventory, incorrect product or service configuration, version control problems, and incipient quality issues.|$|R
40|$|Abstract. We {{present a}} {{communication}} and component model for <b>push</b> <b>systems.</b> Surprisingly, despite {{the widespread use of}} many push services on the Internet, no such models exist. Our communication model contrasts <b>push</b> <b>systems</b> with client-server and event-based systems. Our component model provides a basis for comparison and evaluation of different <b>push</b> <b>systems</b> and their design alternatives. We compare several prominent <b>push</b> <b>systems</b> using our component model. The component model consists of producers and consumers, broadcasters and channels, and a transport system. We detail the concerns of each of these components. Finally, we discuss a number of open issues that challenge the widespread deployment of push or any other system on an Internet-wide scale. Payment models are the most important among these and are not adequately addressed by any existing system. We briefly present the payment approach in our Minstrel project. ...|$|R
40|$|Popular Internet {{information}} systems like the World-wide Web still require {{the user to}} actively locate and retrieve information which is a timeconsuming and tedious task. <b>Push</b> <b>systems</b> try to remedy this by reversing the communication pattern: information is actively disseminated to users. A large number of <b>push</b> <b>systems</b> is already available and these systems are gaining wide-spread use. The {{purpose of this paper}} is to present a reference architecture for such systems. It describes the general concepts, abstractions (broadcasting, channel), and components (broadcaster, receiver, transport <b>system)</b> of <b>push</b> <b>systems.</b> The properties and relations of components are presented and the main issues to be addressed by push architectures are discussed: scalability, network traffic, security, and e-commerce. Since <b>push</b> <b>systems</b> can allow executable content, the relations with mobile code systems are considered. A brief discussion of existing systems in respect to the reference architecture rounds out the paper...|$|R
5000|$|MRP (Materials Requirement Planning) is a <b>push</b> <b>system</b> because {{releases}} {{are made}} {{according to a}} master production schedule without regard to system status. Hence, no a priori WIP limit exists.|$|E
5000|$|Classic Base Stock System is, {{somewhat}} surprisingly, a <b>push</b> <b>system</b> {{because there}} is no limit on the amount of work in process in the system. This is because backorders can increase beyond the basestock level.|$|E
5000|$|... #Caption: The {{original}} meaning of up and pull, {{as used in}} operations management, logistics and supply chain management. In the pull system production orders begin upon inventory reaching a certain level, while on the <b>push</b> <b>system</b> production begins based on demand (forecasted or actual demand). The CONWIP is a hybrid between a pure push and pure pull system.|$|E
5000|$|... (K, S) systems (proposed by Liberopoulos and Dallery) are pull systems if K <∞ and are <b>push</b> <b>systems</b> otherwise.|$|R
30|$|<b>Push</b> <b>systems</b> {{refer to}} {{conventional}} inventory control and scheduling. In <b>push</b> <b>systems,</b> a schedule {{goes out to}} all of the various processes and each process attempts to work to this schedule. If a particular process experiences difficulties in keeping the pace, the processes upstream and downstream are usually unaware of it and keep working to the original schedule. Variances between scheduled activity and actual execution necessitate large inventories or multiple inventory stocks throughout the process.|$|R
25|$|Subject to the {{required}} throughput, handling systems {{can vary from}} simple two- or three-station pneumatic <b>pusher</b> <b>systems</b> to walking beams and conveyors.|$|R
50|$|The Internet Message Access Protocol (IMAP) {{provides}} {{support for}} polling and notifications. When a client receives a notification from a server, the client {{may choose to}} fetch the new data from the server. This makes retrieval of new messages more flexible than a purely <b>push</b> <b>system,</b> because the client can choose whether to download new message data.|$|E
50|$|CONWIP (CONstant work in process) are pull-oriented {{production}} control systems. Such {{systems can be}} classified as pull and push systems (Spearman et al. 1990). In a <b>push</b> <b>system,</b> the production order is scheduled and the material is pushed into the production line. In a pull system, {{the start of each}} product assembly process is triggered by the completion of another at the end of production line. This pull-variant is known for its ease of implementation.|$|E
50|$|Regarding {{production}} planning, {{there is}} a basic distinction between the push approach and the pull approach, with the later including the singular approach of just in time. Pull means that the production system authorizes production based on inventory level; push means that production occurs based on demand (forecasted or present, that is purchase orders). An individual production system can be both push and pull; for example activities before the CODP may work under a pull system, while activities after the CODP may work under a <b>push</b> <b>system.</b>|$|E
40|$|This {{dissertation}} {{presents an}} architectural model and a reference implementation for <b>push</b> <b>systems.</b> <b>Push</b> <b>systems</b> reverse the pull-based communication paradigm on the world-wide web {{and in most}} other distributed systems to support easier information dissemination and discovery for users. The pull model requires the user to issue a request whenever information is needed, whereas <b>push</b> <b>systems</b> support asynchronous information distribution: Whenever information of the user's choice becomes available, it gets distributed. In the push communication model, an information producer announces the availability of certain types of information, an interested consumer subscribes to this information, and the producer periodically publishes the information (pushes it to the consumer). This simplifies the discovery of information and provides timely information dissemination but introduces complex problems that challenge the widespread deployment of push systems: scalability to large numbers of users in terms of network bandwidth, timely notification of information availability, authenticity and integrity of information, and support for payment methods and business models. Current systems fall short in addressing these issues. Most available <b>push</b> <b>systems</b> actually use a pull-based distribution approach where clients check for new information at configurable intervals; frequently scalability is limited, many systems lack services to provide information authenticity and integrity, and moreover, the important issue of payment models is not adequately addressed by any existing system...|$|R
50|$|Smaller AX-16 Pusher antenna arrays were {{developed}} with {{about half the}} diameter of the AN/FRD-10 and were used at sites that required a smaller footprint, like Diego Garcia and other sites in the United Kingdom. The <b>pusher</b> <b>systems</b> were found to have lower performance, but not primarily due to the reduced antenna size. Most of the excess signal loss and higher noise floor was attributed to problems with the RF distribution network and higher transmission line losses due to the RG-8 coaxial cable that the <b>pusher</b> <b>systems</b> used.|$|R
40|$|In {{this report}} {{the problem of}} {{broadcast}} scheduling in <b>Push</b> broadcast <b>systems</b> is studied. We introduce an optimization approach that leads to well justified policies for <b>Push</b> broadcast <b>systems</b> with generalized cost functions. In particular, we apply our results to a <b>Push</b> broadcast <b>system</b> with different deadlines associated to the files while allowing the files to have unequal demand rates and lengths. We will show that our proposed policy covers some of the previously investigated <b>Push</b> <b>systems</b> as special cases and is applicable {{to a wide range}} of cost functions assigned to the files. We also calculate the optimal average cost for our experimental settings and show, through extensive simulation studies, that our results closely match that value for each experiment...|$|R
5000|$|He {{told me the}} UN was a [...] "pull" [...] system, not a [...] "push" [...] {{system like}} I {{had been used to}} with NATO, because the UN had {{absolutely}} no pool of resources to draw on. You had to make a request for everything you needed, and then you had to wait while that request was analyzed... For instance, soldiers everywhere have to eat and drink. In a <b>push</b> <b>system,</b> food and water for the number of soldiers deployed is automatically supplied. In a pull system, you have to ask for those rations, and no common sense seems to ever apply. (Shake Hands With the Devil, Dallaire, pp. 99-100) ...|$|E
50|$|The {{downside}} {{of this method}} {{is that it may}} not be suited for a more complex and repetitive production because it requires perfect contention of the WIP (raw materials and assemblies) on the shop floor: the materials issued to a production order shouldn't interfere with another production order or the next production order of the same kind. This can be done only if all work-steps required to complete the production order are limited more or less to a single work-place. That is why this kind of approach can be implemented for complex products only by using the push strategy. Push strategy means that a complex finished product is divided into many smaller assemblies and even assemblies may contain smaller assemblies and so on. All these assemblies will receive their own production order. These production orders are usually created automatically by the MRP\ERP - system. The ERP system uses Manufacturing resource planning (MRP) for the planning of production orders. Usually only the production planning for the finished product is done manually by the production planner, the assemblies are planned automatically based on backward scheduling. This is especially useful if the assemblies are being produced in another production line, workshop or plant. The {{downside of}} MRP and Push strategy is that it usually leads to larger stocks in the supply chain. That is why Push is regarded as the opposite of lean production because lean production involves the Pull strategy which means that any part should only be produced if there is a certain demand for it and therefore WIP will be small. Push strategy is when MRP is used also to schedule production orders for semi-finished products (assemblies) based on the forecasted demand of the finished product. These assemblies are put into stores without any reference to a certain production order of the finished product. The finished product may not even have had production orders released at the time the assembly was delivered to the store. That is why using MRP to schedule the execution of production orders is by definition a <b>push</b> <b>system</b> because releases are made according to a master production schedule without regard to system status. Hence, no a priori WIP limit exists. However MRP can be designed {{in such a way that}} it has an explicit WIP constraint. That means that assemblies are not produced further if a certain level of inventory is reached. MRP with a WIP constraint can be regarded as a pull system. However, even if a WIP constraint is implemented, Push-strategy generally means that the time, needed from the first operation or assembly until the finished good is obtained, is much longer as opposed to pull-strategy. This is due to the lead-times needed for each assembly and can be analyzed by using a technique called Value stream mapping. There is usually also much more handling: putting the assemblies into the stores, picking the assemblies from stores to the next production step (order) which uses the assembly to make another assembly or finished product. In reality, most firms use both strategies. For example: you could use MRP (push) without WIP constraint to schedule assemblies that are produced in another workshop, plant or external supplier and Kanban (pull) in your own plant. You can also use Kanban to schedule the assemblies in another workshop or plant, but it is usually not done when these assemblies are produced on large machines because with MRP the demand of several days can be comprised in bigger lot sizes of production orders of similar type in such a way that the workshops own scheduling system (MES) is then able to use the available machine-capacity better by bringing the production orders into an optimal sequence using suitable algorithms. This is usually the case when the machines are expensive, their number is relatively small and they have big output-capacities and setup time is expensive. Implementing Kanban in such a case would require to use a bigger number of smaller\cheaper machines, dedicated to certain production lines, in order to react more flexibly to the demand. Another requirement would be that the frequency of transports from\to that plant to be higher and the distance to that plant to be relatively small. These requirements however, cannot be accomplished in each case. On the other side, the workshop (supplier) which manufactures the assemblies may very well use a push strategy or a pull-strategy for delivering the needed materials to each of its own machines.|$|E
40|$|The {{conventional}} production control called 'push system of production control' {{is one of}} the most common production control methods nowadays. However, in the real-life environment. The performance of <b>push</b> <b>system</b> is subjected to various factors including buffer size, inventory sorting rule, and process interruption due to planned preventive maintenance. These factors seriously affect the performance of push systems. In this paper, the results of a simulation analysis on maintenance policies in a <b>push</b> <b>system</b> are presented. The performance of the <b>push</b> <b>system</b> under different operational conditions and the effects of different maintenance policies are evaluated. link_to_subscribed_fulltex...|$|E
40|$|In this paper, special transport-handling {{equipment}} is presented {{for the purpose}} of pushing wagons in a trans-shipment facility. During operations, the rotary tilter device, which is an integrated part of the trans-shipment process, leads to excessive wear of the steel wire rope used for pushing wagons by means of a <b>pusher</b> <b>system.</b> Therefore, the main task was to propose a suitable design modification of the given <b>pusher</b> <b>system</b> in order to eliminate excessive wear of the rope and, in turn, to prolong operational durability for this steel wire rope, {{as well as for the}} whole technical system...|$|R
50|$|The Falcon 9 v1.0 interstage, which {{connects the}} upper and lower stage for Falcon 9, is a carbon fiber {{aluminum}} core composite structure. Reusable separation collets and a pneumatic <b>pusher</b> <b>system</b> separate the stages. The stage separation system had twelve attachment points (later reduced to just three in the v1.1 launcher).|$|R
5000|$|... #Caption: <b>Push</b> back <b>system</b> {{designed}} to store pallets of motorcycles ...|$|R
40|$|Abstract: Amajor problem ofe-commerce is {{the high}} rate of {{customer}} initiated abortions of processes. It may be solved by the implementation of a <b>Push</b> <b>System</b> that supports the webshop. One major module of the <b>Push</b> <b>System</b> is the Pushflow Manager that proactively l eads customers through their processes by taking over tasks or triggering following activities. Its theoretical background, the Push Concepts, prototype implementation as well as transfer into practical surroundings are presented. ...|$|E
40|$|Abstract. The {{purpose of}} this article is to design and {{implement}} a XMPP-Based C/S system in which the server pushes information to the client actively. By realizing the client to connect to the server, client registration, the client to login the server and the server to push messages to client 4 core functions through XMPP, this article accomplished the core of a <b>push</b> <b>system.</b> In addition, the use of uninterrupted heartbeat package maintains a long connection, ensuring the client and the server connection. This article has important significance on future mobile <b>push</b> <b>system</b> research...|$|E
40|$|In this paper, {{we study}} a {{decentralized}} assembly system {{consisting of a}} single assembler who buys complementary components from independent suppliers under two contracting schemes: push and pull. In both schemes, the component suppliers are allowed to freely form coalitions (or alliances) among themselves to better coordinate their pricing or production decisions. We show that the sole driver of the inefficiency in a <b>push</b> <b>system,</b> {{which is due to}} horizontal decentralization of suppliers, is the number of alliances that were formed. Specifically, it is shown that in a <b>push</b> <b>system,</b> the assembler's profit, the total profit of all suppliers and the consumers' surplus are all decreasing in the number of coalitions, and are thus maximized when the grand coalition is formed. We further carry out a stability analysis of coalition structures to verify to what extent suppliers can reduce or eliminate the inefficiency due to their decentralization by forming alliances. We show that in a <b>push</b> <b>system</b> with more than two suppliers and a power demand distribution, myopic suppliers would act independently, resulting with a least efficient channel, which makes all channel members, as well as the end consumers, worse off. On the other hand, we prove that farsighted suppliers would form the grand coalition and thus be able to completely eliminate the inefficiency stemming from their decentralization. Finally, it is shown that, in contrast to a <b>push</b> <b>system,</b> in a pull system the suppliers can easily coordinate their production quantities to eliminate the inefficiency due to their decentralization. alliance formation, newsvendor model, stable coalitions, push and pull models...|$|E
30|$|A {{final point}} of {{consideration}} is {{with regards to}} data collection. This pertains to the directionality of the communication channel. There are two contrasting mechanism for collecting data from monitored hosts: push and pull. In pull systems the consumer initiates the data collection transaction. In <b>push</b> <b>systems</b> the producer initiates the transaction.|$|R
40|$|Abstract—In this report, {{the problem}} of {{broadcast}} scheduling in <b>Push</b> broadcast <b>systems</b> is studied. We introduce an optimization approach that leads to well justified policies for <b>Push</b> broadcast <b>systems</b> with time constraints. In particular, we apply our results to a <b>Push</b> broadcast <b>system</b> with different deadlines associated to the files while allowing the files to have arbitrary demand rates and lengths. We calculate the optimal average cost for our experimental settings and show, through extensive simulation studies, that the results obtained from our scheduling policy {{are very close to}} that optimal value for each experiment. I...|$|R
50|$|In larger {{aircraft}} (especially in T-tailed jets {{that might}} be vulnerable to deep stall), some stall protection systems also include a stick <b>pusher</b> <b>system</b> to automatically <b>push</b> forward on the elevator control, thus reducing the aircraft's angle of attack and preventing the stall. Both systems have to be tested and armed before takeoff and remain armed during flight.|$|R
40|$|A low {{inventory}} {{with high}} availability {{is the primary}} objective for make-to-stock production plants. Thus, production plants must choose between two approaches, a push production system or a pull production system. Despite {{the simplicity of the}} pull system, and numerous reports of successful implementation, the <b>push</b> <b>system</b> remains prevalent. Interviews with local managers reveal two obstacles to implementing pull systems: (1) lack of a precise definition for pull systems, and a general ignorance among managers regarding the concept of pull systems. As a result, some managers may believe they are running a pull system when they are actually using a push system; (2) lack of confidence in the ability of a pull system to handle significant demand variability. This study designs a make-to-stock production plant game to enable managers to determine whether: (1) they are using a push or a pull system; and (2) a pull system is superior to a <b>push</b> <b>system,</b> even under significant demand variability. The results support our belief that most participating managers still use a <b>push</b> <b>system,</b> and demonstrate that a pull system is superior. We anticipate that {{the results of this study}} will increase the willingness of make-to-stock companies and make-to-order companies (especially fashion product manufacturers) to re-examine the potential benefits of implementing a pull system, and encourage them to assess whether such a move is suitable...|$|E
40|$|This thesis {{presents}} a micro-payment {{framework for the}} Minstrel <b>push</b> <b>system</b> [19]. In Minstrel a producer of information announces the availability {{of different types of}} information. Whenever new information becomes available it is sent from the producer to the subscribed users. The sender (producer) may be interested in charging the subscribers for this service/data...|$|E
30|$|All {{annotations}} are encoded {{as distinct}} data messages {{and events that}} pass through the shared memory system. Updates are automatically sent to each software module or application (such as the software application of the local user or the software application of the remote user) by using a notification and a <b>push</b> <b>system</b> of events and data.|$|E
40|$|Abstract:- Combining the GPS location-based {{services}} and the latest Web 2. 0 technologies, this paper builds a scalable personalized mobile information pushing platform, which can provide user-friendly and flexible location-based service. We first propose a Location-based Data and Service Middleware based on Service-Oriented Architecture in order to implement Mobile Information <b>Pushing</b> <b>System</b> involved {{in a variety of}} formats of data integration and conversion, as well as a combination {{of a wide range of}} services. Then, we propose a novel 3 -D Tag-Cloud module, so that it can visualize useful retrieval information even in the limited mobile screen. Especially, we design a multi-dimensional collaborative filtering algorithms, in order to achieve dynamic personalized recommendation and mobile information sharing. Cooperating with some restuarants, we also develop a dynamic restaurant mobile location-based recommendation and discount counpons <b>pushing</b> <b>system.</b> The successful application of the application system do show the efficiency of our ideas...|$|R
40|$|We {{propose a}} {{supporting}} {{framework for the}} material control system Paired-cell Overlapping Loops of Cards with Authorization (POLCA), which combines the advantages of <b>push</b> <b>systems</b> and pull systems. In our load based version of the POLCA control system, we rely on a multi-product, multi-machine queueing network to determine release authorizations and allowed workloads. We report on our experiences in a metal shop, taken from Spicer Off-Highwa...|$|R
50|$|At launch, {{the first}} stage engine (Merlin) is ignited and {{throttled}} to full power while the launcher is restrained and all systems are verified by the flight computer. If the systems are operating correctly, the rocket is released and clears the tower in about seven seconds. The first-stage burn lasts about 2 minutes and 49 seconds. Stage separation is accomplished with explosive bolts and a pneumatically actuated <b>pusher</b> <b>system.</b>|$|R
