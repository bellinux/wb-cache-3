25|33|Public
5000|$|<b>PERT</b> <b>chart</b> {{explicitly}} defines {{and makes}} visible dependencies (precedence relationships) between the {{work breakdown structure}} (commonly WBS) elements.|$|E
5000|$|... #Caption: <b>PERT</b> <b>chart</b> for {{a project}} with five {{milestones}} (labeled 10-50) and six tasks (labeled A-F). There are two critical paths, ADF and BC.|$|E
50|$|Over the years, Booz {{has been}} {{credited}} with developing some of the important concepts in business. The firm coined the terms and developed the concepts of supply chain, supply chain management, product life cycle, the <b>PERT</b> <b>Chart</b> and organizational DNA.|$|E
5000|$|... #Caption: <b>PERT</b> <b>charts</b> {{like this}} provide a project {{management}} technique based on graph theory.|$|R
40|$|The {{success of}} {{software}} projects {{depends on the}} ability of a human planner to understand the relationships of tasks and their temporal uncertainty and hence the visualization thereof. In this paper we report on an empirical study that compares the performance of two techniques to visualize task relationships and temporal uncertainties: traditional “best-practice” <b>PERT</b> <b>charts</b> and recently introduced PlanningLines. Main results of the study are: (a) while <b>PERT</b> <b>charts</b> are well suited for reading single attributes, PlanningLines better support users in judging temporal task uncertainty; (b) both experiment rounds shows consistent results regarding the strengths and limitations of the techniques. Overall, these results suggest that a combination of <b>PERT</b> <b>charts</b> and PlanningLines has the potential to significantly improve the planning support of project managers and software engineers...|$|R
50|$|Methods {{engineers}} typically work {{on projects}} involving new product design, products with a high cost of production to profit ratio, and products associated with having poor quality issues. Different methods of project selection include the Pareto analysis, fish diagrams, Gantt <b>charts,</b> <b>PERT</b> <b>charts,</b> and job/work site analysis guides.|$|R
5000|$|Although the activity-on-arrow diagram (<b>PERT</b> <b>Chart)</b> {{is still}} {{used in a}} few places, it has {{generally}} been superseded by the activity-on-node diagram, where each activity is shown as a box or node and the arrows represent the logical relationships going from predecessor to successor as shown here in the [...] "Activity-on-node diagram".|$|E
5000|$|... #Caption: <b>PERT</b> <b>chart</b> for {{a project}} with five {{milestones}} (10 through 50) and six activities (A through F). The project has two critical paths: activities B and C, or A, D, and F - giving a minimum project time of 7 months with fast tracking. Activity E is sub-critical, and has a float of 1 month.|$|E
5000|$|Once {{a product}} {{breakdown}} structure has been created, work can then begin on creating a product flow diagram (PFD) (or product flowchart) which identifies the order of precedence of products and will typically include multiple and complex parallel paths. For practical purposes this flowchart {{is essentially the same}} as the <b>PERT</b> <b>chart</b> used for critical path scheduling and leads naturally {{to the development of a}} project schedule.|$|E
5000|$|... #Caption: <b>PERT</b> network <b>chart</b> for a seven-month {{project with}} five {{milestones}} ...|$|R
5000|$|... #Caption: <b>PERT</b> network <b>chart</b> for a seven-month {{project with}} five {{milestones}} (10 through 50) and six activities (A through F).|$|R
40|$|Traditional {{scheduling}} algorithms (using {{the techniques}} of <b>PERT</b> <b>charts,</b> decision analysis or operations research) require well-defined quantitative, complete sets of constraints. They are insufficient for scheduling situations where the problem description is ill-defined, involving incomplete, possibly inconsistent and generally qualitative constraints. The NUDGE program uses an extensive knowledge base to debug scheduling requests by supplying missing details and resolving minor inconsistencies. The result is that an informal request is converted to a complete description suitable for a traditional scheduler...|$|R
5000|$|This was {{the first}} GUI-based {{software}} application for project management. LisaProject {{was the first}} to simplify the project management process by allowing the user to interactively draw their project on the computer {{in the form of a}} <b>PERT</b> <b>chart.</b> Constraints could be entered for each task, and the relationships between tasks would show which ones had to be completed before a task could begin. Given the task constraints and relationships, a [...] "critical path", schedule and budget could be calculated dynamically using heuristic methods. Once this was complete, the schedule data could be viewed as a Gantt chart.|$|E
5000|$|... the PFD is a {{planning}} aid, not {{an outcome of}} planning (like a <b>PERT</b> <b>Chart</b> which looks similar), {{this is a common}} cause of confusion among the project managers- the PFD should contain all of the products of the Product Breakdown Structure (equivalent to a Work Breakdown Structure)- the PFD should be kept as simple/ high-level as possible for it to make sense (if additional detail is required, creating a supplementary, detailed PFD can be useful)- all products should be 'linked into' the PFD, even if it's only to the start and the finish products- it's vital not to get too 'hung up' on nuances such as the nature of each logical linkage in setting up a PFD ...|$|E
5000|$|MacProject {{was written}} by Debra Willrett at Solosoft, and was {{published}} and distributed by Apple Computer to promote the original Macintosh personal computer. It was developed from an earlier application written by Debra Willrett for Apple's Lisa computer, LisaProject. This was the first graphical user interface (GUI) for project management. There were many other project management applications on the market at the time, but LisaProject {{was the first to}} simplify the process by allowing the user to interactively draw their project on the computer {{in the form of a}} <b>PERT</b> <b>chart.</b> Constraints could be entered for each task, and the relationships between tasks would show which ones had to be completed before a task could begin. Given the task constraints and relationships, a [...] "critical path", schedule and budget could be calculated dynamically using heuristic methods.|$|E
40|$|Many {{diagrams}} {{encountered in}} numerous areas can be modeled as graphs. Examples include UML diagrams, <b>PERT</b> <b>charts,</b> network maps, electrical diagrams, and Web site maps. Graph drawing, or layout, is the positioning of nodes (objects) and the routing of edges (relations) in a graph {{in order to}} produce an aesthetically pleasing, comprehensible drawing of the underlying data. Visualizing such graphs has become essential in software and e-commerce, knowledge management, bioinformatics and many more areas. The Graph Layout Toolkit and the Graph Editor Toolkit, developed at Tom Sawyer Software, provide sophisticated application frameworks for graph modeling, layout, and visualization...|$|R
40|$|This thesis {{seeks to}} {{introduce}} the basic concepts and techniques of project management to packaging students and professionals. After reviewing these fundamentals, packaging students and professionals {{should be able to}} facilitate successful project management in the work place: Develop an appropriate project plan for specific objectives Understand the scheduling techniques such as work breakdown structure, Gantt <b>Charting,</b> <b>PERT</b> <b>Charting,</b> Network Diagramming, Assign resources and manage the project team Interpret and optimize a project plan or schedule Identify and manage project dependencies Communicate project status information appropriately and effectively Determine the impact of potential problems and make appropriate decisions for project adjustment...|$|R
40|$|Successful {{projects}} may {{be defined}} by criteria set prior to a project being commenced. The project success criteria may include time, budget and performance. A description of a successful project is often {{one that has been}} achieved "on time", "on budget" and "on performance". Project managers will utilise aids that enhance the possibility of achieving project success. A common aid used by project managers today is a project management tool. Project management tools typically provide a software environment that facilitates access to Gantt, network diagrams and <b>PERT</b> <b>charts.</b> The research has focused on performance as a project success criterion and the aids available for project manager use to achieve performance success criteria. The research found that the project management tools available today provide time and budget management capability but were not able to provide performance management capability. Project managers rely on specialists to utilise other tools to manage performance aspects of a project. The research outcome is to provide a method to include performance management within project management tools through {{the development of a new}} model framework called TRManager. TRManager is similar in concept to Gantt, network diagrams and <b>PERT</b> <b>charts</b> and provides performance management capability. TRManager is complementary to Gantt, network diagrams and PERT and therefore can be incorporated into project management tools with minimum effort. TRManager is extensible and permits other activities, such as asset management to be integrated into or used in conjunction with the project management activity. The research included consideration of how project managers were trained to manage a project that included a performance success criterion. The research found that with a new project management tool that included TRManager, project managers could be trained to carry out performance management...|$|R
40|$|The {{following}} introduces {{an extension}} to the architectureindependent VISTA toolkit called CaDaDis. CaDaDis creates visible accounts of cognitive model behavior through {{a set of}} Categorical Data displays. It includes a standard <b>Pert</b> <b>Chart</b> showing tasks by category (or resource), a Nonstandard <b>Pert</b> <b>Chart</b> that shows the temporal dependencies, and a Gantt chart that helps show occurrences of agent events along a time line. Perhaps most usefully, it can display categorical and numeric data generated by models as they run. Structured messages are sent on behalf of the cognitive model by several example script-based interfaces. This paper presents a series of examples of CaDaDis with three different cognitive architectures. For example, the displays show that the example models included in the Soar distribution have different structures...|$|E
40|$|ABSTRACT: We {{introduce}} {{an extension}} to an architecture-independent tool (VISTA) for creating displays of cognitive model behavior, the Categorical Data Display (CaDaDis). Our display offers several views of categorical data. It includes a standard <b>Pert</b> <b>Chart</b> showing tasks by category (or resource), a Nonstandard <b>Pert</b> <b>Chart</b> {{that shows the}} temporal dependencies, and a Gantt chart that helps show occurrences of agent events along a time line. Perhaps most usefully, it can display categorical and numeric data generated by models as they run. CaDaDis {{can be used by}} different cognitive architectures because it has a general interface and creates its displays based on structured messages across a network socket. Its use is illustrated with three, domain-distinct Soar and ACT-R models. 1...|$|E
40|$|AI {{automated}} plan synthesis programs ("planners") typically represent {{plans as}} a partially ordered network whose nodes are instants {{in time and}} whose arcs are precedence constraints. Such representations are essentially PERT charts. This paper provides an introduction to AI planners and illustrates {{the fact that many}} such <b>PERT</b> <b>chart</b> representations are created by a planner as it attempts to find a suitable plan. A planner's search must be guided if it is to produce suitable plans in realistic problem domains. One form of guidance is the imposition of constraints which must be satisfied by a valid plan. This paper concentrates on representing and reasoning about such constraints. Successful planning in some domains, e. g. job-shop scheduling, requires the recognition and satisfaction of constraints which prevent the simultaneous use of a shared resource by multiple agents. Such requirements can be expressed as disjunctive precedence constraints. In addition, the search for a valid plan is often structured so that rough plans are successively refined into plans with increased detail. In this refinement process, new constraints are often discovered. It should therefore be easy to add such new constraints. Finally, it is helpful to be able to express upper bound constraints on the elapsed time between two nodes in a <b>PERT</b> <b>chart</b> representation of a plan. Thus, this paper reports on knowledge representation and reasoning processes which facilitate: (1) disjunctive constraints, (2) the introduction of new constraints, and (3) upper bound constraints. A planner must backtrack when it is evident that further refinement of its current skeletal plan would be fruitless. Such an inconsistent state can be recognized when a plan's <b>PERT</b> <b>chart</b> representation contains an illegal cycle of positive overall length. When backtracking is required, dependency-directed backtracking is facilitated by recording "Nogood sets" of arcs whose simultaneous presence would result in such an illegal cycle. By using dependency-directed backtracking, chronological backtracking can be avoided. artificial intelligence, project planning, disjunctive constraints, temporal logic...|$|E
40|$|Feasibility {{analyses}} and systems engineering studies for a 20, 000 tons per day medium Btu (MBG) coal gasification plant {{to be built}} by TVA in Northern Alabama were conducted. Major objectives were as follows: (1) provide design and cost data to support {{the selection of a}} gasifier technology and other major plant design parameters, (2) provide design and cost data to support alternate product evaluation, (3) prepare a technology development plan to address areas of high technical risk, and (4) develop schedules, <b>PERT</b> <b>charts,</b> and a work breakdown structure to aid in preliminary project planning. Volume one contains a summary of gasification system characterizations. Five gasification technologies were selected for evaluation: Koppers-Totzek, Texaco, Lurgi Dry Ash, Slagging Lurgi, and Babcock and Wilcox. A summary of the trade studies and cost sensitivity analysis is included...|$|R
40|$|CPM-GOMS is a {{modeling}} method that combines the task decomposition of a GOMS analysis {{with a model}} of human resource usage {{at the level of}} cognitive, perceptual, and motor operations. CPM-GOMS models have made accurate predictions about skilled user behavior in routine tasks, but developing such models is tedious and errorprone. We describe a process for automatically generating CPM-GOMS models from a hierarchical task decomposition expressed in a cognitive modeling tool called Apex. Resource scheduling in Apex automates the difficult task of interleaving the cognitive, perceptual, and motor resources underlying common task operators (e. g. mouse move-and-click). Apex’s UI automatically generates <b>PERT</b> <b>charts,</b> which allow modelers to visualize a model’s complex parallel behavior. Because interleaving and visualization is now automated, it is feasible to construct arbitrarily long sequences of behavior. To demonstrate the process, we present a model of automated teller interactions in Apex and discuss implications for user modeling...|$|R
40|$|Medical therapy {{planning}} {{shares a}} number of properties of project management. It is, however, different in a few very important aspects [...] - most notably, the more complex notion of time it requires. Asbru is a language that can represent medical therapy plans in terms of time-oriented, skeletal plans. But due to its formal nature, it cannot be used directly by physicians. Therefore, we developed a visualization and user interface to deal with plans defined in Asbru, which can deal with most of its complexity. We present this interface (called AsbruView), and discuss its features and advantages over the two representations typically used in project management: Gantt and <b>PERT</b> <b>charts.</b> Areas of Research: Information Visualization, Time in problem solving 1. Introduction Medical therapy planning plays an increasingly {{important role in the}} everyday work of physicians. It is {{based on the idea that}} a physician does not have to invent a new treatment for each patient, but rather can make u [...] ...|$|R
40|$|The {{subject of}} the article is {{referring}} to the modelling and simulating {{of the formation of}} human resources by applying the PERT/CPM (Program Evaluation and Review Technique/Critical Path Method) and the taking into consideration of some risks associated to this activity. The aim of the article is to offer practical support to the management of organizations {{in order to make a}} formation program of human resources, which implies activities of precedence and interrelated, critical paths, the distribution of time resources and necessary costs for the fulfilment of the organizational objectives. <b>PERT</b> <b>chart,</b> critical path, risk, human resources, modelling, simulation. ...|$|E
40|$|The present {{general purpose}} {{automated}} planner/scheduler generates parallel plans {{aimed at the}} achievement of goals having imposed time constraints, with both durations and start time windows being specifiable for sets of goal conditions. Deterministic durations of such parallel plan activities as actions, events triggered by circumstances, inferences, and scheduled events entirely outside the actor's control, are explicitly modeled and may be any computable function of the activity variables. The final plan network resembles a <b>PERT</b> <b>chart.</b> Examples are given from the traditional 'blocksworld', and from a realistic 'Spaceworld' in which an autonomous spacecraft photographs objects in deep space and transmits the information to earth...|$|E
40|$|Abstract: Approaches {{to shorten}} {{workflow}} execution time {{have been discussed}} in many area of computer engineering such as parallel and distributed systems, a computer circuit, and <b>PERT</b> <b>chart</b> for project management. To optimize workflow model structure of workflow, an approach with corresponding algorithms is proposed to cut timed critical path of workflow schema, which has the longest average execution time path from the start activity to the end activity. Through systematically analyzing the dependency relationships between tasks at build-time, traditional optimization method of critical path is improved through adding selective and parallel control structures into workflow schemas. Data dependency rules are converted to control dependency rules according to semantic rules mined. Further more, consistency between tasks is guaranteed. Finally, to explain validity of the algorithm proposed, an experiment is provided to compare optimized model with original using critical path identification algorithm. [Nature and Science. 2005; 3 (2) : 65 - 74]...|$|E
40|$|The {{television}} and film industries {{are used to}} working on large projects. These projects use media and documents of various types, ranging from actual film and videotape to items such as <b>PERT</b> <b>charts</b> for project planning. Some items, such as scripts, evolve over a period and go through many versions. It is often necessary to attach information to these “objects” in order to manage, track, and retrieve them. On large productions there may be hundreds of personnel who need access to this material and who in their turn generate new items which form {{some part of the}} final production. The requirements for this industry in terms of an information system may be generalized and a distributed software architecture built, primarily using the internet, to serve the needs of these projects. This architecture must enable potentially very large collections of objects to be managed in a secure environment with distributed responsibilities held by many working on the production. Copyright © 2005 by the Society of Motion Picture and Television Engineers, Inc...|$|R
50|$|Control flow {{diagrams}} {{were developed in}} the 1950s, and are widely used in multiple engineering disciplines. They {{are one of the}} classic business process modeling methodologies, along with flow charts, data {{flow diagrams}}, functional flow block diagram, Gantt <b>charts,</b> <b>PERT</b> diagrams, and IDEF.|$|R
50|$|The FFBD {{notation}} {{was developed}} in the 1950s, and is widely used in classical systems engineering. FFBDs are one of the classic business process modeling methodologies, along with flow charts, data flow diagrams, control flow diagrams, Gantt <b>charts,</b> <b>PERT</b> diagrams, and IDEF.|$|R
40|$|Introduction Business {{processes}} have intrinsic parallelism {{given by}} the relative independence of some activities. Parallelizing a process might "dramatically reduce cycle times and the resultant costs" [5], but it might lead to anomalous behavior, like deadlock or useless activities. There are three main approaches to avoid behaviorally incorrect models, a notion that is not even well defined: 1) Build a model and then verify its properties (e. g., building the space state, or finding net invariants [2]). 2) Build a model that is correct by construction (e. g., using activity annotations [1] akin to parbegin parend pairs). 3) Use only small models by abstracting models and submodels. The first approach does not explain why or where a particular model has behavioral problems. The second approach constrains the forms of parallelism: {{it is impossible to}} model a <b>PERT</b> <b>chart.</b> The third approach is just a rule of thumb that may lead to oversimplified models. This work intends to: defi...|$|E
40|$|In this paper, {{we propose}} a new 3 D {{visualization}} technique for hierarchical information. This technique {{is based on}} the nested box metaphor, a familiar concept for any users. By using semi-transparent rendering, the system controls the complexity of the information presented to the user. With several 3 D interaction techniques provided by the system, the user can recognize and inspect the information structure intuitively. Normally, the user puts on the VR equipment to use the system, but the system is also accessible through a conventional CRT display. 1 Introduction Today, we must face many kinds of information which are difficult to represent in 1 D or 2 D, because they are too complex and do not fit into the current display's size and resolution. Examples of such information include large software structures, database schemes, organization structures, a huge project's <b>PERT</b> <b>chart,</b> traffic control information, and network management. All of them are huge, and it is quite hard to visual [...] ...|$|E
40|$|CPM X is a {{computer}} program that predicts sequences of, and amounts of time taken by, routine actions performed by a skilled person performing a task. Unlike programs that simulate {{the interaction of the}} person with the task environment, CPM X predicts the time course of events as consequences of encoded constraints on human behavior. The constraints determine which cognitive and environmental processes can occur simultaneously and which have sequential dependencies. The input to CPM X comprises (1) a description of a task and strategy in a hierarchical description language and (2) a description of architectural constraints in the form of rules governing interactions of fundamental cognitive, perceptual, and motor operations. The output of CPM X is a Program Evaluation Review Technique (<b>PERT)</b> <b>chart</b> that presents a schedule of predicted cognitive, motor, and perceptual operators interacting with a task environment. The CPM X program allows direct, a priori prediction of skilled user performance on complex human-machine systems, providing a way to assess critical interfaces before they are deployed in mission contexts...|$|E
40|$|Abstract. The {{scheduling}} {{of tasks}} and the allocation of resource in medium to large-scale development projects is an extremely hard problem {{and is one of}} the principal challenges of project management due to its sheer complexity. As projects evolve any solutions, either optimal or near optimal, must be continuously scrutinized in order to adjust to changing conditions. Brute force exhaustive or branch-and-bound search methods cannot cope with the complexity inherent in finding satisfactory solutions to assist project man-agers. Most existing project management (PM) techniques, commercial PM tools, and research prototypes fall short in their computational capabilities and only provide passive project tracking and reporting aids. Project managers must make all major decisions based on their individual insights and experience, must build the project database to record such decisions and represent them as project nets, then use the tools to track progress, perform simple consistency checks, analyze the project net for critical paths, etc., and produce reports in various formats such as Gantt or <b>Pert</b> <b>charts.</b> Our research has developed a new technique based on genetic algorithms (GA) that automatically deter-mines, using a programmable goal function, a near-optimal allocation of resources and resulting schedule that satisfies a given task structure and resource pool. We assumed that the estimated effort for each task is known a priori and can be obtained from any known estimation method such as COCOMO. Based on th...|$|R
40|$|Glaciers move. If the {{geological}} conditions are right, they move inexorably toward thesea. Anyone who has visited {{and stood on}} a glacier {{in areas such as}} Alaska’s Inland Passage is impressed by the dynamism and fluidity of the process. Glacial moraines are amazing flowing rivers of rock. Analogously, project management has been engaged in an inexorable movement toward the human side of the enterprise. The field of project man-agement is one that has always been characterized by its joint emphasis on a blend of technical elements (e. g., <b>PERT</b> <b>charts,</b> beta distributions, earned value analysis, resource leveling) coupled with its vital connection to behavioral and management concepts. While numerous tools, techniques, and quantitative aids were developed in the 1960 s and 1970 s, people and teamwork have become crucial issues {{at the turn of the}} millennium. Our interest in this topic has been an enduring one, starting almost two decades ago (Slevin and Pinto, 1986, 1988; Slevin and Pinto, 1992). We have long noted that projects are not successful because of the use of the latest project management techniques; they occur as the result of understanding the role that people play in fostering an environment for success. Many of these issues are addressed in a recent collection of new research studies published by the Project Management Institute (Slevin, Cleland, and Pinto, 2002). Researc...|$|R
40|$|The Problem: Planning and {{monitoring}} are interdependent tasks {{that arise in}} a wide range of contexts, from small-scale corporate purchasing efforts to large-scale civil engineering projects. These tasks are also complex and difficult, involving many subtasks. The question is: how best should computer power be applied to assist humans in accom-plishing planning {{and monitoring}}? Motivation: Humans and computers exhibit broadly different strengths in performing reasoning tasks. For example, humans often excel when insight and judgment are required, while computers often excel when the focus is on scanning and testing of information sets. Both of these broad categories of tasks arise during planning and monitoring, and thus a good approach would seem to be one of constructing an interactive, shared-initiative environment for planning and monitoring—one in which humans and computers can each contribute according to their relative strengths. Previous Work: Traditional artificial intelligence approaches have placed computers at the center of planning and monitoring activity [4], while traditional management science approaches such as software-supported GANTT and <b>PERT</b> <b>charts</b> have placed humans at the center of this activity [2]. In each case, the non-central participant, human or computer, is relegated to a significantly diminished role. More recently, mixed-initiative planning systems from artificial intelligence and decision-support systems from management science have attempted to increase the degree of human-computer collaboration during planning and monitoring [3, 2]. However, the underlying representations tha...|$|R
