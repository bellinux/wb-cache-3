17|528|Public
30|$|In addition, the RTP packetization {{modality}} {{is single}} network abstraction layer (NAL) unit mode (one NAL unit/RTP payload), {{the division of}} original stream into many RTP substreams leads to an increase {{of the number of}} RTP headers. To limit the multiplications of header information, the interleaved RTP packetization mode allows multitime aggregation packets (NAL units with different time stamps) in the same RTP payload. In our case, we make the assumption that RoHC mechanisms provide RTP/UDP/IP header compression from 40 to 4 [*]bytes in average, which is negligible compared to RTP packet sizes, and we still <b>packetize</b> one NAL unit per RTP payload.|$|E
40|$|Abstract — The {{ubiquitous}} {{nature of}} IP (Internet Protocol) networks and cost advantage {{have led to}} the convergence of TDM (Time Division Multiplexing) traffic into the IP network. The “Circuit Emulation Services over Packet Switching Network (CESoPSN) ” is a technology to <b>packetize</b> the TDM traffic and transport it to the packet network. This technology also can be used in PON (Passive Optical Network) system. There are some challenges in realizing virtual circuits over PON. We have designed a FPGA-based chip to solve these challenges. This paper discusses the design architecture of the chip and the result of simulation of clock recovery...|$|E
40|$|This paper {{deals with}} the packetization {{interval}} of haptic media in networked virtual environments. We here handle work in which a user moves an object by manipulating a haptic interface device. In previous studies, we <b>packetize</b> haptic media on capturing them. In this paper, we propose a scheme which lengthens the packetization interval and evaluate {{the efficiency of the}} work by experiment. Experimental results show that the packetization interval of several milliseconds produces higher efficiency of the work. We also examine the influences of the packetization interval and network latency on the efficiency of the work in the proposed scheme. Categories and Subject Descriptor...|$|E
50|$|<b>Packetized</b> Elementary Streams (PES) are {{elementary}} streams <b>packetized</b> into {{packets of}} variable lengths, i.e., divided ES into independent chunks where {{cyclic redundancy check}} (CRC) checksum was added to each packet for error detection.|$|R
50|$|<b>Packetized</b> Elementary Stream (PES) is a {{specification}} {{defined by}} the MPEG communication protocol (see the MPEG-2 standard) that allows an elementary stream to be divided into packets. The elementary stream is <b>packetized</b> by encapsulating sequential data bytes from the elementary stream inside PES packet headers.|$|R
5000|$|Typical {{channelization}} {{methods include}} <b>packetizing,</b> frequency differentiation, {{time division multiplexing}} ...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This memo describes a scheme to <b>packetize</b> an H. 261 video stream for transport using the Real-time Transport Protocol, RTP, {{with any of the}} underlying protocols that carry RTP. The memo also describes the syntax and semantics of the Session Description Protocol (SDP) parameters needed to support the H. 261 video codec. A media type registration is included for this payload format...|$|E
40|$|Recently, {{integrating}} connectionless (CL) and connection-oriented (CO) traffic {{has been}} of considerable interest. While CO traffic is often transferred by asynchronous transfer mode (ATM), it is preferable to use multiprotocol label switching (MPLS) for CL traffic. To <b>packetize</b> CL and CO traffic flexibly and efficiently, we propose a general packetization mechanism, the 'quantum packet' method. In view of the increasing need to integrate CL and CO traffic, we use a Markov model to analyze the packet loss ratio and the average packet transfer delay when {{these two types of}} traffic are integrated under three multiplexing schemes. The results provide us with {{a better understanding of the}} behavior of the system, as well as valuable insights into the development of integrated networks. © 2004 Elsevier B. V. All rights reserved. link_to_subscribed_fulltex...|$|E
40|$|A fast {{algorithm}} {{based on}} a butterfly structure is presented that demultiplexes the symbols of {{a particular type of}} MC-MA (Multi-Carrier Multiple-Access) modulation previously proposed for indoor radio communications [1]. A special transform is used to <b>packetize</b> the different symbols on the down-link such that the code sequences associated with the different symbols are transmitted synchronously at the base station. The input to the FFT bins is defined as a symboldependent combination of Walsh-Hadamard codes [2][3][4]. We derive a fast arquitecture that can combine the common redundancy found in the Walsh-Hadamard and the Inverse Fourier Transform. In the direct implementation, the receiver would compute the IFFT (as in OFDM) before the Walsh Hadamard transform. The proposed algorithm evaluates both transforms in a single step. A general expression for the butterfly weights is derived and the savings in computational complexity in terms of the frame length is evaluated...|$|E
5000|$|A <b>packetized,</b> {{prioritized}} data format, providing {{flexibility of}} services and extensibility.|$|R
5000|$|Voice over Asynchronous Transfer Mode (VoATM) is a data {{protocol}} used {{to transport}} <b>packetized</b> voice signals over an Asynchronous Transfer Mode (ATM) network. [...] In ATM, the voice traffic is encapsulated using AAL1/AAL2 ATM packets. VoATM over DSL {{is a similar}} service, {{which is used to}} carry <b>packetized</b> voice signals over a DSL connection.|$|R
5000|$|<b>Packetized</b> stream allows muxing into {{audio and}} video {{containers}} (e.g. MKA/MKV, NUT).|$|R
40|$|Abstract—We {{study the}} problem of packetizing {{embedded}} multimedia bitstreams to improve the error resilience of source (compression) codes. This problem is important because of the increasing popularity of embedded compression methodology [1]–[7] and its suitability for scalable streaming media [8], [9] over IP or/and mobile IP. We study various packetization schemes against packet erasure at both low and high bit rates. Maximizing packetization efficiency for embedded bitstreams is formulated as a discrete optimization problem and globally optimal packetization (OP) algorithms are proposed under different settings. Suboptimal packetization algorithms are also devised to reduce {{the complexity of the}} OP algorithms. In order to assess their effectiveness, the proposed packetization algorithms are used to <b>packetize</b> embedded image and video bitstreams with simulated packet loss. Experimental results show that our OP algorithms slightly outperforms suboptimal ones. In addition to confirming the superiority of the OP algorithms, these results also provide justification of heuristic packetization methods published in the literature [10], [11]. Index Terms—Error resilience, multimedia communication, multimedia data compression, packetization, scalable streaming media. I...|$|E
40|$|To {{handle the}} {{expected}} increase in data {{rate of the}} LHCb experiment after the upgrade, a new FPGA based DAQ system has been proposed. As {{a part of this}} new DAQ system a Dynamically Adaptive Header Generator has been designed and implemented to <b>packetize</b> the streaming data coming, from the Front-end electronics of the detectors, for easy access and processing by the Servers. This module also dynamically generates a new data stream by dropping datasets in a controlled fashion in the event of receiving a back pressure signal from the downstream modules. This paper details an architecture that address the need for a DAQ system that effectively balances the 3 conflicting requirements of Real-time operation, Data Integrity and System stability. A synthesizable Front-End Source Emulator has also been implemented to generate data patterns required to test the Header Generator module. This {{can be used as a}} test bench for the Header Generator module or a as a standalone module that can be integrated with other systems as required. A system comprising of both the Source Emulator and the header Generator have been implemented on an Altera Stratix IV device and the results discussed...|$|E
40|$|With {{the advent}} of mobile devices with large displays, it is {{intuitive}} and natural for users to interact with an application on a mobile device using multi-touch gestures. In this paper, we propose that these multi-touch gestures can be streamed on-the-fly among multiple participating users, {{making it possible to}} engage users in a collaborative or competitive experience. Such multi-touch streams, featuring very low streaming bit rates, can be rendered on receivers to precisely reconstruct the states of an application. We present the challenges, system framework, embedded algorithm design, and real-world evaluation of TouchTime, a new system that has been designed from scratch to facilitate the streaming of multi-touch gestures among multiple users. By seamlessly combining local computation on mobile devices and services from the “cloud, ” we explore the design space of suitable mechanisms to represent and <b>packetize</b> multi-touch gestures, and of practical protocols to transport concurrent live multi-touch streams over the Internet. Specifically, we propose an auction-based reflector selection algorithm to achieve the minimal end-to-end delay in a live multi-touch streaming session. To demonstrate TouchTime, we have developed a new real-world music composition application — called MusicScore — using the Apple iPad Programming SDK, and used it as our running example and experimental testbed to evaluate our design choice...|$|E
50|$|<b>Packetized</b> Elementary Stream (PES) is a {{specification}} in the MPEG-2 Part 1 (Systems) (ISO/IEC 13818-1) and ITU-T H.222.0 {{that defines}} carrying of elementary streams (usually {{the output of}} an audio or video encoder) in packets within MPEG program streams and MPEG transport streams. The elementary stream is <b>packetized</b> by encapsulating sequential data bytes from the elementary stream inside PES packet headers.|$|R
50|$|GCM {{is ideal}} for {{protecting}} <b>packetized</b> data because it has minimum latency and minimum operation overhead.|$|R
5000|$|The VDP — The Voice Data Processor — Implemented a VAD {{algorithm}} and <b>packetized</b> {{the voice}} ...|$|R
40|$|AbstractForward Error Correction (FEC) codes {{may be used}} {{to protect}} a video code stream against packet erasures or errors when passing through an {{error-prone}} network. To have maximum possible fidelity at the decoder side, an Unequal Loss Protection (ULP) approach should be used to <b>packetize</b> the scalable video code stream, so that the different parts of the scalable video stream are protected according to their importance. Unequal loss-protected packetization leads to segmentation of the scalable code stream, such that the source can be reconstructed with the maximum possible fidelity at the decoder side. In Ardestani et al. (2009)  [1] we have found an analytical relation between the optimal sizes of any two consecutive segments. This idea yields an efficient (as efficient as the local search algorithm in Stankovic et al. (2002)  [2]) low-complexity progressive solution for the segmentation problem. In this paper, we use a progressive approach for ULP packetization of a scalable video stream generated from a T+ 2 D encoder. In addition, an optimal rate allocation is used for optimal rate budget division between successive Groups Of Pictures (GOPs) of the video sequence. The experimental results demonstrate that the optimal rate budget allocation outperforms the conventional strategy of equal rate budget distribution up to 0. 65  dB...|$|E
40|$|Abstract—In this paper, {{we present}} an {{optimization}} framework for transmitting high quality audio sequences over error-prone wireless links. Our framework introduces apparatus and technique to optimally protect a stored audio sequence transmitted over a wireless link while considering the packetization overhead of audio frames. Utilizing rate compatible punctured RS codes and dynamic program-ming, it identifies the optimal assignment of parity to audio frames {{according to their}} perceptual importance such that the Segmented SNR of the received audio sequence is maximized. Our framework covers two cases. In the first case, a frame grouping technique is proposed to <b>packetize</b> audio frames and protect them against temporarily corre-lated bit errors introduced by a fading wireless channel. In this case, each packet is treated as a channel coding codeword. In the second case, a one-dimensional RS coder is applied vertically to a sequence of horizontally formed packets associated with an audio sequence {{in order to protect}} the sequence against both bit errors introduced by fading wireless channels and packet erasures introduced by network buffering. Our numerical results capture the performance advantage of our framework compared to existing techniques proposed in the literature of audio transmission. We also note that our framework can be generically applied to a variety of audio coders making it attractive in terms of implementation...|$|E
40|$|As an {{important}} part of IoTization trends, wireless sensing technologies have been involved in many fields of human life. In cellular network evolution, the long term evolution advanced (LTE-A) networks including machine-type communication (MTC) features (named LTE-M) provide a promising infrastructure for a proliferation of Internet of things (IoT) sensing platform. However, LTE-M may not be optimally exploited for directly supporting such low-data-rate devices in terms of energy efficiency since it depends on core technologies of LTE that are originally designed for high-data-rate services. Focusing on this circumstance, we propose a novel adaptive modulation and coding selection (AMCS) algorithm to address the energy consumption problem in the LTE-M based IoT-sensing platform. The proposed algorithm determines the optimal pair of MCS and the number of primary resource blocks (#PRBs), at which the transport block size is sufficient to <b>packetize</b> the sensing data within the minimum transmit power. In addition, a quantity-oriented resource planning (QORP) technique that utilizes these optimal MCS levels as main criteria for spectrum allocation has been proposed for better adapting to the sensing node requirements. The simulation results reveal that the proposed approach significantly reduces the energy consumption of IoT sensing nodes and #PRBs up to 23. 09 % and 25. 98 %, respectively...|$|E
3000|$|Interrupted, for example, <b>packetized</b> {{speech with}} clitches. SB, SF, SI, and SD are {{temporally}} localized distortions [...]...|$|R
5000|$|It uses a new MNAV navigational message, {{which is}} <b>packetized</b> instead of framed, {{allowing}} for flexible data payloads ...|$|R
30|$|Transceiver {{is used to}} {{send and}} receive <b>packetized</b> messages. Typical {{examples}} could include ZigBee- and Wi-Fi (802.15. 4)-based transceivers.|$|R
40|$|This thesis {{presents}} an energy harvesting {{wireless sensor network}} (EHWSN) architecture customized for use within a space suit. The contribution of this research spans both physical (PHY) layer energy harvesting transceiver design and appropriate medium access control (MAC) layer solutions. The EHWSN architecture consists of a star topology with two types of transceiver nodes: a powered Gateway Radio (GR) node and multiple energy harvesting (EH) Bio-Sensor Radio (BSR) nodes. A GR node works as a central controller to receive data from BSR nodes and manages the EHWSN via command packets; low power BSR nodes work to obtain biological signals, <b>packetize</b> the data and transmit it to the GR node. To demonstrate the feasibility of an EHWSN at the PHY layer, a representative BSR node is designed and implemented. The BSR node {{is powered by a}} thermal energy harvesting system (TEHS) which exploits the difference between the temperatures of a space suit's cooling garment and the astronaut's body. It is shown that through appropriate control of the duty-cycle in transmission and receiving modes, it is possible for the transceiver to operate with less than 1 mW power generated by the TEHS. A super capacitor, energy storage of TEHS, acts as a...|$|E
40|$|Master of ScienceDepartment of Electrical and Computer EngineeringWilliam B. Kuhn and Balasubramaniam NatarajanThis thesis {{presents}} an energy harvesting {{wireless sensor network}} (EHWSN) architecture customized for use within a space suit. The contribution of this research spans both physical (PHY) layer energy harvesting transceiver design and appropriate medium access control (MAC) layer solutions. The EHWSN architecture consists of a star topology with two types of transceiver nodes: a powered Gateway Radio (GR) node and multiple energy harvesting (EH) Bio-Sensor Radio (BSR) nodes. A GR node works as a central controller to receive data from BSR nodes and manages the EHWSN via command packets; low power BSR nodes work to obtain biological signals, <b>packetize</b> the data and transmit it to the GR node. To demonstrate the feasibility of an EHWSN at the PHY layer, a representative BSR node is designed and implemented. The BSR node {{is powered by a}} thermal energy harvesting system (TEHS) which exploits the difference between the temperatures of a space suit's cooling garment and the astronaut's body. It is shown that through appropriate control of the duty-cycle in transmission and receiving modes, it is possible for the transceiver to operate with less than 1 mW power generated by the TEHS. A super capacitor, energy storage of TEHS, acts as an energy buffer between TEHS and power consuming units (processing units and transceiver radio). The super capacitor charges when a BSR node is in sleep mode and discharges when the node is active. The node switches from sleep mode to active mode whenever the super capacitor is fully charged. A voltage level monitor detects the system's energy level by measuring voltage across the super capacitor. Since the power generated by the TEHS is extremely low(less than 1 mW) and a BSR node consumes relatively high power (approximately 250 mW) during active mode, a BSR node must work under an extremely low duty cycle (approximately 0. 4 %). This ultra-low duty cycle complicates MAC layer design because a BSR node must sleep for more than 99. 6 % of overall operation time. Another challenge for MAC layer design is the inability to predict when the BSR node awakens from sleep mode due to unpredictability of the harvested energy. Therefore, two feasible MAC layer designs, CSA (carrier sense ALOHA based) -MAC and GRI (gateway radio initialized) -MAC, are proposed in this thesis...|$|E
40|$|The Human Interface Branch - EV 3 - is {{evaluating}} Organic lighting-emitting diodes (OLEDs) as {{an upgrade}} for current displays on future spacecraft. OLEDs have many advantages over current displays. Conventional displays require constant backlighting which draws {{a lot of}} power, but with OLEDs they generate light themselves. OLEDs are lighter, and weight is always a concern with space launches. OLEDs also grant greater viewing angles. OLEDs {{have been in the}} commercial market for almost ten years now. What is not known is how they will perform in a space-like environment; specifically deep space far away from the Earth's magnetosphere. In this environment, the OLEDs can be expected to experience vacuum and galactic radiation. The intern's responsibility has been to prepare the OLED for a battery of tests. Unfortunately, it will not be ready for testing {{at the end of the}} internship. That being said much progress has been made: a) Developed procedures to safely disassemble the tablet. b) Inventoried and identified critical electronic components. c) 3 D printed a testing apparatus. d) Wrote software in Python that will test the OLED screen while being radiated. e) Built circuits to restart the tablet and the test pattern, and ensure it doesn't fall asleep during radiation testing. f) Built enclosure that will house all of the electronics Also, the intern has been working on a way to take messages from a simulated Caution and Warnings system, process said messages into packets, send audio packets to a multicast address that audio boxes are listening to, and output spoken audio. Currently, Cautions and Warnings use a tone to alert crew members of a situation, and then crew members have to read through their checklists to determine what the tone means. In urgent situations, EV 3 wants to deliver concise and specific alerts to the crew to facilitate any mitigation efforts on their part. Significant progress was made on this project: a) Open channel with the simulated Caution and Warning system to acquire messages. b) Configure audio boxes. c) Grab pre-recorded audio files. d) <b>Packetize</b> the audio stream. A third project that was assigned to implement LED indicator modules for an Omnibus project. The Omnibus project is investigating better ways designing lighting for the interior of spacecraft-both spacecraft lighting and avionics box status lighting indication. The current scheme contains too much of the blue light spectrum that disrupts the sleep cycle. The LED indicator modules are to simulate the indicators running on a spacecraft. Lighting data will be gathered by human factors personal and use in a model underdevelopment to model spacecraft lighting. Significant progress was made on this project: Designed circuit layout a) Tested LEDs at LETF. b) Created GUI for the indicators. c) Created code for the Arduino to run that will illuminate the indicator modules...|$|E
5000|$|G.711 Appendix I {{defines a}} Packet Loss Concealment (PLC) {{algorithm}} to help hide transmission losses in a <b>packetized</b> network ...|$|R
5000|$|A HiSLIP client {{contacts}} {{a server}} by opening two TCP connections, both to port 4880, and sends <b>packetized</b> messages on both: ...|$|R
5000|$|PLP creation: {{adaptation}} of Transport Stream (TS), Generic Stream Encapsulation (GSE), Generic Continuous Stream (GCS), or Generic Fixed-length <b>Packetized</b> Stream (GFPS) ...|$|R
40|$|The {{proposed}} upgrade for the LHCb experiment envisages {{a system}} of 500 Data sources each generating data at 100 Gbps, the acquisition and processing {{of which is a}} big challenge even for {{the current state of the}} art FPGAs. This requires an FPGA DAQ module that not only handles the data generated by the experiment but also is versatile enough to dynamically adapt to potential inadequacies of other components like the network and PCs. Such a module needs to maintain real time operation while at the same time maintaining system stability and overall data integrity. This also creates a need for a Front-end source Emulator capable of generating the various data patterns, that acts as a testbed to validate the functionality and performance of the Header Generator. The rest of the abstract briefly describes these modules and their implementation. The Header Generator is used to <b>packetize</b> the streaming data from the detectors before it is sent to the PCs for further processing. This is achieved by continuously scanning the input stream for payload length information, extracting the same and then assembling the header. Since the payloads(events) are of varying lengths, the starting position of each new payload is calculated in real time based on the length information of the preceding payload. After a fixed number of the payloads have passed and their length information extracted and added to the header template, additional information like the total number of events in the packet, size of the largest payload, and also the combined length of the sum of all payloads and the header itself are calculated and added to the header template. This process completes the generation of a single Header. Signals are asserted to indicate that the header is ready to be read out and sent to the PC. Two sets of memories were created so that the assembling of the next header can begin while the calculation of the additional information for the previous header are still under way. A mechanism to dynamically invalidate individual events were added to deal with downstream bottlenecks that could result in buffer overflows compromising data integrity. This drops much of the individual payloads in a controlled manner, marking the corresponding header field as invalid, effectively reducing the data rate to a trickle on the fly, while maintaining system stability and overall data integrity. The Source Emulator serves the dual purpose of being a test bench to the Header Generator as well as being an stand alone module that can be used in any other system where the detector data needs to emulated. The variability of the detector data is modeled by using a pseudo-random number generator to create payloads of varying lengths. With this Source Emulator as the test bench the Header Generator was functionally validated both for general scenarios as well as for identified corner cases. We present simulation results and performance measures from implementation on a Altera Stratix IV platform...|$|E
30|$|In this sense, the FECFRAME Working Group has {{elaborated}} the RFC 6363 [9] {{in order}} to provide a FEC-based protection scheme to RTP multimedia transmissions. RFC 6363 recommends creating a parallel RTP-FEC <b>packetized</b> stream, composed of recovery packets, from a <b>packetized</b> media stream. This parallel stream is originated applying FEC codes across the RTP media packets (RFC 3550). Each RTP-FEC packet contains an RTP header of its own, data that protect the RTP source headers, and the FEC payload.|$|R
40|$|<b>Packetized</b> access {{has some}} {{potential}} advantages over conventional circuit-switched based access methods because several signal sources can {{share the same}} radio channel using statistical multiplexing. We consider radio resource assignment algorithms for <b>packetized</b> access based on PRMA (Packet Reservation Multiple Access) protocol {{in the presence of}} co-channel interference. The statistical multiplexing gain of packet access is limited by frequency reuse, especially when the reuse factor is low or quality requirement is high. We propose a fuzzy logic based adaptive MAC (medium access control) algorithm to improve packet-access efficiency. Computer simulations based on the example of <b>packetized</b> voice have confirmed that the proposed packet access protocol can support a higher number of active users per radio port than that supported by random slot assignment. 1 INTRODUCTION Future personal communications systems will accommodate a range of diversified services with different quality req [...] ...|$|R
50|$|The talkspurt/silence {{distinction}} {{is used in}} a wide variety of digital speech transport systems, including GSM and <b>packetized</b> speech systems such as voice over IP.|$|R
5000|$|GFP-F maps each client frame into {{a single}} GFP frame. GFP-F is used where the client signal is framed or <b>packetized</b> by the client protocol.|$|R
50|$|Transport stream {{specifies}} {{a container}} format encapsulating <b>packetized</b> elementary streams, with error correction and stream synchronization features for maintaining transmission integrity when the signal is degraded.|$|R
