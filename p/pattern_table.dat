31|184|Public
6000|$|The {{fractions}} (1) and (2) {{being both}} greater than (3), {{it follows that}} the relationships between the two thumbs, or between the two fore-fingers, are closer than that between the thumb and either fore-finger; {{at the same time it}} is clear that neither of the two former relationships is so close as to reach identity. Similarly as regards the other couplets of digits. The tabular entries fully confirm this deduction, for, without going now into further details, it will be seen from the [...] "Mean of the Totals" [...] at the bottom line of Table VIb that the average percentage of cases in which two different digits have the same class of patterns, whether they be on the same or on opposite hands, is 59 or 57 (say 58), while the average percentage of cases in which right and left digits bearing the same name have the same class of <b>pattern</b> (<b>Table</b> VIa) is 72. This is barely two-thirds of the 100 which would imply identity. At the same time, the 72 considerably exceeds the 58.|$|E
50|$|Furthermore, when in mode 2, {{the lower}} {{bits of the}} color and <b>pattern</b> <b>table</b> address bits act as mask bits rather than address bits.|$|E
50|$|Once tile data {{is set up}} in the <b>pattern</b> <b>table,</b> it is {{a simple}} matter of {{adjusting}} the PPU's X/Y scrolling registers to move the screen around.|$|E
50|$|An agree {{predictor}} is a two-level {{adaptive predictor}} with globally shared history buffer and <b>pattern</b> history <b>table,</b> {{and an additional}} local saturating counter. The outputs of the local and the global predictors are XORed {{with each other to}} give the final prediction. The purpose is to reduce contentions in the <b>pattern</b> history <b>table</b> where two branches with opposite prediction happen to share the same entry in the <b>pattern</b> history <b>table.</b>|$|R
40|$|Complex {{ideas are}} best {{conveyed}} through well-designed illustrations. Up to now, computational neuroscientists have mostly relied on box-and-arrow diagrams of even complex neuronal networks, often using ad hoc notations with conflicting use of symbols from paper to paper. This significantly impedes the communication of ideas in neuronal network modeling. We present here Connectivity <b>Pattern</b> <b>Tables</b> (CPTs) as a clutter-free visualization of connectivity in large neuronal networks containing two-dimensional populations of neurons. CPTs {{can be generated}} automatically from the same script code used to create the actual network in the NEST simulator. Through aggregation, CPTs can be viewed at different levels, providing either full detail or summary information. We also provide the open source ConnPlotter tool {{as a means to}} create connectivity <b>pattern</b> <b>tables...</b>|$|R
30|$|From {{the entire}} set of follower’s tweets for each retailer’s account, we {{extracted}} the candidate {{words and phrases}} for extracting feature words and phrases as the temporal <b>patterns.</b> <b>Table</b> 12 shows the number of entire follows’ tweets on the 2016 period and the extracted candidate words and phrases based on the FLR score using FLR(term_i) > 1.0.|$|R
50|$|A video {{controller}} implementing a text mode usually uses two distinct areas of memory. Character memory or a <b>pattern</b> <b>table</b> contains a raster font in use, where each character {{is represented by}} a dot matrix (a matrix of bits), so the character memory could {{be considered as a}} three-dimensional bit array. Display matrix (a text buffer, screen buffer, or nametable) tracks which character is in each cell. In the simple case the display matrix can be just a matrix of code points (so named character pointer table), but it usually stores for each character position not only a code, but also attributes.|$|E
40|$|We {{present a}} {{improved}} language modeling technique for Lempel-Ziv-Welch (LZW) based LID scheme. The previous approach to LID using LZW algorithm prepares the language <b>pattern</b> <b>table</b> using LZW algorithm. Because of the sequential {{nature of the}} LZW algorithm, several language specific patterns of the language were missing in the <b>pattern</b> <b>table.</b> To overcome this, we build a universal <b>pattern</b> <b>table,</b> which contains all patterns of different length. For each language it's corresponding language specific <b>pattern</b> <b>table</b> is constructed by retaining the patterns of the universal table whose frequency of appearance in the training data is above the threshold. This approach reduces the classification score (Compression Ratio [LZW-CR] or the weighted discriminant score[LZW-WDS]) for non native languages and increases the LID performance considerably...|$|E
40|$|To {{design a}} good {{two-level}} predictor, {{we found that}} a low interference among branches and an even utilization of the entries in the <b>pattern</b> <b>table</b> are two key factors. In order {{to arrive at a}} balanced design and achieve the above two goals simultaneously, we first introduce the concept of branch pattern locality. Then, a new predictor design, called the Global PAttern Locality predictor (G-PAL), is introduced. The predictor is developed based on pattern locality and employs a cachelike <b>pattern</b> <b>table</b> to keep only those patterns that are referenced most frequently and recently. In this way, not only the interference among branches can be reduced, but the entries in the <b>pattern</b> <b>table</b> can be fully utilized. 1 Introduction Dynamic predictors based on the Two-level Branch Prediction scheme [5] have been shown to achieve a substantially higher accuracy than previous predictors [3]. Two tables are used to maintain history information: branch history table and branch <b>pattern</b> <b>table.</b> With enou [...] ...|$|E
40|$|Today's deeply pipelined, superscalar {{processors}} rely on accurate {{branch prediction}} {{in order to}} approach their performance potential. Branch mispredictions result in a flushing of the speculative information in the pipeline, thus limiting the amount of useful work that can be done. The 2 -level branch predictors {{have been shown to}} achieve high prediction accuracy. However, it has also been shown that there is a high degree of <b>pattern</b> history <b>table</b> interference in 2 -level branch predictors and that the interference generally has a negative effect on the prediction accuracy. This paper introduces a method for reducing the <b>pattern</b> history <b>table</b> interference by dynamically identifying some easily predictable branches and inhibiting the <b>pattern</b> history <b>table</b> update for these branches. We show how this technique reduces <b>pattern</b> history <b>table</b> interference for two versions of the 2 -level branch predictor and that this significantly improves branch prediction accuracy for the SPEC 95 benchmarks [...] . ...|$|R
40|$|In this {{tutorial}} we {{show how}} to make hyphenation patterns for a language when you know the grammatical rules for hyphenation (if they exist). We also discuss some points related to typographical hyphenation when compared with grammatical syllabification. 1 Introduction In this tutorial we complete the argument of multilanguage typesetting that we started in the previous article [3]; there the problem of pattern generation had been omitted because this topic is sort of self contained and deserves its own discussion. The problem of creating patterns suitable for T E X's hyphenation algorithm is dealt with in Appendix H of Knuth [10], where a certain statement may induce T E X users to abstain from creating <b>pattern</b> <b>tables</b> "since <b>patterns</b> {{are supposed to be}} prepared by experts who are well paid for their expertise. " In a way this is desirable, so that <b>pattern</b> <b>tables</b> for the same language are not created continuously, leading to multiple, incompatible, di#erent, dubious, erroneous patte [...] ...|$|R
50|$|This {{scheme is}} only {{better than the}} saturating counter scheme for large table sizes, and it is rarely as good as local prediction. The history buffer must be longer {{in order to make}} a good prediction. The size of the <b>pattern</b> history <b>table</b> grows {{exponentially}} with the size of the history buffer. Hence, the big <b>pattern</b> history <b>table</b> must be shared among all conditional jumps.|$|R
40|$|We present two discriminative {{language}} modelling {{techniques for}} Lempel-Ziv-Welch (LZW) based LID system. The previous approach to LID using LZW algorithm was to directly use the LZW pattern tables forlanguage modelling. But, since the patterns {{in a language}} <b>pattern</b> <b>table</b> are shared by other language pattern tables, confusability prevailed in the LID task. For overcoming this, we present two pruning techniques (i) Language Specific (LS-LZW) -in which patterns common {{to more than one}} <b>pattern</b> <b>table</b> are removed. (ii) Length-Frequency product based (LF-LZW) -in which patterns having their length-frequency product below a threshold are removed. These approaches reduce the classification score (Compression Ratio [LZW-CR] or the weighted discriminant score [LZW-WDS]) for non native languages and increases the LID performance considerably. Also the memory and computational requirements of these techniques are much less compared to basic LZW techniques...|$|E
40|$|A {{new species}} of the Culicoides (Hoffmania) hylas species group, Culicoides baniwa Felippe-Bauer is {{described}} and illustrated based on a female specimen {{from the state of}} Amazonas, Brazil. A systematic key, wing photographs, diagramme of the legs <b>pattern,</b> <b>table</b> with numerical characters of females and a synopsis of the 11 species of the C. hylas group are presented. This paper further presents a new record of Culicoides pseudoheliconiae Felippe-Bauer out of the previously defined geographic distribution of the hylas species group, in the province of Misiones, Argentina. Facultad de Ciencias Naturales y Muse...|$|E
40|$|This paper {{addresses}} {{the problem of}} creating a <b>pattern</b> <b>table</b> {{that can be used}} to model the normal behavior of a given process. The model can be used for intrusiondetection purposes. So far, most of the approaches proposed have been based on fixed-length patterns, although variable-length patterns seem to be more naturally suited to model the normal process behavior. We have developed a novel technique to build tables of variable-length patterns. This technique is based on Teiresias, an algorithm initially developed for the discovery of rigid patterns in unaligned biological sequences. We evaluate the quality of our technique in a testbed environment and compare it with techniques based on fixed-length patterns...|$|E
30|$|All three <b>patterns</b> in <b>Table</b> 5 {{follow the}} first rule by not mixing bits from {{different}} GF symbols into the same I or Q component.|$|R
30|$|Based on industry-adjusted {{results for}} this {{staffing}} <b>pattern</b> in <b>table,</b> however, only {{the differences in}} the change of age-heterogeneity across growth regimes prove statistically significant.|$|R
5000|$|... #Caption: Figure 3: Two-level {{adaptive}} branch predictor. Every {{entry in}} the <b>pattern</b> history <b>table</b> represents a 2-bit saturating counter of the type shown in figure 2.|$|R
30|$|In 2008, site I was {{monitored}} again, {{but this}} time both bee colonies were analysed separately considering variation between the two colonies. The daily samples of 2008 showed a similar <b>pattern</b> (<b>Table</b> 2 b). Most of the maize pollen was collected from the mid {{to the end of}} July. The percentages of maize pollen in the pellets varied between < 0.1  % up to a maximum of 40  % (colony B) and 24  % (colony A) on July 23 rd. The percentage of maize pollen of the overall sample was quite similar in both (2  % and 3  %). In 2008, the percentages (2.7  %) and the total number (167 million) of maize pollen were considerably higher than in 2007 (0.3  %, 1.77 million).|$|E
40|$|A {{patient with}} desquamative {{interstitial}} pneumonia completely recovered after treatment with oral corti-costeroids. Twelve years after stopping treatment the patient relapsed but has again recovered after treatment. Case report A 34 -year-old woman {{presented with a}} 15 month history of dyspnoea progressing to breathlessness on minimal exertion. She had slight cough and scanty mucoid sputum. There was no history of arthralgia. She had taken no drugs and {{had been exposed to}} no recognised allergens. Gross clubbing of fingers and toes was present. Chest expansion was reduced and numerous inspiratory crackles were heard over the lower two-thirds of both lungs. The chest radiograph showed nodular opacities in the lower half of both lung fields, being more pronounced on the right side. Lung function tests showed a restrictive <b>pattern</b> (<b>table).</b> Arterial oxygen saturation was reduced to 89 %. Blood tests including a full connective tissue disorder screen gave normal results. Serial pulmonary function tests First presentatio...|$|E
40|$|Energy {{dissipation}} in cache memories {{is becoming}} a major design issue in embedded microprocessors. Predictive filter cache based instruction cache hierarchy is effective in reducing the access energy substantially {{at the cost of}} certain performance degradation. Here, the energy-delay product reduction heavily depends on the prediction accuracy of the predictor. In this paper, a simplified pattern prediction algorithm, which maximizes power savings in the novel filter cache prediction hierarchy, is proposed. The prediction mechanism relies on the static nature of the hit or miss pattern of the instruction access stream over the past filter cache line accesses. These static patterns are stored in a 32 -entry single-bit <b>Pattern</b> <b>Table</b> (PT). The entries could be dynamically changed during run time to provide options for real-time adaptation in a complex application. The proposed prediction algorithm results in better prediction for all the benchmarks simulated. Energy delay product reduction of up to 8. 19 % over existing NFPT prediction scheme was reported for the benchmarks simulated...|$|E
5000|$|The {{so-called}} [...] "Adjustierungsvorschrift" [...] (en: service dress instruction) {{contains the}} colour <b>pattern</b> <b>tables</b> {{from the year}} 1912.The name ″Egalisierung″ consists of uniform coloure at the one hand, and corps colour, egalisation colour (de: Waffenfarbe) or badge colour at the other hand. The system was extremely complicated and was called by slang Farbkastel (en: paint boxlet). Ultimately, in the k.u.k. common army {{it was very difficult}} to distinguish the 102 infantry regiments from Hussars, Lancers or Dragoons, as well as services, service branches, specialm services, appointments, etc.|$|R
50|$|A hayrake {{table is}} a {{distinct}} <b>pattern</b> of <b>table</b> produced {{as part of the}} English Arts and Crafts movement {{in the early part of}} the twentieth century.|$|R
30|$|Compared {{the share}} of {{sediment}} sources caused by three land-use <b>patterns,</b> <b>Table</b> 5 showed that in the initial management of the watershed in 2000, sediment of the watershed was mainly from slope farmlands. For the returning farmland to forest and road construction pattern: road erosion in 2005 had become a dominant factor for sediment increase of the watershed. The third pattern: assuming that after returning farm land to forest and grass, road without taking into account of newly constructed erosion, the un-utilized land and grass-shrub land would become {{the major source of}} sediment yield.|$|R
40|$|There is {{currently}} considerable {{interest in the}} topic of internal audit and its contribution to the organization goals. Internal auditing {{could be used as}} mechanisms of risk management, corporate governance and internal control. The paper aims at examining the relation between internal audit and organization goals. In this paper, at first, the conceptual approach of internal audit, which {{could be used as a}} mechanism of risk management, corporate governance and internal control, is analyzed. Then, integrated categorization of the responses received from the SECP internal audit staff is depicted in three different tables (i. e. Coded in Common <b>Pattern</b> (<b>Table</b> 1), Word Frequencies (Table 2), and Linked Table (Table 3)). After that the role of internal audit in organization’s goals explanatory model presented. Finally, I suggest these areas for further research. The results point out that internal audit is not only vital in the efficient risk management, internal control and corporate governance but also play a crucial role in the business survival and success...|$|E
40|$|Speculation {{plays an}} {{ever-increasing}} role in optimizing {{the execution of}} programs in computer architecture. Speculative decision-mak rs are typically required to have high speed and small size, thus limiting their complexity and capability. Because of these restrictions, predictors often consider only a small subset of the available data in making decisions, and consequently do not realize their potential accuracy. Perceptrons, or simple neural networks, can be highly useful in speculation {{for their ability to}} examine larger quantities of availabl dat, nd identify which data lead to accurate results. Recent research has demonstrated that perceptrons can operate successfully within the strict size and latency restrictions of speculation in computer architecture. This dissertation first studies how perceptrons can be made to predict accurately when they directly replace the traditional <b>pattern</b> <b>table</b> predictor. Several weight training methods and multiple-bit perceptron topologies are modeled and evaluated in their ability to learn data patterns th pattern tables can learn. The effects of interference between past data on perceptrons are evaluated, and differen...|$|E
40|$|Language Identification (LID) is {{the task}} of {{automatically}} identifying the language of speech signal uttered by an unknown speaker. An N language LID task is to classify an input speech utterance, spoken by an unknown speaker and of unknown text, as belonging {{to one of the}} N languages L 1, L 2,.., LN. We present a new approach to spoken language modeling for language identification using the Lempel-Ziv-Welch (LZW) algorithm, with which we try to overcome the limitations of n-gram stochastic models by automatically identifying the valid set of variable length patterns from the training data. However, since several patterns in a language <b>pattern</b> <b>table</b> are also shared by other language pattern tables, confusability prevailed in the LID task. To overcome this, three pruning techniques are proposed to make these pattern tables more language specific. For LID with limited training data, we present another language modeling technique, which compensates for language specific patterns missing in the language specific LZW <b>pattern</b> <b>table.</b> We develop two new discriminative measures for LID based on the LZW algorithm, viz., (i) Compression Ratio Score (LZW-CRS) and (ii) Weighted Discriminant Score (LZW-WDS). It is shown that for a 6 -language LID task of the OGI-TS database, the new model (LZW-WDS) significantly outperforms the conventional bigram approach. With regard to {{the front end of the}} LID system, we develop a modified technique to model for Acoustic Sub-Word Units (ASWU) and explore its effectiveness. The segmentation of speech signal is done using an acoustic criterion (ML-segmentation). However, we believe that consistency and discriminability among speech units is the key issue for the success of ASWU based speech processing. We develop a new procedure for clustering and modeling the segments using sub-word GMMs. Because of the flexibility in choosing the labels for the sub-word units, we do an iterative re-clustering and modeling of the segments. Using a consistency measure of labeling the acoustic segments, the convergence of iterations is demonstrated. We show that the performance of new ASWU based front-end and the new LZW based back-end for LID outperforms the earlier reported PSWR based LID...|$|E
50|$|The Intel Pentium MMX, Pentium II and Pentium III have local branch {{predictors}} {{with a local}} 4-bit {{history and}} a local <b>pattern</b> history <b>table</b> with 16 entries for each conditional jump.|$|R
5000|$|With the {{formation}} of the Austrian Federal Army of the first Republic (de: Bundesheer der ersten Republik) in 1920/21 the German Reichswehr uniforms and Waffenfarben (corps colours) were adopted as well. However, slight different were only the Grasgrün (en: grass-green) of the Austrian infantry (Reichswehr - white) and the Gelbgrün (yellow-green) of the Austrian hunter troops (Reichswehr - hunter-green). Late in 1933 a new uniform was introduced by almost close orientation to the Austro-Hungarian Land forces 1867-1914. The so-called k.u.k. [...] "Adjustierungsvorschrift" [...] (en: service dress instruction) contains the colour <b>pattern</b> <b>tables</b> from the year 1912 and regulated the Egalisierungsfarben to be worn.|$|R
50|$|The {{most popular}} version was the initial release, v2.00, in 1991 (v1.0 {{was a private}} release). Its screen was divided into three parts: Pattern editor, <b>Pattern</b> {{sequence}} <b>table,</b> and Sample list. Navigation around these parts was by keyboard.|$|R
30|$|At {{the native}} {{dominated}} site, cheatgrass cover was minimal (0.5 % to 2 % cover before fire), {{and there was}} an intact native bunchgrass and shrub component (16 % average shrub cover) with interspersed bare ground prior to burns. Fires were patchy and resulted in a mosaic burn <b>pattern</b> (<b>Table</b> 1). Fall fires were much lower in intensity and severity than spring fires, resulting in less consumption of fuel and a patchier burn response. Fuel loads in spring fires were reduced from 9.98 Mg ha− 1 to 2.16 Mg ha− 1; fuels in fall burns were reduced from 8.98 Mg ha− 1 to 5.96 Mg ha− 1. Density of bluebunch wheatgrass was reduced following spring fires (from 3.7 plants per m 2 to 1.9 plants per m 2; P = 0.02) and cover (Figure 5) was reduced in both spring (7 % decrease) and fall (5 % decrease) burn treatments (P = 0.04). Fire treatments had no significant effects on cover or density of Thurber’s needlegrass, squirreltail, or Sandberg bluegrass in the first post-fire year.|$|E
40|$|Energy {{dissipation}} in cache memories {{is becoming}} a major design issue for embedded microprocessors. Predictive filter cache based instruction cache hierarchy {{has been shown to}} effectively reduce the energy-delay product. In this paper, a simplified pattern prediction algorithm is proposed for the filter cache hierarchy. The prediction scheme relies on the static nature of the hit or miss pattern of the instruction access streams. The static patterns are maintained in a small 32 x 1 -bit wide Static <b>Pattern</b> <b>Table</b> (SPT). Our investigations show that the proposed prediction algorithm is superior to that based on Next Fetch Prediction Table (NFPT) for all the benchmarks simulated. With the proposed approach, energy delay product reduction of up to 6. 79 % was evident when compared with that using NFPT. Moreover, since the prediction scheme is based on the static assignment of patterns, it lends well for area and power efficient implementation than that employs dynamic pattern prediction although it is marginally inferior (i. e. 0. 69 %) in term of energy delay product...|$|E
40|$|Figure S 1. Methodology for {{creating}} a possible base triple formation by superimposing a shared base between two base pairings as described by Tinoco and co-workers(1); section A shows an example where superimposition of the shared base residue does not result in a plausible triple formation while section B is an example where the superimposition of the shared base results in a possible formation which is then used as a NASSAM input <b>pattern.</b> <b>Table</b> S 1. Full details of the new triple patterns shown in Figure 1. (A) Base triple interactions which were not previously recorded in the NCIR(2) database. (B) Base triple interactions which were not listed in the NAIL library(3) of query patterns but which {{were found to be}} present in the NCIR database. (C) Novel triple interactions which were neither recorded in the NCIR database nor listed in the NAIL query dataset. The primary comparative measure to differentiate triples were the hydrogen bonding interactions involved. Triples in NCIR may at times have different interactions visually presented although they are generally accepted as the same with those calculated by HBPLUS(4) in cases where the interacting residues are the same as noted here...|$|E
40|$|AbstractÐIn many {{scientific}} applications, dynamic array redistribution {{is usually}} required {{to enhance the}} performance of an algorithm. In this paper, we present a generalized basic-cycle calculation (GBCC) method to efficiently perform a BLOCK-CYCLIC(s) over P processors to BLOCK-CYCLIC(t) over Q processors array redistribution. In the GBCC method, a processor first computes the source/destination processor/data sets of array elements in the first generalized basic-cycle of the local array it owns. A generalized basic-cycle is defined as lcm 8 ̆ 5 sP; tQ = 8 ̆ 5 gcd 8 ̆ 5 s; t P in the source distribution and lcm 8 ̆ 5 sP; tQ = 8 ̆ 5 gcd 8 ̆ 5 s; t Q in the destination distribution. From the source/destination processor/data sets of array elements in the first generalized basic-cycle, we can construct packing/unpacking <b>pattern</b> <b>tables</b> to minimize the data-movement operations. Since each generalized basic-cycle has the same communication pattern, based on the packing/unpacking <b>pattern</b> <b>tables,</b> a processor can pack/unpack array elements efficiently. To evaluate {{the performance of the}} GBCC method, we have implemented this method on an IBM SP 2 parallel machine, along with the PITFALLS method and the ScaLAPACK method. The cost models for these three methods are also presented. The experimental results show that the GBCC method outperforms the PITFALLS method and the ScaLAPACK method for all test samples. A brief description of the extension of the GBCC method to multidimensional array redistributions is also presented. Index TermsÐRedistribution, generalized basic-cycle calculation method, distributed memory multicomputers. æ...|$|R
40|$|Abstract: Rod-pumping is {{a largely}} used {{technique}} for oil extraction. Pumping conditions and malfunctions may be monitored through downhole dynamometer cards (DC). DCs are a load vs. position plots of the pump. Its monitoring {{is important to}} sustain acceptable productivity levels. An automated system for DC shape classification is desired for quicker response avoiding production disturbances. PETROBRAS has such a system that relies {{on a set of}} <b>pattern</b> <b>tables,</b> which are used to match the DCs. However, the problem of pattern identification and generation still remains. This article proposes a new method for patterns generations based on genetic algorithms (GA), so that DCs can be better classified by the used method. Copyright @Controlo 2004. Key-Words: recognition, genetic algorithms, pattern generation, rod-pumpin...|$|R
40|$|Although in {{the last}} decades {{advances}} in fetal and neonatal medicine have reduced mortality in neonatal intensive care units in the Western world, the morbidity due to brain injury remains high. Patterns of neonatal brain injury can be roughly divided in (1) term and (2) preterm <b>patterns.</b> <b>Table</b> 1 shows the number of infants admitted to the NICU in the Sophia Children’s Hospital between March 2008 and March 2010 with a typical ‘neurological’ diagnosis. The table highlights differences in diagnoses between preterm and term infants in relation to gender. In preterm infants the most common diagnoses are: persistent flaring (hypersignal intensity seen in periventricluar white matter using cranial ultrasound), intraventricular haemorrhage and venous infarction. In term infants perinatal asphyxia and perinatal stroke are most often reported...|$|R
