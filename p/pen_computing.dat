82|7|Public
500|$|<b>Pen</b> <b>computing</b> {{for a broad}} {{history of}} gesture-based user {{interfaces}} ...|$|E
2500|$|<b>Pen</b> <b>computing</b> {{reduces the}} {{hardware}} {{impact of a}} system and also increases the range of physical world objects usable for control beyond traditional digital objects like keyboards and mice. Such implementations could enable a new range of hardware that does not require monitors. This idea {{may lead to the}} creation of holographic display. The term gesture recognition has been used to refer more narrowly to non-text-input handwriting symbols, such as inking on a graphics tablet, multi-touch gestures, and mouse gesture recognition. This is computer interaction through the drawing of symbols with a pointing device cursor. (see <b>Pen</b> <b>computing)</b> ...|$|E
50|$|Windows for <b>Pen</b> <b>Computing</b> is a {{software}} suite for Windows 3.1x, that Microsoft designed to incorporate <b>pen</b> <b>computing</b> capabilities into the Windows operating environment. Windows for <b>Pen</b> <b>Computing</b> {{was the second}} major <b>pen</b> <b>computing</b> platform for x86 tablet PCs; GO Corporation released their operating system, PenPoint OS, shortly before Microsoft published Windows for <b>Pen</b> <b>Computing</b> 1.0 in 1992.|$|E
40|$|Three {{batches of}} {{weanling}} pigs (total n= 310 pigs) {{were used in}} a 34 -day experiment to validate {{the use of an}} IVOG? feeding station as a tool for monitoring individual feed intake of group-housed weanling pigs. An IVOG? feeding station for weanling pigs consists of a single-space dry feeder placed on a load cell in combination with electronic identification. Data of 192 weanling pigs (18 pens) fed by IVOG? feeding stations were used to develop a protocol for the screening of IVOG? data. To assess the quality of the IVOG? data, the feed intake per <b>pen</b> <b>computed</b> from the screened IVOG? data was compared with the feed intake calculated from feed weighing. To assess the suitability of the use of IVOG? feeding stations under practical pig husbandry conditions, performance of 96 weanling pigs fed by the IVOG? feeding stations was compared with that of 118 weanling pigs that were fed using commercial single-space dry feeders (11 pens). Feed intake per <b>pen</b> <b>computed</b> from the IVOG? data was similar to the feed intake calculated from feed weighing (average recovery 101. 1 €for all test periods (p > 0. 1). Furthermore, feed recovery did not differ among feeding stations (p > 0. 1). During the first 13 days after weaning, the average daily feed intake (ADFI) of weanling pigs fed by the single-space dry feeders was higher (p 0. 1) between both feeding systems. During the remaining 21 days and averaged over the entire experimental period, performance did not differ between the feeding systems (p > 0. 1). It can be concluded that IVOG? feeding stations for weanling pigs are a suitable tool to monitor individual feed intake of group-housed weanling pigs...|$|R
40|$|Mobile {{computing}} is {{the next}} technology frontier for healthcare providers. Nurses, doctors, pharmacists and other healthcare professionals are using pen-based computers for data capture, retrieval and information presentation, and this use is enhancing patient care and improving efficiency. The migration from desktop platforms to mobile platforms will {{have a significant impact}} on future healthcare delivery systems. The most important benefits of <b>pen</b> based <b>computing</b> are increased accuracy, portability (which allows usage to be ‘anytime and anywhere’) and saving paper and time. This paper focuses on the use of pen-based computing in nursing education and health care...|$|R
40|$|There {{have been}} recent {{improvements}} in document technologies like the standardization of object interfaces to access and manipulate {{the properties of}} web documents. There has also been significant progress in <b>pen</b> based <b>computing</b> for recognition of digital ink in desktops, tablets and handheld devices. These have necessitated a need for further research on annotation architectures for digital documents, specifically penbased annotation systems. This paper presents an attempt to leverage the new standards of DHTML and W 3 C DOM that are being gradually implemented by popular browsers, to build a prototype of an ink annotation system with common components across browsers. One of the primary goals {{in this study is}} to semantically link ink data with underlying document elements like text and images. The system has three components: a) Ink capture and rendering b) Ink Understanding, which recognizes and associates ink with the underlying document and c) Ink storage and retrieval. 1...|$|R
50|$|Windows for <b>Pen</b> <b>Computing</b> was {{a series}} of Microsoft-produced add-ons for Microsoft Windows {{versions}} in the mid-1990s with additional tools for tablet PCs. Windows for <b>Pen</b> <b>Computing</b> (also known as Pen Windows and W4PC) was developed as Microsoft's <b>pen</b> <b>computing</b> response to PenPoint OS by GO Corporation. Windows for <b>Pen</b> <b>Computing</b> was rendered obsolete by Tablet PC support for Windows XP Tablet PC Edition in 2002.|$|E
50|$|Microsoft {{published}} Windows 95 in 1995, {{and later}} released Pen Services for Windows 95, {{also known as}} Windows for <b>Pen</b> <b>Computing</b> 2.0, for this new operating system. Windows XP Tablet PC Edition superseded Windows for <b>Pen</b> <b>Computing</b> in 2002. Subsequent Windows versions, such as Windows Vista and Windows 7, supported <b>pen</b> <b>computing</b> intrinsically.|$|E
50|$|In 2002, {{original}} equipment manufacturers released the first tablet PCs designed to the Microsoft Tablet PC specification. This generation of Microsoft Tablet PCs {{were designed to}} run Windows XP Tablet PC Edition, the Tablet PC version of Windows XP. This version of Microsoft Windows superseded Microsoft's earlier <b>pen</b> <b>computing</b> operating environment, Windows for <b>Pen</b> <b>Computing</b> 2.0. After releasing Windows XP Tablet PC Edition, Microsoft designed the successive desktop computer versions of Windows, Windows Vista and Windows 7, to support <b>pen</b> <b>computing</b> intrinsically.|$|E
40|$|<b>Pen</b> input for <b>computing</b> devices is now widespread, {{providing}} a promising interac-tion mechanism for many purposes. Nevertheless, the diverse nature of digital ink and varied application domains still present many challenges. First, the sampling rate and resolution of pen-based devices keep improving, making input data more costly to process and store. At the same time, existing applications typically record digital ink either in proprietary formats, which {{are restricted to}} single platforms and consequently lack portability, or simply as images, which lose important information. Moreover, in certain domains such as mathematics, current systems are now achiev-ing good recognition rates on individual symbols, in general recognition of complete expressions remains a problem due {{to the absence of}} an effective method that can reliably identify the spatial relationships among symbols. Last, but not least, existing digital ink collaboration tools are platform-dependent and typically allow only one input method to be used at a time. Together with the absence of recognition, this has placed significant limitations on what can be done...|$|R
40|$|In this paper, we {{describe}} {{a new type}} of surgery for non-compact Riemann surfaces that naturally appear when colliding two holes or {{two sides of the same}} hole in an orientable Riemann surface with boundary (and possibly orbifold points). As a result of this surgery, bordered cusps appear on the boundary components of the Riemann surface. In Poincaré uniformization, these bordered cusps correspond to ideal triangles in the fundamental domain. We introduce the notion of bordered cusped Teichmüller space and endow it with a Poisson structure, quantization of which is achieved with a canonical quantum ordering. We give a complete combinatorial description of the bordered cusped Teichmüller space by introducing the notion of maximal cusped lamination, a lamination consisting of geodesics arcs between bordered cusps and closed geodesics homotopic to the boundaries such that it triangulates the Riemann surface. We show that each bordered cusp carries a natural decoration, i. e. a choice of a horocycle, so that the lengths of the arcs in the maximal cusped lamination are defined as λ-lengths in Thurston [...] <b>Penner</b> terminology. We <b>compute</b> the Goldman bracket explicitly in terms of these λ-lengths and show that the Mapping Class Group acts as a generalized cluster algebra mutation. From the physical point of view, our construction provides an explicit coordinatization of moduli spaces of open/closed string worldsheets and their quantization. Comment: 44 pages, 26 figures; completely reorganised and re-written to make it more clea...|$|R
40|$|<b>Pen</b> input for <b>computing</b> devices is now widespread, {{providing}} a promising interaction mechanism for many purposes. Nevertheless, the diverse nature of digital ink and varied application domains still present many challenges. First, the sampling rate and resolution of pen-based devices keep improving, making input data more costly to process and store. At the same time, existing applications typically record digital ink either in proprietary formats, which {{are restricted to}} single platforms and consequently lack portability, or simply as images, which lose important information. Moreover, in certain domains such as mathematics, current systems are now achieving good recognition rates on individual symbols, in general recognition of complete expressions remains a problem due {{to the absence of}} an effective method that can reliably identify the spatial relationships among symbols. Last, but not least, existing digital ink collaboration tools are platform-dependent and typically allow only one input method to be used at a time. Together with the absence of recognition, this has placed significant limitations on what can be done. In this thesis, we investigate these issues and make contributions to each. We first present an algorithm that can accurately approximate a digital ink curve by selecting a certain subset of points from the original trace. This allows a compact representation of digital ink for efficient processing and storage. We then describe an algorithm that can automatically identify certain important features in handwritten symbols. Identifying the features can help us solve a number of problems such as improving two-dimensional mathematical recognition. Last, we present a framework for multi-user online collaboration in a pen-based and graphical environment. This framework is portable across multiple platforms and allows multimodal interactions in collaborative sessions. To demonstrate our ideas, we present InkChat, a whiteboard application, which can be used to conduct collaborative sessions on a shared canvas. It allows participants to use voice and digital ink independently and simultaneously, which has been found useful in remote collaboration...|$|R
5000|$|Annotated Bibliography of References to Gestures, Touchscreens, and <b>Pen</b> <b>Computing</b> ...|$|E
5000|$|<b>Pen</b> <b>computing</b> {{for a broad}} {{history of}} gesture-based user {{interfaces}} ...|$|E
5000|$|Converting {{handwriting}} in {{real time}} to control a computer (<b>pen</b> <b>computing)</b> ...|$|E
40|$|This paper {{presents}} {{a few ideas}} on how to solve certain geometrical problems arising very often in character design, not directly solvable by METAFONTs plain macros. The first part of the paper presents two geometrical problems: the "k problem" and the "x problem", their solutions using dichotomy, and a different solution using path intersections. The latter was proposed earlier on the net by the author; although geometrically correct, it does not work in real-world METAFONT practice: a nice example of METAFONT code : : : to avoid. The second part of the paper presents two simple macro for drawing "loose" Bezier curves; in a sense, the opposite of the tension operator. Finally, the third part solves a problem stated by Alan Hoenig: how to extract text and data out of a METAFONT run, without using the log file. This is done in a straightforward manner by running a Flex-generated preprocessor over the GF file: the Flex code for this utility is given in appendix B. 1 Two Geometrical Problems, Solved by Iterated Calculations 1. 1 Description Suppose you want to design a character `K', as on the left part of fig. 1. The character should fit inside a box of width w and height h, and should consist of three strokes: the vertical stroke z 0 Γ 0 0, and the two oblique strokes z 1 Γ 2 and z 1 0 Γ 2 0. Only constraint: the point z 1 l = z 1 0 r should be fixed (for example, its coordinates can be (0; h 2)). So, here is the problem: Find a stroke z 1 Γ 2 with fixed z 1 l; y 2 l; x 2 r. This problem is not trivial, because METAFONT cannot <b>compute</b> <b>pen</b> positions without knowing in advance the angle of the pen (this stands both for defining a new pen with command pickup pen as for defining a simulated pen with command penpos) [...] . ...|$|R
50|$|The {{software}} {{features of}} Windows for <b>Pen</b> <b>Computing</b> 1.0 includes an on-screen keyboard, a notepad program for writing with the stylus, {{and a program}} for training the system to respond accurately to the user's handwriting. Microsoft included Windows for <b>Pen</b> <b>Computing</b> 1.0 in the Windows SDK, and the operating environment was also bundled with compatible devices.|$|E
5000|$|Microsoft {{releases}} Windows for <b>Pen</b> <b>Computing</b> as {{a response}} to the PenPoint OS.|$|E
50|$|In 2002, {{original}} equipment manufacturers released the first tablet PCs designed to the Microsoft Tablet PC specification. This generation of Microsoft Tablet PCs {{were designed to}} run Windows XP Tablet PC Edition, the Tablet PC version of Windows XP. This version of Microsoft Windows superseded Microsoft's earlier <b>pen</b> <b>computing</b> operating environment, Windows for <b>Pen</b> <b>Computing</b> 2.0. After releasing Windows XP Tablet PC Edition, Microsoft designed the successive desktop computer versions of Windows, Windows Vista and Windows 7, to support <b>pen</b> <b>computing</b> intrinsically. The Tablet PC with Windows XP released in 2001 possessed 128 megabytes of RAM and a 600 megahertz processor, with a storage capacity of 10GB.|$|E
5000|$|Microsoft {{releases}} Windows for <b>Pen</b> <b>Computing</b> as {{a response}} to the PenPoint OS by GO Corporation.|$|E
5000|$|Wi-Fi/WAN, tablet {{computing}} {{and portable}} <b>pen</b> <b>computing</b> ("Have you ever sent a fax from the beach?") ...|$|E
50|$|Many {{features}} of the Newton are best appreciated {{in the context of}} the history of <b>Pen</b> <b>computing.</b>|$|E
50|$|User {{interfaces}} for <b>pen</b> <b>computing</b> can {{be implemented}} in several ways. Actual systems generally employ {{a combination of these}} techniques.|$|E
50|$|<b>Pen</b> <b>computing</b> {{refers to}} any {{computer}} user-interface using a pen (or stylus) and tablet, {{rather than using}} devices such as a keyboards, joysticks or a mouse.|$|E
50|$|Windows Ink is a {{software}} suite in Windows 10 that contains applications and features oriented towards <b>pen</b> <b>computing,</b> and {{was introduced in}} Windows 10 Anniversary Update.|$|E
50|$|There is, however, an {{extensive}} history of <b>pen</b> <b>computing</b> that predates the Newton, though not generally {{in the form}} of what would now be called a PDA.|$|E
50|$|The {{handwriting}} recognition {{and parts of}} the user interface for the Newton are best understood {{in the context of the}} broad history of <b>Pen</b> <b>computing,</b> which is quite extensive.|$|E
50|$|In 1993, Gay and Jackson founded FutureWave Software {{with the}} {{intention}} of creating graphics software for <b>pen</b> <b>computing,</b> in particular the Penpoint operating system that ran on the EO Personal Communicator.|$|E
50|$|Pencept {{was noted}} {{primarily}} for the robustness (for the time) of the handwriting and gesture recognition algorithms, and for an emphasis on developing novel user interface approaches for employing gesture recognition and handwriting recognition that would work with existing applications hardware and software. This was {{in contrast to the}} approach by GO Corporation to develop a complete new operating system around a gesture-based UI, the PenPoint OS, and to the approach by Microsoft with Windows for <b>Pen</b> <b>Computing</b> and later the Tablet PC to integrate <b>Pen</b> <b>computing</b> features into the desktop metaphor of the Windows OS.|$|E
50|$|The company's {{incorporated}} SmartSketch, {{a drawing}} program used previously for the PenPoint OS and EO tablet computer. When <b>Pen</b> <b>computing</b> {{did not take}} off, SmartSketch was ported to the Windows and Macintosh platforms.|$|E
50|$|Pencept, Inc. {{was one of}} a {{small number}} of {{pioneering}} companies in the 1980s developing and marketing technology known as <b>pen</b> <b>computing,</b> prior to the entry of larger companies such as Microsoft and GO Corporation.|$|E
50|$|Ciright {{started as}} a company that {{initially}} developed wireless applications on tablet devices and has now incorporated advances in <b>pen</b> <b>computing</b> and wireless technologies. Ciright has built solutions for hand held computers that are platform independent.|$|E
50|$|The Surface Pen is {{an active}} stylus and digital pen {{developed}} by Microsoft for its series of Surface computing devices. It is designed to showcase the <b>pen</b> <b>computing</b> capabilities of Microsoft's Windows 8/8.1 and Windows 10 operating systems.|$|E
5000|$|... a rich {{notebook}} {{user interface}} metaphor: Documents existed as pages {{in a notebook}} with tabs (this was not new in PenPoint, but PenPoint {{was the first to}} make it a primary OS interface; Microsoft later did it in Windows for <b>Pen</b> <b>Computing)</b> ...|$|E
50|$|The term PenPad {{was used}} as a product name for a number of <b>Pen</b> <b>computing</b> {{products}} by different companies in the 1980s and 1990s. The earliest was the Penpad series of products by Pencept, such as the PenPad M200 handwriting terminal, and the PenPad M320 handwriting/gesture recognition tablet for MS-DOS and other personal computers.|$|E
5000|$|Historically, <b>pen</b> <b>computing</b> (defined as a {{computer}} system employing a user-interface using a pointing device plus handwriting recognition as the primary means for interactive user input) predates {{the use of a}} mouse and graphical display by at least two decades, starting with the Stylator and RAND Tablet [...] systems of the 1950s and early 1960s.|$|E
