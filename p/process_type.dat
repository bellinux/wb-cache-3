339|4911|Public
25|$|Task Manager {{has been}} redesigned, {{including}} a new processes tab with the option to display fewer or more details of running applications and background processes, a heat map using different colors indicating the level of resource usage, network and disk counters, grouping by <b>process</b> <b>type</b> (e.g. applications, background processes and Windows processes), friendly names for processes and a new option which allows users to search the web to find information about obscure processes. Additionally, the Blue Screen of Death has been updated with a simpler and modern design with less technical information displayed.|$|E
500|$|Numerous {{specialised}} methods {{exist for}} producing ZnO for scientific studies and niche applications. These methods {{can be classified}} by the resulting ZnO form (bulk, thin film, nanowire), temperature ("low", that is close to room temperature or [...] "high", that is T~1000°C), <b>process</b> <b>type</b> (vapor deposition or growth from solution) and other parameters.|$|E
2500|$|Renewable {{natural gas}} or biogas is a methane‐based gas with similar {{properties}} to natural gas {{that can be}} used as transportation fuel. [...] Present sources of biogas are mainly landfills, [...] sewage, [...] and animal/agri‐waste. [...] Based on the <b>process</b> <b>type,</b> [...] biogas can be divided into the following: [...] biogas produced by anaerobic digestion, landfill gas collected from landfills, [...] treated to remove trace contaminants, and synthetic natural gas (SNG).|$|E
3000|$|The above {{findings}} {{show that there is}} a systemic connection between <b>process</b> <b>types</b> and circumstances that can be grammatically explored. This connection is seen in terms of the distribution of circumstances across <b>process</b> <b>types.</b> This distribution reveals the significance of the intersection of the two systems. Matthiessen (1999 : 46) explores the significance of the intersection of the two systems noting that “…skewings in the distribution of circumstantial selections across <b>process</b> <b>types</b> indicate that the <b>process</b> <b>types</b> differ from one another in which circumstantial domains of meaning they favoured.” [...]...|$|R
40|$|<b>Process</b> <b>types,</b> synchronization, type systems, race-free programs. <b>Process</b> <b>types</b> – {{a kind of}} {{behavioral}} types – specify constraints on message acceptance {{for the purpose of}} synchronization and to determine object usage and component behavior in object-oriented languages. So far <b>process</b> <b>types</b> have been regarded as a purely static concept for Actor languages incompatible with inherently dynamic programming techniques. We propose solutions of related problems causing the approach to become useable in more conventional dynamic and concurrent languagues. The proposed approach can ensure message acceptability and support local and static checking of race-free programs. ...|$|R
40|$|International audiencePrevious {{authors have}} {{classified}} <b>process</b> <b>types</b> found in Manufacturing Enterprises (MEs). This paper considers common and distinctive features found amongst these classifications, which govern their utility and completeness. Based on understandings gained about their collective features and shortcomings the paper argues {{a case for}} a unified classification of <b>process</b> <b>types.</b> Such a classification is presented and its applicability is discussed and exemplified...|$|R
2500|$|The {{principal}} competing process uses membranes to desalt saline water, principally applying {{reverse osmosis}} (RO). The RO membrane processes use semipermeable membranes and applied [...] pressure (on the membrane feed side) to preferentially induce water permeation through the membrane while rejecting salts. Reverse osmosis plant membrane systems typically use less energy than thermal desalination processes. Desalination processes {{are driven by}} either thermal (e.g., distillation) or electrical (e.g., RO) as the primary energy types. Energy cost in desalination processes varies considerably depending on water salinity, plant size and <b>process</b> <b>type.</b> At present the cost of seawater desalination, for example, is higher than traditional water sources, but {{it is expected that}} costs will continue to decrease with technology improvements that include, but are not limited to, reduction in plants footprint, improvements to plant operation and optimization, more effective feed pretreatment, and lower cost energy sources.|$|E
5000|$|Scaling an {{application}} involves varying {{the number of}} dynos of each <b>process</b> <b>type.</b>|$|E
5000|$|FIG Script is a {{typeface}} {{designed by}} Eric Olson in 2002 for <b>Process</b> <b>Type</b> Foundry.|$|E
3000|$|... (2) Does the {{deployment}} of different <b>process</b> <b>types</b> reflect registerial differences? How do deployments differ? [...]...|$|R
30|$|This table also {{illustrates}} {{that there are}} clearly favored and non-favored combinations of <b>process</b> <b>types</b> and circumstantial types.|$|R
30|$|From this perspective, we {{are more}} {{convinced}} that not only circumstance is registerial different, so are <b>process</b> <b>types.</b>|$|R
50|$|Sold commercially by the <b>Process</b> <b>Type</b> Foundry, Seravek is {{included}} as a system font in Apple's macOS operating system and as a default font in its iBooks e-books application.|$|E
50|$|Klavika is {{a family}} of {{sans-serif}} fonts designed by Eric Olson and released by <b>Process</b> <b>Type</b> Foundry in 2004. It contains four weights: light, regular, medium, and bold (with corresponding italics) and variations of numerals.|$|E
50|$|Dynos do {{not share}} file state, and so add-ons that provide some kind of storage are {{typically}} used {{as a means of}} communication between dynos in an application. For example, Redis or Postgres could be used as the backing mechanism in a queue; then dynos of the web <b>process</b> <b>type</b> can push job requests onto the queue, and dynos of the queue <b>process</b> <b>type</b> can pull jobs requests from the queue. Add-ons are associated with an application, much like config vars, and so the earlier definition of a release needs to be refined. A release of the applications is not just the slug and config vars; it’s the slug, config vars as well as the set of provisioned add-ons.|$|E
30|$|The {{findings}} {{reveal that}} there is a clear correlation between the semiotic model of time (month by month) and space (geographical space) that is construed by language and the material actions that are carried out by different participants (both animate and inanimate). Experience is construed by different <b>process</b> <b>types</b> involving different participant roles in which both human and non-human participants serve according to the <b>process</b> <b>types</b> described above.|$|R
30|$|The transitivity systems, as {{proposed}} by Halliday (2004), include the systems of <b>process</b> <b>types</b> and agency, which address complementary transitivity and ergativity models of experience. The first model construes individual experience through the realisation of various domains by means of <b>process</b> <b>types,</b> such as material, mental, behavioural, relational and verbal processes. The second model focuses on whether the construction includes an Agent or not, causing the action contained in the verbal process.|$|R
40|$|Abstract. In {{this paper}} we {{will present the}} results of {{research}} into the semantics of modeling constructs for the process-oriented perspective for the conceptual modeling of enterprise subject areas. We will distinguish 3 conceptual <b>process</b> <b>types</b> {{that will be the}} building blocks for any enterprise process base. The definition of these conceptual <b>process</b> <b>types</b> will be anchored in existing process- and decision making frameworks within the fields of management information systems and the administrative science...|$|R
5000|$|The {{state of}} a {{variable}} or {{of a message}} channel can only be changed or inspected by processes. The behavior of a process is defined by a proctype declaration. For example, the following declares a <b>process</b> <b>type</b> A with one variable state: ...|$|E
50|$|The {{workflow}} process application {{will allow}} you to create either parallel or sequential activities. This is useful for review and approval types of processes. This <b>process</b> <b>type</b> will distribute the tasks in a very precise manner determined by the design of the workflow you create.|$|E
5000|$|Numerous {{specialised}} methods {{exist for}} producing ZnO for scientific studies and niche applications. These methods {{can be classified}} by the resulting ZnO form (bulk, thin film, nanowire), temperature ("low", that is close to room temperature or [...] "high", that is T ~ 1000 °C), <b>process</b> <b>type</b> (vapor deposition or growth from solution) and other parameters.|$|E
50|$|An {{overview}} of both processes including {{steps of the}} <b>processes,</b> <b>types</b> and fees {{is available on the}} Bluetooth SIG public portal.|$|R
5000|$|The application’s dyno {{formation}} {{is the total}} number of currently-executing dynos, divided between the various <b>process</b> <b>types</b> the developer has scaled.|$|R
40|$|The Hougaard subordinated multivariate Gaussian Lévy {{processes}} are characterized. Necessary and sufficient conditions for their self-decomposability are given and related Ornstein-Uhlenbeck <b>type</b> <b>processes</b> are described. Gaussian Levy process Hougaard <b>process</b> Ornstein-Uhlenbeck <b>type</b> <b>process</b> Self-decomposability Subordination...|$|R
5000|$|The first {{process step}} in the {{container}} production is the loading step. In this step the glass gob delivered from the feeder is moved into the blank mold. This is also the first {{step in the}} simulation. The next steps depends on the <b>process</b> <b>type.</b> The last step of the forming simulation is container take out.|$|E
50|$|The maximum {{cutting rate}} (production rate) {{is limited by}} a number of factors {{including}} laser power, material thickness, <b>process</b> <b>type</b> (reactive or inert,) and material properties. Common industrial systems (≥1 kW) will cut carbon steel metal from 0.51 - 13 mm in thickness. For all intents and purposes, a laser can be up to thirty times faster than standard sawing.|$|E
50|$|Renewable {{natural gas}} or biogas is a methane‐based gas with similar {{properties}} to natural gas {{that can be}} used as transportation fuel. Present sources of biogas are mainly landfills, sewage, and animal/agri‐waste. Based on the <b>process</b> <b>type,</b> biogas can be divided into the following: biogas produced by anaerobic digestion, landfill gas collected from landfills, treated to remove trace contaminants, and synthetic natural gas (SNG).|$|E
30|$|We {{now turn}} to the three minor <b>process</b> <b>types</b> that are {{specific}} to one model and show how, once again, the two transitivity models are different.|$|R
30|$|Figure 3 {{shows the}} {{instantiation}} of <b>process</b> <b>types</b> in the students’ writing tasks. We can observe subtler differences {{by looking at}} details of each writing task.|$|R
50|$|As the {{specifications}} {{of the plant}} and <b>process</b> <b>types</b> for biopharmaceuticals differ substantially from traditional chemical synthesis, they cannot be produced in conventional multipurpose fine chemical plants.|$|R
5000|$|Developers don’t need to {{make many}} changes to an {{application}} in order to run it on Heroku. One requirement is informing the platform as to which parts of the application are runnable. This is done in a Procfile, a text file that accompanies the source code. [...] Each line of the Procfile declares a <b>process</b> <b>type</b> — a named command that can be executed against the built application.|$|E
50|$|It's {{like running}} dyno as a lightweight, secure, virtualized Unix {{container}} {{that contains the}} application slug in its file system. Heroku will boot a dyno, load it with the slug, and execute the command associated with the web <b>process</b> <b>type</b> in the Procfile. Deploying {{a new version of}} an application kills all the currently running dynos and starts new ones (with the new release) to replace them, preserving the existing dyno formation.|$|E
5000|$|Next to {{the film}} exit lip is an Interleaved 2 of 5 barcode and a printed number. The 6 digits {{represent}} the I3A assigned DX number (middle 4 digits), the number of exposures (last digit) and a proprietary manufacturer's code (first digit). The DX number identifies the manufacturer, film type, and by inference, the necessary developing <b>process</b> <b>type.</b> This is used by automatic photo-finishing machines to correctly process the exposed film. (Kodak US patent 4965628) ...|$|E
40|$|In this {{preliminary}} report about ongoing work, {{we discuss the}} issues of formalizing the specification of interaction <b>process</b> <b>types</b> for e-business applications and identifying techniques for proving correctness properties for them. We introduce the concept of coherence for interaction processes in the broader context of multiagent communication based on agent communication languages. Interaction <b>process</b> <b>types</b> can be sepcified by means of reaction rules in a declarative way. In order {{to make use of}} the formal analysis techniques established for Petri nets, we investigate possibilities how to translate reaction rules into Petri nets...|$|R
40|$|Scientific Texts are {{generally}} concentrated on highly technical terms, {{and they are}} troublesome to understand due to their complexity in forms and meanings. Grammatical metaphor {{is divided into two}} broad areas: ideational and interpersonal. This paper focuses on the first type i. e. Ideational Grammatical Metaphor, which includes <b>process</b> <b>types</b> and nominalization. This paper adopts Hallidayan Systemic Functional Grammar to pinpoint and analyze nominalization and the role played by it. With a corpus of 10 authentic scientific texts drawn from very influential magazines, the analysis is conducted based on nominalization, its frequency and <b>process</b> <b>types.</b> The analysis displays that Ideational Grammatical Metaphor has permeated scientific texts and the prevailing <b>process</b> <b>types</b> are material and relational types. Consequently, the tone of the writing is more abstract, technical and formal. Instances of IGM In scientific writing enable technicality and rationality. Based on the findings of this study, some implications can be drawn for academic and scientifi...|$|R
5000|$|Special {{types of}} tube {{cleaning}} are all such types which are partly in experimental stage only {{and do not}} come under the <b>process</b> <b>types</b> mentioned before, such as, for example: ...|$|R
