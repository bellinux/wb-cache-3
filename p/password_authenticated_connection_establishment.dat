7|626|Public
5000|$|Supplemental Access Control (SAC) {{is a set}} of {{security}} features defined by ICAOfor protecting data contained in electronic travel documents (e.g. electronic passports). SAC specifies the <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE) protocol, which supplements and improves ICAO's Basic Access Control (BAC).PACE, like BAC, prevents two types of attacks: ...|$|E
40|$|Abstract. We {{analyze the}} <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE) {{protocol}} for authenticated key agreement, recently {{proposed by the}} German Federal Office for Information Security (BSI) for the deployment in machine readable travel documents. We show that the PACE protocol is secure in the real-or-random sense of Abdalla, Fouque and Pointcheval, under a number-theoretic assumption related to the Diffie-Hellman problem and assuming random oracles and ideal ciphers. ...|$|E
40|$|Abstract: In {{this paper}} {{we report on}} recent results about the merge of the cryp-tographic {{security}} proof for the <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE), used within the German identity cards, with the algebraic-logic symbolic proof for the same protocol. Both proofs have initially been carried out individually, but have now been combined to get “the best of both worlds”: an automated, error-resistant analysis with strong cryptographic security guarantees. ...|$|E
5000|$|PKRS-1 (<b>Password</b> <b>Authenticated</b> Key Retrieval Scheme, version 1) ...|$|R
5000|$|<b>Password</b> <b>authenticated</b> key {{exchange}} using hidden smooth subgroups (2005) ...|$|R
5000|$|The Glow system {{provides}} access {{to a variety of}} collaboration tools within a secure, <b>password</b> <b>authenticated</b> environment. These include: ...|$|R
40|$|The Internet Key Exchange {{protocol}} version 2 (IKEv 2) {{does not allow}} secure peer authentication when using short credential strings, i. e., passwords. Several proposals {{have been made to}} integrate password-authentication protocols into IKE. This document provides an adaptation of <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE) to the setting of IKEv 2 and demonstrates the advantages of this integration. Status of This Memo This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation. This document defines an Experimental Protocol for the Internet community. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741. Information about the current status of this document, any errata, and how to provide feedback on it may be obtained a...|$|E
40|$|Many future {{electronic}} identity cards will {{be equipped with}} a contact-less interface. Analysts expect that {{a significant proportion of}} future mobile phones support Near Field Communication (NFC) technology. Thus, it is a reasonable approach to use the cell phone as mobile smart card terminal, which in particular supports the <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE) protocol to ensure user consent and to protect the wireless interface between the mobile phone and the smart card. Other than existing efficient PACE implementations on low power devices we present a platform independent solution using the Java Micro Edition (JavaME), which is supported by almost all modern mobile phones. Based on a straightforward PACE [1] implementation, we apply various optimizations realizable with existing JavaMe libraries {{to come up with a}} user friendly performance. Since point multiplication is one of the biggest run-time consumers in the PACE protocol, we examine the elliptic curve arithmetic of the available Cryptographic Service Providers (CSP). Benchmarking [2] on PC and on the Nokia 6212 reveals the significant better performance of the Flexi-Provider (FP) compared to Bouncy Castle which is the only other available CSP usable without changes. Thus, we use FP for our implementation. For further optimization we review the mos...|$|E
40|$|Many future {{electronic}} identity cards will {{be equipped with}} a con-tact-less interface. Analysts expect that {{a significant proportion of}} future mobile phones support Near Field Communication (NFC) technology. Thus, it is a reasonable approach to use the cell phone as mobile smart card terminal, which in particular supports the <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE) proto-col to ensure user consent and to protect the wireless interface be-tween the mobile phone and the smart card. While there are effi-cient PACE implementations for smart cards, there {{does not seem to be}} an efficient and platform independent solution for mobile ter-minals. Therefore we provide a new implementation using the Java Micro Edition (Java ME), which is supported by almost all modern mobile phones. However, the benchmarks of our first, straightfor-ward PACE implementation on an NFC-enabled mobile phone have shown that improvement is needed. In order to reach a user friendly performance we implemented an optimized version, which, as of now, is restricted to optimizations which can be realized using fea-tures of existing Java ME libraries. In the work at hand we present a review of the relevant algo-rithms and provide benchmarks of the corresponding arithmetic functions in different Java ME libraries. We discuss the differ-ent optimization approaches, introduce our optimized PACE im-plementation, and provide timings for a desktop PC and a mobile phone in comparison to the straightforward version. Finally, we investigate potential side channel attacks on the optimized imple-mentation...|$|E
40|$|Abstract. Smooth {{projective}} hash functions {{have been}} used as building block for various cryptographic applications, in particular for password-based authentication. In this work we propose the extended concept of distributed smooth projective hash functions where the computation of the hash value is distributed across n parties and show how to instantiate the underlying approach for languages consisting of Cramer-Shoup ciphertexts. As an application of distributed smooth projective hashing we build a new framework for the design of two-server <b>password</b> <b>authenticated</b> key exchange protocols, which we believe can help to “explain ” the design of earlier two-server <b>password</b> <b>authenticated</b> key exchange protocols...|$|R
3000|$|In [7], {{the authors}} {{incorporate}} the password-based authentication into the cube protocol. This {{is achieved by}} using the four-move two-party <b>password</b> <b>authenticated</b> Diffie-Hellman protocol for pairwise exchanges in each round of the [...]...|$|R
5000|$|... native {{support for}} logging {{to a central}} server via {{encrypted}} and <b>authenticated</b> <b>connections</b> ...|$|R
40|$|In November 2010, the German {{government}} {{started to}} issue the new electronic identity card (eID) to its citizens. Besides its original utilization as a ’visual’ identification document, the eID card {{can be used by}} the cardholder to prove one’s identity at border control and to enhance security of authentication processes over the Internet, with the eID card serving as a token to reliably transmit personal data to service providers or terminals, respectively. To this end, the German Federal Office for Information Security (BSI) proposed several cryptographic protocols now deployed on the eID card. The <b>Password</b> <b>Authenticated</b> <b>Connection</b> <b>Establishment</b> (PACE) protocol secures the wireless communication between the eID card and the user’s local card reader, based on a cryptographically weak password like the PIN chosen by the card owner. Subsequently, the Extended Access Control (EAC) protocol is executed by the chip and the service provider to mutually authenticate and agree on a shared secret session key. This key is then used in the secure channel protocol, called Secure Messaging (SM). Finally, an optional protocol, called Restricted Identification (RI), provides a method to use pseudonyms such that they can be linked by individual service providers, but not across different service providers (even not by malicious ones). This thesis consists of two parts. First, we present the above protocols and provide a rigorous analysis on their security from a cryptographic point of view. We show that the Germen eID card provides reasonable security for authentication and exchange of sensitive information allaying concerns regarding its usage. In the second part of this thesis, we introduce two possible modifications to enhance the security of these protocols even further. Namely, we show how to (a) add to PACE an additional efficient chip authentication step, and (b) augment RI to allow also for signatures under pseudonyms...|$|E
40|$|This thesis {{contributes}} to the design and analysis of public key with keyword search (PEKS) schemes and <b>password</b> <b>authenticated</b> key exchange (PAKE) protocols. The results underline the fact that although the provable security approach is necessary to designing PAKEs,gaps still exist between what can be proven and what are really secure in practice...|$|R
40|$|With {{the rapid}} {{proliferation}} of client-to-client applications, PAKE (<b>password</b> <b>authenticated</b> key exchange) protocols in the client-to-client setting become increasingly important. In this paper, we propose an efficient client-to client PAKE protocol, which has much better performance than existing generic constructions. We {{also show that}} the proposed protocol is secure under a formal security model...|$|R
40|$|In this paper, {{we propose}} new <b>password</b> <b>authenticated</b> key {{exchange}} (PAKE) and protected password change (PPC) protocols without any symmetric or public-key cryptosystems. The {{security of the}} proposed protocols {{is based on the}} computational Diffie-Hellman assumption in the random oracle model. The proposed scheme can resist both forgery server and denial of service attacks...|$|R
50|$|The <b>Password</b> <b>Authenticated</b> Key Exchange by Juggling (or J-PAKE) is a password-authenticated key {{agreement}} protocol. This protocol allows {{two parties}} to establish private and authenticated communication solely {{based on their}} shared (low-entropy) password without requiring a Public Key Infrastructure. It provides mutual authentication to the key exchange, a feature that is lacking in the Diffie-Hellman key exchange protocol.|$|R
40|$|We present two {{protocols}} for threshold <b>password</b> <b>authenticated</b> key exchange. In {{this model}} for password authentication, the password is not {{stored in a}} single authenticating server but rather shared among a set of n servers so that an adversary can learn the password only by breaking into t + 1 of them. The protocols require n > 3 t servers to work...|$|R
40|$|Recently, Yeh et al. {{proposed}} an improved <b>password</b> <b>authenticated</b> key exchange scheme (YSYCT scheme) which is secure against undetectable on-line password guessing attacks {{and provides the}} explicit key authentication. In this article, readers can understand that the YSYCT scheme still is insecure and the user’s password can be exposed by man-in-the-middle attack. Besides, an improved protocol is proposed to avoid this attack...|$|R
40|$|Abstract. Due {{to the low}} entropy of human-memorable passwords, it is {{not easy}} to conduct <b>password</b> <b>authenticated</b> key {{agreement}} in a secure manner. Though there are many protocols achieving this goal, they may require a large amount of computation specifically in the augmented model which was contrived to resist server compromise. Our contribution in this paper is two fold. First, we propose a new practical <b>password</b> <b>authenticated</b> key agreement protocol that is efficient and generic in the augmented model. Our scheme is considered from the practical perspective (in terms of efficiency) and is provably secure under the Diffie-Hellman intractability assumptions in the random-oracle model. Our second contribution is more realistic and generic; a conceptually simple but novel password guessing attack which can be mounted on every three-pass passwordbased protocol unless care is taken in both the design and implementation phases. This is due to the server’s failure to synchronize multiple simultaneous requests. Experimental results and possible prevention methods are also discussed. ...|$|R
5000|$|It is {{important}} (from a security perspective) {{to validate the}} [...] "Origin" [...] header during the <b>connection</b> <b>establishment</b> process on the serverside (against the expected origins) to avoid Cross-Site WebSocket Hijacking attacks, which might be possible when the <b>connection</b> is <b>authenticated</b> with Cookies or HTTP authentication. It is better to use tokens or similar protection mechanisms to <b>authenticate</b> the WebSocket <b>connection</b> when sensitive (private) data is being transferred over the WebSocket.|$|R
40|$|Dragonfly is a <b>password</b> <b>authenticated</b> key {{exchange}} protocol {{that has}} been submitted to the Internet Engineering Task Force as a candidate standard for general internet use. We analyzed the security of this protocol and devised an attack {{that is capable of}} extracting both the session key and password from an honest party. This attack was then implemented and experiments were performed to determine the time-scale required to successfully complete the attack. ...|$|R
40|$|Two-Server <b>Password</b> <b>Authenticated</b> Key Exchange (2 PAKE) {{protocols}} apply secret shar-ing {{techniques to}} achieve protection against server-compromise attacks. 2 PAKE protocols {{eliminate the need}} for password hashing and remain secure as long as one of the servers remains honest. This concept has also been explored in <b>connection</b> with two-server <b>password</b> <b>authenticated</b> secret sharing (2 PASS) protocols for which game-based and universally composable versions have been proposed. In contrast, universally composable PAKE protocols exist currently only in the single-server scenario and all proposed 2 PAKE protocols use game-based security deﬁnitions. In this paper we propose the ﬁrst construction of an universally composable 2 PAKE protocol, alongside with its ideal functionality. The protocol is proven UC-secure in the standard model, assuming a common reference string which is a common assumption to many UC-secure PAKE and PASS protocols. The proposed protocol remains secure for arbitrary password distributions. As one of the building blocks we deﬁne and construct a new cryptographic primitive, called Trapdoor Distributed Smooth Projective Hash Function (TD-SPHF), which could be of independent interest...|$|R
40|$|International audienceHash Proof Systems {{were first}} {{introduced}} by Cramer and Shoup (Eurocrypt’ 02) {{as a tool}} to construct efficient chosen-ciphertext-secure encryption schemes. Since then, they have found many other applications, including <b>password</b> <b>authenticated</b> key exchange, oblivious transfer, and zero-knowledge arguments. One of the aspects that makes hash proof systems so interesting and powerful is that they can be seen as implicit proofs of membership for certain languages. As a result, by extending the family of languages that they can handle, one often obtains new applications or new ways to understand existing schemes. In this paper, we show how to construct hash proof systems for the disjunction of languages defined generically over cyclic, bilinear, and multilinear groups. Among other applications, this enables us to construct the most efficient one-time simulation-sound (quasi-adaptive) non-interactive zero-knowledge arguments for linear languages over cyclic groups, the first one-round group password-authenticated key exchange without random oracles, the most efficient threshold structure-preserving chosen-ciphertext-secure encryption scheme, and the most efficient one-round <b>password</b> <b>authenticated</b> key exchange in the UC framework...|$|R
40|$|Recently, Lee et al. (Nonlinear Dyn, 73 (1 – 2) : 125 – 132, 2013) {{proposed}} a three party <b>password</b> <b>authenticated</b> key exchange with user anonymity by utilizing extended chaotic maps. They claimed that their protocol is more secure than previously proposed schemes. In this paper, our analysis shows that Lee et al. ’s protocol suffers from {{two kinds of}} attacks: (1) man-in-the-middle attack, and (2) user anonymity attack. To overcome these weakness, we propose an enhanced protocol that can resist the attacks described and yet with comparable efficiency. Recently, Lee et al. (Nonlinear Dyn, 73 (1 – 2) : 125 – 132, 2013) {{proposed a}} three party <b>password</b> <b>authenticated</b> key exchange with user anonymity by utilizing extended chaotic maps. They claimed that their protocol is more secure than previously proposed schemes. In this paper, our analysis shows that Lee et al. ’s protocol suffers from two kinds of attacks: (1) man-in-the-middle attack, and (2) user anonymity attack. To overcome these weakness, we propose an enhanced protocol that can resist the attacks described and yet with comparable efficiency...|$|R
40|$|In 2005, Abdalla and Pointcheval {{suggested}} a new {{variation of the}} computational DH assumption called chosen based computational Diffie Hellman (CCDH) and presented SPAKE- 1 and SPAKE- 2 simple <b>password</b> based <b>authenticated</b> key exchange protocols. Since then several three party <b>password</b> <b>authenticated</b> key agreement protocols have been proposed based on CCDH assumption {{but most of them}} broken. In this paper, we propose two password based simple three party key exchange protocols via twin Diffie-Hellman problem and show that the proposed protocols provide greater security and efficiency than the existing protocols. The protocols are also verified using Automated Validation of Internet Security Protocols and Applications (AVISPA) which is a push button tool for the automated validation of security protocols and the result shows {{that they do not have}} any security flaws...|$|R
40|$|Abstract. Yeh et al. {{recently}} {{proposed a}} password-based authenticated key exchange protocol based on RSA for imbalanced wireless networks. However, several scholars {{pointed out that}} Yeh et al. ’s protocol is insecure against off-line password guessing attacks and inefficient enough for mobile devices {{in terms of the}} computational load. This paper will propose a new efficient and secure <b>password</b> <b>authenticated</b> key exchange protocol. Both security and performance of the proposed protocol are better than previously proposed protocols...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The IETF Trust (2006). Copyright Notice Copyright (C) The Internet Society (2006). This document defines an Extensible Authentication Protocol (EAP) method called EAP-PAX (<b>Password</b> <b>Authenticated</b> eXchange). This method is a lightweight shared-key authentication protocol with optional support for key provisioning, key management, identity protection, and authenticated data exchange...|$|R
40|$|The diploma {{thesis is}} focused on {{cryptography}} with smart cards. It describes smart cards from hardware and software side. The thesis compares well known operating systems used on smart cards. Specified operating systems are widely analyzed. There is introduction to <b>password</b> <b>authenticated</b> key establishment protocols. PACE protocol is described in details together with implementation proposal. The implementation on the Basic card platform follows. In the end there is the time analysis of the implementation and further improvements are suggested...|$|R
40|$|Abstract—Password-authenticated key {{exchange}} (PAKE) {{is where}} a client and a server, who share a <b>password,</b> <b>authenticate</b> each other and meanwhile establish a cryptographic key by exchange of messages. In this setting, all the <b>passwords</b> necessary to <b>authenticate</b> clients are stored in a single server. If the server is compromised, due to, for example, hacking or even insider attacks, passwords stored in the server are all disclosed. In this paper, we propose a browser based security and usage of two servers which cooperate to authenticate a client. Even if one server is compromised, the attacker still cannot pretend to be the client with {{the information from the}} compromised server. Index Terms — Password, (PAKE), Messages, security, I...|$|R
40|$|We {{propose a}} new construct, the Text-Graphics Character (TGC) CAPTCHA, for {{preventing}} dictionary attacks against <b>password</b> <b>authenticated</b> systems allowing remote access via dumb terminals. Password authentication {{is commonly used}} for computer access control. But <b>password</b> <b>authenticated</b> systems are prone to dictionary attacks, in which attackers repeatedly attempt to gain access using the entries in a list of frequentlyused passwords. CAPTCHAs (Completely Automated Public Turing tests to tell Computers and Humans Apart) are currently being used to prevent automated "bots" from registering for email accounts. They have also been suggested {{as a means for}} preventing dictionary attacks. However, current CAPTCHAs are unsuitable for text-based remote access. Our TGC CAPTCHA fills this gap. In this paper, we define the TGC CAPTCHA, prove that it is a (secure) CAPTCHA, demonstrate its utility in a prototype based on the SSH (Secure Shell) protocol suite, and provide empirical evidence that the test is easy for humans and hard for machines. We believe that the system will not only help improve the security of servers allowing remote terminal access, but also encourage a healthy spirit of competition in the fields of pattern recognition, computer graphics, and psychology. I...|$|R
40|$|Much {{work has}} been done in recent years on {{mechanisms}} for authenticated key exchange. Many solutions rely on cryptographically secure keys and therefore have to deal with issues like key management, public-key infrastructure, or secure hardware. Recently <b>password</b> <b>authenticated</b> key exchange protocols have been proposed which enable mutual authentication and key exchange based solely on passwords, requiring no other public or private participant-specific information to be stored. The password could be a short string of characters or just a 4 -digit PIN number. In this dissertation we would analyze these protocols and explain how to bootstrap a short secret into a secure strong secret. Further topics of the dissertation include a detailed evaluation and implementation of one such protocol called SNAPI (Secure Network Authentication with Password Identification) proposed by Philip MacKenzie, Sarvar Patel and Ram Swaminathan [MPS 00] which is based on RSA. In their technical paper they use the concept of provable security to show that SNAPI is a secure <b>password</b> <b>authenticated</b> key exchange protocol. This dissertation would provide a detailed analysis of the proof of security for the SNAPI protocol. Apart from this, the known solutions to remote authentication like Secure Shell and SSL are also discussed...|$|R
50|$|<b>Password</b> <b>authenticated</b> key {{exchange}} (PAKE) {{is where}} {{two or more}} parties, based only on their knowledge of a password, establish a cryptographic key using an exchange of messages, such that an unauthorized party (one who controls the communication channel but does not possess the password) cannot participate in the method and is constrained {{as much as possible}} from brute force guessing the password. (The optimal case yields exactly one guess per run exchange.) Two forms of PAKE are Balanced and Augmented methods.|$|R
40|$|We {{propose a}} four-party <b>password</b> <b>authenticated</b> {{interdomain}} key exchange protocol which {{makes use of}} properties of identity-based cryptography and secret public keys. Being password-based and certificate-free, our protocol is lightweight and is suited to lightweight computing environments, such as pervasive computing. Apart from resistance against offline and active attacks, our protocol additionally provides perfect forward secrecy. We provide heuristic analysis of various security properties. Performance comparisons against other related protocols show that our protocol is efficient. Keywords: Inter-domain authentication, identity-based cryptography, password, secret public key. ...|$|R
40|$|Recently, Zhu et al. {{proposed}} a <b>password</b> <b>authenticated</b> key exchange protocol based on RSA. Then, Yeh et al. demonstrated that Zhu et al. ’s protocol {{suffers from the}} undetectable password-guessing attacks and {{proposed a}}n improved version. However, {{there are still some}} security flaws in Yeh et al. ’s proposed protocol. Moreover, the computation load of the wireless device is not light enough. For lightening the computation load, a secure and practical protocol is presented in this paper. D 2004 Elsevier B. V. All rights reserved...|$|R
40|$|RRC layer {{specification}} {{is defined}} in TS 36. 331 [1], and for NB-IoT, the RRC layer specifications are slightly {{different from that of}} LTE. In general, RRC <b>connection</b> <b>establishment</b> for LTE and NB-IoT are relatively simple. RRC <b>connection</b> <b>establishment</b> is a 3 -way handshake between UE and eNodeB, which is used to make the transition of UE from RRC Idle mode to RRC Connected mode. UE must make the transition to RRC Connected mode before transferring any application data, or completing any signalling procedures. RRC <b>connection</b> <b>establishment</b> procedure has mainly 3 steps. RRC connection request message sent by UE, RRC connection setup sent by enodeB, RRC setup complete messages send by UE. The RRC <b>connection</b> <b>establishment</b> procedure is always initiated by the UE but can be triggered by either the UE or the network. For example, the UE triggers RRC <b>connection</b> <b>establishment</b> if the end-user starts an application to browse the internet, or to send an email. Similarly, the UE triggers RRC <b>connection</b> <b>establishment</b> if the UE moves into a new Tracking Area and has to complete the Tracking Area Update signalling procedure. The network triggers the RRC <b>connection</b> <b>establishment</b> procedure by sending a Paging message. This could be used to allow the delivery of an incoming SMS or notification of an incoming voice call. The initial Non-Access Stratum (NAS) message is transferred as part of the RRC connection es- tablishment procedure [2] to reduce <b>connection</b> <b>establishment</b> delay. RRC <b>connection</b> <b>establishment</b> configures Signalling Radio Bearer (SRB) 1 and (SRB 1 bis) allows subsequent signalling to use the Dedicated Control Channel (DCCH) rather than the Common Control Channel (CCCH) used by SRB 0...|$|R
