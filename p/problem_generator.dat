82|260|Public
50|$|Online {{tutoring}} is {{one area}} {{for the application of}} various theories and implementations of tutoring provided to students by a computer. Companies involved in automated online tutoring include Wolfram Alpha, with its module called The <b>Problem</b> <b>Generator</b> (PG) Cognitive Tutor, and others. All automated tutoring involves an application of some form of artificial intelligence to emulate human tutoring, generate appropriate responses, and guide students interaction from one level of learning to the next.|$|E
40|$|In this paper, a <b>problem</b> <b>generator</b> for the Two-Dimensional Rectangular Single Large Object Placement Problem is presented. The {{parameters}} defining {{this problem}} are identified and described. The fea-tures of the <b>problem</b> <b>generator</b> are pointed out, {{and it is}} shown how the program {{can be used for}} the generation of reproducible random problem instances. two-dimensional cutting, defect, <b>problem</b> <b>generator...</b>|$|E
40|$|The big-data era {{has sparked}} the {{development}} of new optimization methods. Frequently, the perfor-mance of the methods is tested on randomly gener-ated problems. Randomly generated instances might be well-conditioned. Hence they may not reveal weaknesses or strengths of methods. There is a need for the <b>problem</b> <b>generator</b> which allows control of crucial properties/parameters of the problem, such as the conditioning {{and the size of the}} problem. Contribution A <b>problem</b> <b>generator</b> for minimize τ‖x‖ 1 + 12 ‖Ax − b...|$|E
40|$|This article {{introduces}} {{a new global}} optimization procedure called LARES. LARES {{is based on the}} concept of an articial chemical process (ACP), a new paradigm which is described in this article. The algorithm's performance was studied using a test bed with a wide spectrum of problems including random multi-modal random <b>problem</b> <b>generators,</b> random LSAT <b>problem</b> <b>generators</b> with various degrees of epistasis, and a test bed of real-valued functions with different degrees of multi-modality, discontinu-ity and atness. In all cases studied, LARES performed very well in terms of robustness and efciency...|$|R
50|$|There {{were also}} <b>problems</b> with <b>generator</b> and motor flashovers.|$|R
40|$|In {{this paper}} we develop an {{empirical}} methodology {{for studying the}} behavior of evolutionary algorithms based on <b>problem</b> <b>generators.</b> We then describe three generators {{that can be used}} to study the effects of epistasis on the performance of EAs. Finally, we illustrate the use of these ideas in a preliminary exploration of the effects of epistasis on simple GAs. ...|$|R
40|$|This paper {{looks in}} detail at how an {{evolutionary}} algorithm attempts to solve instances from the multimodal <b>problem</b> <b>generator.</b> The paper {{shows that in}} order to consistently reach the global optimum, an evolutionary algorithm requires a population size that should grow at least linearly with the number of peaks. A close relationship is also shown between the supply and decision making issues that have been identified previously in the context of population sizing models for additively decomposable problems. The most important result of the paper, however, is that solving an instance of the multimodal <b>problem</b> <b>generator</b> is like solving a peak-in-a-haystack, and it is argued that evolutionary algorithms are not the best algorithms for such a task. Finally, and as opposed to what several researchers have been doing, it is our strong belief that the multimodal <b>problem</b> <b>generator</b> is not adequate for assessing the performance of evolutionary algorithms...|$|E
40|$|Abstract. To date, {{several types}} of {{structure}} for finite Constraint Satisfaction Problems have been investigated {{with the goal of}} either improving the performance of problem solvers or allowing efficient problem solvers to be identified. Our aim is to extend the work in this area by performing a structural analysis in terms of variable connectivity for 3 -SAT problems. Initially structure is defined in terms of the compactness of variable connectivity for a problem. Using an easily calculable statistic developed to measure this compactness, a test was then created for identifying 3 -SAT problems as either compact, loose or unstructured (or uniform). A <b>problem</b> <b>generator</b> was constructed for generating 3 -SAT problems with varying degrees of structure. Using problems from this <b>problem</b> <b>generator</b> and existing problems from SATLIB, we investigated the effects of this type of structure on satisfiability and solvability of 3 -SAT problems. For the same problem length, it is demonstrated that satisfiability and solvability are different for structured and uniform problems generated by the <b>problem</b> <b>generator.</b> ...|$|E
40|$|To date, {{several types}} of {{structure}} for finite Constraint Satisfaction Problems have been investigated {{with the goal of}} either improving the performance of problem solvers or allowing efficient problem solvers to be identified. Our aim is to extend the work in this area by performing a structural analysis in terms of variable connectivity for 3 -SAT problems. Initially structure is defined in terms of the compactness of variable connectivity for a problem. Using an easily calculable statistic developed to measure this compactness, a test was then created for identifying 3 -SAT problems as either compact, loose or unstructured (or uniform). A <b>problem</b> <b>generator</b> was constructed for generating 3 -SAT problems with varying degrees of structure. Using problems from this <b>problem</b> <b>generator</b> and existing problems from SATLIB, we investigated the effects of this type of structure on satisfiability and solvability of 3 -SAT problems. For the same problem length, it is demonstrated that satisfiability and solvability are different for structured and uniform problems generated by the <b>problem</b> <b>generator.</b> Griffith Sciences, School of Information and Communication TechnologyFull Tex...|$|E
40|$|The article {{presents}} research results of random number generators (RNG) influence on simulation accuracy of high-loaded queuing {{systems in the}} GPSS World simulation system. It is shown that for certain combinations of RNGs, called <b>problem</b> <b>generators,</b> the inaccuracy of the simulation results of highly loaded systems may reach tens of percent. The analysis of problem combinations revealed factors causing high level of inaccuracy in simulation results...|$|R
5000|$|... #Subtitle level 2: Potential <b>problems</b> with {{deterministic}} <b>generators</b> ...|$|R
40|$|A {{key problem}} in {{software}} engineering is building complex software systems economically. We believe that domain-specific software system generators is a promising technology for attacking this <b>problem.</b> <b>Generators</b> are realizations of domain models that explain how software systems in a target domain can be assembled from previously written components. Thus, <b>generators</b> require significant <b>problems</b> in software reuse to be solved. In this paper, we review a related set of projects {{that we have}} undertaken to understand better the unusual software design techniques that are required and to evaluate the productivity and performance potentials of software system generators. ...|$|R
40|$|Take away message Electricity {{suppliers}} move to {{time variable}} prices Scheduling should take this into account A Family of resource cost aware constraints <b>Problem</b> <b>generator</b> Where do forecast prices come from? Improved forecast {{does not imply}} improved schedule Interesting extension to building energy managemen...|$|E
40|$|This paper {{introduces}} two new {{frameworks for}} learning action models for planning. In the mistake-bounded planning framework, the learner {{has access to}} a planner for the given model representation, a simulator, and a planning <b>problem</b> <b>generator,</b> and aims to learn a model with at most a polynomial number of faulty plans. In the planned exploration framework, the learner does {{not have access to}} a <b>problem</b> <b>generator</b> and must instead design its own problems, plan for them, and converge with at most a polynomial number of planning attempts. The paper reduces learning in these frameworks to concept learning with one-sided error and provides algorithms for successful learning in both frameworks. A specific family of hypothesis spaces is shown to be efficiently learnable in both the frameworks. ...|$|E
40|$|We {{present a}} {{quadratic}} Discrete-time Optimal Control <b>problem</b> <b>generator,</b> written in C, with options for Degeneracy, Activity and Conditioning (DOCDAC). We use the generator to investigate badly conditioned and degenerate extended linear-quadratic problems (ELQPs) by solving such problems with primal-dual projected gradient and interior-point methods. The benefit of using second-order information in primal-dual projected gradient methods is also explored. Key Words Discrete-time optimal control, extended linear-quadratic programming, projected gradient method, degenerate solution, ill-conditioned Hessian. AMS(MOS) subject classifications: 49 M 40, 49 M 07, 90 C 20 1. Introduction This paper presents a quadratic Discrete-time Optimal Control <b>problem</b> <b>generator,</b> written in C, with options for Degeneracy, Activity and Conditioning, {{referred to as}} DOC-DAC. Our motivation stems from standard observations made about solving discrete-time, especially discretised optimal control problems and more [...] ...|$|E
40|$|Many {{empirical}} {{results in}} reinforcement learning {{are based on}} a very small set of environments. These results often represent the best algorithm parameters that were found after an ad-hoc tuning or fitting process. We argue that presenting tuned scores from a small set of environments leads to method overfitting, wherein results may not generalize to similar environments. To address this problem, we advocate empirical evaluations using generalized domains: parameterized <b>problem</b> <b>generators</b> that explicitly encode variations in the environment to which the learner should be robust. We argue that evaluating across a set of these generated problems offers a more meaningful evaluation of reinforcement learning algorithms. 1...|$|R
40|$|This {{report also}} appears as Working Paper No. 260, Western Management Science Institute, University of California, Los Angeles, November 1976. A {{complete}} description is given of the design, implementation {{and use of}} a family of very fast and efficient large scale minimum cost primal network programs. Choice of data structures and computational testing of the network system GNET are discussed. Important extensions are explained such as exploitation of special problem structure, element generation techniques, post optimality analysis, operation with <b>problem</b> <b>generators</b> and external <b>problem</b> files, and generalization beyond pure network models. This work was partially sponsored by the National Science Foundation and the Office of Naval Research. [URL]...|$|R
30|$|To change {{numerical}} relationships {{without changing}} the target {{knowledge in the}} original <b>problem,</b> the RPS <b>generator</b> searches the target knowledge from the PSPM of the original <b>problem.</b> The RPS <b>generator</b> changes both the higher nodes in the PSPM than the target knowledge and the lower ones. It retrieves the knowledge of numerical relations suitable for swapping with a formula in the changed nodes.|$|R
40|$|Installation Instructions Opening a CSP File Choosing a Model Viewing the GENET Network Running the Network Customising View Progress Window Viewing the Constraint Graph Recording the Network Using the Mouse Buttons On Line Help GENCSP Random <b>Problem</b> <b>Generator</b> Installation Instructions The {{software}} provided {{includes the}} demonstration program GENET v 1. 0 and the random <b>problem</b> <b>generator</b> GENCSP. The programs {{are based on}} XView toolkit and can run under Openwindows or X 11. The programming language is C++ and therefore a C++ compiler (e. g. GNU C++) is needed to compile the software. The source code for the programs resides in the directories GenetDemo/Genet and GenetDemo/Gencsp respectively. To compile the programs, type make in the GenetDemo/ directory. The subdirectories are recursivelly visited and the executables are compiled and linked. The generated executables appear with the name...|$|E
40|$|Dynamic {{scheduling}} {{refers to}} a class of scheduling problems in which dynamic events, such as delaying of a task, occur throughout execution. We develop a framework for dynamic resource scheduling implemented in Java with a random <b>problem</b> <b>generator,</b> a dynamic sim- ulator and a scheduler. The <b>problem</b> <b>generator</b> is used to generate benchmark datasets that are read by the simulator, whose purpose is to notify the scheduler of the dynamic events when they occur. We perform a case-study on the CoastWatch problem which is an over- subscribed dynamic resource scheduling problem in which we assign unit resources to tasks subject to temporal and precedence constraints. Tabu search is implemented as a uniform platform to test various heuristics and neighbourhoods. We evaluate their performance on the generated benchmark dataset and also measure schedule disruption...|$|E
40|$|This manual provide {{documentation}} for the Assignment <b>Problem</b> <b>Generator</b> (APGen) which generate problem instances for the bicriterion assignment problem. Also instances for the bicriterion multi modal assignment {{problem can}} be generated. The instance generated will be output as an xml file which may be converted to a desired format using an xslt stylesheet. Instances for similar single criterion problem...|$|E
40|$|Industrial {{production}} {{in developing countries}} (DC) is frequently perturbed by electric energy supply difficulties. To overcome this <b>problem,</b> <b>generators</b> are used in self-generation of energy, but this leads to an increase of electricity-related expenses. This article assesses the impact of electricity self-generation on Cameroonian industrial companies. The model {{described in this article}} is based on data collected through a survey of a representative sample of industrial companies and from numerous previous thematic and statistical studies. The results of our analyses show that expenses related to electricity in industrial companies in Cameroon have increased five times due to electricity rationing and untimely power cuts. The article also suggests some solutions to improve the electricity self-generation capacity of industrial companies...|$|R
40|$|AbstractA Horn {{spectrum}} is {{a spectrum of}} a Horn sentence. We show that to solve Asser's problem, and consequently the EXPTIME = ? NEXPTIME question it suffices to consider the class of Horn spectra. We also pose the problem {{whether or not the}} generator of every Horn {{spectrum is}} a spectrum. We prove that from a negative solution of the <b>generator</b> <b>problem,</b> a negative answer for the EXPTIME = ? NEXPTIME question follows. Some other relations between the <b>generator</b> <b>problem</b> and Asser's problem are given. Finally, the relativized version of the <b>generator</b> <b>problem</b> is formulated and it is shown that it has an affirmative solution for some oracles, and a negative solution for some others...|$|R
40|$|In {{this paper}} we present an axiomatic theory {{for a class}} of algorithms, called <b>problem</b> {{reduction}} <b>generators,</b> that includes dynamic programming, general branch-and-bound, and game tree search as special cases. This problem reduction theory is {{used as the basis}} for a mechanizable design tactic that transforms formal specifications into <b>problem</b> reduction <b>generators.</b> The theory and tactic are illustrated by application to the problem of enumerating optimal binary search trees. Contents 1. Introduction 3 2. Basic Concepts And Notation 3 2. 1. Language................................... 3 2. 2. Signatures and Structures.......................... 4 2. 3. Problem Specifications............................ 5 3. Enumerating Feasible Solutions 6 3. 1. Problem Reduction Theory.......................... 6 3. 2. Design Tactic [...] Enumerating Feasible Solutions............. [...] . ...|$|R
40|$|A {{multimodal}} <b>problem</b> <b>generator</b> {{was used}} to test three versions of genetic algorithm and the binary particle swarm algorithm in a factorial time-series experiment. Specific strengths and weaknesses of the various algorithms were identified. 1. Introduction This paper will compare the performance of the binary particle swarm and several varieties of genetic algorithm on sets of problems produced by a multimodality <b>problem</b> <b>generator.</b> The study will be constructed {{in the form of a}} repeated-measures factorial experiment, reporting results from multivariate analysis of variance. Research questions involve effects of various aspects of problems on performance of the particle swarm and genetic algorithms with mutation or crossover, or both. One difficulty with empirical comparisons of search algorithms is that results may not generalize beyond the test problems used. For instance, a new algorithm may be carefully tuned so that it outperforms some existing algorithms on a few problems. Unfort [...] ...|$|E
40|$|This {{technical}} report presents the <b>problem</b> <b>generator</b> HSG (Hospital Scenario Generator) {{in its current}} version 1. 1 {{that can be used}} to evaluate medical-appointment scheduling systems such as developed in the scope of the DFG-project AuReCon. The report describes the basic model of medical units and patients, presents the design of the system and how to use the Java based implementation...|$|E
40|$|Cílem práce je analyzovat možnosti použití programu Wolfram Mathema- tica ve výuce matematiky. Tyto možnosti jsou podpořeny vytvořenými applety v tomto programu. Čtenář se seznámí s prostředím tohoto programu a webovou podporou (včetně návodů a již hotových materiálů). Důraz je kladen na tvorbu demonstrací v programu Wolfram Mathematica. Část práce také seznamuje čte- náře s programy Wolfram Alpha, Wolfram Demonstration Project a Wolfram <b>Problem</b> <b>Generator.</b> 1 The aim of {{the thesis}} is {{analyzing}} of possibilities in application of program Wolfram Mathematica in education of Math. All analysed options are supported by applets created in investigated program. The text is focused on introduction of background {{of the program and}} web support including instructions and all prepared materials. The thesis mainly emphasizes on creation of demonstrations in program Wolfram Mathematica. Particular parts of the text are also focused on programs such as Wolfram Alpha, Wolfram Demonstration Project a Wolfram <b>Problem</b> <b>Generator.</b> 1 Katedra matematiky a didaktiky matematikyPedagogická fakultaFaculty of Educatio...|$|E
40|$|Abstract — Addressing dynamic {{optimization}} problems {{has attracted}} a growing interest from the evolutionary algorithm community in recent years due to its importance in the applications of evolutionary algorithms in real world problems. In order to study evolutionary algorithms in dynamic environments, one important work is to develop benchmark dynamic environments. This paper proposes two continuous dynamic <b>problem</b> <b>generators.</b> Both generators use linear transformation to move individuals, which preserves the distance among individuals. In the first generator, the linear transformation of individuals is equivalent to change the direction of some axes of the search space while in the second one it is obtained by successive rotations in different planes. Preliminary experiments were carried out to study the performance of some standard genetic algorithms in continuous dynamic environments created by the proposed generators. I...|$|R
40|$|We describe, {{and make}} {{publicly}} available, two <b>problem</b> instance <b>generators</b> for a multiobjective {{version of the}} well-known quadratic assignment <b>problem</b> (QAP). The <b>generators</b> allow a number of instance parameters to be set, including those controlling epistasis and inter-objective correlations. Based on these generators, several initial test suites are provided and described. For each test instance we measure some global properties and, for the smallest ones, make some initial observations of the Pareto optimal sets/fronts. Our purpose in providing these tools is to facilitate the ongoing study of problem structure in multiobjective (combinatorial) optimization, {{and its effects on}} search landscape and algorithm performance. © Springer-Verlag Berlin Heidelberg 2003. SCOPUS: ar. kinfo:eu-repo/semantics/publishe...|$|R
40|$|This {{article is}} posted here with {{permission}} from IEEE - Copyright @ 2007 IEEEAddressing dynamic optimization problems has attracted a growing interest from the evolutionary algorithm community in recent years due to its importance in the applications of evolutionary algorithms in real world problems. In order to study evolutionary algorithms in dynamic environments, one important work is to develop benchmark dynamic environments. This paper proposes two continuous dynamic <b>problem</b> <b>generators.</b> Both generators use linear transformation to move individuals, which preserves the distance among individuals. In the first generator, the linear transformation of individuals is equivalent to change the direction of some axes of the search space while in the second one it is obtained by successive rotations in different planes. Preliminary experiments were carried out to study the performance of some standard genetic algorithms in continuous dynamic environments created by the proposed generators...|$|R
40|$|In our new {{learning}} environment {{we have developed}} various JAVA tools, and studied ways to display mathematical expressions effectively on the web. In this paper, we discuss how we adapt MathML and JAVA techniques to develop mathematical tools, for example matrix calculators and the Random <b>Problem</b> <b>Generator</b> (RPG), {{which can be used}} in our linear algebra class. It can be profitably used in other classes as well. ...|$|E
40|$|It {{has been}} shown in the past that a multistart hillclimbing {{strategy}} compares favourably to a standard genetic algorithm with respect to solving instances of the multimodal <b>problem</b> <b>generator.</b> We extend that work and verify if the utilization of diversity preservation techniques in the genetic algorithm changes the outcome of the comparison. We do so under two scenarios: (1) when the goal is to find the global optimum, (2) when the goal is to find all optima. A mathematical analysis is performed for the multistart hillclimbing algorithm and a through empirical study is conducted for solving instances of the multimodal <b>problem</b> <b>generator</b> with increasing number of optima, both with the hillclimbing strategy as well as with genetic algorithms with niching. Although niching improves the performance of the genetic algorithm, it is still inferior to the multistart hillclimbing strategy on this class of problems. An idealized niching strategy is also presented and it is argued that its performance should be close to a lower bound of what any evolutionary algorithm can do on this class of problems...|$|E
40|$|The aim of {{the thesis}} is {{analyzing}} of possibilities in application of program Wolfram Mathematica in education of Math. All analysed options are supported by applets created in investigated program. The text is focused on introduction of background {{of the program and}} web support including instructions and all prepared materials. The thesis mainly emphasizes on creation of demonstrations in program Wolfram Mathematica. Particular parts of the text are also focused on programs such as Wolfram Alpha, Wolfram Demonstration Project a Wolfram <b>Problem</b> <b>Generator.</b> ...|$|E
40|$|The {{objective}} {{of this research was}} to develop and empirically test simplex ?based parallel algorithms for the generalized network optimization problem. Several parallel algorithms were developed that utilize the multitasking capabilities of the Sequent Symmetry S 81 multiprocessor. The software implementations of these parallel algorithms were empirically tested on a variety of problems produced by two random <b>problem</b> <b>generators</b> and compared with two leading state-of-the-art serial codes. Speedups on fifteen processors ranged from 2. 6 to 5. 9 for a test set of fifteen randomly generated transshipment problems. A group of six generalized transportation problems yielded speedups of up to 11 using nineteen processors. An enormous generalized transportation problem having 30, 000 nodes and 1. 2 million arcs was optimized in approximately ten minutes by our parallel code. A speedup of 13 was achieved on this problem using 15 processors...|$|R
40|$|Abstract. This paper {{introduces}} two benchmark problem sets {{based on}} actual space mission operations. Each benchmark problem set includes <b>problem</b> <b>generators,</b> declarative specification of the problem(s), {{and one or}} more simulations. The first mission is the DATA-CHASER shuttle payload that flew onboard space shuttle Discovery flight STS- 85 in 1997, and demonstrated the ability of automated mission planning to both reduce commanding effort and improve science return. The second mission is the Citizen Explorer Mission (CX- 1), which is a small, earth orbiting satellite currently being prepared for launch. We include three problem classes of increasing complexity (and realism) for each mission scenario: planning and scheduling with states and resources (PSSR), PSSR with functional dependencies, and PSSR with functional dependencies and plan quality. The actual implementations are available for download from web sites at the University of Colorado, which designed and operated these spacecraft and missions. ...|$|R
40|$|Abstract. We {{demonstrate}} how most common cardinal invariants associated to a von Neumann algebraM can be computed from the decomposability number, dec(M), and the minimal cardinal-ity of a generating set, gen(M). Applications include the equivalence of the well-known <b>generator</b> <b>problem,</b> “Is every separably-acting von Neumann algebra singly-generated?”, with the formally stronger questions, “Is every countably-generated von Neumann algebra singly-generated? ” and “Is the gen invariant monotone? ” Modulo the <b>generator</b> <b>problem,</b> we determine {{the range of}} the invariant (gen(M),dec(M)), which is mostly governed by the inequality dec(M) ≤ cgen(M). 1...|$|R
