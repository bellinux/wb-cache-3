23|83|Public
50|$|Windows Embedded NAVReady {{also called}} as Navigation Ready which is <b>plug-in</b> <b>component</b> for Windows CE 5.0 and useful for {{building}} portable handheld navigation devices.|$|E
5000|$|Breakout {{boxes for}} {{post-production}} studio editing suites. Breakout boxes (also called patch bays or patch panels) {{are used to}} patch audio/video output signals from multiple sources and connect them to other devices quickly. These boxes range from simple analog audio interconnects with up to 96 audio ins/outs to complex <b>plug-in</b> <b>component</b> with composite video, S-Video, HDMI, RS422 control, and digital signaling.|$|E
40|$|This paper {{deals with}} an ongoing work {{involving}} surgeons, didacticians and computer scientists. The {{objective is to}} design a computer based environment for learning screw placement in orthopaedic surgery {{on the basis of}} a computer assisted surgical (CAS) tool. We describe our methodology to create a didactical <b>plug-in</b> <b>component</b> for the CAS system. The created system will consider the user’s knowledge employed for the task to provide linked and relevant feedback...|$|E
5000|$|Integrated {{tutorial}} {{for both}} Camtasia and PowerPoint <b>plug-in</b> <b>components</b> ...|$|R
5000|$|SonarQube by SonarSource (Open Source {{with some}} {{commercial}} <b>plug-in</b> <b>components)</b> ...|$|R
50|$|NOTE - <b>Plug-in</b> <b>components</b> {{communicate}} only via {{standard service}} interfaces through a common infrastructure. The service framework is itself layered and {{independent of the}} underlying infrastructure implementation.|$|R
40|$|This {{contribution}} {{presents a}} prototype of network management framework based on distributed <b>plug-in</b> <b>component</b> technology. The main innovative aspect is the exhibited capacity to facilitate network management applications to be reconfigured at runtime by changing the communication channels used by the constituent components to communicate. This adds great flexibility because the system functionality is not &quot;closed &quot; at the system design time. The ensemble constitutes a development framework for component-based management applications. An scenario is presented to demonstrate the system in action...|$|E
40|$|Micro-payment {{systems have}} the {{potential}} to provide non-intrusive, high-volume and low-cost pay-as-you-use services {{for a wide variety of}} webbased applications. However, adding micro-payment support to web-sites is usually time-consuming and intrusive, both to the web site's software architecture and its user interface implementation. We describe a <b>plug-in,</b> <b>component</b> model for adding micro-payment support to web applications. We use J 2 EE software components to encapsulate micro-payment E-coin debiting and redemption and discrete user interface enhancement. A CORBA infrastructure is used to inter-connect J 2 EE and non-J 2 EE vendors and micro-payment brokers...|$|E
40|$|One of the {{fundamental}} issues in Aspect-Oriented approaches is aspect-to-aspect interference, which occurs when multiple aspects are deployed jointly such that different composition orders may give rise to various inconsistency problems. This paper describes how aspect precedence can be specified explicitly at the modeling level in order to derive a correct composition order and therefore reduce the aspect interference problem in Aspect-Oriented Modeling (AOM). The paper presents a modeling approach to achieve aspect reuse by introducing three distinct categories of aspect composition mechanisms. These composition concepts have been implemented in the Motorola WEAVR, which is an AOM weaver developed at Motorola as a <b>plug-in</b> <b>component</b> for Telelogic TAU G 2. ...|$|E
40|$|Modern {{software}} {{systems for}} simulation, database access, visualisation and data analysis, sup-porting distributed, extensible, evolutionary development, are designed around a small core that loads <b>plug-in</b> <b>components.</b> We have designed {{such a system}} for the neurosciences using an XML-based protocol, NeuroML, to exchange information between components. NeuroML sup-ports high-level descriptions of data, models, references, {{and other types of}} information. We have built simulation kernel plug-ins, visualisation plug-ins, and model-description GUI plug-ins which interoperate in this framework. We describe the current status of these plug-ins and our future plans for further <b>plug-in</b> <b>components.</b> c © 2002 Published by Elsevier Science B. V...|$|R
40|$|Differentiation tools enable {{team members}} to compare {{two or more}} text files, e. g. code or documentation, after change. Although a number of {{general-purpose}} differentiation tools exist for comparing text documents very few tools exist for comparing diagrams. We describe a new approach for realising visual differentiation in CASE tools via a set of <b>plug-in</b> <b>components.</b> We have added diagram version control, visual differentiation and merging support as component-based plug-ins to the Pounamu meta-CASE tool. The approach is generic across {{a wide variety of}} diagram types and has also been deployed with an Eclipse diagramming plug-in. We describe our approach’s architecture, key design and implementation issues, illustrate feasibility of our approach via implementation of it as <b>plug-in</b> <b>components</b> and evaluate its effectiveness. Categories and Subject Descriptors D. 2. 2 [[Software Engineering]] Design Tools and Techniques – CASE tool...|$|R
5000|$|... use a <b>plug-in</b> or <b>component</b> {{architecture}} {{for nearly}} {{every aspect of}} its function ...|$|R
40|$|The capacitance-charging {{method is}} a {{well-established}} and handy technique for {{the generation of}} dc current in the 100 pA range or lower. The method involves a capacitance standard and a sampling voltmeter, highly stable devices easy to calibrate, and it is robust and insensitive to the voltage burden of the instrument being calibrated. We propose here a range extender amplifier, which can be employed as a <b>plug-in</b> <b>component</b> in existing calibration setups, and allows the generation of currents in the 1 nA range. The extender has been employed in the INRIM setup and validated with two comparisons at 100 pA and 1 nA current level. The calibration accuracy achieved on a top-class instrument is 10 ppm at 1 nA...|$|E
40|$|Aspect-Oriented Modeling (AOM) aims at {{supporting}} {{separation of}} concerns at the modeling level, {{with the purpose}} of improving productivity, quality and reusability through the encapsulation of requirements that cut across software components. One of the fundamental issues in Aspect-Oriented approaches is aspect-toaspect interference – when multiple aspects are deployed jointly, different composition orders may give rise to various inconsistency problems. This position paper describes how aspect precedence can be specified explicitly at the modeling level in order to derive a correct composition order and therefore reduce the aspect interference problem in AOM. The paper presents a modeling approach to achieve aspect reuse by introducing three distinct categories of aspect composition mechanisms. These composition concepts have been implemented in the Motorola WEAVR, which is an AOM weaver developed at Motorola as a <b>plug-in</b> <b>component</b> for Telelogic TAU G 2...|$|E
40|$|The {{distributed}} {{nature of}} a typical web application combined with the rapid evolution of underlying platforms demands for a <b>plug-in</b> <b>component</b> architecture. Nevertheless, code for controlling distributed activities is usually spread over multiple subsystems, which {{makes it hard to}} dynamically reconfigure coordination services. This paper investigates coordination components as a way to encapsulate the coordination of a distributed system into a separate, pluggable entity. In an object-oriented context we introduce two design guidelines (namely, "turn contracts into objects" and "turn configuration into a factory object") that help developers to separate coordination from computation and to develop reusable and flexible solutions for coordination in distributed systems. 1 INTRODUCTION With the coming of the world-wide web, more and more software systems must be adapted to incorporate facilities for inter - and intra-nets. Large portions of the software industry have tri [...] ...|$|E
50|$|Furthermore, most browsers can be {{extended}} via <b>plug-ins,</b> downloadable <b>components</b> that provide additional features.|$|R
40|$|The Consultative Committee for Space Data Systems (CCSDS) is {{developing}} a set of Mission Operations (MO) services {{that will allow the}} build-up of space systems (Ground Segment, but also part of the Space Segment) using <b>plug-in</b> <b>components</b> that implement those services and that can grow as the approach lends to easy extensibility. MO will become the PUS of the future!...|$|R
40|$|This paper {{discusses}} {{a general}} architecture for intelligent software agents. It {{can be used}} to construct agents that engage in high-level reasoning by employing standard reasoning engines as <b>plug-in</b> <b>components,</b> while communicating with other agents by means of the standard FIPA-based communication protocols. The approach discussed uses internal micro-agents and declarative goals to form a hierarchical internal agent architecture. It has been implemented and tested with three high-level formal reasoning system components that are used in conjunction with an existing agent platform, OPAL, which supports the FIPA (Foundation for Intelligent Physical Agents) communication standards. 1...|$|R
40|$|The {{diversity}} {{of research and}} development work on agent technology has led to a strong distinction between mobile and intelligent agents. This paper presents an architecture aiming at providing a step towards the integration of these two aspects, concretely by providing an approach of dynamically embedding negotiation capabilities into mobile agents. In particular, the requirements for enabling automated negotiations including negotiation protocols and strategies, a <b>plug-in</b> <b>component</b> architecture for realizing such requirements on mobile agents, and the design of negotiation support building blocks as components of this architecture are presented. 1 Introduction In recent years, the development of agent technology has drawn particularly great attention of people working in very different fields of computer science such as distributed systems, artificial intelligence, system management and electronic commerce. This at a first glance quite surprising fact is essentially based on the [...] ...|$|E
40|$|This paper {{describes}} a <b>plug-in</b> <b>component</b> {{to extend the}} PULS information extraction framework to analyze Russian-language text. PULS is a comprehensive framework for information extraction (IE) that is used for analysis of news in several scenarios from English-language text and is primarily monolingual. Although monolinguality is recognized as a serious limitation, building an IE system for a new language {{from the bottom up}} is very labor-intensive. Thus, the objective of the present work is to explore whether the base framework can be extended to cover additional languages with limited effort, and to leverage the preexisting PULS modules as far as possible, in order to accelerate the development process. The component for Russian analysis is described and its performance is evaluated on two news-analysis scenarios: epidemic surveillance and cross-border security. The approach described in the paper can be generalized to a range of heavilyinflected languages...|$|E
40|$|We present Constituent Grammatical Evolution (CGE), a new {{evolutionary}} {{automatic programming}} algorithm that extends the standard Grammatical Evolution algorithm by incorporating {{the concepts of}} constituent genes and conditional behaviour-switching. CGE builds from elementary and more complex building blocks a control program which dictates the behaviour of an agent and it is applicable to the class of problems where the subject of search is the behaviour of an agent in a given environment. It {{takes advantage of the}} powerful Grammatical Evolution feature of using a BNF grammar definition as a <b>plug-in</b> <b>component</b> to describe the output language to be produced by the system. The main benchmark problem in which CGE is evaluated is the Santa Fe Trail problem using a BNF grammar definition which defines a search space semantically equivalent with that of the original definition of the problem by Koza. Furthermore, CGE is evaluated on two additional problems, the Loss Altos Hills and the Hampton Court Maze. The experimental results demonstrat...|$|E
40|$|This paper {{describes}} an NLP-based Chinese ontology construction platform {{developed by the}} authors. The construction platform is developed based on the open source project Protégé. The paper mainly focuses on two key technologies of automatic construction of ontology—the extraction of attribute value and the automatic generation of ontology hierarchy structure. The paper then introduces how the automatic construction technologies integrate into Protégé {{in the form of}} <b>plug-in</b> <b>components,</b> and finally describes the initial ideas for the development of an new ontology construction platform, which makes it possible to construct a large-scale ontology knowledge base. 1...|$|R
40|$|We {{present a}} formal {{framework}} for characterising <b>plug-in</b> relationships between <b>components</b> whereby {{one does not}} cause the other to deadlock. We define {{the notion of a}} bicompositional relation between co-operating processes such that whenever P and Q are related by, then any component-wise refiements P' and Q' are related by. We use bicompositional relations to ensure that <b>plug-in</b> <b>components</b> can be separately refined whilst maintaining integrity of the original relational properties. We ground our notions in the CSP failures semantic model. The aim is to underpin a mixed-paradigm approach combining different specification methods, including state-based deductive formalisms such as Action Systems, and event-based model checking formalisms such as CSP/FDR. The objective is to play to the strengths and overcome limitations of each technique, by treating different system aspects with individual tools and notations which are most appropriate...|$|R
40|$|Upon {{request the}} tool may be {{provided}} for trial use or under a license agreement. Tool description Dr Eye viewer is an open access, flexible {{and easy to use}} platform for the intuitive annotation and segmentation of tumor region images (Figure 1). Its clinically driven development followed an open modular architecture focusing on <b>plug-in</b> <b>components</b> [1]. Dr Eye’s main advantage is that the user can quickly and accurately delineate complex areas in medical images. Additionally, multiple labels can be set to allow the user to annotate and manage many different areas of interest in each selected slide. The close collaboration with clinicians i...|$|R
40|$|Smart {{spaces are}} gaining {{relevance}} as promising deployment environments for novel classes of applications {{stemming from the}} dynamic discovery and interaction between smart objects and the resources available in their physical localities, e. g., seamlessly exploiting smartphones to control embedded home equipment. The Semantic Information Broker (SIB) of the Smart-M 3 platform can well support interoperability of statically unknown devices and service/application components in a smart space based on lightweight semantically-tagged data sharing. The paper focuses on the experience made and the {{lessons learned from the}} work of design, implementation, deployment, and experimental validation/evaluation of the SIB “Plug-in” extension. This extension allows SIB administrators to personalize and extend SIB installations simply and with a well-defined methodology, by cleanly adding plug-in extensions that can support domain- and deployment-specific facilities, thus opening new market opportunities for Smart-M 3 exploitation. The reported results show the feasibility and effectiveness of the proposed approach: in particular, we report the experience made with a notable example of <b>plug-in</b> <b>component</b> that can measure the runtime-offered SIB quality of service, expressed as a set of concise performance indicators...|$|E
40|$|As {{automated}} systems {{become more}} complex, their propensity to fail {{in unexpected ways}} increases. As humans, we often notice their failures with the same ease that we recognize our own plans going awry. Yet the systems themselves are frequently oblivious that the function {{they are designed to}} perform is no longer being performed. This is because humans have explicit expectations – about both the system’s behavior and our own behaviors – that allow us to notice an unexpected event. In this paper, we propose a way for AI systems to generate expectations about their own behavior, monitor them, and attempt to diagnose the underlying failures that cause them. Once a cause has been hypothesized, attempts at recovery can be made. The process is naturally meta-cognitive in that the system must reason about its own cognitive processes to arrive at an accurate and useful response. We present an architecture called the Meta-Cognitive Loop (MCL), which attempts to tackle robustness in cognitive systems in a domain general way, as a <b>plug-in</b> <b>component</b> to decrease the brittleness of AI systems...|$|E
40|$|Abstract — Smart {{spaces are}} gaining {{relevance}} as promising deployment environments for novel classes of applications {{stemming from the}} dynamic discovery and interaction between smart objects and the resources available in their physical localities, e. g., seamlessly exploiting smartphones to control embedded home equipment. The Semantic Information Broker (SIB) of the Smart-M 3 platform can well support interoperability of statically unknown devices and service/application components in a smart space based on lightweight semantically-tagged data sharing. The paper focuses on the experience made and the {{lessons learned from the}} work of design, implementation, deployment, and experimental validation/evaluation of the SIB “Plug-in” extension. This extension allows SIB administrators to personalize and extend SIB installations simply and with a well-defined methodology, by cleanly adding plug-in extensions that can support domain- and deployment-specific facilities, thus opening new market opportunities for Smart-M 3 exploitation. The reported results show the feasibility and effectiveness of the proposed approach: in particular, we report the experience made with a notable example of <b>plug-in</b> <b>component</b> that can measure the runtime-offered SIB quality of service, expressed as a set of concise performance indicators. Keywords- Smart spaces, ubiquitous computing, lightweight semantic technologies, interoperability, dynamic extensibility I...|$|E
40|$|The {{automotive}} industry has recently agreed upon the embedded software standard AUTOSAR, which structures an application into reusable components {{that can be}} deployed using a configuration scheme. However, this configuration takes place at design time, with no provision for dynamically installing components to reconfigure the system. In this paper, we present the design and implementation of a dynamic component model that extends AUTOSAR with the possibility to add <b>plug-in</b> <b>components</b> at runtime. This opens up for shorter deployment time for new functions; opportunities for vehicles to participate in federated embedded systems; and involvement of third-party software developers. ...|$|R
40|$|The GENSS {{project has}} {{developed}} a flexible generic brokerage framework based {{on the use of}} <b>plug-in</b> <b>components</b> that are themselves web services. The focus in GENSS has been on mathematical web services, but the broker itself is domain inde-pendent and it is the plug-ins that act as sources of domain-specific knowledge. A range of plug-ins has been developed that offer a variety of matching technologies including ontological reasoning, mathematical reasoning, reputation modelling, and textual analysis. The ranking mechanism too is a plug-in, thus we have a completely re-targettable matchmaking and brokerage shell plus a selection of useful packaged behaviours. ...|$|R
40|$|<b>Plug-in</b> <b>components</b> are a {{means for}} making feature-rich {{applications}} customizable. Combined with plug-and-play composition, end users can assemble customized applica-tions without programming. If plug-and-play composition is also dynamic, applications can be reconfigured on the fly to load only components the user needs for his current work. We have created Plux. NET, a plug-in framework that supports dynamic plug-and-play composition. The basis for plug-and-play in Plux is the composer which replaces pro-grammatic composition by automatic composition. Compo-nents just specify their requirements and provisions using metadata. The composer then assembles the components based on that metadata by matching requirements and pro-visions. When the composer needs to reuse general-purpose components {{in different parts of}} an application, the compo-nent model requires genericity. The composer depends on metadata that specify which components should be connected and for general-purpose components those meta-data need to be different on each reuse. We present an ap-proach for generic <b>plug-ins</b> with <b>component</b> templates and an implementation for Plux. The general-purpose compo-nents become templates and the templates get parameter-ized when they are composed...|$|R
40|$|Abstract—MapReduce is a {{programming}} {{model that}} supports distributed and parallel processing for large-scale data-intensive {{applications such as}} machine learning, data mining, and scientific simulation. Hadoop is an open-source implementation of the MapReduce programming model. Hadoop is used by many companies including Yahoo!, Amazon, and Facebook to perform various data mining on large-scale data sets such as user search logs and visit logs. In these cases, it is very common to share the same computing resources by multiple users due to practical considerations about cost, system utilization, and manageability. However, Hadoop assumes that all cluster nodes are dedicated to a single user, failing to guarantee high performance in the shared MapReduce computation environment. In this paper, we propose two optimization schemes, prefetch-ing and pre-shuffling, which improve the overall performance under the shared environment while retaining compatibility with the native Hadoop. The proposed schemes are implemented in the native Hadoop- 0. 18. 3 as a <b>plug-in</b> <b>component</b> called HPMR (High Performance MapReduce Engine). Our evaluation on the Yahoo!Grid platform with three different workloads and seven types of test sets from Yahoo! shows that HPMR reduces the execution time by up to 73 %. I...|$|E
40|$|Being {{part and}} parcel of the daily life for billions of people all over the globe, the domain of mobile Applications (Apps) is the fastest growing sector of mobile market today. Users, however, are {{frequently}} overwhelmed by the vast number of released Apps and frequently updated versions. Towards this end, we propose a novel version-sensitive mobile App recommendation framework. It is able to recommend appropriate Apps to right users by jointly exploring the version progression and dual-heterogeneous data. It is helpful for alleviating the data sparsity problem caused by version division. As a byproduct, it can be utilized to solve the in-matrix and out-of-matrix cold-start problems. Considering the progression of versions within the same categories, the performance of our proposed framework can be further improved. It is worth emphasizing that our proposed version progression modeling can work as a <b>plug-in</b> <b>component</b> to be embedded into most of the existing latent factor-based algorithms. To support the online learning, we design an incremental update strategy for the framework to adapt the dynamic data in real-time. Extensive experiments on a real-world dataset have demonstrated the promising performance of our proposed approach with both offline and online protocols. Relevant data, code, and parameter settings are available at [URL]...|$|E
40|$|Interoperability {{issues have}} been well {{acknowledged}} as an impediment to improve productivity in the Architecture, Engineering and Construction (AEC) industry. The current information exchange between building design and energy models has numerous problems, including object parametric information deficiencies, geometric misrepresentations and re-input data confusion. These problems inevitably lead to huge money, time and effort losses. This thesis presents an automated solution that works towards unified information exchange between building design and energy modeling in building performance. First, an Extensible Style-sheet Language Transformation (XSLT) is designed to specify a set of transform instructions. Based on the instructions in the XSLT, building elements and their attributes in the design open schema are matched to the corresponding energy analysis patterns. The contents in the design open schema can then be automatically transformed through meticulous checking and comparison. The proposed solution has been implemented with Microsoft Visual C# Studio 2013, {{through the creation of}} a Windows form application and a software <b>plug-in</b> <b>component.</b> This method would facilitate the information exchange between existing open standard schemas, gbXML and DOE- 2 INP, supported by Autodesk Revit and eQUEST. The effectiveness of the solution has been tested with three real case studies. The results from the proposed solution have demonstrated the overall rectification of the geometric and material misrepresentations inherent to the current software interoperability process. ...|$|E
30|$|Approaches {{to extend}} and {{customize}} DBMS adopted the component-oriented {{paradigm for designing}} at least the customizable modules of the architecture, as <b>components.</b> <b>Plug-in</b> <b>components</b> are added to functionally complete DBMS and fulfill specialized needs. The components of component database management systems (CDBMS) are families of base and abstract data types or implementations of some DBMS function, such as new index structures. To date, all systems in this category {{are based on the}} relational data model and existing relational DBMS, and all of them offer some OO extensions. Example systems include IBM, DB 2 UDB (IBM 1995), Informix Universal Server (Informix 1998), Oracle 8 (Oracle 1999), and Predator [94]. Descriptions of sample component developments can be found in [18, 38].|$|R
40|$|Mobile display {{devices such}} as phones and PDAs have become very widely {{available}} and used. However, most content on these devices is limited to text, static images and motion video. Displaying and interacting with dynamic diagrammatic content on such devices is difficult, as is engineering applications to implement such functionality. We describe a set of <b>plug-in</b> <b>components</b> for a meta-diagramming tool that enable a diagram type to be visualized and interacted with on mobile devices. Key features of our approach include generating diagram content from an existing meta-tool, run-time user configuration of diagram appearance and navigation, and multi-level, zoomable diagrams and diagram content. We describe our experiences prototyping, using and evaluating this new mobile device diagramming technology...|$|R
40|$|Group {{awareness}} provides {{members of}} a team with relevant knowledge of other’s activities {{to enable them to}} make informed decisions with regards to their future work. Providing group awareness in collaborative editing tools is important to enhance a team’s efficiency and effectiveness. We describe a new approach to adding group awareness facilities to an existing single-user editing application using <b>plug-in</b> <b>components</b> and Web Services. We have added group awareness facilities as a <b>component</b> based <b>plug-in</b> to Pounamu, a meta-CASE tool. We have used this plugin, web service based system to enhance Pounamu’s existing collaborative editing facilities. We describe the architecture of our approach, key design and implementation issues, illustrate its feasibility and evaluate its effectivenes...|$|R
