673|7065|Public
2500|$|Here the {{notation}} is as follows. u is {{the independent variable}} (instead of x), k {{is the number of}} control points, N is a B-spline (used instead of B), [...] n is the <b>polynomial</b> <b>degree,</b> P is a control point and w is a weight. The denominator is a normalizing factor that evaluates to one if all weights are one.|$|E
50|$|The {{discriminant}} of {{a linear}} <b>polynomial</b> (<b>degree</b> 1) is rarely considered. If needed, {{it is commonly}} defined to be equal to 1 (this {{is compatible with the}} usual conventions for the empty product and the determinant of the empty matrix). There is no common convention for the discriminant of a constant <b>polynomial</b> (<b>degree</b> 0).|$|E
5000|$|The mapping from a {{polynomial}} function to the <b>polynomial</b> <b>degree</b> is a translation-invariant functional.|$|E
5000|$|... where [...] {{are known}} <b>polynomials</b> of <b>degrees</b> p, s, y respectively, [...] is a known <b>polynomial</b> of <b>degree</b> not greater than , and [...] are unknown <b>polynomials</b> of <b>degrees</b> not greater than [...] and [...] respectively.|$|R
2500|$|Codewords are <b>polynomials</b> of <b>degree</b> [...] Suppose {{that the}} {{generator}} <b>polynomial</b> [...] has <b>degree</b> [...] <b>Polynomials</b> of <b>degree</b> [...] that are divisible by [...] result from multiplying [...] by <b>polynomials</b> of <b>degree</b> [...] We have [...] such polynomials. Each {{one of them}} corresponds to a codeword. Therefore, [...] for cyclic codes.|$|R
2500|$|... {{where the}} <b>polynomial's</b> <b>degree</b> (in x) in the term with {{denominator}} n'k is2k.|$|R
5000|$|Smoothing, <b>polynomial</b> <b>degree</b> 2,3 : [...] (the {{range of}} values for i also applies to the {{expressions}} below) ...|$|E
5000|$|The class VP is the {{algebraic}} analog of P; it is {{the class}} of polynomials [...] of <b>polynomial</b> <b>degree</b> that have polynomial size circuits over a fixed field [...] The class VNP is the analog of NP. VNP {{can be thought of}} as the class of polynomials [...] of <b>polynomial</b> <b>degree</b> such that given a monomial we can determine its coefficient in [...] efficiently, with a polynomial size circuit.|$|E
50|$|The hp-FEM {{combines}} adaptively, elements with variable size h and <b>polynomial</b> <b>degree</b> p {{in order}} to achieve exceptionally fast, exponential convergence rates.|$|E
2500|$|<b>Polynomials</b> {{of small}} <b>degree</b> {{have been given}} {{specific}} names. A <b>polynomial</b> of <b>degree</b> zero is a constant polynomial or simply a constant. <b>Polynomials</b> of <b>degree</b> one, two or three are respectively linear polynomials, quadratic polynomials and cubic <b>polynomials.</b> For higher <b>degrees</b> the specific names are not commonly used, although quartic <b>polynomial</b> (for <b>degree</b> four) and quintic <b>polynomial</b> (for <b>degree</b> five) are sometimes used. The names for the degrees may {{be applied to the}} polynomial or to its terms. For example, in [...] the term [...] is a linear term in a quadratic polynomial.|$|R
5000|$|... {{where the}} <b>polynomial's</b> <b>degree</b> (in x) in the term with {{denominator}} nk is 2k.|$|R
40|$|We {{present a}} {{proof of the}} {{discrete}} maximum principle (DMP) for the 1 D Poisson equation -u″=f equipped with mixed Dirichlet-Neumann boundary conditions. The problem is discretized using finite elements of arbitrary lengths and <b>polynomial</b> <b>degrees</b> (hp-FEM). We show that the DMP holds on all meshes with no limitations to the sizes and <b>polynomial</b> <b>degrees</b> of the elements. © 2009 Global Science Press...|$|R
50|$|When, with Stirling's or Bessel's, {{the last}} term used {{includes}} {{the average of}} two differences, then one more point is being used than Newton's or other polynomial interpolations would use for the same <b>polynomial</b> <b>degree.</b> So, in that instance, Stirling's or Bessel's is not putting an N−1 degree polynomial through N points, but is, instead, trading equivalence with Newton's for better centering and accuracy, giving those methods sometimes potentially greater accuracy, for a given <b>polynomial</b> <b>degree,</b> than other polynomial interpolations.|$|E
5000|$|V uses {{coefficients}} {{to evaluate}} [...] and [...] Then it checks that the <b>polynomial</b> <b>degree</b> is at most n {{and that the}} following identities are true:If either fails then reject.|$|E
50|$|The hpk-FEM {{combines}} adaptively, elements with variable size h, <b>polynomial</b> <b>degree</b> of {{the local}} approximations p and global differentiability {{of the local}} approximations (k-1) {{in order to achieve}} best convergence rates.|$|E
40|$|Locally adapted meshes and <b>polynomial</b> <b>degrees</b> {{can greatly}} improve {{spectral}} element accuracy and applicability. A balancing domain decomposition by constraints (BDDC) preconditioner is constructed and analysed for both continuous (CG) and discontinuous (DG) Galerkin discretizations of scalar elliptic problems, built by nodal spectral elements with variable <b>polynomial</b> <b>degrees.</b> The DG case {{is reduced to}} the CG case via the auxiliary space method. The proposed BDDC preconditioner is proved to be scalable {{in the number of}} subdomains and quasi-optimal in both the ratio of local <b>polynomial</b> <b>degrees</b> and element sizes and the ratio of subdomain and element sizes. Several numerical experiments in the plane confirm the obtained theoretical convergence rate estimates, and illustrate the preconditioner performance for both CG and DG discretizations. Different configurations with locally adapted <b>polynomial</b> <b>degrees</b> are studied, as well as the preconditioner robustness with respect to discontinuities of the elliptic coefficients across subdomain boundaries. These results apply also to other dual-primal preconditioners defined by the same set of primal constraints, such as FETI-DP preconditioners...|$|R
50|$|The Bernstein basis <b>polynomials</b> of <b>degree</b> n form a {{basis for}} the vector space Πn of <b>polynomials</b> of <b>degree</b> at most n.|$|R
40|$|Discrete Maximum Principle for Poisson Equation with Mixed Boundary Conditions Solved by hp-FEM Abstract: We {{present a}} {{proof of the}} {{discrete}} maximum principle (DMP) for the Poisson equation −∆u = f equipped with mixed Dirichlet-Neumann boundary conditions. The problem is discretized using finite elements of arbitrary lengths and <b>polynomial</b> <b>degrees</b> (hp-FEM). In contrast to the Dirichlet case, with mixed Dirichlet-Neumann boundary conditions the DMP holds without any limitations on the mesh or <b>polynomial</b> <b>degrees</b> of the elements...|$|R
5000|$|... #Caption: Algebraic {{numbers on}} the complex plane colored by <b>{{polynomial}}</b> <b>degree.</b> (red = 1, green = 2, blue = 3, yellow = 4). Points become smaller as the integer polynomial coefficients become larger.|$|E
5000|$|... where hat (^) {{denotes the}} {{estimate}} and (J − 1) is the <b>polynomial</b> <b>degree,</b> {{can be performed}} by applying the orthogonality principle. The error '''' in {{the sum of the}} squared errors can be written as ...|$|E
5000|$|Conclude {{that any}} root [...] of [...] is a root of [...] Since the <b>polynomial</b> <b>degree</b> of [...] is one {{less than that}} of , it is [...] "simpler" [...] to find the {{remaining}} zeros by studying [...]|$|E
5000|$|... (5) This concept {{also applies}} to higher <b>degree</b> <b>polynomials.</b> However, the {{weighting}} function [...] is obviously more complicated. In addition, the estimation variances increase exponentially as <b>polynomial</b> <b>degrees</b> increase linearly (i.e., in unit steps). However, there are {{ways of dealing with}} this as described in.|$|R
40|$|AbstractIn Dickson (1896 – 1897) [2], {{the author}} listed all {{permutation}} <b>polynomials</b> up to <b>degree</b> 5 over an arbitrary finite field, and all permutation <b>polynomials</b> of <b>degree</b> 6 over finite fields of odd characteristic. The classification of <b>degree</b> 6 permutation <b>polynomials</b> over finite fields of characteristic 2 was left incomplete. In this paper we complete {{the classification of}} permutation <b>polynomials</b> of <b>degree</b> 6 over finite fields of characteristic 2. In addition, all permutation <b>polynomials</b> of <b>degree</b> 7 over finite fields of characteristic 2 are classified...|$|R
5000|$|This {{can only}} be {{achieved}} if <b>polynomials</b> of <b>degree</b> 3 or higher are used. The classical approach is to use <b>polynomials</b> of <b>degree</b> 3 [...] - [...] the case of cubic splines.|$|R
5000|$|Proofs of circuit lower bounds are {{strongly}} connected to derandomization. A proof that P = BPP would imply that either [...] or that permanent cannot be computed by nonuniform arithmetic circuits (polynomials) of polynomial size and <b>polynomial</b> <b>degree.</b>|$|E
50|$|In other words, for {{arbitrary}} parameters, only {{a finite}} number of Romanovski polynomials are orthogonal.This property is referred to as ``finite orthogonality.However, for some special cases in which the parameters depend in a particular way on the <b>polynomial</b> <b>degree</b> infinite orthogonality can be achieved.|$|E
5000|$|In {{terms of}} proving lower bounds, our {{knowledge}} is very limited. Since we study the computation of formal polynomials, {{we know that}} polynomials of very large degree require large circuits, for example, a polynomial of degree [...] require a circuit of size roughly [...] So, the main goal is to prove lower bound for polynomials of small degree, say, polynomial in [...] In fact, as {{in many areas of}} mathematics, counting arguments tell us that there are polynomials of <b>polynomial</b> <b>degree</b> that require circuits of superpolynomial size. However, these counting arguments usually do not improve our understanding of computation. The following problem is the main open problem in this area of research: find an explicit polynomial of <b>polynomial</b> <b>degree</b> that requires circuits of superpolynomial size.|$|E
50|$|To {{say that}} an {{operator}} reduces degree by one {{means that if}} '''' is a <b>polynomial</b> of <b>degree</b> '''', then '''' is either a <b>polynomial</b> of <b>degree</b> , or, in case , '''' is 0.|$|R
5000|$|... where [...] is a <b>polynomial</b> of <b>degree</b> 3 or 4. Another {{special case}} of an abelian {{integral}} is a hyperelliptic integral, where , in the formula above, is a <b>polynomial</b> of <b>degree</b> greater than 4.|$|R
40|$|High-order methods {{gain more}} and more {{attention}} in computational fluid dynamics. However, the potential advantage of these methods depends critically {{on the availability of}} efficient elliptic solvers. With spectral-element methods, static condensation is a common approach {{to reduce the number of}} degree of freedoms and to improve the condition of the algebraic equations. The resulting system is block-structured and the face-based operator well suited for matrix-matrix multiplications. However, a straight-forward implementation scales super-linearly with the number of unknowns and, therefore, prohibits the application to high <b>polynomial</b> <b>degrees.</b> This paper proposes a novel factorization technique, which yields a linear operation count of just 13 N multiplications, where N is the total number of unknowns. In comparison to previous work it saves a factor larger than 3 and clearly outpaces unfactored variants for all <b>polynomial</b> <b>degrees.</b> Using the new technique as a building block for a preconditioned conjugate gradient method resulted in a runtime scaling linearly with N for <b>polynomial</b> <b>degrees</b> 2 ≤ p ≤ 32. Moreover the solver proved remarkably robust for aspect ratios up to 128...|$|R
5000|$|The Bruun factorization, {{and thus}} the Bruun FFT algorithm, was {{generalized}} to handle arbitrary even composite lengths, i.e. dividing the <b>polynomial</b> <b>degree</b> by an arbitrary radix (factor), as follows. First, we define a set of polynomials φN,α(z) for positive integers N and for α in [...] by: ...|$|E
50|$|Here the {{notation}} is as follows. u is {{the independent variable}} (instead of x), k {{is the number of}} control points, N is a B-spline (used instead of B), n is the <b>polynomial</b> <b>degree,</b> P is a control point and w is a weight. The denominator is a normalizing factor that evaluates to one if all weights are one.|$|E
50|$|Some FEM sites {{describe}} hp-adaptivity as {{a combination}} of h-adaptivity (splitting elements in space while keeping their <b>polynomial</b> <b>degree</b> fixed) and p-adaptivity (only increasing their <b>polynomial</b> <b>degree).</b> This is not entirely accurate. The hp-adaptivity is significantly different from both h- and p-adaptivity since the hp-refinement of an element {{can be done in}} many different ways. Besides a p-refinement, the element can be subdivided in space (as in h-adaptivity), but there are many combinations for the polynomial degrees on the subelements. This is illustrated in the figure on the right. For example, if a triangular or quadrilateral element is subdivided into four subelements where the polynomial degrees are allowed to vary by at most two, then this yields 3^4 = 81 refinement candidates (not considering polynomially anisotropic candidates). Analogously, splitting a hexahedron into eight subelements and varying their polynomial degrees by at most two yields 3^8 = 6,561 refinement candidates. Clearly, standard FEM error estimates providing one constant number per element are not enough to guide automatic hp-adaptivity.|$|E
5000|$|Phase 1: P → V: P sends f1(z) to V. V uses {{coefficients}} {{to evaluate}} f1(0) and f1(1). Then it checks that the <b>polynomials</b> <b>degree</b> is at most n {{and that the}} following identities are true: ...|$|R
30|$|In this paper, {{we study}} the finite time {{stability}} of delay differential equations via a delayed matrix cosine and sine of <b>polynomial</b> <b>degrees.</b> Firstly, we give two alternative formulas of the solutions for a delay linear differential equation. Secondly, we obtain a norm {{estimation of the}} delayed matrix sine and cosine of <b>polynomial</b> <b>degrees,</b> which are used to establish sufficient conditions to guarantee our finite time stability results. Meanwhile, a numerical example is presented demonstrating the validity of our theoretical results. Finally, we extend our study to the same issue of a delay differential equation with nonlinearity {{by virtue of the}} Gronwall inequality approach.|$|R
30|$|We denote by GT_n (n∈R^+) {{the set of}} all {{generalized}} nonnegative trigonometric <b>polynomials</b> of <b>degree</b> at most n and we denote by T_n (n ∈N) the set of all real trigonometric <b>polynomials</b> of <b>degree</b> at most n.|$|R
