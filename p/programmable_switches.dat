47|130|Public
50|$|Generally, the FPGA routing is unsegmented. That is, each wiring segment spans {{only one}} logic block before it terminates in a switch box. By turning {{on some of}} the <b>programmable</b> <b>switches</b> within a switch box, longer paths can be constructed. For higher speed interconnect, some FPGA {{architectures}} use longer routing lines that span multiple logic blocks.|$|E
50|$|NKK SWITCHES CO., LTD. (enukeikei suicchizu) (Formerly Nihon Kaiheki Kogyo Co Ltd)　is a {{designer}} and manufacturer of diversified industrial operational switches with FY2010 sales of $96 million. NKK Switches offers illuminated, process sealed, miniature, specialty, surface mount and LCD <b>programmable</b> <b>switches.</b> The company manufactures toggle, rocker, pushbutton, slide, rotary, DIP rotary, keypad and keylock switches.|$|E
50|$|RailDriver {{includes}} the basic throttle, reverser, and brake levers as separate control handles that mimic generic operation of real locomotive controls. Frequently used switches for lights, sand, bell, and whistle are also included, with <b>programmable</b> <b>switches</b> for other frequently used functions. For operations such as camera movement the RailDriver has a four-way pan pad with zoom rocker switches.|$|E
5000|$|... 1994: OKEFORD Protocol Converter and Open <b>Programmable</b> <b>Switch</b> {{launched}} ...|$|R
5000|$|... 2001: OEM Oasis {{middleware}} {{layer to}} Intel Corporation and developed MCCS Linux based <b>programmable</b> <b>switch</b> ...|$|R
50|$|Barefoot TofinoBarefoot TofinoTM is a P4 <b>programmable</b> <b>switch</b> {{chip that}} can {{run up to}} speeds of 6.5 Tbit/s.|$|R
50|$|Whenever a {{vertical}} and a horizontal channel intersect, {{there is a}} switch box. In this architecture, when a wire enters a switch box, there are three <b>programmable</b> <b>switches</b> that allow it to connect to three other wires in adjacent channel segments. The pattern, or topology, of switches used in this architecture is the planar or domain-based switch box topology. In this switch box topology, a wire in track number one connects only to wires in track number one in adjacent channel segments, wires in track number 2 connect only to other wires in track number 2 and so on. The figure on the right illustrates the connections in a switch box.|$|E
50|$|Programmable test {{networks}} {{can lower}} the {{barrier to entry}} for new ideas, increasing the rate of innovation in network infrastructure. Virtualization of networks is accomplished {{by the use of}} virtual routers and the multiplexing of links between them. These programmable testbed networks call for <b>programmable</b> <b>switches</b> and routers that, using virtualization, can process information flows for multiple isolated experimental networks simultaneously. It is envisaged that a researcher will be allocated a slice of resources across the whole network, consisting of a portion of network links, packet processing elements (e.g. routers) and end-hosts; researchers can program their slices to behave as they wish. A slice could extend across the backbone, into access networks, into college campuses, industrial research labs, and include wireless networks, sensor networks, and may (or should) include real users of the applications it supports.|$|E
40|$|Japan Society for the Promotion of Science, Japan; Ministry of Education, Culture, Sports, Science and Technology, Japan 18002003 We {{describe}} a reconfigurable binary-decision-diagram logic circuit based on Shannon's expansion of Boolean logic function and its graphical representation on a semiconductor nanowire network. The circuit is reconfigured by using <b>programmable</b> <b>switches</b> that electrically connect and disconnect {{a small number}} of branches. This circuit has a compact structure with {{a small number of}} devices compared with the conventional look-up table architecture. A variable Boolean logic circuit was fabricated on an etched GaAs nanowire network having hexagonal topology with Schottky wrap gates and SiN-based <b>programmable</b> <b>switches,</b> and its correct logic operation together with dynamic reconfiguration was demonstrated...|$|E
40|$|Several {{amorphous}} semiconductor material compositions {{are well known}} to exhibit I-V switching characteristics which are useful for numerous applications. The application of thin-thick films of such materials for <b>programmable</b> <b>switching</b> interconnections and circuits is a new area attracting attention around the world. This article presents information on the properties of such material compositions relevant for <b>programmable</b> <b>switching</b> interconnections {{as well as for}} buried R/C/L circuit element fabrication along with some results by the authors on chalcogenide based {{amorphous semiconductor}} material composition...|$|R
40|$|A <b>programmable</b> <b>switch</b> {{based on}} a DNA hairpin loop is {{functionalised}} with a rigid or flexible porphyrin or FAM and TAMRA FRET pair, which provides insight into the restructuring of the hairpin as well as porphyrin–porphyrin coupling. The switch contains five discrete states which can be accessed independently and followed by real-time spectroscopy, opening {{the way to a}} quinary computing code...|$|R
40|$|<b>Programmable</b> <b>switching</b> {{chips are}} {{becoming}} more com-monplace, along with new packet processing languages to configure the forwarding behavior. Our paper explores {{the design of a}} compiler for such switching chips, in par-ticular how to map logical lookup tables to physical ta-bles, while meeting data and control dependencies in the program. We study the interplay between Integer Linear Programming (ILP) and greedy algorithms to generate solutions optimized for latency, pipeline occupancy, or power consumption. ILP is slower but more likely to fit hard cases; further, ILP can be used to suggest the best greedy approach. We compile benchmarks from real pro-duction networks to two different <b>programmable</b> <b>switch</b> architectures: RMT and Intel’s FlexPipe. Greedy solu-tions can fail to fit and can require up to 38 % more stages, 42 % more cycles, or 45 % more power for some bench-marks. Our analysis also identifies critical resources in chips. For a complicated use case, doubling the TCAM per stage reduces the minimum number of stages needed by 12. 5 %. ...|$|R
40|$|Abstract — This paper {{examines}} {{an extreme}} {{point in the}} design space of <b>programmable</b> <b>switches</b> and network policy enforcement. Rather than relying on extensive changes to switches to provide more programmability, SideCar distributes custom processing code between shims running on every end host and general purpose sidecar processors, such as server blades, connected to each switch via commonly available redirection mechanisms. This provides applications with pervasive network instrumentation and programmability on the forwarding plane. While not a perfect replacement for <b>programmable</b> <b>switches,</b> this solves several pressing problems while requiring little or no change to existing switches. In particular, {{in the context of}} public cloud data centers with 1000 s of tenants, we present novel solutions for multicast, controllable network bandwidth allocation (e. g., use-whatyou-pay-for), and reachability isolation (e. g., a tenant’s VM only sees other VMs of the tenant and shared services) ...|$|E
40|$|Abstract- This paper {{studies the}} routing {{problem for a}} new Field-Programmable Gate Array (FPGA) and Field-Programmable Interconnect Chip (FPIC) routing {{architecture}} which improves upon the one proposed in [9] by providing continuing switches along the horizontal and vertical wire segments. The addition of continuing switches leads to higher routability and better timing performance than that for the routing architecture in [9]. A two-phase routing algorithm for the new routing architecture is developed. Both the initial routing phase and the rip-up and reroute phase employ a dynamic programming technique. The rip-up and reroute phase can also {{be applied to the}} segmented channel routing problem for row-based FPGA routing structures. Experimental results show that routability is improved dramatically and the number of active <b>programmable</b> <b>switches</b> in connecting paths and the total number of <b>programmable</b> <b>switches</b> are reduced, when compared with the results in [9] and [3]. The running time of the algorithm is less than 7 seconds for eachof ve industrial circuits. ...|$|E
40|$|In this paper, a current-mode (CM) {{multifunction}} {{first order}} filter configuration using single current differenc buffered amplifier (CDBA) is proposed {{which can be}} used to synthesize lowpass (LP), highpass (HP) filter functions simultaneously. The proposed topology can be modified to include an allpass (AP) filter function with the help of <b>programmable</b> <b>switches.</b> Workability of the proposed topolgy is demonstrated through PSPICE simulations using current feedback operational amplifier (CFOA) based realization of CDBA...|$|E
30|$|This {{research}} {{was supported in part}} by National Research Foundation (NRF) of Korea Grant funded by the Korean Government (MSIP) (No. 2017 R 1 E 1 A 1 A 01073742) and in part by Institute for Information & communications Technology Promotion (IITP) grant funded by the Korea government (MSIT) (No. 2017 - 0 - 00195, Development of Core Technologies for <b>Programmable</b> <b>Switch</b> in Multi-Service Networks).|$|R
40|$|We propose an {{alternative}} router design {{to fill the}} gap between PC-based open source software routers and commercial high-end routers. Our hardware accelerated software router uses commodity PC hardware running an open source software router for the control path, and couples it with <b>programmable</b> <b>switching</b> hardware by delegating most of the packet forwarding to the switch. We describe a prototype implementation and show that it is capable of handling the traffic requirements of an existing carrier aggregation network. 1...|$|R
50|$|Barefoot Networks is a {{computer}} networking company headquartered in Palo Alto, California. The company designs and produces <b>programmable</b> network <b>switch</b> silicon, systems and software.|$|R
40|$|This paper {{presents}} {{a new approach}} {{for the evaluation of}} FPGA routing resources in the presence of interconnect faults. All possible interconnect faults for <b>programmable</b> <b>switches</b> and wiring channels are considered. Signal routing in the presence of faulty interconnect resources is analyzed at both switch block and the entire FPGA. Two new probabilistic routing (routability) metrics are proposed and used as figures of merit for evaluating the interconnect resources of commercially available FPGAs as well as academic architectures. I...|$|E
40|$|A {{number of}} studies have been {{conducted}} with the aim to apply parallel computation to problems associated with solving finite element equations arising in structural mechanics and fluid dynamics. These studies have provided many important results. The present investigation is concerned with a set of experiments designed to test two ideas, including configurability and substructuring. The considered algorithms and tests are intended for implementation on the Configurable, Highly Parallel (CHiP) family of architecture described by Snyder (1982). The ChiP computer is composed of homogeneous processing elements (PEs) placed at regular intervals in a lattice of <b>programmable</b> <b>switches.</b> Two examples of the role of configurability and substructuring for simple iterative algorithms are considered, giving attention to conjugate gradient iterations, and tridiagonal systems of equations...|$|E
40|$|In {{segmented}} channel routing of row-based FPGAs, the routability and interconnection delays {{depend on}} {{the choice of the}} upper bounds on the number of <b>programmable</b> <b>switches</b> used in routing net segments in the channel. Traditionally, the upper bounds for the net segments in the same channel are set uniformly. In this paper, we present algorithms for determining the upper bounds for all net segments of a net simultaneously, so that the prede ned source-to-sink delay bound on the net is satis ed and the routability ofthe net is maximized. The upper bounds on net segments in a channel thus in general are non-uniform. Preliminary experimental results show that the algorithms can signi cantly improve routability and reduce delay bound violation as compared with the traditional approach. ...|$|E
50|$|In {{the early}} 1960s, IBM marketed the IBM 7740 Communication Control System and the IBM 7750 Programmed Transmission Control, which were <b>programmable</b> message <b>switching</b> systems.|$|R
5000|$|Hyper-V Network virtualization: <b>Programmable</b> Hyper-V <b>switch</b> (a new {{building}} block of Microsoft's software-defined networking solution); VXLAN encapsulation support; Microsoft Software Load Balancer interoperability; better IEEE Ethernet standard compliance.|$|R
40|$|This paper {{presents}} {{the design and}} implementation of an incrementally scalable architecture for middleboxes based on commodity servers and operating systems. xOMB, the eXtensible Open MiddleBox, employs general programmable network processing pipelines, with user-defined C++ modules responsible for parsing, transforming, and forwarding network flows. We implement three processing pipelines in xOMB, demonstrating good performance for load balancing, protocol acceleration, and application integration. In particular, our xOMB load balancing switch is able to match or outperform a commercial <b>programmable</b> <b>switch</b> and popular open-source reverse proxy while still providing a more flexible programming model...|$|R
40|$|This paper {{presents}} the Merlin network management framework. With Merlin, network administrators express functionality such as accounting, bandwidth provisioning, and traffic filtering in a high-level policy language, and use automated tools and mechanisms to implement them. The framework includes: (i) a declarative language for specifying policies, (ii) infrastructure for distributing, refining, and coordinating enforcement of policies, and (iii) a run-time monitor that inspects incoming and outgoing traffic on end hosts. We describe Merlin’s policy language and enforcement infrastructure, illustrate {{the use of}} Merlin on case studies, and present experimental results demonstrating that Merlin is more efficient and scalable than equivalent implementations based on <b>programmable</b> <b>switches</b> and centralized middleboxes. Overall, Merlin simplifies the task of network administration by providing high-level abstractions and tools for specifying and enforcing rich network policies. 1...|$|E
40|$|The {{emerging}} {{notion of}} active networks describes the general vision of communication network evolution, where the network nodes become active because they {{take part in}} the computation of applications and provision of customized services. In this context mobile agent technology and <b>programmable</b> <b>switches</b> are considered as enabling technologies. This article looks at the impact of mobile agent technology on telecommunication service environments, influenced by the intelligent network (IN) architecture. The authors illustrate how the integration of mobile agent platforms into IN elements, notably into the IN switches, will realize an active IN environment. This enables telecom services implemented through mobile service agents on a per user basis to be instantly deployed at programmable switching nodes, which results in better performance and fault tolerance compared to traditional IN service implementations...|$|E
40|$|A rich {{body of work}} {{in recent}} years has {{advocated}} the use of cloud technologies within a home environment, but nothing has materialized so far in terms of real-world implementations. In this paper, we argue that {{this is due to the}} fact that none of these proposals have addressed some of the practical challenges of moving home appli-cations to the cloud. Specifically, we discuss the prag-matic implications of moving to the cloud including, data and information security, increase in network traffic, and fault tolerance. To elicit discussion, we take a clean-slate approach and introduce a proof-of-concept smart home, dubbed Clome 1, that decouples non-trivial computation from home applications and transfers it to the cloud. We also discuss how a Clome-like smart home with decen-tralized processing and storage can be enabled through OpenFlow <b>programmable</b> <b>switches,</b> home-centric pro-gramming platforms, and thin-client computing. ...|$|E
40|$|This {{document}} {{presents the}} LHCb {{requirements for the}} distribution of trigger decisions and timing and control information to the Front-End electronics. It discusses {{the applicability of the}} existing RD- 12 system with respect to these requirements. The first analysis shows that the RD- 12 transmitter and receiver chips can be used. LHCb will require building a Readout Supervisor, a fanout unit, and a <b>programmable</b> <b>switch,</b> in order to support the concept of partitioned running. Also the effect of transmission error in Channel A of the RD- 12 system is currently under study. ...|$|R
40|$|Programmable {{nano-switch}} arrays on GaAs-based nanowire {{networks are}} investigated for a reconfigurable binary-decision-diagram (BDD) logic circuit. A <b>programmable</b> <b>switch</b> was simply realized by inserting a SiNx thin layer between a metal gate and a nanowire. Fabricated switches were characterized {{in terms of}} hysteresis curve, program time dependences of off-state retention time, and on-state current. HCl treatment on SiNx prior to metal gate formation was found to remarkably improve the switching characteristics. We experimentally demonstrated correct and stable operation of a four-input reconfigurable BDD circuit integrating the switch array with HCl treatment...|$|R
40|$|A continuous-flow {{method for}} the {{determination}} of nitrate and phosphate in water is proposed. The method is based on insertion of reagents and sample solutions into a single channel through a <b>programmable</b> <b>switching</b> valve. The method depends upon heteropolyacid with phosphate and on the modified Griess reaction for nitrate, and permits {{the determination of}} PO- 34 in the range 1 - 20 μg/ml and NO- 3 between 5 and 100 μg/ml, the achievable sampling frequency being 45 /hour. The two analytes can be determined in N/P ratios between 0. 25 and 100. The method {{has been applied to}} the determination of nitrate and phosphate in the sea-water used in fish farms...|$|R
40|$|Abstract—Field Programmable Gate Arrays (FPGAs) {{rely heavily}} on complex routing architectures. The routing {{structures}} use <b>programmable</b> <b>switches</b> and account for a significant share in the total area, delay and power consumption numbers. With the ability of being monolithically integrated with CMOS chips, Resistive Random Access Memories (RRAMs) enable high-performance routing architectures through the replacement of Static Random Access Memory (SRAM) -based programming switches. Exploiting the very low on-resistance state achievable by RRAMs {{as well as the}} improved tolerance to power supply reduction, RRAM-based routing multiplexers can be used to significantly reduce the power consumption of FPGA systems with no performance compromises. By evaluating the opportunities of ultra-low-power RRAM-based FPGAs at the system level, we see an improvement of 12 %, 26 % and 81 % in area, delay and power consumption at a mature technology node...|$|E
40|$|Abstract—OFELIA is an {{experimental}} network designed {{to offer a}} diverse OpenFlow-enabled infrastructure to allow Soft-ware Defined Networking (SDN) experimentation. OFELIA is currently composed of ten sub–testbeds (called islands), {{most of them in}} Europe and one in Brazil. An experimenter get access to a so-called slice; a subset of the testbed resources like nodes and links, including the Openflow <b>programmable</b> <b>switches</b> to carry on an experiment. A new network virtualization tool called VeRTIGO has been recently presented to extend the way isolation is achieved between slices (slicing), allowing each experimenter to instantiate an arbitrary virtual network topology on top of a physical testbed. In this paper we present preliminary results obtained by deploying and using VeRTIGO in an experiment running across several OFELIA islands, which has proven to increase flexibility to experimenters willing to play with novel SDN concepts at large scale...|$|E
40|$|In this paper, {{we present}} a timing-driven global router for {{symmetrical}} array-based architecture FPGAs. The routing resources in symmetrical array based FPGAs consist of segments of various lengths. The timing constraints are specified as delay bounds on source-sink pairs of nets. The algorithm proceeds in a hierarchical top-down manner {{and is able to}} utilize various routing segments with global consideration {{in order to meet the}} timing constraints. Furthermore, the algorithm can be extended to perform detailed routing simultaneously with global routing. Experimental results on real circuits show that the algorithm is promising in satisfying the timing constraints compared with the conventional global router. 1 Introduction In the current technologies, the <b>programmable</b> <b>switches</b> used in Field-Programmable Gate Arrays (FPGAs) usually have significant high resistance comparing to the routing metal wires. Interconnection delays in FPGAs account for a large percentage of the total [...] ...|$|E
40|$|A {{real-time}} <b>programmable</b> <b>switched</b> capacitor (SC) second-order {{bandpass filter}} is presented. It {{is based on}} the voltage inverter switch (VIS) principle using inverse recharging devices. These devices are realized with dynamic amplifiers in order to achieve low power dissipation. The filter contains only grounded or virtually grounded network capacitances and, therefore, it is insensitive to the parasitic capacitances between the bottom plate of the implemented MOS capacitors and the substrate. The circuit offers digital programming capability (two Q factors and three center frequencies) and low power dissipation (185 µW at a sampling frequency of 8 kHz and with a power supply voltage of 10 V). The filter has been integrated in CMOS metal-gate technology...|$|R
40|$|Abstract—Network Function Virtualization (NFV) has {{recently}} been proposed {{as a tool to}} optimize the deployment of network functions by shifting the processing from dedicated middleboxes to general purpose and inexpensive hardware platforms. In this paper, we propose a novel NFV–based management and orchestration framework for enterprise WLANs. Our framework is compatible with the ETSI NFV architecture and leverages on hybrid nodes combining the forwarding capabilities of a <b>programmable</b> <b>switch</b> with the storage/computational capabilities of a server. We propose an algorithm for Virtual Network Function placement which optimizes the functions deployment according to application level constraints. A proof-of-concept implementation of the proposed framework and a preliminary performance evaluation of selected VNFs are also presented. I...|$|R
40|$|Abstract—We {{develop an}} {{assertion}} based verification solution for analog mixed-signal designs. We introduce the halo concept for analog signals to express {{them with their}} tolerance and variation values in assertions. The halo of a signal provides a relaxation over the signal and it defines an effective region for that signal {{which can be used}} in assertion based verification. Using haloes for analog signals allow us to define a new set of comparison relations between two analog signals including their equivalence. In our intended design flow, these new analog signal operators are placed into the Analog layer of mixed-signal assertion languages as an extension. We present experimental results on a <b>programmable</b> <b>switch</b> and a VCO. I...|$|R
