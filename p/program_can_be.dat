3501|10000|Public
5|$|The 1989 International Obfuscated C Code Contest (IOCCC) {{included}} an entry by Brian Westley. Westley's computer <b>program</b> <b>can</b> <b>be</b> encoded in ROT13 or reversed and still compiles correctly. Its operation, when executed, is either to perform ROT13 encoding on, or to reverse its input.|$|E
5|$|The BASIC {{interpreter}} {{was developed}} from that {{used on the}} ZX81 and a ZX81 BASIC <b>program</b> <b>can</b> <b>be</b> typed into a Spectrum largely unmodified, but Spectrum BASIC included many extra features {{making it easier to}} use. The ZX Spectrum character set was expanded from that of the ZX81, which did not feature lower-case letters. Spectrum BASIC included extra keywords for the more advanced display and sound, and supported multi-statement lines. The cassette interface was much more advanced, saving and loading around five times faster than the ZX81 (1500 bits per second compared to 307), and unlike the ZX81, the Spectrum could maintain the TV display during tape storage and retrieval operations. As well as being able to save programs, the Spectrum could save the contents of arrays, the contents of the screen memory, and the contents of any defined range of memory addresses.|$|E
25|$|In addition, {{templates}} are a compile time {{mechanism in}} C++ that is Turing-complete, meaning that any computation expressible {{by a computer}} <b>program</b> <b>can</b> <b>be</b> computed, in some form, by a template metaprogram prior to runtime.|$|E
50|$|Far more sophisticated, {{high-performance}} 2D and 3D graphical <b>programs</b> <b>can</b> <b>be</b> {{developed in}} OCaml. Thanks {{to the use}} of OpenGL and OCaml, the resulting <b>programs</b> <b>can</b> <b>be</b> cross-platform, compiling without any changes on many major platforms.|$|R
50|$|Both <b>programs</b> {{and data}} <b>can</b> <b>be</b> stored to {{magnetic}} tape. Data <b>can</b> <b>be</b> stored under <b>program</b> control. <b>Programs</b> <b>can</b> <b>be</b> password protected from both listing and execution.|$|R
50|$|Information about NAA Foundation <b>programs</b> <b>can</b> <b>be</b> {{found at}} www.naafoundation.org.|$|R
25|$|The {{long-term}} effects of the Erlangen <b>program</b> <b>can</b> <b>be</b> seen all over pure mathematics (see tacit use at congruence (geometry), for example); {{and the idea of}} transformations and of synthesis using groups of symmetry has become standard in physics.|$|E
25|$|A CSR <b>program</b> <b>can</b> <b>be</b> {{an aid to}} {{recruitment}} and retention, particularly within the competitive graduate student market. Potential recruits often consider a firm's CSR policy. CSR can also help improve the perception of a company among its staff, particularly when staff can become involved through payroll giving, fundraising activities or community volunteering. CSR has been credited with encouraging customer orientation among customer-facing employees.|$|E
25|$|Her {{impact on}} the Gonzaga <b>program</b> <b>can</b> <b>be</b> {{measured}} by another statistic—home attendance. The year before she arrived in Spokane, the Bulldogs averaged 1,492 with a team that would make its first NCAA Tournament appearance. By her junior year, attendance had risen to 2,935, and rose again to 3,824 in her senior season, with the Zags selling out the McCarthey Athletic Center twice before the NCAA tournament.|$|E
5000|$|Information {{on these}} {{conservation}} <b>programs</b> <b>can</b> <b>be</b> found at http://www.houstonzoo.org/saving-wildlife/ ...|$|R
40|$|We try {{to assess}} {{to what extent}} {{declarative}} <b>programming</b> <b>can</b> <b>be</b> realized in Prolog and which aspects of correctness of Prolog <b>programs</b> <b>can</b> <b>be</b> dealt with by means of declarative interpretation. More speci cally, we shall discuss termination of Prolog programs, partial correctness, absence of errors and the safe use of negation...|$|R
5000|$|Most bridge <b>programs</b> <b>can</b> <b>be</b> {{categorized}} {{into three}} types of agreements: ...|$|R
25|$|The UCF {{football}} <b>program</b> <b>can</b> <b>be</b> {{traced back}} to a speech given by the university's second president, Dr. Trevor Colbourn, in January 1979. Colbourn believed that a successful athletics program would bring the university greater renown, and tasked Dr. Jack O'Leary with the job of creating a new football program at the school. In addition, Colbourn changed {{the name of the}} school to the University of Central Florida, to express the university's expanded academic scope.|$|E
25|$|Georgetown Law's J.D. <b>program</b> <b>can</b> <b>be</b> {{completed}} {{over three}} years of full-time day study or {{three to four years}} of part-time evening study. The school offers several LL.M. programs in specific areas, most notably tax law, as well as a general LL.M. curriculum for lawyers educated outside the United States. Georgetown launched a Master of Studies in Law (M.S.L.) degree program for professional journalists in the 2007–08 academic year. It also offers the highest doctoral degree in law (J.S.D.).|$|E
25|$|Performance {{bottlenecks}} can be due {{to language}} limitations rather than algorithms or data structures used in the program. Sometimes, {{a critical part of}} the <b>program</b> <b>can</b> <b>be</b> re-written in a different programming language that gives more direct access to the underlying machine. For example, it is common for very high-level languages like Python to have modules written in C for greater speed. Programs already written in C can have modules written in assembly. Programs written in D can use the inline assembler.|$|E
5000|$|... 7. Radio <b>programming</b> <b>can</b> <b>be</b> {{turned into}} a {{full-time}} 24/7 channel ...|$|R
40|$|A {{feature is}} an {{increment}} in product functionality. Features <b>can</b> encapsulate different <b>program</b> representations, <b>programs</b> <b>can</b> <b>be</b> synthesized by feature composition, and <b>programs</b> <b>can</b> <b>be</b> declaratively specified using features. We explain {{in this paper}} how feature-based program synthesis works, how features interact, how interactions are controlled, and explore the relationship between features and aspects...|$|R
50|$|Profiling (computer <b>programming)</b> <b>can</b> <b>be</b> done by work {{sampling}} a computer program.|$|R
25|$|Conquest of Mind is a {{book that}} {{describes}} practices and strategies for leading the spiritual life. Written by Eknath Easwaran, the strategies are intended to be usable within any major religious tradition, or outside of all traditions. The book was originally published in the United States in 1988. Multiple revised English-language editions have been published, and translations have also appeared in several other European and Asian languages. The book has been reviewed in newspapers and magazines. In Conquest of Mind, Easwaran provides a much more extensive discussion of how his <b>program</b> <b>can</b> <b>be</b> used to train the mind, {{and the importance of}} training the mind.|$|E
25|$|AAST {{was founded}} on a charter school {{framework}} in 1992 with the mission of preparing students for careers {{in math and science}} by promoting a problem-solving, project-based, technical learning environment. AAST has departed from this model and has since become a more standard magnet school. The roots of the <b>program</b> <b>can</b> <b>be</b> seen in its unique science curriculum, which emphasizes and integrates chemistry, biology, and physics, and its hallmark Wednesday lab rotation for the first two years. This academy celebrated ten years of excellence in 2006-07. Much of the AAST model, including the 6-mod project period on Wednesday, has been adopted by the other academies.|$|E
25|$|Arguably, {{concurrent}} {{logic programming}} {{is based on}} message passing and consequently {{is subject to the}} same indeterminacy as other concurrent message-passing systems, such as Actors (see Indeterminacy in concurrent computation). Carl Hewitt has argued that, concurrent logic programming is not based on logic in his sense that computational steps cannot be logically deduced. However, in concurrent logic programming, any result of a terminating computation is a logical consequence of the program, and any partial result of a partial computation is a logical consequence of the program and the residual goal (process network). Consequently, the indeterminacy of computations implies that not all logical consequences of the <b>program</b> <b>can</b> <b>be</b> deduced.|$|E
5000|$|A current {{listing of}} their new <b>programming</b> <b>can</b> <b>be</b> found here: http://www.faithradio.us/pages/page.asp?page_id=418129 ...|$|R
5000|$|ABORT (PTS-DOS only) : Specifies if <b>programs</b> <b>can</b> <b>be</b> aborted on errors.|$|R
5000|$|... #Caption: Shipboard {{stability}} <b>programs</b> <b>can</b> <b>be</b> used {{to calculate}} a vessel's displacement ...|$|R
25|$|Section 7 {{is about}} {{curriculum}} and it states that National Education Commission has to ensure curriculums {{used in the}} country have boundaries and standards and guarantee autonomy of curriculum formations if it meets these standards. Ministry of Education will set the standards of National Education Curriculum with approval from the Commission. Schools can teach in either Burmese or English or both languages and if necessary, an ethnic language and Burmese {{can be used in}} primary education. It also mentions that in States and Regions, ethnic language and literature <b>program</b> <b>can</b> <b>be</b> implemented through state and regional governments starting from elementary level and upgraded step by step.|$|E
25|$|The {{origins of}} the Canadian upper {{atmosphere}} and space <b>program</b> <b>can</b> <b>be</b> {{traced back to the}} end of the Second World War. Between 1945 and 1960, Canada undertook a number of small launcher and satellite related projects under the aegis of defence research, including the development of the Black Brant rocket as well as series of advanced studies examining both orbital rendezvous and re-entry. In 1957, scientists and engineers at the Canadian Defence Research Telecommunications Establishment (DRTE) under the leadership of John H. Chapman embarked on a project initially known simply as S-27 or the Topside Sounder Project. This work would soon lead to the development of Canada's first satellite known as Alouette 1.|$|E
25|$|Along {{with the}} Rothschild giraffe, the eastern bongo is arguably {{one of the}} most {{threatened}} large mammals in Africa, with recent estimates numbering less than 140 animals, below a minimum sustainable viable population. The situation is exacerbated because these animals are spread across four isolated populations. Whilst the bongo endangered species <b>program</b> <b>can</b> <b>be</b> viewed as having been successful in ensuring survival of this species in Europe, it has not yet become actively involved in the conservation of this species in the wild in a coordinated fashion. The plan is to engage in conservation activities in Kenya to assist in reversing the decline of the eastern bongo populations and genetic diversity in Africa, and in particular, applying population management expertise to help ensure the persistence of genetic diversity in the free ranging wild populations.|$|E
5000|$|WLII <b>programming</b> <b>can</b> <b>be</b> seen across Puerto Rico on the {{following}} stations: ...|$|R
40|$|This paper {{describes}} how parallel dataflow <b>programming</b> <b>can</b> <b>be</b> simply and efficiently {{integrated with the}} Ada tasking model. Three extensions to standard Ada are proposed: parallel composition of statements, a parallel for-loop statement, and single-assignment types. Using these constructs, parallel Ada <b>programs</b> <b>can</b> <b>be</b> written without explicit tasking, that are identical—except for two new reserved words—to sequential Ada programs that satisfy the same specifications. These <b>programs</b> <b>can</b> <b>be</b> developed as sequential programs, then executed as deterministic parallel programs for high performance. The proposed extensions are defined by transformation into standard Ada tasking, and <b>can</b> efficiently <b>be</b> implemented by straightforward preprocessing, without any change to the underlying Ada compiler or run-time system...|$|R
50|$|Nintendo DS homebrew <b>programs</b> <b>can</b> <b>be</b> {{made with}} several methods usually built upon the devkitARM toolchain (provided by devkitPRO) and the libnds library. Additional {{utilities}} such as DS Game Maker provide an extra layer {{of services for}} homebrewers. Homebrew <b>programs</b> <b>can</b> <b>be</b> run on the Nintendo DS hardware by using Flashcards or FlashMe. They <b>can</b> also <b>be</b> run on a Nintendo DS emulator.|$|R
25|$|Pictorial {{program in}} the church has been {{preserved}} in most. Inside the church, frescoes on the barrel vault were destroyed but rest of fresco <b>program</b> <b>can</b> <b>be</b> easily analyzed and they thematically look good. Quality of frescoes, paintings and their details was diminished because of pulverization process which was used on frescoes, which are visible on {{all parts of the}} painted ensemble, and because of that process frescoes appear to be covered with a layer of gray scum. Considerable amount of detail, especially on skin tones figure was lost forever. Little has been written so far about Staničenje. In the first report that Radivoje and Marijana Ljubinković published after the archeological and conservative-architectural works on the church, it was pointed to this monument which in science was unknown until that day. Unfortunately, frescoes in village Staničenje were remained largely incomplete.|$|E
25|$|Jerome did not {{embark on}} the work with the {{intention}} of creating {{a new version of the}} whole Bible, but the changing nature of his <b>program</b> <b>can</b> <b>be</b> tracked in his voluminous correspondence. He had been commissioned by Damasus I in 382 to revise the Old Latin text of the four Gospels from the best Greek texts. By the time of Damasus' death in 384, Jerome had thoroughly completed this task, together with a more cursory revision from the Greek Common Septuagint of the Old Latin text of the Psalms in the Roman Psalter, a version which he later disowned and is now believed to be lost. How much of the rest of the New Testament he then revised is difficult to judge today, but little of his work survived in the Vulgate text of these books. Subsequent revision is the work of one or more other scholars; Rufinus of Aquileia has been suggested, as have Rufinus the Syrian (an associate of Pelagius) and Pelagius himself, though without specific evidence for any of them. This unknown reviser worked more thoroughly than Jerome had done, with access to older Greek manuscript sources of Alexandrian text-type, and had published a complete revised New Testament text by 410 at the latest, when Pelagius quoted from it in his commentary on the letters of Paul.|$|E
500|$|There Never Was an Arrow was {{broadcast}} on the CBC in March 1980 (available {{as an extra}} on the Arrow Docu-Drama DVD). [...] Clips from the <b>program</b> <b>can</b> <b>be</b> seen at [...]|$|E
50|$|At any point, the <b>programming</b> <b>can</b> <b>be</b> {{interrupted}} for the much-advertised breaking news.|$|R
5000|$|PROTECTONLY (OS/2 only) : Specifies if DOS <b>programs</b> <b>can</b> <b>be</b> run or not.|$|R
5000|$|The {{following}} <b>programs</b> <b>can</b> <b>be</b> used {{to display}} {{the contents of the}} MID ...|$|R
