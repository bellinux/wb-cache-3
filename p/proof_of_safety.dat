78|10000|Public
5000|$|Premarketing <b>proof</b> <b>of</b> <b>safety</b> and {{efficacy}} for {{products and services}} that claim to prevent, alleviate, or cure any disease or disorder; and ...|$|E
50|$|Twelf {{has been}} used to formalize many {{different}} logics and programming languages (examples are included with the distribution). Among the larger projects are a <b>proof</b> <b>of</b> <b>safety</b> for the Standard ML programming language, a foundational typed assembly language system from CMU, and a foundational proof carrying code system from Princeton.|$|E
5000|$|In April 2016, the FDA has {{prohibited}} {{the use of}} ozone [...] "In any medical condition {{for which there is}} no <b>proof</b> <b>of</b> <b>safety</b> and effectiveness". It determined that [...] "ozone is a toxic gas with no known useful medical application in specific, adjunctive, or preventive therapy" [...] and that its use as a germicide was not safe.|$|E
40|$|The class CC of {{concurrent}} constraint programming {{languages and}} its non-monotonic extension LCC based on linear constraint {{systems can be}} given a logical semantics in Girard's intuitionistic linear logic {{for a variety of}} observables. In this paper we settle basic completeness results and we show how the phase semantics of linear logic can be used to provide simple and very concise "semantical" <b>proofs</b> <b>of</b> <b>safety</b> properties for CC or LCC programs...|$|R
40|$|A {{symmetric}} algorithm for detecting {{the termination of}} a distributed computation is presented. The algorithm does not require global information concerning the system and does not assume any communication features barring finite delays {{in the delivery of}} messages. It permits dynamic creation and destruction of processes participating in the computation. It provides for destruction of a process by external processes, such as the OS kernel. It also provides for external processes spontaneously joining an ongoing computation. <b>Proofs</b> <b>of</b> <b>safety</b> and liveness are provided...|$|R
5000|$|The topic predates the protocol. In 1988, Lynch, Dwork and Stockmeyer had {{demonstrated}} [...] the solvability of consensus {{in a broad}} family of [...] "partially synchronous" [...] systems. Paxos has strong similarities to a protocol used for agreement in viewstamped replication, first published by Oki and Liskov in 1988, {{in the context of}} distributed transactions. [...] Not withstanding this prior work, Paxos offered a particularly elegant formalism, and included one <b>of</b> the earliest <b>proofs</b> <b>of</b> <b>safety</b> for a fault-tolerant distributed consensus protocol.|$|R
50|$|As an {{ingredient}} in some dietary supplement products, R. rosea has been {{evaluated by the}} U.S. Food and Drug Administration (FDA) which declared the products to be unapproved new drugs, adulterated, misbranded and in federal violation for not having <b>proof</b> <b>of</b> <b>safety</b> or efficacy for the advertised conditions of alleviating Raynaud syndrome, altitude sickness, and depression. R. rosea is also listed on the FDA's Poisonous Plant Database.|$|E
50|$|A goal of LBS is {{to ensure}} the {{presence}} of certain properties in the source code corresponding to the safety policy of the software. Information gathered during the compilation {{can be used to}} create a certificate that can be provided to the consumer as a <b>proof</b> <b>of</b> <b>safety</b> in the given program. Such a proof must imply that the consumer can trust the compiler used by the supplier and that the certificate, the information about the source code, can be verified.|$|E
5000|$|In 1994, Sen. Harkin (D) and Senator Orrin Hatch (R) {{introduced}} the Dietary Supplement Health and Education Act (DSHEA). The act reduced {{authority of the}} FDA to monitor products sold as [...] "natural" [...] treatments. Labeling standards were reduced to allow health claims for supplements based only on unconfirmed preliminary studies that were not subjected to scientific peer review, and the act {{made it more difficult}} for the FDA to promptly seize products or demand <b>proof</b> <b>of</b> <b>safety</b> where there was evidence of a product being dangerous. The Act became known as [...] "The 1993 Snake Oil Protection Act" [...] following a New York Times editorial under that name.|$|E
40|$|International audienceIn {{this paper}} we give a logical {{semantics}} {{for the class}} CC of concurrent constraint programming languages and for its extension LCC based on linear constraint systems. Besides the characterization in intuitionistic logic of the stores of CC computations, we show that both the stores and the successes of LCC computations can be characterized in intuitionistic linear logic. We illustrate the usefulness of these results by showing with examples how the phase semantics of linear logic {{can be used to}} give simple " <b>proofs</b> <b>of</b> <b>safety</b> properties <b>of</b> LCC programs...|$|R
40|$|Abstract. In {{software}} verification, Craig interpolation {{has proven}} to be a powerful technique for computing and refining abstractions. In this paper, we propose an interpolation-based software verification algorithm for checking <b>safety</b> properties <b>of</b> (possibly recursive) sequential programs. Our algorithm, called Whale, produces inter-procedural <b>proofs</b> <b>of</b> <b>safety</b> by exploiting interpolation for guessing function summaries by general-izing under-approximations (i. e., finite traces) of functions. We imple-mented our algorithm in LLVM and applied it to verifying properties of low-level code written for the pacemaker challenge. We show that our prototype implementation outperforms existing state-of-the-art tools. ...|$|R
40|$|Summary. The lazy caching {{protocol}} {{proposed by}} Afek, Brown and Merritt [ABM 93], is explained and formally proven correct {{by means of}} compositional methods. The protocol is decomposed into four simple protocols, which are of interest on their own. A top level proof is given that is {{to a large extent}} independent of the particular model used for the more detailed proofs and allows for a number of generalizations of the original lazy caching protocol. Detailed <b>proofs</b> <b>of</b> <b>safety</b> and liveness properties are given using CSP and trace logic. ...|$|R
5000|$|Under his leadership, NIH-funded {{research}} into complementary and alternative medicine tripled, with NCCAM funding large (phase III) clinical trials of St John's wort for depression, Ginkgo biloba extracts for dementia, and acupuncture and glucosamine/chondroitin sulfate supplements for osteoarthritis {{of the knee}} joint, among other treatment modalities. Early in his tenure as director, Straus prioritised the clinical assessment of treatments widely used in America which had previously shown promising results in small clinical trials. He later wrote: [...] "In {{the early years of}} NCCAM, {{there was a sense of}} urgency to scientifically assess a range of CAM therapies that had been in long use by the public in the absence of <b>proof</b> <b>of</b> <b>safety</b> or efficacy." [...] By 2006, the center's research focus had shifted away from large clinical trials and towards investigating how treatments might work, as well as the optimal dosing strategy for botanical extracts and their interactions with prescription drugs.|$|E
5000|$|In April 2014, the FDA {{proposed}} new regulations for tobacco products, including e-cigarettes. The regulations require disclosure of ingredients used in e-cigarette liquids, <b>proof</b> <b>of</b> <b>safety</b> of those ingredients, and {{regulation of the}} devices used to vaporize and deliver the liquid. The FDA proposed regulation would ban the sale of e-cigarettes with nicotine to any individual under 18 years of age. In August 2014, attorneys general from over two dozen states advised the FDA to enact restrictions on e-cigarettes, including banning flavors. On May 10, 2016, the FDA published their deeming regulations in the federal register, which takes effect on August 8, 2016. Vendors and companies have until two years afterward to prepare paperwork with the FDA to have their product remain on the market. Currently, there are lawsuits and amendments made in the works in Congress to change that provision. The lack {{of research on the}} risks and possible benefits has resulted in precautionary policymaking in the US [...] "which often lacks grounding in empirical evidence and results in spatially uneven diffusion of policy".|$|E
5000|$|Prosthetic TMJ {{placement}} {{surgery is}} used as a last resort to manage severe pain and restricted function due to TMJ disorders. At the onset of symptoms, primary prevention such as a soft diet, cessation of gum chewing, physiotherapy and the use of non-steroidal anti-inflammatory drugs are put into place. If primary prevention fails, TMJ joint replacement is one of the several surgical options. Recent studies have shown TMJ replacement surgery to be highly successful, improving mean pain scores, mean diet scores, mean maximum inter-incisal opening, and mean function and speech scores. [...] Synthetic jaw implants already on the market prior to the 1976 Federal law requiring medical devices be proven safe and effective were exempt and continued to be sold after 1976 without <b>proof</b> <b>of</b> <b>safety.</b> Teflon implants made by Vitek, and silicone ones made by Dow Corning, raised the most concern. Vitek-Kent Proplast-Teflon partial & total prosthesis were manufactured from 1982 to 1990 in Houston TX. TMJ prostheses became popular with the introduction of Vitek, but evidence that the implants could cause debilitating reactions including pain, malocclusion, and foreign body giant cell reaction (FBGCR) resulting in degeneration of the surrounding tissue led to a recall by the FDA on 1/7/91. Since Vitek declared bankruptcy in June 1990 and the owner fled the country, the FDA was left to handle the recall, which they did by sending out a safety alert and public health advisory. Otherwise, there was next to no follow-up on the recall. Silastic silicone TMJ Implants produced by Dow Corning became popular during the 1970s, but reports of widespread mechanical failure with wear, tearing, and fracture began to surface. Debris and fragments led to an inflammatory response, joint degeneration, bony ankylosis, and lymph node swelling. Marketing of Silastic for use in the TMJ was discontinued on 6/15/93 after warnings from the FDA and the American Association of Oral and Maxillofacial Surgeons (AAOMS).|$|E
40|$|In this {{technical}} report we present the operational semantics and <b>proofs</b> <b>of</b> progress and preservation {{for the type}} system we presented in our paper "Ownership Effects Based Parallelism". This report is intended for those interested formal <b>proof</b> <b>of</b> the <b>safety</b> <b>of</b> the type system outlined briefly herein and submitted to IWACO 2008...|$|R
40|$|International audienceIn this paper, {{we propose}} an {{algorithm}} for bounded safety verification {{for a class}} of hybrid systems described by metric transition systems. The algorithm combines exploration of the system trajectories and state space reduction using merging based on a bisimulation metric. The main novelty compared to an algorithm presented recently by Lerda et. al. lies in {{the introduction of a}} tuning parameter that makes it possible to increase the performances drastically. The second significant contribution of this work is a procedure that allows us to derive, in some cases, a <b>proof</b> <b>of</b> unbounded <b>safety</b> from a <b>proof</b> <b>of</b> bounded <b>safety</b> via a refinement step. We demonstrate the efficiency of the approach via experimental results...|$|R
40|$|When {{designing}} a cryptographic protocol or explaining it, one often uses arguments such as "since this message {{was signed by}} machine B, machine A can be sure it came from B" in informal proofs justifying how the protocol works. Since it is, in such informal proofs, often easy to overlook an essential assumption, such as a trust relation or the belief that a message is not a replay from a previous session, it seems desirable to write such proofs in a formal system. While such logics do not replace the recent techniques <b>of</b> automatic <b>proofs</b> <b>of</b> <b>safety</b> properties, they help in pointing the weaknesses of the system...|$|R
40|$|The MPA-seminar was {{organized}} in several sessions. Volume 1 comprises five sessions {{with the following}} topics: <b>proof</b> <b>of</b> <b>safety</b> (2 sessions), integrity analysis (2 sessions), and ageing management. (uke) SIGLEAvailable from TIB Hannover: RN 5417 (29, 1) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|E
40|$|Four main topics, one shorter topic: Extensible {{records for}} typing objects in OCaml Specifying and statically {{checking}} behaviour of Java code LINQ and cross-language integration in. NET Patterns and abstractions for programming concurrent code Mobile code that carries its own <b>proof</b> <b>of</b> <b>safety</b> Plus guest lectures and assignment lectures. Assignment schedul...|$|E
40|$|Editorial Note: Largely {{because the}} public shrinks at the sight and thought of malformed babies, the recent case {{concerned}} {{with the use of}} thalidomide has, nonetheless, served to bring before the public the need for <b>proof</b> <b>of</b> <b>safety</b> before new drugs are released. For emphasis, we excerpt pertinent paragraphs of an article by Dr. Fred M. Taylor of Houston, Texas appearing in the May 1960 issue of our journal...|$|E
40|$|At present, few {{guidelines}} {{exist for}} applying the Z notation to concurrent systems, while existing approaches to proving properties of Z specifications of concurrent systems place {{emphasis on the}} use of additional formalisms such as temporal logic. This paper proposes a practical and rigorous approach to specifying and verifying concurrent systems using the Z notation alone. Guidelines are given for specifying common features of concurrent systems in Z. A simple lift controller systems is then specified. Finally, a formal proof method based on a simple (weak) fairness rule is presented and is illustrated by means <b>of</b> <b>proofs</b> <b>of</b> <b>safety</b> and liveness properties of the lift controller system...|$|R
50|$|As a {{postgraduate}} medical discipline, pharmaceutical {{medicine has}} a recognised international syllabus, training courses with examinations and qualifications, its own research methodologies, professional bodies and academic societies, journals and texts, and embraces {{new technologies and}} regulations in pursuit <b>of</b> <b>proof</b> <b>of</b> efficacy, <b>safety</b> and effectiveness <b>of</b> medicines.|$|R
40|$|Step-indexed {{semantic}} {{models of}} types were proposed {{as an alternative}} to the purely syntactic <b>proofs</b> <b>of</b> type <b>safety</b> using subject-reduction. This thesis introduces a step-indexed model for the functional object calculus, and uses it to prove the soundness of an expressive type system with object types, subtyping, recursive and bounded quantified types...|$|R
40|$|Quackery (promotion of {{products}} that do not work or have not been proven to work) was once a commonly used term within the pharmacy and medical communities. However, an increasingly anti-scientific national climate culminated in passage of the 1994 Dietary Supplement Health and Education Act, which granted unprecedented legitimacy to “dietary supplements” {{that had not been}} scientifically proven to be effective and/or safe. In part, this was facilitated when professional pharmacy magazines and journals published advertisements and articles promoting these unproven medications. Gradually, pharmacy codes of ethics eliminated references to quackery, and some pharmacy organizations seemed to accept the unproven medications they once exhorted the pharmacist not to sell. The profession's shift in attitude toward unproven medications occurred as the medical community at large began to realize the value of evidence-based medicine. Academicians must resist pressure to present unproven therapies as realistic alternatives for medications with scientific <b>proof</b> <b>of</b> <b>safety</b> and efficacy. They must stress the value of evidence-based medicine and urge students and pharmacists to recommend only those medications with evidence-based <b>proof</b> <b>of</b> <b>safety</b> and efficacy...|$|E
40|$|The {{concurrent}} {{logical framework}} CLF {{is an extension}} of the logical framework LF designed to specify concurrent and distributed languages. While {{it can be used to}} define a variety of formalisms, reasoning about such languages within CLF has proved elusive. In this paper, we propose an extension of LF that allows us to express properties of CLF specifications. We illustrate the approach with a <b>proof</b> <b>of</b> <b>safety</b> for a small language with a parallel semantics. ...|$|E
40|$|Abstract. This paper {{addresses}} {{a problem of}} integrating the consis-tency management of session guarantees with recovery mechanisms in distributed mobile systems. To solve such a problem, rollback-recovery protocol rVsSG, preserving session guarantees is proposed. The proto-col employs known rollback-recovery techniques, however, while applying them, the semantics of session guarantees is taken into account. Conse-quently, rVsSG protocol is optimized with respect to session guarantees requirements. The paper includes the <b>proof</b> <b>of</b> <b>safety</b> property of the presented protocol...|$|E
40|$|Abstract. The Biphase Mark Protocol (BMP) and 8 N 1 Protocol are {{physical}} layer protocols for data transmission. We present a generic {{model in which}} timing and error values are parameterized by linear constraints, and then we use this model to verify these protocols. The verifications are carried out using SRI’s SAL model checker that combines a satisfiability modulo theories decision procedure with a bounded model checker for highly-automated induction <b>proofs</b> <b>of</b> <b>safety</b> properties over infinite-state systems. Previously, parameterized formal verification of real-time systems required mechanical theorem-proving or specialized real-time model checkers; we describe a compelling case-study demonstrating a simpler and more general approach. The verification reveals a significant error in the parameter ranges for 8 N 1 given in a published application note [1]. ...|$|R
40|$|In {{this paper}} we give a logical {{semantics}} {{for the class}} CC of concurrent constraint programming languages and for its extension LCC based on linear constraint systems. Besides the characterization in intuitionistic logic of the stores of CC computations, we show that both the stores and the successes of LCC computations can be characterized in intuitionistic linear logic. We illustrate the usefulness of these results by showing with examples how the phase semantics of linear logic {{can be used to}} give simple " <b>proofs</b> <b>of</b> <b>safety</b> properties <b>of</b> LCC programs. Contents 1 Introduction 2 2 CC operational semantics 4 2. 1 CC............................................ 4 2. 2 Linear CC........................................ 8 2. 2. 1 Syntax...................................... 8 2. 2. 2 Translation from CC to LCC........................ [...] . ...|$|R
40|$|A new {{technique}} for proving trng properties for tm-g-based algorithms is described; {{it is an}} extension of the mapping techniques previously used in <b>proofs</b> <b>of</b> <b>safety</b> properties for asynchronous concurrent systems. The key to the method is a way of representing a system with timing constraints as an automaton whose state includes predictive tmg information.. Timing assumptions and tnng requirements for the system are both represented in this way. A multi-valued mapping from the assumptions automaton" to the requirements automaton" is then used to show that th given system satisfies the requirements. One type of mapping is based on a collection of proress functions" providing measures of proress toward timing goals. The technique is illustrated with two examples, a simple resource manager and a two- process race system...|$|R
40|$|Purpose: The current {{methods used}} to {{evaluate}} the efficacy of drug products are inadequate. We propose a non-inferiority approach to prove the safety of drugs. Materials and Methods: Traditional hypotheses for the evaluation of the safety of drugs are based on proof of hazard, which have proven to be inadequate. Therefore, based on the concept of <b>proof</b> <b>of</b> <b>safety,</b> the non-inferiority hypothesis is employed to prove that the risk of new drugs does not exceed a pre-specified allowable safety margin, hence proving that a drug has no excessive risk. The results from papers published on Vioxx and Avandia are used to illustrate the difference between the traditional approach for proof of hazard and the non-inferiority approach for <b>proof</b> <b>of</b> <b>safety.</b> Results: The p-values from traditional hypotheses were greater than 0. 05, and failed to demonstrate that Vioxx and Avandia are of cardiovascular hazard. However, these results cannot prove that both Vioxx and Avandia are of no cardiovascular risk. On the other hand, the non-inferiority approach can prove that they are of excessive cardiovascular risk. Conclusion: The non-inferiority approach is appropriate to prove the safety of drugs...|$|E
40|$|We {{address the}} formal {{specification}} and verification {{of a simple}} train crossing gate system using the Nqthm logic and automated proof system of Boyer and Moore. This problem has been suggested as a benchmark for evaluating the performance of specification tools and automated reasoning systems {{in the area of}} safety-critical systems. The system specification is presented and the <b>proof</b> <b>of</b> <b>safety</b> and utility properties is outlined. The performance of Nqthm on this problem is evaluated. The complete specification is provided in an appendix...|$|E
40|$|The {{contribution}} {{addresses the}} application of formal methods in functional specification, design and verification of real-time software systems in safety-critical applications. We present basic principles of software verification methods directed towards automatic <b>proof</b> <b>of</b> <b>safety</b> properties against {{the model of the}} system. Verification of the railway interlocking system developed by the AZD Prague Ltd. is presented. We discuss advantages and drawbacks of the presented methods and the possibility of using model-checking algorithms in the testing stage of the system development. ...|$|E
40|$|In {{this paper}} we settle a logical {{semantics}} {{for the class}} CC of concurrent constraint programming languages and for its extension LCC based on linear constraint systems. Besides the characterization in intuitionistic logic of the stores of CC computations, we show that both the stores and the successes of LCC computations can be characterized in intuitionistic linear logic. We illustrate the usefulness of these results by showing with examples how the phase semantics of linear logic {{can be used to}} give simple "semantical" <b>proofs</b> <b>of</b> <b>safety</b> properties <b>of</b> LCC programs 1. Contents 1 Introduction 2 2 CC operational semantics 4 2. 1 CC................................... 4 2. 2 Linear CC............................... 8 2. 2. 1 Syntax............................. 9 2. 2. 2 Translation from CC to LCC................ 11 2. 2. 3 Example of LCC program.................. 12 [...] ...|$|R
40|$|In this paper, I {{demonstrate}} {{the implementation of}} several tools for program analysis in a machine-checked environment. I begin by detailing {{the implementation of the}} separation logic for Concurrent C Minor proposed by Hobor, Appel, and Nardelli in the Coq proof assistant. Formalizing the syntax and semantics of CCm and extending the set of semi-automated tactics in the base implementation of C Minor leads to a framework for building <b>proofs</b> <b>of</b> the correctness and <b>safety</b> <b>of</b> concurrent programs. I then describe a thread-modular shape analysis algorithm proposed by Gotsman et al. for inferring lock invariants in concurrent programs, and demonstrate its use as a transformation from a simple C-like language to proved-correct CCm. By reinterpreting the analysis in terms of the application of the rules of concurrent separation logic, I prove its soundness without resorting to lattice theory. Finally, I explain a two-part algorithm, based on the analysis and implemented in Coq, for the construction of CCm programs and <b>proofs</b> <b>of</b> <b>safety</b> from programs in the source language of the analysis. ...|$|R
40|$|Rewriting logic {{theories}} are a general and expressive way of specifying concurrent systems, where states are axiomatized by equations and transitions among states are axiomatized by rewrite rules. In this paper, {{we present a}} transformational and reductionistic deductive approach for verifying <b>safety</b> properties <b>of</b> rewrite theories. In our approach all formal temporal reasoning about concurrent transitions is ultimately reduced to purely equational inductive reasoning. Narrowing modulo axioms is extensively used to simplify the equational proof obligations to which all <b>proofs</b> <b>of</b> <b>safety</b> formulas are ultimately reached. This allows these generic verification methods {{to take advantage of}} the existing wealth of equational reasoning techniques and tools already available. We report on the implementation of this deductive system in the Maude Invariant Analyzer tool, which provides a substantial degree of automation and can automatically discharge many proof obligations without user intervention. unpublishednot peer reviewe...|$|R
