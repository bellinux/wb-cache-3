6|7|Public
5000|$|The {{basis of}} the Generator is simple. The <b>path</b> <b>selector</b> {{identifies}} the paths. Once a set of test paths is determined the test generator derives input data for every path that results in {{the execution of the}} selected path. Essentially, our aim is to find an input data set that will traverse the path chosen by the <b>path</b> <b>selector.</b> This is done in two steps: ...|$|E
40|$|A simple {{extension}} {{is proposed}} for enhancing HTML and XML with adaptation. It consists {{in using the}} path selectors of style sheet languages such es CSS and XSLT for expressing content and navigation adaptation. The nccdcd extensions to a <b>path</b> <b>selector</b> language are minimal, a few additional constructs suffice. The processor of the language can be kept almost unchanged, no new algorithms are needed. Furthermore, it is proposed to use XML for expressing user model data like browsing history, browsing environment (such as device, time, etc.), and application data (such as user performances on exercises) ...|$|E
40|$|Automatic {{structural}} test data generation {{is a real}} challenge of Software Testing. Statistical {{structural test}}ing has been proposed to address this problem. This testing method aims at building an input probability distribution to maximize the coverage of some structural criteria. Under the all paths testing objective, statistical structural testing aims at selecting each feasible path of the program with the same probability. In this paper, we propose to model a uniform <b>path</b> <b>selector</b> of feasible paths as a stochastic constraint program. Stochastic constraint programming is an interesting framework which combines stochastic decision problem and constraint solving. This paper reports on the translation of uniform feasible path selection problem into a stochastic constraint problem. An implementation which uses the library PCC(FD) of SICStus Prolog designed for this problem is detailed. First experimentations, conducted over a few academic examples, show the interest of our approach. ...|$|E
40|$|This paper {{addresses}} enhancing HTML and XML with adaptation functionalities. The approach {{consists in}} using the <b>path</b> <b>selectors</b> of the HTML and XML style sheet languages CSS and XSLT for expressing content and navigation adaptation. Thus, the necessary extensions of the selector languages are minimal (a few additional constructs suffice), the processors of these languages can be kept almost unchanged, and no new algorithms are needed. In addition, XML is used for expressing the user model data like browsing history, browsing environment (such as device, location, time, etc.), and application data (such as user performances on exercises). The goal of the research presented {{here is not to}} propose novel forms or applications of adaptation, but instead to extend widespread web standards with adaptation functionalities. Essential features of the proposed approach are its simplicity and both the upwards and downwards compatibility of the extension. ...|$|R
40|$|This paper compares and {{analyses}} the Denial-of-Service {{attacks in the}} two different Network architectures. The two architectures are based on different routing approaches: Hop-by-Hop IP routing and source-routing using Bloom filters. In Hop-by-Hop IP routing, the packet header contains the address, and the route is decided node by node. Forwarding in this method requires a node to have a routing table which contains the port through which the packet should traverse depending on {{the address of the}} destination. Instead in source-routing, the forwarding identifier is encoded with the path a packet should take and it is placed in the packet header. The forwarding identifier in this approach does not require a forwarding table for look ups like the IP routing; it relies on Line Speed Publish/Subscribe (LIPSIN) forwarding solution that focuses on using named links not nodes or interfaces. The forwarding identifier encompasses a set of Link ID’s which specifies the path to the recipient and they are encoded in a Bloom filter. The In-packet Bloom filters serve as both <b>path</b> <b>selectors</b> and as capabilities, and they are generated dynamically. However, this thesis is going to focus on the latter network technology by looking at both its benefits and drawbacks as well as analysing the possibilities of having a Denial of service attack...|$|R
40|$|Abstract. The {{purpose of}} this paper is to suggest and examine a control system with a fuzzy {{controller}} and a fuzzy-PID controller to solve the problem of mobile robot path planning. The environment information about obstacles and the goal has been detected by using sensors. The system divides environment situations into two types the obstacle mode and non-obstacle mode. In view of the oscillation problem existing in fuzzy control when there is no obstacle, this paper proposes that the fuzzy control is used for the obstacle mode and the fuzzy adaptive PID control is used for the non-obstacle mode. The robot performs the real-time planning choice by <b>path</b> planning <b>selector,</b> and the control system is simulated by Matlab software. The simulation result shows that the control strategy has the characteristics of faster response, better real-time performance and achieves a better path from the start point to the target point...|$|R
40|$|Random {{testing is}} a simple and {{well-known}} technique [3] which can be effective at finding software bugs. The family of algorithms around the work of Chen et al. on Adaptive Random Testing [1] attempt to maintain the be-nefit of random testing while increasing its efficiency. This method generates candidate inputs randomly, and at every step selects from them the best one. The best candidate is the test datum that {{is as far as}} possible than the already se-lected test data given some metric (Euclidean measure [1] for example). However, adaptive random testing may have some difficulties in providing high code coverage. For in-stance, the probability to select a candidate that activates the true branch of the conditional statement if (x== 0) is equal to 1232 if x is a 32 -bit integer program input. This paper presents preliminary work on adaptive path selection. Our approach aims at guiding the test data selec-tion such that a new test datum activates a path that is “as far as possible ” from already tested paths. Test datum selection is performed in three steps: 1) building the set of candidate paths, 2) selection of the best candidate given a set of al-ready tested paths and 3) generation of a test datum that ac-tivates the selected path. In this paper, we present a metric, called the <b>path</b> <b>selector</b> distance, that allows us to achieve the second step. The <b>path</b> <b>selector</b> distance aims at diver-sifying the set of tested path during the test data selection. For each step of the test datum selection, this distance per-mits us to select a path that activates some part of the source code as different as possible than the already tested path. In our future work, the combination of search-based [5] and constraint-based [2] approach will be used to achieve the first and the third step of the test data selection. Section 2 introduces the adaptive selection of paths on an example. Section 3 introduces the definition of the path se-lector distance. Section 4 concludes the paper and presents our future work. 2 Illustrating example Consider a program foo represented by its control flow graph in FIG. 1. The test data selection begins by uni...|$|E
40|$|Mobile Ad Hoc Network (MANET) is an {{emerging}} {{area of research}} in the communication network world. As the MANET is infrastructure less, it is having dynamic nature of arbitrary network topology. So, it needs set of new networking strategies to be implemented in order to provide efficient end to end communication. Node activities such as sending or receiving data is highly traceable. Nodes are vulnerable to attacks and disruptions. To identify such nodes, a method of direct validation is proposed. Since it is unlikely for 2 ad hoc nodes to stay at the same position concurrently, the match between a position and ID is definitely unique. This information is obtained via global positioning system (GPS) and location services. In the routing protocol, location information is distributed between nodes by means of position beacons. Routing schemes rely on the cooperation and information exchanged among the nodes. Here in addition to node ID, extra information such as positions of the nodes is used for making routing decisions. Its neighbouring nodes receive the request and content to access the channel for becoming the next hop using Receiver Contention Channel Access Mechanism. A receiver that is geographically closer to the destination is assigned a higher priority and can win the contention. The destination also finds the corresponding authentication code according to the position carried in the rreq and encrypts the code with the secret key of its secret key pair. The encrypted result is included in the rrep and sent to the source. The source finds out whether it reaches the right destination by decrypting the information with the destination’s key and comparing the authentication code with the one it obtained through the position request. To avoid intruder for routing, Packet Dropping, WatchDog, SYBIL Attacks and PathSelector are used. The watchdog identifies misbehaving nodes, while the Pathselector avoids routing packets through these nodes. The watchdog, the <b>path</b> <b>selector</b> is run by each server. Each Server maintains a rating for every other node it knows about in the VHR. In our proposed model, the route selection is a function of following parameters: hop count, trust level of node and security level of application. In this paper, to focus on secure neighbor detection, trust factor evaluation, operational mode, route discovery and route selection. The paper mainly address the security of geographic routing. The watchdog identifies misbehaving nodes, while the Pathselector avoids routing packets through these nodes. The watchdog, the pathselector is run by each server. In order to keep the source informed about the destination’s mobility, the destination keeps sending the alert message to its previous hop telling that it has changed its position and any reference to it for data packet forwarding be informed to the VHR server...|$|E
40|$|As a {{flexible}} {{alternative to the}} Cox model, the additive risk model assumes that the hazard function {{is the sum of}} the baseline hazard and a regression function of covariates. For right censored survival data when variable selection is needed along with model estimation, we propose a <b>path</b> consistent model <b>selector</b> using a modified Lasso approach, under the additive risk model assumption. We show that the proposed estimator possesses the oracle variable selection and estimation property. Applications of the proposed approach to three right censored survival data sets show that the proposed modified Lasso yields parsimonious models with satisfactory estimation and prediction results. Copyright q 2007 John Wiley & Sons, Ltd...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Extensible Markup Language (XML) documents are widely used as containers for the exchange and storage of arbitrary data in today’s systems. In order to send changes to an XML document, an entire copy of the new version must be sent, {{unless there is a}} means of indicating only the portions that have changed. This document describes an XML patch framework utilizing XML <b>Path</b> language (XPath) <b>selectors.</b> These selector values and updated new data content constitute the basis of patch operations described in this document. In addition to them, with basic , , and ...|$|R
40|$|Abstract—This paper {{describes}} the architecture and operating principles of two digital pulse-width modulator (DPWM) implementations for low-cost field-programmable gate arrays (FPGAs). Both architectures {{are based on}} a counter-comparator block to process the most significant bits (MSB) portion of the reference input, enriched with additional elements to enhance duty-cycle resolution according to the less significant bits (LSB). The first architecture described has already been reported, it uses the on-chip PLL blocks to generate fixed delays and a selector to choose the one corresponding with the desired duty-cycle. Post-fitting adjustment of PLL delays are required to compensate delay differences between the diverse signal <b>paths</b> across the <b>selector.</b> In the second architecture described, a serializer-deserializer (SERDES) module is used to serialize a thermometer-coded representation of the LSB portion of the input. This serialization technique is commonly used for data transmission on high-speed serial I/O data transmission standards like LVDS and is extensively supported by FPGA providers. Experimental results are presented for both architectures synthesized on standard low-cost FPGA chips, showing very good linearity and resolutions up to 1 ns. The first architecture provides a moderately better resolution. The second architecture, on the other hand, is a much more robust solution as it requires no post-fitting delay adjustments. Keywords—DPWM; FPGA; serdes; LVDS I...|$|R

