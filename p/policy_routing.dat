54|991|Public
50|$|BIRD also {{supports}} multiple internal routing tables and multiple instances of supported protocol types. Protocols may {{be connected to}} different internal routing tables, these internal routing tables may exchange information about network routes they contain (controlled by filters) and each of these internal routing tables may be connected to a different kernel routing table thus allowing for <b>policy</b> <b>routing.</b>|$|E
40|$|Abstract—The dynamic <b>policy</b> <b>routing</b> model (DPR) was {{recently}} introduced to explicitly model {{the dynamics of}} <b>policy</b> <b>routing.</b> DPR extends the formalism of the stable paths problem with discrete synchronous time to capture the propagation of path changes in any dynamic network using a structure called the causation chain. In this work, we extend DPR by introducing several novel structures, namely, causation fences and policy digraphs that provide further insight into how the dynamics of <b>policy</b> <b>routing</b> manifest in the network. Using our extensions to DPR, we solve a fundamental problem: policy conflict detection. We show how {{the root cause of}} any cycle of routing update messages, under any routing policy configuration, can be precisely inferred as either a transient route flap or a policy conflict. We also develop SAFETYPULSE, a token-based distributed algorithm to detect policy conflicts in any dynamic network. SAFETYPULSE has several novel characteristics, namely, it is privacy preserving, computationally efficient and provably correct...|$|E
40|$|Routing {{mechanisms}} for inter-autonomous region communication require distribution of policy-sensitive information {{as well as}} algorithms that operate on such information. Without such <b>Policy</b> <b>Routing</b> mechanisms, {{it is not possible}} for interconnected regions to retain their autonomy in setting and enforcing policy while still achieving desired connectivity. This problem of interconnecting and navigating across autonomous regions is of inherent interest to the security community because the policies in question concern control of resource access and usage. Moreover, the security of the <b>Policy</b> <b>Routing</b> protocols themselves must be considered {{if they are to be}} applicable in sensitive environments. On the other hand, as usual, the security mechanisms take a toll in overall system complexity and performance. Most routing protocols, including proposed <b>Policy</b> <b>Routing</b> protocols [l], focus on environments where detection of an attack after it has taken place is sufficient. The purpose of this paper is to explore the design of <b>Policy</b> <b>Routing</b> {{mechanisms for}} sensitive environments where more aggressive preventative measures are mandated. In particular, we detail the design of four secure protocol versions that prevent abuse through cryptographic checks of data integrity. We analyse and compare these schemes in terms of their per-packet processing overhead. We conclude that preventative security is feasible, although the overhead cost is quite high. Consequently, it is critical that prevention-based schemes coexist with detection-based schemes. ...|$|E
50|$|RPSL {{has been}} {{extended}} with RPSL-NG (RPSL-Next Generation) effort to support IPv6 <b>routing</b> <b>policies</b> and multicast <b>routing</b> <b>policies.</b> RPSL-NG is defined in RFC 4012.|$|R
40|$|This paper {{considers}} {{the problem of}} routing packets across a multi-hop wireless network while ensuring throughput optimality. One of the main challenges {{in the design of}} throughput optimal <b>routing</b> <b>policies</b> is identifying appropriate and universal Lyapunov functions with negative expected drift. The few well-known throughput optimal <b>routing</b> <b>policies</b> in the literature are constructed using simple quadratic or exponential Lyapunov functions of the queue backlogs and as such they do not use any metric of closeness to the destination. Consequently, these <b>routing</b> <b>policies</b> exhibit poor delay performance under many network topologies and traffic conditions. By considering a class of continuous, differentiable, and piece-wise quadratic Lyapunov functions, this paper provides a large class of throughput optimal <b>routing</b> <b>policies.</b> The proposed class of Lyapunov functions allow for the <b>routing</b> <b>policies</b> to control the traffic along short paths for a large portion of state-space while ensuring a negative expected drift, hence, enabling the design of <b>routing</b> <b>policies</b> with much improved delay performances. In particular, and in addition to recovering the throughput optimality of the well known backpressure <b>routing</b> <b>policy,</b> an opportunistic <b>routing</b> <b>policy</b> with congestion diversity is proved to be throughput optimal. I...|$|R
50|$|The <b>Routing</b> <b>Policy</b> Specification Language (RPSL) is a {{language}} commonly used by ISPs {{to describe their}} <b>routing</b> <b>policies.</b>|$|R
40|$|Abstract — The {{impact of}} routing policy on Internet paths is poorly understood. In theory, policy can inflate shortest-router-hop paths. To our knowledge, {{the extent of}} this {{inflation}} has not been previously examined. Using a simplified model of routing policy in the Internet, we obtain approximate indications {{of the impact of}} <b>policy</b> <b>routing</b> on Internet paths. Our findings suggest that routing policy does impact the length of Internet paths significantly. For instance, in our model of routing policy, some 20 % of Internet paths are inflated by more than five router-level hops. Keywords—Routing, Routing Policy, <b>Policy</b> <b>Routing,</b> Internet Paths I...|$|E
40|$|We {{introduce}} the Dynamic <b>Policy</b> <b>Routing</b> (DPR) model that captures {{the propagation of}} route updates under arbitrary changes in topology or path preferences. DPR introduces the notion of causation chains where the route flap at one node causes a flap at the next node along the chain. Using DPR, we model the Gao-Rexford (economic) guidelines that guarantee the safety (i. e., convergence) of <b>policy</b> <b>routing.</b> We establish three principles of safe <b>policy</b> <b>routing</b> dynamics. The non-interference principle provides insight into which ASes can directly induce route changes in one another. The single cycle principle and the multi-tiered cycle principle provide insight into how cycles of routing updates can manifest in any network. We develop INTERFERENCEBEAT, a distributed algorithm that propagates a small token along causation chains to check adherence to these principles. To enhance the diagnosis power of INTERFERENCEBEAT, we model four violations of the Gao-Rexford guidelines (e. g., transiting between peers) and characterize the resulting dynamics. National Science Foundation (CISE/CCF 0820138, CISE/CSR 0720604, CISE/CNS 0524477, CNS/ITR 0205294, CISE/EIA RI 0202067...|$|E
40|$|Abstract — Novel routing {{paradigms}} {{based on}} policies, {{quality of service}} (QoS) requirements, and packet content have been proposed for the Internet over the last decade. Constraint-based routing algorithms select a routing path satisfying constraints which are either administrativeoriented (<b>policy</b> <b>routing),</b> or service-oriented (QoS routing). The routes, in addition to satisfying constraints, are selected to reduce costs, balance network load, or increase security. In this paper, we discuss several constraint-based routing approaches and explain their requirements, complexity, and recent research proposals. In addition, we illustrate how these approaches can be integrated with Internet label switching and QoS architectures. We also discuss examples of application-level routing techniques used in today’s Internet. Keywords—constraint-based routing, QoS routing, <b>policy</b> <b>routing,</b> MPLS, DiffServ, content routin...|$|E
40|$|The {{purpose of}} this RFC is to outline a variety of models for <b>policy</b> based <b>routing.</b> The {{relative}} benefits of the different approaches are reviewed. Discussions and comments are explicitly encouraged {{to move toward the}} best <b>policy</b> based <b>routing</b> model that scales well within a large internetworking environment. Distribution of this memo is unlimited...|$|R
40|$|<b>Routing</b> <b>policy,</b> {{also known}} as {{selection}} function, is an important constituent of adaptive routing algorithm for interconnection networks. However, relatively very small research effort {{has been put on}} it until now. A generic design framework for it is absent, and the behind mechanism of how it affects the network performance needs further exploration. In this paper we study the <b>routing</b> <b>policy</b> for interconnection networks as a separate topic. The action of <b>routing</b> <b>policy</b> on network traffic is analyzed. We then clarify that <b>routing</b> <b>policy</b> actually works as a traffic scheduler. It together with some other mechanisms constitutes a traffic shaping paradigm for interconnection networks. Five generic <b>routing</b> <b>policies</b> are proposed in conformance to the analysis. They explicitly schedule the real-time network traffic based on traffic measurement. Counters are used as cost-effective measurement facilities. To standardize the design, constituents of a counter-based <b>routing</b> <b>policy</b> (CRP) are formally defined. Simulations covering extensive traffic patterns exhibit potentials of CRP in maximizing the network performance...|$|R
40|$|<b>Routing</b> <b>policies</b> are {{important}} aspects of Internet <b>routing.</b> <b>Routing</b> <b>policies</b> can be interpreted or translated {{in order to help}} with router configuration and troubleshooting of large scale routing. In this bachelor's thesis I am discussing aspects of writing and interpreting <b>routing</b> <b>policies</b> in RPSL language. The thesis is based on my previous software project BGF, which is a RPSL interpreter and translator written in Perl 5...|$|R
40|$|In our {{previous}} work, 1 {{we used a}} simplied model of routing policy in the Internet to study the impact of <b>policy</b> <b>routing</b> on Internet path-lengths. This prior work suered from two shortcomings|it {{was based on a}} single snapshot of the Internet topology, and our simplied policy model could generate AS paths that violate peering relationships. In this paper, we address these two shortcomings by re-examining our results with respect to a more recent snapshot of the Internet, and improving the policy model to avoid peering violation. We nd that our prior observations regarding the path ination due to routing policy appear to hold both across time and with respect to a more sophisticated model of routing policy. Keywords: Internet Paths, Paths, Routing Policy, <b>Policy</b> <b>Routing,</b> Path Ination 1...|$|E
40|$|Routing on the Internet is policy-based, {{meaning that}} each node {{is free to}} decide how to assign costs to paths. This freedom is {{important}} since the nodes are autonomous, competing organizations whose path preferences may be dictated by external factors (such as economic or political) rather than simply by path length. Although shortest-path routing is well-understood, {{little is known about the}} complexity of <b>policy</b> <b>routing.</b> The only known algorithms for <b>policy</b> <b>routing</b> use routing trees – for each destination, construct a routing tree and forward packets along it. A negative result of Griffin et al. shows that routing tree-based algorithms (including the Internet routing algorithm, BGP) may not converge when arbitrary policies are used, and deciding whether they will is NP-complete. Yet there are no better algorithms known for policy routing; one possible reason is that the problem is much harder than shortest-path routing. We study the complexity of <b>policy</b> <b>routing</b> with forbidden-set policies – each node specifies a set of forbidden nodes and wants to route on paths that avoid them. We begin by proving some new intractability results and reviewing known ones about routing tree-based algorithms. We show that routing trees are both impractical (they may not exist) and intractable (deciding if they exist is NP-complete) for forbidden-set policies on tree-like networks. We also prove th...|$|E
40|$|Abstract—Traditional {{firewalls}} {{have the}} ability to allow or block traffic based on source address as well as destination address and port number. Our original ROFL scheme implements firewalling by layering it on top of routing; however, the original proposal focused just on destination address and port number. Doing route selection based in part on source addresses is a form of <b>policy</b> <b>routing,</b> which has started to receive increased amounts of attention. In this paper, we extend the original ROFL (ROuting as the Firewall Layer) scheme by including source prefix constraints in route announcement. We present algorithms for route propagation and packet forwarding, and demonstrate the correctness of these algorithms using rigorous proofs. The new scheme not only accomplishes the complete set of filtering functionality provided by traditional firewalls, but also introduces a new direction for <b>policy</b> <b>routing.</b> I...|$|E
40|$|<b>Routing</b> <b>policy</b> {{configuration}} is a {{very important}} aspect of network operations because it affects the network's profit, performance and security. Network operators implement lowlevel <b>routing</b> <b>policies</b> according to their high-level objectives. In this paper, we propose a set of techniques for analyzing networkwide <b>routing</b> <b>policies.</b> First, we interpret the <b>routing</b> <b>policies</b> relevant to a single neighbor. Then, we classify all neighbors into groups which express common intent. Classification is done by generating and comparing update patterns. We validate our approach by experimenting with the router configuration files of a Tier- 1 ISP. Our techniques classify neighbors according to their type (customer/peer/transit), highlight neighbors which deviate from the norm and reveal possible mistakes. Consequently, our network-wide analysis seems to be promising for automating the translation of <b>routing</b> <b>policy</b> configuration into initial intent...|$|R
40|$|This paper {{considers}} {{the problem of}} throughput optimal routing/scheduling in a multi-hop constrained queueing network with random connectivity whose special case includes opportunistic multi-hop wireless networks and input-queued switch fabrics. The main challenge {{in the design of}} throughput optimal <b>routing</b> <b>policies</b> is closely related to identifying appropriate and universal Lyapunov functions with negative expected drift. The few well-known throughput optimal policies in the literature are constructed using simple quadratic or exponential Lyapunov functions of the queue backlogs and as such they seek to balance the queue backlogs across network independent of the topology. By considering a class of continuous, differentiable, and piece-wise quadratic Lyapunov functions, this paper provides a large class of throughput optimal <b>routing</b> <b>policies.</b> The proposed class of Lyapunov functions allow for the <b>routing</b> <b>policy</b> to control the traffic along short paths for a large portion of state-space while ensuring a negative expected drift. This structure enables the design of a large class of <b>routing</b> <b>policies.</b> In particular, and in addition to recovering the throughput optimality of the well known backpressure <b>routing</b> <b>policy,</b> an opportunistic <b>routing</b> <b>policy</b> with congestion diversity is proved to be throughput optimal. Comment: 31 pages (one column), 8 figures, (revision submitted to IEEE Transactions on Information Theory...|$|R
40|$|Currently the inter-domain <b>routing</b> <b>policy</b> of an {{autonomous}} system (AS) is often ill-specified, undergoes constant adjustments {{for reasons of}} traffic engineering and/or to address-specific customer wishes, and is often realized by manually configuring each router individually, an error prone approach. This paper presents a system that raises the abstraction level at which <b>routing</b> <b>policies</b> are specified from individual BGP statements to a network-wide <b>routing</b> <b>policy.</b> Our system enables {{an autonomous}} system (i) to explicitly specify its inter-domain network-wide <b>routing</b> <b>policy</b> as first class entities, an extensible collection of individual policies and services such as a peering-policy, a filter-martians-policy, a signaled black-hole service, etc.; (ii) to specify its <b>routing</b> <b>policy</b> independently of {{the current state of}} the network; (iii) to automatically generate the appropriate pieces of the router configurations for all routers in the network from appropriate databases. We are now able to manage the overall routing architecture rather than each individual router. Initial deployment of the system to manage the network-wide <b>routing</b> <b>policy</b> of a large AS affirm the above advantages in an operational setting...|$|R
40|$|The {{impact of}} routing policy on Internet paths is poorly understood. In theory, policy can inflate shortest-router-hop paths. To our knowledge, {{the extent of}} this {{inflation}} has not been previously examined. Using a simplified model of routing policy in the Internet, we obtain approximate indications {{of the impact of}} <b>policy</b> <b>routing</b> on Internet paths. Our findings suggest that routing policy does impact the length of Internet paths significantly. For instance, in our model of routing policy, some 20 % of Internet paths are inflated by more than five router-level hops. Keywords [...] -Routing, Routing Policy, <b>Policy</b> <b>Routing,</b> Internet Paths I. INTRODUCTION The earliest internet routing protocols attempted to construct lowest delay paths to destinations [1]. Thereafter, based on operational experience with the stability of delaysensitive routing [2], deployed routing protocols evolved to essentially support global shortest hop-count routing [3]. Today's Internet contains several administrativ [...] ...|$|E
40|$|We {{present an}} {{architecture}} for inter-domain <b>policy</b> <b>routing</b> (IDPR). The objective of IDPR is {{to construct and}} maintain routes, between source and destination administrative domains, that provide user traffic with the requested services within the constraints stipulated for the domains transited. The IDPR architecture is designed to accommodate an internetwork containing {{tens of thousands of}} administrative domains with heterogeneous service requirements and restrictions...|$|E
40|$|In recent years, {{the number}} of {{organizations}} connected to thie Internet has grown, resulting in an increasingly diverse set of connected users. As a result, network managers have growing concerns about the security and control of network resources. This concern has led protocol engineers to design routing protocols, such as Inter-Domain <b>Policy</b> <b>Routing</b> (IDPR), that include policy restrictions. The introduction of these protocols present {{a number of new}} problems to network administrators as {{they may not be able}} to easily understand how the policies of different networks interact. A network manager would like to create policies that prevent unauthorized traffic, without impeding legitimate traffic: flows. In the presence of charging mechanisms, a manager may wish to use policy terms to assist in minimizing costs by avoiding the use of commercial networks whenever possible. In this paper we describe a route synthesis simulation tool (IISST) which we have implemented to examine some of these network management issues. We show how it is used to explore some hypothetical situations that a network administrator would face in managing <b>policy</b> <b>routing...</b>|$|E
40|$|We {{investigate}} a time-invariant network routing problem where a probabilistic local broadcast model for wireless transmission is used. We discuss this model's key features. We present results showing that an index policy is optimal for the time-invariant routing problem. We extend the time-invariant model {{to allow for}} control of transmission type, and prove that the index nature of the optimal <b>routing</b> <b>policy</b> remains unchanged. We then allow time-varying system parameters in the original model, and discover conditions under which a time-varying index <b>routing</b> <b>policy</b> or a time-varying priority <b>routing</b> <b>policy</b> is optimal. Finally, we present three distributed implementations of an optimal <b>routing</b> <b>policy</b> for the time-invariant problem and provide results on their convergence properties...|$|R
40|$|Abstract — The stable-paths {{problem is}} an {{abstraction}} {{of the basic}} functionality of the Internet’s BGP routing protocol. This abstraction has received considerable attention, due to the instabilities observed in BGP. In this abstraction, each node informs its neighboring nodes of its current path to the destination node. From the paths received from its neighbors, each node chooses the best path according to some locally chosen <b>routing</b> <b>policy.</b> However, since <b>routing</b> <b>policies</b> are chosen locally, conflicts may occur between nodes, resulting in unstable behavior. Current solutions either require expensive path histories, or prevent nodes from locally choosing their <b>routing</b> <b>policy.</b> In this paper, we present a solution with small overhead, and furthermore, each node has {{the freedom to choose}} any <b>routing</b> <b>policy.</b> However, to avoid instabilities, the possibility of divergence is measured using an efficient cost metric exchanged between nodes. If the cost metric indicates that divergence is occurring, steps are taken to ensure convergence. I...|$|R
40|$|Abstract. The stable-paths {{problem is}} an {{abstraction}} {{of the basic}} functionality of the Internet’s BGP routing protocol. This abstraction has received considerable attention, due to the instabilities observed in BGP. In this abstraction, each process informs its neighboring processes of its current path to the destination. From the paths received from its neighbors, each process chooses the best path according to some locally chosen <b>routing</b> <b>policy.</b> However, since <b>routing</b> <b>policies</b> are chosen locally, conflicts may occur between processes, resulting in unstable behavior. Current solutions either require expensive path histories, or prevent processes from locally choosing their <b>routing</b> <b>policy.</b> In this paper, we present a solution with small overhead, and furthermore, each process has {{the freedom to choose}} any <b>routing</b> <b>policy.</b> However, to avoid instabilities, each process is restricted to choose a path that is consistent with the current paths of its descendants on the routing tree. This is enforced through diffusing computations. Furthermore, our solution is stabilizing, and thus, recovers automatically from transient faults. ...|$|R
40|$|<b>Policy</b> <b>Routing</b> {{protocols}} incorporate policy related constraints {{into the}} route computation and packet forwarding functions for inter-Administrative Domain (AD) communication. However, this new functionality exacerbates the already critical problem of routing information distribution and storage overhead in very large intemets (e. g., 100, 000 ADS). This paper investigates the scalability of the Inter-Domain <b>Policy</b> <b>Routing</b> (IDPR) architecture. In particular, we present an informal analysb of Connectivity Database and update overhead. A {{model of the}} IDPR architecture is defined and exercised by varying several parameters. The results obtained illustrate the scaling properties of the IDPR architecture and their dependencies upon intanet configuration, connectivity among ADS, and number of policies. We And that, under certain reasonable assumptions, global information for M intemet of 6, 000 transit ADS (and 60, 000 stub ADS) will occupy {{on the order of}} 2. 6 Megabytes of storage in the route server. Since route servers need not be cdocated with gateways, this requirement is not necessarily prohibitive. However, the zonnectivity database &e predicted by the model is quite large in terma of computing rout- over this database, and distributing updates to maintain the database. Future work must address these other critical dimauioru of scaling (U well. ...|$|E
40|$|In today's Internet core, routers store {{forwarding}} state {{proportional to}} the number of edge networks. As the Internet grows and core line rates increase, routers require memories that are increasingly fast and large [...] -and are correspondingly increasingly expensive and difficult to engineer. In this paper, we present Reduced-State Routing (RSR), in which core routers require state only concerning the network topology within a two-hop radius, and thus of a size independent {{of the total number of}} Internet edge networks. RSR achieves this feat by routing geographically using two sets of node addresses: virtual coordinates, that are assigned to reflect the link costs within an autonomous system; and geographic coordinates, that correspond to nodes' physical locations. RSR routes greedily on virtual coordinates, and falls back to face routing on geographic coordinates when greedy progress is impossible on virtual coordinates. Unlike previous geographic routing schemes, RSR works on Internetlike graphs (rather than only on wireless-like graphs), and supports <b>policy</b> <b>routing.</b> By simulating RSR on real tier- 1 ISP topologies, we demonstrate that RSR achieves low path stretch, comparable to that caused by <b>policy</b> <b>routing</b> in today 's Internet...|$|E
40|$|The Internet is {{composed}} of many Autonomous Systems (ASs) under different authorities with possible conflicts of interest. Each AS has its own source or transit policies to regulate network traffic to or through its domain. Communication packets among ASs may be silently dropped by any AS in the route because the communication violates its policies. <b>Policy</b> <b>routing</b> is a research field to resolve the packet-dropping problem. Currently, Border Gateway Protocol (BGP) is the most dominant protocol in this field. It allows each AS to apply its own policies to select and advertise routes to other ASs. These policy-fulfilled route advertisements are propagated throughout the whole Internet so that {{a certain degree of}} <b>policy</b> <b>routing</b> can be achieved. However, BGP is a hop-by-hop distance-vector protocol in which each router only advertises one route per destination to its neighbors. As a result, a source AS may not be capable of establishing a connection to another AS due to lack of policy routes in hand, though such routes may physically exist. With respect to this deficiency, this thesis proposes a protocol, Source Policy Route Discovery Protocol, to supplement BGP. A simulation program was written and some experiments were done. According to the experiments, the proposed protocol is suitable for improving the reliability and performance of BGP...|$|E
40|$|Abstract: Routing {{protocols}} maintain connectivity of Internet routers and {{hosts and}} determine the path that a packet traverses. Inferring Internet paths is critical for evaluating the performance of Internet applications and services, such as cloud services and content delivery. Unlike intra-domain routing protocols, which typically use the shortest paths, inte-domain routing protocol apply local policies for selecting routes/paths and propagating routing information. These <b>routing</b> <b>policies</b> are typically constrained by contractual commercial agreements between ASes. It is well-known that <b>routing</b> <b>policies</b> can impact the AS path that an AS may select for delivering a packet. Thus, the ability to infer the AS-level paths is critical to evaluate the impact of <b>routing</b> <b>policies</b> {{on the performance of}} Internet applications and services. In addition, inferring AS-level paths is also important for content providers, such as Google and Amazon, to determine <b>routing</b> <b>policies</b> to ensure small latency in delivering content. However, inferring AS-level paths is challenging. Internet path selection largely depends on <b>routing</b> <b>policies,</b> which in turn are determined independently by network administrators and are considered as confidential information. In this paper, we present three common <b>routing</b> <b>policies</b> in the Internet and formulate the problem of inferring <b>routing</b> <b>policy</b> conforming AS-level paths. We present efficient algorithms for inferring the Internet AS-level paths. The algorithms are proved to be optimal in terms of the ability of derive the policy-conforming AS-level paths. We further quantify the efficiency of these algorithms...|$|R
40|$|As the Internet usage grows, {{existing}} network infrastructure {{must deal with}} increasing demand. One {{way to deal with}} this is to increase network capacity, and another, is to set network parameters appropriately. In this dissertation we contribute to the latter approach by determining the unique network paths data must flow over from its origin to its destination, while accounting for an Active Queue Management method, Random Early Detection (RED). We formulate a mixed integer non-linear program to determine the data paths, referred to as a <b>routing</b> <b>policy.</b> We prove that determining an optimal <b>routing</b> <b>policy</b> that accounts for RED is NP-Hard. Furthermore, in order for the generated <b>routing</b> <b>policies</b> to be real-world implementable, also known as realizable, we must determine weights for all arcs in the network such that solving the all pairs shortest path problem using these weights reproduces the <b>routing</b> <b>policies.</b> We show that determining if our generated <b>routing</b> <b>policies</b> are realizable is NP-Hard. Fortunately, using traffic data from three real-world networks, we are able to find realizable <b>routing</b> <b>policies</b> for these networks that account for RED, using an off-the-shelf solver, and policies found perform better than those used in those networks at the time the data was collected...|$|R
30|$|NS- 2 is {{a network}} {{simulator}} based on discrete events, popular among academics for being {{free and open}} source. The project started at Berkeley University and has received the collaboration of many researchers. It {{is based on the}} OSI model network layers, and several technologies were implemented on it, such as queuing <b>policies,</b> <b>routing</b> protocols, transport agents (TCP - Transmission Control Protocol and UDP - User Datagram Protocol), wireless network protocols, and traffic-generating applications. Furthermore, it also has a graphical interface for network visualization, called Network Animator (NAM) [29].|$|R
40|$|Status of this Memo This RFC {{specifies}} an IAB standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "IAB Official Protocol Standards " for the standardization state and status of this protocol. Distribution of this memo is unlimited. We present the set of protocols and procedures that constitute Inter-Domain <b>Policy</b> <b>Routing</b> (IDPR). IDPR includes the virtual gateway protocol, the flooding protocol, the route server query protocol, the route generation procedure, the path control protocol, and the data message forwarding procedure...|$|E
40|$|We {{present an}} online {{distributed}} algorithm, the Causation Logging Algorithm (CLA), in which Autonomous Systems (ASes) in the Internet individually report route oscillations/flaps they experience {{to a central}} Internet Routing Registry (IRR). The IRR aggregates these reports and may observe what we call causation chains where each node on the chain caused a route flap at the next node along the chain. A chain may also have a causation cycle. The type of an observed causation chain/cycle allows the IRR to infer the underlying <b>policy</b> <b>routing</b> configuration (i. e. the system of economic relationships and constraints on route/path preferences). Our algorithm {{is based on a}} formal <b>policy</b> <b>routing</b> model that captures the propagation dynamics of route flaps under arbitrary changes in topology or path preferences. We derive invariant properties of causation chains/cycles for ASes which conform to economic relationships based on the popular Gao-Rexford model. The Gao-Rexford model is known to be safe {{in the sense that the}} system always converges to a stable set of paths under static conditions. Our CLA algorithm recovers the type/property of an observed causation chain of an underlying system and determines whether it conforms to the safe economic Gao-Rexford model. Causes for nonconformity can be diagnosed by comparing the properties of the causation chains with those predicted from different variants of the Gao-Rexford model...|$|E
40|$|International audienceForbidden-set {{labeling}} schemes {{is a way}} {{to associate}} with each node of a graph G a compact data-structure, i. e., a short label, supporting queries Q(s,t,X) between any two nodes (s,t) of G where X is any set of "forbidden" nodes of G. The query Q(s,t,X) must be solved from the labels of the nodes involved in the query only, without any other source of information. Several important distributed applications are captured by this framework, like for instance fault-tolerant and <b>policy</b> <b>routing</b> in the Internet. In this talk, I show how to derive new time-efficient algorithms for some problems in dynamic graphs...|$|E
40|$|International audienceIn {{this paper}} we propose a new <b>routing</b> <b>policy</b> to route jobs to {{clusters}} in computational grids. This <b>routing</b> <b>policy</b> is based on index tables computed at each cluster. These tables can be computed off-line or on-line. Their computations use predictions about the average future behavior of the grid. We show how can be used in practice for task allocations in computational grids. We also report numerous simulations providing numerical evidence of the efficiency of our index <b>routing</b> <b>policy</b> compared with the classical brokers used in most production grids today...|$|R
40|$|BGP <b>routing</b> <b>policies</b> {{are mainly}} used by network {{operators}} to enforce business relationships between Autonomous Systems (AS), and to prefer some routes over others. In this paper, we propose a hierarchical policy model to express each {{policy at the}} most appropriate level of abstraction. The model is structured around chains of filters that apply at a specific level of abstraction. To validate our approach, we implemented the model in a Java prototype {{and used it to}} reproduce several network-wide <b>routing</b> <b>policies.</b> In all studied networks, the model produced a high-level view of <b>routing</b> <b>policies</b> while preserving their semantics. Our model offers numerous advantages to network operators including, but not limited to, a better network documentation, an improved understanding of <b>routing</b> <b>policies,</b> redundancy suppression, and an easier way of managing their network. ...|$|R
40|$|Abstract: As a {{policy-based routing}} protocol, BGP (border gateway protocol) allows each AS to choose local <b>routing</b> <b>policy</b> independently. Possible {{policies}} conflict {{may result in}} BGP route persistent oscillation. This paper proposes an adaptive mechanism to guarantee BGP convergence with policies conflict, which neither impairs the flexibility of choosing <b>routing</b> <b>policy,</b> nor inserts additional information in BGP messages. With the mechanism, route stability is taken into BGP decision process so that unstable route is degraded to cause more stable route to be chosen to stop policies dispute. The new mechanism also can adapt to topology change and converge to new stable route. Key words: border gateway protocol (BGP); inter-domain routing; <b>policies</b> conflict; <b>routing</b> convergenc...|$|R
