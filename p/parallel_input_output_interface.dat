0|10000|Public
5000|$|... 4.1.Component Based Software [...] 4.2.Multiple <b>Input</b> / <b>Output</b> <b>interfaces</b> ...|$|R
40|$|Abstract. In {{designing}} systems, engineers decompose {{the problem}} into smaller, more manageable tasks. A {{classic example of}} this is the separa-tion principle from control systems which allows one to decompose the design of an optimal feedback control system into two independent tasks by designing (a) an observer, and (b) a controller. We investigate an analogous result for embedded system interfacing that will allow separa-tion of the design of the <b>input</b> and <b>output</b> hardware <b>interfaces</b> while still guaranteeing the ability of the software to meet the system requirements. We define the notions of observability (controllability) of the system re-quirements with respect to the <b>input</b> (<b>output)</b> <b>interface.</b> We show that for a system that can be modeled by a functional four-variable model, observability and controllability allow for the separation of the design of the <b>input</b> and <b>output</b> <b>interfaces.</b> We also show that this separation is not always possible for systems that need the general, relational four-variable model. By strengthening either observability or controllability, we restrict the choice of <b>input</b> or <b>output</b> <b>interfaces,</b> but ensure separa-bility of their designs. ...|$|R
40|$|High {{resistances}} prevent hotspots in <b>parallel</b> <b>input</b> and <b>output</b> operation. Nonvolatile {{computer memory}} combines ultrahigh storage density with extremely-low power dissipation. Accommodates about 1 billion bits in square centimeter of surface area. Bit written with expenditure {{of less than}} 1 nanojoule of energy and read with even lower energy. Developed for <b>parallel</b> <b>input</b> and <b>output</b> operation...|$|R
5000|$|... probes {{will not}} report {{separate}} <b>input</b> and <b>output</b> <b>interface</b> information like {{a report from}} a router would.|$|R
40|$|Abstract: Modern {{smartphones}} {{have made}} many pervasive computing dreams come true. Still, many mobile applications do not perform well {{due to the}} shortage of resources for computation, data storage, network bandwidth and battery capacity. The purpose of our project is to provide the user with the capability to execute resource intensive applications on mobile devices. The mobile client provides <b>input</b> <b>output</b> <b>interfaces</b> while the processing is done in a remote location which is the server. Our application provides abstraction by hiding the processing from the user and only showing the <b>input</b> <b>output</b> <b>interfaces.</b> This makes user to think that all the processing is done on the mobile device itself. The application provides an environment where resource intensive applications, that required desktops or laptops to execute, can now be executed on mobile devices. This gives mobility to user as he can execute these applications whenever he wants through mobile. I...|$|R
5000|$|The Emotion Engine {{consists}} of eight separate [...] "units", each performing a specific task, integrated onto the same die. These units are: a CPU core, two Vector Processing Units (VPU), a 10 channel DMA unit, a memory controller, and an Image Processing Unit (IPU). There are three interfaces: an <b>input</b> <b>output</b> <b>interface</b> to the I/O processor, {{a graphics interface}} (GIF) to the graphics synthesizer, and a memory interface to the system memory.|$|R
40|$|The {{principal}} {{mission of}} the National Severe Storms Forecast Center (NSSFC) is to maintain a continuous watch of weather developments {{that are capable of}} producing severe local storms, including tornadoes, and to prepare and issue messages designated as either Weather Outlooks or Tornado or Severe Thunderstorm Watches for dissemination to the public and aviation services. In addition to its assigned responsibility at the national level, the NSSFC is involved in a number of programs at the regional and local levels. Subsequent subsections and paragraphs describe the NSSFC, its users, <b>inputs,</b> <b>outputs,</b> <b>interfaces,</b> capabilities, workload, problem areas, and future plans in more detail...|$|R
50|$|While {{there are}} {{specialized}} applications, such as storage area networks, where the <b>input</b> and <b>output</b> <b>interfaces</b> {{are the same}} bandwidth, {{this is not always}} the case in general LAN applications. In LANs, a switch used for end user access typically concentrates lower bandwidth and uplinks into a higher bandwidth.|$|R
50|$|To provide {{communications}} between the Emotion Engine and the <b>Input</b> <b>Output</b> Processor (IOP), the <b>input</b> <b>output</b> <b>interface</b> interfaces a 32-bit wide, 37.5 MHz <b>input</b> <b>output</b> bus {{with a maximum}} theoretical bandwidth of 150 MB/s to the internal data bus. The interface provides enough bandwidth for the PCMCIA extension connector which {{was used for the}} network adapter with built-in P-ATA interface for faster data access and online functionality. An advantage of the high bandwidth was that it could be easily used to introduce hardware extensions like the Network Adapter with built-in IDE HDD support or other extensions to extend functionality and product lifecycle which {{can be seen as a}} competitive advantage. In newer variants (like the slim edition), the interface would however offer vastly more bandwidth than what is required by the PlayStation's <b>input</b> <b>output</b> devices as the HDD support was removed and the PCMCIA connector design was abandoned in favor of a slimmer design.|$|R
5000|$|With two {{expansion}} modules, {{the address}} range {{in which they}} are to be displayed by previously has DIP switches are set. The retrofitting of additional <b>input</b> and <b>output</b> <b>interfaces</b> are provided with the module Z 1013.30 which three freely usable I/O ports and a V.24 provides interface for control, for example printers. 17 ...|$|R
5000|$|For {{the output}} of the {{computer}} graphics include factory only a character generator, the text or graphic symbols (in [...] "quasi Graphics") with a 32 × 32 characters with 8 × 8 pixels can represent. The needed for this to ROM located fixed character set contains 96 alphanumeric and control characters and graphic symbols 146. 12 A pixel graphics mode ("graphic") is by default not available, but can be supplemented in DIY. For instructions were published in various magazines and books until the early 1990s. The black-and-white image is output through the coaxial RF antenna port on a standard TV, the backfitting of color representation are possible. The operation of the keyboard and the control of the tape recorder via the built-in computers <b>input</b> and <b>output</b> port U855-PIO (English <b>Parallel</b> <b>Input</b> <b>Output).</b>|$|R
50|$|Beginning in the mid-1970s, a {{new class}} of small {{computers}} came onto the marketplace. Featuring 8-bit processors, typically the MOS Technology 6502, Intel 8080, Motorola 6800 or the Zilog Z80, along with rudimentary <b>input</b> and <b>output</b> <b>interfaces</b> and as much RAM as practical, these systems started out as kit-based hobbyist computers but soon evolved into an essential business tool.|$|R
40|$|AbstractWe {{provide a}} short {{notation}} for processes with <b>parallel</b> <b>inputs</b> and <b>outputs.</b> With this specification format synchronous networks or grid protocols {{can be specified}} in a straightforward way. For a certain class of connected networks we prove a correctness theorem that characterizes I/O behavior. We illustrate our approach by an example on the approximation of a one-dimensional wave equation...|$|R
40|$|In this paper, {{the work}} on {{developing}} and validating a model-in-the-loop (MIL) simulation environment {{for a group of}} prototype fuel cell vehicles is presented. The MIL model consists of a vehicle plant model and an integrated vehicle system controller model. First, the vehicle simulation plant model is functionally validated with a simple vehicle system controller (VSC) model and then improved to satisfy the <b>input</b> <b>output</b> <b>interface</b> and fidelity requirements. The developed MIL system is then verified for basic functionality against the simple VSC controller model and shows uniform correlation results. It is further validated against vehicle dynamometer test data and demonstrates satisfactory consistency. A rapid model building approach which is suitable for model-based controller design process was also discussed. This approach enabled the developers to use model-to-code algorithms unlike many comparable simulation models. © 2011 AACC American Automatic Control Council...|$|R
40|$|This book {{systematically}} {{addresses the}} quantification of quality aspects of multimodal interactive systems. The conceptual structure {{is based on}} a schematic view on human-computer interaction where the user interacts with the system and perceives it via <b>input</b> and <b>output</b> <b>interfaces.</b> Thus, aspects of multimodal interaction are analyzed first, followed by a discussion of the evaluation of <b>output</b> and <b>input</b> and concluding with a view on the evaluation of a complete system...|$|R
40|$|This paper gives a {{platform}} of simulation data for RFID indoor tracking system, i. e., tracking system graphical user interface. The platform contains <b>input</b> and <b>output</b> <b>interface,</b> and the former includes the radius settings, data generation module and the user guide. The corresponding <b>output</b> <b>interface</b> includes system parameters display and the saving image function, etc. The default parameters are also given for the graphical user interface (GUI) of the RFID indoor tracking system. The analysis of the user’s use shows that the developed platform is practical and feasible. ...|$|R
40|$|We present ViMPIOS, a novel MPI-IO {{implementation}} {{based on}} ViPIOS, the Vienna <b>Parallel</b> <b>Input</b> <b>Output</b> System. ViMPIOS inherits the defining characteristics of ViPIOS, {{which makes it}} a client-server based system focusing on cluster architectures. ViMPIOS stands out from all other MPI-IO implementations by its "truly" portable design, which allows not only applications to be transferred between parallel architectures easily but also to keep their original performance characteristics on the new platform as far as possible. This is kept by the "smart" AI-Blackboard module of ViPIOS, which is responsible for an appropriate data layout. Specifically in this paper we concentrate on the algorithm, which maps MPI-IO data structures on respective ViPIOS structures, and thus allows to exploit the ViPIOS properties. 1 Introduction Over the last few years the so-called I/O bottleneck turned out as the limiting factor in high-performance computing. Thus, the performance of parallel systems in many a [...] ...|$|R
40|$|In {{this paper}} we present the Vienna <b>Parallel</b> <b>Input</b> <b>Output</b> System (ViPIOS), a novel {{approach}} to enhance the I/O performance of high performance applications. It is a client-server based tool combining capabilities found in parallel I/O runtime libraries and parallel file systems. 1 Introduction In {{the last few years}} the applications in high performance computing (Grand Challenges [1]) shifted from being CPU-bound to be I/O-bound. Performance can not be scaled up by increasing the number of CPUs any more, but by increasing the bandwidth of the I/O subsystem. This situation is commonly known as the I/O bottleneck in high performance computing ([5]) In reaction all leading hardware vendors of multiprocessor systems provided powerful concurrent I/O subsystems. In accordance researchers focused on the design of appropriate programming tools {{to take advantage of the}} available hardware resources. 1. 1 The ViPIOS approach Conventionally two different directions in developing programming supp [...] ...|$|R
40|$|Abstract: This article {{reports on}} {{a survey of the}} {{preferences}} of visually impaired persons for a possible personal navigation device. The results showed that the majority of participants preferred speech <b>input</b> and <b>output</b> <b>interfaces,</b> were willing to use such a product, thought that they would make more trips with such a device, and had some concerns about the cosmetic acceptability of a device and the use of a single or stereo headphone interface...|$|R
40|$|Due to {{the shift}} from CPU-bound to I/O bound {{problems}} {{the performance of the}} disk I/O accesses of parallel programs is a key factor for the success of solution approaches. The Vienna <b>Parallel</b> <b>Input</b> <b>Output</b> System (ViPIOS) [14] is a clientserver based system to speed up the disk accesses for high performance programs by combining characteristics of parallel I/O runtime libraries and parallel file systems. In this paper we present the data access principle followed in ViPIOS to reach high I/O bandwidth. The underlying data layout policy and the disk access profile is explained. We justify our approach by an exhaustive performance and scalability analysis. Keywords: High performance computing, parallel I/O, runtime systems, scalability, performance analysis 1 Introduction In the last few years the applications in high performance computing (Grand Challenges [2]) shifted from being CPUbound to be I/O-bound. Performance can not be scaled up by increasing the number of CPUs any more, but [...] ...|$|R
40|$|In {{this paper}} we present the MPI-IO Interface kernel in the Vienna <b>Parallel</b> <b>Input</b> <b>Output</b> System (ViPIOS), {{which is a}} {{client-server}} based parallel I/O system. Compared to the already existing parallel I/O systems and libraries {{the concept of an}} independent distributed server promises to greatly enhance the usability and acceptance of the I/O system as well as the portability of client applications. The programmer of a client application does not have to deal with details like file layout on disk, sharing of filepointers etc. Instead high level MPI-IO requests may be issued and the server is expected to perform them in a (near) optimal way. ViPIOS is based on MPI and is targeted (but not restricted) to MPP's using the SPMD paradigm. We describe the current system architecture in general and give a detailed overview of MPI-related design considerations. Keywords parallel I/O, server-client, SPMD, ViPIOS, MPI-IO, I/O chapter in MPI- 2 1 Introduction ViPIOS is an I/O runtime system, wh [...] ...|$|R
40|$|Two factors {{strongly}} inuenced {{the research}} in high performance computing {{in the last few}} years, the I/O bottleneck and cluster systems. Firstly, for many supercomputing applications the limiting factor is not the number of available CPUs anymore, but the bandwidth of the disk I/O system. Secondly, a shift from the classical, costly supercomputer systems to aordable clusters of workstations is apparent, which allows problem solutions to a much lower price. As a result we present in this paper the Vienna <b>Parallel</b> <b>Input</b> <b>Output</b> System (ViPIOS), which harnesses I/O resources available in cluster type systems for high performance (parallel and/or distributed) applications. ViPIOS is a client-server based system to increase the bandwidth of disk accesses by (re-) distributing the data among available I/O resources and parallelizing the execution scheme. It follows a data engineering approach by combining characteristics of parallel I/O runtime libraries and parallel le systems with a smart administration module. Keywords: distributed I/O, parallel I/O, MPI-IO, cluster computing...|$|R
40|$|Abstract: This paper gives a {{platform}} of simulation data for RFID indoor tracking system, i. e., tracking system graphical user interface. The platform contains <b>input</b> and <b>output</b> <b>interface,</b> and the former includes the radius settings, data generation module and the user guide. The corresponding <b>output</b> <b>interface</b> includes system parameters display and the saving image function, etc. The default parameters are also given for the graphical user interface (GUI) of the RFID indoor tracking system. The analysis of the user’s use shows that the developed platform is practical and feasible. Copyright © 2014 IFSA Publishing, S. L...|$|R
50|$|The PISO (<b>Parallel</b> <b>Input,</b> Serial <b>Output)</b> block {{typically}} has a <b>parallel</b> clock <b>input,</b> {{a set of}} {{data input}} lines, and input data latches. It may use an internal or external phase-locked loop (PLL) to multiply the incoming parallel clock up to the serial frequency. The simplest form of the PISO has a single shift register that receives the parallel data once per parallel clock, and shifts it out at the higher serial clock rate. Implementations may also make use of a double-buffered register to avoid metastability when transferring data between clock domains.|$|R
40|$|A {{documentation}} of a C++ implementation of ACS 2, the current state-of-the-art of the anticipatory learning classifier system ACS, is provided. The documentation explains {{how to get}} started with the code. A detailed overview {{of the structure of}} the code and of all possible parameter manipulations are given. <b>Input</b> and <b>Output</b> <b>interfaces</b> are revealed. Finally, the documentation exhibits how to run ACS 2 in the provided test environments as well as how to program new environments for further runs with ACS 2...|$|R
40|$|We {{developed}} a desktop search interface called “DashSearch” that enables users to retrieve stored data by efficiently using various metadata (e. g. date and author). DashSearch consists of several desktop widgets, i. e., simple applications related to metadata (e. g. calendar and address book). Each widget {{works as an}} <b>input</b> and <b>output</b> <b>interface.</b> Users can intuitively set search conditions by combining widgets and use widget to browse search results from various viewpoints. ACMClassification: H 5. 2 [Information interfaces and pre...|$|R
40|$|Abstract — This paper {{presents}} an inexpensive and costeffective configurable platform for designing real time video processing and vision systems. The platform is designed around a Field Programmable Gate Array and provides video <b>input</b> and <b>output</b> <b>interfaces.</b> It {{has been used}} to implement several different image and video processing systems, namely with the purpose of prototyping and teaching courses in the area of video processing systems. Experimental results show that this platform provides enough resources and speed to implement even complex systems in real time. I...|$|R
40|$|AbstractWe have {{designed}} and tested at high frequency an RSFQ-based Arithmetic-Logic Unit (ALU), the {{critical component of}} an 8 -bit RSFQ processor datapath. The ALU design {{is based on a}} Kogge-Stone adder and employs an asynchronous wave-pipelined approach scalable for wide datapath processors. The 8 -bit ALU circuit was fabricated with HYPRES’ standard 4. 5 kA/cm 2 process and consists of 7, 950 Josephson junctions, including <b>input</b> and <b>output</b> <b>interfaces.</b> In this paper, we present chip design and high-speed test results for the 8 -bit ALU circuit...|$|R
40|$|Abstract — Searching {{for medical}} {{information}} on the Web has become highly popular, but it remains a challenging task because searchers are often uncertain about their exact medical situations and unfamiliar with medical terminology. To address this challenge, we have built an intelligent medical Web search engine called iMed. iMed introduces and extends expert system technology into the search engine domain. It uses medical knowledge and an interactive questionnaire to help searchers form queries. This paper reports the lessons we learned from building the iMed system. We believe {{that many of these}} lessons can be applied to other medical search engines as well. We systematically discuss important issues in the new field consumer-centric intelligent medical search, including <b>input</b> <b>interface,</b> <b>output</b> <b>interface,</b> search system, medical knowledge base, help system, and testing. I...|$|R
40|$|A {{new type}} of low voltage circuit breaker with {{permanent}} magnet (PM) actuator is proposed. The magnetic field is computed using finite element method (FEM) {{to find out the}} relationship among the flux linkage, displacement and different currents and these information are stored in a look-up table. The control model, which is built in Matlab, is connected with the Adams model via <b>input</b> and <b>output</b> <b>interfaces.</b> The transient co-simulation is used to study the making process. Experiments are carried out on a prototype to validate the proposed method. Department of Electrical Engineerin...|$|R
40|$|Abstract. A new {{format for}} the unified data {{exchange}} between ionosonde data producers and users of ionogram-derived characteristics is introduced, dubbed SAOXML 5 to reflect its heritage {{in the previous}} Standard Archiving Output (SAO) format version 4 and a general-purpose computer language XML commonly used for data exchange. The SAOXML 5 specification shall serve as the reference for development of <b>input</b> and <b>output</b> <b>interfaces</b> for the software projects that read and write ionogram-derived data. The paper discusses motivation for introducing new format and outlines basic principles of its design and use...|$|R
40|$|International audienceThis paper {{presents}} a HW/SW platform for embedded video system. It {{has been designed}} around an embedded RISC processor and FPGA technologies and provides video <b>input</b> and <b>output</b> <b>interfaces.</b> The configurable platform {{has been used to}} implement a real time video processing and vision systems. The Altera's Nios II development board was chosen to realise this real time video platform which uses μClinux as embedded Linux Operating System. Experimental results using H. 263 video encoder show that this platform provides enough resources and speed to implement even complex multimedia embedded systems in real time...|$|R
40|$|The Big Viterbi Decoder (BVD), {{capable of}} {{decoding}} convolutional codes with constraint lengths {{of up to}} 15, is under development for the Deep Space Network (DSN). As part of the development, a commercial single-chip (7, 1 / 2) Viterbi decoder is used to enable early start of system integration. Tests of the integrated partial system (including simulator, <b>input</b> systems, <b>output</b> <b>interfaces,</b> and computer controls) were recently completed at the DSN Compatibility Test Area (CTA- 21) at JPL. The system elements used for the demonstration and test results are described...|$|R
40|$|This paper {{analyzes}} {{the significance of}} the representation and reusability of SRML when being used in simulation models as well as its drawbacks. The paper also discusses the ways to extend SRML schema based on DEVS. The emphasis is placed on the elaboration of mapping DEVS onto SRML schema to formulate SRML’s basic syntax and semantics for the structure and behavior representation of atomic model and coupled model. The model structure, such as property, <b>input</b> <b>interface,</b> <b>output</b> <b>interface</b> and sub-model composition, are described by a group of XML marks. The model behavior, such as external transition, internal transition, output and time-advance functions are described by script language and a group of standard interface offered by SRML simulator in Script marks. The paper then reviews the SRML element architecture and finally gives a simulation demo of using SRML to build differential equation model...|$|R
40|$|We {{present a}} {{detailed}} and extendable {{design of the}} first synchronous single-input delay flip-flop implemented as a gene regulatory network in Escherichia coli (E. coli). The device, which we call the BioD, has one data input (trans-acting RNA), one clock input (far-red light) and an output that reports {{the state of the}} device using green fluorescent protein (GFP). The proposed design builds on Gardner’s toggle switch, to provide a more sophisticated device that can be synchronized with other devices within or without the same cell, and which requires only one data input. We provide a mathematical model of the system and simulation results. The results show that the device behaves in line with desired functionality. Further, we discuss the constraints of the design, which pertain to ranges of parameter values. The BioD is extended via the addition of an update function and <b>input</b> and <b>output</b> <b>interfaces.</b> The result is the BioFSM, which constitutes a synchronous and modular finite state machine, which uses an update function to change its state, stored in the BioD. The BioFSM uses its <b>input</b> and <b>output</b> <b>interfaces</b> for inter-cellular communications. This opens the door to the design of a circular cellular automata (the BioCell), which is envisioned as a number of communicating E. coli colonies, each made of clones of one BioFSM...|$|R
40|$|Presence {{system that}} runs on PT Anugerah Abadi Cahaya Sejati Presence log every {{employee}} based license certificate or other certificate is not present. The certificate is not present can be easily manipulated by employee presence causes the data is invalid. Presence of invalid data causes information generated by the system of performance appraisal information was not correct. To handle the above problems, the necessary information system that can handle the presence and performance assessment system that can generate valid data. Therefore, it will be created a system of presence and a new employee performance evaluation based desktop. The system is made based on {{the analysis of the}} system running in PT Anugerah Abadi Cahaya Sejati. After analyzing the system then {{the next step is to}} design a system consisting of flow systems, Context Diagram, Study Process Diagram, Data Flow Diagrams (DFD), Entity Relationship Diagram (ERD), the design of <b>Input</b> <b>Output</b> <b>Interface</b> design and implement the system. By making use of presence information systems and employee performance evaluation, is expected to produce a report that is true. The resulting report, namely: report clerks, Presence reports per month, chart presence, and employee per year assessment report...|$|R
