0|11|Public
40|$|Added table {{operations}} to main menu Added time series resample (table menu) Can now undo last change for most operations Differential expression plugin Element-wise transform menu item Added aggfunc to <b>pivot</b> dialog Filtering <b>tool</b> highlights filtered rows by default Added predefined widget filters to filtering dialog Fixed slow drawing of large table...|$|R
40|$|Approaches to {{learning}} {{in the twenty-first century}} need to reflect student diversity in order to widen and sustain participation in education and continuing professional development (CPD). There is some evidence of success in widening access to professional social care employment through training and qualification programmes but a notable lack of success in sustaining this participation into CPD and lifelong professional learning. This paper argues for an increased contribution of more personalised, self-generated learning approaches to sustainable participation through the development of the Professional Identity and Values Organisation <b>Tools</b> (<b>PIVOT).</b> The <b>tools</b> have been developed by the authors from the constructivist teaching and learning insights of Personal Construct Psychology and are freely available to download and use (see below). The intention is to enhance reflection for professional learners and practitioners through self-generated personal constructs and values and the creation of self-directed learning aims. We argue that the inclusion of enhanced reflective techniques such as PIVOT helps to facilitate a deep, personal engagement in the processes of learning to learn and builds a foundation for sustained participation in and ownership of students' and practitioners' CPD and lifelong learning...|$|R
50|$|Microsoft Excel is a {{spreadsheet}} developed by Microsoft for Windows, macOS, Android and iOS. It features calculation, graphing <b>tools,</b> <b>pivot</b> tables, and a macro programming language called Visual Basic for Applications. It {{has been a}} very widely applied spreadsheet for these platforms, especially since version 5 in 1993, and it has replaced Lotus 1-2-3 as the industry standard for spreadsheets. Excel forms part of Microsoft Office.|$|R
40|$|AbstractTo better {{identify}} how {{to reduce}} peak demand charges for a university campus, we investigated the relationship between individual building peak demand and the campus peak energy use by evaluating the pattern of energy use across time and day. To facilitate this evaluation, we developed a <b>pivot</b> table analysis <b>tool</b> that enables ready cross-building comparisons in a visually intuitive display. We used a university campus as an example to facilitate potential peak demand charge savings based on analysis of which buildings contribute to peak energy demand, and understanding the factors contributing to that building-dependent energy demand...|$|R
40|$|This article {{presents}} {{the development of}} a metamodel and an open-source design environment for the synchronous language SIGNAL in the GME and Eclipse frameworks. This environment is intended {{to be used as a}} <b>pivot</b> modeling <b>tool</b> for a customized, aspect-oriented and application-driven, computer-aided engineering of embedded systems starting from multiple and heterogeneous initial specifications. The metamodel, called SIGNALMETA, is defined on top of the design workbench POLYCHRONY, which is dedicated to SIGNAL programming. Automated transformations are defined and implemented in order to produce, analyze, statically verify and model-check programs obtained from high-level models. The proposed approach promotes model-driven engineering within a framework that strongly favors formal validation. It aims at significantly decreasing design costs while improving the quality of systems. We demonstrate the agility of this approach by considering the design of both control-oriented and avionic systems. We start with an implementation of core polychronous 1 data-flow concepts in GME and show the ease of its modular extension with application-specific concepts such as mode automata or integrated modular avionics concepts. This work is the first attempt to generalize the formal model of computation and the design philosophy of POLYCHRONY...|$|R
40|$|International audienceThis article {{presents}} {{the development of}} a metamodel and an open-source design environment for the synchronous language Signal in the Gme and Eclipse frameworks. This environment is intended {{to be used as a}} <b>pivot</b> modeling <b>tool</b> for a customized, aspect-orientedandapplication-driven,computer-aidedengineering ofembeddedsystems starting from multiple and heterogeneous initial specifications. The metamodel, called SignalMeta, is defined on top of the design workbench Polychrony, which is dedicated to Signal programming. Automated transformations are defined and implemented in order to produce, analyze, statically verify and model-check programs obtained from high-level models. The proposed approach promotes model-driven engineering within a framework that strongly favors formal validation. It aims at significantly decreasing design costs while improving the quality of systems. We demonstrate the agility of this approach by considering the design of both control-oriented and avionic systems. We start with an implementation of core polychronous 1 data-flow concepts in Gme and show the ease of its modular extension with application-specific concepts such as mode automata or integrated modular avionics concepts. This work is the first attempt to generalize the formal model of computation and the design philosophy of Polychrony...|$|R
40|$|AbstractThis article {{presents}} {{the development of}} a metamodel and an open-source design environment for the synchronous language Signal in the Gme and Eclipse frameworks. This environment is intended {{to be used as a}} <b>pivot</b> modeling <b>tool</b> for a customized, aspect-oriented and application-driven, computer-aided engineering of embedded systems starting from multiple and heterogeneous initial specifications. The metamodel, called SignalMeta, is defined on top of the design workbench Polychrony, which is dedicated to Signal programming. Automated transformations are defined and implemented in order to produce, analyze, statically verify and model-check programs obtained from high-level models. The proposed approach promotes model-driven engineering within a framework that strongly favors formal validation. It aims at significantly decreasing design costs while improving the quality of systems. We demonstrate the agility of this approach by considering the design of both control-oriented and avionic systems. We start with an implementation of core polychronous 1 From the Greek words poly and chronos: multiple and time 1 data-flow concepts in Gme and show the ease of its modular extension with application-specific concepts such as mode automata or integrated modular avionics concepts. This work is the first attempt to generalize the formal model of computation and the design philosophy of Polychrony...|$|R
40|$|In {{this article}} we offer Excel as an {{introductory}} tool to high end business intelligence (BI) and decision support system (DSS) applications. Because it is ubiquitous, Excel {{can be used by}} all managers and business students for exploratory data analysis. We provide three key points in this utilization of MicrosoftÂ® Excel 2003 : (1) manipulating records using Excel as a database, (2) creating PivotTablesÂ® and PivotChartsÂ® using Excel for analysis, and (3) importing data using Excel as an automation container. The basic skill set defined by the above three items allows users to begin to use Excel to its full potential in finding information in business data, and it offers a key tool for future research in improving the utilization of information across organizations. Excel data <b>tools</b> <b>Pivot</b> tables Data analysis Quantitative business education Exploratory data analysis Pivot charts...|$|R
40|$|Process description: The CLA task {{performance}} for the real estate case for Affordable Home Real Estate Company is a computer case used in MIS 300 (course title: Information Systems Theory and Practice) for teaching students the application of spreadsheet in analyzing business information for decision-making. The teaching case also requires students {{to learn more about}} Excel <b>pivot</b> table <b>tool</b> and implement the tool to create very useful summaries of large dataset. These table summaries assist the analyst or decision maker in identifying associations among key variables. The task to administer self-developed CLA performance task is a 2 -phase process. The 1 st phase is the discussion of the case with class activities in the form of extra credit assignments that students have to submit via Blackboard Assignment tool. These extra credit assignments questioned students’ understanding on key assumptions on the case, their understanding of the <b>Pivot</b> table <b>tool</b> in creating useful summary of information and use of Internet as a resource for enhancing their understanding of contextual information related to the case. Phase I: The lack of detailed instructions for analysis provides great opportunity for in-class discussion with activities on given facts, assumptions, alternative sources of information gathered from 2 ̆ 2 googling 2 ̆ 2, and synthesis of information relevant for analyzing the solution(s) to the case. Preceding these class activities is a process of understanding both the case situation and the limitations of analysis based on the dataset provided for analysis of the case. The dataset is an excel file with records of 600 homes sold in Phase I. Using these historical records for projecting which housing project would be targeted for selling in Phase II is explained as a reasonable assumption because Phase II housing projects are similar to Phase I housing projects. Students were explained how specific information provided in the case helps in the process of understanding the case situation. This led to the next step in proper identification of the problem or decision at hand. Students were reminded (as specified in the case) that only one housing project is to be selected, but which one? Development of criteria to evaluate housing project options was initially approached from the dataset without external information, and later with external information that is relevant. The process of “googling” for external information was demonstrated with direction on searching for relevant survey results and statistics about home buyers and housing market. Students were advised to only consider information that would help with analysis of the given dataset (i. e. variables in the dataset). Phase II: This phase describes how the CLA assessment were planned and carried out. Students were informed in their 1 st class meeting that their participation in a CLA assessment will be treated as extra credit effort. Students in these classes took their 1 st exam on Feb 5 th with 46 out of 54 as the highest score. Students were then informed that the CLA assessment is set on Feb 12 th, and performance in their CLA assessment will be evaluated as points added to their 1 st exam score. Points added to their 1 st exam scores were computed as CLA score/CLA possible * 8. Students were asked to group in 2 to 3 members per group. Several students opted to work individually. Students were explained that the quality of their responses will be worth points added to their 1 st exam scores. Students were given 45 minutes for completion of the task as they are already familiar with the case scenario, but they are NOT familiar with documents A through G prepared for the CLA task, and the questions structured for the CLA task...|$|R
40|$|In {{this paper}} our {{approach}} to heterogeneous networks vulnerability handling is presented. Vulnerabilities of heterogeneous networks like satellite, GSM/GPRS, UMTS, wireless sensor networks and the Internet have been identified, classified and described {{in the framework of}} the European co-funded project, named INTERSECTION (INfrastructure for heTErogeneous, Resilient, SEcure, Complex, Tightly Inter-Operating Networks). Since computer security incidents usually occur across administrative domains and interconnected networks it is quite clear that it would be advantageous for different organizations and network operators to be able to share data on network vulnerabilities. The exchange of vulnerability information and statistics would be crucial for proactive identification of trends that can lead to incident prevention. Network operators have always been reticent to disclose information about attacks on their systems or through their networks. However, this tendency seems to be overcome by the new awareness that it is only through cooperation that networking infrastructures can be made robust to attacks and failures. Starting from these considerations, we developed two components, namely INTERSECTION Vulnerability Database (IVD) and Project INTERSECTION Vulnerability Ontology <b>Tool</b> (<b>PIVOT),</b> for vulnerability data management and classification. Both tools will be presented in this paper...|$|R
40|$|Spreadsheets {{are among}} the most {{commonly}} used applications for data management and analysis. Perhaps they are even among the most widely used computer applications of all kinds. They combine in a natural and intuitive way data processing with very diverse supplementary features: statistical functions, visualization <b>tools,</b> <b>pivot</b> tables, pivot charts, linear programming solvers, Web queries periodically downloading data from external sources, etc. However, the spreadsheet paradigm of computation still lacks sufficient analysis. In this article we demonstrate that a spreadsheet can implement all data transformations definable in SQL, without any use of macros or built-in programming languages, merely by utilizing spreadsheet formulas. We provide a query compiler, which translates any given SQL query into a worksheet of the same semantics, including NULL values. Thereby database operations become available to the users who do not want to migrate to a database. They can define their queries using a high-level language and then get their execution plans in a plain vanilla spreadsheet. No sophisticated database system, no spreadsheet plugins or macros are needed. The functions available in spreadsheets impose severe limitations on the algorithms one can implement. In this paper we offer O(n^ 2 n) sorting spreadsheet, but using a non-constant number of rows, improving on the previously known O(n^ 2) ones. It is therefore surprising, that a spreadsheet can implement, as we demonstrate, Depth-First-Search and Breadth-First-Search on graphs, thereby reaching beyond queries definable in SQL- 92...|$|R

