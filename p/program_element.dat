186|3349|Public
5000|$|... #Subtitle level 3: By account, program {{area and}} <b>program</b> <b>element</b> ...|$|E
5000|$|The {{allocation}} of FMF by account, program area and <b>program</b> <b>element</b> is: ...|$|E
50|$|July 1974 - April 1975, <b>Program</b> <b>Element</b> Monitor for the Short-Range Attack Missile, Headquarters U.S. Air Force, Washington, D.C.|$|E
40|$|The large space {{telescope}} (LST) pointing control system (PCS) advanced technical development (ATD) program is described. The approach used {{is to describe}} the overall PCS development effort, showing how the analytical ATD <b>program</b> <b>elements</b> fit into it. Then the analytical ATD <b>program</b> <b>elements</b> are summarized...|$|R
5000|$|Establishing {{advanced}} {{modeling and}} simulation <b>program</b> <b>elements</b> ...|$|R
5000|$|Additional <b>program</b> <b>elements</b> include experiential {{learning}} opportunities such as: ...|$|R
50|$|July 1987 - July 1990, <b>program</b> <b>element</b> monitor, F-117 and Tri-Service Standoff Attack Missile programs, the Pentagon, Washington, D.C.|$|E
50|$|March 1980 - October 1980, Operational Support Aircraft <b>Program</b> <b>Element</b> Monitor, Air Staff Training Program, Headquarters U.S. Air Force, Washington, D.C.|$|E
50|$|July 1991 - August 1992, KC-10 <b>program</b> <b>element</b> monitor, Directorate for Requirements and Test, Headquarters Strategic Air Command, Offutt AFB, Neb.|$|E
5000|$|Playing music, {{commercials}} and <b>programming</b> <b>elements</b> at appropriate times ...|$|R
50|$|The <b>Program</b> <b>Elements</b> Layer {{consists}} of the Code and Action packages.|$|R
40|$|Abstract. Combining {{software-based}} and human-based {{services is}} crucial for several complex problems that cannot be solved using software-based services alone. In this paper, we present novel methods for modeling and developing hybrid compute units of software-based and human-based services. We discuss high-level <b>programming</b> <b>elements</b> for different types of software- and human-based service units and their relationships. In particular, we focus on novel <b>programming</b> <b>elements</b> reflecting hybridity, collectiveness and adaptiveness prop-erties, such as elasticity and social connection dependencies, and on-demand and pay-per-use economic properties, such as cost, quality and benefits, for com-plex problem solving. Based on these <b>programming</b> <b>elements,</b> we present pro-gramming constructs and patterns for building complex applications using hybrid services. ...|$|R
5000|$|May 1992 - July 1993, <b>Program</b> <b>Element</b> Monitor, Advanced Technology Programs, Assistant Secretary of the Air Force (Acquisition), the Pentagon, Washington, D.C.|$|E
50|$|July 1994 - August 1996, F-16 <b>program</b> <b>element</b> monitor, Deputy Chief of Staff for Plans and Programs, Headquarters U.S. Air Force, Washington, D.C.|$|E
50|$|October 1980 - April 1981, Worldwide Military Command, Control and Communications <b>Program</b> <b>Element</b> Monitor, Air Staff Training Program, Headquarters U.S. Air Force, Washington, D.C.|$|E
5000|$|Keeping {{the show}} on time, and timing out to news and other <b>programming</b> <b>elements</b> ...|$|R
40|$|<b>Program</b> <b>Elements.</b> Contents: Draft {{revision}} showing mark-up of FSME Procedure SA- 200. Background: This procedure {{establishes the}} compatibility {{and health and}} safety components assigned to U. S. Nuclear Regulatory Commission (NRC) regulations and <b>program</b> <b>elements</b> as determined in accordance with Management Directive and Handbook (MD) 5. 9, Adequacy and Compatibility of Agreement State Programs. This procedure is being updated to reflec...|$|R
50|$|Security - {{rules that}} detect <b>programming</b> <b>elements</b> that leave your {{assemblies}} vulnerable to malicious users or code.|$|R
50|$|June 1994 - June 1997, Lead F-22 <b>Program</b> <b>Element</b> Monitor, Office of the Assistant Secretary of the Air Force for Acquisition, the Pentagon, Washington, D.C.|$|E
50|$|November 1981 - April 1984, Action Officer and <b>Program</b> <b>Element</b> Monitor, Deputy Chief of Staff, Plans and Operations, Special Projects Office, Headquarters U.S. Air Force, Washington, D.C.|$|E
50|$|July 1977 - March 1979, <b>program</b> <b>element</b> monitor, F-16 program, Office of the Deputy Chief of Staff for Research and Development, Headquarters U.S. Air Force, Washington, D.C.|$|E
5000|$|Soviet Cybernetics Technology: III, <b>Programming</b> <b>Elements</b> of the BESM, STRELA, Ural, M-3, and Kiev Computers. - 1963 ...|$|R
3000|$|... (direct {{correspondence}}): {{is there}} any correspondence between static location of warnings and <b>program</b> <b>elements</b> with mutations’ concentration? [...]...|$|R
5000|$|The Fatality Assessment and Control Evaluation (FACE) program's goal is the {{prevention}} of occupational fatality. <b>Program</b> <b>elements</b> include: ...|$|R
50|$|September 1974 - July 1978, <b>program</b> <b>element</b> monitor, {{assistant}} executive; {{assistant chief}} of staff, intelligence; and special assistant for external affairs, Headquarters U.S. Air Force, Washington, D.C.|$|E
50|$|January 1981 - July 1984, F-15 {{operations}} monitor, F-5 <b>Program</b> <b>Element</b> Monitor, and Chief, Weapon Systems Branch, Tactical Division, Directorate of Operations, Headquarters U.S. Air Force, Washington, D.C.|$|E
50|$|July 1989 - August 1991, <b>program</b> <b>element</b> monitor for {{rescue and}} special {{operations}} forces, Office of the Secretary of the Air Force for Acquisition, Headquarters U.S. Air Force, Washington, D.C.|$|E
5000|$|Visual {{programming}} - manipulating <b>program</b> <b>elements</b> graphically {{rather than}} by specifying them textually (e.g. Simulink); also termed diagrammatic programming ...|$|R
50|$|The {{following}} are the main <b>program</b> <b>elements</b> identified by the Coordination Committee and Biology Committee, which make up the SJRIP.|$|R
40|$|This {{document}} defines, documents, and allocates the Human Research Program (HRP) {{requirements to}} the HRP <b>Program</b> <b>Elements.</b> It also establishes {{the flow of}} requirements from the Human Exploration and Operations Mission Directorate (HEOMD) and the Office of the Chief Health and Medical Officer (OCHMO) down to the various HRP <b>Program</b> <b>Elements</b> to ensure that human research and technology countermeasure investments support the delivery of countermeasures and technologies that satisfy HEOMD's and OCHMO's exploration mission requirements...|$|R
50|$|The {{temporary}} {{change in}} <b>Program</b> <b>Element</b> number for FY2004 reflects a planned transition {{of the program}} from management by the Office of the Secretary of Defense to the Air Force; this transition did not ultimately occur.|$|E
50|$|James {{entered the}} Air Force as a {{distinguished}} {{graduate of the}} U.S. Air Force Academy in 1978. His career has spanned {{a wide variety of}} space operations and acquisition assignments, including space shuttle payload specialist, Air Staff <b>program</b> <b>element</b> monitor, Global Positioning System satellite program manager and Chief of Operations, 14th Air Force.|$|E
50|$|From May 1968 to May 1969, he was {{a project}} officer in the Missile Division, Office of the Deputy for Strategic Forces, Deputy Chief of Staff, Research and Development, Headquarters United States Air Force, Washington D.C. While there he was the <b>program</b> <b>element</b> monitor for the Advanced Intercontinental Ballistic Missile Technology Program. He then {{attended}} the Industrial College of the Armed Forces, graduating in June 1970.|$|E
40|$|During {{software}} development and maintenance stages, programmers have to frequently debug the software. One {{of the most}} difficult and complex tasks in the debugging activity is software fault localization. A commonly-used method to fix software fault is computing suspiciousness of <b>program</b> <b>elements</b> according to failed test executions and passed test executions. However, this technique does not give full consideration to dependences between <b>program</b> <b>elements,</b> thus its capacity for efficient fault localization is limited. Our research intends to introduce program slicing technique and statistical method which extracts dependencies between <b>program</b> <b>elements</b> and refines execution history, then builds program slicing spectra to rank suspicious elements by a statistical metric. We expect that our method will contribute directly to the improvement of the effectiveness and the accuracy of software fault localization and reduce the {{software development}} and maintenance effort and cost. © 2012 IEEE. IEEE Computer Society; ACM; University of Zurich (UZH), Department of Informatics; Technical Council on Software Engineering (TCSE); Special Interest Group on Software Engineering (SIGSOFT); SI-SEDuring software development and maintenance stages, programmers have to frequently debug the software. One {{of the most difficult}} and complex tasks in the debugging activity is software fault localization. A commonly-used method to fix software fault is computing suspiciousness of <b>program</b> <b>elements</b> according to failed test executions and passed test executions. However, this technique does not give full consideration to dependences between <b>program</b> <b>elements,</b> thus its capacity for efficient fault localization is limited. Our research intends to introduce program slicing technique and statistical method which extracts dependencies between <b>program</b> <b>elements</b> and refines execution history, then builds program slicing spectra to rank suspicious elements by a statistical metric. We expect that our method will contribute directly to the improvement of the effectiveness and the accuracy of software fault localization and reduce the software development and maintenance effort and cost. © 2012 IEEE...|$|R
3000|$|... [...]. Based on this {{notation}} {{we use our}} formalism {{to describe}} by a graph the coverage relations between different <b>program</b> <b>elements.</b>|$|R
50|$|A {{mapping of}} {{programs}} and projects to capabilities {{to show how the}} specific projects and <b>program</b> <b>elements</b> help to achieve a capability.|$|R
