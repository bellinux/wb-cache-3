0|373|Public
5000|$|... #Caption: Conversion of (357)10 to <b>binary</b> <b>notation</b> {{results in}} (101100101) ...|$|R
5000|$|Represent {{the value}} in <b>binary</b> <b>notation</b> (e.g. 137 as 10001001) ...|$|R
5000|$|... #Subtitle level 3: Top-down {{automaton}} accepting multiples of 3 in <b>binary</b> <b>notation</b> ...|$|R
5000|$|Short integer [...] - [...] 2 bytes, {{interpreted}} as an integer in two's complement <b>binary</b> <b>notation.</b>|$|R
5000|$|Integer or logical [...] - [...] 4 bytes, {{interpreted}} as an integer in two's complement <b>binary</b> <b>notation.</b>|$|R
50|$|In <b>binary</b> <b>notation,</b> 1024 is {{represented}} as 10000000000, {{making it a}} simple round number occurring frequently in computer applications.|$|R
5000|$|First, it is {{required}} that the exponent [...] be converted to <b>binary</b> <b>notation.</b> That is, [...] can be written as: ...|$|R
5000|$|For instance, the affine {{transformation}} of the element [...] in big-endian <b>binary</b> <b>notation</b> = [...] in big-endian hexadecimal notation, is calculated as follows: ...|$|R
40|$|International audienceThe i-th {{symbol of}} the {{well-known}} infinite word of Thue on the alphabet 0, 1 {{can be characterized as}} the parity of the number of occurrences of the digit 1 in the <b>binary</b> <b>notation</b> of i. Generalized words of Thue are based on counting the parity of occurrences of an arbitrary word w∈ 0, 1 +̂- 0 ^* in the <b>binary</b> <b>notation</b> of i. We provide here the standard Lyndon factorization of some subclasses of this class of infinite words...|$|R
50|$|The I Ching {{dates from}} the 9th century BC in China. The <b>binary</b> <b>notation</b> in the I Ching is used to {{interpret}} its quaternary divination technique.|$|R
5000|$|Carry-save {{arithmetic}} {{works by}} abandoning the <b>binary</b> <b>notation</b> while still working to base 2. It computes the sum digit by digit, as 10111010101011011111000000001101 + 11011110101011011011111011101111 = 21122120202022022122111011102212 ...|$|R
5000|$|Because of {{the simple}} nature of the {{dynamics}} when the iterates are viewed in <b>binary</b> <b>notation,</b> {{it is easy to}} categorize the dynamics based on the initial condition: ...|$|R
50|$|A 16-bit number can {{distinguish}} 65536 different possibilities, {{such as the}} numbers 0..65535. In unsigned <b>binary</b> <b>notation,</b> 65536 is thus the smallest number {{that can not be}} represented by 16 bits.|$|R
5000|$|The {{model name}} CDP-101 {{was chosen by}} Nobuyuki Idei, who headed Sony's Audio Division. [...] "101" [...] {{represents}} the number 5 in <b>binary</b> <b>notation</b> and was chosen because Idei considered the model to be of [...] "medium class".|$|R
5000|$|On modern machines, {{in classic}} <b>binary</b> <b>notation,</b> −7 would be written 1 1001, and {{the sum of}} −7 and 7 would give [...] "0 0000"; this [...] "two's complement" [...] system thus needs only a single {{representation}} for the number zero.|$|R
5000|$|... 6.0, June 2007: ISO/ECMA Eiffel {{addition}} (multiple constraint genericity, octal and <b>binary</b> <b>notation</b> for integers), new tabbed editor, new docking {{facilities to}} let user define their workspace, context menu {{is available in}} addition to pick and drop, dependency tool (press release).|$|R
25|$|Steinitz's {{original}} induction-based proof can {{be strengthened}} in this way. However, the integers {{that would result}} from this construction are doubly exponential {{in the number of}} vertices of the given polyhedral graph. Writing down numbers of this magnitude in <b>binary</b> <b>notation</b> would require an exponential number of bits.|$|R
40|$|This unit {{provides}} a brief introduction to computer hardware and software. It discusses <b>binary</b> <b>notation,</b> the ASCII coding system and hardware components including the {{central processing unit}} (CPU), memory, peripherals and storage media. Software including operating systems, word processors database packages, spreadsheets and statistical packages are briefly described...|$|R
5000|$|Multiplication in this {{particular}} finite field can also be done using {{a modified version of}} the [...] "peasant's algorithm". Each polynomial is represented using the same <b>binary</b> <b>notation</b> as above. Eight bits is sufficient because only degrees 0 to 7 are possible in the terms of each (reduced) polynomial.|$|R
5000|$|Machine #4: Andro 600 Series: Direction of {{vibrating}} large gauged wire, amplifying the source, storing it digitally {{and presenting}} the results through a <b>pure</b> <b>binary</b> format.|$|R
5|$|PHP stores {{integers}} in a platform-dependent range, {{either a}} 64-bit or 32-bit signed integer {{equivalent to the}} C-language long type. Unsigned integers are converted to signed values in certain situations; this behavior {{is different from that}} of other programming languages. Integer variables can be assigned using decimal (positive and negative), octal, hexadecimal, and <b>binary</b> <b>notations.</b>|$|R
5000|$|The name {{bit shift}} map arises because, if {{the value of}} an iterate is written in <b>binary</b> <b>notation,</b> the next iterate is {{obtained}} by shifting the binary point one bit to the right, and if the bit {{to the left of the}} new binary point is a [...] "one", replacing it with a zero.|$|R
50|$|Using <b>binary</b> {{scientific}} <b>notation,</b> {{this will}} place the binary point at 1B16.|$|R
40|$|Let π=(π_ 1,π_ 2,,π_n) be {{permutation}} of {{the elements}} 1, 2,,n. Positive integer k≤ 2 ^n- 1 we call index of π, if in its <b>binary</b> <b>notation</b> as n-digital <b>binary</b> number, the 1 's correspond to the ascent points. We study behavior and properties of numbers of permutations of n elements having index k. Comment: Revised argument in Section 13; results unchange...|$|R
40|$|In {{this paper}} we give a {{criterion}} by {{which one can}} conclude that every reduction of a basic term to normal form has the same length. As a consequence, the number of steps to reach the normal form is independent of the chosen strategy. In particular this holds for TRSs computing addition and multiplication of natural numbers, both in unary and <b>binary</b> <b>notation.</b> ...|$|R
50|$|Being {{variable}} {{word length}} decimal, {{as opposed to}} fixed-word-length <b>pure</b> <b>binary,</b> made it an especially attractive first computer to learn on — {{and hundreds of thousands}} of students had their first experiences with a computer on the IBM 1620.|$|R
25|$|<b>Binary</b> <b>notation</b> had not {{yet been}} standardized, so Napier used what he called {{location}} numerals to represent binary numbers. Napier's system uses sign-value notation to represent numbers; it uses successive letters from the Latin alphabet to represent successive powers of two: a = 20 = 1, b = 21 = 2, c = 22 = 4, d = 23 = 8, e = 24 = 16 and so on.|$|R
50|$|In {{terms of}} decimal notation, long {{division}} provides {{a much more}} efficient division algorithm. Its generalization to <b>binary</b> <b>notation</b> allows {{to use it in}} a computer. However, for large inputs, algorithms that reduce division to multiplication, like Newton-Raphson one, are usually preferred, because they need a time which is proportional to the time of the multiplication needed to verify the result, independently of the multiplication algorithm which is used.|$|R
40|$|AbstractWe {{consider}} the set N of non-negative integers {{together with a}} distance d defined as follows: given two integers x,y∈N, d(x,y) is, in <b>binary</b> <b>notation,</b> the result of performing, digit by digit, the “XOR” operation on (the <b>binary</b> <b>notations</b> of) x and y. Dawson, in Combinatorial Mathematics VIII, Geelong, 1980, Lecture Notes in Mathematics, 884 (1981) 136, considers this geometry and suggests the following construction: given k different integers x 1,…,xk∈N, let Vi be the set of integers closer to xi than to any xj with j≠i, for i,j= 1,…,k. Let V=(V 1,…,Vk) and X=(x 1,…,xk). V is a partition of { 0, 1,…, 2 n− 1 } which, in general, does not determine X. In this paper, we characterize the convex sets of this geometry: they are exactly the line segments. Given X and the partition V determined by X, we also characterize in easy terms the ordered sets Y=(y 1,…,yk) that determine the same partition V. This, in particular, extends {{one of the main}} results of Combinatorial Mathematics VIII, Geelong, 1980, Lecture Notes in Mathematics, 884 (1981) 136...|$|R
25|$|When {{considering}} computational problems, {{a problem}} instance is a string over an alphabet. Usually, the alphabet {{is taken to}} be the binary alphabet (i.e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded. For example, integers can be represented in <b>binary</b> <b>notation,</b> and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.|$|R
3000|$|... } {{designate}} a fractional {{part of the}} number. It is convenient to represent the variable x in a <b>binary</b> <b>notation,</b> and then the digit 0 at the first position after the dot corresponds to residence {{of the state of}} the model in the left part of the unit interval, and 1 to reside in the right part. Such a transformation of the binary sequence is called the Bernoulli shift [16] ([URL] [...]...|$|R
50|$|When {{considering}} computational problems, {{a problem}} instance is a string over an alphabet. Usually, the alphabet {{is taken to}} be the binary alphabet (i.e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded. For example, integers can be represented in <b>binary</b> <b>notation,</b> and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.|$|R
25|$|The PowerShell {{scripting}} language supports <b>binary</b> prefix <b>notation</b> {{similar to the}} scientific notation supported by many programming languages in the C-family.|$|R
5000|$|The {{function}} f {{takes as}} inputs two prime numbers p and q in <b>binary</b> <b>notation</b> and returns their product. This function can be [...] "easily" [...] computed in O(n2) time, where n {{is the total}} length (number of bits) of the inputs. Inverting this function requires finding the factors of a given integer N. The best factoring algorithms known run in [...] time, which is only pseudo-polynomial in , the number of bits needed to represent N.|$|R
50|$|Decimal {{computers}} are computers which can represent numbers and addresses in decimal {{as well as}} providing instructions to operate on those numbers and addresses directly in decimal, without conversion to a <b>pure</b> <b>binary</b> representation. Some also had a variable wordlength, which enabled operations on numbers with a large number of digits.|$|R
40|$|AbstractACC 0 (also called ACC) is {{the class}} of {{languages}} recognized by circuit families with polynomial size, constant depth, and unbounded fan-in, where gates may calculate the AND, OR, or MOD c function for constant c. Robust uniformity definitions for ACC 0 and related classes were given by Barrington, Immerman and Straubing [3]. Here we show that uniform ACC 0 contains all semi-linear or rational sets of integer vectors, using <b>binary</b> <b>notation</b> (sharpening a result of Ibarra, Jiang, Ravikumar and Chang [11]) ...|$|R
