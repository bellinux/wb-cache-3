5|0|Public
5000|$|Baliapal or <b>Pipeli,</b> {{the main}} port for the Dutch between 1627-1635 ...|$|E
50|$|According to M. de la Loubere,Chaiyasiri {{is said to}} {{have built}} the city of <b>Pipeli</b> in Phetchaburi Province.|$|E
50|$|M. Simon de la Loubère's record {{refers to}} the first King as named Pathomsuriyadhep (Singhanavati). The chief place where he kept his Court was called Jayaprakaan Mahanagorn (Nagabundhu-Singhanavatinagorn, Chiangrai Province), {{and he began to}} reign in AD 1300. Ten other kings succeeded him, the last of whom, named Dipayasoondorndhep, removed his royal seat to the city of Dhatu Nagornluang (Nan) which he had built, the {{location}} of which is also uncertain. The 22nd king after him, whose name was Boromjayasiri, obliged all his people in 1188 AD to follow him to Nakhon Thai (Pitshanulok). But this Prince did not always reside at Nakhon Thai, for he came, built, and inhabited the city of <b>Pipeli</b> (Petchaburi). Four other kings succeeded him; of which Ramadhiboti, the last of the four, began to build the city of Thailand (Ayudhya) in 1351 AD, and there established his Court.|$|E
40|$|The {{property}} of Positive Equality [2] dramatically speeds up validity checking of formulas in {{the logic of}} Equality with Uninterpreted Functions and Memories (EUFM) [4]. The logic expresses correctness of high-level microprocessors. We present EVC (Equality Validity Checker) —a tool that exploits Positive Equality and other optimizations when translating a formula in EUFM to a propositional formula, which can then be evaluated by any Boolean satisfiability (SAT) procedure. EVC {{has been used for}} the automatic formal verification of <b>pipeli</b> ned,superscalar, and VLIW microprocessors...|$|E
40|$|This paper {{concerns}} with automatic pipeline {{implementation of a}} program subject to some real time (RT) constraints; the program is described through a Control Data Flow Graph (CDFG). We have developed a mapping methodology which assigns to each instruction of CDFG a time step and a HW resource for its execution. We have defined the space W of all the possible feasible mappings, as well an adjacency criterion on it and a cost function {{evaluating the quality of}} the mappings. We have minimized the cost function through a Simulated Annealing algorithm. The minimization process returns a mapping which satisfies all RT constraints, has minimal schedule length and minimal HW resource requirement. In order to show the capabilities of the proposed mapping methodology, we apply it to a graph with 50 nodes and several RT constraints: the obtained mapping gives a pipelined execution modality of the graph which satisfies all the given RT constraints. Keywords: allocation table, real time, <b>pipeli</b> [...] ...|$|E

