41|1011|Public
5000|$|... #Caption: <b>Programming</b> <b>device</b> for a PIC microcontroller, with a dual in-line ZIF socket ...|$|E
50|$|Shortcode {{activation}} protocol is a <b>programming</b> <b>device</b> {{that allows}} mobile phone users {{to send a}} short activation word to a premium rate phone line operated via SMS.|$|E
5000|$|InSight USB Link is a FLASH <b>programming</b> <b>device</b> {{that connects}} to any PC via USB and to Ember’s Radio Control Module (RCM). It {{contains}} the {{hardware and software}} tools that read and write applications and program FLASH memory on the chips.|$|E
5000|$|... #Caption: The Barclays PINsentry Chip Authentication <b>Program</b> <b>device</b> ...|$|R
5000|$|Cardiac rhythm management: pacemakers, implantable defibrillators, electrodes, cardiac monitors, {{external}} {{monitoring and}} <b>programming</b> <b>devices</b> ...|$|R
50|$|Multiprogramming systems (Production programmers) - Used for <b>programming</b> <b>devices</b> in {{high volumes}} by Electronics {{manufacturers}} and programming centers.|$|R
50|$|For {{programmable}} devices like EPROMs and GALs, DIPs remained {{popular for}} many years due to their easy handling with external programming circuitry (i.e., the DIP devices could be simply plugged into a socket on the <b>programming</b> <b>device.)</b> However, with In-System Programming (ISP) technology now state of the art, this advantage of DIPs is rapidly losing importance as well.|$|E
50|$|The HPD-3 is {{a further}} {{development}} of the HPD-2 featuring a programmable fuze. It has a three pin interface for a <b>programming</b> <b>device.</b> It can be set for an active period of either 30 days after which it self-neutralizes or for a shorter active period of between four and ninety six hours after which it self-destructs.|$|E
50|$|In civil mining, {{electronic}} detonators have {{a better}} precision for delays. Electronic detonators are designed to provide the precise control necessary to produce accurate and consistent blasting results {{in a variety of}} blasting applications in the mining, quarrying, and construction industries. Electronic detonators may be programmed in 1-millisecond increments from 1 millisecond to 10,000 milliseconds using the dedicated <b>programming</b> <b>device</b> called the logger.|$|E
50|$|Many PAL <b>programming</b> <b>devices</b> accept input in a {{standard}} file format, {{commonly referred to as}} 'JEDEC files'.They are analogous to software compilers. The languages used as source code for logic compilers are called hardware description languages, or HDLs.|$|R
50|$|Elaborate {{systems of}} food {{presentation}} {{have been developed}} (e.g. presenting dead rats for wildcats in a Swedish zoo) and computer <b>programmed</b> <b>devices</b> which allow the animals in the enclosure to search for prey as they would in their natural environment.|$|R
50|$|Similar to DYSEAC the TX-2 {{separately}} <b>programmed</b> <b>devices</b> {{can operate}} simultaneously, increasing throughput. The full {{power of the}} central unit was available to any device. The TX-2 was {{another example of a}} system exhibiting distributed control, its central unit not having dedicated control.|$|R
50|$|A fixed balise is {{programmed}} to transmit {{the same data}} to every train. Information transmitted by a fixed balise typically includes: {{the location of the}} balise; the geometry of the line, such as curves and gradients; and any speed restrictions. The programming is performed using a wireless <b>programming</b> <b>device.</b> Thus a fixed balise can notify a train of its exact location, and the distance to the next signal, and can warn of any speed restrictions.|$|E
50|$|A 'Fixed Data Balise', {{or short}} 'fixed balise' is {{programmed}} to transmit {{the same data}} to every train. Information transmitted by a fixed balise typically includes: {{the location of the}} balise; the geometry of the line, such as curves and gradients; and any speed restrictions. The programming is performed using a wireless <b>programming</b> <b>device.</b> Thus a fixed balise can notify a train of its exact location, and the distance to the next signal, and can warn of any speed restrictions.|$|E
5000|$|AccessPORT, a {{handheld}} ECU <b>programming</b> <b>device</b> which connected to OBD-II port on cars, launched in 2004 is their most popular product {{because it is}} the first one to crack Nissan GT-R's ECU code that was said as [...] "untuneable". They also develop a software for engine tuning, AccessTUNER which is available in two variants: Race and Pro. The Pro version is available only to COBB approved shops and tuners. The enthusiast 'Race' version is available to the end user only after they pass a series of tests issued by COBB and third party organisations to deem the end user competent enough to begin editing their ECU's parameters.|$|E
50|$|A printer driver, a <b>program</b> (<b>device</b> driver) which {{converts}} the computer’s {{information about}} the page into the actual PDL. Printer drivers may be included with the operating system, be distributed with the printer on CDs or DVDs, or be downloaded from the printer manufacturer’s home page or from independent web sites.|$|R
5000|$|Firmware Support Manual (FSM) - Instructions for <b>programming</b> {{firmware}} <b>devices</b> ...|$|R
5000|$|Microprofessor I [...] - [...] {{unrelated}} Z80 <b>programming</b> education <b>device</b> ...|$|R
50|$|The Amiga offered these {{features}} before other competing home computer platforms. The Amiga's main rival, the Atari ST, sourced the Yamaha YM2149 Programmable Sound Generator (PSG). Compared to the in-house designed Amiga sound engine, the PSG could only handle 1 channel of sampled sound, and needed the computer's CPU {{to process the}} data for it. This made it impractical for game development use until 1989 {{with the release of}} the Atari STE which used DMA techniques to play back PCM samples at up to 50 kHz. The ST however remained relevant as it was equipped with a MIDI controller and external ports. It became the choice of by many professional musicians as a MIDI <b>programming</b> <b>device.</b>|$|E
5000|$|The {{most basic}} {{function}} of a Programmable logic controller (PLC) is to receive inputs from status components, which can be from sensors or switches. Some of the basic components of a PLC are input modules, a central processing unit, output modules, and a <b>programming</b> <b>device.</b> When an input is activated, some output will also be activated by whatever the machine is told to do. Some examples of this are setting a timer to 10ms, activating the timer and once 10ms have passed a siren goes off. Some advantages to using a PLC over other programming devices are the user doesn't have to rewire anything, the PLC has very little downtime in between running different programs, the user can program off-line, and PLC's aren't time constrained. If the user tells the PLC to perform an output in 10ms, it will perform the output in 10ms unlike other programs like LabView which can have a delay in activation.|$|E
50|$|During {{the second}} half of the '80s, Kawai {{developed}} and released a number of digital synthesizers. The most known of these are the K series: Kawai K1, K1mkII, K3 (SSM2044-based filters), K4 and K5. These machines follow different synthesis approaches. The K4 use subtractive synthesis based on sampled waveforms, the K1 and K5 are additive synthesizers. The K1 is one of the first popular synthesizers that has no filter whatsoever; all sounds are made by stacking wave samples and applying frequency modulation. The K3 is hybrid in the sense that it does employ additive synthesis for waveform generation, but these waveforms are static and cannot be modulated as in a true additive synthesizer; instead, waveshaping is done using a low-pass filter, therefore characterizing this machine as a subtractive synthesizer. Uniquely for their price range, all instruments feature aftertouch. Kawai also manufactured rack versions of most of these instruments, Kawai Q-80 MIDI sequencer (1988), and an external MIDI <b>programming</b> <b>device,</b> MM-16 MIDI Mixer (MIDI processor with slider controllers). Kawai XD-5, a drum synthesizer based on the K4 engine, was produced in 1989-1990.|$|E
30|$|In our scenario, {{the high}} {{complexity}} {{of human nature}} and the surrounding social environment plays a less important role since the cooperation game that we study is limited in time, the identity of the players are hidden, the stakes are relatively low, and the decisions of users are mediated through a <b>programmed</b> <b>device.</b>|$|R
25|$|Cathode {{poisoning}} can be abated {{by limiting}} current through the tubes to significantly below their maximum rating, {{through the use}} of Nixie tubes constructed from materials that avoid the effect (e.g. by being free of silicates and aluminum), or by <b>programming</b> <b>devices</b> to periodically cycle through all digits so that seldom-displayed ones get activated.|$|R
50|$|The MPLAB ICD 3 is an in-circuit {{debugger}} and programmer by Microchip, and is {{the latest}} in the ICD series. The ICD 3 connects to the engineer's PC via USB, and connects to the device via ICSP. The ICD 3 is entirely USB-bus-powered, and is 15x faster than the ICD 2 for <b>programming</b> <b>devices.</b>|$|R
5000|$|In [...] Extrusion Blow Molding (EBM), plastic {{is melted}} and {{extruded}} {{into a hollow}} tube (a parison). This parison is then captured by closing it into a cooled metal mold. Air is then blown into the parison, inflating it {{into the shape of}} the hollow bottle, container, or part. After the plastic has cooled sufficiently, the mold is opened and the part is ejected. [...] Continuous and Intermittent are two variations of Extrusion Blow Molding. In Continuous Extrusion Blow Molding the parison is extruded continuously and the individual parts are cut off by a suitable knife. In Intermittent blow molding there are two processes: straight intermittent is similar to injection molding whereby the screw turns, then stops and pushes the melt out. With the accumulator method, an accumulator gathers melted plastic and when the previous mold has cooled and enough plastic has accumulated, a rod pushes the melted plastic and forms the parison. In this case the screw may turn continuously or intermittently. With continuous extrusion the weight of the parison drags the parison and makes calibrating the wall thickness difficult. The accumulator head or reciprocating screw methods use hydraulic systems to push the parison out quickly reducing the effect of the weight and allowing precise control over the wall thickness by adjusting the die gap with a parison <b>programming</b> <b>device.</b>|$|E
50|$|In the 1950s {{described}} an operation using the gracilis muscle {{from the inner}} thigh and wrapping it around the anus {{to function as a}} new anal sphincter (neosphincter). Non dynamic graciloplasty was not particularly successful because the gracilis is mostly composed of type II, fast-twitch, fatiguable muscle fibres, whereas the sphincter ideally {{needs to be able to}} automatically contract for long periods. A neurostimulation device with an impulse generator can be implanted to adapt the muscle to prolonged contraction (dynamic graciloplasty). Over time, the muscle becomes mostly composed of type I, slow twitch, fatigue resistant fibres. The patient uses an external magnetic <b>programming</b> <b>device</b> to deactivate the electrical stimulation, relaxing the muscular contraction and enabling defecation at a voluntary time. Dynamic graciloplasty may be indicated for patients with a completely destroyed anal sphincter or a torn sphincter with a large gap between both ends that is not amenable to repair. The procedure involves detachment of the gracilis from the leg, preserving both its blood supply and innervation. The muscle is then moved to wrap around the anal canal completely, and also attached to the periosteum of the inferior ramus of the pubic bone. Various arrangements are described, depending upon the length of the gracilis. The implanted stimulator electrode is placed intramuscularly (within the muscle), very close to the gracilis nerve, and the impulse generator is placed subcutaneously (under the skin). The success rate of the operation is between 40-60%, and varies with surgeon experience. The complication rate is high, (infections 28%, device problems 15%, andleg pain 13%) but these are usually treatable without influence on the final result. A second operation may be required for some complications. When dynamic graciloplasty is successful in curing FI, up to 50% of patients may develop signs and symptoms of obstructed defecation.|$|E
40|$|This bachelor´s thesis {{deals with}} an {{automatic}} elevation and azimuth measurement system, which {{will be used for}} antenna positioning. It is realized by using magnetometer and accelerometer. Important part of the system is tilt compensation and calibration for selected location. This system will send data to PC and also display them on LCD display. This project contains theory of measured quantities, method choice, component choice, realization of wiring, PCB design, <b>programming</b> <b>device,</b> testing device and accuracy determination...|$|E
50|$|On SA-7 the ST-124 system {{guided the}} firing of both stages. The {{guidance}} and control system for SA-7 is shown in Figure 7. The digital computer is the ASC-15. It replaced both the cam device that contained the S-I tilt program for earlier missions. and the <b>program</b> <b>device</b> that controlled {{the sequence of events}} on those missions.|$|R
5000|$|USB cable - Small {{and light}} weight, has support for voltage source and most {{computers}} have extra ports available. The {{distance between the}} circuit to be programmed and the computer {{is limited by the}} length of USB cable - it must usually be less than 180 cm. This can make <b>programming</b> <b>devices</b> deep in machinery or cabinets a problem.|$|R
5000|$|PTCRB {{operates}} a certification <b>program</b> for <b>devices</b> {{operating in the}} following technologies and bands: ...|$|R
40|$|C {{remains the}} {{language}} of choice for hardware <b>programming</b> (<b>device</b> drivers, bus configuration, etc.) : it is fast, allows low-level access, and is trusted by OS developers. However, the algorithms required to configure and reconfigure hardware devices and interconnects are becoming more complex and diverse, with the added burden of legacy support, “quirks, ” and hardware bugs to work around. Even programming PCI bridges in a modern PC is a surprisingly complex problem, and is getting worse as new functionality such as hotplug appears. Existing approaches use relatively simple algorithms, hard-coded in C and closely coupled with low-level register access code, generally leading to suboptimal configurations. We investigate the merits and drawbacks of a new approach: separating hardware configuration logic (algorithms to determine configuration parameter values) from mechanism (<b>programming</b> <b>device</b> registers). The latter we keep in C, and the former we encode in a declarative programming language with constraintsatisfaction extensions. As a test case, we have implemented full PCI configuration, resource allocation, and interrupt assignment in the Barrelfish research operating system, using a concise expression of efficient algorithms in constraint logic programming. We show that the approach is tractable, and can successfully configure {{a wide range of}} PCs with competitive runtime cost. Moreover, it requires about half the code of the C-based approach in Linux while offering considerably more functionality. Additionally it easily accommodates adaptations such as hotplug, fixed regions, and “quirks. ...|$|E
40|$|Nowadays, {{devices that}} monitor {{the health of}} {{structures}} consume {{a lot of power}} and need {{a lot of time to}} acquire, process, and send the information about the structure to the main processing unit. To decrease this time, fast electronic devices are starting to be used to accelerate this processing. In this paper some hardware algorithms implemented in an electronic logic <b>programming</b> <b>device</b> are described. The goal of this implementation is accelerate the process and diminish the information that has to be send. By reaching this goal, the time the processor needs for treating all the information is reduced and so the power consumption is reduced too...|$|E
40|$|Abstract: We {{explore the}} notion of the {{workflow}} for specifying interactions among collections of devices (which we term device ecologies). We discuss three levels of abstraction in <b>programming</b> <b>device</b> ecologies: high-level workflow, low-level workflow and device conversations, and how control (in the sense of operations issued by an end-user on such workflows or exceptions) is passed between levels. Such levels of abstraction are important since the system should be as user friendly as possible while permitting programmability not only at high-levels of abstraction but also at low levels of detail. We also present a conceptual architecture for the device ecology workflow engine for executing and managing such workflows. ...|$|E
50|$|An {{enhanced}} podcast {{can display}} images synchronized with audio. These can contain chapter markers, hyperlinks, and artwork, {{all of which}} is synced to a specific <b>program</b> or <b>device.</b> When an enhanced podcast is played within its specific <b>program</b> or <b>device,</b> all the appropriate information should be displayed {{at the same time and}} in the same window, making it easier to display materials.|$|R
50|$|In 2013, {{she became}} the {{presenter}} of the <b>program</b> Fashionable <b>Device</b> on the 2×2 channel.|$|R
5000|$|Jeffrey C. Smith, an {{employee}} of HX5 Sierra, for exceptional management of technician resources, the apprenticeship <b>program</b> and lifting <b>device</b> <b>program</b> in the test facilities at the NASA Glenn Research Center.|$|R
