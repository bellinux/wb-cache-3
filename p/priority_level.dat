358|704|Public
25|$|In October 2014, The City {{unveiled}} conceptual {{designs for}} construction of Albuquerque Rapid Transit, a true BRT system including dedicated lanes, traffic signal <b>priority,</b> <b>level</b> boarding, and off-bus fare payment. Public input from meetings will allow engineering of the BRT system and redesign of the roads it will travel on. The current timetable plans {{for the start of}} BRT service in November 2017.|$|E
25|$|Over time, the HWA {{and then}} the RFR {{controlled}} the German nuclear energy project. The most influential people were Erich Schumann, Abraham Esau, Walther Gerlach, and Kurt Diebner. During World War II, Esau {{was one of the}} most powerful and influential physicists in Germany. Even after Esau left his position as plenipotentiary for nuclear physics and head of the physics section at the RFR at the end of 1942, he continued to have significant authority and influence as president of the Physikalisch-Technische Reichsanstalt, as is attested to by the fact that he was able to continue research efforts for the Urainverein under the highest <b>priority</b> <b>level</b> for urgent development projects (Dringlichkeitsentwicklung, DE).|$|E
50|$|Every QCI (GBR and Non-GBR) is {{associated}} with a <b>Priority</b> <b>level.</b> <b>Priority</b> <b>level</b> 0.5 is the highest <b>Priority</b> <b>level.</b> If congestion is encountered, the lowest <b>Priority</b> <b>level</b> traffic {{would be the first to}} be discarded.|$|E
40|$|Abstract:- The paper {{deals with}} a neural network {{controlled}} switch fabric with frame prioritization support. The impact of <b>priority</b> <b>levels</b> on the functionality and efficiency of this switch fabric was deeply investigated. The results of the studies related {{to the impact of}} the amount of <b>priority</b> <b>levels</b> are published in this paper. Key-Words:- Hopfield neural network, switch fabric, prioritization, <b>priority</b> <b>levels...</b>|$|R
3000|$|... <b>priority</b> <b>levels</b> {{would achieve}} the best {{performance}} where each slice is separately protected based on its CMSE. On the other hand, using fewer than four <b>priority</b> <b>levels</b> would limit the flexibility of our scheme and hence decrease its performance.|$|R
5000|$|This {{defines the}} user's priority. The {{different}} <b>priority</b> <b>levels</b> are: ...|$|R
50|$|These {{levels have}} {{associated}} numbers with them. Applications start at a base <b>priority</b> <b>level</b> of eight. The system dynamically adjusts the <b>priority</b> <b>level</b> {{to give all}} applications access to the processor.Priority levels 0 - 15 are used by dynamic applications. Priority levels 16- 31 are reserved for real-time applications.|$|E
5000|$|Round-robin {{scheduling}} for threads at {{the same}} <b>priority</b> <b>level</b> ...|$|E
5000|$|... 4: Lowest <b>priority</b> <b>level</b> (default priority, {{assigned}} to Point-to-Point calls) ...|$|E
5000|$|A and B: Highest <b>priority</b> <b>levels</b> (not used by GSM-R networks) ...|$|R
5000|$|... µC/OS-III offers {{all of the}} {{features}} and functions of µC/OS-II. The biggest difference {{is the number of}} supported tasks. µC/OS-II allows only 1 task at each of 255 <b>priority</b> <b>levels,</b> for a maximum of 255 tasks. µC/OS-III allows any number of application tasks, <b>priority</b> <b>levels,</b> and tasks per level, limited only by processor access to memory.|$|R
5000|$|<b>Priority</b> <b>levels</b> {{can now be}} set for app {{notifications}} in the Action Center ...|$|R
50|$|The {{basic idea}} of the {{priority}} inheritance protocol is that when a job blocks one or more high-priority jobs, it ignores its original priority assignment and executes its critical section at an elevated <b>priority</b> <b>level.</b> After executing its critical section and releasing its locks, the process returns to its original <b>priority</b> <b>level.</b>|$|E
50|$|The second <b>priority</b> <b>level</b> defines an {{execution}} processor resource group. In general higher execution group priorities typically get more processor time.|$|E
5000|$|Each of the {{in total}} 65 WCAG 1.0 checkpoints has an {{assigned}} <b>priority</b> <b>level</b> based on the checkpoint's impact on accessibility: ...|$|E
5000|$|... 0: Highest <b>priority</b> <b>levels</b> for ASCI {{and normal}} calls (mainly used for REC calls) ...|$|R
5000|$|I/O <b>Priority</b> <b>Levels</b> - The 7/32 {{has none}} but the 8/32 can {{have up to}} 3 ...|$|R
50|$|There are 36 {{real time}} <b>priority</b> <b>levels</b> {{available}} by API for applications to use. The user and account {{must have the}} privilege to use real time priorities. It {{is up to the}} site to control how their applications use the <b>priority</b> <b>levels.</b> Real time <b>priorities</b> totally dominate all lower priorities so it’s quite possible for a misbehaved real time program to tie up one or more processors.|$|R
50|$|End Call Confirmation {{feature is}} only {{available}} for highest priority (<b>Priority</b> <b>level</b> 0) group calls (VGCS) and broadcast calls (VBS) (see eMLPP).|$|E
5000|$|... {{to raise}} the <b>priority</b> <b>level</b> of {{prevention}} and control of NCDs on the national and global agenda, enhancing international cooperation through advocacy efforts; ...|$|E
5000|$|The {{neighboring}} pixels of each marked {{area are}} inserted into a priority queue with a <b>priority</b> <b>level</b> {{corresponding to the}} gradient magnitude of the pixel.|$|E
40|$|Organizations hold a {{large amount}} of {{inventory}} to meet demand that would arise in the future. They meet customer needs more effectively by controlling less amount of inventory that classified according to their <b>priority</b> <b>levels.</b> In the classical ABC analysis used to classify inventory items according to their <b>priority</b> <b>levels,</b> the money value obtained by multiplying the price and quantity of the inventory item is taken into account. However in the ABC analysis performed by using the Analytical Hierarchy Process, to classify the inventory items according to their <b>priority</b> <b>levels,</b> multiple criteria inventory classification is realized by considering two or more qualitative and quantitative criteria and it is provided for the organizations to develop more effective inventory plans...|$|R
5000|$|The kernel {{supports}} {{an unlimited}} number of program [...] "tasks" [...] running from up to 255 different <b>priority</b> <b>levels.</b>|$|R
3000|$|... [...]. We can {{see that}} {{different}} weights give the session different <b>priority</b> <b>levels.</b> Following the definition of cost in (7), the scheduler can achieve QoS differentiation.|$|R
5000|$|... 8, 32 or 256 {{priority}} scheduling multi-thread scheduling; Using the round-robin policy {{ensures that}} all threads {{having the same}} <b>priority</b> <b>level</b> will be scheduled equally; ...|$|E
50|$|GOOSE uses VLAN and {{priority}} tagging as per IEEE 802.1Q to {{have separate}} virtual network {{within the same}} physical network and sets appropriate message <b>priority</b> <b>level.</b>|$|E
5000|$|Expenses are budgeted {{according}} to <b>priority</b> <b>level</b> and in correlation with income and cash flow. In the effective year, expenses are only released {{based on the}} corresponding positive income and cash situation.|$|E
50|$|M6032 is an 8051-based Microcontroller with Dual Data Pointers, UART, 32 I/O lines, 3 Timers/Counters, 6 Interrupts/2 <b>priority</b> <b>levels,</b> 256 Bytes IDATA RAM, 256 Bytes on-chip XRAM.|$|R
3000|$|..., {{which need}} to be {{optimized}} while considering the FEC at the PL in the cross-layer setup. Since all r= 4 <b>priority</b> <b>levels</b> have equal size, we have [...]...|$|R
40|$|We {{consider}} {{systems with}} finite sources of requests, multiple servers, and an arbitrary number of preemptive priority classes. The service {{times and the}} source idle times {{are assumed to be}} exponentially distributed. We present an efficient approach based on marginal state description. The approach allows a recurrent analysis of <b>priority</b> <b>levels</b> where the usage of servers by higher priority requests is accounted for through server vanishing and reappearance rates. We first consider systems with fixed priorities. The method is then extended to cases where sources can issue requests at several <b>priority</b> <b>levels...</b>|$|R
50|$|As {{a general}} rule, {{administrative}} expenses (the actual, necessary expenses {{of preserving the}} bankruptcy estate, including expenses such as employee wages, {{and the cost of}} litigating the chapter 11 case)are paid first. Secured creditors—creditors who have a security interest, or collateral, in the debtor's property—will be paid before unsecured creditors. Unsecured creditors' claims are prioritized by § 507. For instance the claims of suppliers of products or employees of a company may be paid before other unsecured creditors are paid. Each <b>priority</b> <b>level</b> must be paid in full before the next lowest <b>priority</b> <b>level</b> may receive payment.|$|E
50|$|The {{switched}} network between elements resembled, in many ways, a modern computer network. On the network were sets of nodes, {{each of which}} had three links. When a packet arrived at a node, it consulted a routing table and attempted to forward the packet closer to its destination. If a node became congested, any incoming packets were passed on without routing. Packets treated {{in such a manner}} had their <b>priority</b> <b>level</b> increased; when several packets vied for a single node, a packet with a higher <b>priority</b> <b>level</b> would be routed before ones with lower priority levels.|$|E
5000|$|Task {{drag and}} drop- Tasks and {{projects}} {{are capable of}} being dragged from one location to another, allowing users to change a task's <b>priority</b> <b>level</b> without having {{to create a new}} item altogether.|$|E
40|$|In {{this paper}} we propose and {{validate}} algorithms for choosing finite word length identifiers for dynamically scheduled networked control systems. A networked control system is characterized by having a feedback loop closed through a local area computer network. Scheduling {{the use of the}} network in a way that assures both stability and controller performance are maintained is the primary focus of this work. Network usage for the control system is scheduled dynamically, that is, as the system runs, as opposed to statically, that is, in advance of operation. In earlier work we proposed a Try-Once-Discard (maximum-error-first) scheduler with continuous <b>priority</b> <b>levels.</b> However, in practice only a finite number of <b>priority</b> <b>levels</b> will be available as the priority is mapped to a subset of the message identifier. Two schemes for selecting which <b>priority</b> <b>levels</b> are proposed, the first with a fixed arbitrary grid and the second with an auto-scaling grid. Examples of both using linear or logarit [...] ...|$|R
5000|$|In our {{example of}} police dispatch, {{different}} talk-groups are assigned different system <b>priority</b> <b>levels,</b> sometimes with [...] "preempt" [...] capability, attempting {{to ensure that}} communication between critical units is maintained.|$|R
50|$|M6759 is an 8051-based Microcontroller with Dual Data Pointers, UART, 32 I/O lines, 3 Timers/Counters, 6 Interrupts/2 <b>priority</b> <b>levels,</b> 64 KB Flash ROM, 256 Bytes IDATA RAM, 256 Bytes on-chip XRAM.|$|R
