2|7|Public
5000|$|A {{procedure}} declaration {{consists of}} the keyword , followed by a unique <b>procedure</b> <b>identifier</b> and a statement: ...|$|E
5000|$|MAIN MODEL Main_Transport [...] DECLARATION SECTION [...] QUANTITY: {{identifier}} : QuantityLength {{base unit}} : mile [...] QUANTITY: identifier : QuantityCurrency base unit : $ [...] SET: identifier : Plants index : p [...] SET: identifier : Markets index : m [...] PARAMETER: identifier : Capacity index domain : p [...] PARAMETER: identifier : Demand index domain : m [...] PARAMETER: identifier : Distance index domain : (p,m) unit : 1000 * mile [...] PARAMETER: identifier : Freight unit : $/(1000 * mile) [...] PARAMETER: identifier : TransportCost index domain : (p,m) unit : 1000 * $ definition : Freight * Distance(p,m) [...] VARIABLE: identifier : Shipment index domain : (p,m) range : nonnegative [...] CONSTRAINT: identifier : SatisfyCapacity index domain : p definition : sum(m, Shipment(p,m)) <= Capacity(p) [...] CONSTRAINT: identifier : MeetDemand index domain : m definition : sum(p, Shipment(p,m)) >= Demand(m) [...] VARIABLE: identifier : TotalCost unit : 1000 * $ definition : sum((p,m), TransportCost(p,m)*Shipment(p,m)) [...] MATHEMATICAL PROGRAM: identifier : TransportModel objective : TotalCost direction : minimize constraints : AllConstraints variables : AllVariables [...] ENDSECTION [...] <b>PROCEDURE</b> <b>identifier</b> : MainInitialization body : [...] Plants := data { seattle, san-diego }; Markets := data { new-york, Chicago, topeka }; [...] Capacity(p) := data { seattle : 350, san-diego : 600 }; Demand(m) := data { new-york : 325, Chicago : 300, topeka : 275 }; [...] Distance(p,m) := data { ( [...] seattle, new-york [...] ) : 2.5, ( [...] seattle, Chicago [...] ) : 1.7, ( [...] seattle, topeka [...] ) : 1.8, ( [...] san-diego, new-york [...] ) : 2.5, ( [...] san-diego, Chicago [...] ) : 1.8, ( [...] san-diego, topeka [...] ) : 1.4 }; [...] Freight := 90 $/(1000*mile); [...] ENDPROCEDURE [...] <b>PROCEDURE</b> <b>identifier</b> : MainExecution body : [...] solve TransportModel; [...] ENDPROCEDURE [...] ENDMODEL Main_Transport ...|$|E
40|$|The present {{invention}} provides systems, {{apparatus and}} methods for entering data into a flight plan entry field which facilitates the display and editing of aircraft flight-plan data. In one embodiment, the present invention provides {{a method for}} entering multiple waypoint and <b>procedure</b> <b>identifiers</b> at once within a single a flight plan entry field. In another embodiment, the present invention provides for the partial entry of any waypoint or <b>procedure</b> <b>identifiers,</b> and thereafter relating the identifiers with an aircraft's flight management system to anticipate the complete text entry for display. In yet another embodiment, {{the present invention discloses}} a method to automatically provide the aircraft operator with selectable prioritized arrival and approach routing identifiers by a single manual selection. In another embodiment, the present invention is a method for providing the aircraft operator with selectable alternate patterns to a new runway...|$|R
5000|$|Health informatics—Health cards—Numbering {{system and}} {{registration}} <b>procedure</b> for issuer <b>identifiers</b> ...|$|R
40|$|Real-time {{identifiers}} of {{the rotor}} parameters of an induction motor drive {{are presented in}} the paper. The synthesis <b>procedure</b> of the <b>identifiers</b> {{is based on the}} MRAC system theory. An appropriate choice of the reference model allows a Lyapunov function to be built up by means of which the updating law of one of the above mentioned parameters can be found. A higher order identifier is also synthesised using a hyperstability approach which allows real-time updating of two rotor parameters. The parameters convergence is assured thanks to the persistent exciting propriety of the input vector. A DSP-based system (TMS 320 C 30), having 30 MHz clock frequency, is used for testing the proposed identifiers in a CRPWM inverter supplied driv...|$|R
40|$|CONTENTS This Recommendation {{consists}} of four parts, combined in one document SCOPE PART 1 [...] - Fundamental characteristics 1 Introduction 2 Definitions 3 References 4 Presentation functionalities 5 Principles of telewriting coding PART 2 [...] - Telewriting together with telephony 1 General 2 Main characteristics of the basic terminal 3 Presentation functionalities of the basic terminal Fascicle VII. 5 [...] - Rec. T. 150 1 Transmission for the basic terminal 5 Transmission blocks 6 Transmission <b>procedure</b> 7 Coding <b>identifier</b> 8 Communication control, general requirements 9 Communication control commands 10 Description of the communication process PART 3 [...] - Zone coding 1 General 2 Presentation elements 3 Zone coding description 4 Specification of terms used in coding 5 Specification of the coding 6 A coding example 7 Data structure 8 Temporary pen-stop 2 Fascicle VII. 5 [...] - Rec. T. 150 Control commands 10 Summary code table 11 Summary transmissio...|$|R
40|$|This thesis {{presents}} the results of an experimental study aimed at implementing the MobilityFirst protocol stack in Software Defined Network platforms. The Mobility-First protocol involves a novel hybrid name/address based routing <b>procedure.</b> Globally Unique <b>Identifiers</b> (GUIDs), which are host names, are first resolved by a Global Name Resolution Service into routable network addresses, which are then used by the routers to forward data. It also has support for enhanced network services using in-network storage and compute. These features have been implemented in an SDN by using controller software that learns about GUIDs and sets up MobilityFirst flows using VLAN tags. The prototype implementation has been done using the Floodlight controller and OpenFlow 1. 0 switches. The Floodlight controller has been extended by adding modules that analyze MobilityFirst packets and set up corresponding flows. The prototype has been evaluated by conducting performance experiments on both the control plane and the data plane. The results show that the average processing time required a...|$|R
40|$|Two online {{identifiers}} of {{the rotor}} {{parameters of the}} field-oriented (FO) induction motor drive are presented in this paper, The synthesis <b>procedure</b> of the <b>identifiers</b> {{is based on the}} model reference adaptive control (MRAC) system theory. An appropriate choice of the reference model allows building a Lyapunov function by means of which the updating law of the rotor time constant can be found. A higher order identifier is also synthesized using hyperstability approach. It allows the simultaneous identification of two rotor parameters. The parameters' convergence is assured thanks to the persistent exciting propriety of the input vector of the identifier, represented by the stator current. Experimental results conducted on an FO-controlled drive, using a digital signal processor (DSP) -based system (TMS 320 C 31), having 40 -MHz clock frequency, show the convergent trajectories of the parameters and of the state errors under various significant steady state and transient operating conditions and for different values of the adaption gains. The results show the satisfactory behavior of the proposed identification algorithm...|$|R
40|$|The {{following}} document {{presents a}} detailed description of the protocol for the “ Control Channels for the Cooperation of the Cognitive Management System ” (C 4 MS) which provides the necessary means to enable proper management of Opportunistic Networks. Additionally, the document defines the methodology that was applied for the purpose of signalling evaluation. The protocol overview presented in section 2 of the main document, provides the C 4 MS principles. The section includes, among others, the description of the protocol <b>identifiers,</b> <b>procedures,</b> protocol state machines and message format as well as the security asp ects. Section 3 provides a high-level description of the data structures defined within the scope of OneFIT project. The data structures are classified into five categories, i. e. : Profiles, Context, Decisions,Knowledge and Policies. The high level description is complemented by some detailed data structures in the Appendix to D 3. 3 Section 3 [10]. Section 4 provides details on the evaluation methodology applied for the purpose of C 4 MS performance assessment. The section presents the evaluation plan along with a description of metrics that are to be exploited in the scope of WP 3. Section 5 and Section 6 are composed of the signalling evaluation results. Section 5 focuses on the estimation of the signalling load imposed by ON management in different ON phases. Additionally some results for the initialization phase (not explicitly mentioned in the previous phases of the project) and security related aspects are also depicted. Section 6 on the other hand is focused on the evaluation of the signalling traffic generated by different ON related algorithms. Conclusions to the document are drawn in section 7. Detailed description of the C 4 MS procedures, implementation options based on IEEE 802. 21, DIAMTER and 3 GPP are depicted in the appendix to the D 3. 3 [10]. Additionally, the appendix incorporates the detailed definition of the information data structures and final set of Message Sequence Charts (MSCs) provided for the OneFIT project. Peer ReviewedPreprin...|$|R

