306|51|Public
25|$|Finally a <b>postprocessor</b> is {{used for}} the {{analysis}} and visualization of the resulting solution.|$|E
5000|$|The term <b>postprocessor</b> {{has caused}} some confusion. The PostCSS team {{used the term}} to show that PostCSS was not a {{template}} language (preprocessor) but a CSS tool. However, some developers think the term <b>postprocessor</b> would better suit browser tools [...] (for instance, -prefix-free). The situation has become even more complicated {{after the release of}} PreCSS. Now, instead of <b>postprocessor,</b> the PostCSS team use the term processor.|$|E
5000|$|Comprehensive <b>postprocessor</b> {{generator}} (NURBS, cycles, circular interpolation...) ...|$|E
50|$|Postprocessing {{procedures}} {{are designed for}} the extraction of the data of interest from a finite element solution. In {{order to meet the}} requirements of solution verification, <b>postprocessors</b> need to provide for a posteriori error estimation in terms of the quantities of interest. When the errors of approximation are larger than what is considered acceptable then the discretization has to be changed either by an automated adaptive process or by action of the analyst. There are some very efficient <b>postprocessors</b> that provide for the realization of superconvergence.|$|R
50|$|<b>Postprocessors</b> sdiff and diffmk render {{side-by-side}} diff listings {{and applied}} change marks to printed documents, respectively. Both were developed elsewhere in Bell Labs in or before 1981.|$|R
50|$|Groff {{contains}} {{a large number}} of helper programs, preprocessors, and <b>postprocessors</b> including eqn, tbl, pic and soelim. There are also several macro packages included that duplicate, expand on the capabilities of, or outright replace the standard troff macro packages.|$|R
5000|$|... {{implementation}} of either a preprocessor or a <b>postprocessor</b> or both, ...|$|E
5000|$|Finally a <b>postprocessor</b> is {{used for}} the {{analysis}} and visualization of the resulting solution.|$|E
5000|$|In the <b>postprocessor</b> all {{steps are}} taken after the {{computation}} {{of the primary}} data of the solver is finished, e.g.: ...|$|E
50|$|In April 1975 the EXAPT NC Systemtechnik GmbH {{is founded}} with the aim, {{to enable the}} entry into the NC {{technique}} for {{small and medium-sized companies}} by a complete product and service program. In the following year the system portfolio is extended with further system modules and service programs and the provision of <b>postprocessors.</b>|$|R
40|$|Two {{interactive}} {{computer graphics}} <b>postprocessors,</b> MAGGRAF and NASTEK, used for displaying NASTRAN-generated results are described. MAGGRAF is capable of displaying magnetic potentials or fields computed from results generated by a NASTRAN magnetostatic analysis. NASTEK is capable of displaying NASTRAN-generated PLT 2 files on most Tektronic terminals. Examples of the plotting capabilities {{for each of the}} programs will be presented including plots of drawn with solid and dotted lines...|$|R
50|$|It also {{includes}} graphical verification to automatically check for collisions and the maximum wire angle possible on each individual EDM machine. The latest version {{makes it easy}} to extract and link 4-axis wire paths. Dialog boxes guide the user through the process making it simple to add tags, create roughing and finishing wire paths, lead in and out moves, a range of corner strategies, and tag removal cycles. <b>Postprocessors</b> and technology libraries are included for all leading machines.|$|R
5000|$|RMF Spreadsheet Reporter is an {{extension}} of the RMF <b>Postprocessor</b> and displays selected data in spreadsheet applications on a workstation.|$|E
5000|$|SDC Verifier [...] SDC Verifier is a {{powerful}} <b>postprocessor</b> program with an advanced calculation core which works seamlessly with Siemens multi-solver, FEA software suite Femap ...|$|E
5000|$|Conformance class 2, {{which is}} not used in practice, always enforces the {{external}} mapping. In theory this would allow better AP interoperability, since a <b>postprocessor</b> may {{know how to handle}} some supertypes, but may not know the specified subtypes.|$|E
40|$|A {{round robin}} has been {{conducted}} on integrated fast fracture design programs for brittle materials. An informal working group (WELFEP-WEakest Link failure probability prediction by Finite Element <b>Postprocessors)</b> was formed to discuss and evaluate {{the implementation of the}} programs examined in the study. Results from the study have provided insight on the differences between the various programs examined. Conclusions from the study have shown that when brittle materials are used in design, analysis must understand how to apply the concepts presented herein to failure probability analysis...|$|R
40|$|Finite Element Analysis (FEA) is a {{versatile}} numerical simulation method that replicates with great fidelity complex physical interactions. FEA software systems are enhanced with <b>postprocessors</b> that allow simulation experts to examine simulation results visually. However, such <b>postprocessors</b> are typically quite limited {{when it comes}} to imparting the results of the simulation beyond the narrow community of numerical simulation experts that devised the simulation. The lack of such general-purpose visualization capability is particularly limiting as the power of compute platforms and the sophistication of simulation codes increases. We propose to achieve high-quality, general-purpose visualization of FEA simulation data through automatic, scalable, and robust translation into forms suitable for rendering with state-of-the-art animation systems. The translator converts the finite elements into polygonal surface representations, physical material models into material models describing surface/light interactions, and deformation and displacement data into animation data. The method was used to produce visualizations of our Pentagon and World Trade Center simulations, where it proved its effectiveness for conveying the results of the simulations to the general public. The visualizations have been downloaded millions of times, they have been relayed by hundreds of mass media outlets, and they were requested by the September 11 National Memorial and Museum for permanent exhibition. ABOUT THE AUTHOR...|$|R
40|$|An {{interactive}} {{approach with}} engineering computer graphics {{is used to}} integrate the design and analysis processes of a rocket engine turbine into a progressive and iterative design procedure. The processes are interconnected through pre- and <b>postprocessors.</b> The graphics are used to generate the blade profiles, their stacking, finite element generation, and analysis presentation through color graphics. Steps of the design process discussed include pitch-line design, axisymmetric hub-to-tip meridional design, and quasi-three-dimensional analysis. The viscous two- and three-dimensional analysis codes are executed after acceptable designs are achieved and estimates of initial losses are confirmed...|$|R
5000|$|RMF <b>Postprocessor</b> is the {{reporting}} tool for RMF SMF records of type 70 to 78. It generates a big number of tabular and textual reports for long-term data analysis which provide {{a lot of}} detail of z/OS and System z performance.|$|E
50|$|LaTeXML's primary output {{format is}} an XML {{representation}} of (La)TeX's document model. A <b>postprocessor</b> can convert these XML documents into other formats such as HTML with mathematical formulas as images or XHTML, HTML5, and EPUB with formulas as MathML. Compared to other LaTeX-to-XML processors, LaTeXML aims to conserve the semantic {{structures of the}} LaTeX markup. This makes it a good basis for semantic services like Math search.|$|E
5000|$|Monitor I Data Gatherer which {{collects}} data in adjustable intervals {{from one}} minute to one hour. The data is written to SMF data sets. RMF Monitor I uses the SMF data record types 70 to 78. In addition a dataspace can be created for the Monitor I data gather in which the most recent RMF SMF data records are buffered so that the RMF <b>Postprocessor</b> can access and process them immediately.|$|E
40|$|The {{vibration}} {{characteristics of}} a composite fan blade for high-tip-speed applications were determined theoretically and the results compared with measured data. The theoretical results were obtained using a computerized capability consisting of NASTRAN coupled with composite mechanics by way of pre- and <b>postprocessors.</b> The predicted vibration frequencies and mode shapes were in reasonable agreement with the measured data. Theoretical results showed that different laminate configurations from the same composite system had only small effects on the blade frequency. However, the use of adhesively bonded titanium/beryllium laminar composites may improve considerably the blade vibration characteristics...|$|R
40|$|Today, CNC {{technology}} is {{a major contributor to}} the production capacity of industrial companies. The current NC standards only allow rudimentary low-bandwidth information transfer between various resources. A complex network of post-processors is therefore needed for the basic functionality of CAD/CAM/CNC systems. In this paper, the authors investigate and design a universal platform for supporting CNC manufacturing. The platform shifts the necessary knowledge transformations from the vendor specific software domain to the conceptual model space. This will eliminate the requirement for <b>postprocessors.</b> Consequently, resources will be interchangeable and interoperable, adding to the strategic agility of the manufacturing network...|$|R
40|$|Pre and <b>postprocessors</b> {{have been}} written for an {{established}} hydraulic program (COMMIX-IHX) which enables prediction of the internal crossflow field for each tube of Argonne's Test Heat Exchanger and identification of those tubes most likely to experience fluid-elastic instability, together with the instability vibration mode. While the direct use of the HXVA method is limited to single pass, single-segmentally baffled tube bundle configurations, its algorithms and methods {{can be applied to}} any type of heat exchanger which can be analyzed by COMMIX-IHX. The processors are explained and an example problem is given along with comparisons of experimental results...|$|R
50|$|The <b>PostProcessor</b> was a Java API, so {{additional}} programming {{was needed}} to implement it. Also, {{there was a need}} for better pluggability and a need to cover the entire document process. And since Scriptura wanted to offer the opportunity to be used by non-IT users, a graphical interface was needed. In 2008, the Scriptura DocumentFlow was released, a graphical interface that enabled users to design the whole document process, from data retrieval to output delivery.|$|E
50|$|Scriptura {{is based}} on the {{separation}} of content and layout, and the templates that are created with the Scriptura Designer were independent of the final output format. It was the Scriptura Server that did the transformation from XSL-FO into a final output format. That way, a single template could be used for every output format. Support for multichannel output was implemented and customers started asking for post-processing operations like bundling, sorting and grouping. This resulted in the release of the Scriptura Bundler component (2005), which later evolved into the Scriptura <b>PostProcessor</b> (2007).|$|E
50|$|Although 2-axis or 2.5-axis CRC {{problems}} (such as calculating toolpaths for {{a simple}} profile in the XY plane) are quite simple in terms of computational power, {{it is in the}} 3-, 4-, and 5-axis situations of contouring 3D objects with a ball-endmill that CRC becomes rather complex. This is where CAM becomes especially vital and far outshines manual programming. Typically the CAM vector output is postprocessed into G-code by a <b>postprocessor</b> program that is tailored to the particular CNC control model. Some late-model CNC controls accept the vector output directly, and do the translation to servo inputs themselves, internally.|$|E
40|$|This paper {{describes}} an Arabic formatting {{system that is}} able to format multilingual scientific documents, containing text in Arabic or Persian, {{as well as other}} languages, plus pictures, graphs, formulae, tables, bibliographical citations, and bibliographies. The system is an extension of ditroff/ffortid that is already capable of handling Hebrew in the context of multilingual scientific documents. ditroff/ffortid itself is a collection of pre- and <b>postprocessors</b> for the U N IX ditroff (Device Independent Typesetter RunOFF) formatter. The new system is built without changing ditroff itself. The extension consists of a new preprocessor, fonts, and a modified existing postprocesso...|$|R
40|$|The primary {{objective}} was to present methods for validating predictions of Rocketdyne's most current version of the Space Shuttle Main Engine (SSME) Power Balance Model (PBM) with respect to physical relations governing flow systems. This required {{the development and implementation}} of <b>postprocessors</b> to check results of PBM computations for satisfaction of conservation relations. A cursory uncertainty analysis of PBM predictions with respect to mass and energy balances was performed. In addition, an effort to identify the empirical relations and physical assumptions within PBM which impact the ability of the model to attain rigorous balance was begun...|$|R
40|$|RinSim is a {{logistics}} simulator {{written in}} Java. RinSim supports (de) centralized algorithms for dynamic pickup-and-delivery problems (PDP). The simulator is {{developed at the}} iMinds-DistriNet group at the dept. of Computer Science, KU Leuven, Belgium. Changes in this version: 	Many classes have been refactored, including the builder system in core. 	Experiment is more flexible using <b>PostProcessors.</b> 	Several data value object have been refactored to use getter instead of fields and a factory method instead of a constructor. 	ScenarioIO has been greatly improved, it no longer relies on any object serialization. 	Support for real-time clock (not stable yet...|$|R
5000|$|... 1985 - ESP {{founded by}} George Rudy and Femap {{originally}} {{developed as a}} pre- and <b>postprocessor</b> to Nastran.1999 - ESP acquired by SDRC2001 - SDRC acquired by EDS2004 - Product Lifecycle Management (PLM) software suite spun off to form UGS2007 - UGS acquired by the Automation & Drives Division of Siemens and Siemens PLM Software formed Femap product development continues as a CAD neutral and solver independent application. Also it is available bundled {{with a number of}} Siemens PLM solvers, including NX Nastran, Advanced Non-Linear Solver, Thermal/Advanced Thermal Solver, and Flow Solver.As a standalone utility Femap is typically used with independent solvers such as ADINA, NEi Nastran, LS-DYNA, ANSYS or Abaqus.|$|E
50|$|Cutter {{location}} is {{the topic of}} where to locate the cutter {{in order to achieve}} the desired contour (geometry) of the workpiece, given that the cutter's size is non-zero. The most common example is cutter radius compensation (CRC) for endmills, where the centerline of the tool will be offset from the target position by a vector whose distance is equal to the cutter's radius and whose direction is governed by the left/right, climb/conventional, up/down distinction. In most implementations of G-code, it is G40 through G42 that control CRC (G40 cancel, G41 left/climb, G42 right/conventional). The radius values for each tool are entered into the offset register(s) by the CNC operator or machinist, who then tweaks them during production {{in order to keep the}} finished sizes within tolerance. Cutter location for 3D contouring in 3-, 4-, or 5-axis milling with a ball-endmill is handled readily by CAM software rather than manual programming. Typically the CAM vector output is postprocessed into G-code by a <b>postprocessor</b> program that is tailored to the particular CNC control model. Some late-model CNC controls accept the vector output directly, and do the translation to servo inputs themselves, internally.|$|E
5000|$|Pixel shaders, {{also known}} as {{fragment}} shaders, compute color and other attributes of each [...] "fragment" [...] - a technical term usually meaning a single pixel. The simplest kinds of pixel shaders output one screen pixel as a color value; more complex shaders with multiple inputs/outputs are also possible. Pixel shaders range from always outputting the same color, to applying a lighting value, to doing bump mapping, shadows, specular highlights, translucency and other phenomena. They can alter {{the depth of the}} fragment (for Z-buffering), or output more than one color if multiple render targets are active. In 3D graphics, a pixel shader alone cannot produce very complex effects, because it operates only on a single fragment, without knowledge of a scene's geometry. However, pixel shaders do have knowledge of the screen coordinate being drawn, and can sample the screen and nearby pixels if the contents of the entire screen are passed as a texture to the shader. This technique can enable a wide variety of two-dimensional postprocessing effects, such as blur, or edge detection/enhancement for cartoon/cel shaders. Pixel shaders may also be applied in intermediate stages to any two-dimensional images—sprites or textures—in the pipeline, whereas vertex shaders always require a 3D scene. For instance, a pixel shader is the only kind of shader that can act as a <b>postprocessor</b> or filter for a video stream after it has been rasterized.|$|E
40|$|International audienceTo {{effectively}} {{investigate the}} mechanical performance of microstructure-based layered composites, an object-oriented software with interactive {{graphical user interface}} has been developed. This software, named PCLab, is able to analyze the microstructure evolution and mechanical performance by both Monte Carlo (MC) simulation and the Finite Element method (FEM). The software has integrated preprocessors, solvers and <b>postprocessors.</b> Some examples are tested and explored the functionality of the software package. It shows that the PCLab software with a user-friendly graphical interface provides an efficient tool for faster material analysis, design and application. It also provides a flexible, robust platform for the future extensity in the material multi-physics research...|$|R
40|$|International audienceThe {{concept of}} {{effective}} order {{is a popular}} methodology in the deterministic literature {{for the construction of}} efficient and accurate integrators for differential equations over long times. The idea is to enhance the accuracy of a numerical method by using an appropriate change of variables called the processor. We show that this technique can be extended to the stochastic context for the construction of new high order integrators for the sampling of the invariant measure of ergodic systems. The approach is illustrated with modifications of the stochastic θ-method applied to Brownian dynamics, where <b>postprocessors</b> achieving order two are introduced. Numerical experiments, including stiff ergodic systems, illustrate the efficiency and versatility of the approach...|$|R
40|$|The Ceramics Analysis and Reliability Evaluation of Structures (CARES) {{integrated}} design program on statistical fast fracture reliability and monolithic ceramic components is enhanced {{to include the}} use of a neutral data base, two-dimensional modeling, and variable problem size. The data base allows for the efficient transfer of element stresses, temperatures, and volumes/areas from the finite element output to the reliability analysis program. Elements are divided to insure a direct correspondence between the subelements and the Gaussian integration points. Two-dimensional modeling is accomplished by assessing the volume flaw reliability with shell elements. To demonstrate the improvements in the algorithm, example problems are selected from a round-robin conducted by WELFEP (WEakest Link failure probability prediction by Finite Element <b>Postprocessors)</b> ...|$|R
