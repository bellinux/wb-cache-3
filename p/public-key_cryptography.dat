775|12|Public
5|$|In {{the same}} way as the {{logarithm}} reverses exponentiation, the complex logarithm is the inverse function of the exponential function applied to complex numbers. The discrete logarithm is another variant; it has uses in <b>public-key</b> <b>cryptography.</b>|$|E
25|$|In Code: A Mathematical Journey by Sarah Flannery (with David Flannery). Popular {{account of}} Sarah's award-winning project on <b>public-key</b> <b>cryptography,</b> co-written with her father.|$|E
25|$|The {{identity}} of the communicating parties can be authenticated using <b>public-key</b> <b>cryptography.</b> This authentication can be made optional, but is generally required {{for at least one}} of the parties (typically the server).|$|E
5000|$|RSA, DSA, ECDSA, Diffie-Hellman, EC Diffie-Hellman, AES, Triple DES, Camellia, IDEA, SEED, DES, RC2, RC4, SHA-1, SHA-256, SHA-384, SHA-512, MD2, MD5, HMAC: Common {{cryptographic}} {{algorithms used}} in <b>public-key</b> and symmetric-key <b>cryptography.</b>|$|R
40|$|The current 802. 11 i {{standard}} {{can provide}} data confidentiality, integrity and mutual authentication in enterprise Wireless Local Area Networks (WLANs). However, secure communication {{can only be}} provided after successful authentication and a robust security network association is established. In general, the wireless link layer is not protected by the current standard in WLANs, which leads to many possible attacks, especially in public open-access wireless networks. We argue that regardless {{of the type of}} network under consideration, link-layer protection and data confidentiality are of great importance in wireless applications. In this paper, we first identify and analyze the security issues ignored by the current 802. 11 security standard. Then we propose our solution to patch the current 802. 11 i standard and address all those issues with a new dummy authentication key-establishment algorithm. Dummy means no real authentication for a user. In dummy authentication, we apply <b>public-key</b> <b>cryptography’s</b> key-establishment technique to the 802. 11 MAC protocol. Our solution can provide link-layer data encryption in open-access wireless networks, separate session encryption keys for different users, and protection for important frames such as management and null data frames as well as Extensible Authentication Protocol (EAP) messages...|$|R
50|$|Lattice-based {{cryptographic}} constructions are {{the leading}} candidates for <b>public-key</b> post-quantum <b>cryptography.</b> Indeed, the main alternatives to lattice-based cryptography are schemes based on the hardness factoring and related problems and schemes based on the hardness of the discrete logarithm and related problems. However, both factoring and the discrete logarithm {{are known to be}} solvable in polynomial time on a quantum computer. Furthermore, algorithms for factorization tend to yield algorithms for discrete logarithm, and vice versa. This further motivates the study of constructions based on alternative assumptions, such as the hardness of lattice problems.|$|R
25|$|Many {{cryptographic}} protocols {{are based}} on the difficulty of factoring large composite integers or a related problem—for example, the RSA problem. An algorithm that efficiently factors an arbitrary integer would render RSA-based <b>public-key</b> <b>cryptography</b> insecure.|$|E
25|$|For example, Adobe Systems grants permissions {{to enable}} {{additional}} features in Adobe Reader, using <b>public-key</b> <b>cryptography.</b> Adobe Reader verifies that the signature uses a certificate from an Adobe-authorized certificate authority. Any PDF application {{can use this}} same mechanism for its own purposes.|$|E
25|$|Clifford Cocks and James H. Ellis from Cheshire, with Malcolm J. Williamson, {{invented the}} RSA (algorithm) in 1973 at GCHQ, used for <b>public-key</b> <b>cryptography.</b> Sir Richard Owen from Lancaster coined the word dinosaur in 1842, and {{he founded the}} Natural History Museum, London, opening in 1881.|$|E
40|$|In recent years, IP {{protection}} of FPGA hardware designs {{has become a}} requirement for many IP vendors. To this end solutions have been proposed {{based on the idea}} of bitstream encryption, symmetric-key primitives, and the use of Physical Unclonable Functions (PUFs). In this paper, we propose new protocols for the IP protection problem on FPGAs based on <b>public-key</b> (PK) <b>cryptography,</b> analyze the advantages and costs of such an approach, and describe a PUF intrinsic to current FPGAs based on SRAM properties. We observe that a major advantage in using PK-based protocols is that it allows for an implementation in which the private key stored in the FPGA never has to leave the device, thus increasing security. Finally, notice that this comes at the cost of additional hardware resources but not at significant performance degradation. 1...|$|R
40|$|Cryptography is the {{practice}} and study of hiding information. Cryptography, then, not only protects data from theft or alteration, but {{can also be used}} for user authentication. There are, in general, three types of cryptographic schemes typically used to accomplish these goals: secret key (or symmetric) <b>cryptography,</b> <b>public-key</b> (or asymmetric) <b>cryptography,</b> and hash functions. In all cases, the initial unencrypted data is referred to as plaintext. It is encrypted into ciphertext, which will in turn (usually) be decrypted into usable plaintext. Visual Cryptography is a type of cryptography which encodes a number of images in the way that when the images on transparencies are stacked together, the hidden message appears without a trace of original images. The decryption is done directly by the human visual system with no special cryptographic calculations. This project presents a system which takes three pictures as an input and generates two images which correspond to two of the three input pictures. The third picture is reconstructed by printing the two output images onto transparencies and stacking them together. While the previous researches basically handle only binary images, this project establishes the extended visual cryptography scheme suitable for natural images. Generally, visual cryptography suffers from the deterioration of the image quality. This project also describes the method {{to improve the quality of}} the output images. The trade-off between the image quality and the security are discussed and assessed by observing the actual results of this method. Furthermore, the optimization of the image quality is discussed...|$|R
50|$|The <b>public-key</b> {{method of}} <b>cryptography</b> allows a sender {{to sign a}} message (often only the {{cryptographic}} hash of the message) with a sign key {{in such a way}} that any recipient can, using the corresponding public key, check the authenticity of the message. To allow this, the public key is made broadly available to all potential recipients. To make sure only the legal author of the message can validly sign the message, the public key is created from a random, private sign key, using a one-way function. This is a function that is designed such that computing the result given the input is very easy, but computing the input given the result is very difficult. A classic example is the multiplication of two very large primes: The multiplication is easy, but factoring the product without knowing the primes is normally considered infeasible.|$|R
25|$|For a long time, prime {{numbers were}} thought to have {{extremely}} limited application outside of pure mathematics. This changed in the 1970s when the concepts of <b>public-key</b> <b>cryptography</b> were invented, in which prime numbers {{formed the basis of}} the first algorithms such as the RSA cryptosystem algorithm.|$|E
25|$|Finding modular multiplicative inverses {{also has}} {{practical}} {{applications in the}} field of cryptography, i.e. <b>public-key</b> <b>cryptography</b> and the RSA Algorithm. A benefit for the computer implementation of these applications is that there exists a very fast algorithm (the extended Euclidean algorithm) {{that can be used for}} the calculation of modular multiplicative inverses.|$|E
25|$|In public-key cryptosystems, {{the public}} key may be freely distributed, while its paired private key must remain secret. In a public-key {{encryption}} system, the public key {{is used for}} encryption, while the private or secret key is used for decryption. While Diffie and Hellman could not find such a system, they showed that <b>public-key</b> <b>cryptography</b> was indeed possible by presenting the Diffie–Hellman key exchange protocol, a solution that is now widely used in secure communications to allow two parties to secretly agree on a shared encryption key.|$|E
40|$|Abstract:- In this article, a C-testable {{design for}} {{detecting}} transition faults in the polynomial basis (PB) bit parallel (BP) multiplier circuits over GF(2 m) is discussed. For 100 percent transition fault coverage, the proposed technique requires only 10 vectors, irrespective of multiplier size, {{at the cost}} of 6 percent extra hardware. The proposed constant test vectors which are sufficient to detect both the transition and stuck-at faults in the multiplier circuits can be derived directly without any requirement of an ATPG tool. As the GF(2 m) multipliers have found critical applications in public key cryptography and need secure internal testing, a Built-in Self-Test (BIST) circuit may be used for generating test patterns internally. This will obviate the need of having three extra pins for the control inputs and also provides <b>public-key</b> security in <b>cryptography.</b> Area and delay of the testable circuit are analyzed using Synopsys ® tools with 0. 18 μ CMOS technology library from UMC...|$|R
40|$|This paper {{presents}} a survey on Public-Key Infrastructure (PKI). This discussion {{is centered on}} overview of public-key infrastructure, its key elements, PKI management functions, protocols, digital certificate format and its applications. Public-key infrastructure (PKI) as the set of hardware, software, people, policies, and procedures needed to create, manage, store, distribute, and revoke digital certificates based on asymmetric <b>cryptography.</b> <b>Public-key</b> infrastructure based on digital certificates and certificate authorties in order to securely implement public key cryptography. The principle objectives of developing a PKI is to enable secure, conventional, and efficient acquistion of public keys. A PKI enables users of a basically unsecure public network such as the Internet to securely and privately exchange data and money {{through the use of}} a public and a private cryptographic key pair that is obtained and shared through a trusted authority. The public key infrastructure provides for a digital certificate that can identify an individual or an organization and directory services that can store and, when necessary, revoke the certificates...|$|R
40|$|Providing Information {{security}} is a fast moving technology {{in the field of}} computer science. The success and growth of the Internet has become fertile ground for malicious attackers and abusers, unauthorized users. With the increasing number of security devices and protocols in the information, the complexity of detecting and tracing the information security become a very challenging task. Information security and cryptography is a branch of knowledge too varied to coverage almost how to protect data in digital form and to allow protection avails. Cryptography is the science of writing in cipher code. Cryptography is where security engineering meets mathematics. It provides us with the tools that underlie most modern security protocols. The basic terminology is that cryptography refers to the science and art of designing ciphers; cryptanalysis to the science and art of breaking them; while cryptology, often shortened to just crypto, is the study of both. The input to an encryption process is commonly called the plaintext, and the output the cipher text. As applied to computer information security, cryptography protects data from theft or alteration and can also be used for user authentication. Rapidly rising cyber crimes and the growing prospect of the Internet being used as a medium for terrorist attacks pose a major challenge for Information security. Cryptography is a solution to this challenge, since it underpins privacy, confidentiality, and identity, which together provide the fundamentals for trusted e-commerce and secured data communications. Three general types of cryptographic schemes typically used: secret key (or symmetric) <b>cryptography,</b> <b>public-key</b> (or asymmetric) <b>cryptography,</b> and hash functions. These schemes are used to create encrypted data known as cipher text that is usually much more secure than non-encrypted information. The security mechanisms are primarily based on cryptographic algorithms like symmetric-DES, asymmetric-RSA. The logical conclusion is to use both kind of algorithms and their combinations to achieve optimal speed and security levels. For the purposes of computer and information security, cryptography and data encryption must satisfy the following requirements: Authentication, Privacy, Integrity, and Nonrepudiation. It is shown by experimental results that this system of secret codes provides a valuable model and algorithms to help to find the security rules, adjust the security measure and improves the security performance...|$|R
25|$|Several <b>public-key</b> <b>cryptography</b> algorithms, such as RSA and the Diffie–Hellman key exchange, {{are based}} on large prime numbers (2048-bit primes are common). RSA relies on the {{assumption}} that it is much easier (i.e., more efficient) to perform the multiplication of two (large) numbers x and y than to calculate x and y (assumed coprime) if only the product xy is known. The Diffie–Hellman key exchange relies on {{the fact that there are}} efficient algorithms for modular exponentiation, while the reverse operation the discrete logarithm is thought to be a hard problem.|$|E
25|$|Many {{questions}} regarding prime numbers remain open, such as Goldbach's conjecture (that every even integer greater than 2 {{can be expressed}} as the sum of two primes), and the twin prime conjecture (that there are infinitely many pairs of primes whose difference is 2). Such questions spurred the development of various branches of number theory, focusing on analytic or algebraic aspects of numbers. Primes are used in several routines in information technology, such as <b>public-key</b> <b>cryptography,</b> which makes use of properties such as the difficulty of factoring large numbers into their prime factors. Prime numbers give rise to various generalizations in other mathematical domains, mainly algebra, such as prime elements and prime ideals.|$|E
25|$|The need {{to break}} German codes in World War II led to {{advances}} in cryptography and theoretical computer science, with the first programmable digital electronic computer being developed at England's Bletchley Park with the guidance of Alan Turing and his seminal work, On Computable Numbers. At the same time, military requirements motivated advances in operations research. The Cold War meant that cryptography remained important, with fundamental advances such as <b>public-key</b> <b>cryptography</b> being developed in the following decades. Operations research remained important as a tool in business and project management, with the critical path method being developed in the 1950s. The telecommunication industry has also motivated advances in discrete mathematics, particularly in graph theory and information theory. Formal verification of statements in logic has been necessary for software development of safety-critical systems, and advances in automated theorem proving have been driven by this need.|$|E
40|$|The {{distinct}} {{advantage of}} SRAM-based Field Programmable Gate Arrays (FPGA) is their flexibility for configuration changes. However, this {{opens up the}} threat of theft of Intellectual Property (IP) since the system configuration is stored in easy-to-access Flash memory. To prevent this, high-end FPGAs have already been extended with symmetric-key decryption engines used to load an encrypted version of the configuration that cannot simply be copied and used without knowledge of the secret key. However, such protection systems based on straightforward use of symmetric cryptography are not well-suited with respect to business and licensing processes, since they are lacking a convenient scheme for key transport and installation. We propose a new protection scheme for the IP of circuits in configuration bit files that provides a significant improvement to the current unsatisfying situation. It uses both <b>public-key</b> and symmetric <b>cryptography,</b> but does not burden FPGAs with the usual overhead of public-key cryptography: While it needs hard-wired symmetric <b>cryptography,</b> the <b>public-key</b> functionality is moved into a temporary configuration bit stream for a one-time setup procedure. This approach requires only very few modifications to current FPGA technology. Using five basic stages, the new protection scheme allows new accounting models for volume licensing of IP, with automated key installation on FPGAs taking place at the customer’s site. Keywords: IP protection, secure configuration, FPGA, embedded securit...|$|R
40|$|Resumo: Redes de sensores sem fio têm se tornado populares recentemente e possuem inúmeras aplicações. Contudo, elas apresentam o desafio de como proteger suas comunicações utilizando esquemas criptográficos, visto que são compostas por dispositivos de capacidade extremamente limitada. Neste trabalho é descrita uma implementação eficiente em software, para redes de sensores sem fio, de duas tecnologias de criptografia pública: a Criptografia Baseada em Emparelhamentos (CBE) e a Criptografia de Curvas Elípticas (CCE). Nossa implementação foca a família de microcontroladores MSP 430 de 16 bits, utilizada em sensores como o Tmote Sky e TelosB. Em particular, para a CBE, foram implementados algoritmos para o cálculo de emparelhamentos nas curvas MNT e BN sobre corpos primos; para a CCE, foi implementado o esquema de assinatura ECDSA sobre corpos primos para os níveis de segurança de 80 e 128 bits. As principais contribuições deste trabalho são um estudo aprofundado dos algoritmos de emparelhamentos bilineares e novas otimizações na aritmética de corpos primos para a MSP 430, que consequentemente melhoram o desempenho dos criptossistemas de CBE e CCE em tal plataformaAbstract: Wireless sensor {{networks}} have become popular recently and provide many applications. However, {{the deployment of}} cryptography in sensor networks is a challenging task, given their limited computational power and resource-constrained nature. This work presents an efficient software implementation, for wireless sensor networks, of two <b>public-key</b> systems: Pairing-Based <b>Cryptography</b> (PBC) and Elliptic Curve Cryptography (ECC). Our implementation targets the MSP 430 microcontroller, which is used in some sensors including the Tmote Sky and TelosB. For the PBC, we have implemented algorithms for pairing computation on MNT and BN curves over prime fields; for the ECC, the signature scheme ECDSA over prime fields for the 80 -bit and 128 -bit security levels. The main contributions of this work are an in-depth study of bilinear pairings algorithms and new optimizations for the prime field arithmetic in the MSP 430, which improves the running times of the PBC and ECC cryptosystems on the platfor...|$|R
40|$|Securing {{cryptographic}} {{systems in}} the presence of side-channel leakages is still an important problem. Over recent years, the cryptography theory community has shown considerable interest in formally modelling the side-channel leakages and in designing "provably" secure cryptographic primitives in these leakage models. This area {{is often referred to as}} leakage-resilient cryptography. Yet, designing a formal model that realistically captures side-channel leakages such as power consumption patterns, and designing primitives efficient enough to be deployed in practice in such a leakage model, remains a challenging research direction. 	 In this work, we aim to bridge the above gap between the theory of provably secure cryptosystems that resist side-channel attacks and their practical relevance. Keeping this goal in mind, we analyze existing constructions and provide new ones for basic cryptographic primitives such as encryption and authentication in both <b>public-key</b> and symmetric-key <b>cryptography.</b> This dissertation consists of three parts. In the first part, we analyze existing and design new efficient leakage-resilient constructions for public-key encryption and digital signatures that tolerate continual leakage in the split-state leakage model. Our security reductions are in the generic bilinear group model. The constructions we consider are simple variants of the ElGamal key encapsulation mechanism, and the Boneh-Boyen and the Schnorr signature schemes. We also cryptanalyze a variant of the ElGamal key encapsulation mechanism that was previously conjectured to be leakage-resilient under certain conditions. The second part of this work is concerned with the protection of block ciphers in the probing adversarial leakage model. This approach, popularly known as masking in the cryptographic engineering community, is an effective countermeasure for block cipher implementations against power-analysis attacks. We improve the efficiency of a generic higher-order masking scheme recently proposed by Carlet et al. Improving the efficiency of this scheme is related to the problem of evaluating polynomials over binary finite fields in a newer cost model that counts only "non-linear" polynomial multiplications. We propose a new method for evaluating polynomials in this cost model, and argue (heuristically) that this method is asymptotically optimal. The third part deals with the construction of efficient leakage-resilient symmetric-key authentication and encryption schemes. The constructions are shown to be secure in the standard model under a recently introduced simulatable leakage assumption. This assumption offers practitioners a hope to work with a formal leakage model that allows empirical verifiability. We propose a leakage-resilient CBC-like message authentication code, and also propose a leakage-resilient PRG-based chosen-plaintext secure encryption scheme for which we quantify the leakage it tolerates during the challenge phase in terms of security of a single iteration. Our constructions tolerate continual leakage but require leak-free updates...|$|R
25|$|Algebraic {{geometry}} and cryptography likewise uses group theory in many ways. Abelian varieties {{have been introduced}} above. The presence of the group operation yields additional information which makes these varieties particularly accessible. They also often serve as a test for new conjectures. The one-dimensional case, namely elliptic curves is studied in particular detail. They are both theoretically and practically intriguing. Very large groups of prime order constructed in elliptic curve cryptography serve for <b>public-key</b> <b>cryptography.</b> Cryptographical methods of this kind benefit from {{the flexibility of the}} geometric objects, hence their group structures, together with the complicated structure of these groups, which make the discrete logarithm very hard to calculate. One of the earliest encryption protocols, Caesar's cipher, may also be interpreted as a (very easy) group operation. In another direction, toric varieties are algebraic varieties acted on by a torus. Toroidal embeddings have recently led to advances in algebraic geometry, in particular resolution of singularities.|$|E
25|$|<b>Public-key</b> <b>cryptography</b> {{can also}} be used for {{implementing}} digital signature schemes. A digital signature is reminiscent of an ordinary signature; they both have the characteristic of being easy for a user to produce, but difficult for anyone else to forge. Digital signatures {{can also be}} permanently tied to the content of the message being signed; they cannot then be 'moved' from one document to another, for any attempt will be detectable. In digital signature schemes, there are two algorithms: one for signing, in which a secret key is used to process the message (or a hash of the message, or both), and one for verification, in which the matching public key is used with the message to check the validity of the signature. RSA and DSA are two of the most popular digital signature schemes. Digital signatures are central to the operation of public key infrastructures and many network security schemes (e.g., SSL/TLS, many VPNs, etc.).|$|E
25|$|The {{development}} and continual improvement of computers, at first mechanical analog machines and then digital electronic machines, allowed industry {{to deal with}} larger and larger amounts of data to facilitate mass production and distribution and communication, and new areas of mathematics were developed to deal with this: Alan Turing's computability theory; complexity theory; Derrick Henry Lehmer's use of ENIAC to further number theory and the Lucas-Lehmer test; Rózsa Péter's recursive function theory; Claude Shannon's information theory; signal processing; data analysis; optimization and other areas of operations research. In the preceding centuries much mathematical focus was on calculus and continuous functions, but the rise of computing and communication networks led to an increasing importance of discrete concepts {{and the expansion of}} combinatorics including graph theory. The speed and data processing abilities of computers also enabled the handling of mathematical problems that were too time-consuming to deal with by pencil and paper calculations, leading to areas such as numerical analysis and symbolic computation. Some of the most important methods and algorithms of the 20th century are: the simplex algorithm, the Fast Fourier Transform, error-correcting codes, the Kalman filter from control theory and the RSA algorithm of <b>public-key</b> <b>cryptography.</b>|$|E
500|$|Exponentiation is used {{extensively}} in many fields, including economics, biology, chemistry, physics, and computer science, with {{applications such as}} compound interest, population growth, [...] chemical reaction kinetics, wave behavior, and <b>public-key</b> <b>cryptography.</b>|$|E
500|$|The inverse b can {{be found}} by using Bézout's {{identity}} {{and the fact that}} the greatest common divisor [...] equals 1. In the case [...] above, the inverse of 4 is 4, and the inverse of 3 is 2, as [...] Hence all group axioms are fulfilled. Actually, this example is similar to [...] above: it consists of exactly those elements in Z/pZ that have a multiplicative inverse. These groups are denoted Fp×. They are crucial to <b>public-key</b> <b>cryptography.</b>|$|E
500|$|PerForm and FormFlow were {{designed}} to allow users to create self-contained form applications which could be passed {{back and forth across}} a network. Both PerForm and FormFlow consisted of two distinct parts: [...] "Designer", which created the form application, and [...] "Filler", so users could submit the forms either by fax or, later, e-mail. The program could ease repetitive fill tasks, include mandatory fields, and use an input mask to accept only data entered in a valid format. The information could be saved and restored in a dBase file that used a <b>Public-key</b> <b>cryptography</b> system to encrypt the data running from client to server.|$|E
2500|$|... <b>public-key</b> <b>cryptography,</b> a {{foundation}} for many modern security applications such as secure financial transactions over the Internet; and ...|$|E
2500|$|In a {{groundbreaking}} 1976 paper, Whitfield Diffie and Martin Hellman proposed {{the notion of}} public-key (also, more generally, called asymmetric key) cryptography in which two different but mathematically related keys are used—a public key and a private key. A public key system is so constructed that calculation of one key (the 'private key') is computationally infeasible from the other (the 'public key'), {{even though they are}} necessarily related. Instead, both keys are generated secretly, as an interrelated pair. The historian David Kahn described <b>public-key</b> <b>cryptography</b> as [...] "the most revolutionary new concept in the field since polyalphabetic substitution emerged in the Renaissance".|$|E
2500|$|If {{a quantum}} {{computer}} with {{a sufficient number of}} qubits could operate without succumbing to noise and other quantum decoherence phenomena, Shor's algorithm could be used to break <b>public-key</b> <b>cryptography</b> schemes such as the widely used RSA scheme. RSA {{is based on the assumption}} that factoring large numbers is computationally intractable. So far as is known, this assumption is valid for classical (non-quantum) computers; no classical algorithm is known that can factor in polynomial time. However, Shor's algorithm shows that factoring is efficient on an ideal quantum computer, so it may be feasible to [...] defeat RSA by constructing a large quantum computer. It was also a powerful motivator for the design and construction of quantum computers and for the study of new quantum computer algorithms. It has also facilitated research on new cryptosystems that are secure from quantum computers, collectively called post-quantum cryptography.|$|E
2500|$|A second {{solution}} requires unforgeable message signatures. [...] For security-critical systems, digital signatures (in modern computer systems, {{this may}} be achieved in practice using <b>public-key</b> <b>cryptography)</b> can provide Byzantine fault tolerance {{in the presence of}} an arbitrary number of traitorous generals. [...] However, for safety-critical systems, simple error detecting codes, such as CRCs, provide weaker but often sufficient coverage at a much lower cost. [...] This is true for both Byzantine and non-Byzantine faults. [...] Thus, cryptographic digital signature methods are not a good choice for safety-critical systems, unless there is also a specific security threat as well. While error detecting codes, such as CRCs, are better than cryptographic techniques, neither provide adequate coverage for active electronics in safety-critical systems. [...] This is illustrated by the Schrödinger CRC scenario where a CRC-protected message with a single Byzantine faulty bit presents different data to different observers and each observer sees a valid CRC.|$|E
5000|$|Identity-based <b>public-key</b> <b>cryptography</b> using pairings (P1363.3) ...|$|E
5000|$|Password-based <b>public-key</b> <b>cryptography</b> (IEEE Std 1363.2-2008) ...|$|E
