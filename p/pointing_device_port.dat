0|1735|Public
50|$|For each {{device and}} for each port, a UDLD packet {{is sent to the}} port it links to. The packet {{contains}} sender identity information (<b>device</b> and <b>port),</b> and expected receiver identity information (<b>device</b> and <b>port).</b> Each port checks that the UDLD packets it receives contain the identifiers of his own <b>device</b> and <b>port.</b>|$|R
5000|$|... "it {{will enable}} the FBI to submit passcodes to the SUBJECT DEVICE for testing {{electronically}} via the physical <b>device</b> <b>port,</b> Bluetooth, Wi-Fi, or other protocol available" ...|$|R
5000|$|Historically, MouseKeys {{supported}} GUI programs {{when many}} terminals had no dedicated <b>pointing</b> <b>device.</b> As <b>pointing</b> <b>devices</b> became ubiquitous, {{the use of}} mouse keys narrowed to situations where a <b>pointing</b> <b>device</b> was missing, unusable, or inconvenient. Such situations may arise from the following: ...|$|R
40|$|Abstract — This paper {{addresses}} {{the generation of}} enhanced models of digital ICs. The proposed models accurately represent {{the effects of the}} fluctuations of the <b>device</b> <b>port</b> signals induced by EM disturbances coupling to the system interconnect. The models can be easily estimated from the <b>device</b> <b>port</b> transient responses and can be effectively implemented in any commercial tool as SPICE subcircuits. Model accuracy is assessed by comparing measurements carried out on a test board and simulations. The effects of both continuous wave sinusoidal and pulsed disturbances are discussed...|$|R
5000|$|The tablet and stylus {{are used}} as <b>pointing</b> <b>devices,</b> such as to replace a mouse. While a mouse is a {{relative}} <b>pointing</b> <b>device</b> (one uses the mouse to [...] "push the cursor around" [...] on a screen), a tablet is an absolute <b>pointing</b> <b>device</b> (one places the stylus where the cursor is to appear).|$|R
40|$|We {{present a}} survey of <b>pointing</b> <b>devices</b> for {{wearable}} computers, which are body-mounted devices that users can access at any time. Since traditional <b>pointing</b> <b>devices</b> (i. e., mouse, touchpad, and trackpoint) were designed to be used on a steady and flat surface they are inappropriate for wearable computers. Just as the advent of laptops resulted {{in the development of}} the touchpad and trackpoint, the emergence of wearable computers is leading to the development of <b>pointing</b> <b>devices</b> designed for them. However, unlike laptops, since wearable computers are operated from different body positions under different environmental conditions for different uses, researchers have developed a variety of innovative <b>pointing</b> <b>devices</b> for wearable computers characterized by their sensing mechanism, control mechanism, and form factor. We survey a representative set of <b>pointing</b> <b>devices</b> for wearable computers using an “adaptation of traditional devices” versus “new devices” dichotomy and study devices according to their control and sensing mechanisms and form factor. The objective of this paper is to showcase a variety of <b>pointing</b> <b>devices</b> developed for wearable computers and bring structure to the design space for wearable <b>pointing</b> <b>devices.</b> We conclude that a de facto <b>pointing</b> <b>device</b> for wearable computers, unlike laptops, is not likely to emerge...|$|R
50|$|In computing, a <b>pointing</b> <b>device</b> gesture or mouse gesture (or, simply, gesture) {{is a way}} of {{combining}} <b>pointing</b> <b>device</b> or finger movements and clicks that the software recognizes as a specific computer event and responds in a manner particular to that software. They can be useful for people who have difficulties typing on a keyboard. For example, in a web browser, a user can navigate to the previously viewed page by pressing the right <b>pointing</b> <b>device</b> button, moving the <b>pointing</b> <b>device</b> briefly to the left, then releasing the button.|$|R
50|$|In {{case of a}} direct-input <b>pointing</b> <b>device,</b> the {{on-screen}} pointer is at {{the same}} physical position as the <b>pointing</b> <b>device</b> (e.g., finger on a touch screen, stylus on a tablet computer). An indirect-input <b>pointing</b> <b>device</b> is not at the same physical position as the pointer but translates its movement onto the screen (e.g., computer mouse, joystick, stylus on a graphics tablet).|$|R
50|$|A voice {{interface}} card or VIC is a hardware interface that simulates a FXS on a router or network switch. This <b>device</b> <b>port</b> {{is used to}} interface telephone voice or other audio-based FXS devices.|$|R
50|$|Users have a <b>pointing</b> <b>device</b> {{with several}} buttons that {{provides}} access to the track file through the Plan Position Indicator. The typical <b>pointing</b> <b>device</b> is a track ball, which operates as follows.|$|R
40|$|The main {{components}} of the system for embroidery sewing machine is (Veritas 8014 / 35 - 2) and <b>pointing</b> <b>devices.</b> The machine automatically entered embroidered patterns, {{it is necessary to}} construct a <b>pointing</b> <b>device</b> and its control. To drive the <b>pointing</b> <b>device</b> used two stepper motors, the control circuit to cater to the ATmega 128. Communication between PC and ATmega 128 provides converter FT 232...|$|R
50|$|This model {{describes}} {{different states}} that a <b>pointing</b> <b>device</b> can assume. The three common states {{as described by}} Buxton are out of range, tracking and dragging. Not every <b>pointing</b> <b>device</b> can switch to all states.|$|R
5000|$|In most {{of these}} protocols, an address (whether it is {{initiator}} or target) is roughly equivalent to physical <b>device's</b> <b>port.</b> Situations where a single physical port hosts multiple addresses, or where a single address is accessible from one <b>device's</b> multiple <b>ports</b> are not very common, [...] Even when using multipath I/O to achieve fault tolerance, the device driver switches between different targets or initiators statically bound on physical ports, instead of sharing a static address between physical ports.|$|R
25|$|The WIMP {{style of}} {{interaction}} uses a virtual input device {{to represent the}} position of a <b>pointing</b> <b>device,</b> most often a mouse, and presents information organized in windows and represented with icons. Available commands are compiled together in menus, and actions are performed making gestures with the <b>pointing</b> <b>device.</b> A window manager facilitates the interactions between windows, applications, and the windowing system. The windowing system handles hardware <b>devices</b> such as <b>pointing</b> <b>devices,</b> graphics hardware, and positioning of the pointer.|$|R
40|$|The present {{invention}} {{relates to}} an apparatus and {{a method for}} exploring a graphical object (2) on a screen (3) of a graphics interface (4) through the movement of a <b>pointing</b> <b>device</b> (5 A) for a user. Particularly, the apparatus (1) comprises an electronic device (6) having a buffer (7) for storage of information to be presented to said user; the <b>pointing</b> <b>device</b> (5 A) is operatively associated to said electronic device (6) to generate an input signal for addressing said buffer (7) and is characterized in that the <b>pointing</b> <b>device</b> (5 A) can define a one-to-one correspondence between {{the position of the}} <b>pointing</b> <b>device</b> (5 A) and the position of at least one portion of said graphical object (2) for a given movement of the <b>pointing</b> <b>device</b> (5 A) controlled by said user and in that it comprises programmed means (11) operating in said electronic device (6) for producing a signal perceptible by said user, as a function of said correspondence between the position of the <b>pointing</b> <b>device</b> (5 A) and the position of at least one portion of said graphical object (2) ...|$|R
25|$|Mouse or {{compatible}} <b>pointing</b> <b>device.</b>|$|R
40|$|In {{view of the}} {{difficulties}} in evaluating computer <b>pointing</b> <b>devices</b> across different tasks within dynamic and complex systems, new performance measures are needed. This paper proposes seven new accuracy measures to elicit (sometimes subtle) differences among <b>devices</b> in precision <b>pointing</b> tasks. The measures are target re-entry, task axis crossing, movement direction change, orthogonal direction change, movement variability, movement error, and movement offset. Unlike movement time, error rate, and throughput, {{which are based on}} a single measurement per trial, the new measures capture aspects of movement behaviour during a trial. The theoretical basis and computational techniques for the measures are described, with examples given. An evaluation with four <b>pointing</b> <b>devices</b> was conducted to validate the measures. A causal relationship to <b>pointing</b> <b>device</b> efficiency (viz. throughput) was found, as was an ability to discriminate among devices in situations where differences did not otherwise appear. Implications for <b>pointing</b> <b>device</b> research are discussed. Keywords Computer <b>pointing</b> <b>devices,</b> performance evaluation, performance measurement, cursor positioning task...|$|R
40|$|Since the {{introduction}} of graphical user interfaces (GUI), input control devices have {{become an integral part}} of desktop computing. When interfacing with GUI s, these input control devices have become the human s primary means of communicating with the computer. Although there have been a number of experiments conducted on <b>pointing</b> <b>devices</b> for desktop machine, there is little research on <b>pointing</b> <b>devices</b> for wearable computer technology. This is surprising because <b>pointing</b> <b>devices</b> are a major component of a wearable computer system, allowing the wearer to select and manipulate objects on the screen. The design of these <b>pointing</b> <b>devices</b> will have a major impact on the ease with which the operator can interact with information being displayed (Card, English, and Burr, 1978). As a result, this research is the first in a series to investigate design considerations for <b>pointing</b> <b>devices</b> and visual displays that will support wearable computer users. Twenty soldiers participated in an experiment using target acquisition software with five <b>pointing</b> <b>devices</b> and two visual displays. The findings of the research strongly support the use of a relative mode-pointing device with rotational characteristics (i. e. trackball or thumbwheel) over other designs. Furthermore, the results also suggest that there is littl...|$|R
50|$|A <b>pointing</b> <b>device</b> can {{generate}} {{a number of}} software recognisable <b>pointing</b> <b>device</b> gestures. A mouse {{can generate}} a number of mouse events, such as mouse move (including direction of move and distance), mouse left/right button up/down and mouse wheel motion, {{or a combination of}} these gestures.|$|R
50|$|Microsoft Mouse, Microsoft IntelliMouse, or {{compatible}} <b>pointing</b> <b>device.</b>|$|R
5000|$|The first <b>pointing</b> <b>device</b> gesture, the [...] "drag," [...] was {{introduced}} by Apple to replace a dedicated [...] "move" [...] button on mice shipped with its Macintosh and Lisa computers. Dragging involves holding down a <b>pointing</b> <b>device</b> button while moving the pointing device; the software interprets this as an action distinct from separate clicking and moving behaviors. Unlike most <b>pointing</b> <b>device</b> gestures, it does not involve the tracing of any particular shape. Although the [...] "drag" [...] behavior has been adopted in a huge variety of software packages, few other gestures have been as successful.|$|R
5000|$|<b>Pointing</b> <b>devices</b> are {{the most}} {{commonly}} used input <b>devices</b> today. A <b>pointing</b> <b>device</b> is any human interface device that allows a user to input spatial data to a computer. In the case of mouse and touchpads, this is usually achieved by detecting movement across a physical surface. Analog devices, such as 3D mice, joysticks, or pointing sticks, function by reporting their angle of deflection. Movements of the <b>pointing</b> <b>device</b> are echoed on the screen by movements of the pointer, creating a simple, intuitive way to navigate a computer's graphical user interface (GUI).|$|R
40|$|A {{description}} is given {{of the data}} acquisition system used with the multiparticle spectrometer facility at Brookhaven. Detailed information is provided on {{that part of the}} system which connects the detectors to the data handler; namely, the detector electronics, device controller, and <b>device</b> <b>port</b> optical isolator. (GHT...|$|R
5000|$|... 4. <b>Pointing</b> <b>device</b> having {{rotational}} sensing mechanisms; US 6,618,038 ...|$|R
40|$|Considering {{that direct}} {{manipulation}} interfaces using a <b>pointing</b> <b>device</b> {{could be more}} efficient {{with the addition of}} a second <b>pointing</b> <b>device,</b> we are designing and implementing two-handed interfaces for air traffic controllers. This paper describes the interaction styles we imagined for such interfaces, and some issues raised by their implementation...|$|R
5000|$|Peripherals: Modem or {{internet}} connection; mouse or compatible <b>pointing</b> <b>device</b> ...|$|R
50|$|Pull-to-refresh is a {{touchscreen}} {{gesture that}} consists of touching the screen of a computing device with a finger or pressing a button on a <b>pointing</b> <b>device,</b> dragging the screen downward with the finger or <b>pointing</b> <b>device,</b> and then releasing it, as {{a signal to the}} application to refresh the contents of the screen.|$|R
40|$|Enabling group {{collaboration}} {{is important in}} computer graphics today. We have developed a framework that supports multiple <b>pointing</b> <b>devices</b> to explore the collaborative utility of multiple mice and laser pointer interaction in graphical environments. Because most <b>pointing</b> <b>device</b> comparisons are done {{in the context of}} single user performance, very {{little is known about the}} affordances of collaborating with multiple <b>pointing</b> <b>devices.</b> We present an experimental comparison of mouse pointer to laser pointer interaction in a problem-solving task involving groups of one, two, and three people. We show that collaborative performance is largely orthogonal to motor performance and that the interaction patterns are dependent on the task and on the group size. This suggests that the collaborative characteristics of a <b>pointing</b> <b>device</b> are just as important as the physical characteristics that are usually given the most attention, such as precision and accuracy. 1...|$|R
40|$|This paper {{addresses}} {{the generation of}} accurate and efficient behavioral models of digital ICs. The proposed approach {{is based on the}} approximation of the <b>device</b> <b>port</b> characteristics by means of composite local linear state-space relations whose parameters can effectively be estimated from <b>device</b> <b>port</b> transient responses via well-established system identification techniques. The proposedmodels have been proven to overcome some inherent limitations of the state-of-the-art models used so far, and they can effectively be implemented in any commercial tool as Simulation Program with Integrated Circuit Emphasis (SPICE) subcircuits or VHDL-AMS hardware descriptions. A systematic study of the performances of the proposed state-space models is carried out on a synthetic test device. The effectiveness of the proposed approach has been demonstrated on a real application problem involving commercial devices and a data link of a mobile phon...|$|R
5000|$|A {{wide variety}} of <b>pointing</b> <b>devices</b> are {{available}} to provide mouse functionality. Many keyboards include <b>pointing</b> <b>devices</b> such as a small trackball, touch pad, joy stick (Hulapoint), or pointing stick. Similar <b>pointing</b> <b>devices</b> are available as stand-alone modules and can be installed separately from the keyboard. In a lay-flat design, there is sufficient height in a 1U design to install a larger 1-1/2" [...] trackball and larger trackballs in the KVMs which are 2U in height. Some manufacturers have made provision for using a true mouse by providing a location for storage and a flat surface to use it on.|$|R
5000|$|Input device: Microsoft Mouse, Microsoft IntelliMouse, or a {{compatible}} <b>pointing</b> <b>device</b> ...|$|R
5000|$|The Apple PowerBook series, {{introduced}} in October 1991, pioneered {{changes that are}} now de facto standards on laptops, such as room for a palm rest, and {{the inclusion of a}} <b>pointing</b> <b>device</b> (a trackball). The following year, IBM released its ThinkPad 700C, featuring a similar design (though with a distinctive red TrackPoint <b>pointing</b> <b>device).</b>|$|R
50|$|The game port, {{originally}} introduced on the Game Control Adapter, is a <b>device</b> <b>port</b> {{that was}} found on IBM PC compatible and other computer systems throughout the 1980s and 1990s. It was the traditional connector for joystick input, and occasionally MIDI devices, until replaced by USB in the 21st century.|$|R
5000|$|Laser pen - {{can be used}} in presentations as a <b>pointing</b> <b>device</b> ...|$|R
5000|$|Pointing mode: The stylus {{is used as}} a <b>pointing</b> <b>device</b> as above.|$|R
40|$|This report {{describes}} how the system supports the ability to indicate a specific point or region precisely in the frame-grabber's coordinate system through a <b>pointing</b> <b>device</b> and projected display. Relative <b>pointing</b> <b>devices</b> such as a mouse or trackball allow the user indirectly to position a cursor and make selections on the screen. The absolute position of the <b>pointing</b> <b>device</b> does not matter because the user dynamically calibrates it with the display by superimposing the cursor on desired screen points. With absolute <b>pointing</b> <b>devices,</b> such as a transparent digitizing tablet or touch screen, the user points directly to the screen, so the <b>pointing</b> <b>device</b> must be calibrated to map the pen or finger position to screen coordinates. The DigitalDesk uses absolute <b>pointing</b> <b>devices</b> because it aims {{to be as much}} like an ordinary desk as possible. When we use paper documents on an ordinary desk, we do not need to look at a video monitor to see where we are pointing: we simply point directly at the paper. The DigitalDesk requires a two step calibration process. First, absolute positions of the digitizing tablet must be mapped to positions on the display (e. g. to provide feedback when the user points at something). Second, positions on the display must be mapped to corresponding positions in the frame grabber (e. g. to support grabbing of selected areas on the desk). If finger tracking is used for pointing instead of a tablet, however, then only the second step is necessary. There are two ways to calibrate an absolute <b>pointing</b> <b>device</b> to the display: let us call them dynamic and static. A dynamic approach is only possible with certain device-display combinations; it continuously adjusts the pointer to the display, much as a person does when positioning a cursor on screen with a mouse [...] . ...|$|R
