256|1006|Public
25|$|BITS {{includes}} a built-in mechanism for error handling and recovery attempts. Errors {{can be either}} fatal or transient; either moves a job to the respective state. A transient error is a temporary error that resolves itself after some time. For a transient error, BITS waits {{for some time and}} then <b>retries.</b> For fatal errors, BITS transfers control of the job to the creating application, with as much information regarding the error as it can provide.|$|E
500|$|Thriller was reissued on October 16, 2001, in an {{expanded}} set titled Thriller: Special Edition. The original tracks were remastered and the album included a new booklet and bonus material, including the songs [...] "Someone in the Dark", [...] "Carousel" [...] and Jackson's original [...] "Billie Jean" [...] demo, {{as well as}} audio interviews with Jones and Temperton discussing the recording of the album. Sony also hired sound engineer and mixer Mick Guzauski to work with Jackson on creating 5.1-channel surround sound mixes of Thriller, {{as well as all}} his other albums, for release on the then-new Super Audio CD format. Despite numerous <b>retries,</b> the artist never approved any of the mixes. Consequently, Thriller was issued on SACD only in a stereo version.|$|E
6000|$|Curtis, so wrote I {{thirteen}} years ago, Tost it unfinished by, {{and left it}} so; Found lately, I have pieced it out, or tried, Since time for callid juncture was denied. Some of the verses pleased me, it is true, And still were pertinent,--those honoring you. [...] 200 These now I offer: take them, if you will, Like the old hand-grasp, when at Shady Hill We met, or Staten Island, in the days When life was its own spur, nor needed praise. If once you thought me rash, no longer fear; Past my next milestone waits my seventieth year. I mount no longer when the trumpets call; My battle-harness idles on the wall, The spider's castle, camping-ground of dust, Not without dints, and all in front, I trust. [...] 210 Shivering sometimes it calls me as it hears Afar the charge's tramp and clash of spears; But 'tis such murmur only as might be The sea-shell's lost tradition of the sea, That makes me muse and wonder Where? and When? While from my cliff I watch the waves of men That climb to break midway their seeming gain, And think it triumph if they shake their chain. Little I ask of Fate; will she refuse Some days of reconcilement with the Muse? [...] 220 I take my reed again and blow it free Of dusty silence, murmuring, 'Sing to me!' And, as its stops my curious touch <b>retries,</b> The stir of earlier instincts I surprise,-- Instincts, if less imperious, yet more strong, And happy in the toil that ends with song.|$|E
5000|$|... the <b>retry</b> section where {{policy on}} <b>retrying</b> {{messages}} {{that fail to}} get delivered at the first attempt is defined, ...|$|R
50|$|Additionally, the SMSC {{will go into}} a <b>retry</b> schedule, {{attempting}} to periodically deliver the SM without getting an alert. The <b>retry</b> schedule interval {{will depend on the}} original failure cause - transient network failures will result in short <b>retry</b> schedule, whereas out of coverage will typically result in a longer schedule.|$|R
40|$|Software Transactional Memory (STM) systems, if {{they support}} {{condition}} synchronization, typically do so through a <b>retry</b> mechanism. Using <b>retry,</b> a transaction explicitly self aborts and deschedules itself when it discovers that {{a precondition for}} its operation does not hold. The underlying implementation may then track the set of locations read by the <b>retrying</b> transaction, and refrain from scheduling the transaction for re-execution until at least one location in the set has been modified by another transaction. While <b>retry</b> is elegant and simple, the conventional implementation has several potential drawbacks that may limit both its efficiency and its generality. In this note, we present a <b>retry</b> mechanism based on Bloom filters that is entirely orthogonal to TM implementation. Our <b>retry</b> is compatible with hardware, software, and hybrid TM implementations, and has no impact on memory management or on the cache behavior of shared locations. It does, however, serialize writer transactions after their commit point when there are <b>retrying</b> transactions. We describe our mechanism and compare it to an optimized version of the conventional implementation...|$|R
50|$|Robustness {{is one of}} {{the main}} {{concerns}} upon which the specification is built, and as such resource management and connection/disconnection of devices becomes even more important than in wired USB. Packet loss and corruption are dealt with through timeouts as well as hardware buffering, guaranteed <b>retries</b> (as mentioned in the description of transfer models) and other flow control methods. If synchronism policies cannot be maintained, errors can be handled either by hardware or software (<b>retries,</b> maximum number of <b>retries</b> failure, failure recovery decisions and so on).|$|E
50|$|Persistence by default, with a {{programmable}} {{number of}} automatic <b>retries</b> if a file cannot be opened.|$|E
50|$|Rage Racer (1996), for the PlayStation. This game {{marked the}} début of the <b>retries</b> rule and {{customization}} aspects.|$|E
40|$|A {{new method}} to determin an optimal <b>retry</b> policy and {{for use in}} <b>retry</b> of fault {{characterization}} is presented. An optimal <b>retry</b> policy for a given fault characteristic, which determines the maximum allowable <b>retry</b> durations to minimize the total task completion time was derived. The combined fault characterization and <b>retry</b> decision, in which the characteristics of fault are estimated simultaneously with {{the determination of the}} optimal <b>retry</b> policy were carried out. Two solution approaches were developed, one based on the point estimation and the other on the Bayes sequential decision. The maximum likelihood estimators are used for the first approach, and the backward induction for testing hypotheses in the second approach. Numerical examples in which all the durations associated with faults have monotone hazard functions, e. g., exponential, Weibull and gamma distributions are presented. These are standard distributions commonly used for modeling analysis and faults...|$|R
50|$|<b>RETRY</b> - Red heart. Time Crystal - Red heart. <b>RETRY</b> causes {{everything}} in the world, including Blinx, to rewind to a point before Blinx lost a life.|$|R
40|$|Abstract—In this paper, {{we propose}} a content-aware <b>retry</b> limit {{adaptation}} scheme for video streaming over IEEE 802. 11 wireless LANs (WLANs). Video packets of different importance are unequally protected with different <b>retry</b> limits at the MAC layer. The loss impact of each packet {{is estimated to}} guide the selection of its <b>retry</b> limit. More <b>retry</b> numbers are allocated to packets of higher loss impact to achieve unequal error protection. Our scheme also analyzes the backoff time for each <b>retry</b> and then {{takes into account the}} estimated backoff time for retransmission scheduling. Experimental results show that our adaptation scheme can effectively mitigate the error propagation due to packet loss and assure the on-time arrival of packets for presentation, thereby improving video quality significantly...|$|R
5000|$|Interrupt {{transfers}} serve short transactions which demand {{high reliability}} and low latency. Maximum service period is guaranteed, as {{are a number}} of <b>retries</b> during said period.|$|E
50|$|The DMP utility {{does not}} take any time to switch over, {{although}} the total time for failover is dependent on how long the underlying disk driver <b>retries</b> the command before giving up.|$|E
50|$|The Court of Appeal <b>retries</b> {{the facts}} of a disputed case {{previously}} tried {{in a court of}} first instance. This is known as the double degree of jurisdiction (double degré de juridiction).|$|E
40|$|In this paper, {{we propose}} a content-aware <b>retry</b> limit {{adaptation}} scheme for video streaming over IEEE 802. 11 wireless LANs (WLANs). Video packets of different importance are unequally protected with different <b>retry</b> limits at the MAC layer. The loss impact of each packet {{is estimated to}} guide the selection of its <b>retry</b> limit. More <b>retry</b> numbers are allocated to packets of higher loss impact to achieve unequal error protection. Experimental {{results show that the}} proposed adaptation scheme can effectively mitigate the error propagation due to packet loss and assure the on-time arrival of packets for presentation, thereby improving video quality significantly. 1...|$|R
30|$|This paper {{evaluates the}} {{performance}} of the V 2 I fair access with a finite <b>retry</b> limit through constructing an analytical model. Firstly, a 2 -D Markov chain is developed to model the process of the DCF mechanism with a finite <b>retry</b> limit; the transmission probability with access parameters including the minimum window and the <b>retry</b> limit is derived based on the Markov chain. Then, considering the V 2 I unfair access problem, the relationship between the velocity and the transmission probability of a vehicle is derived. Based on the proposed model, given a finite <b>retry</b> limit, the minimum window of a vehicle can be determined according to its velocity. In the simulation, the proposed model is justified to be effective and the V 2 I fair access performance with a finite <b>retry</b> limit is evaluated through comparison.|$|R
30|$|This paper {{evaluates the}} {{performance}} of the vehicle-to-infrastructure (V 2 I) fair access with a finite <b>retry</b> limit through constructing an analytical model. Firstly, the process of the distributed coordination function (DCF) mechanism with a finite <b>retry</b> limit is described through developing a 2 -D Markov chain; based on the Markov chain, the transmission probability with the access parameters including the minimum window and the <b>retry</b> limit is derived. Then, considering the V 2 I unfair access problem, the relationship between the velocity and the transmission probability of a vehicle is derived. Based on the proposed model, given a finite <b>retry</b> limit, the minimum window of a vehicle can be determined according to its velocity. In the simulation, the proposed model is justified to be effective and the V 2 I fair access performance with a finite <b>retry</b> limit is evaluated through comparison.|$|R
50|$|DDS handles {{transfer}} chores: message addressing, data marshalling and demarshalling (so subscribers can be {{on different}} platforms from the publisher), delivery, flow control, <b>retries,</b> etc. Any node can be a publisher, subscriber, or both simultaneously.|$|E
5000|$|VGA-Copy {{was popular}} {{because it could}} often read {{erroneous}} floppies. It did so by automatically doing multiple read <b>retries</b> on errors. Furthermore, VGA-Copy could read floppy images and save them in a format with the extension [...]vcp.|$|E
50|$|Critical {{reaction}} to Stuntman varied. The game was hailed for its innovative gameplay and physics, but {{was criticized for}} being linear and requiring too many <b>retries.</b> The game was followed up with a sequel, titled, Stuntman: Ignition, in 2007.|$|E
5000|$|<b>Retry</b> (shortcut key R): Attempts the {{operation}} again. [...] "Retry" [...] made sense if the user could rectify the problem. For example, if the user simply forgot {{to close the}} drive latch, they could close it, <b>retry,</b> and the system would continue where it left off. On early hardware, <b>retrying</b> a disk read error would sometimes be successful, but as disk drives improved, this became far less likely, although the message itself appeared less often.|$|R
50|$|Blinx {{can hold}} any {{combination}} of REW, FF, PAUSE, REC or SLOW up {{to the number of}} Time Holders he possesses. He begins with three Time Holders, but you can gain up to 10 as the game progresses.The Time Control <b>RETRY</b> requires a special type of Time Holder, called a <b>Retry</b> Holder. Blinx begins the game with three <b>Retry</b> Holders, but can hold up to nine (an allusion to the lore that cats have nine lives).|$|R
5000|$|If the {{condition}} is not satisfied, the transaction manager will wait until another transaction has made a commit that affects {{the condition}} before <b>retrying.</b> This loose coupling between producers and consumers enhances modularity compared to explicit signaling between threads. [...] "Composable Memory Transactions" [...] took this a step farther with its <b>retry</b> command (discussed above), which can, at any time, abort the transaction and wait until some value previously read by the transaction is modified before <b>retrying.</b> For example: ...|$|R
5000|$|The game {{features}} infinite {{opportunities of}} <b>retries</b> {{in case the}} player loses one of the Vikings. Art director Samwise Didier has stated that the character design for [...] "Erik the Swift" [...] was based on childhood friend Michael Cripps.|$|E
5000|$|An Eiffel {{exception}} handler is defined using the rescue keyword. Within the rescue section, the retry keyword executes the routine again. For example, the following routine tracks {{the number of}} attempts at executing the routine, and only <b>retries</b> {{a certain number of}} times: ...|$|E
5000|$|In 2001, Guzauski {{worked with}} Michael Jackson to create 5.1-channel {{surround}} sound remixes of Thriller {{as well as}} all his other albums for release on the then new Super Audio CD format [...] yet despite numerous <b>retries</b> the artist never approved any of the mixes.|$|E
5000|$|... {{provides}} an authenticator-controlled authentication <b>retry</b> mechanism ...|$|R
40|$|Abstract—Video {{transport}} over wireless networks requires retransmissions {{to successfully}} deliver video data to a receiver {{in case of}} packet loss, leading to increased delay time for the data {{to arrive at the}} receiver. Delay constraint {{is one of the most}} important requirements in real-time applications. A video packet arriving later than the presentation time will become useless for the client. In this paper, we propose a cross-layer content-aware <b>retry</b> limit adaptation scheme for video streaming over IEEE 802. 11 wireless LANs. Video packets of different importance are unequally protected with different <b>retry</b> limits at the media access control (MAC) layer. The error propagation effect of each packet is estimated to guide the determination of its <b>retry</b> limit. More <b>retry</b> numbers are allocated to packets of higher loss impact to achieve unequal error protection. Our scheme also analyzes the backoff time for each <b>retry</b> and then takes into account the estimated backoff time for retransmission scheduling. Experimental results show that the proposed adaptation scheme can effectively mitigate the error propagation due to packet loss and assure the on-time arrival of packets for presentation, so as to improve video quality significantly. Index Terms—Cross-layer error protection, packet retransmis-sion, <b>retry</b> limit adaptation, video streaming, wireless video. I...|$|R
50|$|Instead of {{immediately}} <b>retrying</b> after a CAS fails, {{researchers have}} found that total system performance can be improved—in multiprocessor systems where many threads constantly update some particular shared variable—if threads that see their CAS fail use exponential backoff—in other words, wait a little before <b>retrying</b> the CAS.|$|R
50|$|The Turbo Dispatch {{application}} was initially restricted to employing the MASC protocol of the Transcomm Mobile Data Network. This protocol was adopted because it eliminates {{the complexity of}} <b>retries</b> which would result from employing a session based protocol on the radio modems e.g. Hayes or X.28.|$|E
5000|$|Copy {{directory}} recursively (...) , copy all file information ( [...] , {{equivalent to}} , =Data, =Attributes, =Timestamps, =Security=NTFS ACLs, =Owner info, =aUditing info), do not retry locked files (...) (the number of <b>retries</b> on failed copies {{default value is}} 1 million), preserve original directories' Timestamps ( [...] - requires version XP026 or later): ...|$|E
50|$|ClamWin has a virus {{database}} {{which is}} updated automatically when it detects {{connection to the}} Internet. A small balloon tip appears on the taskbar icon indicating completion status of the update process. It <b>retries</b> to establish connection with the server if it fails to download the updates first time.|$|E
50|$|There is a sixth Time Control, called <b>RETRY.</b> This Time Control {{cannot be}} {{triggered}} manually, it is triggered automatically when Blinx is knocked out by an enemy or lost to an infinite chasm. If Blinx holds no <b>RETRYs</b> {{when he is}} knocked out, the game is over.|$|R
50|$|<b>Retry</b> is a free-to-play retro-styled side-scrolling {{video game}} {{developed}} by Rovio LVL11 {{and published by}} Rovio Entertainment. Inspired by Flappy Bird, <b>Retry</b> has similar controls. The game was soft launched in Finland, Canada, and Poland in May 2014. The worldwide iOS and Android release was on October 22, 2014.|$|R
50|$|The Messaging {{specification}} defines Doorbells and Messages. Doorbells communicate a 16-bit event code. Messages transfer up to 4KiB of data, segmented into up to 16 packets {{each with}} a maximum payload of 256 bytes. Response packets must be sent for each Doorbell and Message request. The response packet status value indicates done, error, or <b>retry.</b> A status of <b>retry</b> requests the originator of the request to send the packet again. The logical level <b>retry</b> response allows multiple senders to access {{a small number of}} shared reception resources, leading to high throughput with low power.|$|R
