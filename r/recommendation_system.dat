1443|2102|Public
25|$|Many of CMUSV's alumni {{go on to}} work {{in nearby}} Silicon Valley {{companies}} including Google and Facebook. ECE PhD graduate Heng-Tze Cheng created the wide and deep learning system for <b>recommendation</b> <b>system</b> at Google. Faculty Joy Ying Zhang and research staff of Mobile Technologies (creator of Jibbigo) was acquired by Facebook.|$|E
25|$|Other {{innovations}} in enrollment practices, included allowing {{colleges and universities}} to admit students with good academic records but relatively low entrance-examination scores. Some colleges were allowed to try an experimental student <b>recommendation</b> <b>system</b> - fixed at 2 {{percent of the total}} enrollment for regular colleges and 5 percent for teachers' colleges - instead of the traditional entrance examination. A minimum national examination score was established for admission to specific departments at specially designated colleges and universities, and the minimum score for admission to other universities was set by provincial-level authorities. Key universities established separate classes for minorities. When several applicants attained the minimum test score, the school had the option of making a selection, a policy that gave university faculty and administrators a certain amount of discretion but still protected admission according to academic ability.|$|E
2500|$|The main {{types of}} social {{networking}} services contain category places (such as former school-year or classmates), means {{to connect with}} friends (usually with self-description pages), and a <b>recommendation</b> <b>system</b> linked to trust. One can categorize social-network services into three types: ...|$|E
5000|$|Some <b>recommendation</b> <b>systems</b> use {{existing}} garments {{to recommend a}} size, while others use measurements taken by the customer. <b>Recommendation</b> <b>systems</b> {{have been developed for}} products beyond garments, such as ring sizers. Examples of these <b>recommendation</b> <b>systems</b> include Find My Ring Size. [...] Others still take a combination of both measurements and existing garments (aka biometric sizing) and yet others add in style preference-related questions.|$|R
40|$|<b>Recommendation</b> <b>systems</b> {{have been}} studied {{actively}} since the 1990 s. Generally, <b>recommendation</b> <b>systems</b> choose one or more candidates from a set of candidates through a filtering process. Methods of filtering {{can be divided into}} two categories: collaborative filtering, in which candidates are chosen based on choices of other persons whose interests or tastes are similar, and content-based filtering, in which items are chosen based on the profile or action history of the recommendee. However, these methods share the same structure in the sense that both of them recommend items based on relevance degrees of items and references, as well as relevance degrees between the recommendee and each reference. Most discussions about <b>recommendation</b> <b>systems</b> focus on the methods of choosing recommended candidates; few focus on foundational concepts of <b>recommendation</b> conditions that <b>systems</b> must satisfy, and problems that current systems have compared with these conditions. In this paper, <b>recommendation</b> <b>systems</b> are reconsidered from the viewpoint of multi-criteria decision making. Conventional filtering methods (e. g., collaborative filtering and content-based filtering) are formulated as linear weighted sum type <b>recommendation</b> <b>systems.</b> Several properties of linear weighted sum type <b>recommendation</b> <b>systems</b> are identified and formulated from the viewpoint of voting...|$|R
40|$|Many <b>recommendation</b> <b>systems</b> {{have been}} built to aid {{software}} developers. Few have been evaluated using humanbased evaluation strategies. In studying situations where <b>recommendation</b> <b>systems</b> have been used or might be used, we have observed that issues related to trust are important to a developer’s acceptance of recommendations. In this position paper, we outline the trust issues that we have identified and suggest some mechanisms for promoting trust in <b>recommendation</b> <b>systems</b> aimed at software developers...|$|R
2500|$|In early 1987 efforts {{had begun}} to develop the key school from a preparatory school into a vehicle for {{diffusing}} improved curricula, materials, and teaching practices to local schools. Moreover, the appropriateness of a key school's role in the nine-year basic education plan was questioned by some officials because key schools favored urban areas {{and the children of}} more affluent and better educated parents. Changchun, Shenyang, Shenzhen, Xiamen, and other cities, and education departments in Shanghai and Tianjin were moving to establish a student <b>recommendation</b> <b>system</b> and eliminate key schools. In 1986 the Shanghai Educational Bureau abolished the key junior-middle-school system to ensure [...] "an overall level of education." [...] Despite the effort to abolish the [...] "Key Schools" [...] system, the practice still exists today under other names, and education inequality is still being widely criticized by some government officials and scholars.|$|E
5000|$|There {{is another}} way to {{personalize}} search results. In Bracha Shapira and Boaz Zabar's [...] "Personalized Search: Integrating Collaboration and Social Networks", Shapira and Zabar focused on a model that utilizes a <b>recommendation</b> <b>system.</b> This model shows results of other users who have searched for similar keywords. The authors examined keyword search, the <b>recommendation</b> <b>system,</b> and the <b>recommendation</b> <b>system</b> with social network working separately and compares the results in terms of search quality. The results show that a personalized search engine with the <b>recommendation</b> <b>system</b> produces better quality results than the standard search engine, and that the <b>recommendation</b> <b>system</b> with social network even improves more.|$|E
5000|$|Collaborative filtering: e.g., Digg, the Amazon Product <b>Recommendation</b> <b>System,</b> Yahoo! Answers, Urtak ...|$|E
40|$|With {{the growth}} {{of public and private}} data stores and the {{emergence}} of off-the-shelf data-mining technology, <b>recommendation</b> <b>systems</b> have emerged that specifically address the unique challenges of navigating and interpreting software engineering data. This book collects, structures and formalizes knowledge on <b>recommendation</b> <b>systems</b> in software engineering. It adopts a pragmatic approach with an explicit focus on system design, implementation, and evaluation. The book is divided into three parts: "Part I - Techniques" introduces basics for building recommenders in software engineering, including techniques for collecting and processing software engineering data, but also for presenting recommendations to users as part of their workflow. ?"Part II - Evaluation" summarizes methods and experimental designs for evaluating recommendations in software engineering. ?"Part III - Applications" describes needs, issues and solution concepts involved in entire <b>recommendation</b> <b>systems</b> for specific software engineering tasks, focusing on the engineering insights required to make effective recommendations. The book is complemented by the webpage rsse. org/book, which includes free supplemental materials for readers of this book and anyone interested in <b>recommendation</b> <b>systems</b> in software engineering, including lecture slides, data sets, source code, and an overview of people, groups, papers and tools with regard to <b>recommendation</b> <b>systems</b> in software engineering. The book is particularly well-suited for graduate students and researchers building new <b>recommendation</b> <b>systems</b> for software engineering applications or in other high-tech fields. It may also {{serve as the basis for}} graduate courses on <b>recommendation</b> <b>systems,</b> applied data mining or software engineering. Software engineering practitioners developing <b>recommendation</b> <b>systems</b> or similar applications with predictive functionality will also benefit from the broad spectrum of topics covered...|$|R
30|$|Movie <b>recommendation</b> <b>systems,</b> one of {{the most}} popular {{applications}} of UGC analysis, aim to suggest new movies to audiences based on their established preferences (generated from historical users’ contents). Most existing <b>recommendation</b> <b>systems</b> fall into two categories: collaborative filtering (CF) and content-based (CB) methods.|$|R
30|$|Hybrid <b>recommendation</b> <b>systems</b> are the integrative, parallel, or linear {{combinations}} of several <b>recommendation</b> <b>systems</b> {{with an effort}} {{to fill in the}} gaps of single <b>recommendation</b> <b>systems.</b> Top-N based collaborative filtering (TNCF) and majorizing similarity based collaborative filtering (MSCF) [18] proposed by Song are hybrid collaborative filtering approaches which integrate score similarity and property similarity. They first compute user similarity and select the top N nearest neighbors of the target user and then predict scores and provide recommendation. This method improves the accuracy, while it greatly increases the complexity of the computation.|$|R
5000|$|Track Suggestion - The {{site has}} some <b>recommendation</b> <b>system</b> to suggest popular routes ...|$|E
50|$|A Self <b>Recommendation</b> <b>System</b> {{will also}} be {{introduced}} to recruit more Prefects into the Board.|$|E
50|$|An Apple ID was {{required}} to access iTunes Ping, also known simply as Ping. iTunes Ping was a software-based, music-oriented social networking and <b>recommendation</b> <b>system</b> service developed and operated by Apple. Ping has been discontinued.|$|E
5000|$|... #Subtitle level 3: Search, {{search engines}} and <b>recommendation</b> <b>systems</b> ...|$|R
5000|$|... #Subtitle level 2: As {{business}} intelligence tools and <b>recommendation</b> <b>systems</b> ...|$|R
40|$|This chapter {{describes}} the concepts {{involved in the}} process of benchmarking of <b>recommendation</b> <b>systems.</b> Benchmarking of <b>recommendation</b> <b>systems</b> is used to ensure the quality of a research system or production system in comparison to other systems, whether algorithmically, infrastructurally, or according to any sought-after quality. Specifically, the chapter presents evaluation of <b>recommendation</b> <b>systems</b> according to <b>recommendation</b> accuracy, technical constraints, and business values {{in the context of a}} multi-dimensional benchmarking and evaluation model encompassing any number of qualities into a final comparable metric. The focus is put on quality measures related to recommendation accuracy, technical factors, and business values. The chapter first introduces concepts related to evaluation and benchmarking of <b>recommendation</b> <b>systems,</b> continues with an overview of the current state of the art, then presents the multi-dimensional approach in detail. The chapter concludes with a brief discussion of the introduced concepts and a summary...|$|R
50|$|Foodie.fm’s <b>recommendation</b> <b>system</b> {{relies on}} a patent-pending {{technology}} which learns from a user’s eating and buying habits and suggests groceries and recipes accordingly. The system also takes into account user profile settings which specifies food allergies, personal budget and dietary restrictions.|$|E
5000|$|The main {{types of}} social {{networking}} services contain category places (such as former school-year or classmates), means {{to connect with}} friends (usually with self-description pages), and a <b>recommendation</b> <b>system</b> linked to trust. One can categorize scial-network services into three types:.|$|E
50|$|Svensson and {{his team}} created a recipe <b>recommendation</b> <b>system,</b> European Food On-Line(EFOL), which equips with both direct (chatting with other user) and {{indirect}} navigation (collaborative filtering) approaches. Social Navigator was implemented as a Java servlet for modelling users' behavior and net-based communication usages.|$|E
40|$|The {{goal of this}} {{tutorial}} is {{to describe}} and synthesize the concepts and techniques used {{in the design of}} <b>recommendation</b> <b>systems</b> that can deal with user profiles. The development of such <b>recommendation</b> <b>systems</b> requires solutions of two sub problems: (i) the creation and maintenance of user profile, and; (ii) the appropriate use of user profiles. This work is a theoretical tutorial on this subject. This is a useful text for people who are interested in the theoretical foundations of modeling user profile and <b>recommendation</b> <b>systems.</b> This text presents illustrative diagrams that summarize the main components used in the modeling of user profile...|$|R
30|$|The {{evaluation}} of <b>recommendation</b> <b>systems</b> involves predictive accuracy and classification metrics.|$|R
40|$|<b>Recommendation</b> <b>systems</b> are {{important}} business applications with significant economic impact. In recent years, {{a large number}} of algorithms have been proposed for <b>recommendation</b> <b>systems.</b> In this paper, we describe an open-source toolkit implementing many recommendation algorithms as well as popular evaluation metrics. In contrast to other packages, our toolkit implements recent state-of-the-art algorithms as well as most classic algorithms...|$|R
50|$|In a <b>recommendation</b> <b>system</b> where {{everyone}} {{can give the}} ratings, people may give lots of positive ratings for their own items and negative ratings for their competitors. It is often necessary for the collaborative filtering systems to introduce precautions to discourage such kind of manipulations.|$|E
5000|$|A {{recommender}} system or a <b>recommendation</b> <b>system</b> (sometimes replacing [...] "system" [...] with a synonym such as platform or engine) is a subclass of information filtering system {{that seeks to}} predict the [...] "rating" [...] or [...] "preference" [...] that a user would give to an item.|$|E
50|$|Everyone's a Critic (EaC) was a film {{community}} website. It {{began as}} an experiment utilizing a collaborative filtering algorithm to obtain film recommendations from people who share similar tastes in film. Over time, this <b>recommendation</b> <b>system</b> website has grown into an internet community of cinephiles, critics and reviewers.|$|E
40|$|Abstract—Social {{networking}} sites employ <b>recommendation</b> <b>systems</b> in {{contribution to}} providing better user experiences. The complexity in developing <b>recommendation</b> <b>systems</b> is {{largely due to}} the heterogeneous nature of social networks. This paper presents an approach to friend <b>recommendation</b> <b>systems</b> by using complex network theory, cognitive theory and a Pareto>optimal genetic algorithm in a two>step approach to provide quality, friend recommendations while simultaneously determining an individual’s perception of friendship. Our research emphasizes that by combining network topology and genetic algorithms, better recommendations can be achieved compared to each individual counterpart. We test our approach on 1, 200 Facebook users in which we observe the combined method to outper> form purely social or purely network>based approaches. Our preliminary results represent strong potential for developing link <b>recommendation</b> <b>systems</b> using this combined approach of personal interests and the underlying network. Index Terms—Centrality, Facebook, friend recommendations, Pareto optimization, social networks. I...|$|R
40|$|The {{need for}} <b>recommendation</b> <b>systems</b> to ease user navigations has become evident by growth of {{information}} on the Web. There exist many approaches of learning for Web usage-based <b>recommendation</b> <b>systems.</b> In hybrid <b>recommendation</b> <b>systems,</b> other knowledge resources, like content, semantics, and hyperlink structure of the Web site, have been utilized to enhance usage-based personalization systems. In this study, we introduce a new structure-based similarity measure for user sessions. We also apply two clustering algorithms on this similarity measure to compare it to cosine and another structure-based similarity measures. Our experiments exhibit that adding structure information, leveraging the proposed similarity measure, enhances the quality of recommendations in both methods...|$|R
30|$|<b>Recommendation</b> <b>systems</b> is a {{well-established}} research area [1, 4, 5], {{with a wide}} range of applications including e-commerce and e-health. Applications of data mining and <b>recommendation</b> <b>systems</b> to e-learning are also a well-researched area, with its own conferences. Much of the work done in this area is focused on academic learning recommendations, whereas we are focused on learning recommendations in an industrial setting.|$|R
50|$|Grooveshark was {{a web-based}} music {{streaming}} service {{owned and operated}} by Escape Media Group in the United States. Users could upload digital audio files, which could then be streamed and organized in playlists. The Grooveshark website had a search engine, music streaming features, and a music <b>recommendation</b> <b>system.</b>|$|E
50|$|Many of CMUSV's alumni {{go on to}} work {{in nearby}} Silicon Valley {{companies}} including Google and Facebook. ECE PhD graduate Heng-Tze Cheng created the wide and deep learning system for <b>recommendation</b> <b>system</b> at Google. Faculty Joy Ying Zhang and research staff of Mobile Technologies (creator of Jibbigo) was acquired by Facebook.|$|E
5000|$|According to TechCrunch, in 2012 {{the company}} {{realised}} [...] "they {{were sitting on}} a lot of interesting data which could be applied to restaurants, so they released what they say is an 'intelligent restaurant guide', Gvidi", a free mobile app for iOS and Android based on a sophisticated <b>recommendation</b> <b>system.</b>|$|E
50|$|<b>Recommendation</b> <b>systems</b> {{are used}} to {{recommend}} consumer items/product based on their purchasing or search history.|$|R
3000|$|... 2012 3 rd International Workshop on <b>Recommendation</b> <b>Systems</b> for Software Engineering, RSSE 2012 - Proceedings [...]...|$|R
40|$|Abstract — <b>Recommendation</b> <b>systems</b> take {{advantage}} of products and users information in order to propose items to targeted consumers. Collaborative <b>recommendation</b> <b>systems,</b> content-based <b>recommendation</b> <b>systems</b> and a few hybrid systems have been developed. We propose a dynamic and adaptive framework to overcome the usual issues of nowa-days systems. We present a method based on adaptation in {{time in order to}} provide recommendations in phase with the present instant. The system includes a dynamic adaptation to enhance the accuracy of rating predictions by applying a new similarity measure. We did several experiments on films data from Vodkaster, showing that systems incorporat-ing dynamic adaptation improve significantly the quality of recommendations compared to static ones...|$|R
