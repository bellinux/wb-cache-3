217|1010|Public
5|$|CAPS {{entreprise}} and Pathscale {{are also}} coordinating {{their effort to}} make hybrid multi-core parallel programming (HMPP) directives an open standard called OpenHMPP. The OpenHMPP directive-based programming model offers a syntax to efficiently offload computations on hardware accelerators and to optimize data movement to/from the hardware memory. OpenHMPP directives describe remote procedure call (RPC) on an accelerator device (e.g. GPU) or more generally a set of cores. The directives annotate C or Fortran codes to describe two sets of functionalities: the offloading of procedures (denoted codelets) onto a <b>remote</b> <b>device</b> and the optimization of data transfers between the CPU main memory and the accelerator memory.|$|E
5|$|Continuing their explorations, {{they reach}} a {{universe}} where humans are subservient to dogs. Stewie finally figures {{out how to}} modify the <b>remote</b> <b>device</b> {{so that they can}} return home; but Brian, overwhelmed by the thought of a world run by dogs like himself, is reluctant to leave and steals the remote. Stewie and Brian fight over the device, ultimately breaking it, which traps them in the alternative universe. In desperation, the two go to the universe's version of the Griffin family– who are all dogs except for their pet Brian, who is human– hoping to find a solution. The dog version of Stewie quickly confronts the two, revealing that he has also developed a universe-traveling device {{that would allow them to}} return to their own universe. Before Dog Stewie can fetch them his remote control, Human Stewie bites the dog version of his father, Peter, and is sent to the pound where he is to be euthanized later that day. The two Brians and Dog Stewie go to the human pound to free him, and both Stewie and Brian are sent back to their original universe. As they are being transported, human Brian, dreaming of a better life in a world of intelligent inhabitants, leaps into the inter-universe portal at the last moment and successfully makes it to the original universe with the other two. Excited about his new prospects in life, human Brian begins his optimistic adventure in a brand new universe but is quickly struck by a car.|$|E
25|$|The {{most recent}} {{development}} in lighting control is RDM (lighting), or <b>Remote</b> <b>Device</b> Management. This protocol allows for {{communication between the}} lighting controller and fixtures. With RDM, users can troubleshoot, address, configure, and identify fixtures from the RDM enabled lighting desk.|$|E
5000|$|Add {{your own}} <b>remote</b> <b>devices,</b> {{by getting a}} small service app {{installed}} on them.|$|R
50|$|Wireless bridges: Can {{be used to}} join LANs or connect <b>remote</b> <b>devices</b> to LANs.|$|R
5000|$|Lighting - wireless, {{programmable}} {{lighting control}} systems, controlled by switches, dimmers, keypads and <b>remote</b> <b>devices.</b>|$|R
25|$|These can be {{used for}} data-logging {{applications}} in remote areas, now a common practical use for Iridium's services. Some types of buoys, such as those used for the tsunami warning system, use Iridium satellites to communicate with their base. The <b>remote</b> <b>device</b> is programmed to call or send SBD (Short burst data, see below) messages to the base at specified intervals, or it can be set to accept calls in order for it to offload its collected data. Most of these units can be connected to a handset and used as a fixed telephone.|$|E
25|$|The {{lighting}} controller {{is connected to}} the dimmers (or directly to automated luminaires) using a control cable or wireless link (e.g. DMX512) or network, allowing the dimmers which are bulky, hot and sometimes noisy, to be positioned away from the stage and audience and allowing automated luminaires to be positioned wherever necessary. In addition to DMX512, newer control connections include RDM (<b>remote</b> <b>device</b> management) which adds management and status feedback capabilities to devices which use it while maintaining compatibility with DMX512; and Architecture for Control Networks (ACN) which is a fully featured multiple controller networking protocol. These allow the possibility of feedback of position, state or fault conditions from units, whilst allowing much more detailed control of them.|$|E
500|$|Within the {{operating}} systems research community, {{as well as}} the commercial Unix world, other attempts at achieving distributed computing and remote filesystem access were made concurrently with the Plan 9 design effort. These included the Network File System and the associated vnode architecture developed at Sun Microsystems, and more radical departures from the Unix model such as the Sprite OS from UC Berkeley. Sprite developer Brent Welch points out that the SunOS vnode architecture is limited compared to Plan 9's capabilities in that it does not support <b>remote</b> <b>device</b> access and remote inter-process communication cleanly, even though it could have, had the preexisting UNIX domain sockets (which [...] "can essentially be used to name user-level servers") been integrated with the vnode architecture.|$|E
5000|$|Access {{and display}} {{information}} about the data communication network including terminal communication lines and <b>remote</b> <b>devices</b> ...|$|R
5000|$|Version {{detection}} - Interrogating {{network services}} on <b>remote</b> <b>devices</b> to determine application name and version number.|$|R
5000|$|Consumer equipment: barcode scanner, printer, CD/DVD/Blu-ray <b>devices,</b> <b>remote</b> control <b>devices</b> ...|$|R
2500|$|While {{software}} {{can be considered}} as intellectual property like screenplays and protected by copyrighting, some software processes {{can be considered as}} [...] "inventions" [...] and protected by patent. BMC owns software patents. For example, BMC owns a patent for [...] "GUI interpretation technology for client/server environment" [...] developed by software engineers David T. Sulcer, Lawrence M. Ackner, and Donna S. Lowe-Cleveland which involves complex signals processing; patent attorneys trying to describe this process wrote: [...] "receiving a message from a <b>remote</b> <b>device,</b> the message comprising either a definition, a state change, a command or some combination thereof; processing the definition (if any) before the state change (if any); and processing the state change (if any) before processing the command (if any)." ...|$|E
5000|$|ITU-T Recommendation H.283, <b>Remote</b> <b>device</b> control {{logical channel}} transport.|$|E
5000|$|<b>Remote</b> <b>device</b> {{management}} of Windows Phone similar to {{management of}} Windows PCs ...|$|E
50|$|Slow {{broadband}} connection speeds can make streaming large files, such as movies to mobile and other <b>remote</b> <b>devices</b> difficult.|$|R
50|$|TML can {{process data}} from simple {{stationary}} in-situ transducers to high bandwidth dynamic <b>remote</b> <b>devices</b> {{such as a}} synthetic aperture radar system.|$|R
40|$|Document Type: Proceedings Paper[[abstract]]The {{purpose of}} this study is to propose an {{intelligent}} extracting web content agent on the internet. This agent can automatically collect the web pages, generate several kinds of web pages templates, extract and simplify the appropriate web pages, provide the headlines for remote users via the <b>remote</b> <b>devices.</b> Via the proposed agent, the remote users can easily get the web information without large network bandwidth and read them by the <b>remote</b> <b>devices</b> conveniently...|$|R
5000|$|The <b>remote</b> <b>device</b> {{receives}} remote {{fault and}} stops sending frames and continuously generates idle frames ...|$|E
50|$|Esprida is {{a privately}} held company that creates and markets <b>remote</b> <b>device</b> {{management}} middleware {{built on a}} service-oriented architecture (SOA) platform.|$|E
5000|$|Connectivity for: {{self-service}} kiosks, vending machines, ATMs, POS (Point of Sale), digital signage, security cameras/DVRs, <b>remote</b> <b>device</b> monitoring, alarm panels, VoIP (Voice over IP) ...|$|E
5000|$|SMBus 2.0 Messages (between the System Firmware, Alert Sending <b>Device,</b> <b>Remote</b> Control <b>Device,</b> and Sensors) ...|$|R
5000|$|Mobile Device Management {{capabilities}} such {{as remote}} provisioning, inventory collection (including location-based data), software management, <b>remote</b> wipe, <b>device</b> lock, <b>remote</b> control, <b>device</b> configuration, and Microsoft Exchange ActiveSync management.|$|R
40|$|The aim of {{this project}} is to design a cheap and simple modular {{wireless}} system. Its purpose is wireless control of <b>remote</b> <b>devices</b> and transmission of short information blocks (temperature data, status of controlled devices…). The whole system is controlled by a PC. It utilizes hybrid wireless modules for transmission of information and control of <b>remote</b> <b>devices.</b> The project shows practical usage of a digital thermometer communicating via a 1 -Wire bus. A solar cell {{in conjunction with a}} DC/DC up converter is used to power low-power temperature sensor device...|$|R
50|$|The NMT {{protocols}} {{are used}} to issue state machine change commands (e.g. to start and stop the devices), detect <b>remote</b> <b>device</b> bootups and error conditions.|$|E
50|$|The SDO {{protocol}} is {{used for}} setting and for reading values from the object dictionary of a <b>remote</b> <b>device.</b> The device whose object dictionary is accessed is the SDO server and the device accessing the <b>remote</b> <b>device</b> is the SDO client. The communication is always initiated by the SDO client. In CANopen terminology, communication is viewed from the SDO server, so that a read from an object dictionary results in an SDO upload and a write to a dictionary entry is an SDO download.|$|E
50|$|Mobile {{gambling}} {{refers to}} playing {{games of chance}} or skill for money by using a <b>remote</b> <b>device</b> such as a tablet computer, smartphone or a mobile phone with a wireless Internet connection.|$|E
50|$|Teleprocessing {{monitors}} such as IBM's CICS and {{third-party software}} such as Remote DUCS (display unit control system) and Westi platforms used Bisync line control {{to communicate with}} <b>remote</b> <b>devices.</b>|$|R
50|$|Jenoba: Appears in episode 23. Powers include homing lava balls {{from the}} fingers, {{summoning}} giant rock pillars, three <b>remote</b> <b>devices</b> that harvest lava {{from beneath the}} earth's crust, flight, and mouth flames.|$|R
50|$|The IBM 7701, the IBM 7702 Magnetic Tape Transmission Terminal, the IBM 1013 Card Transmission Terminal, and the IBM 7710 and IBM 7711 Data Communication Units {{were among}} the <b>remote</b> <b>devices</b> {{supported}} by STR.|$|R
5000|$|The loop {{can often}} power the <b>remote</b> <b>device,</b> with power {{supplied}} by the controller, thus removing need for power cabling. Many instrumentation manufacturers produce 4-20 mA sensors which are [...] "loop powered".|$|E
50|$|ActiveSync for MDaemon {{includes}} {{support for}} {{the latest version of}} Microsoft Exchange ActiveSync (EAS) (2.5, 12.1, 14.0, and 14.1 protocols), which is a separately licensed ActiveSync (AirSync) server. ActiveSync provides native synchronization of a user's email, calendar, contacts, and tasks data between the MDaemon server, WorldClient (Web-Based Email Client) or Outlook (using the Outlook Connector plug-in) account and an ActiveSync capable device. Other features include: customizable device IT policies, <b>remote</b> <b>device</b> wipe, <b>remote</b> <b>device</b> soft wipe, autodiscovery, multiple folder synchronization, global address lookup, SSL encrypted transmissions, device whitelists and blacklists, forgetting inactive devices, and device protocol restrictions.|$|E
5000|$|Remote {{repair of}} a damaged {{application}} - By ‘Enforcing’ a Base Image, IT can ensure a <b>remote</b> <b>device</b> exactly matches the primary copy {{in the data}} center, and repairing OS or core application problems.|$|E
40|$|This paper {{presents}} a design scheme of portable AUV <b>remote</b> control <b>device</b> based on MOOS-IvP architecture. The <b>remote</b> control <b>device</b> takes the raspberry pi microcomputer {{as the main}} controller. The handle {{of the game is}} the key module. It communicates with AUV through the wireless bridge. Lithium battery supply power through the sub voltage module. The software use the Ubuntu operating system based on the MOOS-IvP structure. Write the C codes in the code block compiler environment. Complete the transmission of control commands and other functions. The <b>remote</b> control <b>device</b> achieve the portable AUV&# 39;s forward, backward, turning, speed and other remote control functions. Experiments show that the <b>remote</b> control <b>device</b> achieve the design objectives and with high performance...|$|R
5000|$|The <b>remote</b> <b>devices</b> {{have been}} dubbed Princeton Eggs, a {{reference}} to the coinage electrogaiagram, a portmanteau of electroencephalogram and Gaia. Supporters and skeptics have referred to the aim of the GCP as being analogous to detecting [...] "a great disturbance in The Force." ...|$|R
50|$|RS-485 is {{also used}} in {{building}} automation as the simple bus wiring and long cable length is ideal for joining <b>remote</b> <b>devices.</b> It {{may be used to}} control video surveillance systems or to interconnect security control panels and devices such as access control card readers.|$|R
