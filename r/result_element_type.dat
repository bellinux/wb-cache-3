0|6752|Public
40|$|This paper {{presents}} {{an overview of}} the results of experimental evaluations of candidate designs for igniters, injectors, and propellant-cooled thrust chambers applicable to restartable high-performance, high-reliability upper-stage engines and to pulsing-type reaction control engines (RCE). Injection <b>element</b> <b>types</b> best suited for liquid, gas, and liquid/gas phase propellant supply are identified. The <b>resulting</b> interactions between <b>element</b> <b>type,</b> combustion efficiency, and chamber wall heating are compared. The distinction between thrust chamber design requirements for upper stage vs RCE applications as measured by cycle life requirements is translated into design configurations consisting of all-film-cooled, all-regeneratively-cooled, and composites of the two cooling approaches. The validity of the design approaches is confirmed by data from engine durability testing involving over 90, 000 starts and 9, 000 thermal cycles on RCE-type designs and multiple long-duration burns (up to 2, 000 sec) on regeneratively cooled upper-stage designs...|$|R
40|$|Strain {{energy release}} rates were {{computed}} along straight delamination fronts of Double Cantilever Beam, End-Notched Flexure and Single Leg Bending specimens using the Virtual Crack Closure Technique (VCCT). Th e results {{were based on}} finite element analyses using ABAQUS# and ANSYS# and were calculated from the finite <b>element</b> <b>results</b> using the same post-processing routine to assure a consistent procedure. Mixed-mode strain energy release rates obtained from post-processing finite elem ent results were in good agreement for all <b>element</b> <b>types</b> used and all specimens modeled. Compared to previous studies, the models made of s olid twenty-node hexahedral elements and solid eight-node incompatible mode <b>elements</b> yielded excellent <b>results.</b> For both codes, models made of standard brick elements and elements with reduced integration did not correctly capture {{the distribution of the}} energy release rate acr oss the width of the specimens for the models chosen. The <b>results</b> suggested that <b>element</b> <b>types</b> with similar formulation yield matching results independent of the finite element software used. For comparison, m ixed-mode strain energy release rates were also calculated within ABAQUS#/Standard using the VCCT for ABAQUS# add on. For all specimens mod eled, mixed-mode strain energy release rates obtained from ABAQUS# finite <b>element</b> <b>results</b> using post-processing were almost identical to re sults calculated using the VCCT for ABAQUS# add on...|$|R
30|$|Initiating: Creating a new Vignette <b>Element</b> <b>Type</b> et' as a {{sub-type of}} another <b>element</b> <b>type</b> et.|$|R
5000|$|... #Subtitle level 3: Count the Input Data <b>Element</b> <b>Types,</b> the Data entity Types Referenced, and the Output Data <b>Element</b> <b>Types</b> ...|$|R
50|$|An HTML {{attribute}} is a modifier of an HTML <b>element</b> <b>type.</b> An attribute either modifies {{the default}} functionality of an <b>element</b> <b>type</b> or provides functionality to certain <b>element</b> <b>types</b> unable to function correctly without them. In HTML syntax, an attribute {{is added to}} an HTML start tag.|$|R
40|$|Eddy current sensors {{can detect}} the {{position}} and movement of metal parts without direct contact. The magnetic fields of these sensors can penetrate protective metal enclosures when designed and applied appropriately. Thus particularly robust solutions for industrial applications are possible, e. g. tracking objects electrically like conductive or ferromagnetic work pieces (device currently being tested) during a treatment process under difficult production conditions. The disadvantage of a test set up where the sensor and the tested specimen are surrounded by equipment and enclosures is reduced sensor sensitivity, this combined with different test piece material properties and tolerances adversely influences the measurements. In order to evaluate the performance of an eddy current sensor, a sensitivity analysis for selected measurement frequencies are necessary. Experimental studies {{on the subject of}} sensor sensitivity under production conditions are difficult and usually not feasible due to the costs involved. Therefore, using a virtual 3 D model such effects were simulated using the finite element program ANSYS. The sensor output is the phase angle between voltage and current of the sensor coil. The use of the magnetic field strength to determine this phase angle yielded results in accordance with the experimental trends. The problem is the large differences in the geometric dimensions, such as the sensor size compared to effective magnetic air gaps. Magnetic permeability and electrical conductivity are the relevant parameters for the eddy current sensors. In experimental tests, these parameters were determined, also as a function of temperature. It was followed by the simulation of the sensor characteristics by varying different parameters affecting the sensor signal. The <b>results</b> obtained with <b>element</b> <b>type</b> SOLID 117 were highly dependent on finite element meshing. But requires significantly less computational effort than an <b>element</b> <b>type</b> SOLID 236, which was used to verify selected results based on SOLID 117 <b>element</b> <b>type.</b> The <b>result</b> of the simulations is the influence of the considered parameters on the achievable accuracy in the detection of the device under test during the process of machining, individually or in combination...|$|R
50|$|Some {{attribute}} types function differently {{when used}} to modify different <b>element</b> <b>types.</b> For example, the attribute name {{is used by}} several <b>element</b> <b>types,</b> but has slightly different functions in each.|$|R
50|$|Several basic {{attributes}} types {{have been}} recognized, including: (1) required attributes, needed {{by a particular}} <b>element</b> <b>type</b> for that <b>element</b> <b>type</b> to function correctly; (2) optional attributes, used to modify the default functionality of an element type; (3) standard attributes, supported by {{a large number of}} element types; and (4) event attributes, used to cause <b>element</b> <b>types</b> to specify scripts to be run under specific circumstances.|$|R
30|$|The {{functional}} semantics of the <b>element</b> <b>types</b> {{associate with}} TAG:PCDATA {{the set of}} all functions from E to tag:PCDATA. For a non-elementary <b>element</b> <b>type</b> T, the semantics of TAG:T are also functional, but the functions are more complex.|$|R
5000|$|The {{remaining}} bytes in {{the stream}} are encoded using one of four <b>element</b> <b>types.</b> The <b>element</b> <b>type</b> is encoded in the first byte (tag byte) of the element. The two lower bits of this byte is the type code: ...|$|R
40|$|An eight-node {{rectangular}} membrane element with {{a central}} circular hole has been developed using complex potentials to define stress and strain functions. This new <b>element</b> <b>type</b> can be combined with the conventional elements, e. g., isoparametric elements, with no modifications required. Two numerical examples were employed to illustrate the superiority and versatility of the proposed <b>element</b> <b>type.</b> The <b>results</b> obtained using the said <b>element</b> <b>type</b> are closer to the theoretical results as compared with those obtained by similar <b>types</b> of <b>elements.</b> link_to_subscribed_fulltex...|$|R
40|$|A {{model is}} {{formulated}} for estimating {{the performance and}} chamber heat transfer in rocket injectors/chambers operating with gaseous H 2 -O 2 propellants. The model quantifies the combustion performance and chamber heat flux for variables such as chamber length, <b>element</b> <b>type,</b> <b>element</b> area ratio, impingement angle, thrust/element, mixture ratio, moment ratio, element spacing, and physical size. Design equations are given and curves are plotted for evaluation of combustion performance in injectors comprised of F-O-F triplet, premix, coaxial and swirl coaxial <b>element</b> <b>types.</b> Curve plots and equations are also included for estimation of the chamber wall heat fluxes generated by these <b>element</b> <b>types...</b>|$|R
5000|$|A new list <b>element</b> <b>type,</b> the [...] <b>element</b> <b>type,</b> {{were to be}} {{included}} to specifically designate a list as a navigation list. This would have been useful in creating nested menus, which are currently created by {{a wide variety of}} means like nested unordered lists or nested definition lists.|$|R
40|$|Java {{applications}} often cast types {{when they}} use the standard library container classes because their <b>element</b> <b>types</b> are Object, and the casting degrades the performance. To cope with this problem, we are developing a bytecode optimizer that eliminates the casts by specializing the container <b>element</b> <b>types.</b> Our optimizer creates a container class specializing its <b>element</b> <b>type</b> for the target program, rewrites the target program so that it uses the specialized class instead of the standard library container class, and then eliminates the casts. The preliminary evaluation using SPECjbb 2005 showed that the cast elimination improves the performance by 14. 8 %...|$|R
40|$|The {{application}} of dual phase steels (DPS) such as DP 600 {{in the form}} of thin-walled structure in automotive components is being continuously increased as vehicle designers utilize modern steel grades and low weight structures to improve structural performance, make automotive light and reinforce crash performance. Preventing cost enhancement of broad investigations in this area can be gained by using computers in structural analysis in order to substitute lots of experiments with finite element analysis (FEA). Nevertheless, it necessitates to be certified that selected method including <b>element</b> <b>type</b> and solution methodology is capable of predicting real condition. In this paper, numerical and experimental studies are done to specify the effect of <b>element</b> <b>type</b> selection and solution methodology on the <b>results</b> of finite <b>element</b> analysis in order to investigate the energy absorption behavior of a DP 600 thin-walled structure with three different geometries under a low impact loading. The outcomes indicated the combination of implicit method and solid elements is in better agreement with the experiments. In addition, using a combination of shell <b>element</b> <b>types</b> with implicit method reduces the time of simulation remarkably, although the error of results compared to the experiments increased to some extent...|$|R
3000|$|The runtime of {{executing}} {{an operation}} o ∈O {{on a list}} l ∈L depends on the <b>element</b> <b>type</b> t(l) ∈T, the data structure d ∈D used to implement the list, and its size s_l∈N^+. To estimate this runtime, we perform measurements for data structures and <b>element</b> <b>types</b> with all operations and list sizes s∈[1,s [...]...|$|R
5000|$|Multiple {{and mixed}} <b>element</b> <b>types,</b> i.e triangles, quadrilaterals, tetrahedra, prisms and hexahedra; ...|$|R
5000|$|XML {{defines a}} {{simplified}} subset of SGML {{that focuses on}} providing an open vocabulary of <b>element</b> <b>types</b> for data modeling and establishes precise expectations for how the marked-up data is read and subsequently fed to another software application for further processing, but does not assign semantics to the <b>element</b> <b>types</b> or establish expectations for how the data is processed.|$|R
30|$|Cloning: Cloning an {{existing}} Vignette <b>Element</b> <b>Type</b> et {{with a different}} name et'.|$|R
50|$|In this {{accumulated}} {{incidence matrix}} representation the diagonal entries represent the total counts of either <b>element</b> <b>type.</b>|$|R
30|$|Now we {{will define}} (XML) <b>element</b> <b>types,</b> {{following}} the established type system T _reg over B. In order to distinguish tags used in T _reg from element tags we will suppose for each tag {{used in the}} elementary types tag:T or tag: {{the existence of the}} TAG name denoting an associate <b>element</b> <b>type</b> 10. The same holds for any tag ∈ NAME. Thus, NAME contains both tags and TAGs.|$|R
40|$|Extensible Markup Language (XML) and Extensible Stylesheet Language (XSL) are newly {{developed}} Internet protocols. Development of custom data entry forms requires significant programming. Visual design tools and a modifiable, template-driven approach may facilitate this process. However, these approaches generally require the predefinition of data form <b>element</b> <b>types.</b> This paper describes an approach enabling post hoc definition of elementary and composite data entry form <b>element</b> <b>types</b> using XML/XSL technologies...|$|R
50|$|In {{structural}} <b>typing,</b> an <b>element</b> {{is considered}} to be compatible with another if, for each feature within the second <b>element's</b> <b>type,</b> a corresponding and identical feature exists in the first <b>element's</b> <b>type.</b> Some languages may differ on the details, such as whether the features must match in name. This definition is not symmetric, and includes subtype compatibility. Two types are considered to be identical if each is compatible with the other.|$|R
30|$|The {{organization}} of the paper is as follows. The next section describes the definition problem of the dynamic analysis of beams to a moving oscillator on tensionless elastic foundation and the governing equations of motion are also derived in this section. The contact element of beams consisting of the first beam <b>element</b> <b>type</b> “full-bonded” contact, the second beam <b>element</b> <b>type</b> “full-unbonded” contact and the third beam <b>element</b> <b>type</b> “half-bonded” contact to the elastic foundation is presented in “Contact element” to determine the contact force of the beam and foundation. Numerical validations are given in detail in “Numerical results” including the verified example compared with the results in the literature and dynamic responses of the beam numerically investigated. Finally, some concluding remarks are also presented.|$|R
30|$|Since {{the number}} of Vignette <b>Element</b> <b>Types</b> can {{increase}} considerably over time, these relationships help in organizing them within the repository.|$|R
50|$|Arrays and structs can {{be viewed}} as {{predefined}} generic types. Every usage of an array or struct type instantiates a new concrete type, or reuses a previous instantiated <b>type.</b> Array <b>element</b> <b>types</b> and struct <b>element</b> <b>types</b> are parameterized types, which are used to instantiate the corresponding generic type. All this is usually built-in in the compiler and the syntax differs from other generic constructs. Some extensible programming languages try to unify built-in and user defined generic types.|$|R
40|$|International audienceIn {{this paper}} we discuss how to present the <b>result</b> of searching <b>elements</b> of any <b>type</b> from XML {{documents}} relevant to some information need (relevance-oriented search). As the <b>resulting</b> <b>elements</b> can contain each other we show an intuitive way of organizing the <b>resulting</b> list of <b>elements</b> in several ranked lists at different levels such that each element is presented only one time. Depending {{on the size of}} such ranked lists its presentation is given by a structure tree for small lists or by a sequence of pointers for large lists. In both cases the textual content of the implied elements is given. We also analyse the size of ranked lists in a real collection of XML documents...|$|R
50|$|DTD markup {{declarations}} declare which <b>element</b> <b>types,</b> attribute lists, entities, and notations {{are allowed}} {{in the structure of}} the corresponding class of XML documents.|$|R
50|$|An <b>element</b> <b>type</b> {{declaration}} defines {{an element}} and its possible content. A valid XML document contains only {{elements that are}} defined in the DTD.|$|R
5000|$|HTML is an {{application}} of SGML for hypertext document presentations, that assigns specific semantics and processing expectations to a fixed set of <b>element</b> <b>types.</b>|$|R
50|$|Non-functional sizing {{requires}} {{recognition of}} similar artifacts of software {{used to measure}} functional size, for example: data <b>element</b> <b>types</b> (DETs) and file types referenced (FTRs).|$|R
5000|$|An {{attribute}} list specifies {{for a given}} <b>element</b> <b>type</b> the list of all possible attribute associated with that type. For each possible attribute, it contains: ...|$|R
40|$|Chunk {{decomposition}} is {{an aspect}} of problem solving that involves decomposing a pattern into its component parts in order to regroup them into a new pattern. Previous work suggests that {{the primary source of}} difficulty in chunk decomposition is whether a problem’s solution requires removing a part that is a meaningful perceptual pattern (termed a chunk) or not (a non-chunk). However, the role of spatial overlap (crossed relation or not) has been ignored in this line of research. Here, we dissociated the role of <b>element</b> <b>type</b> and crossed relation in chunk decomposition problems by employing a Chinese character transformation task. We replicated the finding that when the to-be-removed element is a non-chunk, the problem is more difficult to solve than when the element is a chunk. However, this result held only if the elements had no crossed relation. Relative to non-crossed relation, problems that involved removing elements that overlapped with the remaining character were more difficult to solve irrespective of the <b>element</b> <b>type.</b> We conclude that both <b>element</b> <b>type</b> and crossed relation can cause the difficulty of chunk decomposition and crossed relation plays more important role in preventing people from finding insightful ways to decompose chunk relative to <b>element</b> <b>type...</b>|$|R
40|$|The {{first part}} of this study {{discusses}} the influence of <b>element</b> <b>type</b> on parameters such as accuracy of the FE simulation, simulation time and convergence. Guidelines on optimal implementation of <b>element</b> <b>types</b> are proposed. It is shown that an inappropriate choice of <b>element</b> <b>type</b> <b>results</b> in difficulties in convergence of the simulation or gives rise to problems such as shear locking in elements. In the second part of this study a series of finite element simulations using the Hill’ 48 planar anisotropic yield criterion and a standard U-shape forming test based on the NUMISHEET’ 93 benchmark was performed. The effectiveness of different isotropic hardening laws and different contact models is investigated. The most appropriate hardening and contact definitions are defined from the viewpoint of optimal springback prediction. Finally, the influence of the orientation of sheet strips relative to the rolling direction on springback angles is evaluated...|$|R
30|$|Properties of {{elements}} {{contained in the}} Revit® model {{must be able to}} be communicated to the Unity 3 D game such as parametric properties or <b>element</b> <b>type</b> properties.|$|R
50|$|Units in Ravenmark {{are also}} known as Elements. All {{elements}} are classified into one of five types - infantry, ranged, cavalry, polearms and support. Each <b>element</b> <b>type</b> has a damage advantage on another <b>type,</b> less support <b>elements</b> who are neutral to all other <b>element</b> <b>types.</b> Infantry deals more damage to polearm elements, while polearm elements deal more damage to cavalry. Cavalry deals more damage to ranged elements and ranged elements deal more damage to infantry. Certain units such as mounted archers are classified as ranged elements and not cavalry.|$|R
