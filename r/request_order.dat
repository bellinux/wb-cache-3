13|1171|Public
50|$|Another big {{responsibility}} Finley supervised was {{the ticket}} sales, including ticket discounts to Oakland A's {{fans and the}} distribution of playoff and World Series tickets. During the period between 1971 and 1975, Carl and his daughter Nancy would personally handle every post-season ticket <b>request</b> <b>order</b> by hand, and they would disburse the tickets from a secret location each year they had a game, 1971* 1972*, 1973*, 1974* and 1975*. If assistance was needed at this top-secret location, the employee had to promise 'confidentiality'.|$|E
30|$|The block layer for disk based storage (HDDs) {{has still}} {{remained}} highly volatile as the mechanical disks cannot support multiple hardware queues {{due to their}} physical constraints. Therefore, HDDs can have multiple software queues but single Hardware queue. The objective function of block layer for disk based storage is to optimize the <b>request</b> <b>order</b> from various applications in-order to recreate sequentiality of disk access and manage the I/O bandwidth for every application. BID schemes utilize multiple software queues in the block layer, but single hardware queue for delivering SDS solutions for disk based storage devices.|$|E
40|$|The goal of {{concurrency}} control is {{to guarantee the}} correct interleaving of the operations. ROLL (<b>Request</b> <b>Order</b> Linked List) is a {{concurrency control}} method which can avoid transaction abort and minimize transaction restart. In its basic form, it requires predeclaration before a transaction is scheduled, similar to other conservative concurrency control methods, including conservative 2 PL (2 -Phase Locking), conservative TO (Timestamp Ordering), and conservative SGT (Serialization Graph Testing). For dynamic transactions, these sets may not be known until some operations are processed. To apply conservative concurrency control method to dynamic transactions, overdeclaration is used, although it lowers the concurrency. The goal {{of this paper is}} to develop alternative algorithms to process dynamic transactions in the ROLL setting...|$|E
5000|$|Program order: Program order {{guarantees}} that each process issues a memory <b>request</b> <b>ordered</b> by its program.|$|R
2500|$|... 20 May: The {{special court}} refuses Kanimozhi and Kumar's bail <b>requests,</b> <b>ordering</b> their arrest to prevent witness-tampering.|$|R
50|$|Literature Servant: {{distributes}} {{literature in}} stock, takes requests for special items, or yearly items {{for use by}} congregation members. May place special <b>request</b> <b>orders</b> for publishers in their own Kingdom Hall.|$|R
40|$|This study proposes DC-ROLL, a new {{approach}} to concurrency control in a distributed environment based on the <b>Request</b> <b>Order</b> Linked List (ROLL) [P 91] and the Datacycle architecture [H+ 87]. DC-ROLL allows for more flexibility in levels of concurrency and avoids certain performance bottlenecks of the traditional two-phase locking. Unlike the original Datacycle architecture where the entire database along with concurrency control structures is pumped to access managers (sites), the DC-ROLL architecture only requires broadcasting the ROLL, the database concurrency control object. As a result, DC-ROLL has much lower network bandwidth requirements. DC-ROLL eliminates the burden of concurrency control from the sites storing the data being accessed. Instead, all concurrency control functions are handled at the sites where transactions run. DC-ROLL also simplifies database consistency management in replicated environments since no centralized (primary) concurrency control manager is needed. 1. In [...] ...|$|E
40|$|The {{objective}} of a spare part support operation is {{to fulfill the}} part <b>request</b> <b>order</b> with different service contracts in the agreed response time. With this objective to achieve different service targets for multiple service contracts and the considerations of inventory investment, {{it is not only}} important to determine the inventory policy but also to design the structure of inventory pools and the order fulfilment strategies. In this research, we focused on two types of inventory pools: multiple inventory pool (MIP) and consolidated inventory pool (CIP). The idea of MIP is to maintain separated inventory pools based on the types of service contract, while CIP solely maintains a single inventory pool regardless of service contract. Our research aims to design the inventory pool analytically and propose reserve strategies to manage the order fulfilment risks in CIP. Mathematical models and simulation experiments would be applied for analysis and evaluation...|$|E
40|$|At North Dakota State University and IBM Rochester, MN, a {{development}} project is underway for a Heterogeneous Distributed Database System which includes object oriented data stores. The system {{is called the}} Heterogeneously Distributed Request Orderer (HYDRO). We view the object model {{as an extension of}} the relational model. When HYDRO connects autonomous local database systems as well as object oriented data stores into one unified system, we refer to it as OOHYDRO. In this paper we show how global serializability and atomic commitment can be attained in this setting. Each local system is assumed to be off-the-shelf and binary-licensed. Global serializability is achieved using a set of system objects based on the ROLLs (<b>Request</b> <b>Order</b> Linked Lists) ([PER 89], [PER 91 a]). ROLL is a Serialization Graph Test concurrency control methodology ([BER 87]) which provides freedom from idle-wait, deadlock, livelock and restart. Atomic commitment is provided through a variation of the Two-Phase Commit [...] ...|$|E
50|$|If the {{application}} is not opposed, the facts, as {{set out in}} the documents, are accepted. The only question that must be answered then is whether a case can be made for granting the <b>requested</b> <b>order.</b>|$|R
5000|$|According to Fawzi's lawyer, Thomas Wilner, Fawzi wanted Wilner {{to file a}} legal <b>request</b> <b>ordering</b> {{the removal}} of his feeding tube. Wilner did file such a request because Fawzi's family was [...] "frantic" [...] and opposed the motion.|$|R
25|$|M3: Burst type. 0 - <b>requests</b> {{sequential}} burst <b>ordering,</b> while 1 <b>requests</b> interleaved burst <b>ordering.</b>|$|R
40|$|In {{time stamp}} {{ordering}} method, transactions (txns) access data by {{the order of}} timestamp. This makes concurrency control (CC) simple but decreases the degree of concurrency. On the other hand, standard locking grants locks on data items to txns by their <b>request</b> <b>order.</b> It increases concurrency but brings dead lock. In this paper, we propose a new approach called level ordered txn scheduler (LOTS), which can optimize txns execution order and maximize the degree of concurrency. Two links, D_Link and T_Link, are implemented in LOTS to support its internal quick computing. Each txn has a lever number (LNo). A txn can commit only when its LNo is 0. As shown in this paper, LOTS provides flexible control mechanisms on CC. And the depth of cascading aborts can be controlled. In the presence of heavy conflict frequency, LOTS has no system "thrashing". Performance analysis also shows that it's a promising CC with reasonable small overhead...|$|E
40|$|In {{this paper}} we {{describe}} a heterogeneous knowledge base management system {{which is being}} designed and developed at North Dakota State University with support from IBM Rochester, MN. The system is called KB-HYDRO. It will connect a variety of autonomous local database systems {{as well as one}} or more knowledge base systems into one unified system. We show how global serializability and atomic commitment can be attained in KB-HYDRO. Each local system is assumed to be an off-the-shelf, binary-licensed system. KBHYDRO achieves global serializability using a set of objects based on the ROLL (<b>Request</b> <b>Order</b> Linked List) object developed in ([PER 89], [PER 91 a]). ROLL is based on the general Serialization Graph Test (SGT) methodology [BER 87], and provides freedom from idle-wait, deadlock, livelock and restart. KB-HYDRO uses attribute level granularity in its access control mechanism. This approach reduces conflicts substantially. Atomic commitment is provided, based on TwoPhase Commit. 1. INTRODU [...] ...|$|E
40|$|In {{recent years}} {{research}} in the area of distributed transaction management has been growing rapidly. While designing concurrency control components for such systems, the most common techniques have involved locking and timestamping and variations of these. In spite of their heavy use in the designing of distributed systems, each of the above techniques has its own specific disadvantages and overhead. Our primary goal is to describe an approach that has the advantages of each of these techniques and none of their disadvantages. In this paper, we describe the Distributed Window <b>Request</b> <b>Order</b> Linked List method and show how this technique embodies most of the advantages of the standard techniques yet at the same time does not introduce serious difficulties or extra overhead of its own. We include an experimental comparison to compare transaction response time for this new method to those of locking and timpstamping methods. Keywords: distributed, database, concurrency, ROLL. SECTION 1. In [...] ...|$|E
60|$|The {{council of}} Massachusetts, at his <b>request,</b> <b>ordered</b> the militia {{of the towns}} {{contiguous}} to Dorchester and Roxbury to hold themselves in readiness to repair to the lines at those places with arms, ammunition and accoutrements, on receiving a preconcerted signal.|$|R
5000|$|The <b>Requested</b> <b>Order</b> Lead Time [...] (OLTRequested) {{represents}} {{the time between}} the Order Entry Date and the customer requested delivery date; this measurement could help the company to understand the order behavior of the customers and help to design profitable models to fulfill customer needs.|$|R
50|$|Brocade {{offers a}} MyLibrary application: using a {{personal}} userid and password library end users can access this application {{to check their}} loans, renew the loan, enter stack <b>requests,</b> <b>order</b> documents from other libraries, place hold on documents, review their alerting profile and change their personal settings.|$|R
40|$|Storage {{system failure}} {{is a serious}} concern as we {{approach}} Petascale computing. Even at today’s sub-Petascale levels, I/O failure {{is the leading cause}} of downtimes and job failures. We contribute a novel, on-the-fly recovery framework for job input data into supercomputer parallel file systems. The framework exploits key traits of the HPC I/O workload to reconstruct lost input data during job execution from remote, immutable copies. Each reconstructed data stripe is made immediately accessible in the client <b>request</b> <b>order</b> due to the delayed metadata update and finegranular locking while unrelated access to the same file remains unaffected. We have implemented the recovery component within the Lustre parallel file system, thus building a novel application-transparent online recovery solution. Our solution is integrated into Lustre’s two-level locking scheme using a two-phase blocking protocol. Combining parametric and simulation studies, our experiments demonstrate a significant improvement in HPC center serviceability and user job turnaround time. 1...|$|E
40|$|Almost most {{of company}} {{operates}} based on <b>request</b> (<b>order).</b> The aim of company in industry world is get {{to complete the}} customer needs that are the high quality of goods, cheap goods price or finish and delivery product on time. To realize the mention the company must compose production planning hooked on scheduling of production. The scheduling in problems right now, there are excessively long delivery times and the large of total idle time. The Problems cause the height of production cost in company. To overcome the mention will conduct an approach of method that able to give job schedule more precise. The methods are Algorithm Heuristic Dispatching Rule Last Come First Serve, Algorithm Heuristic Dispatching Rule Shortest Processing Time, Algorithm Heuristic Dispatching Rule Longest Processing Time, Algorithm Heuristic Dispatching Rule Earliest Due Date, Algorithm Heuristic Dispatching Rule Slack Time, {{which one of the}} method will choose with criteria like minimize makespan, mean tardiness and total of idle time. So is obtained result of new method which give minimize of the criteria is Algorithm Heuristic Dispatching Rule Last Come First Serve for September 2007. With this method company can economize process time (makespan) 2 hours, mean tardiness 3, 13 hours and total of idle time 26 hours. For October 2007 obtained new method which give minimize of the criteria is Algorithm Heuristic Dispatching Rule Longest Processing Time. With this method company can economize process time (makespan) 1, 5 hours and total of idle time 19, 5 hours...|$|E
40|$|TRIO Upward Bound program helps {{high school}} {{students}} from traditionally underserved backgrounds reach their potential by earning a college degree. They help students to build the academic skills, motivation and self-confidence necessary for success in a college by providing university tours {{as a part of}} the program. During a university tour, the Upward Bound staff members are responsible for tracking attendance for students by carrying separate files to each location and recording information in them. Of course this is extremely cumbersome and error-prone. At end of the day, staff members have the additional burden of counting the number of hours each student spent on a location, meals ordered on each day, placing a food <b>request</b> <b>order,</b> and also preparing a manual report for scholarship purposes. The Summer UB application was created to support Upward Bound staff members. This application reduces the manual effort needed to take attendance and manage information by providing a mobile application. Summer UB makes it easy for a staff member to track any student if they get separated at any location during the tour. The app also makes it easier for staff member to track the number of meals served per day and make an appropriate decision in placing order to food services department the next day. The Summer UB application also provides a web dashboard for staff. The dashboard produces a detailed student activity and meal reports about any given day, which reduces manual effort for staff members in preparing reports. These reports are compatible with any system. The dashboard also has an options for staff members to add, view, edit, delete and modify any student activity if necessary. The Upward Bound staff will pilot test the Summer UB app in Summer 2017 and planned to use for daily purposes. This project has also been planned to be scalable for other schools and universities...|$|E
50|$|The current {{protocol}} includes {{documents for}} setup (company details and transaction profiles), catalogue content, application integration (including the widely used PunchOut feature), original, change and delete purchase orders {{and responses to}} all of these <b>requests,</b> <b>order</b> confirmation and ship notice documents (cXML analogues of EDI 855 and 856 transactions) and new invoice documents.|$|R
50|$|United States v. One Tyrannosaurus Bataar Skeleton (1:13−cv−00857) is a 2013 United States District Court for the Southern District of New York {{judgement}} {{regarding a}} <b>requested</b> <b>order</b> from the United States government to seize an imported Mongolian Tyrannosaurus bataar skeleton related to smuggling {{law and the}} applicability of Mongolian law in the United States.|$|R
40|$|OBJECTIVE: To {{evaluate}} a systematic {{effort to reduce}} telephone orders for prescription medications in a community family practice. DESIGN: Three-year intervention project. SETTING: Solo family practice in Ottawa. PARTICIPANTS: All patients <b>requesting</b> telephone <b>orders</b> for prescription medications. INTERVENTIONS: A retrospective analysis of phone <b>requests</b> and <b>orders</b> was conducted on 1 continuous year's records. A new office policy was instituted on October 9, 1992, discouraging telephone orders for prescription medication. Prescription telephone <b>requests</b> and <b>orders</b> were then monitored continuously for the next 3 years. MAIN OUTCOME MEASURES: Number of telephone prescription <b>requests</b> and <b>orders</b> per half-day 1 year before the intervention compared with the number for the 3 years after the intervention. RESULTS: One year before the intervention, there were 4. 96 telephone prescription requests per half-day: 3 years after the intervention this number fell to 0. 85. One year before the intervention, the number of telephone prescription orders per half-day was 4. 80; this number fell continuously to 0. 67 during the 3 years following the intervention. CONCLUSIONS: We observed {{a reduction in the}} number of telephone prescription <b>requests</b> and <b>orders</b> following the introduction of an office policy that encouraged prescribing and renewing medication in person...|$|R
40|$|A {{database}} scheduler takes {{requests from}} transactions and generates a <b>request</b> <b>order</b> that fulfills {{the constraints of}} a scheduling protocol, e. g., correctness criteria. The goal of this thesis {{is to provide a}} new method for the development of domain-specific protocols for scheduling database requests. Scheduling concurrent requests is an ubiquitous problem in modern server systems based on, e. g., Web Services that handle large numbers of concurrent requests. These systems require user scalability, performance predictability, and flexibility, i. e., the ability to adapt to domain-specific needs, e. g., relaxed correctness criteria or service-level agreements (SLAs). The traditional approach of outsourcing scheduling to database management systems (DBMSs) is of limited applicability for these systems, because DBMSs provide only a limited amount of predefined consistency levels and limited user scalability. The state of the art is to develop application-specific schedulers for a given application from scratch which yields fine-tuned schedulers satisfying the application’s scheduling constraints, albeit at a great cost and with long development times. Imperative implementations of schedulers can be complex, hard to verify, and adapting such schedulers results in expensive and error-prone re-implementations. The solution we propose for the development of domain-specific scheduling protocols is a generic scheduling model called Oshiya. The main idea of this model is to treat requests as data and employ database query processing techniques to produce request schedules. Oshiya can ex- press traditional and domain-specific scheduling protocols. We introduce an Oshiya implementation of the traditional strong two-phase locking protocol and leverage the conciseness of Oshiya protocol implementations to prove its correctness. Our experiments show that for large numbers of concurrent requests our approach provides a better performance than a native database scheduler. Oshiya protocol implementations can be adapted easily to modified scheduling constraints. We leverage this advantage and develop the Declarative Serializable Snapshot Isolation protocol, {{a modified version of the}} Snapshot Isolation protocol, and prove that it produces serializable histories. We propose the resource acquisition protocol (RAP), a domain-specific protocol for scheduling transactions that compete for resources that are available in limited quantity, which is a typical usage pattern in booking, reservation, and web shop systems. We prove that RAP is deadlock-free and that it produces less aborts due to insufficient resource availability than SI. Our experimental results confirm that RAP performs better than SS 2 PL and SI with respect to aborts and throughput. We present the Oshiya Debugger and Analyzer (ODA), a novel system for debugging, visualizing, and comparing scheduling protocols developed using Oshiya. ODA supports the simultaneous execution of single- and multiversion protocols, breakpoints, backward and forward debugging, as well as the statistical and visual protocol analysis...|$|E
5000|$|The Court {{noted that}} the case raised {{important}} questions of statutory interpretation and the constitutionality of provision of FISA. In particular, the opinion addressed changes made in the act due {{to the passage of}} the Patriot Act. The Court addressed these questions {{in the context of a}} single <b>request</b> for an <b>order</b> authorizing electronic surveillance made by the government to the FISC. The FISC approved the <b>requested</b> <b>order</b> but [...] "imposed certain requirements and limitations" [...] on the government. The government appealed to the Court of Review.|$|R
50|$|For memory space accesses, {{the words}} in a burst may be {{accessed}} in several orders. The unnecessary low-order address bits AD1:0 are used to convey the initiator's <b>requested</b> <b>order.</b> A target which does not support a particular order must terminate the burst after the first word. Some of these orders depend on the cache line size, which is configurable on all PCI devices.|$|R
5000|$|Professor A.I. Osipov {{writes that}} [...] "an {{awareness}} of magic is deeply present in our 'old man'. For very many people, Orthodoxy consists in placing candles, 'venerating', donating something, leaving prayer <b>requests,</b> <b>ordering</b> Liturgies, molebens and pannikhidas, {{joining in the}} cross processions, visiting holy shrines, confessing and receiving Communion. The {{most important part of}} salvation, life according the commandments and repentance, remains undone".|$|R
60|$|By {{this time}} the emperor, on hearing where she was, joined her in the yard, and at her <b>request</b> <b>ordered</b> the mares to be milked, so that both he and she might bathe in the milk and keep young for ever. But they would suffer no one to come near them, and the princess was {{commanded}} to perform this service also.|$|R
5000|$|Request Latency : A {{distributed}} object <b>request</b> is <b>orders</b> {{of magnitude}} slower than local method invocation ...|$|R
50|$|As of November 14, 2016, Rossetti {{was subject}} to a {{restraining}} <b>order</b> <b>requested</b> by his current wife. He was also subject to a restraining <b>order</b> <b>requested</b> by his previous wife in 2008.|$|R
2500|$|For memory space accesses, {{the words}} in a burst may be {{accessed}} in several orders. [...] The unnecessary low-order address bits AD are used to convey the initiator's <b>requested</b> <b>order.</b> [...] A target which does not support a particular order must terminate the burst after the first word. [...] Some of these orders depend on the cache line size, which is configurable on all PCI devices.|$|R
50|$|Judge Stump {{signed the}} <b>requested</b> <b>order</b> ex parte {{the same day}} that he {{received}} the petition. The daughter had no notice of it. No guardian ad litem was appointed to represent her interest, and no hearing was held. Neither the petition nor the order was filed with the clerk of the circuit court, nor did the order cite any statutory authority for the action being taken.|$|R
5|$|Butler and {{his family}} were living in Panama in January 1914 when he was ordered to report as the Marine officer of a {{battleship}} squadron massing off the coast of Mexico, near Veracruz, to monitor a revolutionary movement. He did not like leaving his family and the home they had established in Panama and he intended to <b>request</b> <b>orders</b> home as soon as he determined he was not needed.|$|R
2500|$|Judge Stump {{signed the}} <b>requested</b> <b>order</b> ex parte {{the same day}} that he {{received}} the petition. [...] The daughter had no notice of it. [...] No guardian ad litem was appointed to represent her interest, and no hearing was held. [...] Neither the petition nor the order was filed with the clerk of the circuit court, nor did the order cite any statutory authority for the action being taken.|$|R
50|$|Butler and {{his family}} were living in Panama in January 1914 when he was ordered to report as the Marine officer of a {{battleship}} squadron massing off the coast of Mexico, near Veracruz, to monitor a revolutionary movement. He did not like leaving his family and the home they had established in Panama and he intended to <b>request</b> <b>orders</b> home as soon as he determined he was not needed.|$|R
