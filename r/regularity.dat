10000|8391|Public
5|$|In 2011, the Asker Line from Lysaker to Sandvika, {{and a new}} Lysaker Station opened. This {{increased}} the capacity and <b>regularity</b> along the Drammen Line.|$|E
5|$|The {{amorphous}} form {{of boron}} nitride (a-BN) is non-crystalline, lacking any long-distance <b>regularity</b> in {{the arrangement of}} its atoms. It is analogous to amorphous carbon.|$|E
5|$|Although {{crystallography}} {{can be used}} {{to characterize}} the disorder in an impure or irregular crystal, crystallography generally requires a pure crystal of high <b>regularity</b> to solve the structure of a complicated arrangement of atoms. Pure, regular crystals can sometimes be obtained from natural or synthetic materials, such as samples of metals, minerals or other macroscopic materials. The <b>regularity</b> of such crystals can sometimes be improved with macromolecular crystal annealing and other methods. However, in many cases, obtaining a diffraction-quality crystal is the chief barrier to solving its atomic-resolution structure.|$|E
40|$|Developers often encode design {{knowledge}} through structural <b>regularities</b> such as API usage protocols, coding idioms and naming conventions. As these <b>regularities</b> express how the source code should be structured, they provide vital information for developers using or extending that code. Adherence to such <b>regularities</b> tends to deteriorate over time {{because they are}} not documented and checked explicitly. This paper introduces uContracts, an internal DSL to codify and verify such <b>regularities</b> as ‘usage contracts’. Our DSL aims at covering most common usage <b>regularities,</b> while still providing a means to express less common ones. Common <b>regularities</b> are identified based on <b>regularities</b> supported by existing approaches to detect bugs or suggest missing code fragments, techniques that mine for structural <b>regularities,</b> {{as well as on the}} analysis of an open-source project. We validate our DSL by documenting the structural <b>regularities</b> of an industrial case study, and analyse how useful the information provided by checking these <b>regularities</b> is for the developers of that case study...|$|R
30|$|In this section, we {{formulate}} models {{based on}} <b>Regularities</b> 1 – 6. While <b>Regularities</b> 1 and 2 may {{be regarded as}} ‘robust,’ <b>Regularities</b> 3 – 6 may be regarded as controversial to some extent, since not all countries are characterized by them over all periods of time (see the references listed in Sect.  3 for empirical evidence). In general, different readers may find different <b>regularities</b> controversial. Thus, {{it makes sense to}} generate different models based on different <b>regularities.</b> Model 1, which is our most conservative model, relies only on <b>Regularities</b> 1 and 2, i.e., the <b>regularities</b> that are the least controversial. Models 2 – 4 combine the remaining <b>regularities</b> in different ways such that the readers can choose the models that correspond to their ideology.|$|R
5000|$|<b>Regularities</b> - The {{generalization}} and {{explanation of}} <b>regularities.</b>|$|R
5|$|The {{biodiversity}} {{of local}} oceanic fauna {{is not well}} understood. Sea turtles and mammals, including monk seals, fin whales (only 1 sighting and 5 strandings have been documented in Turkish waters), and dolphins are considered to reside in the park area, although <b>regularity</b> of occurrences are unclear.|$|E
5|$|Værøy Airport {{was plagued}} by bad wind {{conditions}} and low <b>regularity.</b> The airport had {{the highest number of}} cancellations in the country, with 31 of 609 flights canceled in the first eleven months of operation. During some periods, <b>regularity</b> was as low as 50%. The navigational aids were moved in 1989 to increase safety, more runway lights were installed and an anemometer was installed on the mountain, costing NOK1 million. Widerøe introduced self-imposed restrictions on landing at Værøy from 31 October 1988. Aircraft were not allowed to land or take off if the wind came from 090°–240° (though south) if the wind speed exceeded , including gusts. Additional restriction were introduced following an incident on 18 January 1989. These were again modified on 1 November 1989.|$|E
5|$|Crystals, though long {{admired for}} their <b>regularity</b> and symmetry, were not {{investigated}} scientifically until the 17th century. Johannes Kepler hypothesized {{in his work}} Strena seu de Nive Sexangula (A New Year's Gift of Hexagonal Snow) (1611) that the hexagonal symmetry of snowflake crystals was due to a regular packing of spherical water particles.|$|E
40|$|Language {{learners}} encounter numerous {{opportunities to}} learn <b>regularities,</b> but need to decide which of these <b>regularities</b> to learn, because some are not productive in their native language. Here, we present an account of rule learning based on perceptual and memory primitives (Endress, Dehaene-Lambertz, & Mehler, 2007; Endress, Nespor, & Mehler, 2009), suggesting that learners preferentially learn <b>regularities</b> that are more salient to them, and that the pattern of salience reflects the frequency of language features across languages. We contrast this view with previous artificial grammar learning research, which suggests that infants “choose” the <b>regularities</b> they learn based on rational, Bayesian criteria (Frank & Tenenbaum, 2011; Gerken, 2006, 2010). In our experiments, adult participants listened to syllable strings starting with a syllable reduplication and always ending with the same “a!x” syllable, or to syllable strings starting with this “a!x” syllable and ending with the “reduplication. ” Both a!xation and reduplication are frequently used for morphological marking across languages. We find three crucial results. First, participants learned both <b>regularities</b> simultaneously. Second, a!xation <b>regularities</b> seemed easier to learn than reduplication <b>regularities.</b> Third, <b>regularities</b> in sequence o↵sets were easier to learn than <b>regularities</b> at sequence onsets. We show that these results are inconsistent with previous Bayesian rule learning models, but mesh well with the perceptual or memory primitives view. Further, we show that the pattern of salience revealed in our experiments reflects the distribution of <b>regularities</b> across languages. Ease of acquisition might thus be one determinant of the frequency of <b>regularities</b> across languages...|$|R
40|$|Abstract—During {{software}} development, {{design rules}} and contracts in the source code are often encoded through <b>regularities,</b> such as API usage protocols, coding idioms and naming conventions. The structural <b>regularities</b> that govern a program can aid in comprehension {{and maintenance of}} the application, but are often implicit or undocumented. Tool support for extracting these <b>regularities</b> from the source code can provide developers useful insights. But building such tool support is not trivial, in particular, because the informal nature of <b>regularities</b> results in frequent deviations and exceptions to these <b>regularities.</b> We propose an automated approach, based on association rule mining, to discover the structural <b>regularities</b> that govern the source code of a software system. We chose this technique because of its resilience to exceptions. In general, tool support for mining <b>regularities</b> tends to discover {{a huge amount of}} rules, making interpretation of the results hard and time-consuming. To ease the interpretation, we reduce the results to a minimal canonical form, and group them to obtain a more rational description of the discovered <b>regularities.</b> As an initial feasibility study of our approach, we applied it on two open-source systems, namely IntensiVE (Smalltalk) and FreeCol (Java). I...|$|R
40|$|<b>Regularities</b> in strings model many {{phenomena}} and thus form {{the subject of}} extensive mathematical studies. Perhaps the most conspicuous <b>regularities</b> in strings are those that manifest themselves {{in the form of}} repeated subpatterns. In this paper, we study several forms of <b>regularities</b> of strings, that is, repeats, multirepeats, repetitions and runs. We present their similarities and differences by discussing their forms and properties and we explore the existing computation algorithms. We also discuss several data structures useful for computing <b>regularities...</b>|$|R
5|$|Exercise {{and fitness}} levels, age, body temperature, basal {{metabolic}} rate, {{and even a}} person's emotional state can all affect the heart rate. High levels of the hormones epinephrine, norepinephrine, and thyroid hormones can increase the heart rate. The levels of electrolytes including calcium, potassium, and sodium can also influence the speed and <b>regularity</b> of the heart rate; low blood oxygen, low blood pressure and dehydration may increase it.|$|E
5|$|<b>Regularity</b> {{and order}} are common {{features}} in Toraja wood carving (see table below), {{as well as}} abstracts and geometrical designs. Nature is frequently {{used as the basis}} of Toraja's ornaments, because nature is full of abstractions and geometries with regularities and ordering. Toraja's ornaments have been studied in ethnomathematics to reveal their mathematical structure, but Torajans base this art only on approximations. To create an ornament, bamboo sticks are used as a geometrical tool.|$|E
25|$|The {{story about}} a {{mathematician}} and the obsession with mathematical <b>regularity</b> contrasts two seemingly irreconcilable entities: the imperfect, irrational humanity and the rigor and <b>regularity</b> of mathematics, specifically number theory.|$|E
40|$|Boundary {{representation}} models reconstructed from 3 D range data suer from var-ious inaccuracies {{caused by}} {{noise in the}} data and the model building software. Such models can be improved in a beautication step, which nds geometric <b>regularities</b> approximately present in the model and imposes a consistent subset {{of them on the}} model. Methods to select <b>regularities</b> consistently such that they are likely to represent the original, ideal design intent are presented. Eciency during selection is achieved by considering degrees of freedom to analyse the solvability of constraint systems representing the <b>regularities</b> (without actually solving them). Priorities are used to select <b>regularities</b> in case of inconsistencies. The selected set of constraints is solved numerically and an improved model is rebuild from the solution. Experi-ments show that the presented methods can beautify models by selecting consistent <b>regularities</b> and enforcing major intended <b>regularities...</b>|$|R
40|$|The {{critical}} realist (CR) {{conception of}} open and closed (O&C) systems {{is not about}} systems: it is about (ir) <b>regularities</b> in the flux of events and states of affairs. It has recently been criticised {{on the grounds that}} critical realists (CRs) should take on board ideas about the general nature of systems; recognise that genuinely open social systems would be impossible; avoid polarities or dualisms where either there are event <b>regularities</b> and open systems, or there are no event <b>regularities</b> and closed systems and accept partial <b>regularities</b> and partially open systems; and understand that orthodox economics is not based upon event <b>regularities,</b> laws or Humean empiricism. The objective {{of this paper is to}} ‘take stock’ of these recent criticisms...|$|R
40|$|Humans {{are known}} to {{continuously}} extract <b>regularities</b> from the flow of stimulation. This occurs in many facets of behavior, including reading. In spite of the ubiquitous evidence that readers become sensitive to orthographic <b>regularities</b> after very little exposure to print, the role of orthographic <b>regularities</b> receives at best a peripheral status in current theories of orthographic processing. In the present article, after the presentation of previous evidence on orthographic redundancy, the hypothesis that orthographic <b>regularities</b> may play {{a prominent role in}} word perception is developed. Download: [URL]...|$|R
25|$|In the {{presence}} of the axiom schema of separation, Russell's paradox becomes a proof that there is no set of all sets. The axiom of <b>regularity</b> (with the axiom of pairing) also prohibits such a universal set, however this prohibition is redundant when added to the rest of ZF. If the ZF axioms without <b>regularity</b> were already inconsistent, then adding <b>regularity</b> would not make them consistent.|$|E
25|$|Given {{the other}} axioms of Zermelo–Fraenkel set theory, the axiom of <b>regularity</b> is {{equivalent}} to the axiom of induction. The axiom of induction tends to be used in place of the axiom of <b>regularity</b> in intuitionistic theories (ones that do not accept the law of the excluded middle), where the two axioms are not equivalent.|$|E
25|$|Presbyteries {{meet at a}} <b>regularity</b> between monthly and quarterly, some half-yearly.|$|E
40|$|<b>Regularities</b> in our visual {{environment}} {{help us to}} guide our attention. Based on these <b>regularities</b> we create expectations, which we attend to more than to non-expected stimuli. It has also been claimed that processing speed is faster for attended stimuli. Therefor {{it could be that}} <b>regularities</b> influence the processing speed of stimuli around us. The aim {{of this study was to}} create <b>regularities</b> in a way that would guide attention towards specific stimuli based on expectation. We expected that the expected stimuli would be processed faster. We used a temporal order judgment task to measure processing speed, expecting that participants would process the stimuli that matched their expectations faster and therefor choose that stimulus when asked which was presented first. However the results showed that there was no significant effect on peoples temporal order judgment based on the <b>regularities</b> we created. Therefore the results of this study do not show an influence of the created <b>regularities</b> on the processing speed of the participants. We have to conclude that the <b>regularities</b> we created did not guide participants’ attention and with that did not enhance their processing speed. Therefor it seems that <b>regularities</b> do not enhance our processing speed in all situations...|$|R
40|$|As {{size and}} {{complexity}} of software systems increase, preserving the design and specification of their implementation structure gains importance {{in order to maintain}} the evolvability of the system. However, due to constant changes, the implementation structure and its documentation tend to dilute over time. To address this problem, we developed IntensiVE: a toolsuite for documenting and checking structural source-code <b>regularities.</b> Building on the underlying models of intensional views and relations, the toolsuite helps a developer in documenting structural source-code <b>regularities,</b> verifying them and offering fine-grained feedback when the source-code does not satisfy those <b>regularities.</b> By illustrating our tools on a Smalltalk application, we show that violations of the source code against the structural <b>regularities</b> can be detected easily and that our toolsuite provides useful feedback for a developer to refine the <b>regularities</b> or to fix the code so that it does satisfy the <b>regularities.</b> Anglai...|$|R
40|$|This paper {{describes}} {{a method for}} analyzing the behavior of an autonomous robot. The robot {{is viewed as a}} continuous# stochastic dynamical system. The analysis starts from an empirical phase portrait. In a first stage, elementary <b>regularities</b> are detected. These <b>regularities,</b> called transient attractors, combine properties of attractors with properties of partition cells of phase space. As the system trajectory passes through these <b>regularities</b> repeatedly, a sequence of identifiable events is produced, which can be interpreted as a symbol sequence. This sequence is further analyzed in the second stage, where a finite description of temporal <b>regularities</b> within it is constructed. This description comes in the format of a variety of finite-state automata. In a third stage, higher-order <b>regularities</b> in this finite-state-like description are identified. This yields a hierarchic behavior model. At all stages, <b>regularities</b> are defined using criteria of maximal local predictability. Thus, the enti [...] ...|$|R
25|$|Elliptic <b>regularity</b> {{can now be}} used {{to deduce}} that f is smooth.|$|E
25|$|For Boullée <b>regularity,</b> {{symmetry}} {{and variety}} were the golden rules of architecture.|$|E
25|$|In papyrus {{texts from}} the Ptolemaic period onwards, numeric sampi occurs with some <b>regularity.</b>|$|E
40|$|Aerial imagery 2. 5 D {{point cloud}} Final model We {{introduce}} global <b>regularities</b> in the 2. 5 D building modeling problem, {{to reflect the}} orientation and placement similarities between planar elements in building structures. Given a 2. 5 D point cloud scan, we present an automatic approach that simultaneously detects locally fitted plane primitives and global <b>regularities.</b> While global <b>regularities</b> are extracted by analyzing the plane primitives, they adjust the planes in return and effectively correct local fitting errors. We explore a broad variety of global <b>regularities</b> between 2. 5 D planar elements including both planer roof patches and planar facade patches. By aligning planar elements to global <b>regularities,</b> our method significantly improves the model quality {{in terms of both}} geometry and human judgement. 1...|$|R
40|$|By {{examining}} {{the correlation between}} the size, value and momentum empirical <b>regularities</b> and macroeconomic variables we investigate whether these <b>regularities</b> may be explained as risk factors within Merton's (1973) ICAPM. We examine the commodity-based Australian economy where financial asset claims are highly sensitive to macroeconomic volatility. The size and momentum premia covary pro-cyclically, while the value premium is countercyclical and negative at the business cycle peak. All three <b>regularities</b> become insignificant after controlling for the Chen et al. (1986) factors and a macroeconomic model successfully forecasts returns for both the size and momentum premia. Our results suggest that these <b>regularities</b> may be explained as macroeconomic-risk factors. We argue that covariance between macroeconomic risk and empirical <b>regularities</b> may explain inconsistencies in prior Australian market literature...|$|R
40|$|Machine {{learning}} typically involves discovering <b>regularities</b> in {{a training}} set, then applying these learned <b>regularities</b> to classify objects {{in a test}} set. In this paper we present an approach to discovering additional <b>regularities</b> in the test set, and show that in relational domains such test set <b>regularities</b> {{can be used to}} improve classification accuracy beyond that achieved using the training set alone. For example, we have previously shown how FOIL, a relational learner, can learn to classify Web pages by discovering training set <b>regularities</b> in the words occurring on target pages, and on other pages related by hyperlinks. Here we show how the classification accuracy of FOIL on this task can be improved by discovering additional <b>regularities</b> on the test set pages that must be classified. Our approach can be seen as an extension to Kleinberg's Hubs and Authorities algorithm that analyzes hyperlink relations among Web pages. We present evidence that this new algor [...] ...|$|R
25|$|GLOFs {{occur with}} <b>regularity</b> {{in the valleys}} and low lying river plains of Bhutan.|$|E
25|$|Thus from {{a certain}} point of view, it is really preregularity, rather than <b>regularity,</b> that matters in these situations.|$|E
25|$|However, {{definitions}} {{are usually}} still phrased {{in terms of}} <b>regularity,</b> since this condition is better known than preregularity.|$|E
40|$|Boundary {{representation}} models reconstructed from 3 D range data {{suffer from}} various inaccuracies caused by {{noise in the}} data and the model building software. The quality of such models can be improved in a beautification step, which finds geometric <b>regularities</b> approximately present in the model and tries to impose a consistent subset of these <b>regularities</b> on the model. A framework for beautification and numerical methods to select and solve a consistent set of constraints deduced from a set of <b>regularities</b> are presented. For the initial selection of consistent <b>regularities</b> likely {{to be part of}} the model’s ideal design priorities, and rules indicating simple inconsistencies between the <b>regularities</b> are employed. By adding <b>regularities</b> consecutively to an equation system and trying to solve it using quasi-Newton optimization methods, inconsistencies and redundancies are detected. The results of experiments are encouraging and show potential for an expansion of the methods based on degree of freedom analysis...|$|R
40|$|Like any {{software}} system, {{information systems}} suffer from structural inconsistencies that may arise during system evolution. Appropriate tools {{are needed to}} encode the structural <b>regularities</b> the system should adhere to, and to check conformance of the system against those <b>regularities</b> upon evolution. Taking inspiration from the intensional views approach to document and verify structural <b>regularities</b> in source code, we developed a similar tool to document and verify structural <b>regularities</b> in large databases. <b>Regularities</b> are expressed by the user {{at a high level}} in a graphical user interface, and then translated into relational algebra in order to check the <b>regularities</b> over the data. Discovered inconsistencies are presented back to the user in appropriate high-level data views. As a case study, the developed tool was successfully applied to a safety critical information system deployed at a large Belgian university. It is used by the rescue services to accurately locate users based on the location of their IP phones from which an emergency call was made...|$|R
40|$|During {{software}} development, {{design rules}} and contracts in the source code are often encoded through regularities,such as API usage protocols, coding idioms and naming conventions. The structural <b>regularities</b> that govern a program can aid in comprehension {{and maintenance of}} the application, but are often implicit or undocumented. Tool support for extracting these <b>regularities</b> from the source code can provide developers useful insights. But building such tool support is not trivial, in particular, because the informal nature of <b>regularities</b> results in frequent deviations and exceptions to these <b>regularities.</b> We propose an automated approach, based on association rule mining, to discover the structural <b>regularities</b> that govern the source code of a software system. We chose this technique because of its resilience to exceptions. In general, tool support for mining <b>regularities</b> tends to discover {{a huge amount of}} rules, making interpretation of the results hard and time-consuming. To ease the interpretation, we reduce the results to a minimal canonical form, and group them to obtain a more rational description of the discovered <b>regularities.</b> As an initial feasibility study of our approach, we applied it on two open-source systems, namely IntensiVE (Smalltalk) and FreeCol (Java) ...|$|R
