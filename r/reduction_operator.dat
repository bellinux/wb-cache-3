72|183|Public
2500|$|The / <b>reduction</b> <b>operator</b> is dyadic (binary) and the {{interpreter}} first evaluates its left argument (entirely in parentheses): ...|$|E
2500|$|Select {{the items}} in R for which the {{corresponding}} element is 1 (/ <b>reduction</b> <b>operator),</b> i.e. 2 3 5 ...|$|E
2500|$|APL makes a clear {{distinction}} between functions and operators. Functions take arrays (variables or constants or expressions) as arguments, and return arrays as results. Operators (similar to higher-order functions) take functions or arrays as arguments, and derive related functions. For example, the [...] "sum" [...] function is derived by applying the [...] "reduction" [...] operator to the [...] "addition" [...] function. Applying the same <b>reduction</b> <b>operator</b> to the [...] "maximum" [...] function (which returns the larger of two numbers) derives a function which returns the largest of a group (vector) of numbers. In the J language, Iverson substituted the terms [...] "verb" [...] for [...] "function" [...] and [...] "adverb" [...] or [...] "conjunction" [...] for [...] "operator".|$|E
40|$|We {{propose a}} {{functional}} description of rewriting systems where reduction rules {{are represented by}} linear maps called <b>reduction</b> <b>operators.</b> We show that <b>reduction</b> <b>operators</b> admit a lattice structure. Using this structure we define the notion of confluence and we show that this notion {{is equivalent to the}} Church-Rosser property of <b>reduction</b> <b>operators.</b> In this paper we give an algebraic formulation of completion using the lattice structure. We relate <b>reduction</b> <b>operators</b> and Gröbner bases. Finally, we introduce generalised <b>reduction</b> <b>operators</b> relative to non total ordered sets...|$|R
40|$|In {{this work}} we propose a {{definition}} of weak local <b>reduction</b> <b>operators</b> and an algorithm that uses such operators to reduce images. We show how to construct local <b>reduction</b> <b>operators</b> by means of different aggregation functions. We also present several experimental results obtained using these aggregation functions-based <b>reduction</b> <b>operators...</b>|$|R
40|$|International audienceWe {{propose a}} {{functional}} description of rewriting systems where reduction rules {{are represented by}} linear maps called <b>reduction</b> <b>operators.</b> We show that <b>reduction</b> <b>operators</b> admit a lattice structure. Using this structure we define the notions of confluence and of Church-Rosser property. We show that these notions are equivalent. We give an algebraic formulation of completion and show that such a completion exists using the lattice structure. We interpret the confluence for <b>reduction</b> <b>operators</b> in terms of Gröbner bases. Finally, we introduce generalised <b>reduction</b> <b>operators</b> relative to non totally ordered sets...|$|R
5000|$|Some {{operators}} which satisfy {{this are}} sum (addition), product (multiplication), and logical operators (and, or, etc.). An OpenMP user can specify the <b>reduction</b> <b>operator</b> and the variable being reduced using the reduction clause. If an operator {{is not in}} OpenMP, the code {{will need to be}} modified and the operator should be expressed as a <b>reduction</b> <b>operator.</b>|$|E
5000|$|Since '+' is both {{commutative}} and associative, it is a <b>reduction</b> <b>operator.</b> Therefore this reduction can {{be performed}} in parallel using several cores, where each core computes the sum of {{a subset of the}} array, and the <b>reduction</b> <b>operator</b> merges the results. Using a binary tree reduction would allow 4 cores to compute , , , and [...] Then two cores can compute [...] and , and lastly a single core computes [...] So a total of 4 cores can be used to compute the sum in [...] steps instead of the [...] steps required for the serial version. This parallel binary tree technique computes [...] Of course the result is the same, but only because of the associativity of the <b>reduction</b> <b>operator.</b> The commutativity of the <b>reduction</b> <b>operator</b> would be important if there were a master core distributing work to several processors, since then the results could arrive back to the master processor in any order. The property of commutativity guarantees that the result will be the same.|$|E
5000|$|Select {{the items}} in [...] for which the {{corresponding}} element is [...] ( [...] <b>reduction</b> <b>operator),</b> i.e.|$|E
40|$|We {{introduce}} {{the notion of}} syzygy {{for a set of}} <b>reduction</b> <b>operators</b> and relate it to the notion of syzygy for presentations of algebras. We give a method for constructing a linear basis of the space of syzygies for a set of <b>reduction</b> <b>operators.</b> We interpret these syzygies in terms of the confluence property from rewriting theory. This enables us to optimise the completion procedure for <b>reduction</b> <b>operators</b> based on a criterion for detecting useless reductions. We illustrate this criterion with an example of construction of commutative Gröbner basis...|$|R
40|$|<b>Reduction</b> <b>operators</b> of {{generalized}} Burgers equations are studied. A {{connection between}} these equations and potential fast diffusion equations with power nonlinearity - 1 via <b>reduction</b> <b>operators</b> is established. Exact solutions of generalized Burgers equations {{are constructed using}} this connection and known solutions of the constant-coefficient potential fast diffusion equation. Comment: 7 page...|$|R
40|$|<b>Reduction</b> <b>operators</b> (called also nonclassical or $Q$-conditional symmetries) of {{variable}} coefficient semilinear reaction-diffusion equations with exponential source $f(x) u_t=(g(x) u_x) _x+h(x) e^{mu}$ are investigated using the algorithm involving a mapping between classes of differential equations, which {{is generated by}} a family of point transformations. A special attention is paid for checking whether <b>reduction</b> <b>operators</b> are inequivalent to Lie symmetry <b>operators.</b> The derived <b>reduction</b> <b>operators</b> are applied to construction of exact solutions. Comment: 13 pages, contribution to the Proceedings of 5 th Workshop "Group Analysis of Differential Equations and Integrable Systems" (4 - 10 June 2010, Protaras, Cyprus...|$|R
5000|$|The [...] <b>reduction</b> <b>operator</b> is dyadic (binary) and the {{interpreter}} first evaluates its left argument (entirely in parentheses): ...|$|E
5000|$|A <b>reduction</b> <b>operator</b> {{can help}} break down a task into various partial tasks by calculating partial results {{which can be}} used to obtain a final result. It allows certain serial {{operations}} to be performed in parallel, thereby reducing the number of steps required for certain operations. A <b>reduction</b> <b>operator</b> breaks a serial task into various partial tasks and stores the result into a private copy of the variable. These private copies are then merged into a shared copy at the end.|$|E
5000|$|In {{computer}} science, the <b>reduction</b> <b>operator</b> is {{a special}} type of operator that is both associative and commutative. [...] This type of operator is commonly used in parallel programming to reduce the elements of an array into a single result.|$|E
40|$|In {{this work}} we propose an image {{reduction}} algorithm based on weak local <b>reduction</b> <b>operators.</b> We use several averaging functions to build these operators and we analyze their properties. We present experimental results where we apply the algorithm and weak local <b>reduction</b> <b>operators</b> in procedures of reduction, and later, reconstruction of images. We analyze these results over natural images and noisy images. <br /...|$|R
40|$|After {{studying}} several reduction algorithms {{that can}} be found in the literature, we notice that there is not an axiomatic definition of this concept. In this work we propose the definition of weak <b>reduction</b> <b>operators</b> and we propose the properties of the original image that reduced images must keep. From this definition, we study whether two methods of image reduction, undersampling and fuzzy transform, satisfy the conditions of weak <b>reduction</b> <b>operators...</b>|$|R
40|$|Nonclassical symmetries of a {{class of}} {{generalized}} Huxley equations of form u_t=u_xx+k(x) u^ 2 (1 -u) are found. More precisely, for the class under consideration we completely classify <b>reduction</b> <b>operators</b> with τ= 1 and give a wide number of examples of equations admitting <b>reduction</b> <b>operators</b> with τ= 0. Comment: contribution to the Proceedings of 5 th Workshop "Group Analysis of Differential Equations and Integrable Systems" (4 - 10 June 2010, Protaras, Cyprus...|$|R
5000|$|Real number {{multiplication}} (...) {{is also a}} <b>reduction</b> <b>operator</b> {{since it}} is both associative and commutative. Thus a similar procedure as shown for addition can be performed {{in order to find}} the product of every element of a numeric array in parallel.|$|E
50|$|By {{using the}} method {{described}} in #SAT, we must face a problem that for any fi the degree of the resulting polynomial may double with each quantifier. In order to prevent this, we must introduce a new <b>reduction</b> <b>operator</b> R which will reduce the degrees of the polynomial without changing their behavior on Boolean inputs.|$|E
50|$|Matrix {{multiplication}} {{is not a}} <b>reduction</b> <b>operator</b> {{since the}} operation is not commutative. If processes were allowed to return their matrix multiplication results in any order to the master process, the final result that the master computes will likely be incorrect if the results arrived out of order. However, note that matrix multiplication is associative, and therefore {{the result would be}} correct as long as the proper ordering were enforced, as in the binary tree reduction technique.|$|E
40|$|The <b>reduction</b> <b>{{operators}},</b> i. e., {{the operators}} of nonclassical (conditional) symmetry, of (1 + 1) -dimensional second order linear parabolic partial differential equations {{and all the}} possible reductions of these equations to ordinary differential ones are exhaustively described. This problem proves to be equivalent, in some sense, to solving the initial equations. The ``no-go'' result is extended to the investigation of point transformations (admissible transformations, equivalence transformations, Lie symmetries) and Lie reductions of the determining equations for the nonclassical symmetries. Transformations linearizing the determining equations are obtained in the general case and under different additional constraints. A nontrivial example illustrating applications of <b>reduction</b> <b>operators</b> to finding exact solutions of equations from the class under consideration is presented. An observed connection between <b>reduction</b> <b>operators</b> and Darboux transformations is discussed. Comment: 31 pages, minor misprints are correcte...|$|R
40|$|Abstract. An {{interactive}} discovery {{method for}} finding association rules is presented. It consists in a user-guided search using <b>reduction</b> <b>operators</b> on a rule. Rules are generated on-demand {{according to the}} navigation made by the user. Main interest {{of this approach is}} that, at each step, the user has only a linear number of new rules to analyse and that all computations are done in polynomial time. Several <b>reduction</b> <b>operators</b> are presented. We also show that the search space can be reduced when clone items are present. ...|$|R
40|$|The {{notion of}} {{singular}} <b>reduction</b> <b>operators,</b> i. e., of singular operators of nonclassical (conditional) symmetry, of partial differential equations in two independent variables is introduced. All possible reductions of these equations to first-order ODEs are are exhaustively described. As examples, properties of singular <b>reduction</b> <b>operators</b> of (1 + 1) -dimensional evolution and wave equations are studied. It is shown how to favourably enhance the derivation of nonclassical symmetries for this class by an in-depth prior {{study of the}} corresponding singular vector fields. Comment: 22 pages, minor correction...|$|R
50|$|When {{compared}} with Reduction, privatization requires one task {{instead of two}} separate tasks {{in the case of}} privatization. This task, in an abstract form, is basically analyzing the code to identify the privatizable variables. On the other hand, the two tasks required by Reduction are: identifying the reduction variable, and then parallelizing the <b>reduction</b> <b>operator.</b> By observing each of the two techniques, it's easy tell what type of overhead each one adds to the parallel program; reduction increases the computation overhead while privatization increases the memory consumed by the program.|$|E
5000|$|APL makes a clear {{distinction}} between functions and operators. Functions take arrays (variables or constants or expressions) as arguments, and return arrays as results. Operators (similar to higher-order functions) take functions or arrays as arguments, and derive related functions. For example, the [...] "sum" [...] function is derived by applying the [...] "reduction" [...] operator to the [...] "addition" [...] function. Applying the same <b>reduction</b> <b>operator</b> to the [...] "maximum" [...] function (which returns the larger of two numbers) derives a function which returns the largest of a group (vector) of numbers. In the J language, Iverson substituted the terms [...] "verb" [...] for [...] "function" [...] and [...] "adverb" [...] or [...] "conjunction" [...] for [...] "operator".|$|E
40|$|Introduction In earlier {{publications}} [3, 4] {{the theoretical}} background of reduction operators has been thoroughly discussed. This letter presents an interesting {{case study of}} the <b>reduction</b> <b>operator</b> approach to circuit equations. Based on an extremely simple example circuit, {{the relation between the}} nodal equations and the state variable equations is examined. 2 A review of the <b>reduction</b> <b>operator</b> Let Rn be the <b>reduction</b> <b>operator</b> of rank n. Its formal definitions including all properties and proofs can be found in [3, 4]. For convenience though, we will repeat its most essential definition Rn (A) 4 = I n 0 21 A Γ 1 11 I r A 11 n A 12 <F 29. ...|$|E
40|$|AbstractThe {{solution}} of the problem on <b>reduction</b> <b>operators</b> and nonclassical <b>reductions</b> of the Burgers equation is systematically treated and completed. A new proof of the theorem on the special “no-go” case of regular <b>reduction</b> <b>operators</b> is presented, and {{the representation of the}} coefficients of operators in terms of solutions of the initial equation is constructed for this case. All possible nonclassical reductions of the Burgers equation to single ordinary differential equations are exhaustively described. Any Lie reduction of the Burgers equation proves to be equivalent via the Hopf–Cole transformation to a parameterized family of Lie reductions of the linear heat equation...|$|R
40|$|The {{solution}} of the problem on <b>reduction</b> <b>operators</b> and nonclassical <b>reductions</b> of the Burgers equation is systematically treated and completed. A new proof of the theorem on the special "no-go" case of regular <b>reduction</b> <b>operators</b> is presented, and {{the representation of the}} coefficients of operators in terms of solutions of the initial equation is constructed for this case. All possible nonclassical reductions of the Burgers equation to single ordinary differential equations are exhaustively described. Any Lie reduction of the Burgers equation proves to be equivalent via the Hopf-Cole transformation to a parameterized family of Lie reductions of the linear heat equation. Comment: 11 pages, minor correction...|$|R
40|$|We {{describe}} exchange-only universal {{quantum computation}} and leakage {{reduction in the}} 3 -qubit decoherence free subsystem (DFS). We discuss the angular momentum structure of the DFS, the proper forms for the DFS CNOT and leakage <b>reduction</b> <b>operators</b> in the total angular momentum basis, and new exchange-only pulse sequences for the CNOT and leakage <b>reduction</b> <b>operators.</b> Our new DFS CNOT sequence requires 22 pulses in 13 time steps. The DFS leakage reduction sequence, the first explicit leakage reduction sequence of its kind, requires 30 pulses in 20 time steps. Although the search for sequences was performed numerically using a genetic algorithm, the solutions presented here are exact, with closed-form expressions...|$|R
40|$|This paper {{presents}} MOCT, a multi-object chromatic tracking {{technique for}} real-time natural video processing. Its main step is the MOCT localization algorithm, that performs local data evaluations {{in order to}} apply a multiple output parallel <b>reduction</b> <b>operator</b> to the image. The <b>reduction</b> <b>operator</b> is used to localize {{the positions of the}} object centroids, to compute the number of pixels occupied by an object and its bounding boxes, and to update object trajectories in image space. The operator is analyzed using three different computation layouts and tested over several reduction factors. ...|$|E
40|$|AbstractIn {{this paper}} we {{consider}} the extension of genetic algorithms (GAs) with a probabilistic Boltzmann <b>reduction</b> <b>operator</b> and prove their convergence to the optimum. The algorithm {{can be seen as}} a hybridisation between GAs and simulated annealing (SA), i. e. a SA-like GA. The “temperature” parameter allows us to control the size of the entries of the probabilistic transition matrix of the corresponding Markov chain. In the limit case of temperature zero, the <b>reduction</b> <b>operator</b> becomes a kind of strong elitism. Convergence to the optimum is shown under very mild conditions for the sequence of temperatures {ck}. This means that the proposed algorithm is quite robust, and can be expected to perform well on practical applications...|$|E
40|$|AbstractIn this paper, we {{introduce}} {{a new kind of}} spectrum for the C⋅ 0 -class contractions. Since elements in this spectrum are functions, rather than numbers, we shall call it functional spectrum. Functional spectrum is a “large” closed subset of the Hardy space over the unit disk, and in many cases there is a canonical embedding of classical spectrum into functional spectrum. The study is carried out in the setting of the Hardy space over the bidisk H 2 (D 2), on which every C⋅ 0 -class contraction has a representation. A key tool is <b>reduction</b> <b>operator.</b> The <b>reduction</b> <b>operator</b> also gives rise to an equivalent statement of the Invariant Subspace Problem...|$|E
40|$|Reductions for {{systems of}} ODEs {{integrable}} via the standard factorization method (the Adler-Kostant-Symes scheme) or the generalized factorization method, {{developed by the}} authors earlier, are considered. Relationships between such <b>reductions,</b> <b>operator</b> Yang-Baxter equations, and some kinds of non-associative algebras are established. ...|$|R
40|$|We discuss {{constructing}} non-linear noise <b>reduction</b> <b>operators</b> on binary images using {{a training}} set of noiseless images. We extract from the training set a probability distribution over local neighborhoods. Our operator changes pixel values {{when such a}} change turns a low probability neighborhood into high probability one...|$|R
40|$|This paper {{presents}} {{a family of}} parallel thinning algorithms for extracting medial surfaces from 3 D binary pictures. The proposed algorithms are based on sufficient conditions for 3 D parallel <b>reduction</b> <b>operators</b> to preserve topology for (26, 6) pictures. Hence it is self-evident that our algorithms are topology preserving. Their efficient implementation on conventional sequential computers is also presented...|$|R
