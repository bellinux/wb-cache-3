2467|3009|Public
25|$|For a <b>recommender</b> <b>system,</b> {{sentiment}} analysis {{has been proven}} to be a valuable technique. A <b>recommender</b> <b>system</b> aims to predict the preference to an item of a target user. Mainstream recommender systems work on explicit data set. For example, collaborative filtering works on the rating matrix, and content-based filtering works on the meta-data of the items.|$|E
25|$|Except the {{difficulty}} of the sentiment analysis itself, applying sentiment analysis on reviews or feedback also face the challenge of spam and biased reviews. One direction of work is focused on evaluating the helpfulness of each review. Review or feedback poorly written are hardly helpful for <b>recommender</b> <b>system.</b> Besides, a review can be designed to hinder sales of a target product, thus be harmful to the <b>recommender</b> <b>system</b> even it is well written.|$|E
25|$|The MovieLens {{recommender}} system: MovieLens is a non-commercial movie <b>recommender</b> <b>system</b> {{that has}} been running {{for over a decade}} now, with over 164,000 unique visitors to date, who have provided over 15 million movie ratings.|$|E
40|$|In this paper, {{we present}} new {{extensions}} to traditional approaches to <b>recommender</b> <b>systems</b> by making <b>recommender</b> <b>systems</b> support data warehousing capabilities. In particular, we propose <b>recommender</b> <b>systems</b> {{to work in}} multidimensional settings {{as opposed to the}} traditional twodimensional user/item environments. We also propose <b>recommender</b> <b>systems</b> to support rich profiling and OLAP capabilities. ...|$|R
40|$|Abstract <b>Recommender</b> <b>systems</b> play an {{important}} role in helping online users find relevant information by suggesting information of potential interest to them. Due to the potential value of social relations in <b>recommender</b> <b>systems,</b> social recommendation has attracted increasing attention in recent years. In this paper, we present a review of existing <b>recommender</b> <b>systems</b> and discuss some research directions. We begin by giving formal definitions of social recommendation and discuss the unique property of social recommendation and its implications compared with those of traditional <b>recommender</b> <b>systems.</b> Then, we classify existing social <b>recommender</b> <b>systems</b> into memory-based social <b>recommender</b> <b>systems</b> and model-based social <b>recommender</b> <b>systems,</b> according to the basic models adopted to build the systems, and review representative systems for each category. We also present some key findings from both positive and negative experiences in building social <b>recommender</b> <b>systems,</b> and research directions to improve social recommendation capabilities...|$|R
5000|$|Montaner {{provided}} the first overview of <b>recommender</b> <b>systems</b> from an intelligent agent perspective. Adomavicius provided a new, alternate overview of <b>recommender</b> <b>systems.</b> [...] Herlocker provides an additional overview of evaluation techniques for <b>recommender</b> <b>systems,</b> and Beel et al. discussed {{the problems of}} offline evaluations. Beel et al. have also provided literature surveys on available research paper <b>recommender</b> <b>systems</b> and existing challenges.|$|R
25|$|Based on the feature/aspects and {{the sentiments}} {{extracted}} from the user-generated text, a hybrid <b>recommender</b> <b>system</b> can be constructed. There {{are two types of}} motivation to recommend a candidate item to a user. The first motivation is the candidate item have numerous common features with the user's preferred items, while the second motivation is that the candidate item receives a high sentiment on its features. For a preferred item, it is reasonable to believe that items with the same features will have a similar function or utility. So, these items will also likely to be preferred by the user. On the other hand, for a shared feature of two candidate items, other users may give positive sentiment to one of them while give negative sentiment to another. Clearly, the high evaluated item should be recommended to the user. Based on these two motivations, a combination ranking score of similarity and sentiment rating can be constructed for each candidate item.|$|E
25|$|In {{many social}} {{networking}} services or e-commerce websites, users can provide text review, comment or {{feedback to the}} items. These user-generated text provide {{a rich source of}} user's sentiment opinions about numerous products and items. Potentially, for an item, such text can reveal both the related feature/aspects of the item and the users' sentiments on each feature. The item's feature/aspects described in the text play the same role with the meta-data in content-based filtering, but the former are more valuable for the <b>recommender</b> <b>system.</b> Since these features are broadly mentioned by users in their reviews, they {{can be seen as the}} most crucial features that can significantly influence the user's experience on the item, while the meta-data of the item (usually provided by the producers instead of consumers) may ignore features that are concerned by the users. For different items with common features, a user may give different sentiments. Also, a feature of the same item may receive different sentiments from different users. Users' sentiments on the features can be regarded as a multi-dimensional rating score, reflecting their preference on the items.|$|E
2500|$|Last.fm is a music website, {{founded in}} the United Kingdom in 2002. Using a music <b>recommender</b> <b>system</b> called [...] "Audioscrobbler", Last.fm builds a {{detailed}} profile of each user's musical taste by recording details of the tracks the user listens to, either from Internet radio stations, or the user's computer or many portable music devices. This information is transferred ("scrobbled") to Last.fm's database either via the music player itself (including, among others Spotify, Deezer, Tidal, and MusicBee) or via a plugin installed into the user's music player. The data is then displayed on the user's profile page and compiled to create reference pages for individual artists.|$|E
40|$|<b>Recommender</b> <b>Systems</b> {{have become}} an {{important}} part of large e-commerce websites. One can safely say, they are the bread and butter of large E-Commerce websites. We may have seen the “customers who bought item 1 also bought item 2 ” feature of sites such as amazon. com and found it useful. This is exactly what <b>recommender</b> <b>systems</b> strive to achieve. The basic notion behind introducing <b>recommender</b> <b>systems</b> in websites is simple: to help the customers or users using the website in making their decisions. In general the goal of any recommendation system is to present users with a highly relevant set of items. Recommendation algorithms can be generally classified into three types (i) Non-Personalized, (ii) Content-Based, and (iii) Collaborative Filtering algorithms. Apart from these three approaches, we also have hybrid approach wherein we can combine the above mentioned algorithms to improve the performance of <b>recommender</b> <b>systems.</b> Literature survey done on <b>recommender</b> <b>systems</b> shows that a lot of work has been carried out in this area and this paper gives an insight into two very popular recommender systems: Non-personalized and Collaborative <b>recommender</b> <b>systems.</b> The paper gives an insight into two approaches of Nonpersonalized <b>recommender</b> <b>systems</b> and the User-based approach of Collaborative <b>recommender</b> <b>systems.</b> General Terms Non-Personalized <b>recommender</b> <b>systems,</b> Collaborative Filtering techniques, Hybrid <b>recommender</b> <b>systems...</b>|$|R
40|$|<b>Recommender</b> <b>systems</b> {{have become}} {{increasingly}} popular. Most research on <b>recommender</b> <b>systems</b> has focused on recommendation algorithms. There has been relatively little research, however, {{in the area of}} generalized system architectures for recommendation systems. In this paper, we introduce weHelp - a reference architecture for social <b>recommender</b> <b>systems.</b> Our architecture is designed to be application and domain agnostic, but we briefly discuss here how it applies to <b>recommender</b> <b>systems</b> for software engineering...|$|R
40|$|Systems able {{to suggest}} items that a user may be {{interested}} in are usually named as <b>Recommender</b> <b>Systems.</b> The new emergent field of <b>Recommender</b> <b>Systems</b> has undoubtedly gained much interest in the research community. Although <b>Recommender</b> <b>Systems</b> work well in suggesting books, movies and items of general interest, many users express today a feeling that the existing systems don’t actually identify them as individual personalities. This dissatisfaction turned the research society towards the development of new approaches on <b>Recommender</b> <b>Systems,</b> more user-centric. A methodology originated from Decision Theory is exploited herein, aiming to address to the lack of personalization in <b>Recommender</b> <b>Systems</b> by integrating the user in the recommendation process...|$|R
2500|$|... {{system for}} Usenet news. [...] The system {{collected}} ratings from Usenet readers and used those ratings {{to predict how}} much other readers would like an article before they read it. [...] This recommendation engine {{was one of the}} first automated collaborative filtering systems in which algorithms were used to automatically form predictions based on historical patterns of ratings. [...] The overall system was called the [...] "GroupLens" [...] recommender, and the servers that collected the ratings and performed the computation were called the [...] "Better Bit Bureau". [...] This name was later dropped after a request from the Better Business Bureau. [...] "GroupLens" [...] is now used as a name both for this <b>recommender</b> <b>system,</b> and for the research lab at the University of Minnesota.|$|E
5000|$|In opinion based <b>recommender</b> <b>system,</b> an {{important}} concern {{is how to}} evaluate the user-generated reviews on the items. One {{of the purpose of}} this evaluation is to identify malicious or spam reviews. Poorly written reviews are considered helpless to the <b>recommender</b> <b>system.</b> However, even if a review is well generated, they can still be harmful to the <b>recommender</b> <b>system</b> by their biased prejudice to form an actual advertisement or slander towards a target item.|$|E
50|$|Trust - A <b>recommender</b> <b>system</b> is {{of little}} value for a user if the user does not trust the system. Trust can be built by a <b>recommender</b> <b>system</b> by {{explaining}} how it generates recommendations, and why it recommends an item.|$|E
40|$|Abstract. <b>Recommender</b> <b>systems</b> {{are being}} used by an {{ever-increasing}} number of E-commerce sites to help con-sumers find products to purchase. What started as a novelty {{has turned into a}} serious business tool. <b>Recommender</b> <b>systems</b> use product knowledge—either hand-coded knowledge provided by experts or “mined ” knowledge learned from the behavior of consumers—to guide consumers through the often-overwhelming task of locating products they will like. In this article we present an explanation of how <b>recommender</b> <b>systems</b> are related to some traditional database analysis techniques. We examine how <b>recommender</b> <b>systems</b> help E-commerce sites increase sales and analyze the <b>recommender</b> <b>systems</b> at six market-leading sites. Based on these examples, we create a taxonomy of <b>recommender</b> <b>systems,</b> including the inputs required from the consumers, the additional knowledge required from the database, the ways the recommendations are presented to consumers, the technologies used to create the recommendations, and the level of personalization of the recommendations. We identify five commonly used E-commerce recommender application models, describe several open research problems in the field of recom-mender systems, and examine privacy implications of <b>recommender</b> <b>systems</b> technology...|$|R
40|$|Abstract- <b>Recommender</b> <b>systems</b> are {{software}} applications {{that belong to}} a class of personalized information filtering technologies that aim to support decision making in large information space. There are various techniques being used {{to achieve this goal}} in traditional and mobile <b>recommender</b> <b>systems.</b> The <b>recommender</b> <b>systems</b> techniques are usually classified in four main categories: Collaborative Filtering (CF), Content Based Filtering (CBF), Knowledge Based Filtering (KBF) and Hybrid Filtering (HF). In this paper an overview of these techniques, challenges and evaluation metrics of <b>recommender</b> <b>systems</b> is discussed...|$|R
40|$|<b>Recommender</b> <b>systems</b> have {{frequently}} been evaluated {{with respect to}} their average performance for all users. However, optimizing such <b>recommender</b> <b>systems</b> regarding those evaluation measures might provide worse results for a subset of users. Defining a difficulty measure allows us to evaluate and optimize <b>recommender</b> <b>systems</b> in a personalized fashion. We introduce an experimental setup to evaluate the eligibility of such a difficulty score. We formulate the hypothesis that provided a difficulty score <b>recommender</b> <b>systems</b> can be optimized regarding costs and performance simultaneously. Categories and Subject Descriptor...|$|R
5000|$|... #Subtitle level 2: Reproducibility in <b>recommender</b> <b>system</b> {{research}} ...|$|E
5000|$|... #Subtitle level 2: Spam Detection in Opinion-based <b>Recommender</b> <b>System</b> ...|$|E
50|$|For a <b>recommender</b> <b>system,</b> {{sentiment}} analysis {{has been proven}} to be a valuable technique. A <b>recommender</b> <b>system</b> aims to predict the preference to an item of a target user. Mainstream recommender systems work on explicit data set. For example, collaborative filtering works on the rating matrix, and content-based filtering works on the meta-data of the items.|$|E
40|$|Abstract—Recommender Systems apply machine {{learning}} and data mining techniques to filter undetected information and can predict whether a user {{of a system}} would like a given resource based on his/her interests and preferences. To date a number of recommendation algorithms have been proposed, where Collaborative Filtering (CF) and Content-Based Filtering (CBF) {{are the two most}} famous and adopted recommendation techniques. CF <b>Recommender</b> <b>Systems</b> recommend items by identifying other users with similar taste and use their opinions for recommendation. CF <b>Recommender</b> <b>Systems</b> suffer from problems and challenges such as scalability, first rater (new item), data sparsity and cold-start problems. On the other hand, CBF <b>Recommender</b> <b>Systems</b> recommend items based on the content information of the items and match these items with interest and preferences of a user and therefore suffer from an overspecialization problem. In order to generate accurate and good recommendations, Hybrid <b>Recommender</b> <b>Systems</b> combine CF and CBF <b>Recommender</b> <b>Systems</b> to avoid the above aforementioned problems and challenges. This paper initially discusses <b>Recommender</b> <b>Systems</b> in general, then presents an overview of the state-of-the-art {{research in the area of}} Hybrid <b>Recommender</b> <b>Systems,</b> specifically from the perspective of types, applications, architectures and algorithms and finally discusses relevant open issues of Hybrid <b>Recommender</b> <b>Systems...</b>|$|R
40|$|<b>Recommender</b> <b>systems</b> {{are being}} used by an {{ever-increasing}} number of E-commerce sites to help consumers find products to purchase. What started as a novelty {{has turned into a}} serious business tool. <b>Recommender</b> <b>systems</b> use product knowledge [...] either hand-coded knowledge provided by experts or "mined" knowledge learned from the behavior of consumers [...] to guide consumers through the often-overwhelming task of locating products they will like. In this article we present an explanation of how <b>recommender</b> <b>systems</b> are related to some traditional database analysis techniques. We examine how <b>recommender</b> <b>systems</b> help E-commerce sites increase sales and analyze the <b>recommender</b> <b>systems</b> at six market-leading sites. Based on these examples, we create a taxonomy of <b>recommender</b> <b>systems,</b> including the inputs required from the consumers, the additional knowledge required from the database, the ways the recommendations are presented to consumers, the technologies used to create the recommendations, and t [...] ...|$|R
40|$|Reputation {{systems are}} {{employed}} to provide users with {{advice on the}} quality of items on the Web, based on the aggregated value of user-based ratings. <b>Recommender</b> <b>systems</b> are used online to suggest items to users according to the users, expressed preferences. Yet, <b>recommender</b> <b>systems</b> will endorse an item regardless of its reputation value. In this paper, we report the incorporation of reputation models into <b>recommender</b> <b>systems</b> to enhance the accuracy of recommendations. The proposed method separates the implementation of <b>recommender</b> and reputation <b>systems</b> for generality. Our experiment showed that the proposed method could enhance the accuracy of existing <b>recommender</b> <b>systems...</b>|$|R
5000|$|<b>Recommender</b> <b>system,</b> {{in which}} case the data matrix has missing values and the {{approximation}} is categorical.|$|E
50|$|Robustness - When {{users can}} {{participate}} in the <b>recommender</b> <b>system,</b> the issue of fraud must be addressed.|$|E
50|$|Except the {{difficulty}} of the sentiment analysis itself, applying sentiment analysis on reviews or feedback also face the challenge of spam and biased reviews. One direction of work is focused on evaluating the helpfulness of each review. Review or feedback poorly written are hardly helpful for <b>recommender</b> <b>system.</b> Besides, a review can be designed to hinder sales of a target product, thus be harmful to the <b>recommender</b> <b>system</b> even it is well written.|$|E
5000|$|N. Rubens, M. Elahi, M. Sugiyama, D. Kaplan. <b>Recommender</b> <b>Systems</b> Handbook: Active Learning in <b>Recommender</b> <b>Systems</b> (eds. F. Ricci, P.B. Kantor, L. Rokach,B. Shapira). Springer, 2015 https://www.researchgate.net/publication/296481444_Active_Learning_in_Recommender_Systems, http://activeintelligence.org/research/al-rs/.|$|R
50|$|Guided Selling-Systems are {{different}} from <b>Recommender</b> <b>systems</b> {{in the way that}} statistical recommenders calculate recommendations based on usage data instead of the actual user input to a questionnaire. The advantage of Guided Selling to <b>recommender</b> <b>systems</b> is an objectively calculated product proposal and a needs-based product advice that usually has a higher quality than products suggested by <b>recommender</b> <b>systems.</b> The drawback is that Guided Selling-Systems need domain-specific knowledge about the product category whereas <b>recommender</b> <b>systems</b> (at least Collaborative filtering can work across all product categories of e.g. a website.|$|R
40|$|Abstract. <b>Recommender</b> <b>systems</b> {{are needed}} to find food items of one’s interest. We review <b>recommender</b> <b>systems</b> and {{recommendation}} methods. We propose a food personalization framework based on adaptive hypermedia. We extend Hermes framework with food recommendation functionality. We combine TF-IDF term extraction method with cosine similarity measure. Healthy heuristics and standard food database are incorporated into the knowledgebase. Based on the performed evaluation, we conclude that semantic <b>recommender</b> <b>systems</b> in general outperform traditional <b>recommenders</b> <b>systems</b> with respect to accuracy, precision, and recall, and that the proposed recommender has a better F-measure than existing semantic recommenders...|$|R
50|$|The term hybrid <b>recommender</b> <b>system</b> is {{used here}} to {{describe}} any <b>recommender</b> <b>system</b> that combines multiple recommendation techniques together to produce its output. There {{is no reason}} why several different techniques of the same type could not be hybridized, for example, two different content-based recommenders could work together, and a number of projects have investigated this type of hybrid: NewsDude,which uses both naive Bayes and kNN classifiers in its news recommendations is just one example.|$|E
50|$|Gravity R&D {{extended}} its product portfolio in 2015 by introducing its automated, turn-key <b>recommender</b> <b>system</b> YUSP for small and medium enterprises (SMEs).|$|E
50|$|To {{create a}} user profile, the system mostly focuses on {{two types of}} information:1. A model of the user's preference.2. A history of the user's {{interaction}} with the <b>recommender</b> <b>system.</b>|$|E
40|$|Abstract. In {{the past}} {{conversational}} <b>recommender</b> <b>systems</b> {{have adopted a}} similarity-based approach to recommendation, preferring cases {{that are similar to}} some user query or profile. Recent research, however, has indicated the importance of diversity as an additional selection constraint. In this paper we attempt to clarify the role of diversity in conversational <b>recommender</b> <b>systems,</b> highlighting the pitfalls of naively incorporating current diversity-enhancing techniques into existing <b>recommender</b> <b>systems.</b> Moreover, we describe and fully evaluate a powerful new diversityenhancing technique that has the ability to significantly improve the performance of conversational <b>recommender</b> <b>systems</b> across the board. ...|$|R
40|$|<b>Recommender</b> <b>systems</b> {{are needed}} to find food items of ones interest. We review <b>recommender</b> <b>systems</b> and {{recommendation}} methods. We propose a food personalization framework based on adaptive hypermedia. We extend Hermes framework with food recommendation functionality. We combine TF-IDF term extraction method with cosine similarity measure. Healthy heuristics and standard food database are incorporated into the knowledgebase. Based on the performed evaluation, we conclude that semantic <b>recommender</b> <b>systems</b> in general outperform traditional <b>recommenders</b> <b>systems</b> with respect to accuracy, precision, and recall, and that the proposed recommender has a better F-measure than existing semantic recommenders...|$|R
40|$|Emotional {{context is}} {{becoming}} a promising paradigm to develop more intuitive and sensitive <b>recommender</b> <b>systems.</b> Ambient <b>Recommender</b> <b>Systems,</b> arise from the analysis of new trends on the exploitation of the emotional context {{in the next generation}} of <b>recommender</b> <b>systems.</b> We explain some results of these new trends in real-world applications through the Smart Prediction Assistant (SPA) platform implemented in an Intelligent Learning Guide. While most approaches to recommending focus on algorithm performance, SPA makes recommendations to users on the basis of emotional information acquired in an incremental way. This article provides a cross-disciplinary perspective to achieve this goal in such <b>recommender</b> <b>systems</b> through the SPA platform. The methodology applied in SPA {{is the result of a}} bunch of technology transfer projects for large real-world <b>recommender</b> <b>systems...</b>|$|R
