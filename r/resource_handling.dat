48|602|Public
25|$|Microsoft {{unveiled}} DirectX 11 at the Gamefest 08 {{event in}} Seattle, {{with the major}} scheduled features including GPGPU support (DirectCompute), and Direct3D 11 with tessellation support and improved multi-threading support to assist video game developers in developing games that better utilize multi-core processors. Direct3D 11 runs on Windows Vista, Windows 7, Windows 8 and Windows 10. Parts of the new API such as multi-threaded <b>resource</b> <b>handling</b> can be supported on Direct3D 9/10/10.1-class hardware. Hardware tessellation and Shader Model 5.0 require Direct3D 11 supporting hardware. Microsoft has since released the Direct3D 11 Technical Preview. Direct3D 11 is a strict superset of Direct3D 10.1 — all hardware and API features of version 10.1 are retained, and new features are added only when necessary for exposing new functionality. This helps to keep backwards compatibility with previous versions of DirectX.|$|E
40|$|Abstract. We compare {{approaches}} to implicit and explicit <b>resource</b> <b>handling</b> in coinductive and concurrent logic programming. We show various effects that implicit and explicit handling of resources have on implementation and semantics. In particular, {{we show that}} recently in-troduced coalgebraic logic programming [17] is a paradigm in which, in contrast to many other alternative systems, the aspects of logic and con-trol are intertwined, and computational resources are handled implicitly...|$|E
40|$|DCOS is a Data Centric {{lightweight}} Operating System for embedded devices. Despite limited {{energy and}} hardware resources, it supports a data driven architecture with provisions for dynamic loadable Modules. It combines these with Real-Time provisions based on Earliest Deadline First {{with a simple}} but smart <b>resource</b> <b>handling</b> mechanism. We will give {{an overview of the}} capabilities of DCOS and we will describe the basics of the main mechanisms 1...|$|E
5000|$|In {{computer}} programming, {{a handle}} is an abstract {{reference to a}} <b>resource.</b> <b>Handles</b> are used when application software references blocks of memory or objects managed by another system, such as a database or an operating system. A <b>resource</b> <b>handle</b> can be an opaque identifier, in which case it is often an integer number (often an array index in an array or [...] "table" [...] {{that is used to}} manage that type of resource), or it can be a pointer that allows access to further information.|$|R
50|$|The Application Isolation API (JSR 121) {{provides}} a specification for isolating and controlling Java application life cycles {{within a single}} Java Virtual Machine (JVM) or between multiple JVMs. An isolated computation is described as an Isolate that can communicate and exchange <b>resource</b> <b>handles</b> (e.g. open files) with other Isolates through a messaging facility.|$|R
50|$|Frees up police <b>resources</b> to <b>handle</b> {{the rising}} {{occurrence}} {{of crime in}} Santa Cruz.|$|R
40|$|Planning domains often feature subproblems such as route {{planning}} and <b>resource</b> <b>handling.</b> Using static domain analysis techniques, {{we have been}} able to identify certain commonly occurring subproblems within planning domains, making it possible to abstract these subproblems from the overall goals of the planner and deploy specialized technology to handle them in a way integrated with the broader planning activities. Using two such subsolvers our hybrid planner, stan 4, participated successfully in the Fifth International Conference on Artificial Intelligence Planning and Scheduling (AIPS' 00) planning competition...|$|E
40|$|Experience Management in {{knowledge}} work {{has to take}} the execution of rather individual tasks into account. Therefore it is particularly impor-tant to provide a scheme that represents and al-lows to grasp the rather individual but reoccur-ring aspects {{in knowledge}} work. Task pattern approaches address this demand. In this paper we present two task pattern approaches: Personal Task Patterns focusing on individual task exe-cution and <b>resource</b> <b>handling</b> and Collaborative Task Patterns {{for the support of}} process-related aspects. We show how both approaches can be combined and supplement each other. ...|$|E
40|$|The {{production}} of 2 D and 3 D animated films demands high end systems with massive computing <b>resource.</b> <b>Handling</b> massive computing resources requires high investment in infrastructure and maintenance, which is amajor hindrance for the animation industry / animators {{who want to}} produce few minutes of film. The cloud services promises to deliver on-demand and scalable computing resources to the animation industry. In this paper, it is proposed to investigate the cloud services in animation. The research is designed in two case studies to analyze the scenarios in both traditional and through the cloud services...|$|E
50|$|Common <b>resource</b> <b>handles</b> are file descriptors, network sockets, {{database}} connections, process identifiers (PIDs), and job IDs. Process IDs and job IDs are explicitly visible integers, while file descriptors and sockets (which {{are often}} implemented {{as a form}} of file descriptor) are represented as integers, but are typically considered opaque. In traditional implementations, file descriptors are indices into a (per-process) file descriptor table, thence a (system-wide) file table.|$|R
5000|$|The [...] "with" [...] {{statement}} <b>handles</b> <b>resources.</b> One {{function is}} called when entering scope and another when leaving. This prevents forgetting {{to remove the}} <b>resource</b> and also <b>handles</b> more complicated situations such as exceptions.|$|R
50|$|Delivery and {{installation}} of the GARANT legal information <b>resource</b> are <b>handled</b> by more than 250 partner organisations in 500 towns and cities of Russia.|$|R
40|$|Abstract: Cloud {{computing}} is {{a business}} solution based environments which supports scalable computing on demand for the end user. Here the users demanded resources can be provided {{with the help of}} cloud models. Mainly the models deal with infrastructure, platform and software with distributed and parallel processing plays the multiplexer role. The system primarily uses virtualization technology to cope with the computing needs. By using virtualization dynamic resource requirements can be handled with service optimizations. Sometimes this dynamic <b>resource</b> <b>handling</b> suffers from the performance and utilization issues due to their heterogeneous environments and availability. For effectively allotting the resources to different process, they must be analysed previously for detecting their occupancy and residual means. Servers are continuously monitored for detection of overutilization and underutilization for understanding the loads of the system. Over the last few decades the grid has evolve form Globus based system to Nephele architecture for processing the parallel and distributed jobs. This work suggests the improved scheduling and job execution environments for traditional <b>resource</b> <b>handling</b> approach using ORM-DS (optimized Resource Management Decision System). It also manages and monitors the dynamic allocation and deallocation. The proposed approach is having 7 step process model starts with client request and ends with the gird based resources to the applications as per the requirements. It is based on hierarchical structure of their utilizations with a heuristics support for decision making. In future the trace driven simulations and experimental results demonstrates the good performance...|$|E
40|$|Abstract For {{distributed}} {{object or}} component systems based on CORBA or DCOM, a suitable software architecture {{and a strong}} separation of modules is necessary. Our object coordination net approach (OCoN) allows mixed event and state based true concurrent modeling. It describes contracts, object scheduling, <b>resource</b> <b>handling</b> and the abstract data and control flow of services. A seamless integration of contract specifications into service and object scheduling specifications is provided. Although abstract, the OCoN formalism remains operational which permits abstract simulation and a feasible implementation is guaranteed. The paper demonstrates the benefits of contract based coordination with the OCoN approach {{by means of an}} extended example...|$|E
40|$|Service-oriented {{architecture}} can {{be considered}} as a philosophy or paradigm in organizing and utilizing services and capabilities that may be under the control of different ownership domains. Virtualization provides abstraction and isolation of lower level functionalities, enabling portability of higher level functions and sharing of physical resources. However, dynamics, environmental conditions and increasing complexity / heterogeneity of underlying resources call for adaptive <b>resource</b> <b>handling.</b> In this view an intelligent distributed architecture that enables dynamic user management and control on network-wide resource sharing by using the Service Oriented Architecture concept is presented. Additionally, the proposed architecture supports trading of resources that will enable the transformation of traditional business models...|$|E
40|$|This {{paper is}} a {{contribution}} to define a complete and modular model of processes in container terminals, {{which can be used}} for simulation, test, monitor and control purposes. A schematic description of the main terminal processes is given, by specifying the <b>resources</b> <b>handling</b> containers in the Taranto Container Terminal. Then a Petri Net formalizes the sequence of operations, each involving the synchronization of resources, for the transshipment process, the efficiency ofwhich seem to be the key to obtain good performances. 1...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimited. This thesis examines {{the role of}} the comptroller in the area of Facilities Management. Though facilities management is often the largest consumer of operational <b>resources</b> <b>handled</b> by the comptroller, this field has historically been left strictly to the control of staff officers of the Civil Engineer Corp. The fiscal climate of the 1990 s will reward line managers who are able to work in partnership with their facilities managers. This thesis provides a framework of understanding on which such a partnership can be built. Lieutenant, United States Nav...|$|R
50|$|Code Black - An {{influx of}} {{patients}} {{so great that}} a hospital doesn't have the <b>resources</b> to <b>handle</b> them (mostly caused by major disasters such as a fire injuring many victims).|$|R
40|$|We {{propose a}} {{generalization}} of synchronization algebras that allows {{to deal with}} mobility and local <b>resource</b> <b>handling.</b> We show {{how it can be}} used to model communication primitives for distributed and mobile computations, such as the ones used in the global computing area. We propose a graph transformation formalism in the Synchronized Hyperedge Replacement approach which is parametric w. r. t. the synchronization algebra and thus allows to model complex systems based on the chosen communication primitives. We thus unify different models described in the literature and we allow to easily define new ones. We present various examples and a case study on Fusion Calculus, showing how different semantics for it can be derived using different synchronization algebras...|$|E
40|$|We {{describe}} a simple manufacturing domain that requires integrated planning and scheduling and report on our experience adapting existing techniques to this domain. The setting is on-line {{in the sense}} that additional jobs arrive asynchronously, perhaps several per second, while plans for previous jobs are being executed. While challenging, the domain is also forgiving: feasible schedules can be found quickly, suboptimal plans are acceptable, and plan execution is relatively reliable. An approach based on temporal state-space planning with constraint-based <b>resource</b> <b>handling</b> suffices for small to medium-sized instances of the problem, and our current implementation successfully controls two prototype plants. By integrating planning and scheduling, we enable high productivity even for complex plants...|$|E
40|$|Abstract We {{propose a}} {{generalization}} of synchronization algebras that allows {{to deal with}} mobility and local <b>resource</b> <b>handling.</b> We show {{how it can be}} used to model communication primitives for distributed and mobile computations, such as the ones used in the global computing area. We propose agraph transformation formalism in the Synchronized Hyperedge Replacement approach which is parametric w. r. t. the synchronization algebra and thus allows to model complex systems based on the chosen communication primitives. We thus unify different models described in the literature and we allow to easily define new ones. We present various examples and a case study on FusionCalculus, showing how different semantics for it can be derived using different synchronizatio...|$|E
40|$|In this paper, {{we propose}} a multi-skill project {{scheduling}} problem model for maintenance activities organization. Preventive maintenance activities are usually planned in advance: production is stopped and all maintenance activities should be processed {{as fast as}} possible in order to restart production. Moreover, these human <b>resource</b> <b>handled</b> activities require specific skills and are subject to precedence constraints. The main difference with Multi-Skill Project Scheduling Problem is that some activities may be submitted to disjunctive constraints due to material constraints of the production channel that we consider. We describe how we use these constraints to improve usual MSPSP resolution methods...|$|R
40|$|Research {{into the}} {{diffusion}} {{and use of}} ICTs often focuses on the adequacy of 'hard' factors in information infrastructures: technological elements which affect affordability and connectivity. This paper proposes that successful ICT application depends also upon 'soft' factors in domestic information infrastructures: legal, political, socio-cultural, and economic characteristics that affect not only ICTs but also the quality of information <b>resources</b> <b>handled</b> by those ICTs. Based on research data from Russia, the paper argues that one soft factor-trust-is critical for information quality and, hence, for ICT-based information systems success in transitional and developing economies. Copyright © 2002 John Wiley & Sons, Ltd. ...|$|R
5000|$|... 1997: {{established}} <b>Resource</b> Solutions to <b>handle</b> client’s outsourced {{human resource}} departments/functions ...|$|R
40|$|Abstract—The {{goal of this}} {{research}} is to devise a new architecture for integrating aspect oriented methodologies existing in the software engineering community to develop an Adaptive Composition and Runtime Environment (ACRE) for unmanaged adaptation of multimedia applications. The architecture of ACRE presented in this paper can transform non-adaptive applications by injecting adaptive behaviors into them and then execute them in a QoS-aware manner. The integrated environment presented in this paper, works at the level of JVM and the underlying OS for application transformation and adaptive <b>resource</b> <b>handling.</b> The proposed environment can be used to provide a sufficient degree of user perceived QoS in smart home / office environments, without programming adaptive behaviors in the applications. Keywords – Aspects, Middleware, Adaptation. 1...|$|E
40|$|Fully updated {{to reflect}} Java SE 7 {{language}} changes, Core Java™, Volume I—Fundamentals, Ninth Edition, is the definitive {{guide to the}} Java platform. Designed for serious programmers, this reliable, unbiased, no-nonsense tutorial illuminates key Java language and library features with thoroughly tested code examples. As in previous editions, all code is easy to understand, reflects modern best practices, and is specifically designed to help jumpstart your projects. Volume I quickly brings you up-to-speed on Java SE 7 core language enhancements, including the diamond operator, improved <b>resource</b> <b>handling,</b> and catching of multiple exceptions. All of the code examples have been updated to reflect these enhancements, and complete descriptions of new SE 7 features are integrated with insightful explanations of fundamental Java concepts...|$|E
30|$|Furthermore, as Papamitsiou and Economides (2014) explain, “these four axes are not {{completely}} autonomous, since significant overlaps may occur”. Nevertheless, when combined with the barrier dimensions, the classification of the six workshop papers—while also noting the call for papers was very open and non-directive—a distinct picture of the research focus of the group attending ICCE 2014 emerges: the focus is split between {{the question of how}} learning analytics could impact pedagogy, at different levels of abstraction, on the one side, and, on the other side, how learning is contextualised as a number of different data sources are made available for learning analytics. Patterns within the social aspects of learning is not a theme identified in the workshop papers, and educational <b>resource</b> <b>handling</b> is only present as a distinct focus in one paper.|$|E
50|$|Unlike {{many other}} web-programming toolkits, WebSharper offers a {{rich set of}} abstractions and DSL syntax for common web-related chores, such as {{composing}} HTML, defining web forms, managing required <b>resources</b> and <b>handling</b> URLs safely.|$|R
5000|$|The {{different}} character classes {{will generally}} <b>handle</b> <b>resource</b> problems in different ways: ...|$|R
5000|$|Instrumentation <b>Resource</b> Course: Identification, <b>Handling</b> and Processing of Surgical Instruments by Natalie Lind ...|$|R
40|$|To {{ease the}} {{development}} of distributed systems, the visual notions for the structural aspects of object-oriented analysis and design should be combined with techniques handling concurrency and distribution. A novel approach and language for the visual design of distributed software systems is introduced and illustrated {{by means of an}} example. The language of OCoNs (Object Coordination Nets) is integrated into the structuring mechanisms of the UML [1] standard for object-oriented analysis and design. Such an object-oriented notation is crucial for handling complex software systems and can be extended with the graphical expressive power of Petri-Nets to also describe concurrency and coordination. The same visual language is used to specify the interfaces and contracts of software components, the <b>resource</b> <b>handling</b> within a component as well as the control flow of services...|$|E
40|$|The authors present data-how {{solutions}} on {{a pipeline}} of transputers for banded and dense systems of linear equations using Gauss elimination and the Gauss-Jordan method, respectively, These implementations, written in occam, are especially effective {{when there is}} a continuous supply of right-hand sides to be solved with the same coefficient matrix. Attention is paid to both load balancing and <b>resource</b> <b>handling</b> within the processor elements of the pipeline, When solving multiple right-hand sides, floating-point efficiency levels on 32 -processor implementations range from 110 % (for dense systems) down to 90 % (for banded systems), where 100 % represents the peak performance attainable from a single transputer applied to the same problem (effectively back-to-back floating-point operations on data in external memory). Some conclusions are drawn on efficiency issues arising from state-of-the-art massively parallel supercomputers...|$|E
40|$|State-of-the-art {{object-oriented}} analysis and design combined with techniques handling concurrency and distribution {{on the design}} level ease the development of distributed systems. A novel approach and language for the visual design of distributed software systems is introduced and illustrated {{by means of an}} example. The language of OCoNs (Object Coordination Nets) integrates the structuring mechanisms of object-oriented concepts which are crucial for handling complex software systems with the graphical expressive power of Petri-Nets for describing concurrency and coordination. The same visual language is used to specify the interfaces of software components, the <b>resource</b> <b>handling</b> within a component as well as the control flow in methods. Keywords: visual design languages, objectorientation, coordination, concurrency, Petri-Nets 1 Introduction and Background Due to the progress in workstation technology and networking, distributed systems have gained much importance recently. Moreov [...] ...|$|E
50|$|Villagers in India's North Eastern {{state of}} Meghalaya are also {{concerned}} that rising sea levels will submerge neighbouring low-lying Bangladesh, {{resulting in an}} influx of refugees into Meghalaya—which has few <b>resources</b> to <b>handle</b> such a situation.|$|R
40|$|Abstract. The {{scenario}} {{defined by}} current Web architectures and paradigms (such as Cloud Computing), poses {{challenges and opportunities}} to users. On the one hand, they have to manage huge amounts of digital <b>resources</b> <b>handled</b> by different applications {{in spite of their}} possibly related content; on the other hand, they are enabled to share knowledge and participate to content creation. The interaction of these two aspects provided a great impulse to collaborative resource management: in this paper we present T++, an environment that ex-ploits semantic knowledge about digital resources in order to face these chal-lenges, by providing an integrated and smart management of heterogeneous in-formation objects...|$|R
5000|$|Water <b>Resources</b> Division - <b>handles</b> water conservation, and {{operates}} and maintains three seawater barriers ...|$|R
