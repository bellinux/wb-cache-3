376|114|Public
25|$|The {{mathematics}} of a cyclic <b>redundancy</b> <b>check,</b> used {{to provide}} a quick check against transmission errors, {{are closely related to}} those of an LFSR.|$|E
25|$|The cyclic <b>redundancy</b> <b>check</b> (CRC) {{is based}} on {{division}} in the ring of polynomials over the finite field GF(2) (the integers modulo 2), that is, the set of polynomials where each coefficient is either zero or one, and arithmetic operations wrap around.|$|E
25|$|In {{the high}} {{definition}} {{serial digital interface}} (and in dual-link HD), additional check words are provided to increase the robustness of the interface. In these formats, the four samples immediately following the EAV packets (but not the SAV packets) contain a cyclic <b>redundancy</b> <b>check</b> field, and a line count indicator. The CRC field provides a CRC of the preceding line (CRCs are computed independently for the Y and C streams), {{and can be used}} to detect bit errors in the interface. The line count field indicates the line number of the current line.|$|E
5000|$|Extensions and {{variations}} on the parity bit mechanism are horizontal <b>redundancy</b> <b>checks,</b> vertical <b>redundancy</b> <b>checks,</b> and [...] "double," [...] "dual," [...] or [...] "diagonal" [...] parity (used in RAID-DP).|$|R
50|$|In {{longitudinal}} <b>redundancy</b> <b>checking</b> and cyclic <b>redundancy</b> <b>checking,</b> {{block check}} characters are computed for, and added to, each message block transmitted. This block check character is {{compared with a}} second block check character computed by the receiver {{to determine whether the}} transmission is error free.|$|R
5000|$|... #Article: Polynomial {{representations}} of cyclic <b>redundancy</b> <b>checks</b> ...|$|R
25|$|A blank {{unformatted}} diskette has a {{coating of}} magnetic oxide with no magnetic {{order to the}} particles. During formatting, the magnetizations of the particles are aligned forming tracks, each broken up into sectors, enabling the controller to properly read and write data. The tracks are concentric rings around the center, with spaces between tracks where no data is written; gaps with padding bytes are provided between the sectors {{and at the end}} of the track to allow for slight speed variations in the disk drive, and to permit better interoperability with disk drives connected to other similar systems. Each sector of data has a header that identifies the sector location on the disk. A cyclic <b>redundancy</b> <b>check</b> (CRC) is written into the sector headers {{and at the end of}} the user data so that the disk controller can detect potential errors. Some errors are soft and can be resolved by automatically re-trying the read operation; other errors are permanent and the disk controller will signal a failure to the operating system if multiple attempts to read the data still fail.|$|E
2500|$|W. Wesley Peterson, {{mathematician}} {{and computer}} scientist, {{best known for}} inventing the Cyclic <b>Redundancy</b> <b>Check</b> (CRC) ...|$|E
50|$|In telecommunications, a {{transverse}} <b>redundancy</b> <b>check</b> (TRC) or vertical <b>redundancy</b> <b>check</b> is a <b>redundancy</b> <b>check</b> for synchronized parallel bits applied {{once per}} bit time, across the bit streams. This requires additional parallel channels for the check bit or bits.|$|E
50|$|These are {{polynomial}} {{representations of}} cyclic <b>redundancy</b> <b>checks</b> CRCs.|$|R
50|$|See Polynomial {{representations}} of cyclic <b>redundancy</b> <b>checks</b> for the algebraic {{representations of}} the polynomials for the CRCs below.|$|R
25|$|This {{typically}} {{contains two}} copies (may vary) of the File Allocation Table {{for the sake}} of <b>redundancy</b> <b>checking,</b> although rarely used, even by disk repair utilities.|$|R
50|$|In telecommunication, a {{longitudinal}} <b>redundancy</b> <b>check</b> (LRC), or horizontal <b>redundancy</b> <b>check,</b> {{is a form}} of <b>redundancy</b> <b>check</b> that is applied independently to each of a parallel group of bit streams. The data must be divided into transmission blocks, to which the additional check data is added.|$|E
5000|$|A [...] "parity track" [...] {{was present}} on the first {{magnetic}} tape data storage in 1951. Parity in this form, applied across multiple parallel signals, {{is known as a}} transverse <b>redundancy</b> <b>check.</b> This can be combined with parity computed over multiple bits sent on a single signal, a longitudinal <b>redundancy</b> <b>check.</b> In a parallel bus, there is one longitudinal <b>redundancy</b> <b>check</b> bit per parallel signal.|$|E
50|$|A set of 21 registers, {{numbered}} #1 to #21, used {{to store}} future PIN encryption keys. Each register includes a 2 hexadecimal digit longitudinal <b>redundancy</b> <b>check</b> (LRC) or a 2 hexadecimal digit cyclical <b>redundancy</b> <b>check</b> (CRC).|$|E
5000|$|Cyclic <b>redundancy</b> <b>checks</b> (CRCs) can correct 1-bit errors for {{messages}} at most [...] bits {{long for}} optimal generator polynomials of degree , see Mathematics of cyclic redundancy checks#Bitfilters ...|$|R
50|$|Error {{detection}} and correction is performed at various layers in the protocol stack. Network packets may contain a checksum, parity bits or cyclic <b>redundancy</b> <b>checks</b> to detect errors that occur during transmission.|$|R
50|$|Constantly checked as data is transmitted, {{this scheme}} {{is able to}} correct single-bit errors and detect many multiple-bit errors.For a {{tutorial}} and an example of computing the CRC see mathematics of cyclic <b>redundancy</b> <b>checks.</b>|$|R
5000|$|While simple {{longitudinal}} parity {{can only}} detect errors, {{it can be}} combined with additional error-control coding, such as a transverse <b>redundancy</b> <b>check,</b> to correct errors.The transverse <b>redundancy</b> <b>check</b> is stored on a dedicated [...] "parity track".|$|E
5000|$|... 8-bit cyclic <b>redundancy</b> <b>check</b> byte (generator: x8+x7+x4+x3+x+1) ...|$|E
5000|$|LRC : Longitudinal <b>redundancy</b> <b>check,</b> {{calculated}} {{according to}} ISO/IEC 7811-2 ...|$|E
50|$|There {{exists a}} vast variety of {{different}} hash function designs. However, some are of particularly widespread use because of either their simplicity or their suitability for detecting certain kinds of errors (e.g., the cyclic <b>redundancy</b> <b>check's</b> performance in detecting burst errors).|$|R
50|$|Checksum schemes include parity bits, check digits, and {{longitudinal}} <b>redundancy</b> <b>checks.</b> Some checksum schemes, {{such as the}} Damm algorithm, the Luhn algorithm, and the Verhoeff algorithm, {{are specifically}} designed to detect errors commonly introduced by humans in writing down or remembering identification numbers.|$|R
40|$|Abstractâ€”A {{firewall}} is {{a packet}} filter that is {{placed at the}} entrance of a private network. It checks the header fields of each incoming packet into the private network and decides, based on the specified rules in the firewall, whether to accept the packet and allow it to proceed or to discard the packet. To validate the correctness and effectiveness of the rules in a firewall, the firewall rules are usually subjected to two types of analysis: verification and <b>redundancy</b> <b>checking.</b> Verification is used to verify that the rules in a firewall accept all packets that should be accepted and discard all packets that should be discarded. <b>Redundancy</b> <b>checking</b> is used to check that no rule in a firewall is redundant (i. e. can be removed from the firewall without changing the sets of packets accepted and discarded by the firewall). In this paper we show that, contrary to the conventional wisdom, these two types of analysis are in fact equivalent. In particular, we show that (1) every verification algorithm can be also used to check whether a rule in a firewall is redundant, and (2) every <b>redundancy</b> <b>checking</b> algorithm can be also used to verify whether the rules in a firewall accept or discard an intended set of packets. I...|$|R
5000|$|The final {{character}} encoded in a {{magnetic stripe card}} is a computed Longitudinal <b>redundancy</b> <b>check.</b>|$|E
50|$|A cyclic <b>redundancy</b> <b>check</b> {{uses the}} {{remainder}} of polynomial division to detect errors in transmitted messages.|$|E
5000|$|W. Wesley Peterson, {{mathematician}} {{and computer}} scientist, {{best known for}} inventing the Cyclic <b>Redundancy</b> <b>Check</b> (CRC) ...|$|E
50|$|LAPM is {{an error}} control {{protocol}} defined in ITU-T recommendations V.42. Like many {{data link layer}} protocols, it is a variant of HDLC. Like the Microcom Networking Protocols that preceded it, LAPM uses cyclic <b>redundancy</b> <b>checking</b> (CRC) and retransmission of corrupted data (ARQ) to ensure data reliability.|$|R
50|$|Checksum algorithms, such as CRC32 {{and other}} cyclic <b>redundancy</b> <b>checks,</b> are {{designed}} to meet much weaker requirements, and are generally unsuitable as cryptographic hash functions. For example, a CRC was used for message integrity in the WEP encryption standard, but an attack was readily discovered which exploited the linearity of the checksum.|$|R
40|$|Cyclic <b>redundancy</b> <b>checks</b> (CRCs) {{are widely}} used in {{error-prone}} channels to detect corruption of data blocks. This report describes implementations of both the standard bit-by-bit technique for computing CRCs and a high-speed technique that employs precomputed tables to compute CRCs on a byte-by-byte basis. The technique could be further extended to compute CRCs word-by-word...|$|R
50|$|Typically the {{transmitter}} adds a <b>redundancy</b> <b>check</b> number {{to the end}} of each frame. The receiver uses the <b>redundancy</b> <b>check</b> number to check for possible damage. If the receiver sees that the frame is good, it sends an ACK. If the receiver sees that the frame is damaged, the receiver discards it and does not send an ACKâ€”pretending that the frame was completely lost, not merely damaged.|$|E
50|$|Longitudinal <b>redundancy</b> <b>check</b> (LRC) â€” {{it is one}} {{character}} and a validity character calculated from other data on the track.|$|E
5000|$|Cyclic <b>redundancy</b> <b>check</b> {{checksums}} {{for data}} transmission/retry and data storage, e.g. PCI Express (PCIe) Advanced Error Reporting, redundant I/O paths.|$|E
40|$|We have {{illustrated}} our {{techniques for}} designing and implementing cyclic <b>redundancy</b> <b>checks</b> for multilevel systems by discussing a particular example where {{the number of}} levels is 9. However, the techniques that we have {{described in this article}} are applicable in general. We hope that they will be useful to engineers designing other multilevel transmission systems...|$|R
40|$|Using a {{trace of}} address references, we {{compared}} the efficiency of several different hashing functions, such as cyclic <b>redundancy</b> <b>checking</b> (CRC) polynomials, Fletcher checksum, folding of address octets using the exclusive-or operation and bit extraction from the address. Guidelines are provided for determining {{the size of the}} hashmark required to achieve a specified level of performance...|$|R
50|$|The {{second type}} of {{languages}} have a formal logical basis, i.e. they have a formal syntax and semantics, and can be mapped to an existing formal language, such as first-order logic. Thus, those languages {{can be used as}} knowledge representation languages, and writing of those languages is supported by fully automatic consistency and <b>redundancy</b> <b>checks,</b> query answering, etc.|$|R
