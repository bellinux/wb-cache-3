0|1244|Public
50|$|The term CDATA, meaning <b>character</b> <b>data,</b> is {{used for}} distinct, but related, {{purposes}} in the markup languages SGML and XML. The term indicates that a certain portion of the document is general <b>character</b> <b>data,</b> rather than non-character <b>data</b> or <b>character</b> <b>data</b> with a more specific, limited structure.|$|R
40|$|This paper {{presents}} FPE (Formatpreserving Encryption) for <b>character</b> <b>data</b> in both fixed-width and variable-width encoding. Previous researches only studied FPE for fixed-width <b>character</b> <b>data.</b> In this paper, FPE for <b>character</b> <b>data</b> is categorized into NPE (Number-preserving Encryption) and LPE (Length-preserving Encryption). The schemes {{related to}} NPE and LPE are proposed to encrypt fixed-width and variable-width <b>character</b> <b>data,</b> respectively. Furthermore, the paper provides a general solution for both data types. The security {{and efficiency of}} these schemes are analyzed and verified.    ...|$|R
50|$|Languages {{that have}} a {{dedicated}} <b>character</b> <b>data</b> type generally include character literals; these include C, C++, Java, and Visual Basic, but not Python or PHP. Languages without <b>character</b> <b>data</b> types will typically use strings of length 1 to serve the same purpose a <b>character</b> <b>data</b> type would fulfil. This simplifies the implementation and basic usage of a language but also introduces new scope for programming errors.|$|R
50|$|Not {{addressed}} by the current specification is {{what to do with}} encoded <b>character</b> <b>data.</b> For example, in computers, <b>character</b> <b>data</b> manifests in encoded form, at some level, and thus could be treated as either binary or <b>character</b> <b>data</b> when being mapped to URI characters. Presumably, {{it is up to the}} URI scheme specifications to account for this possibility and require one or the other, but in practice, few, if any, actually do.|$|R
40|$|trees and {{associated}} <b>character</b> <b>data</b> matrices. |$|R
40|$|Abstract. There {{are a lot}} of very {{important}} data in database, which need to be protected from attacking. Cryptographic support is an important mechanism of securing them. People, however, must tradeoff performance to ensure the security because the operation of encryption and decryption greatly degrades query performance. To solve such a problem, an approach is proposed that can implement SQL query on the encrypted <b>character</b> <b>data.</b> When the <b>character</b> <b>data</b> are stored in the form of cipher, we not only store the encrypted <b>character</b> <b>data,</b> but also turn the <b>character</b> <b>data</b> into the characteristic values via a characteristic function, and store them in an additional field. When querying the encrypted <b>character</b> <b>data,</b> we apply the principle of two-phase query. Firstly, we implement a coarse query over the encrypted data in order to filter the records not related to the querying conditions. Secondly, we decrypt the rest records and implement a refined query over them again. Results of a set of experiments validate the functionality and usability of our approach. Key words: database security, characteristic values, coarse query, refined query 1. Introduction. Traditionall...|$|R
50|$|<b>Character</b> <b>data</b> {{was either}} 6-bit BCD or 9-bit ASCII.|$|R
5000|$|Saint Seiya Encyclopedia (2001, Artbook and <b>character</b> <b>data</b> collection) ...|$|R
50|$|A <b>character</b> <b>data</b> {{book titled}} Nurarihyon no Mago: Official <b>Character</b> <b>Data</b> Book: Secret Ayakashi Notes (Nurarihyon no Mago: Kyarakutā Kōshiki Dēta Bukku: Ayakashi Hiroku) was {{released}} on July 2, 2010. At 264 pages, it contains information on all the major factions in the series, {{as well as on}} Shiibashi and his assistants.|$|R
30|$|The type system T _reg {{describes}} regular expressions over <b>character</b> <b>data,</b> similarly as it {{is allowed}} in DTDs. Suppose that PCDATA is interpreted {{as a set of}} <b>character</b> <b>data</b> (strings). Then tag:PCDATA denotes the set of <b>character</b> <b>data</b> labelled by tag. The type tag: denotes the empty labelled character object. (T_ 1 ∪T_ 2) denotes the set of objects of type T_ 1 ∪T_ 2. T* is an abbreviation for (BOOL:T). In this case, (BOOL:T)-objects include ∅ which simulates the empty set. Similarly, T+ denotes the set of (BOOL:T)-objects except ∅, and T? the set of objects of type T ∪ NIL.|$|R
5000|$|... 8-bit <b>character</b> <b>data,</b> in {{strings of}} length 0 to 255 characters; ...|$|R
50|$|Fred Brooks is {{credited}} with ensuring PL/I had the <b>CHARACTER</b> <b>data</b> type.|$|R
40|$|I applied {{clustering}} analysis {{to the problem}} of creating tagged training <b>data</b> for optical <b>character</b> recognition (OCR). The creation of labeled <b>character</b> <b>data</b> by hand is a slow and cumbersome process. My belief is that clustering methods can be applied to <b>character</b> <b>data</b> before tagging it, allowing the operator to label entire groups of characters at once and greatly speeding the time in which tagged <b>character</b> <b>data</b> can be generated. This thesis will provide proof of concept as a basis for more in depth research and eventually the creation of a sophisticated application utilizing these techniques for the generation of labeled training data for OCR systems...|$|R
50|$|The modern Mojikyo {{computer}} font software includes <b>character</b> <b>data</b> {{from the}} ancient Shinsen Jikyō and Jikyōshū.|$|R
5000|$|... {{is a valid}} element name, and an {{instance}} of such an element contains parsed <b>character</b> <b>data.</b>|$|R
5000|$|This {{says that}} element named [...] "foo" [...] in the XML {{namespace}} [...] "http://example.com" [...] may have two attributes, named [...] "first" [...] and [...] "second". A [...] "foo" [...] element {{may not have}} any <b>character</b> <b>data.</b> It must contain one subelement, named [...] "bar", also in the [...] "http://example.com" [...] namespace. A [...] "bar" [...] element is not allowed any attributes, <b>character</b> <b>data</b> or subelements.|$|R
50|$|The {{scenario}} disk(s) {{contained the}} game's maps, creatures and conversations {{as well as}} the player's <b>character</b> <b>data.</b>|$|R
5000|$|The <b>character</b> <b>Data</b> in Star Trek the Next Generation has {{a copy of}} Tableau 1 in his quarters.|$|R
50|$|An SGML or XML DTD {{may also}} include entity {{declarations}} {{in which the}} token CDATA is used to indicate that entity consists of <b>character</b> <b>data.</b> The <b>character</b> <b>data</b> may appear within the declaration itself or may be available externally, referenced by a URI. In either case, character reference and parameter entity reference markup is allowed in the entity, and will be processed as such when it is read.|$|R
5000|$|... and an XML parser would {{interpret}} the [...] "a" [...] attribute's value {{as being the}} <b>character</b> <b>data</b> [...] "''''".|$|R
50|$|Hollerith constants, {{named in}} honor of Herman Hollerith, were used in early FORTRAN {{programs}} to allow manipulation of <b>character</b> <b>data.</b>|$|R
50|$|Arbitrary <b>character</b> <b>data</b> is {{sometimes}} percent-encoded {{and used in}} non-URI situations, such as for password obfuscation programs, or other system-specific translation protocols.|$|R
50|$|The file type {{indicates}} if {{the file}} is <b>character</b> <b>data,</b> or source code written in particular languages, binary data, or code files.|$|R
5000|$|The {{following}} sender-element {{could be}} part of an XML-document:Anton SmithThe string [...] "Anton Smith" [...] would be considered as parsed <b>character</b> <b>data.</b>|$|R
5000|$|When {{describing}} mixed content, the <b>character</b> <b>data</b> {{cannot be}} constrained {{in any way}} (not even a set of valid characters can be specified).|$|R
5000|$|... #PCDATA [...] ): {{historically}} meaning parsed <b>character</b> <b>data,</b> {{this means}} that only one text element is allowed in the content (no quantifier is allowed); ...|$|R
50|$|MO:DCA-P carries text, image, and {{graphics}} data objects, therefore {{the data is}} a mixture of binary <b>data</b> and <b>character</b> <b>data.</b> The recommended content-transfer-encoding is base64.|$|R
25|$|In May 2005, CCP {{announced}} the Eve API Project; third-party utilities such as EVEMon now interface with <b>character</b> <b>data,</b> market, {{and other data}} through an API.|$|R
5000|$|The Romulan Prize, a 1993 Star Trek: The Next Generation novel, devotes a page {{to having}} the <b>character</b> <b>Data</b> outline Cole's {{conception}} of a planetoid colony.|$|R
5000|$|New {{authors of}} XML {{documents}} often misunderstand {{the purpose of}} a CDATA section, mistakenly believing that its purpose is to [...] "protect" [...] data from being treated as ordinary <b>character</b> <b>data</b> during processing. Some APIs for working with XML documents do offer options for independent access to CDATA sections, but such options exist above and beyond the normal requirements of XML processing systems, and still do not change the implicit meaning of the <b>data.</b> <b>Character</b> <b>data</b> is <b>character</b> <b>data,</b> regardless of whether it is expressed via a CDATA section or ordinary markup. CDATA sections are useful for writing XML code as text data within an XML document. For example, if one wishes to typeset a book with XSL explaining the use of an XML application, the XML markup to appear in the book itself will be written in the source file in a CDATA section.|$|R
50|$|All of {{the data}} the program uses, {{and all of the}} <b>character</b> <b>data,</b> is stored in plain text data files. Custom rules can be {{specified}} by writing new data files.|$|R
5000|$|IBM's <b>Character</b> <b>Data</b> Representation Architecture (CDRA) designates with coded {{character}} set identifiers (CCSIDs) and {{each of which is}} variously called a [...] "charset", [...] "character set", [...] "code page", or [...] "CHARMAP".|$|R
5000|$|Defaults {{cannot be}} {{specified}} {{separately from the}} declarations (this {{makes it hard to}} make families of schemas that only differ in the default values); element defaults can only be <b>character</b> <b>data</b> (not containing markup).|$|R
40|$|Creating {{dramatic}} and engaging characters {{is one of}} the `holy grail' issues in video games. Another [...] related [...] focus is the implementation of morality in game characters. We look into a combination of these two issues inside the game character's definition. This <b>character</b> <b>data</b> set forms the backbone of the game entity and a basis from which behavioral engines can operate. Some of these data features refer to established character definitions from traditional media, including physiology, sociology and psychology as three defining elements of dramatic characters. Historically, games have developed game character physiology, but how do data sets provide for the other two elements? We refer to three games (Chrono Trigger, Fable and Ultima Online) and examine their <b>character</b> <b>data</b> sets in regard to: a) their range, limitations and contents b) ways in which they mimic social and ethical references Based on the analysis we suggest a basic rethinking of a <b>character's</b> <b>data</b> set combining the elements of consistency and granularity that allow for a clearer tracking and representation of moral behavior as "parameterized morality"...|$|R
50|$|Players {{with both}} the Nintendo 3DS and Wii U {{versions}} are able to transfer their <b>character</b> <b>data</b> {{back and forth between}} these units, allowing them to continue to build their character while on either system.|$|R
50|$|Parsed <b>Character</b> <b>Data</b> (PCDATA) is a data {{definition}} that originated in Standard Generalized Markup Language (SGML), {{and is used}} also in Extensible Markup Language (XML) Document Type Definition (DTD) to designate mixed content XML elements.|$|R
