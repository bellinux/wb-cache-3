68|40|Public
2500|$|In February 2015, after media {{reported}} the hidden pre-installation of Superfish adware on some Lenovo notebooks, a researcher found a trusted <b>root</b> <b>certificate</b> on affected Lenovo machines to be insecure, as the keys {{could easily be}} accessed using the company name, Komodia, as a passphrase. [...] The Komodia library was designed to intercept client-side TLS/SSL traffic for parental control and surveillance, {{but it was also}} used in numerous adware programs, including Superfish, that were often surreptitiously installed unbeknownst to the computer user. In turn, these potentially unwanted programs installed the corrupt <b>root</b> <b>certificate,</b> allowing attackers to completely control web traffic and confirm false web sites as authentic.|$|E
2500|$|In November 2015 {{it emerged}} that several Dell {{computers}} had shipped with an identical pre-installed <b>root</b> <b>certificate</b> known as [...] "eDellRoot". This raised such security risks as attackers impersonating HTTPS-protected {{websites such as}} Google and Bank of America and malware being signed with the certificate to bypass Microsoft software filtering. Dell apologised and offered a removal tool.|$|E
50|$|The SSL/TLS chain-of-trust {{relies on}} trusted <b>root</b> <b>certificate</b> authorities. In a {{workplace}} setting where {{the client is}} managed by the organization, trust might be granted to a <b>root</b> <b>certificate</b> whose private key is known to the proxy. Consequently, a <b>root</b> <b>certificate</b> generated by the proxy is installed into the browser CA list by IT staff.|$|E
50|$|Most {{operating}} systems provide a built-in list of self-signed <b>root</b> <b>certificates</b> {{to act as}} trust anchors for applications. The Firefox web browser also provides its own list of trust anchors. The end-user of an operating system or web browser is implicitly trusting in the correct operation of that software, and the software manufacturer in turn is delegating trust for certain cryptographic operations to the certificate authorities responsible for the <b>root</b> <b>certificates.</b>|$|R
50|$|Since October 2005, CAcert offers Class 1 and Class 3 <b>root</b> <b>certificates.</b> Class 3 is a high-security {{subset of}} Class 1.|$|R
50|$|An organization's trusted <b>root</b> <b>certificates</b> can be {{distributed}} to all employees {{so that they can}} use the company PKI system. Browsers such as Internet Explorer, Firefox, Opera, Safari and Chrome come with a predetermined set of <b>root</b> <b>certificates</b> pre-installed, so SSL certificates from major certificate authorities will work instantly; in effect the browsers' developers determine which CAs are trusted third parties for the browsers' users. For example, Firefox provides a CSV and/or HTML file containing a list of Included CAs.|$|R
50|$|Some {{unwanted}} software bundles {{install a}} <b>root</b> <b>certificate</b> on a user's device, which allows hackers to intercept private data such as banking details, without a browser giving security warnings. The United States Department of Homeland Security has advised removing an insecure <b>root</b> <b>certificate,</b> {{because they make}} computers vulnerable to serious cyberattacks.|$|E
5000|$|A {{certificate}} authority can issue multiple certificates {{in the form}} of a tree structure. A <b>root</b> <b>certificate</b> is the top-most certificate of the tree, the private key which is used to [...] "sign" [...] other certificates. All certificates signed by the <b>root</b> <b>certificate,</b> with the [...] "CA" [...] field set to true, inherit the trustworthiness of the root certificateâ€”a signature by a <b>root</b> <b>certificate</b> is somewhat analogous to [...] "notarizing" [...] an identity in the physical world. Such a certificate is called an intermediate certificate or subordinate CA certificate. Certificates further down the tree also depend on the trustworthiness of the intermediates.|$|E
5000|$|... #Caption: The role of <b>root</b> <b>certificate</b> as in {{the chain}} of trust.|$|E
50|$|The {{acquisition}} of the CyberTrust <b>root</b> <b>certificates</b> makes DigiCert the second-largest Certificate Authority (CA) for high-assurance SSL Certificates. As part of the deal, DigiCert will assume management of the CyberTrust/Verizon trusted <b>roots</b> and intermediate <b>certificates.</b> Verizon will continue to offer SSL Certificates as a reseller of DigiCert.|$|R
50|$|Most browsers disable pinning for {{certificate}} chains {{with private}} <b>root</b> <b>certificates</b> to enable various corporate content inspection scanners and web debugging tools (such as mitmproxy or Fiddler).|$|R
50|$|In version 3.0.2-g1, the {{certificate}} of CAcert.org, a certificate authority, {{has been added}} to the list of trusted <b>root</b> <b>certificates.</b> Concern about that decision has been raised in a discussion on the savannah-hackers-public mailing list.|$|R
50|$|A website {{operator}} {{can choose}} to either pin the <b>root</b> <b>certificate</b> public key of a particular <b>root</b> <b>certificate</b> authority, allowing only that certificate authority (and all intermediate authorities signed by its key) to issue valid certificates for the website's domain, and/or to pin the key(s) {{of one or more}} intermediate issuing certificates, or to pin the end-entity public key.|$|E
50|$|In {{cryptography}} {{and computer}} security, a <b>root</b> <b>certificate</b> {{is a public}} key certificate that identifies a <b>root</b> <b>certificate</b> authority (CA). Root certificates are self-signed and {{form the basis of}} an X.509-based public key infrastructure (PKI). For instance, the PKIs supporting HTTPS for secure web browsing and electronic signature schemes depend on a set of root certificates.|$|E
5000|$|Echoworx, {{an email}} {{encryption}} software company, {{is based in}} Toronto, Ontario, Canada, with offices in Hermosa Beach, California and London, UK. [...] As a certificate authority, Echoworx {{is a member of}} both the Microsoft <b>Root</b> <b>Certificate</b> Program [...] and Apple <b>Root</b> <b>Certificate</b> Program. Echoworx operates several data centers, including locations in the United States and Europe.|$|E
50|$|There also {{exists a}} {{peer-to-peer}} certificate authority, CACert. However, {{it is not}} included in the trusted <b>root</b> <b>certificates</b> of many popular browsers (e.g. Firefox, Chrome, Internet Explorer), which may cause warning messages to be displayed to end users.|$|R
5000|$|However, {{the market}} for {{globally}} trusted TLS/SSL server certificates is largely held by {{a small number of}} multinational companies. This market has significant barriers to entry due to the technical requirements. While not legally required, new providers may choose to undergo annual security audits (such as WebTrust for certificate authorities in North America and ETSI in Europe) to be included as a trusted root by a web browser or operating system. More than 180 <b>root</b> <b>certificates</b> are trusted in the Mozilla Firefox web browser, representing approximately eighty organizations. OS X trusts over 200 <b>root</b> <b>certificates.</b> As of Android 4.2 (Jelly Bean), Android currently contains over 100 CAs that are updated with each release.|$|R
50|$|A {{common use}} is web server {{software}} running {{secure socket layer}} (SSL) protocols. Server-specific keys issued by trusted authorities are merged into the keyfile along with the trusted <b>root</b> <b>certificates.</b> By this method keys can be updated without recompiling software or rebooting the server.|$|R
50|$|In June 2015, Let's Encrypt {{generated}} an RSA <b>root</b> <b>certificate</b> {{with its}} private key stored on a hardware security module which is kept offline. The <b>root</b> <b>certificate</b> {{is used to}} sign two intermediate certificates which are cross-signed by the certificate authority IdenTrust. One of the intermediate certificates is used to sign issued certificates, while the other is kept offline as a backup in case of problems with the first intermediate certificate. Because the IdenTrust certificate is preinstalled in major web browsers, Let's Encrypt certificates can normally be validated and are accepted upon installation, out of the box, even while no browser vendors include the ISRG <b>root</b> <b>certificate</b> as a trust anchor.|$|E
5000|$|Store {{the entire}} {{verification}} chain from the newly accepted certificate {{back to the}} <b>root</b> <b>certificate.</b>|$|E
50|$|It {{is also a}} <b>root</b> <b>certificate</b> {{authority}} for qualified signatures according to the German Signature Act.|$|E
50|$|Thus {{the browser}} can verify the SSL cert of the website {{by means of}} the loaded group of {{accepted}} <b>certificates</b> or the <b>root</b> <b>certificates</b> can be looked up in an X.500 or LDAP Directory (or via HTTP/S) and imported into the list of trusted Certificate Authorities.|$|R
5000|$|For example, a {{web site}} using SSL, {{typically}} the DNS site name [...] "www.foobar.com" [...] is verified in a browser by the software using libraries that would {{check to see if}} the certificate was signed by one of the trusted <b>root</b> <b>certificates</b> given to the user.|$|R
5000|$|DigiNotar's <b>root</b> <b>certificates</b> {{were removed}} from the trusted-root lists of all major web browsers and {{consumer}} operating systems on or around August 29, 2011; the [...] "Staat der Nederlanden" [...] roots were initially kept because they were not believed to be compromised. However, they have since been revoked.|$|R
5000|$|... #Caption: The {{roles of}} <b>root</b> <b>certificate,</b> {{intermediate}} certificate and end-entity certificate {{as in the}} chain of trust.|$|E
5000|$|The <b>root</b> <b>certificate</b> {{is usually}} made {{trustworthy}} by some mechanism {{other than a}} certificate, such as by secure physical distribution. For example, {{some of the most}} well-known root certificates are distributed in operating systems by their manufacturers. Microsoft distributes root certificates belonging to members of the Microsoft <b>Root</b> <b>Certificate</b> Program to Windows desktops and [...] Windows Phone 8. Apple distributes root certificates belonging to members of its own root program.|$|E
5000|$|The {{following}} {{operating systems}} or distributions include the CAcert <b>root</b> <b>certificate,</b> or have it available in an installable package: ...|$|E
50|$|In the X.509 trust model, a {{certificate}} authority (CA) {{is responsible for}} signing certificates. These certificates act as an introduction between two parties, which means that a CA acts as a trusted third party. A CA processes requests from people or organizations requesting certificates (called subscribers), verifies the information, and potentially signs an end-entity certificate based on that information. To perform this role effectively, a CA needs to have one or more broadly trusted <b>root</b> <b>certificates</b> or intermediate certificates and the corresponding private keys. CAs may achieve this broad trust by having their <b>root</b> <b>certificates</b> included in popular software, or by obtaining a cross-signature from another CA delegating trust. Other CAs are trusted within a relatively small community, like a business, and are distributed by other mechanisms like Windows Group Policy.|$|R
5000|$|All web browsers {{come with}} an {{extensive}} built-in list of trusted <b>root</b> <b>certificates,</b> {{many of which}} are controlled by organizations that may be unfamiliar to the user. [...] Each of these organizations is free to issue any certificate for any web site and have the guarantee that web browsers that include its <b>root</b> <b>certificates</b> will accept it as genuine. In this instance, end users must rely on the developer of the browser software to manage its built-in list of certificates and on the certificate providers to behave correctly and to inform the browser developer of problematic certificates. While uncommon, there have been incidents in which fraudulent certificates have been issued: in some cases, the browsers have detected the fraud; in others, some time passed before browser developers removed these certificates from their software.|$|R
25|$|In 2009, in {{cooperation}} with Meredith L. Patterson and Len Sassaman, Kaminsky discovered numerous flaws in the SSL protocol. These {{include the use of}} the weak MD2 hash function by Verisign in one of their <b>root</b> <b>certificates</b> and errors in the certificate parsers in a number of Web browsers that allow attackers to successfully request certificates for sites they don't control.|$|R
5000|$|Verify {{that each}} {{submitted}} certificate or precertificate has a valid signature chain leading {{back to a}} trusted <b>root</b> <b>certificate</b> authority certificate.|$|E
50|$|The Let's Encrypt {{developers}} {{planned to}} generate an ECDSA <b>root</b> <b>certificate</b> as well later in 2015, which was pushed back to early 2016.|$|E
50|$|A {{certificate}} used to sign other certificates, {{which is}} not self-signed. An intermediate certificate must be signed by another intermediate certificate, or a <b>root</b> <b>certificate.</b>|$|E
5000|$|Security in the DOCSIS {{network is}} vastly {{improved}} when only business critical communications are permitted, and end user communication {{to the network}} infrastructure is denied. Successful attacks often occur when the CMTS is configured for backwards compatibility with early pre-standard DOCSIS 1.1 modems. These modems were [...] "software upgradeable in the field", but did not include valid DOCSIS or EuroDOCSIS <b>root</b> <b>certificates.</b>|$|R
50|$|Keychain Access is a macOS {{application}} {{that allows the}} user to access the Keychain and configure its contents, including passwords for websites, web forms, FTP servers, SSH accounts, network shares, wireless networks, groupware applications, encrypted disk images, etc. It unlocks, locks, and displays passwords saved by the system which are dynamically linked to the user's login password, as well as managing <b>root</b> <b>certificates,</b> keys, and secure notes.|$|R
50|$|CyberTrust was a {{security}} services company formed in Virginia in November 2004 from {{the merger of}} TruSecure and Betrusted. Cybertrust acquired a large stake in Ubizen, a European security services firm based in Belgium, {{to become one of}} the largest information security firms in the world. It was acquired by Verizon Business in 2007. In 2015, the CyberTrust <b>root</b> <b>certificates</b> were acquired by DigiCert, Inc., a leading global Certificate Authority (CA) and provider of trusted identity and authentication services.|$|R
