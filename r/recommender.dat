6505|220|Public
25|$|For a <b>recommender</b> system, {{sentiment}} analysis {{has been proven}} to be a valuable technique. A <b>recommender</b> system aims to predict the preference to an item of a target user. Mainstream <b>recommender</b> systems work on explicit data set. For example, collaborative filtering works on the rating matrix, and content-based filtering works on the meta-data of the items.|$|E
25|$|The MovieLens <b>recommender</b> system: MovieLens is a {{non-commercial}} movie <b>recommender</b> {{system that}} has been running {{for over a decade}} now, with over 164,000 unique visitors to date, who have provided over 15 million movie ratings.|$|E
25|$|Except the {{difficulty}} of the sentiment analysis itself, applying sentiment analysis on reviews or feedback also face the challenge of spam and biased reviews. One direction of work is focused on evaluating the helpfulness of each review. Review or feedback poorly written are hardly helpful for <b>recommender</b> system. Besides, a review can be designed to hinder sales of a target product, thus be harmful to the <b>recommender</b> system even it is well written.|$|E
40|$|We studied how actual users find {{items of}} {{interest}} in today’s complex, recommender-rich information environments, what role <b>recommenders</b> play in it, and if <b>recommenders</b> increase perceived social presence. We used applied ethnography, on-location observation and interviewing, and Amazon as the environment to get an accurate picture of user activity. We found that users are increasingly relying on <b>recommenders</b> in finding items of interest. Since they have developed strategies to combine keyword searching with <b>recommenders</b> for discovery, <b>recommenders</b> should not be developed in isolation of the whole because users do not use them in isolation. In addition, while some users feel that <b>recommenders</b> add {{to the sense of}} social presence, others feel that they are not enough {{to create a sense of}} others being present. ...|$|R
40|$|Abstract. In this paper, {{we discuss}} the {{development}} of a hybrid multi-strategy book recommendation system using Linked Open Data. Our ap-proach builds on training individual base <b>recommenders</b> and using global popularity scores as generic <b>recommenders.</b> The results of the individual <b>recommenders</b> are combined using stacking regression and rank aggrega-tion. We show that this approach delivers very good results in different recommendation settings and also allows for incorporating diversity of recommendations...|$|R
50|$|Mixed: Recommendations from {{different}} <b>recommenders</b> are presented together.|$|R
25|$|Singular-value {{decomposition}} {{is used in}} <b>recommender</b> {{systems to}} predict people's item ratings. Distributed algorithms {{have been developed for}} the purpose of calculating the SVD on clusters of commodity machines.|$|E
25|$|In 2002, GroupLens {{expanded}} into social computing and online communities {{with the addition}} of Loren Terveen, who was known for his research of social <b>recommender</b> systems such as PHOAKS.|$|E
25|$|GroupLens Research is a human–computer {{interaction}} {{research lab}} in the Department of Computer Science and Engineering at the University of Minnesota, Twin Cities specializing in <b>recommender</b> systems and online communities. GroupLens also works with mobile and ubiquitous technologies, digital libraries, and local geographic information systems.|$|E
40|$|Abstract Recommendations {{are crucial}} {{for the success of}} large websites. While {{there are many ways to}} {{determine}} recommendations, the relative quality of these <b>recommenders</b> depends on many factors and is largely unknown. We present the architecture and implementation of AWESOME (Adaptive website recommendations), a data warehouse-based recommendation system. It allows the coordinated use of a large number of <b>recommenders</b> to automatically generate website recommendations. Recommendations are dynamically selected by efficient rule-based approaches utilizing continuously measured user feedback on presented recommendations. AWESOME supports a completely automatic generation and optimization of selection rules to minimize website administration overhead and quickly adapt to changing situations. We propose a classification of <b>recommenders</b> and use AWESOME to comparatively evaluate the relative quality of several <b>recommenders</b> for a sample website. Furthermore, we propose and evaluate several rule-based schemes for dynamically selecting the most promising recommendations. In particular, we investigate two-step selection approaches that first determine the most promising <b>recommenders</b> and then apply their recommendations for the current situation. We also evaluate one-step schemes that try to directly determine the most promising recommendations...|$|R
40|$|<b>Recommenders</b> are {{ubiquitous}} on the Internet today: {{they tell}} you which book to read, which movie you should watch, predict your next holiday destination, give you advices on restaurants and hotels, they are even responsible for the posts that you see on your favorite social media and potentially greatly influence your friendship on social networks. While many approaches exist, collaborative filtering {{is one of the}} most popular approaches to build online <b>recommenders</b> that provide users with content that matches their interest. Interestingly, the very notion of users can be general and span actual humans or software applications. <b>Recommenders</b> come with many challenges beyond the quality of the recommendations. One of the most prominent ones is their ability to scale to a large number of users and a growing volume of data to provide real-time recommendations introducing many system challenges. Another challenge is related to privacy awareness: while <b>recommenders</b> rely on the very fact that users give away information about themselves, this potentially raises some privacy concerns. In this talk, I will focus on the challenges associated to building efficient, scalable and privacy-aware <b>recommenders...</b>|$|R
30|$|If {{the one or}} more {{contacts}} have interacted previously with S and the contacts’ trust {{balance with}} T allows it to permit to transfer an amount of the <b>recommender’s</b> trustworthiness in S, the contact agrees to recommend the subject. It queries the S on whether it agrees to lose that same amount of trust on the <b>recommender’s</b> side.|$|R
25|$|Based on the feature/aspects and {{the sentiments}} {{extracted}} from the user-generated text, a hybrid <b>recommender</b> system can be constructed. There {{are two types of}} motivation to recommend a candidate item to a user. The first motivation is the candidate item have numerous common features with the user's preferred items, while the second motivation is that the candidate item receives a high sentiment on its features. For a preferred item, it is reasonable to believe that items with the same features will have a similar function or utility. So, these items will also likely to be preferred by the user. On the other hand, for a shared feature of two candidate items, other users may give positive sentiment to one of them while give negative sentiment to another. Clearly, the high evaluated item should be recommended to the user. Based on these two motivations, a combination ranking score of similarity and sentiment rating can be constructed for each candidate item.|$|E
25|$|In {{many social}} {{networking}} services or e-commerce websites, users can provide text review, comment or {{feedback to the}} items. These user-generated text provide {{a rich source of}} user's sentiment opinions about numerous products and items. Potentially, for an item, such text can reveal both the related feature/aspects of the item and the users' sentiments on each feature. The item's feature/aspects described in the text play the same role with the meta-data in content-based filtering, but the former are more valuable for the <b>recommender</b> system. Since these features are broadly mentioned by users in their reviews, they {{can be seen as the}} most crucial features that can significantly influence the user's experience on the item, while the meta-data of the item (usually provided by the producers instead of consumers) may ignore features that are concerned by the users. For different items with common features, a user may give different sentiments. Also, a feature of the same item may receive different sentiments from different users. Users' sentiments on the features can be regarded as a multi-dimensional rating score, reflecting their preference on the items.|$|E
2500|$|... in {{business}} until 2004. [...] Based on their experience, Riedl and Konstan {{wrote a book}} about the lessons learned from deploying recommenders in practice. [...] <b>Recommender</b> systems have since become ubiquitous in the online world, with leading vendors such as Amazon and Netflix deploying highly sophisticated <b>recommender</b> systems. Netflix even offered a $1,000,000 prize for improvements in <b>recommender</b> technology.|$|E
2500|$|... {{the team}} began {{exploring}} interface issues in <b>recommenders,</b> such as explanations, and meta-recommendation systems.|$|R
5000|$|... #Caption: Satirical {{print of}} a {{proposed}} monument to Lipscomb and other <b>recommenders</b> of inoculation ...|$|R
40|$|Location-sharing {{services}} such as Facebook and Foursquare/Swarm have become increasingly popular, due to the ease at which users can share their locations, and participate in services, games and other applications that leverage these locations. But {{it is important for}} people who use these services to configure appropriate location-privacy preferences so that they can control to whom they want to share their location information. Manually configuring these preferences may be burdensome and confusing, and so location-privacy preference <b>recommenders</b> based on crowd sourcing preferences from other users have been proposed. Whether people will accept the recommended preferences acquired from other users, who they may not know or trust, has not, however, been investigated. In this paper, we present a user experiment (n= 99) to explore what factors influence people’s acceptance of location privacy preference <b>recommenders.</b> We find that 44 % of our participants have privacy concerns about such <b>recommenders.</b> These concerns are shown to have a negative effect (p < 0. 001) on their acceptance of the recommendations and their satisfaction about their choices. Furthermore, users’ acceptance of <b>recommenders</b> varies according to both context and recommendations being made. Our findings are potentially useful to designers of location-sharing services and privacy <b>recommenders.</b> Postprin...|$|R
2500|$|MovieLens ratings datasets: In {{the early}} days of <b>recommender</b> systems, {{research}} was slowed down by the lack of publicly available datasets. [...] In response to requests from other researchers, GroupLens released three datasets: the MovieLens 100,000 rating dataset, the MovieLens 1,000,000 rating dataset, and the MovieLens 10,000,000 rating dataset. [...] These datasets became the standard datasets for <b>recommender</b> research, and have been used in over 300 papers by researchers around the world. [...] The dataset is also being used for teaching about <b>recommender</b> technology.|$|E
2500|$|... {{more general}} term of <b>recommender</b> systems. With Joe Konstan's {{expertise}} in user interfaces, ...|$|E
2500|$|Shilling <b>recommender</b> systems: GroupLens has {{explored}} ways that users of <b>recommender</b> systems can attempt to inappropriately influence the recommendations given to other users. They call this behavior shilling, {{because of its}} relationship to the practice of hiring associates to pretend to be enthusiastic customers. [...] They showed that some types of shilling are likely to be effective in practice. [...] One concern about shilling is that the false predictions may change the reported opinions of later users, further corrupting the recommendations.|$|E
40|$|International audienceThe {{upsurge in}} the number of web users {{over the last two decades}} has {{resulted}} in a significant growth of online information. This information growth calls for <b>recommenders</b> that personalize the information proposed to each individual user. Nevertheless, personalization also opens major privacy concerns. This paper presents D 2 P, a novel protocol that ensures a strong form of differential privacy, which we call distance-based differential privacy, and which is particularly well suited to <b>recommenders.</b> D 2 P avoids revealing exact user profiles by creating altered profiles where each item is replaced with another one at some distance. We evaluate D 2 P analytically and experimentally on MovieLens and Jester datasets and compare it with other private and non-private <b>recommenders...</b>|$|R
50|$|Cascade: <b>Recommenders</b> {{are given}} strict {{priority}}, {{with the lower}} priority ones breaking ties in the scoring of the higher ones.|$|R
40|$|Abstract. We {{investigate}} several hybrid {{approaches to}} suggesting matches in peopletopeoplesocialrecommendersystems,payingparticularattentiontocold start problems, problems of generating recommendations for new users or users without successful interactions. In previous work {{we showed that}} interactionbased collaborative filtering (IBCF) works well in this domain, although this approachcannotgeneraterecommendationsfornewusers,whereasasystembased onrulesconstructedusingsubgroupinteractionpatternscangeneraterecommendations for new users, but does not perform as effectively for existing users. We propose three hybrid <b>recommenders</b> based on user similarity and two contentboosted <b>recommenders</b> {{used in conjunction with}} interaction-based collaborative filtering, and show experimentally that the best hybrid and content-boosted <b>recommenders</b> improve on the IBCF method (when considering user success rates) yet cover almost the whole user base, including new and previously unsuccessful users, thus addressing cold start problems in this domain. The best contentboosted method improves user success rates more than the best hybrid method over various “cold start”subgroups,butis lesscomputationally efficient overall. ...|$|R
2500|$|The GroupLens lab {{was one of}} {{the first}} to study {{automated}} <b>recommender</b> systems with the construction of the [...] "GroupLens" [...] <b>recommender,</b> a Usenet article recommendation engine, and MovieLens, a popular movie recommendation site used to study recommendation engines, tagging systems, and user interfaces. [...] The lab has also gained notability for its members' work studying open content communities such as Cyclopath, a computational [...] "geo-wiki" [...] currently being used in the Twin Cities to help plan the regional cycling system.|$|E
2500|$|Information leakage from <b>recommender</b> datasets: [...] a {{paper in}} the {{information}} retrieval conference analyzed the privacy risks to users of having large <b>recommender</b> datasets released. [...] The basic risk discovered is that an anonymized dataset might be combined with public information to identify a user. For instance, a user who has written about his preference for movies on online forums could {{be associated with a}} specific row in the MovieLens datasets. [...] In some cases, these associations might leak information the user would prefer to keep private.|$|E
2500|$|... {{system for}} Usenet news. [...] The system {{collected}} ratings from Usenet readers and used those ratings {{to predict how}} much other readers would like an article before they read it. [...] This recommendation engine {{was one of the}} first automated collaborative filtering systems in which algorithms were used to automatically form predictions based on historical patterns of ratings. [...] The overall system was called the [...] "GroupLens" [...] <b>recommender,</b> and the servers that collected the ratings and performed the computation were called the [...] "Better Bit Bureau". [...] This name was later dropped after a request from the Better Business Bureau. [...] "GroupLens" [...] is now used as a name both for this <b>recommender</b> system, and for the research lab at the University of Minnesota.|$|E
30|$|If S has {{not enough}} trust, T queries its {{contacts}} to find <b>recommenders</b> (R) willing to transfer {{some of their}} positive event outcomes count to S.|$|R
30|$|Furthermore, <b>recommenders</b> {{can combine}} the {{approaches}} {{to form a}} hybrid approach that can potentially provide a better performance in pushing relevant information at the right time.|$|R
40|$|Online <b>recommenders</b> {{are usually}} {{referred}} {{to those used}} in e-Commerce websites for suggesting a product or service out of many choices. The core technology implemented behind this type of <b>recommenders</b> includes content analysis, collaborative filtering and some hybrid variants. Since they all have certain strengths and limitations, combining them may be a promising solution provided {{there is a way}} of overcoming a large amount of input variables especially from combining different techniques. Genetic algorithm (GA) is an ideal optimization search function, for finding a best recommendation out of a large population of variables. In this paper we presented a GA-based approach for supporting combined modes of collaborative filtering. In particular, we show that how the input variables can be coded into GA chromosomes in various modes. Insights of how GA can be used in <b>recommenders</b> are derived through our experiments with the input data taken from Movielens and IMDB. 1...|$|R
2500|$|Last.fm is a music website, {{founded in}} the United Kingdom in 2002. Using a music <b>recommender</b> system called [...] "Audioscrobbler", Last.fm builds a {{detailed}} profile of each user's musical taste by recording details of the tracks the user listens to, either from Internet radio stations, or the user's computer or many portable music devices. This information is transferred ("scrobbled") to Last.fm's database either via the music player itself (including, among others Spotify, Deezer, Tidal, and MusicBee) or via a plugin installed into the user's music player. The data is then displayed on the user's profile page and compiled to create reference pages for individual artists.|$|E
2500|$|Wikipedia research: The {{study of}} value and {{vandalism}} in Wikipedia published in 2007 described {{the concentration of}} contribution across Wikipedia editors. [...] This paper {{was one of the}} first to focus on the length of time that a contribution survives within Wikipedia as a measure of its value. [...] The paper also investigated the effects of vandalism on Wikipedia readers, by measuring the probability that a view of a page would capture that page in a vandalized state. GroupLens has also explored ways to help editors find pages which they can effectively contribute to with the [...] <b>recommender.</b> The group has also explored the evolution of the norms in Wikipedia that determine which articles are accepted or rejected, and the effect of changes in those norms on the Long Tail of Wikipedia articles. GroupLens has also explored the functioning of the informal peer review system within Wikipedia to discover ways the decisions being made appear to be influenced inappropriately by , and that experience does not seem to change editor performance very much. GroupLens researchers have also explored visualizations of the edit history of Wikipedia articles. In 2011, the GroupLens researchers completed a scientific exploration of gender imbalance in Wikipedia's popular editors, resulting in finding that there was a large gap between male and female editors.|$|E
60|$|This Tragedy {{was written}} in the summer and autumn of the year 1797; at Nether Stowey, in the county of Somerset. By whose recommendation, and of the manner in which both the Play and the Author were treated by the <b>Recommender,</b> let me be {{permitted}} to relate: that I knew of its having been received only by a third person; that I could procure neither answer nor the manuscript; and that but for an accident I should have had no copy of the Work itself. That such treatment would damp a young man's exertions may be easily conceived: there was no need of after-misrepresentation and calumny, as an additional sedative.|$|E
40|$|<b>Recommenders</b> {{personalize}} the web content by typically using {{collaborative filtering}} to relate users (or items) based on explicit feedback, e. g., ratings. The difficulty of collecting this feedback has recently motivated to consider implicit feedback (e. g., item consumption {{along with the}} corresponding time). In this paper, we introduce the notion of consumed item pack (CIP) which enables to link users (or items) based on their implicit analogous consumption behavior. Our proposal is generic, and we show that it captures three novel implicit recommenders: a user-based (CIP-U), an item-based (CIP-I), and a word embedding-based (DEEPCIP), {{as well as a}} state-of-the-art technique using implicit feedback (FISM). We show that our <b>recommenders</b> handle incremental updates incorporating freshly consumed items. We demonstrate that all three <b>recommenders</b> provide a recommendation quality that is competitive with state-of-the-art ones, including one incorporating both explicit and implicit feedback. Comment: 12 page...|$|R
30|$|With the {{increase}} in the node degree, the measurements from the <b>recommenders</b> gets increased which further increases the network complexities. The misbehaviour verification algorithm in the proposed scheme safeguards the network from {{the increase}} in convergence time, even if the number of <b>recommenders</b> and their evidences increases. Therefore, on comparing with the CTrust method, the proposed shows a better performance marginally by decreasing the convergence time that results in controlling the further rise in network complexity. This distinctly shows the scalability feature of the proposed trust management scheme.|$|R
40|$|Abstract. This paper {{presents}} a novel context-based approach to find reliable recommendations for trust model in ubiquitous environments. Context {{is used in}} our approach to analyze the user’s activity, state and intention. Incremental learning based neural network is used to dispose the context in order to detect doubtful recommendations. This approach has distinct advantages when dealing with randomly given irresponsible recommendations, individual unfair recommendations as well as unfair recommendations flooding regardless of from <b>recommenders</b> who always give malicious recommendations or “inside job ” (<b>recommenders</b> who acted honest previous suddenly give unfair recommendations), which is lack of consideration in the previous works. The incremental learning based neural network used in our approach also enables to filter out the unfair recommendations with limited information about the <b>recommenders.</b> Our simulation results show that our approach can effectively find reliable recommendations in different scenarios and a comparison is also given between previous works and our method. ...|$|R
