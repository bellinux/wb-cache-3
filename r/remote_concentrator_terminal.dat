0|40|Public
50|$|In modern {{telephony}} a <b>remote</b> <b>concentrator,</b> <b>remote</b> <b>concentrator</b> unit (RCU), or <b>remote</b> line <b>concentrator</b> (RLC) is a concentrator at {{the lowest}} level in the telephone switch hierarchy.|$|R
50|$|Only a {{few hundred}} {{telephone}} lines attach to each <b>remote</b> <b>concentrator.</b> In North America concentrators are located in a serving area interface (SAI) or other enclosure in each neighborhood. In Europe the buildings which once contained local Strowger switch telephone exchanges are now usually empty except for a <b>remote</b> <b>concentrator.</b>|$|R
5000|$|The 3720 was {{a smaller}} {{version of the}} 3725, which was {{sometimes}} used as a <b>remote</b> <b>concentrator.</b>|$|R
50|$|Concentrator units {{can either}} stand alone as <b>remote</b> <b>concentrators</b> or be {{co-located}} with the digital local switching unit.|$|R
50|$|The {{interface}} between <b>remote</b> <b>concentrators</b> and their parent telephone switches has been standardised by ETSI as the V5 interface.|$|R
25|$|Individual {{local loop}} {{telephone}} lines {{are connected to}} a <b>remote</b> <b>concentrator.</b> In many cases, the concentrator is co-located {{in the same building}} as the switch. The interface between <b>remote</b> <b>concentrators</b> and telephone switches has been standardised by ETSI as the V5 protocol. Concentrators are used because most telephones are idle most of the day, hence the traffic from hundreds or thousands of them may be concentrated into only tens or hundreds of shared connections.|$|R
50|$|SAIs {{are used}} in {{suburban}} and low-density urban areas, serving {{some of the same}} purposes that manholes do in high-density urban areas. Besides a cross connect point, they sometimes contain a DSLAM or more rarely a <b>remote</b> <b>concentrator</b> or both.|$|R
50|$|Telenet {{supported}} <b>remote</b> <b>concentrators</b> for IBM 3270 family intelligent terminals, which communicated, via X.25 to Telenet-written {{software that}} ran in IBM 370x series front-end processors. Telenet also supported Block Mode Terminal Interfaces (BMTI) for IBM Remote Job Entry terminals supporting the 2780/3780 and HASP Bisync protocols.|$|R
50|$|In telephony, a customer's {{telephone}} line now typically {{ends at the}} <b>remote</b> <b>concentrator</b> box, where it is multiplexed along with other {{telephone line}}s for that neighborhood or other similar area. The multiplexed signal is then carried to the central switching office on significantly fewer wires and for much further distances than a customer's line can practically go. This is likewise also true for digital subscriber lines (DSL).|$|R
50|$|Late in the 20th {{century the}} {{smallest}} offices {{were replaced by}} <b>remote</b> <b>concentrators</b> connected to a host office in an adjacent exchange area, which may be several miles away. Others were replaced with distributed switching hardware (a remote switching centre controlled by a digital switch in the city) or with small digital switches such as Nortel's DMS-10 (a self-contained exchange for up to 8000 subscribers).|$|R
50|$|In {{the fixed}} {{telephone}} network, a node {{may be a}} public or private telephone exchange, a <b>remote</b> <b>concentrator</b> or a computer providing some intelligent network service. In cellular communication, switching points and databases such as the Base station controller, Home Location Register, Gateway GPRS Support Node (GGSN) and Serving GPRS Support Node (SGSN) are examples of nodes. Cellular network base stations are {{not considered to be}} nodes in this context.|$|R
50|$|In most areas, one carrier held a {{monopoly}} on local service. The landline telephone system was originally constructed in an era before transistorisation, <b>remote</b> <b>concentrators</b> or cabinetisation. Individual lines from subscribers ran not to a <b>remote</b> <b>concentrator</b> but directly to the nearest village community dial office, to be terminated at an automated mechanical switch or manual exchange. To keep subscriber loop wiring requirements manageable, local exchanges were built in each tiny hamlet. Rural subscribers often made do with party line service. Each village was a separate rate center for long-distance calls and each had its own block of ten thousand numbers (the largest that reasonably could fit on a small-town manual cord switchboard with a jack and indicator for each line). In most small villages, many of these numbers would remain unused. In large cities, multiple exchanges were created to cover individual districts or neighbourhoods; each had its own series of distinctive prefixes, and multiple blocks of ten thousand numbers each. The first few digits of a number uniquely identified a village, a town or a neighbourhood of a big city.|$|R
50|$|AXE10 covers {{two main}} types of digital {{telephony}} switching equipment: the remote subscriber switch (RSS) and the AXE10 local switch. RSS {{acts as a}} <b>remote</b> <b>concentrator</b> and deals with the conversion of analogue telephony signals used in the access network, which is the copper pairs between exchange buildings and customer premises, also called local loop, and the multiplexing of customer lines over cabling to the AXE10 local switching unit. The AXE10 local switch uses a processor-controlled switch to route calls and data depending on the destination of the telephony transmission.|$|R
50|$|The 80s were growth {{years for}} the Telecommunications Board despite the {{recession}} which hit the United Kingdom. Many new services were introduced during this time, the most significant {{of which was the}} introduction of System X exchanges island-wide. This computer-controlled system had been developed for British Telecom and had the obvious advantage of allowing Jersey to be completely compatible with the UK network. 1983 saw the 60,000th telephone connected in Jersey which showed a 20,000 increase in just 7 years. All exchanges were replaced with System X or System X <b>remote</b> <b>concentrators</b> by 1994.|$|R
50|$|With {{the advent}} of {{sophisticated}} electronics {{in the early part}} of the 1990s, telephone service providers developed methods to share a single copper line to transmit multiple telephone calls simultaneously. Various pair gain methods using time-division multiplexing and frequency-division multiplexing prevented interference between simultaneous calls. A distant suburb may have a subscriber loop carrier or digital loop carrier system in which a <b>remote</b> <b>concentrator</b> is located near the subscribers to connect multiple local subscriber loops to one common line to a central office exchange. A single optical fibre can also be shared between multiple subscribers in fibre to the cabinet systems.|$|R
50|$|In the {{evolution}} of modern telecommunications systems there was a requirement to connect large numbers of low-speed access devices with large telephone company 'central office' switches over common paths. During the first generations of digital networks, analog signals were digitized on line cards attached to the telephone exchange switches. In {{an effort to reduce}} local loop costs, it was decided to push this conversion closer to the customer premises by deploying small conversion devices in customer neighborhoods. These devices would combine multiple digital signals on a single link to a larger telephone switch, which would provide service to the customer. These devices were initially called <b>remote</b> <b>concentrators</b> or simply <b>remotes.</b>|$|R
50|$|The Merit PCPs and SCPs {{eventually}} {{replaced the}} Data <b>Concentrators</b> and <b>Remote</b> Data <b>Concentrators</b> at the University of Michigan. At their peak {{there were more}} than 300 Merit PCPs and SCPs installed, supporting more than 10,000 terminal ports.|$|R
5000|$|ISP used {{concentrators}} {{to enable}} modem dialing; {{this kind of}} concentrator is sometimes called a modem <b>concentrator</b> or a <b>remote</b> access <b>concentrator.</b> The term [...] "access concentrator" [...] {{is also used to}} describe similar provider edge equipment used in computer networks that doesn't rely on modems anymore, e.g. FTTH.|$|R
50|$|Crash carts are {{a method}} of last resort in data centers which employ various forms of {{out-of-band}} management. In those cases it is used for equipment which {{does not support the}} requisite out-of-band infrastructure (OOBI) features or in cases where the OOBI devices (<b>concentrators,</b> switches, <b>terminal</b> servers, etc.) or services themselves have failed.|$|R
50|$|Cleo {{originally}} {{began as}} a division of Phone 1 Inc., a voice data gathering systems manufacturer, and built data <b>concentrators</b> and <b>terminal</b> emulators — multi-bus computers, modems, and terminals to interface with IBM mainframes via bisynchronous communications. The company then began developing mainframe middleware in the 1980s, and {{with the rise of}} the PC, moved into B2B data communications and file transfer software.|$|R
40|$|Equipment and Automation Ltd in Cracow. It is a miniature, {{microcomputer}} <b>remote</b> data <b>concentrator,</b> using real-time operating system, {{designed for}} {{direct connection to}} the Internet/Intranet network. Visualization of acquired signals, as well as configuration and programming of the device are performed by means of www browser (using Java platform). For this purpose it was provided with the Ethernet 10 BaseT interface, TCP/IP protocol and a www serve...|$|R
50|$|A <b>terminal</b> <b>concentrator</b> {{was also}} {{developed}} that year, since time-sharing {{was still a}} prevalent mode of computer use. In 1975, the network shrank slightly due to budgetary constraints, but the setback was only temporary. At that point, the network provided remote login, remote batch and file transfer user application services.|$|R
50|$|The {{switching}} nodes {{were fed}} by Telenet Access Controller (TAC) <b>terminal</b> <b>concentrators</b> both colocated and {{remote from the}} switches. By 1980, there were over 1000 switches in the public network. At that time, the next largest network using Telenet switches was that of Southern Bell, which had approximately 250 switches.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedMini and micro computers represent the newest {{developments in the}} computer field. Their small size, low cost, and wide ranging versatility make them valuable devices for use in communications systems. They {{can be used to}} perform many of the message handling functions previously performed by the main computer, thus freeing it for its more important application tasks. The use of mini and micro computers as front end processors, data <b>concentrators</b> and <b>terminal</b> controllers is investigated, as well as the general hardware and software features such small computers must have to perform communications functions. A cost comparison between minicomputers, microcomputers and hardwired devices is also presented. [URL]...|$|R
40|$|Given a {{collection}} of terminals, each with a demand, a col-lection of concentrators, each with a capacity, and costs of connecting the <b>terminals</b> to the <b>concentrators,</b> the <b>terminal</b> assignment problem seeks a set of such connections of mini-mum cost and without the total demand at any concentrator exceeding its capacity. One genetic algorithm for this prob-lem encodes candidate solutions as strings of concentrator labels; in three other GAs, chromosomes are permutations of terminal labels decoded by a greedy decoder. In comparisons on 40 instances of the problem, the string-coded GA consis-tently performs poorly, while among the three permutation-coded GAs, one that applies only mutation almost always outperforms the other two, which use crossover operators as well as mutation...|$|R
40|$|Configurations and Software: A Tutorial This paper, {{together}} with the preceding paper by Divilbiss, is intended to provide a background for the characteristics of minicomputers {{and the ways in}} which they can be configured to tackle library problems. As part of the discussion of minicomputer features, an attempt is made to compare and contrast them with larger, general purpose computers. An acquaintance with basic computer concepts is assumed. Concepts of a more technical nature are explained as they are introduced. The first section below discusses configurations; the second section covers minicomputer software. Hardware and architectural features are covered in the paper by Divilbiss. MINICOMPUTER CONFIGURATIONS Minicomputers and their associated peripheral devices can be combined in a great variety of ways, but this variety can be categorized into four basic configuration types: (1) stand-alone batch, (2) stand-alone on-line, (3) front end, and (4) <b>remote</b> <b>concentrator.</b> The first type, stand-alone batch, is the most familiar (see figure 1). In this configuration, the mini looks like and performs like larger batch computers. In most cases the mini will have a card reader and punch, a line printer, tape drives and disks. (The minis in all four configuration types will have operator consoles, but to avoid cluttering the figures, the consoles have been omitted.) The term stand-alone is part of the name of this configuration in order to stress the fact that the mini is not connected to a larger computer. The mini stands alone. The main use of the stand-alone batch configuration is the generation of printed products, e. g., serials lists, purchase orders, circulation lists and overdue notices. This configuration could also be used fo...|$|R
40|$|This paper {{presents}} a genetic algorithm for finding a constrained minimum spanning tree. The problem {{is of relevance}} {{in the design of}} minimum cost communication networks, where {{there is a need to}} connect all the terminals at a user site to a <b>terminal</b> <b>concentrator</b> in a multipoint (tree) configuration, while ensuring that link capacity constraints are not violated. The approach used maintains a distinction between genotype and phenotype, which produces superior results to those found using a direct representation in a previous study...|$|R
40|$|ABSTRACT: The {{personal}} handyphone system (PHS) service {{began in}} Japan in 1995. As this new communication service matched social needs well, {{the number of}} subscribers quickly reached 7 million in just two years. The changes of the social needs for telephone services progressed {{from the age of}} “phones to more homes ” to one of “a phone for each person. ” This means that we have entered the age of personal communication. In addition, a user’s needs for anytime, anywhere voice and data communication have also increased recently. Against the backdrop of this, the recent immense strides in multimedia, mobile switching and radio communication technologies are attracting attention for the implementation of personal land mobile communications. Hitachi Ltd. ’s main components of the PHS network including: the PHS switching system, high-efficiency <b>remote</b> line <b>concentrator,</b> cell station (CS), and CS maintenance system are introduced...|$|R
25|$|In IBM ESA/390 terminology, {{a channel}} is a {{parallel}} data connection inside the tree-like or hierarchically organized I/O subsystem. In System/390 I/O cages, channels either directly connect to devices which are installed inside the cage (communication adapter such as ESCON, FICON, Open Systems Adapter) or they run {{outside of the}} cage, below the raised floor as cables of the thickness of a thumb and directly connect to channel interfaces on bigger devices like tape subsystems, direct access storage devices (DASDs), <b>terminal</b> <b>concentrators</b> and other ESA/390 systems.|$|R
50|$|These {{front-end}} processors, usually DEC PDP-8, PDP-11, or LSI-11 based with locally developed custom {{hardware and}} software, {{would act as}} IBM control units attached to the IBM input/output channels {{on one side and}} to modems and phone lines on the other. At the University of Michigan the front-end processor was known as the Data Concentrator (DC). The DC was developed as part of the CONCOMP project by Dave Mills and others and was the first non-IBM device developed for attachment to an IBM I/O Channel. Initially a PDP-8 based system, the DC was upgraded to use PDP-11 hardware and a <b>Remote</b> Data <b>Concentrator</b> (RDC) was developed that used LSI-11 hardware that connected back to a DC over a synchronous data circuit. The University of British Columbia (UBC) developed two PDP-11 based systems: the Host Interface Machine (HIM) and the Network Interface Machine (NIM). The University of Alberta used a PDP-11 based Front-end processor.|$|R
40|$|The {{increasing}} {{complexity and}} heterogeneity of avionic networks make resource savings a challenging task to guarantee easy incremental design {{during the long}} lifetime of an aircraft. In this paper, {{we focus on the}} optimization of interconnection devices for multi-cluster avionic networks, called <b>Remote</b> Data <b>Concentrators</b> (RDC), and especially for the CAN-AFDX network. The design of this optimized RDC device consists in implementing frame packing strategies to manage upstream (sensors) flows to improve bandwidth utilization in the AFDX; and Hierarchical Traffic Shaping (HTS) algorithm to control downstream (actuators) flows to guarantee bandwidth isolation on CAN. Schedulability analysis integrating the effects of these new mechanisms is detailed and validated. Furthermore, a heuristic approach to tune the Hierarchical Traffic Shaping parameters within the RDC device is proposed to reduce as much as possible bandwidth utilization in the AFDX, while ensuring flows schedulability. The performance analysis conducted on a realistic avionic case study proves the efficiency of the optimized RDC device to reduce bandwidth utilization in the AFDX, compared to the basic device currently implemented in avionics...|$|R
40|$|International audienceThe {{following}} paper {{presents an}} agent-based platform,developed to perform locally fast load-shedding of domesticloads. The concept leads on frequency-based relays embeddedinto Customer Energy Management System (CEMS) and coordinatedby <b>remote</b> servers, data <b>concentrators</b> or any devicescompatible with the upcoming generation of Advance MeteringInfrastructure. The platform enables {{to reproduce the}} droopcurve that a bulk generation unit currently follow to provideFrequency Containment Reserves (FCR, ex Primary Reserve) to a System Operator. This droop curve can thus be used tosupport regular FCR or act as a pre regular frequency loadshedding to avoid the curtailment of large parts of DistributionNetwork that might contain distribute sources, both renewablesand conventional...|$|R
40|$|The {{following}} paper {{presents an}} agent-based platform, developed to perform locally fast load-shedding of domestic loads. The concept leads on frequency-based relays embedded into Customer Energy Management System (CEMS) and coordinated by <b>remote</b> servers, data <b>concentrators</b> or any devices {{compatible with the}} upcoming generation of Advance Metering Infrastructure. The platform enables to reproduce the droop curve that a bulk generation unit currently follow to provide Frequency Containment Reserves (FCR, ex Primary Reserve) to a System Operator. This droop curve can thus be used to support regular FCR or act as a pre regular frequency load shedding to avoid the curtailment of large parts of Distribution Network that might contain distribute sources, both renewables and conventional...|$|R
50|$|Interactive use of VS/9 {{was done}} through {{terminals}} {{connected to a}} <b>terminal</b> <b>concentrator</b> unit, which passed control signals {{to and from the}} terminals, {{in a manner similar to}} the way IBM would provide with its IBM 3270-style terminals. This provided, in general, for input to the terminal to be sent in response to an enter key, as opposed to the practice on PCs of taking input one character at a time. The concentrator unit was originally known as the Communications Control Module, or CCM. However, RCA had sold the patents and designs for its CCM terminal controller to Singer Corporation, so Univac developed an emulator device for the CCM which was known as the Multiterminal Connection Controller model 16, or MCC-16.|$|R
40|$|The aim of {{my thesis}} {{is to provide}} a resources-efficient gateway to connect Input/Output (I/O) CAN buses to a {{backbone}} network based on AFDX technology, in modern avionics communication architectures. Currently, the <b>Remote</b> Data <b>Concentrator</b> (RDC) is the main standard for gateways in avionics; and the existing implementations do not integrate any resource management mechanism. To handle these limitations, we design an enhanced CAN-AFDX RDC integrating new functions: (i) Frame Packing (FP) allowing to reduce communication overheads with reference to the currently used " 1 to 1 " frame conversion strategy; (ii) Hierarchical Traffic Shaping (HTS) to reduce contention on the CAN bus. Furthermore, our proposed RDC allows the connection of multiple I/O CAN buses to AFDX while guaranteeing isolation between different criticality levels, using a software partitioning mechanism. To analyze the performance guarantees offered by our proposed RDC, we considered two metrics: the end-to-end latency and the induced AFDX bandwidth consumption. Furthermore, an optimization process was proposed to achieve an optimal configuration of our proposed RDC, i. e., minimizing the bandwidth utilization while meeting the real-time constraints of communication. Finally, the capacity of our proposed RDC to meet the emerging avionics requirements has been validated through a realistic avionics case study...|$|R
50|$|Strictly speaking, in Unices a {{terminal}} device comprises the underlying tty device driver, {{responsible for the}} physical control of the device hardware via I/O instructions and handling device interrupt requests for character input and output, and the line discipline. A line discipline is independent of the actual device hardware, and the same line discipline {{can be used for}} a <b>terminal</b> <b>concentrator</b> device responsible for multiple controlling terminals as for a pseudoterminal. In fact, the line discipline (or, in the case of BSD, AIX, and other systems, line disciplines) are the same across all terminal devices. It is the line discipline that is responsible for local echo, line editing, processing of input modes, processing of output modes, and character mapping. All these things are independent of the actual hardware, dealing as they do in the simple abstractions provided by tty device drivers: transmit a character, receive a character, set various hardware states.|$|R
