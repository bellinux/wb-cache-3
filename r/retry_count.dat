7|3|Public
50|$|Low speed {{instability}} with HyperTransport version 3 capable processors. HT3 speeds 1.2 GHz up to 1.6 GHz {{should not}} be used, only 1.8 up to 2.2 GHz speeds are safe to be used. HT3 processors operating at 1.6 GHz (Phenom X3 8250e, Phenom X4 9100e and Phenom X4 9150e) will suffer from high <b>retry</b> <b>count</b> on the HyperTransport link which may result in hangs on revision A12 northbridges.|$|E
40|$|Ad hoc {{wireless}} {{networks are}} a very potential field offering lot of scope for research. In these networks, the Medium Access Control (MAC) protocols are responsible for coordinating the access from active nodes. These protocols assume greater significance since the wireless communication channel is inherently prone to such problems as hidden terminal, exposed terminal and fading effects. The scheme proposed here is used to perform priority scheduling in nodes resolving any contention scenario that can arise for the channel {{in the best possible}} manner. Alert transmission packets are used as a means of notification whenever a high priority node wants to transmit data. Suspend transmission packets are used to avoid priority reversal issue and a <b>retry</b> <b>count</b> is implemented to avoid starvation among the nodes...|$|E
40|$|Abstract—Link {{adaptation}} to dynamically select the data transmission rate {{at a given}} time has been recognized as an effective way to improve the goodput performance of the IEEE 802. 11 wireless local-area networks (WLANs). Recently, with the introduction of the new high-speed 802. 11 a physical layer (PHY), it is even more important to have a well-designed link adaptation scheme work with the 802. 11 a PHY such that its fast transmission rates can be exploited. In this paper, we first present a generic method to analyze the goodput performance of an 802. 11 a system under the Distributed Coordination Function (DCF), and express the expected effective goodput as a closed-form function of the data payload length, the frame <b>retry</b> <b>count,</b> the wireless channel condition, and the selected data transmission rate. Then, based on the theoretical analysis, we propose a novel MPDU (MAC Protocol Data Unit) based link adaptation scheme for the 802. 11 a systems. It is a simple table-driven approach, and the basic idea is to pre-establish a best PHY mode table by applying the dynamic programming technique. The best PHY mode table is indexed by the system status triplet that consists of the data payload length, the wireless channel condition, and the frame <b>retry</b> <b>count.</b> At run-time, a wireless station determines the most appropriate PHY mode for the next transmission attempt by a simple table lookup, using the most upto-date system status as the index. Our in-depth simulation shows that the proposed MPDU-based link adaptation scheme outperforms the single-mode schemes and the AutoRate Fallback (ARF) scheme — which is used in Lucent Technologies ’ WaveLAN-II networking devices — significantly in terms of the average goodput, the frame drop rate, and the average number of transmission attempts per data frame delivery...|$|E
50|$|Bypass {{switches}} may {{be managed}} through any of several interfaces: a command-line interface (CLI), a Web browser-based interface, or a platform-based SNMP tool. Management functions may include configuring an IP address for SNMP traps, retrieving RMON statistics, and setting parameters for the heartbeat packet such as packet contents, timing, and <b>retry</b> <b>counts.</b>|$|R
40|$|This paper {{describes}} a TDMA channel scheduling algorithm in WIA-PA network under the Blacklist technology (Blacklist-TCS). The main {{objective of this}} channel scheduling algorithm {{is to reduce the}} computation time while maximizing the utilization of the network resources, thereby improving the network throughput, reducing the transmission delay, and decreasing the number of retry. In this paper, we consider the channel scheduling algorithm under the requirements of real-time, reliability, low energy consumption and the character of time-varying channel simultaneously, and present our algorithm as a variant of the coloring algorithm. A performance study is carried out by physical experiment. The results show that our algorithm performs better than non-blacklist algorithm in aspects of transmission success ratio, end-to-end delay, and <b>retry</b> exhausted <b>count.</b> IEE...|$|R
40|$|This paper {{describes}} distributed {{and dynamic}} algorithms for TDMA channel scheduling in WIA-PA network with multiple channels. The main {{objective of the}} channel scheduling algorithm {{is to reduce the}} computation time while maximizing the utilization of the network resources, thereby improving the network throughput, reducing the transmission delay, and decreasing the number of retry. In this paper, we consider the channel scheduling algorithm by using the blacklist technology and under the requirements of real-time, reliability, low energy consumption and the character of time-varying channel simultaneously, and present our algorithm as a variant of the coloring algorithm. A performance study is carried out by using OPNET 10. 0. The results show that our algorithm performs better than centralized algorithms and non-blacklist distributed algorithm in aspects of network throughput, end-to-end delay, and <b>retry</b> exhausted <b>count.</b> IEE...|$|R
40|$|In this paper, {{we study}} the {{programmability}} and performance de-sign {{space of the}} new hardware transactional memory (HTM) framework provided by Intel’s Haswell architecture. Towards this, we first present an Intel TSX performance characterization using a simple array access microbenchmark. Through a comprehensive study we identify several important trends, such as, the relation-ships between, transaction size, write ratio inside transactions, <b>retry</b> <b>count,</b> and transaction abort rate and performance. Next, we explore code transformations such as, computation splitting and privatization, for optimizing the performance of Mol-dyn, a molecular dynamics simulation from the CHARMM [4] molecular dynamics simulation and analysis package. We leverage our TSX performance characterization to guide and minimize our parametrization efforts for our Moldyn code transformations. We found that a hardware TM solution using computation split-ting and privatization can be both easier to program and also out-perform a hand-tuned fine-grain pthread locks solution including those same optimizations...|$|E
40|$|Abstract—TCP is {{the most}} common {{transport}} layer protocol used in Internet. It was designed primarily for wired networks, assuming reliability at lower layers and packet losses are considered as an indication of congestion. The characteristic of wireless links is very different from wired links, particularly in terms of loss behavior. In wireless networks, most packet losses are due to poor link quality and intermittent connectivity, which TCP may falsely assume as congestion. These wrongly trigger the congestion control mechanism of TCP, resulting into end-to-end throughput degradation. The problem is further compounded by the large propagation delay common in such environments. TCP-ACC proposed earlier attempts to combat this problem by adopting a dynamic value of congestion window for the slow start. In this paper, we extend TCP-ACC {{with the help of a}} cross layer solution to differentiate between a loss due to congestion and a loss due to noise in the wireless link based on the number of attempts of MAC layer retransmissions. Keywords-slow start, congestion control, retry limit, <b>retry</b> <b>count,</b> RTT, duplicate acknowledgment, cwnd, ssthresh. I...|$|E
30|$|During the CAP time devices {{request for}} {{reservation}} in CTA and also send data packets if needed. So the time length of CAP is dynamic {{and it is}} determined by the PNC. Longer the duration of CAP time is, more the number of devices will send their CTA slot requests and causes less time for CTA slots. Hence, it is important to improve the performance for both data and request packets transmission within limited time frame of CAP. In our previous work [2] we present the detail performance analysis of WPAN MAC and identified some key issues to improve the MAC performance, especially, for CAP duration. In this paper, we limit our research focus on improving the performance of CAP using IB instead of BEB during the contention process, and hence, overall WPAN MAC performance. During the CAP, MAC protocol performs backoff procedure before transmitting any kind of data or request packets. This backoff mechanism is similar to CSMA/CA mechanism of IEEE 802.11 with some different parameters. In WAPN MAC, <b>retry</b> <b>count</b> is limited up to 3 counts (0 to 3) with maximum window size of 64 slots (8, 16, 32, and 64).|$|E

