4|85|Public
50|$|Inside of {{the scope}} of the with statement, a and b refer to the subfields of the <b>record</b> <b>pointer</b> NodePtr and not to the record Node or the pointer type pNode.|$|E
50|$|Btrieve {{allows for}} {{duplicate}} key values in an index. Btrieve handles duplicate keys using either a linked duplicate method, or {{by using a}} repeating duplicate method (this terminology started being used when version 6.0 was released). The linked duplicate method used a pair of record pointers in the index page itself {{to point to the}} head and tail of a doubly linked list of duplicate keys. This meant that the order of the duplicate keys in the list was in the order they were entered. The duplicate key method did not use a linked list, but rather made all the keys unique by creating a new index key and appending the address of the <b>record</b> <b>pointer</b> {{to the end of the}} key. This means that the key is retrieved via its position order.|$|E
40|$|Abstract—Purchase-sales-inventory {{software}} {{is a common}} tool of small business enterprise information and can be designed by using Excel. This paper focuses {{on the idea of}} “fool ” business software design with Excel sequence, <b>record</b> <b>pointer</b> and ActiveX control, and introduces the skills in invoking development tool, setting Macro security, using name and sequence, using Excel function, eliminating loop computation, designing <b>record</b> <b>pointer,</b> and designing “Reset " and "Confirm " control buttons in software design. Keywords-Software design; ActiveX control; VBA code; record pointer; purchase-sales-inventory I...|$|E
50|$|Here the {{variable}} NodePtr is a pointer {{to the data}} type Node, a <b>record.</b> <b>Pointers</b> can be used before they are declared. This is a forward declaration, {{an exception to the}} rule that things must be declared before they are used.|$|R
5000|$|TYPE node = <b>RECORD</b> node <b>POINTER</b> : next T : some_data ENDRECORD ...|$|R
50|$|Ada is an ALGOL-like {{programming}} language featuring control structures with reserved {{words such as}} if, then, else, while, for, and so on. However, Ada also has many data structuring facilities and other abstractions which {{were not included in}} the original ALGOL 60, such as type definitions, <b>records,</b> <b>pointers,</b> enumerations. Such constructs were in part inherited or inspired from Pascal.|$|R
40|$|We {{present a}} method for obtaining lab-quality {{measurements}} of pointing performance from unobtrusive observations of natural in situ interactions. Specifically, we have devel-oped a set of user-independent classifiers for discriminating between deliberate, targeted mouse pointer movements and those movements that were affected by any extraneous fac-tors. To develop and validate these classifiers, we developed logging software to unobtrusively <b>record</b> <b>pointer</b> trajectories as participants naturally interacted with their computers {{over the course of}} several weeks. Each participant also performed a set of pointing tasks in a formal study set-up. For each movement, we computed a set of measures capturing nuances of the trajectory and the speed, acceleration, and jerk profiles. Treating the observations from the formal study as positive examples of deliberate, targeted movements and the in situ observations as unlabeled data with an unknown mix of delib-erate and distracted interactions, we used a recent advance in machine learning to develop the classifiers. Our results show that, on four distinct metrics, the data collected in-situ and fil-tered with our classifiers closely matches the results obtained from the formal experiment. Author Keywords Pointing, motor performance, machine learning, in situ stud...|$|E
50|$|Procedures can {{be bound}} to a <b>record</b> (or <b>pointer)</b> type. They are {{equivalent}} to instance methods in object-oriented terminology.|$|R
50|$|As in IPv4, each host is {{represented}} in the DNS by two DNS records: an address record and a reverse mapping <b>pointer</b> <b>record.</b> For example,a host computer named derrick in zone example.com has the Unique Local Address fdda:5cc1:23:4::1f. Its quad-A address record is derrick.example.com. IN AAAA fdda:5cc1:23:4::1fand its IPv6 <b>pointer</b> <b>record</b> is f.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0.0.3.2.0.0.1.c.c.5.a.d.d.f.ip6.arpa. IN PTR derrick.example.com.This <b>pointer</b> <b>record</b> may be defined {{in a number of}} zones, depending on the chain of delegation of authority in the zone d.f.ip6.arpa.|$|R
50|$|Pascal, in its {{original}} form, is a purely procedural language and includes the traditional array of ALGOL-like control structures with reserved words such as if, then, else, while, for, and so on. However, Pascal also has many data structuring facilities and other abstractions which {{were not included in}} the original ALGOL 60, like type definitions, <b>records,</b> <b>pointers,</b> enumerations, and sets. Such constructs were in part inherited or inspired from Simula 67, ALGOL 68, Niklaus Wirth's own ALGOL W and suggestions by C. A. R. Hoare.|$|R
40|$|This paper {{extends the}} methods of the {{refinement}} calculi to allow the derivation of an Oberon implementation. The use of <b>records,</b> <b>pointers,</b> opaque types and type extension distinguishes this work from previous examples. A case study for a stack abstract data type illustrates the method, which involves three data refinement steps. Firstly, a sequence of integers is refined to a sequence of integer <b>records</b> with <b>pointers.</b> Secondly, the sequence of records is refined to a linked list accessed through a start pointer. Finally, this is refined to a generic implementation that is close to Oberon code. Pointers are facilitated by declaring an explicit local data store for each stack variable. The advantage of Oberon over Modula- 2 {{is the ability to}} separate the final code into two modules [...] - a generic stack that maintains the linked list property and an integer instantiation of the stack, using type extension. This separation of concerns (isolation of the linked data structure properties) is t [...] ...|$|R
40|$|In many garbage {{collected}} systems, the mutator {{performs a}} write barrier for every pointer update. Using generational garbage collectors, we study in depth three code placement options for rememberedset write barriers: inlined, out-of-line, and partially inlined (fast path inlined, slow path out-of-line). The fast path determines if the collector needs {{to remember the}} pointer update. The slow path <b>records</b> the <b>pointer</b> in a list when necessary. Efficient implementations minimize the instructions on the fast path, and <b>record</b> few <b>pointers</b> (from 0. 16 to 3 % of pointer stores in our benchmarks). We find the mutator performs best with a partially inlined barrier, by a modest 1. 5 % on average over full inlining. We als...|$|R
50|$|Angie Bjorklund, {{basketball}} player. Tennessee Lady Vols all-time 3 <b>pointers</b> <b>record</b> holder with 300 made 3 pointers.|$|R
5000|$|... "Dare Me" [...] is a 1985 song {{originally}} <b>recorded</b> by The <b>Pointer</b> Sisters on the RCA label.|$|R
40|$|A common {{theoretical}} assumption in {{the study}} of information flow security in Java-like languages is that pointers are opaque - i. e., that the only properties that can be observed of pointers are the objects to which they point, and (at most) their equality. These assumptions often fail in practice. For example, various important operations in Java's standard API, such as hashcodes or serialization, might break pointer opacity. As a result, information-flow static analyses which assume pointer opacity risk being unsound in practice, since the pointer representation provides an unchecked implicit leak. We investigate information flow in the presence of non-opaque pointers for an imperative language with <b>records,</b> <b>pointer</b> instructions and exceptions, and develop an information flow aware type system which guarantees noninterference...|$|R
50|$|There {{are many}} {{different}} ways to represent trees; common representations represent the nodes as dynamically allocated <b>records</b> with <b>pointers</b> to their children, their parents, or both, or as items in an array, with relationships between them determined by their positions in the array (e.g., binary heap).|$|R
40|$|Noninterference in the {{presence}} of non-opaque pointers A common theoretical assumption in the study of information flow security in Java-like languages is that pointers are opaque – i. e., that the only properties that can be observed of pointers are the objects to which they point, and (at most) their equality. These assumptions often fail in practice. For example, various important operations in Java’s standard API, such as hashcodes or serialization, might break pointer opacity. As a result, information-flow static analyses which assume pointer opacity risk being unsound in practice, since the pointer representation provides an unchecked implicit leak. We investigate information flow in {{the presence}} of non-opaque pointers for an imperative language with <b>records,</b> <b>pointer</b> instructions and exceptions, and develop an information flow aware type system which guarantees noninterference. ...|$|R
30|$|Traversal is the {{operation}} of moving and accessing a set of nodes by following the relationship in a graph database [26]. In Neo 4 j, each node <b>record</b> contains two <b>pointers,</b> one points to the first attribute of the node, {{and the other one}} points to the first contact in the link chain. With fixed-size storage <b>records</b> and <b>pointer</b> IDs, traversal and high-speed execution can be easily performed by following the pointers. To traverse a specific relationship from a node to another, we only need to traverse several pointers in Neo 4 j and then perform some low-cost ID computation, which is considerably less time-consuming than that of the global index.|$|R
50|$|In 1978, American jazz violinist and <b>record</b> {{producer}} Noel <b>Pointer</b> {{performed an}} instrumental {{cover of the}} song on his second album, Hold On.|$|R
50|$|In computing, a {{group of}} {{parallel}} arrays (also known as structure of arrays or SoA) {{is a form of}} implicit data structure that uses multiple arrays to represent a singular array of records. It keeps a separate, homogeneous data array for each field of the record, each having the same number of elements. Then, objects located at the same index in each array are implicitly the fields of a single <b>record.</b> <b>Pointers</b> from one object to another are replaced by array indices. This contrasts with the normal approach of storing all fields of each record together in memory (also known as array of structures or AoS). For example, one might declare an array of 100 names, each a string, and 100 ages, each an integer, associating each name with the age that has the same index.|$|R
50|$|The {{history of}} the Pointer, like many breeds, is a {{reasonably}} debatable topic. <b>Records</b> of <b>Pointers</b> in England trace {{as far back as}} 1650. According to one source, the Pointer came to be in the 16th and 17th centuries, when pointing breeds, including the Old Spanish and Portuguese pointer, were brought from the European mainland to England.|$|R
50|$|Harrison was a Big East All-Rookie {{selection}} in his freshman year. Harrison {{is known as}} a prolific scorer and marksman, holding the St. John's <b>record</b> for three <b>pointers</b> made in a career.|$|R
50|$|On April 21, 2016, Pointer {{signed with}} the Hamilton Tiger-Cats of the Canadian Football League. In seven games, <b>Pointer</b> <b>recorded</b> 16 {{defensive}} tackles & 2 sacks. On August 26, 2016, Pointer was released by the Tiger-Cats.|$|R
5000|$|... "Slow Hand" [...] is a ballad {{written by}} John Bettis and Michael Clark and <b>recorded</b> by The <b>Pointer</b> Sisters. It was first {{released}} {{in the spring of}} 1981 as the advance single for Black & White.|$|R
50|$|In 2002-03, {{his school}} <b>record</b> 90 three <b>pointers</b> - later beaten by {{teammate}} Dominick Mejia - {{combined with a}} 11.5 scoring average helped Drexel reach the 2003 CAA tournament final, that they would lose 62-70 to UNC Wilmington.|$|R
5000|$|<b>Pointer</b> <b>recorded</b> a {{duet with}} Dionne Warwick, [...] "Heartbreak Of Love," [...] for Dionne's 1987 album, Reservations for Two. Their duet later {{appeared}} on the B-side of Warwick's 1989 single [...] "Take Good Care Of You and Me".|$|R
5000|$|... "Holdin' Out For Love" [...] {{is a song}} {{introduced}} by American singer-actress Cher from her sixteenth studio album, Prisoner: written by Tom Snow and lyricist Cynthia Weil, the song has subsequently been <b>recorded</b> by the <b>Pointer</b> Sisters and Angela Bofill.|$|R
40|$|Abstract. Burstsort is a cache-oriented sorting {{technique}} {{that uses a}} dynamic trie to efficiently divide large sets of string keys into related subsets small enough to sort in cache. In our original burstsort, string keys sharing a common prefix were managed via a bucket of pointers represented as a list or array; this approach {{was found to be}} up to twice as fast as the previous best string sorts, mostly because of a sharp reduction in out-of-cache references. In this paper we introduce C-burstsort, which copies the unexamined tail of each key to the bucket and discards the original key to improve data locality. On both Intel and PowerPC architectures, and {{on a wide range of}} string types, we show that sorting is typically twice as fast as our original burstsort, and four to five times faster than multikey quicksort and previous radixsorts. A variant that copies both suffixes and <b>record</b> <b>pointers</b> to buckets, CP-burstsort, uses more memory but provides stable sorting. In current computers, where performance is limited by memory access latencies, these new algorithms can dramatically reduce the time needed for internal sorting of large numbers of strings. ...|$|R
50|$|In {{the early}} 1970s Stewart {{worked on the}} Lady Sings The Blues album Diana Ross, and the Chameleon album by Frankie Valli & the Four Seasons, both {{released}} in 1972. Stewart handled the engineering and remixing chores for the soundtrack album to the 1974 Fred Williamson film Hell Up in Harlem by Edwin Starr. In the late 1970s, he <b>recorded</b> Bonnie <b>Pointer's</b> Bonnie Pointer album which was released on Motown M7-911R1 in 1978. In the 1980s, {{he worked on the}} Leon Ware produced Shadow album, Shadows In The Streets, which was released in 1981.|$|R
50|$|Wanting {{to develop}} his {{basketball}} in a different way, {{he moved to the}} United States in 2011, to Findlay Prep high school in Henderson, Nevada. There, he was a starter in their National High School Invitational victory in 2012, breaking the school <b>record</b> for three <b>pointers</b> in a season with 66.|$|R
5000|$|After [...] {{had served}} its {{transitional}} purpose, it proved impractical {{to remove the}} domain, because in-addr.arpa was used for reverse DNS lookup of IP addresses. For example, the mapping of the IP address 192.0.2.155 to a host name is obtained by issuing a DNS query for a <b>pointer</b> <b>record</b> of the domain name155.2.0.192.in-addr.arpa.|$|R
50|$|Born in Manchester, New Hampshire, Banghart {{graduated}} from Souhegan High School in Amherst, New Hampshire and Dartmouth College also in New Hampshire. As a guard, Banghart played for Dartmouth from 1996 to 2000, including the Dartmouth teams {{that won the}} 1999 and 2000 Ivy League titles. She holds Dartmouth <b>records</b> for 3 <b>pointers</b> in a game, season, and career.|$|R
40|$|Tracking the {{resources}} of the two redundant Solid State Recorders (SSR) is a necessary routine for Cassini spacecraft mission operations. Instead of relying on a full-fledged spacecraft hardware/software simulator to track and predict the SSR <b>recording</b> and playback <b>pointer</b> positions, a stand-alone SSR Pointer Tracker tool was developed as part of JPL's Multimission Spacecraft Analysis system...|$|R
2500|$|The <b>Pointer</b> Sisters <b>{{recorded}}</b> {{their first}} album with Issa Pointer rather than June Pointer in April 2004 with The Pointer Sisters - Live in Billings recorded at the Alberta Bair Theatre in Billings, Montana. The first studio <b>recording</b> by the <b>Pointer</b> Sisters to feature Issa Pointer was [...] "Christmas in New York" [...] for YMC Records [...] {{recorded in the}} summer of 2005 for release for the multi-artist seasonal release Smooth & Soulful Christmas Collection on YMC Records: [...] "Christmas in New York" [...] afforded the Pointer Sisters their last appearance on a Billboard chart to date, the track reaching #21 on the Billboard Adult Contemporary chart. Christmas In New York was written by Nathan East and Chris Christian and produced by them. [...] The group's next recording was a remake of the Eurythmics' [...] "Sisters Are Doin' It for Themselves" [...] recorded with Natalia: this track spent sixteen weeks in the Top 20 of Belgium's Flemish chart from October 2005 with a peak of #2. In 2008 Anita Pointer and Ruth <b>Pointer</b> <b>recorded</b> the last <b>Pointer</b> Sisters album to date The Pointer Sisters Favorites consisting of remakes of ten of the group's biggest hits: recorded in response to the group's failure to receive royalties from the inclusion of any Pointer Sisters' hits on multi-artist hits compilations, [...] "...Favorites" [...] was sold exclusively at the group's live gigs and at the website ThePointerSisters.com, but was added to iTunes in 2013.|$|R
40|$|This {{dissertation}} {{addresses the}} problem of automated test data generation for commonly used coverage based criteria. A new program execution based approach to automated test data generation using iterative relaxation methods has been developed. In this approach, test data generation is initiated with an arbitrarily chosen input, which is iteratively refined using a relaxation technique to generate the desired input. New algorithms to generate test data for statement, branch, data flow and path coverage have been developed. They are general in their applicability as they can generate test data for programs with branch predicates that compute linear and nonlinear functions of input. They can detect linear infeasible paths and can handle programs using arrays, <b>records,</b> <b>pointers</b> and loops. A new code transformation method to handle test data generation for functions with pointer inputs has been developed. A new method called Unified Numerical Approach has also been developed to compute a real and an integer feasible solution {{of a set of}} linear constraints. It enables the test data generation algorithms developed in this dissertation to handle programs that have both integer and floating point inputs. The experimental evaluation reveals that these methods automatically generated test data that covers a large percentage of coverage elements. The average time taken to generate a test case was of the order of a few seconds. The experiments also revealed their power in detecting infeasible linear paths as well as in indicating potentially infeasible nonlinear paths. ...|$|R
5000|$|The <b>Pointer</b> Sisters <b>{{recorded}}</b> {{their first}} album with Issa Pointer rather than June Pointer in April 2004 with The Pointer Sisters - Live in Billings recorded at the Alberta Bair Theatre in Billings, Montana. The first studio <b>recording</b> by the <b>Pointer</b> Sisters to feature Issa Pointer was [...] "Christmas in New York" [...] for YMC Records www.ymcrecords.com {{recorded in the}} summer of 2005 for release for the multi-artist seasonal release Smooth & Soulful Christmas Collection on YMC Records: [...] "Christmas in New York" [...] afforded the Pointer Sisters their last appearance on a Billboard chart to date, the track reaching #21 on the Billboard Adult Contemporary chart. Christmas In New York was written by Nathan East and Chris Christian and produced by them. The group's next recording was a remake of the Eurythmics' [...] "Sisters Are Doin' It for Themselves" [...] recorded with Natalia: this track spent sixteen weeks in the Top 20 of Belgium's Flemish chart from October 2005 with a peak of #2. In 2008 Anita Pointer and Ruth <b>Pointer</b> <b>recorded</b> the last <b>Pointer</b> Sisters album to date The Pointer Sisters Favorites consisting of remakes of ten of the group's biggest hits: recorded in response to the group's failure to receive royalties from the inclusion of any Pointer Sisters' hits on multi-artist hits compilations, [...] "...Favorites" [...] was sold exclusively at the group's live gigs and at the website ThePointerSisters.com, but was added to iTunes in 2013.|$|R
