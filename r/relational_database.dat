7923|3660|Public
5|$|Python {{can serve}} as a {{scripting}} language for web applications, e.g., via mod_wsgi for the Apache web server. With Web Server Gateway Interface, a standard API has evolved to facilitate these applications. Web frameworks like Django, Pylons, Pyramid, TurboGears, web2py, Tornado, Flask, Bottle and Zope support developers in the design and maintenance of complex applications. Pyjs and IronPython can be used to develop the client-side of Ajax-based applications. SQLAlchemy can be used as data mapper to a <b>relational</b> <b>database.</b> Twisted is a framework to program communications between computers, and is used (for example) by Dropbox.|$|E
5|$|PHP is a {{general-purpose}} {{scripting language}} that is especially suited to server-side web development, in which case PHP generally runs on a web server. Any PHP code in a requested file is executed by the PHP runtime, usually to create dynamic web page content or dynamic images used on websites or elsewhere. It {{can also be used}} for command-line scripting and client-side graphical user interface (GUI) applications. PHP can be deployed on most web servers, many operating systems and platforms, and can be used with many <b>relational</b> <b>database</b> management systems (RDBMS). Most web hosting providers support PHP for use by their clients. It is available free of charge, and the PHP Group provides the complete source code for users to build, customize and extend for their own use.|$|E
5|$|Improved {{reliability}} for on-disk structures: ReFS uses B+ trees for all on-disk structures including metadata and file data. Metadata and file data are organized into tables {{similar to a}} <b>relational</b> <b>database.</b> The file size, number of files in a folder, total volume size and number of folders in a volume are limited by 64-bit numbers; as a result ReFS supports a maximum file size of 16 exabytes, a maximum of 18.4 × 1018 folders and a maximum volume size of 1 yottabyte (with 64 KB clusters) which allows large scalability with no practical limits on file and folder size (hardware restrictions still apply). Free space is counted by a hierarchical allocator which includes three separate tables for large, medium, and small chunks. File names and file paths are each limited to a 32 KB Unicode text string.|$|E
40|$|Graph {{analytics}} {{is getting}} increasingly popular {{these days and}} there is a deluge of new systems for graph analytics. However, {{it is not clear how}} good or bad are the <b>relational</b> <b>databases</b> for graph analytics. In this talk, I will share our experiences with graph analytics on <b>relational</b> <b>databases.</b> Contrary to the popular belief, modern <b>relational</b> <b>databases</b> can have very good performance over graph analytics. Furthermore, we can offer better (and efficient) programming interfaces for expressing graph queries in <b>relational</b> <b>databases,</b> thereby not forcing the users to SQL. 1...|$|R
40|$|Abstract—Relational {{databases}} {{are often}} used {{as a basis for}} persistent storage of ontologies to facilitate rapid operations such as search and retrieval, and to utilize the benefits of <b>relational</b> <b>databases</b> management systems such as transaction management, security and integrity control. On the other hand, there appear more and more OWL files that contain ontologies. Therefore, this paper proposes to extract ontologies from OWL files and then store them in <b>relational</b> <b>databases.</b> A prerequisite for this storing is transformation of ontologies to <b>relational</b> <b>databases,</b> which is the purpose of this paper. Keywords—Ontologies, <b>relational</b> <b>databases,</b> SQL, and OWL. I...|$|R
40|$|In {{this paper}} we briefly {{describe}} a practicable approach to extend <b>relational</b> <b>databases</b> to deductive databases {{by using a}} two-level-knowledge-representation mechanism. By this approach, we developed a deductive database add-in module {{that can be easily}} integrated with <b>relational</b> <b>databases.</b> Therefore, users can get deductive reasoning functionality without changing their favorite <b>relational</b> <b>databases</b> and query languages. This approach proved to be efJicient on knowledge-base organization and reasoning in real world applications. 1...|$|R
5|$|Meanwhile, Microsoft began {{introducing}} {{its most}} prominent office products. Microsoft Works, an integrated office program which combined features typically {{found in a}} word processor, spreadsheet, database and other office applications, saw its first release as an application for the Apple Macintosh {{towards the end of}} 1986. Microsoft Works would later be sold with other Microsoft products including Microsoft Word and Microsoft Bookshelf, a reference collection introduced in 1987 that was the company's first CD-ROM product. Later, on August 8, 1989, Microsoft introduced its most successful office product, Microsoft Office. Unlike the model of Microsoft Works, Microsoft Office was a bundle of separate office productivity applications, such as Microsoft Word, Microsoft Excel and so forth. While Microsoft Word and Microsoft Office were mostly developed internally, Microsoft also continued its trend of rebranding products from other companies, such as Microsoft SQL Server on January 13, 1988, a <b>relational</b> <b>database</b> management system for companies that was based on technology licensed from Sybase.|$|E
25|$|Content served {{from the}} server's {{filesystem}} {{instead of a}} <b>relational</b> <b>database</b> management system (RDBMS).|$|E
25|$|Smaller on-disk size of data {{compared}} to data stored in <b>relational</b> <b>database</b> due to compression techniques.|$|E
40|$|D 2 RQ is {{a popular}} RDB-to-RDF mapping {{platform}} that supports mapping <b>relational</b> <b>databases</b> to RDF and posing SPARQL queries to these <b>relational</b> <b>databases.</b> However, D 2 RQ merely provides a read-only RDF view on <b>relational</b> <b>databases.</b> Thus, we introduce D 2 RQ/Update—an extension of D 2 RQ to enable executing SPARQL/Update statements on the mapped data, and to facilitate {{the creation of a}} read-write Semantic Web. Categories and Subject Descriptor...|$|R
50|$|The {{flexibility}} of <b>relational</b> <b>databases</b> allows programmers to write queries {{that were not}} anticipated by the database designers. As a result, <b>relational</b> <b>databases</b> {{can be used by}} multiple applications in ways the original designers did not foresee, which is especially important for databases that might be used for a long time (perhaps several decades). This has made the idea and implementation of <b>relational</b> <b>databases</b> very popular with businesses.|$|R
30|$|Apache Sqoop is {{the second}} most used tool for data ingestion. It is used in 8 out of 38 {{pipelines}} (21.0 %). Apache Sqoop is used to integrate Hadoop directly with existing <b>relational</b> <b>databases</b> and manufacturing operations management systems (e.g., ERP, MES) that commonly depend on <b>relational</b> <b>databases.</b> Since, Apache Sqoop is a big data tool for the transfer of data between <b>relational</b> <b>databases</b> and Hadoop, explaining this trend is straight forward.|$|R
25|$|In 1990, the AS/400 {{announced}} {{support for}} Distributed <b>Relational</b> <b>Database</b> Architecture, {{which is based}} on DDM.|$|E
25|$|With {{the model}} {{typically}} {{held in a}} <b>relational</b> <b>database,</b> the remaining components of the MVC architecture are the control and view.|$|E
25|$|In 1996, {{the company}} renamed itself to Pervasive Software, and their product to Pervasive.SQL. In 1997, {{the company went}} public. They did this {{in order to allow}} greater {{penetration}} of the <b>relational</b> <b>database</b> market and to re-align as an SQL vendor, though they are still marketing and developing Btrieve. Pervasive completed its IPO in September. The company continued using the MKDE in version 6.30. In 1997, Pervasive released ScalableSQL 4.0, a <b>relational</b> <b>database</b> product, and Btrieve 7.0.|$|E
40|$|Now a {{days the}} keyword search is a {{mechanism}} used by all type of organizations. In <b>relational</b> <b>databases</b> the keyword search {{is used to}} find the tuples by giving queries. But most of the methods that contain low performance and more storage space for storing the results. So we must find the efficient method for keyword search in <b>relational</b> <b>databases.</b> So we go for the comparative study for the keyword search in <b>relational</b> <b>databases...</b>|$|R
40|$|One of {{the biggest}} {{problems}} that object-oriented developers face today is having to integrate at the enterprise level, object-oriented applications with widely applied and quality active <b>relational</b> <b>databases.</b> This paper focuses on the issues of mapping object dynamic behavior into active <b>relational</b> <b>databases.</b> We present a technique for expanding active <b>relational</b> <b>databases</b> with object-oriented behavior semantics, extracted from state transition diagrams expressing object life-cycles. We consider states as first class objects, and discuss state class and event inheritance. 1...|$|R
40|$|We {{develop an}} {{efficient}} algorithm for the query interoperation among existing heterogeneous object-oriented and <b>relational</b> <b>databases.</b> Our algorithm utilizes a canonical deductive database as a uniform representation of object schema and data. High-order object queries are transformed to the canonical deductive database {{in which they}} are partially evaluated and optimized, before being translated to relational queries. Our algorithm can be incorporated into object-oriented interfaces to <b>relational</b> <b>databases</b> or object-oriented federated databases to support object queries to heterogeneous <b>relational</b> <b>databases...</b>|$|R
25|$|The {{data are}} stored in a {{standard}} <b>relational</b> <b>database</b> and can be accessed by any SQL reporting tool (the tool {{does not have to}} be an OLAP tool).|$|E
25|$|MOLAP (multi-dimensional online {{analytical}} processing) is {{the classic}} form of OLAP and is {{sometimes referred to as}} just OLAP. MOLAP stores this data in an optimized multi-dimensional array storage, rather than in a <b>relational</b> <b>database.</b>|$|E
25|$|The IBM System i {{platform}} {{extended the}} System/38 architecture of an object-based system with an integrated DB2 <b>relational</b> <b>database.</b> Equally important are the virtual machine and single-level storage concepts which established the platform as an advanced business computer.|$|E
40|$|The {{normalization}} of <b>relational</b> <b>databases</b> {{is a topic}} of ongoing interest. We present a graphical normalization algorithm for <b>relational</b> <b>databases</b> that is lossless, functional-dependency preserving, and able to normalize relations with multiple candidate keys. Applications of this algorithm and future research directions are discussed...|$|R
40|$|Based on {{the elegant}} theory of <b>relational</b> <b>databases,</b> the present {{investigation}} establishes a unified model for both <b>relational</b> <b>databases</b> and Bayesian networks. This is in contradiction to the argument that <b>relational</b> <b>databases</b> and Bayesian networks are different, where it was shown that the implication problem does not coincide for embedded multivalued dependency (EMVD) and probabilistic conditional independence (CI). The main result of this thesis, however, is that the implication problem coincides on the solvable subclasses of EMVD and CI, but differs on the unsolvable general classes of EMVD and CI. This {{means that there is}} no practical difference between <b>relational</b> <b>databases</b> and Bayesian networks, since only the solvable subclasses are useful in the design of both of these knowledge systems...|$|R
50|$|Staging {{areas can}} be {{implemented}} {{in the form of}} tables in <b>relational</b> <b>databases,</b> text-based flat files (or XML files) stored in file systems or proprietary formatted binary files stored in file systems. Staging area architectures range in complexity from a set of simple relational tables in a target database to self-contained database instances or file systems. Though the source systems and target systems supported by ETL processes are often <b>relational</b> <b>databases,</b> the staging areas that sit between data sources and targets need not also be <b>relational</b> <b>databases.</b>|$|R
25|$|Over 2,300 {{species from}} the Fish Collection are {{included}} in FishBase, a global fish <b>relational</b> <b>database</b> supported by a research consortium that includes the UBC Fisheries Centre. The museum's collection {{was the first to}} be indexed by FishBase.|$|E
25|$|The cube {{metadata}} {{is typically}} created from a star schema or snowflake schema or fact constellation of tables in a <b>relational</b> <b>database.</b> Measures {{are derived from}} the records in the fact table and dimensions are derived from the dimension tables.|$|E
25|$|Crystallographic {{data are}} {{primarily}} extracted from published scientific articles and supplementary material. Newer versions of crystallographic databases {{are built on}} the <b>relational</b> <b>database</b> model, which enables efficient cross-referencing of tables. Cross-referencing serves to derive additional data or enhance the search capacity of the database.|$|E
50|$|<b>Relational</b> <b>Databases</b> {{organize}} {{environmental and}} economic information.|$|R
5000|$|Software {{independent}} archival of <b>relational</b> <b>databases</b> (SIARD) ...|$|R
5000|$|Integration with databases, {{including}} XML and <b>relational</b> <b>databases.</b>|$|R
25|$|Chakra Max is a {{data-centric}} audit {{and protection}} (DCAP) firewall for <b>relational</b> <b>database</b> activity monitoring, auditing and protection (DAM/DAP). Chakra Max uses defined policies to monitor, block, and control login access and SQL activity, perform dynamic data masking, and create secure, granular, query- and report-ready audit logs.|$|E
25|$|Crystallographic {{databases}} {{differ in}} access and usage rights and offer {{varying degrees of}} search and analysis capacity. Many provide structure visualization capabilities. They can be browser based or installed locally. Newer versions are built on the <b>relational</b> <b>database</b> model and support the Crystallographic Information File (CIF) as a universal data exchange format.|$|E
25|$|Microsoft SQL Server is a <b>relational</b> <b>database</b> {{management}} system developed by Microsoft. As a database server, it is a software product {{with the primary}} function of storing and retrieving data as requested by other software applications—which may run either on the same computer or on another computer across a network (including the Internet).|$|E
5000|$|... 1991. Dependencies in <b>relational</b> <b>databases.</b> {{published}} by Teubner.|$|R
5000|$|VOAI OAI-PMH {{metadata}} server generator for <b>relational</b> <b>databases</b> ...|$|R
40|$|One of {{the main}} {{drawbacks}} of the Semantic Web {{is the lack of}} semantically rich data, since most of the information is still stored in <b>relational</b> <b>databases.</b> We present RDQuery, a wrapper system which enables Semantic Web applications to access and query data actually stored in <b>relational</b> <b>databases</b> using their own built-in functionality. RDQuery automatically translates SPARQL and RDQL queries into SQL. The translation process is based on the Relational. OWL representation of <b>relational</b> <b>databases</b> and does not depend on the local schema or the underlying database management system. 1...|$|R
