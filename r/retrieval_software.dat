118|159|Public
50|$|Concept Searching Limited is a {{software}} company {{which specializes in}} information <b>retrieval</b> <b>software.</b> It has products for Enterprise search, Taxonomy Management and Statistical classification.|$|E
50|$|A {{search engine}} is an {{information}} <b>retrieval</b> <b>software</b> program that discovers, crawls, transforms and stores information for retrieval and presentation {{in response to}} user queries.|$|E
5000|$|... Simple web-based {{document}} deposit - Secure Email document deposit - Permanent file preservation - Secure, disaster-proof storage technology - Easy-to-use document <b>retrieval</b> <b>software</b> - Manual {{and automatic}} secure document sharing ...|$|E
40|$|Software {{component}} reuse {{is the use}} {{of existing}} software components to build a new software system. Effective storage and <b>retrieval</b> of <b>software</b> components is much essential in software components reuse process. The researchers have developed a number of software components reuse techniques for storage and <b>retrieval</b> of <b>software</b> components. No one technique is complete in its own; every technique has its own merits and demerits. This paper presents a meta-data model and faceted classification for storage and <b>retrieval</b> of <b>software</b> components that considers domain semantic information based on ontologies and texonomies. In contrast to most existing repositories, which only retrieve a limited set of components, the proposed meta-data model makes possible the recommendation of interrelated components, as ontolog...|$|R
40|$|Abstract-Software reuse {{is the use}} of {{existing}} software components to build a software system. Effective storage and <b>retrieval</b> of <b>software</b> components is much essential in reuse process. The researchers have developed a number of software reuse techniques for storage and retrieval of components. No one technique is complete in its own; every technique has its own merits and demerits. This paper presents a new approach for building software reuse library based on keyword searching for storage and fast <b>retrieval</b> of <b>software</b> components. Keywords are matched with given query, character by character so that a fraction of match can also be given due weightage. To make this paper beneficial to new researchers, algorithms are explained in detail. I...|$|R
40|$|This paper {{introduces}} {{an approach}} for <b>software</b> <b>retrieval</b> based on partial natural language analysis of both queries {{and descriptions of}} <b>software</b> components. <b>Retrieval</b> is accomplished by matching the semantic structures associated to both the query and the natural language descriptions of software components in a knowledge base. Semantic structures are automatically created by identification of thematic roles in the user input {{through the application of}} syntactic techniques and some heuristics. A courseware development environment {{to be used in the}} evaluation of the retrieval system is also introduced. Related work in the area of reuse systems and on the application of natural language processing techniques in information retrieval systems is discussed. 1 Introduction Most approaches to <b>software</b> <b>retrieval</b> propose the <b>retrieval</b> of <b>software</b> components through a set of keywords provided by a user, using either a controlled or free vocabulary [21][20]. These systems seem to be inef [...] ...|$|R
50|$|GLIMPSE is a text {{indexing}} and <b>retrieval</b> <b>software</b> program {{originally developed}} at the University of Arizona by Udi Manber, Sun Wu, and Burra Gopal. It was released under the ISC license in September 2014.|$|E
50|$|Apache Lucene is a {{free and}} {{open-source}} information <b>retrieval</b> <b>software</b> library, originally written completely in Java by Doug Cutting. It {{is supported by the}} Apache Software Foundation and is released under the Apache Software License.|$|E
5000|$|... dtSearch Corp. is a {{software}} company {{which specializes in}} text <b>retrieval</b> <b>software.</b> It was founded in 1991, and is headquartered in Bethesda, Maryland. Its current range of software includes products for enterprise desktop search, Intranet/Internet spidering and search, and search engines for developers (SDK) to integrate into other software applications.|$|E
40|$|First {{comprehensive}} {{treatment of}} the topic, bringing together results from multiple research areas including information <b>retrieval,</b> programming, <b>software</b> tools, software reuse, testing, and social aspects Presents essential reading for researchers new to the area Includes contributions from leading companies and experts in data structure, software engineering, and HC...|$|R
40|$|A {{major problem}} {{concerning}} the reusability of <b>software</b> is the <b>retrieval</b> of <b>software</b> components. Different approaches have been followed {{to solve this}} problem. In this paper we present the Reuse Assistant, a hybrid approach to support the <b>retrieval</b> of <b>software</b> components from a library of object classes. The Reuse Assistant consists of two subsystems that follow two different approaches: information retrieval techniques based on statistical methods, and knowledge-based techniques {{using some of the}} representation and indexing mechanisms found in case-based systems. The Information Retrieval approach grants system extendibility, and permits the use of a natural language interface. The Case-Based approach enables reasoning about concepts, allowing the retrieval of "approximate" components. Both subsystems can be operated from a common interface, where free-text and form-filling queries can be posed. 1. Introduction Software reuse is widely believed {{to be one of the}} most promising [...] ...|$|R
40|$|To {{alleviate}} this problem, {{one needs}} better information 1 <b>retrieval</b> (IR) <b>software</b> {{to serve as}} a lter between the user and the information retrieved over the Web. Such a software should provide intelligent search, which pro-vides the user with more interesting Web pages and fewer Partly supported by Grant NSC 87 - 2213 -E- 002 - 012 of the Na...|$|R
50|$|Gutenmaher {{was one of}} the {{earliest}} computer scientists in the Soviet Union. He pioneered the usage of computers to model cognitive and linguistic processes. His research papers covered such topics as data storage and <b>retrieval,</b> <b>software</b> development, and computerized telephony. A number of his works were translated into English, German, French, and Spanish.|$|E
50|$|NooJ {{has been}} used as a corpus {{processor}} by researchers in Linguistics, History, in Psychology, in Literature studies, in sentiment analysis projects, data mining, and even for processing musical notes. For instance NooJ was used in the MARS 500 experiment but also by several computer software companies to build Information Extraction and Information <b>Retrieval</b> <b>software.</b>|$|E
50|$|The Lemur Project is a {{collaboration}} between the Center for Intelligent Information Retrieval at the University of Massachusetts Amherst and the Language Technologies Institute at Carnegie Mellon University. It develops the Lemur Toolkit, an open-source (BSD license) software framework for building language modeling and information <b>retrieval</b> <b>software,</b> and the Indri search engine. This toolkit is used for developing search engines, text analysis tools, browser toolbars, and data resources {{in the area of}} IR.|$|E
40|$|Software reusability, the {{construction}} of systems by the usage of knowledge or artifacts associated with existing systems, has been of significant importance to both engineers and managers. As the reusable software components are growing, {{we are faced with}} the dilemma of storing these components so as to allow easy retrieval for reuse. Many multifaceted approaches to automatic <b>retrieval</b> of reusable <b>software</b> components have been devised and implemented. Unfortunately they all fail to place any emphasis on the structuring of the software repository so as to provide for easy retrieval. In this thesis we investigate the problem of structuring the large and evolving software component repository to provide an effective way to store and ultimately locate/retrieve reusable software components, as an aid in the first two phases of reuse-oriented program development. The components structuring was done based on the polymorphic and extra-argument relations among components. Added to the <b>retrieval</b> of <b>software</b> components formed of an exact match between query type and library types, these relations can lead to the <b>retrieval</b> of <b>software</b> components whose types are more general, specific or contains more argument than the queried type. A prototype system was designed and developed. Applications of the system were described for functional programming. Paper copy at Leddy Library: Theses 2 Ì† 6 Major Papers - Basement, West Bldg. / Call Number: Thesis 1994. R 35. Source: Masters Abstracts International, Volume: 34 - 02, page: 0793. Adviser: Young Gil Park. Thesis (M. Sc.) [...] University of Windsor (Canada), 1995...|$|R
40|$|The {{difficulty}} of maintaining very large software systems {{is becoming more}} widely acknowledged. One of the primary problems {{is the need to}} access information about a complex and evolving system. We are exploring the contribution to be made by applying explicit knowledge representation and reasoning to the management of information about large systems. LaSSIE is a prototype tool (based on the ARGON system) that uses a frame-based description language and classification inferences to facilitate a programmer's discovery of the structure of a complex system. It also supports the <b>retrieval</b> of <b>software</b> for possible reuse in a new development task. Among LaSSIE's features are an integrated natural language frontend (TELI) that allows users to express requests in an informal and compact fashion. Although not without some limitations, LaSSIE represents significant progress over existing <b>software</b> <b>retrieval</b> methods and strictly bottom-up cross-referencing facilities. ...|$|R
40|$|The first {{topic is}} an {{exploration}} of the use of neural network techniques to improve the effectiveness of <b>retrieval</b> in <b>software</b> repositories. The second topic relates to a series of experiments conducted to evaluate the feasibility of using adaptive neural networks as a means of deriving (or more specifically, learning) measures on software. Taken together, these two efforts illuminate a very promising mechanism supporting software infrastructures - one based upon a flexible and responsive technology...|$|R
50|$|Isearch is {{open-source}} text <b>retrieval</b> <b>software</b> {{first developed}} in 1994 by Nassib Nassar {{as part of}} the Isite Z39.50 information framework. The project started at the Clearinghouse for Networked Information Discovery and Retrieval (CNIDR) of the North Carolina supercomputing center MCNC and funded by the National Science Foundation to follow in the track of WAIS and develop prototype systems for distributed information networks encompassing Internet applications, library catalogs and other information resources.|$|E
5000|$|As a {{computer}} scientist, Nassar {{was among the}} architects of information <b>retrieval</b> <b>software</b> for the World Wide Web and was the creator of Isearch, {{one of the earliest}} open source search engines, in 1994. [...] He was president of Etymon Systems, an open source software company founded in 1998 and best known for producing Etymon PJ, which became the standard library for generating Portable Document Format (PDF) documents in Java, and Amberfish, a large scale information retrieval system for semi-structured text and XML.|$|E
50|$|New {{sites are}} {{admitted}} into the network when site investigators demonstrate required hardware, and data processing ability. Uniformity is maintained across the network {{by using the}} same FTS model and the same <b>retrieval</b> <b>software.</b> GGG is the software of the TCCON. It includes the I2S (interferogram to spectrum) FFT, and GFIT spectral fitting subroutines. GFIT is also the fitting algorithm that was used for ATMOS which flew on the Space Shuttle, and is used for spectral fitting of spectra obtained by a balloon borne spectrometer.|$|E
50|$|Norvig {{has been}} an {{assistant}} professor at the University of Southern California and a research faculty member at Berkeley. He has over fifty publications in various areas of computer science, concentrating on artificial intelligence, natural language processing, information <b>retrieval</b> and <b>software</b> engineering, including the books Artificial Intelligence: A Modern Approach, Paradigms of AI Programming: Case Studies in Common Lisp, Verbmobil: A Translation System for Face-to-Face Dialog, and Intelligent Help Systems for UNIX.|$|R
40|$|In this {{position}} paper, we introduce four measures of functional distance between specifications, and show how these measures {{can be used}} to perform semantic-based approximate <b>retrieval</b> of <b>software</b> components. 1 Approximate <b>Retrievals</b> Given a <b>software</b> library (that contains reusable software components), and given a user query (that represents requirements which we wish to satisfy with a library component), we can define two kinds of retrieval algorithms: exact retrieval algorithms, which seek to identify components in the library that satisfy the user query; and approximate retrieval algorithms, which are applied whenever exact retrieval fails, to retrieve components that come closest (in some sense) to satisfying the user query. Given a measure of semantic distance, we can define a criterion of approximate retrieval as: identify the library components that minimize the measure of distance to the user query. In {{this position}} paper, we consider four measures of semantic (functional) [...] ...|$|R
5000|$|... 1996: Cincom acquires {{the print}} {{division}} of Andersen Consulting in Lyon, France (1996); ObjectStudio's German operations from VMark (1996); ChemData, a workstation storage and <b>retrieval</b> document management <b>software</b> company in Lyon, France (1997); and the VisualWorks product line from ObjectShare (1999).|$|R
5000|$|... dtSearch Corp {{was founded}} by David Thede; the company started {{research}} and development in text retrieval in 1988 and incorporated in Virginia in 1991 as D T Software. Marketing of dtSearch 1.0 a DOS Text <b>Retrieval</b> <b>software</b> product began {{in the first quarter}} of 1991. Initially it was distributed as Association of Shareware Professionals-approved shareware. The product was featured in an article entitled [...] "Text Retrieval Software" [...] in an early edition of PC Magazine as a shareware alternative to the commercial products reviewed; these included ISYS, ZyIndex, Strix, askSam, ideaList, Assassin PC, Folio Views and Lotus SmartText.|$|E
50|$|Friling {{began his}} {{academic}} career at Ben-Gurion University in 1977 as an instructor and research assistant, {{and has been}} teaching at the university ever since. During 1983-1991 he was {{a researcher at the}} Ben-Gurion Research Center as well {{as the director of the}} Ben-Gurion Archives. During 1993-2001 he served as director of the Ben-Gurion Heritage Institute and the Ben-Gurion Research Center in the University's Sde Boqer Campus. He initiated and in cooperation with the University's Computation center, established the digitalized Ben-Gurion Archive - a world class computerized archive and database that provides online access using full text <b>retrieval</b> <b>software.</b> For his accomplishments as the head of the Ben-Gurion institutes he was awarded the Prime Minister's Prize.|$|E
40|$|Who {{decides to}} improve the {{information}} <b>retrieval</b> <b>software</b> for on-line bibliographic or full-text database searching? On what basis do the organizations that make these databases available decide? Are they familiar with known and relatively easy ways to improve retrieval (i. e., of program enhancements that allow for the present kinds of querying without requiring new data structures) ? Do they study possible changes in <b>retrieval</b> <b>software</b> in depth or do they just pick some and try them? How important are financial considerations in their decisions to innovate or to wait? These questions are answered {{on the basis of}} a telephone survey of 37 on-line vendors...|$|E
40|$|International audienceProjects such as FLOSSmole and FLOSSMetrics are {{compiling}} huge {{quantities of}} data about libre (free, open source) software development. The availability {{of these data}} in formats suitable for analysis by third parties are enabling researchers {{to focus on the}} study of the data, and not on data retrieval activities. This is fortunate, since data <b>retrieval</b> from <b>software</b> development repositories {{is becoming more and more}} complex, especially when reliable and detailed information from many projects is needed...|$|R
40|$|Abstract Music Information <b>Retrieval</b> (MIR) <b>software</b> {{is often}} {{applied for the}} {{identification}} of rules classifying audio music pieces into certain categories, like e. g. genres. In this paper we compare the abilities of six MIR software packages in ten categories, namely operating systems, user interface, music data input, feature generation, feature formats, transformations and features, data analysis methods, visualization methods, evaluation methods, and further development. The overall rankings are derived from the estimated scores for the analyzed criteria. ...|$|R
50|$|In December 1976, the First BRS User Meeting {{was held}} in Syracuse, N.Y. and by January 1977 BRS started {{commercial}} operations with 20 databases (including the first national commercial availability of MEDLINE) and 9 million records, using modified IBM STAIRS (STorage And Information <b>Retrieval</b> System) <b>software,</b> Telenet for telecommunications, and timesharing mainframe computers of Carrier Corporation. In October 1980 BRS was sold by Egeland and Quake to Indian Head, Inc., {{a subsidiary of the}} Dutch company Thyssen-Bornemisza Corporation.|$|R
40|$|Adaptive MGS Phase <b>Retrieval</b> <b>software</b> {{uses the}} Modified Gerchberg-Saxton (MGS) algorithm, an {{image-based}} sensing method {{that can turn}} any focal plane science instrument into a wavefront sensor, avoiding the need to use external metrology equipment. Knowledge of the wavefront enables intelligent control of active optical systems...|$|E
40|$|This paper {{presents}} the integration in an image <b>retrieval</b> <b>software</b> of object modeling algorithms {{developed by the}} authors. The algorithms {{have been designed to}} model 3 D objects from single 2 D image. They are based on results obtained in cognitive psychology. The purpose of the integration is twofold. First, it allows the assessment of the performance of our algorithms in a concrete application. Secondly, it allows us to reflect on how image retrieval application could benefit from object modeling algorithms. We show, that although not perfect, our algorithms are bases that could lead to the retrieval of images based on the identity of the objects they feature, while abstracting colors and textures when these are not important in a query. The implemented image <b>retrieval</b> <b>software</b> is named PLASTIQUE. The algorithms used in PLASTIQUE are first overviewed, and then performance assessment experiments are presented and discussed. 1...|$|E
40|$|This paper {{presents}} FEAPI, an easy-to-use platform-independent plugin {{application programming interface}} (API) for {{the extraction}} of low level features from audio in PCM format {{in the context of}} music information <b>retrieval</b> <b>software.</b> The need for and advantages of using an open and well-defined plugin interface are outlined in this paper and an overview of the API itself and its usage is given. 1...|$|E
40|$|Software Reuse {{effectiveness}} can {{be improved}} by reducing cost and investment. Software reuse costs can be reduced when reusable components are easy to locate, adapt and integrate into new efficient applications. Reuse is the key paradigm for increasing software quality in the software development. This paper focuses on the implementation of software tool with a new integrated classification scheme to make classification build of software components and effective software reuse repositories to facilitate <b>retrieval</b> of <b>software</b> components depending upon user requirements...|$|R
40|$|Two {{tasks that}} entail {{a certain degree}} of {{difficulty}} when dealing with computers are retrieving and installing new software. So, the need arises to provide users with tools that help them retrieve the necessary software and install it. In the context of mobile computers those tasks acquire a special relevance due to their limited resources (memory, disk space, autonomy, etc.). In this paper we present a <b>software</b> <b>retrieval</b> service that provides mobile computer users with mechanisms to select and retrieve the selected software in an easy and efficient way. Although this service can be used for fixed computers it puts special emphasis on optimizing the use of battery and wireless communications. The implementation of that <b>software</b> <b>retrieval</b> service is based on agent technology. 1...|$|R
40|$|An {{automated}} {{fatigue and}} fracture laboratory was recently {{set up at}} the National Aeronautical Laboratory. Six servohydraulic load frames are connected to a single multi-user, time-sharing computer system, through dedicated microprocessor-based interfaces. The host computer system includes resources for post processing of test data, output of test results and their storage and <b>retrieval.</b> Application <b>software</b> was developed for automated crack growth testing {{under a variety of}} constant- amplitude and spectrum load test conditions including K-control and on-line fatigue cycle analysis. Automated crack length measurement is through unloading compliance. (Author...|$|R
