576|0|Public
5000|$|... {{maximising}} the <b>re-usability</b> of eGovernment {{developments and}} services; ...|$|E
5000|$|Specification, Execution and <b>Re-Usability</b> {{of tasks}} by {{end-users}} ...|$|E
5000|$|... <b>re-usability</b> (all {{applications}} {{benefit from}} a single centralized data integrity system) ...|$|E
50|$|Immobilized enzymes {{demonstrate}} {{very high}} stability and <b>re-usability</b> {{and can be}} used to conduct reactions in continuous mode in microreactors.|$|E
50|$|On June 14, 2013 rapid <b>re-usability</b> was {{demonstrated}} by having two flights {{using the same}} lander on the same day.|$|E
5000|$|Modular approach, encapsulation/hiding of {{business}} logic, security, performance improvement, <b>re-usability.</b> They support object-oriented programming features like function overloading and encapsulation.|$|E
50|$|The {{goal of the}} {{dependency}} inversion pattern is to avoid this highly coupled distribution with the mediation of an abstract layer, and to increase the <b>re-usability</b> of higher/policy layers.|$|E
50|$|Researchers manage {{scholarly}} writing projects within version-controlled file repositories called containers {{that function}} similarly to git repositories and docker containers to provide enhanced reproducibility, transparency and <b>re-usability</b> in digital science publishing.|$|E
5000|$|Efficiency - The <b>re-usability</b> of the {{redistribution}} {{allow for}} the very fast simulation of different structure combinations, sheet thickness variations and the optical analysis with respect to different angles of incidence.|$|E
50|$|Foundation for Open Project Documentation gives {{a project}} a greater {{understandability}} and <b>re-usability</b> potential, than Open Source foundation. It is loosely connected with Free Software Foundation. OpenDoc project {{can also be}} commercial.|$|E
50|$|This {{part of the}} {{programme}} was a {{feasibility study}} researching the possibilities of a Core Avionics Architecture Concept. It defined the main objectives of: Inter-changeability, <b>Re-usability,</b> Portability, Technology Transparency, Fault Tolerance, Extendability sic, Maintainability, etc.|$|E
50|$|A {{repository}} and registry providing visibility to European OSS {{projects and}} initiatives in public administrations, allowing users to upload and download, search and retrieve software and documentation. It facilitates mutual access to existing projects through a dedicated taxonomy and therefore creates {{more opportunities to}} develop exchanges, <b>re-usability</b> and community building across borders.|$|E
50|$|The {{inversion}} of the dependencies and ownership encourages the <b>re-usability</b> of the higher/policy layers. Upper layers could use other implementations {{of the lower}} services. When the lower-level layer components are closed or when the application requires the reuse of existing services, it is common that an Adapter mediates between the services and the abstractions.|$|E
50|$|DDM uses a {{building}} block approach, all the columns {{of a table}} are based on generic data types which are mapped to SQL types of the underlying database, this offers a high grade of <b>re-usability</b> and flexibility when designing a database, and also will make easier the future mapping of Data types to more common programming language types.|$|E
50|$|On 22 January 2016, Blue Origin {{successfully}} {{repeated the}} flight {{profile of the}} 23 November 2015 launch with the same New Shepard vehicle. New Shepard launched, reached a maximum altitude of 101.7 km, and, after separation, both capsule and launch vehicle returned to the ground intact. This accomplishment demonstrated <b>re-usability</b> of New Shepard and a turnaround time of 61 days.|$|E
50|$|LACER-LACEA digital {{repository}} is {{a network}} that provides access to other repositories containing books, reports, journals, working papers and databases on Latin American economic and related topics, produced for public use by international organizations and academic institutions. The LACER-LACEA digital repository supports optimal discoverability and <b>re-usability</b> of the content by complying with Dublin Core and the Open Archives Initiative Protocol for Metadata Harvesting.|$|E
50|$|Another recent {{problem in}} {{production}} is the rapid {{increase of the}} product demand at the initial stage of the product release. The manufactures will lose the chance of possible profit if they cannot meet the demand. To cope with the problem, manufacturing industry is trying to achieve the vertical upstart of the production, and high <b>re-usability</b> of both hardware and software is the key for the goal.|$|E
50|$|Xfce aims to be {{fast and}} lightweight, while still being {{visually}} appealing {{and easy to}} use. Xfce embodies the traditional UNIX philosophy of modularity and <b>re-usability.</b> It consists of separately packaged parts that together provide all functions of the desktop environment, but can be selected in subsets to suit user needs and preference. Another priority of Xfce is adherence to standards, specifically those defined at freedesktop.org.|$|E
50|$|A cargo-only, {{unmanned}} {{variant of}} the Shuttle was variously proposed and rejected since the 1980s. It was called the Shuttle-C, and would have traded <b>re-usability</b> for cargo capability, with large potential savings from reusing technology developed for the Space Shuttle. Another proposal was to convert the payload bay into a passenger area, with versions ranging from 30 to 74 seats, three days in orbit, and cost US$1.5 million per seat.|$|E
50|$|Even in {{comparison}} with other materials, the ZIFs most attractive quality is still its hydrophobic properties. When compared to ZIFs in dry conditions, activated carbon was nearly identical with its uptake capacity. However, once the conditions were changed to wet, the activated carbon’s uptake was halved. When this saturation and regeneration tests were run at these conditions, ZIFs also showed minimal to no structural degradation, a good indication of the adsorbent’s <b>re-usability.</b>|$|E
50|$|O3D {{is viewed}} as {{bridging}} the gap between desktop based 3D accelerated graphics applications and HTML based web browsers. Proponents assert that creating a full featured 3D graphics engine that can be downloaded and run through web browsers, may eliminate the need to install large applications on a local desktop computer. This allows O3D to maximize <b>re-usability</b> amongst application resources, while providing a robust interface to the client's CPU and GPU using JavaScript.|$|E
50|$|Although {{information}} hiding {{is considered a}} healthy practice, however, too much of {{information hiding}} could be counter productive as it can limit the <b>re-usability</b> level of the service. This can also result in redundant services as service designers don’t have enough information about {{the capabilities of the}} service. For this, each service contract needs to be designed in a concise yet comprehensive manner so that the service’s capabilities can be effectively discovered and interpreted as dictated by the service discoverability principle.|$|E
50|$|Adoption of a {{comprehensive}} enterprise interfacing to message-based integration begins with a decision on the middleware {{to be used to}} transport messages between endpoints. Often this decision results in the adoption of an enterprise service bus (ESB) or enterprise application integration (EAI) solution. Most organizations also adopt a set of standards for message structure and content (message payload). The desire for consistent message payload results in the construction of an enterprise form of XML schema built from the common model objects thus providing the desired consistency and <b>re-usability</b> while ensuring data integrity.|$|E
50|$|OPTOS (optical {{properties}} of textured optical sheets) is a simulation formalism for determining optical {{properties of}} sheets with plane-parallel structured interfaces. The method is versatile as interface structures of different optical regimes, e.g. geometrical and wave optics, can be included. It is very efficient {{due to the}} <b>re-usability</b> of the calculated light redistribution properties of the individual interfaces. It {{has so far been}} mainly used to model optical properties of solar cells and solar modules but it is also applicable for example to LEDs or OLEDs with light extraction structures.|$|E
50|$|The first project {{under the}} ‘Advance Aerial Systems Program’ was the {{development}} of a High Altitude Pseudo Satellite (HAPS) system in partnership with Airbus DS, one of the companies under the Airbus Group. With the use of highly advanced systems and materials, HAPS has demonstrated the ability to fly continuously for over two weeks, which is 10 times longer than any other Unmanned Aerial System (UAS) developed to date. The system provides a combination of the benefits of a satellite, in terms of altitude and applications, and an aircraft, in terms of <b>re-usability</b> and coverage.|$|E
50|$|Use-site {{variance}} annotations aim to give {{users of}} a class more opportunities for subtyping without requiring the designer of the class to define multiple interfaces with different variance. Instead, each time a class or interface is used in a type declaration, the programmer can indicate that only {{a subset of the}} methods will be used. In effect, each definition {{of a class}} also makes available interfaces for the covariant and contravariant parts of that class. Therefore, the designer of the class no longer needs to take variance into account, increasing <b>re-usability.</b>|$|E
50|$|As {{a result}} of the {{development}} of Zope 3 / BlueBream, there are now many independent Python packages used and developed as a part of BlueBream, and although many of these are usable outside of BlueBream, many are not. The Zope Toolkit (ZTK) project was started to clarify which packages were usable outside BlueBream, and to improve the <b>re-usability</b> of the packages. Thus the Zope Toolkit is a base for the Zope frameworks. Zope 2.12 is the first release of a web framework that builds on Zope Toolkit, and Grok and BlueBream were set to have releases based on the ZTK during 2010.|$|E
50|$|Ontology {{engineering}} or ontology {{building is}} a subfield of knowledge engineering that studies the methods and methodologies for building ontologies. In the domain of enterprise architecture, an ontology is an outline or a schema used to structure objects, their attributes and relationships in a consistent manner. As in enterprise modelling, an ontology can be composed of other ontologies. The purpose of ontologies in enterprise modelling is to formalize and establish the sharability, <b>re-usability,</b> assimilation and dissemination of information across all organizations and departments within an enterprise. Thus, an ontology enables integration of the various functions and processes which take place in an enterprise.|$|E
50|$|The {{programming}} style {{adopted by}} a software development project can help to comply with good programming practices which improve the code quality, readability, <b>re-usability,</b> and {{reduce the cost of}} development. The performed checks mainly limit themselves to the presentation and don't analyze content, and do not confirm the correctness or completeness of the program. In practice, it can be tedious to comply with all the style constraints, some of which could possibly harm the programming stages' dynamic; so, it may be useful to determine which level of check is needed for a certain type of program.|$|E
50|$|Meerut Scissors are {{particularly}} used for garment making and other domestic uses. All {{parts of the}} scissors are pre-used in some other form. For e.g. the blades are made from recycled carbon steel sourced from scrap metal salvaged out of old railway rolling stocks,automobiles etc. The handles made of alloys, plastics etc. are prepared from other wastes such as old utensils. The first such scissors were made by Asli Akhun some 360 years ago. Unlike most other scissors, these scissors can be repaired and reused many a times. An idiom popular around Meerut refers to the quality and <b>re-usability</b> of these instruments as a testimony :Dada le, potaa barpe ("bought by the grandfather, (still) used by the grandson").|$|E
5000|$|A complicating {{factor is}} that the (PACS) offerings are in a {{constant}} state of flux with respect to features and quality of service, and traditionally users will abandon one vendor and replace their product with another's every 3-5 years. This triggers the need to [...] "migrate" [...] the images and associated information to the new architecture without data loss, a non-trivial task despite the use of standard formats for image encoding. The concept of a VNA theoretically allows for greater stability (<b>re-usability</b> and less frequent migration) at the archive level, despite rapid evolution and change at the higher application-level (display and workflow). Of course, migrating from one vendor's VNA to another isn't trivial either, just hopefully less frequent.|$|E
5000|$|It was however {{clear to}} {{everyone}} that <b>re-usability</b> {{could only be}} achieved after several technical breakthroughs; {{and it would be}} up to NASA to provide those breakthroughs, at government expense. Nobody had presented this position more clearly than Ivan Bekey, the much-respected former NASA director, in his influential Congressional testimony of 11 April 2000, which helped to decide the fate of the X-33. This attitude might be summarised as 'Cutting-edge, or not at all'. Bekey argued forcefully that since the whole purpose of the X-33 program was to develop and demonstrate new technologies, building it without the ground-breaking but difficult composite hydrogen tanks [...] "makes little sense from a technical point of view." ...|$|E
50|$|The Humanities Advanced Technology and Information Institute (HATII) is a {{research}} and teaching institute at the University of Glasgow in Scotland. HATII undertakes innovative research in Information, Communication, and Technology (ICT) in the cultural heritage and arts and humanities sectors. HATII focuses on research in archival and library science and in information/knowledge management with emphasis on {{their impact on the}} growth of the creative industries. Recognised research strengths are in the areas of humanities computing, digitisation, digital curation and preservation, and archives and records management. Members of HATII, most of whom have day-to-day experience of mediating information in a variety of formats, are currently addressing issues under the broad headings of access and <b>re-usability,</b> content analysis and appraisal, evaluation and impact technologies, and preservation/curation.|$|E
5000|$|Code Re-usability: Apotomo widgets improve code <b>re-usability</b> {{by moving}} code from the view files into newly created [...] "mini-controllers" [...] for the Apotomo widgets. These [...] "mini-controllers" [...] {{can be used}} in an endless number of views in a website. For example, {{consider}} an implementation project for an E-Commerce site. Each page of the E-Commerce site would need a [...] "# of items in shopping bag" [...] widget on each page, with some dynamic elements or behaviors. Without Apotomo, a developer may need to have repeated code in all views for pages with the [...] "# of items in shopping bag" [...] widget. But, with Apotomo, the developer could simply create a ShoppingCart > Apotomo:Widget [...] "mini-controller" [...] class, and then reference the class repeatedly in endless number(s) of controller actions and views.|$|E
50|$|Top-down {{approaches}} emphasize {{planning and}} a complete understanding of the system. It is inherent that no coding can begin until a sufficient level of detail has been reached {{in the design of}} at least some part of the system. Top-down approaches are implemented by attaching the stubs in place of the module. This, however, delays testing of the ultimate functional units of a system until significant design is complete. Bottom-up emphasizes coding and early testing, which can begin as soon as the first module has been specified. This approach, however, runs the risk that modules may be coded without having a clear idea of how they link {{to other parts of the}} system, and that such linking may not be as easy as first thought. <b>Re-usability</b> of code is one of the main benefits of the bottom-up approach.|$|E
50|$|This leads {{one to the}} {{plausible}} Module, Service, or Object, of {{an interpreter}} (containing the function fromExpr). Function Decomposition arguably yields insights about <b>re-usability,</b> such as if {{during the course of}} analysis, two functions produce the same type, it is likely that a common function/cross-cutting concern resides in both. To contrast, in OOP, it is a common practice to conjecture Modules prior to considering such a decomposition. This arguably results in costly refactoring later. FD mitigates that risk to some extent. Further, arguably, what separates FD from other design methods- is that it provides a concise high-level medium of architectural discourse that is end-to-end, revealing flaws in upstream requirements and beneficially exposing more design decisions in advance. And lastly, FD is known to prioritize development. As arguably, if the FD is correct, the most re-usable and cost-determined parts of the program are identified far earlier in the development cycle.|$|E
