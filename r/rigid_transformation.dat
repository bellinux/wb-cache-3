354|451|Public
2500|$|... free polyominoes are {{distinct}} when none is a <b>rigid</b> <b>transformation</b> (translation, rotation, reflection or glide reflection) of another (pieces {{that can be}} picked up and flipped over). Translating, rotating, reflecting, or glide reflecting a free polyomino does not change its shape.|$|E
2500|$|The {{position}} of {{one component of}} a mechanical system relative to another is defined by introducing a reference frame, say M, on one that moves relative to a fixed frame, F, on the other. [...] The <b>rigid</b> <b>transformation,</b> or displacement, of M relative to F defines the relative {{position of}} the two components. [...] A displacement consists of {{the combination of a}} rotation and a translation.|$|E
2500|$|In the new {{coordinate}} system, {{the point}} P will {{appear to have}} been translated in the opposite direction. [...] For example, if the xy-system is translated a distance h to the right and a distance k upward, then P will {{appear to have been}} translated a distance h to the left and a distance k downward in the x'y-system [...] [...] A translation of axes in more than two dimensions is defined similarly. [...] A translation of axes is a <b>rigid</b> <b>transformation,</b> but not a linear map. [...] (See Affine transformation.) ...|$|E
25|$|The {{coordinates}} {{of points}} in a plane are two-dimensional vectors in R2 (two dimensional space). <b>Rigid</b> <b>transformations</b> are those that preserve the distance between any two points. The set of <b>rigid</b> <b>transformations</b> in an n-dimensional space is called the special Euclidean group on Rn, and denoted SE(n).|$|R
40|$|<b>Rigid</b> <b>transformations</b> in R^n {{are known}} to {{preserve}} the shape, and are often applied to digital images. However, digitized <b>rigid</b> <b>transformations,</b> defined as digital functions from Z^n to Z^n do not preserve shapes in general; indeed, they are almost never bijective and thus alter the topology. In {{order to understand the}} causes of such topological alterations, we first study the possible loss of voxel information and modification of voxel adjacencies induced by applications of digitized <b>rigid</b> <b>transformations</b> to 3 D digital images. We then show that even very simple structured images such as digital half-spaces may not preserve their topology under these transformations. This signifies that a simple extension of the two-dimensional solution for topology preservation cannot be made in three dimensions...|$|R
5000|$|The {{constraint}} equations for a kinematic chain are obtained using <b>rigid</b> <b>transformations</b> Z {{to characterize the}} relative movement allowed at each joint and separate <b>rigid</b> <b>transformations</b> X to define the dimensions of each link. In {{the case of a}} serial open chain, the result is a sequence of <b>rigid</b> <b>transformations</b> alternating joint and link transformations {{from the base of the}} chain to its end link, which is equated to the specified position for the end link. A chain of n links connected in series has the kinematic equations,where T is the transformation locating the end-link---notice that the chain includes a [...] "zeroth" [...] link consisting of the ground frame to which it is attached. These equations are called the forward kinematics equations of the serial chain.|$|R
2500|$|In mathematics, a {{rotation}} of axes in two dimensions is a mapping from an xy-Cartesian coordinate system to an x'y-Cartesian coordinate {{system in which}} the origin is kept fixed and the x and y axes are obtained by rotating the x [...] and y axes counterclockwise through an angle [...] [...] A point P has coordinates (x, y) with respect to the original system and coordinates (x, y) with respect to the new system. [...] In the new coordinate system, the point P will appear to have been rotated in the opposite direction, that is, clockwise through the angle [...] [...] A rotation of axes in more than two dimensions is defined similarly. [...] A rotation of axes is a linear map and a <b>rigid</b> <b>transformation.</b>|$|E
5000|$|The {{kinematics}} equations {{are obtained}} using a <b>rigid</b> <b>transformation</b> Z {{to characterize the}} relative movement allowed at each joint and separate <b>rigid</b> <b>transformation</b> X to define the dimensions of each link.|$|E
5000|$|Using this {{distance}} formula, a <b>rigid</b> <b>transformation</b> g:Rn→Rn has the property, ...|$|E
25|$|These {{homogeneous}} transforms perform <b>rigid</b> <b>transformations</b> on {{the points}} in the plane z=1, that is on points with coordinates p=(x, y, 1).|$|R
40|$|In {{this paper}} we explore a {{multiple}} hypothesis approach to estimating rigid motion from a moving stereo rig. More precisely, we introduce the use of Gaussian mixtures to model correspondence uncertainties for disparity and image velocity estimation. We show some properties of the disparity space and show how <b>rigid</b> <b>transformations</b> can be represented. An algorithm derived from standard random sampling-based robust estimators, that efficiently estimates <b>rigid</b> <b>transformations</b> from multi-hypothesis disparity maps and velocity fields is given...|$|R
40|$|International audienceIn the {{continuous}} domain R^n, <b>rigid</b> <b>transformations</b> are topology-preserving operations. Due to digitization, {{this is not}} the case when considering digital images, i. e., images defined on Z^n. In this article, we begin to investigate this problem by studying conditions for digital images to preserve their topological properties under all <b>rigid</b> <b>transformations</b> on Z^ 2. Based on (i) the recently introduced notion of DRT graph, and (ii) the notion of simple point, we propose an algorithm for evaluating digital images topological invariance...|$|R
50|$|Given two point sets, rigid {{registration}} {{yields a}} <b>rigid</b> <b>transformation</b> which maps one point {{set to the}} other. A <b>rigid</b> <b>transformation</b> {{is defined as a}} transformation that does not change the distance between any two points. Typically such a transformation consists of translation and rotation. In rare cases, the point set may also be mirrored.|$|E
50|$|The rigid transformations include rotations, translations, {{reflections}}, {{or their}} combination. Sometimes reflections {{are excluded from}} {{the definition of a}} <b>rigid</b> <b>transformation</b> by imposing that the transformation also preserve the handedness of figures in the Euclidean space (a reflection would not preserve handedness; for instance, it would transform a left hand into a right hand). To avoid ambiguity, this smaller class of transformations is known as proper rigid transformations (informally, also known as roto-translations). In general, any proper <b>rigid</b> <b>transformation</b> can be decomposed as a rotation followed by a translation, while any <b>rigid</b> <b>transformation</b> can be decomposed as an improper rotation followed by a translation (or as a sequence of reflections).|$|E
50|$|Any object {{will keep}} the same shape and size after a proper <b>rigid</b> <b>transformation.</b>|$|E
50|$|Shape {{analysis}} is {{the field of}} automatic digital analysis of shapes, e.g., 3D objects. For many shape analysis tasks (such as shape matching/retrieval), feature vectors for certain key points are used instead of using the complete 3D model of the shape. An important requirement of such feature descriptors {{is for them to}} be invariant under certain <b>transformations.</b> For <b>rigid</b> <b>transformations,</b> commonly used feature descriptors include shape context, spin images, integral volume descriptors and multiscale local features, among others. HKS allows isometric <b>transformations</b> which generalizes <b>rigid</b> <b>transformations.</b>|$|R
40|$|International audienceRigid transformations are {{involved}} {{in a wide range of}} digital image processing applications. When applied on such discrete images, <b>rigid</b> <b>transformations</b> are however usually performed in their associated continuous space, then requiring a subsequent digitization of the result. In this article, we propose to study <b>rigid</b> <b>transformations</b> of digital images as a fully discrete process. In particular, we investigate a combinatorial structure modelling the whole space of digital <b>rigid</b> <b>transformations</b> on any subset of Z^ 2 of size N * N. We describe this combinatorial structure, which presents a space complexity O (N^ 9) and we propose an algorithm enabling to build it in linear time with respect to this space complexity. This algorithm, which handles real (i. e. non-rational) values related to the continuous transformations associated to the discrete ones, is however deﬁned in a fully discrete form, leading to exact computation...|$|R
40|$|In this paper, we {{show that}} {{significant}} wrong evidence can be generated when the Hough Transform (HT) is used to extract arbitrary shapes under <b>rigid</b> <b>transformations.</b> In {{order to reduce the}} amount of wrong evidence, we consider two types of constraints. First, we define constraints by considering invariant features. Secondly, we consider constraints defined via gradient direction information. Our results show that these constraints can significantly improve the gathering strategy, leading to identification of the correct parameters. The presented formulation is valid for any <b>rigid</b> <b>transformations</b> represented by affine mappings...|$|R
5000|$|A <b>rigid</b> <b>transformation</b> is {{formally}} {{defined as}} a transformation that, when acting on any vector v, produces a transformed vector T(v) of the form ...|$|E
5000|$|... free polykings are {{distinct}} when none is a <b>rigid</b> <b>transformation</b> (translation, rotation, reflection or glide reflection) of another (pieces {{that can be}} picked up and flipped over).|$|E
50|$|The {{kinematics}} equations for {{the series}} chain of a robot are obtained using a <b>rigid</b> <b>transformation</b> Z to characterize the relative movement allowed at each joint and separate <b>rigid</b> <b>transformation</b> X to define the dimensions of each link. The result is a sequence of rigid transformations alternating joint and link transformations {{from the base of}} the chain to its end link, which is equated to the specified position for the end link,where T is the transformation locating the end-link. These equations are called the kinematics equations of the serial chain.|$|E
40|$|<b>Rigid</b> <b>transformations</b> are {{involved}} {{in a wide range of}} digital image processing applications. In such a context, they are generally considered as continuous processes, followed by a digitization of the results. Recently, <b>rigid</b> <b>transformations</b> on Z 2 have been alternatively formulated as a fully discrete process. Following this paradigm, we investigate – from a combinatorial point of view – the effects of pixel-invariance constraints on such transformations. In particular we describe the impact of these constraints on both the combi-natorial structure of the transformation space and the algorithm leading to its generation...|$|R
3000|$|... with {{overlapping}} {{regions in}} arbitrary initial positions, we recover the best transformation from a prescribed family of <b>transformations,</b> typically <b>rigid</b> <b>transformations,</b> that best aligns the overlapping regions of [...]...|$|R
25|$|Geometric <b>transformations,</b> {{also called}} <b>rigid</b> <b>transformations,</b> {{are used to}} {{describe}} the movement of components in a mechanical system, simplifying the derivation of the equations of motion. They are also central to dynamic analysis.|$|R
5000|$|A {{translation}} of a vector space adds a vector d to every vector in the space, {{which means it}} is the transformation g(v):v→v+d. It is easy to show {{that this is a}} <b>rigid</b> <b>transformation</b> by computing, ...|$|E
50|$|In kinematics, proper rigid {{transformations in}} a 3-dimensional Euclidean space, denoted SE(3), {{are used to}} {{represent}} the linear and angular displacement of rigid bodies. According to Chasles' theorem, every <b>rigid</b> <b>transformation</b> can be expressed as a screw displacement.|$|E
5000|$|... free polyominoes are {{distinct}} when none is a <b>rigid</b> <b>transformation</b> (translation, rotation, reflection or glide reflection) of another (pieces {{that can be}} picked up and flipped over). Translating, rotating, reflecting, or glide reflecting a free polyomino does not change its shape.|$|E
40|$|International audienceIn ℝ 2, <b>rigid</b> <b>transformations</b> are topology-preserving operations. However, this {{property}} is generally no longer true when considering digital images instead of continuous ones, due to digitization effects. In this article, we investigate this issue by studying discrete <b>rigid</b> <b>transformations</b> (DRTs) on ℤ 2. More precisely, we define {{conditions under which}} digital images preserve their topological properties under any arbitrary DRTs. Based on the recently introduced notion of DRT graph and the classical notion of simple point, we first identify a family of local patterns that authorize topological invariance under DRTs. These patterns are then involved in a local analysis process that guarantees topological invariance of whole digital images in linear time...|$|R
40|$|Figure 1 : Deformation using Moving Least Squares. Original {{image with}} control points shown in blue (a). Moving Least Squares {{deformations}} using affine transformations (b), similarity <b>transformations</b> (c) and <b>rigid</b> <b>transformations</b> (d). We provide an image deformation method based on Moving Least Squares using various classes of linear functions including affine, similarity and <b>rigid</b> <b>transformations.</b> These deformations are realistic {{and give the}} user the impression of manipulating real-world objects. We also allow the user to specify the deformations using either sets of points or line segments, the later useful for controlling curves and profiles present in the image. For each of these techniques, we provide simple closed-form solutions that yield fast deformations, which can be performed in real-time...|$|R
40|$|Shape {{deformation}} {{is one of}} {{the fundamental}} techniques in geometric processing. One principle of deformation is to preserve the geometric details while distributing the necessary distortions uniformly. To achieve this, state-of-the-art techniques deform shapes in a locally as-rigid-as-possible (ARAP) manner. Existing ARAP deformation methods optimize <b>rigid</b> <b>transformations</b> in the 1 -ring neighborhoods and maintain the consistency between adjacent pairs of <b>rigid</b> <b>transformations</b> by single overlapping edges. In this paper, we make one step further and propose to use larger local neighborhoods to enhance the consistency of adjacent <b>rigid</b> <b>transformations.</b> This is helpful to keep the geometric details better and distribute the distortions more uniformly. Moreover, the size of the expanded local neighborhoods provides an intuitive parameter to adjust physical stiffness. The larger the neighborhood is, the more rigid the material is. Based on these, we propose a novel rigidity controllable mesh deformation method where shape rigidity can be flexibly adjusted. The size of the local neighborhoods can be learned from datasets of deforming objects automatically or specified by the user, and may vary over the surface to simulate shapes composed of mixed materials. Various examples are provided to demonstrate the effectiveness of our method...|$|R
50|$|All rigid transformations are {{examples}} of affine transformations. The set of all (proper and improper) rigid transformations is {{a group called the}} Euclidean group, denoted E(n) for n-dimensional Euclidean spaces. The set of proper <b>rigid</b> <b>transformation</b> is called special Euclidean group, denoted SE(n).|$|E
50|$|In mathematics, a <b>rigid</b> <b>transformation</b> (isometry) of a {{vector space}} {{preserves}} distances between every pair of points. Rigid transformations {{of the plane}} R2, space R3, or real n-dimensional space Rn are termed a Euclidean transformation because they {{form the basis of}} Euclidean geometry.|$|E
5000|$|The {{expression}} is simplified by observing that [...] {{is independent of}} [...] Furthermore, assuming rigid registration, [...] is invariant when [...] is changed because the Euclidean distance between every pair of points stays the same under <b>rigid</b> <b>transformation.</b> So the above equation may be rewritten as: ...|$|E
5000|$|In robotics, {{configuration}} space {{refers to}} the set of reachable positions by a robot's end-effector, considered as a rigid body in three-dimensional space. [...] Thus positions of the end-effector of a robot can be identified with the group of spatial <b>rigid</b> <b>transformations,</b> often denoted SE(3).|$|R
40|$|The Hough {{transform}} extracts a shape by {{gathering evidence}} obtained by mapping points from the image space into a parameter space. In this process, wrong evidence is generated from image points {{that do not}} correspond to the model shape. In this paper, we show that significant wrong evidence can be generated when the Hough Transform is used to extract arbitrary shapes under <b>rigid</b> <b>transformations.</b> In {{order to reduce the}} wrong evidence, we consider two types of constraints. First, we define constraints by considering invariant features. Secondly, we consider constraints defined via a gradient direction information. Our results show that these constraints can significantly improve the gathering strategy, leading to identification of the correct parameters. The presented formulation is valid for any <b>rigid</b> <b>transformations</b> represented by affine mappings. ...|$|R
40|$|Researchers {{proposed}} several {{criteria to}} assess the quality of predicted protein structures because {{it is one of}} the essential tasks in the Critical Assessment of Techniques for Protein Structure Prediction (CASP) competitions. Popular criteria include root mean squared deviation (RMSD), MaxSub score, TM-score, GDT-TS and GDT-HA scores. All these criteria require calculation of <b>rigid</b> <b>transformations</b> to superimpose the the predicted protein structure to the native protein structure. Yet, how to obtain the <b>rigid</b> <b>transformations</b> is unknown or with high time complexity, and, hence, heuristic algorithms were proposed. In this work, we carefully design various small structure patterns, including the ones specifically tuned for local pockets. Such structure patterns are biologically meaningful, and address the issue of relying on a sufficient number of backbone residue fragments for existing methods. We sample the <b>rigid</b> <b>transformations</b> from these small structure patterns; and the optimal superpositions yield by these small structures are refined and reported. As a result, among 11; 669 pairs of predicted and native local protein pocket models from the CASP 10 dataset, the GDT-TS scores calculated by our method are significantly higher than those calculated by LGA. Moreover, our program is computationally much more efficient. Source codes and executables are publicly available at [URL]...|$|R
