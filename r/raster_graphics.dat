391|93|Public
5|$|Robotron: 2084 {{features}} monaural {{sound and}} <b>raster</b> <b>graphics</b> on a 19-inch CRT monitor. It uses a Motorola 6809 {{central processing unit}} that operates at 1MHz. To produce multiple sounds on a single audio channel, the game uses a priority scheme to generate sounds in order of importance. A custom graphics coprocessor—which operates as a blitter chip—generates the on-screen objects and visual effects. The coprocessor increases the transfer speed of memory, which allows the game to simultaneously animate {{a large number of}} objects.|$|E
5|$|Slalom was {{originally}} released in 1986 in the arcades {{as part of}} the Nintendo VS. System and was titled Vs. Slalom. This release featured an upright cabinet, a joystick, one jump button, monaural sound, and standard <b>raster</b> <b>graphics.</b> There was also an optional controller upgrade that featured two physical ski poles and shortened skis that the player could stand on and use to control the skier onscreen. The NES version was released by Nintendo in North America in March1987 and in Europe on October15, 1987. Slalom was Rare's first video game developed as a new company. It was also the Stamper brothers' first video game console release.|$|E
5|$|The game uses LaserDisc {{technology}} to stream pre-recorded animation, which {{was produced by}} Japanese studio Toei Animation. The game features <b>raster</b> <b>graphics</b> on a CRT monitor and amplified monaural sound. The protagonist's appearance was possibly derived from the main character, Lum, from the Japanese manga and anime series Urusei Yatsura. Several factors prevented an overseas release: {{a decline in the}} popularity of laserdisc arcade games in the mid-80s, the expensive price of laserdisc technology, and difficulty to translate. In the original Japanese Reika is voiced by Yuriko Yamamoto.|$|E
50|$|Photogenics is <b>raster</b> <b>graphic</b> editing {{software}} produced by Idruna Software.|$|R
5000|$|... #Caption: A {{screenshot}} of the GIMP 2.2.8 <b>raster</b> <b>graphic</b> software.|$|R
5000|$|Microsoft Paint, the <b>raster</b> <b>graphic</b> editor bundled with Microsoft Windows.|$|R
5|$|Joust was {{developed}} by Williams Electronics, with John Newcomer as the lead designer. Programmer Bill Pfutzenrueter and artists Jan Hendricks and Python Anghelo assisted him. Tim Murphy and John Kotlarik handled the audio design. The game features amplified monaural sound and <b>raster</b> <b>graphics</b> on a 19-inch color CRT monitor. Like other Williams arcade games, Joust was programmed in assembly language. A pack of three AA batteries provide power to save the game's settings and high scores when the machine is unplugged from an electrical outlet. The cabinet artwork, by Anghelo, is stenciled on a wooden frame. Anghelo also designed artwork for promotional materials; one such flyer featured archaic English, which was also incorporated into the game's onscreen instructions and game-over message.|$|E
5|$|The arcade game {{features}} <b>raster</b> <b>graphics</b> on a CRT monitor displaying 4096 {{colors and}} amplified stereophonic sound. The visuals are reflected into view via a {{mirror in the}} cabinet. The arcade cabinet is upright, with the marquee bearing the game's name protruding outward. There are large, blue plastic molds around the cabinet designed to resemble an alien cocoon. The music for Space Gun was composed by Norihiro Furukawa and Naoto Yagishita of Zuntata, Taito's music division. A soundtrack CD (a split release with the soundtrack for Taito game Liquid Kids) was released by Pony Canyon and Scitron on January 21, 1991. This album was also released as part of Taito 1500 Collector's Box on September 17, 1993. A track from the game is on the limited edition CD Zuntata History L'ab-normal 1st, released by Zuntata/Taito on April 1, 1999.|$|E
5|$|Because {{microcomputers}} in Japan {{were not}} powerful enough {{at the time}} to perform the complex tasks involved in designing and programming Space Invaders, Nishikado had to design his own custom hardware and development tools for the game. He created the arcade board using new microprocessors from the United States. The game uses an Intel 8080 central processing unit, features <b>raster</b> <b>graphics</b> on a CRT monitor and monaural sound hosted by a combination of analog circuitry and a Texas Instruments SN76477 sound chip. Despite the specially developed hardware, Nishikado was unable to program the game as he wanted—the Control Program board was not powerful enough to display the graphics in color or move the enemies faster—and he considered the development of the hardware {{the most difficult part of}} the whole process. While programming the game, Nishikado discovered that the processor was able to render the alien graphics faster the fewer were on screen. Rather than design the game to compensate for the speed increase, he decided to keep it as a challenging gameplay mechanism.|$|E
5000|$|Digital <b>raster</b> <b>graphic</b> (DRG) - digital scan {{of a paper}} USGS {{topographic}} map ...|$|R
5000|$|The {{following}} {{is a list of}} <b>raster</b> <b>graphic</b> applications capable of creating and editing icons: ...|$|R
50|$|RTL (Raster Transfer Language, {{also known}} as PCL3GUI). <b>Raster</b> <b>graphic</b> command subset of Hewlett-Packard HP-GL/2, simulary to PCL.|$|R
25|$|Tux Paint is a <b>raster</b> <b>graphics</b> editor (a {{program for}} {{creating}} and processing <b>raster</b> <b>graphics)</b> geared towards young children. The project {{was started in}} 2002 by Bill Kendrick who continues to maintain and improve it, with help from numerous volunteers. Tux Paint is {{seen by many as}} a free software alternative to Kid Pix, a similar proprietary educational software product.|$|E
25|$|DirectDraw: {{for drawing}} 2D Graphics (<b>raster</b> <b>graphics).</b> Deprecated {{in favor of}} Direct2D, though still in use {{by a number of}} games and as a video {{renderer}} in media applications.|$|E
25|$|An SVG {{document}} {{can define}} components including shapes, gradients etc., {{and use them}} repeatedly. SVG images can also contain <b>raster</b> <b>graphics,</b> such as PNG and JPEG images, and further SVG images.|$|E
40|$|There are {{discussed}} {{the differences between}} <b>raster</b> <b>graphic</b> and vector graphic in the first, the theoretical part of the thesis. Their pros and cons are mentioned {{and the importance of}} conversions between this two types of graphics is explained. Process of rasterization, conversion from vector <b>graphic</b> to <b>raster</b> <b>graphic,</b> for selected graphic primitives/entities is thoroughly described. The second part describes the process of development and implementation of the application...|$|R
5000|$|Canon SG <b>Raster</b> (Swift <b>Graphics</b> <b>Raster</b> {{for large}} format printers), based on Hewlett-Packard PCL3GUI / RTL and IVEC (XML {{formatted}} job description language) ...|$|R
50|$|By this time, {{internet}} bandwidth {{and download}} speeds increased, making <b>raster</b> <b>graphic</b> animations more convenient. Some {{of the more}} complex vector graphic animations had a slower frame rate due to complex rendering {{than some of the}} <b>raster</b> <b>graphic</b> alternatives. Many of the GIF and Flash animations were already converted to digital video formats, which were compatible with mobile devices and reduced file sizes via video compression technology. However, compatibility was still problematic as some of the popular video formats such as Apple's QuickTime and Microsoft Silverlight required plugins. YouTube, the most popular video viewing website, was also relying on the Flash plugin to deliver digital video in the Flash Video format.|$|R
25|$|Vector {{graphics}} formats are complementary to <b>raster</b> <b>graphics.</b> <b>Raster</b> <b>graphics</b> is {{the representation}} of images as an array of pixels and is typically used for {{the representation of}} photographic images. Vector graphics consists in encoding information about shapes and colors that comprise the image, which can allow for more flexibility in rendering. There are instances when working with vector tools and formats is best practice, and instances when working with raster tools and formats is best practice. There are times when both formats come together. An understanding of the advantages and limitations of each technology {{and the relationship between}} them is most likely to result in efficient and effective use of tools.|$|E
25|$|A {{large form}} of digital art, pixel art is created {{through the use}} of <b>raster</b> <b>graphics</b> software, where images are edited on the pixel level. Graphics in most old (or {{relatively}} limited) computer and video games, graphing calculator games, and many mobile phone games are mostly pixel art.|$|E
25|$|Despite these differences, 3D {{computer}} graphics rely on similar algorithms as 2D {{computer graphics}} {{do in the}} frame and <b>raster</b> <b>graphics</b> (like in 2D) in the final rendered display. In computer graphics software, the distinction between 2D and 3D is occasionally blurred; 2D applications may use 3D techniques to achieve effects such as lighting, and primarily 3D may use 2D rendering techniques.|$|E
5000|$|The Libre Map Project {{was started}} by Jared Benedict and around 100 {{additional}} individuals contributing money to purchase (or [...] "liberate") {{a full set of}} 1:24K scale USGS topographic maps in Digital <b>raster</b> <b>graphic</b> form. The map files were then hosted by archive.org to ensure the map data will continue to be freely available to everyone indefinitely. 56,000 maps in Digital <b>raster</b> <b>graphic</b> form were acquired on DVDs for $1600 to make the data available. Additional data made available through the project includes SVG boundary files for every US state, Topologically Integrated Geographic Encoding and Referencing (Tiger)/Line 2003 vector map data, and the USGS GeoNames database.|$|R
5000|$|Version 7 of {{the library}} {{introduced}} [...] "Autogeometry", an image tracing feature that transforms a <b>raster</b> <b>graphic</b> into a polygonal shape usable by the library. This feature is currently only available in the Objective-C version {{of the library}}.|$|R
5000|$|Vector art {{is ideal}} for {{printing}} since the art is made {{from a series of}} mathematical curves, it will print very crisply even when resized. For instance, one can print a vector logo on a small sheet of copy paper, and then enlarge the same vector logo to billboard size and keep the same crisp quality. A low-resolution <b>raster</b> <b>graphic</b> would blur or pixelate excessively if it were enlarged from business card size to billboard size. (The precise resolution of a <b>raster</b> <b>graphic</b> necessary for high-quality results depends on the viewing distance; e.g., a billboard may still appear to be of high quality even at low resolution if the viewing distance is great enough.) ...|$|R
25|$|A {{number of}} Internet sites have made these maps {{available}} on the web for affordable commercial and professional use. Because works of the U.S.government are in the public domain, {{it is also possible}} to find many of these maps for free at various locations on the Internet. Georeferenced map images are available from the USGS as digital <b>raster</b> <b>graphics</b> (DRGs) in addition to digital data sets based on USGS maps, notably digital line graphs (DLGs) and digital elevation models (DEMs).|$|E
25|$|Since {{the atomic}} radii (e.g. in Fig. 4) are only {{slightly}} less than the distance between bonded atoms, the iconic spheres intersect, and in the CPK models, this was achieved by planar truncations along the bonding directions, the section being circular. When <b>raster</b> <b>graphics</b> became affordable, {{one of the common}} approaches was to replicate CPK models in silico. It is relatively straightforward to calculate the circles of intersection, but more complex to represent a model with hidden surface removal. A useful side product is that a conventional value for the molecular volume can be calculated.|$|E
25|$|The 256-element free Boolean algebra {{on three}} {{generators}} is deployed in computer displays based on <b>raster</b> <b>graphics,</b> which use bit blit to manipulate whole regions consisting of pixels, relying on Boolean operations to specify how the source region should {{be combined with}} the destination, typically {{with the help of}} a third region called the mask. Modern video cards offer all 223=256 ternary operations for this purpose, with the choice of operation being a one-byte (8-bit) parameter. The constants SRC = 0xaa or 10101010, DST = 0xcc or 11001100, and MSK = 0xf0 or 11110000 allow Boolean operations such as (SRC^DST) (meaning XOR the source and destination and then AND the result with the mask) to be written directly as a constant denoting a byte calculated at compile time, 0x60 in the (SRC^DST) example, 0x66 if just SRC^DST, etc. At run time the video card interprets the byte as the raster operation indicated by the original expression in a uniform way that requires remarkably little hardware and which takes time completely independent of the complexity of the expression.|$|E
50|$|Acorn is a <b>raster</b> <b>graphic</b> {{editor for}} macOS {{developed}} by August Mueller of Flying Meat Inc, based out of Mukilteo, Washington, United States. Acorn was first released on September 10, 2007 and was built upon {{the framework of}} a previous image editing application of Flying Meat Inc., FlySketch.|$|R
50|$|After Topozone {{started the}} for pay {{business}} model on April 8, 2008, Niemi made updates {{to get the}} website to match the Topozone URL methodology for viewing 1:24K USGS Digital <b>raster</b> <b>graphic</b> maps available from the Libre Map Project and Internet Archive and was operating by May 2008.|$|R
5000|$|... "Compaction Techniques for <b>Raster</b> Scan <b>Graphics</b> using Space-filling Curves", 1987 ...|$|R
500|$|In 1987's Blasteroids, Ed Rotberg added [...] "power-ups, ship morphing, {{branching}} levels, bosses, and {{the ability}} to dock your ships in multiplayer for added firepower". Blasteroids uses <b>raster</b> <b>graphics</b> instead of vectors.|$|E
500|$|MacPaint is a <b>raster</b> <b>graphics</b> editor {{developed}} by Apple Computer and released {{with the original}} Macintosh personal computer on January 24, 1984. It was sold separately for US$195 with its word processor counterpart, MacWrite. MacPaint was notable because it could generate graphics {{that could be used}} by other applications. [...] Using the mouse, and the clipboard and QuickDraw picture language, pictures could be cut from MacPaint and pasted into MacWrite documents.|$|E
500|$|Asteroids was {{implemented}} on hardware developed by Delman {{and is a}} vector game, in which the graphics are composed of lines drawn on a vector monitor. Rains initially wanted the game done in <b>raster</b> <b>graphics,</b> but Logg, experienced in vector graphics, suggested an XY monitor because the high image quality would permit precise aiming. The hardware is chiefly a MOS 6502 executing the game program, and QuadraScan, a high-resolution vector graphics processor developed by Atari and referred to as an [...] "XY display system" [...] and the [...] "Digital Vector Generator (DVG)".|$|E
5000|$|Tektronix 4115 color <b>raster</b> scan <b>graphics</b> or the TGRAPH {{emulator}} ...|$|R
5000|$|... #Caption: Example showing {{effect of}} vector <b>graphics</b> versus <b>raster</b> (bitmap) <b>graphics.</b>|$|R
50|$|The density, capacity, {{and price}} of {{computer}} memory have improved steadily and exponentially for decades, an engineering trend called Moore's Law. The limitations of refreshed or storage vector displays were accepted {{only in the}} era when those displays were much cheaper than raster-scan alternatives. <b>Raster</b> <b>graphic</b> displays inevitably took over {{when the price of}} 128 kilobytes no longer mattered.|$|R
