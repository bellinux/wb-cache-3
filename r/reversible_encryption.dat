9|2|Public
2500|$|Some servers require {{passwords}} to {{be stored}} using <b>reversible</b> <b>encryption.</b> However, {{it is possible to}} instead store the digested value of the username, realm, and password ...|$|E
2500|$|Once a user is {{logged on}} successfully, {{access to his}} own EFS {{encrypted}} data requires no additional authentication, decryption happens transparently. Thus, any compromise of the user's password automatically leads to access to that data. Windows can store versions of user account passphrases with <b>reversible</b> <b>encryption,</b> though {{this is no longer}} default behaviour; it can also be configured to store (and will by default on the original version of Windows XP and lower) Lan Manager hashes of the local user account passphrases, which can be attacked and broken easily. It also stores local user account passphrases as NTLM hashes, which can be fairly easily attacked using [...] "rainbow tables" [...] if the passwords are weak (Windows Vista and later versions don't allow weak passwords by default). To mitigate the threat of trivial brute-force attacks on local passphrases, older versions of Windows need to be configured (using the Security Settings portion of Group Policy) to never store LM hashes, and of course, to not enable Autologon (which stores plaintext passphrases in the registry). Further, using local user account passphrases over 14 characters long prevents Windows from storing an LM hash in the SAM – and has the added benefit of making brute-force attacks against the NTLM hash harder.|$|E
5000|$|Some servers require {{passwords}} to {{be stored}} using <b>reversible</b> <b>encryption.</b> However, {{it is possible to}} instead store the digested value of the username, realm, and password ...|$|E
40|$|We {{describe}} a sample data encryption method and prototype system using RFID (Radio Frequency IDentification) technology for anonymous biological samples and samples with pseudonyms. This method {{has been developed}} to improve sample logistics in high-throughput biological laboratories and large-scale biorepositories. An innovative hardware and software concept is presented which allows the (<b>reversible</b> and irreversible) <b>encryption</b> of sensitive sample data without the need of electronic connectivity. The technique allows complete or partial encryption of specific information blocks. This is useful for collaborative sample and data exchange between decentralized laboratories and biorepositories. Further possible uses include system-to-sample authentication or secure data access based on a four-eye principle...|$|R
40|$|A {{generalized}} way of Vigenere Cipher {{is proposed}} here. Here, {{instead of using}} a Vigenere square for encryption and decryption, any two reversible square matrices whose rows or columns are unique are used for encryption and decryption purpose. One matrix can be easily obtained from the other and hence {{any one of them}} can be used for encryption while the other can be derived from the other for decryption. This avoids the necessity of using two separate <b>reversible</b> matrices for <b>encryption</b> and decryption. Also, a new algorithm for generation of key-stream with or without using a random symbol sequence is suggested. The key streams are generated from a small key word. The key streams are different for any slight difference of keywords either in length or content. Moreover, a key stream would be effectively random and as long as we please...|$|R
5000|$|Once a user is {{logged on}} successfully, {{access to his}} own EFS {{encrypted}} data requires no additional authentication, decryption happens transparently. Thus, any compromise of the user's password automatically leads to access to that data. Windows can store versions of user account passphrases with <b>reversible</b> <b>encryption,</b> though {{this is no longer}} default behaviour; it can also be configured to store (and will by default on the original version of Windows XP and lower) Lan Manager hashes of the local user account passphrases, which can be attacked and broken easily. It also stores local user account passphrases as NTLM hashes, which can be fairly easily attacked using [...] "rainbow tables" [...] if the passwords are weak (Windows Vista and later versions don't allow weak passwords by default). To mitigate the threat of trivial brute-force attacks on local passphrases, older versions of Windows need to be configured (using the Security Settings portion of Group Policy) to never store LM hashes, and of course, to not enable Autologon (which stores plaintext passphrases in the registry). Further, using local user account passphrases over 14 characters long prevents Windows from storing an LM hash in the SAM - and has the added benefit of making brute-force attacks against the NTLM hash harder.|$|E
40|$|Abstract- Recently, {{biological}} techniques {{become more}} and more popular, as they are applied to many kinds of applications, authentication protocols, biochemistry, and cryptography [...] Bioinformatics [2] plays a very important role on molecular datasets. Encrypting secret data in peptide sequence or amino-acid sequence becomes an important and interesting research topic. This paper presents a simple, secure and <b>reversible</b> <b>encryption</b> scheme that converts the message into an amino-acid protein sequence to provide security...|$|E
3000|$|In [...] "Compression {{independent}} <b>reversible</b> <b>encryption</b> {{for privacy}} in video surveillance,'' Carrillo et al. propose a permutation-based encryption scheme {{to be applied}} on selected regions in surveillance videos such as faces of individuals that reveal identity information. The encryption permutes pixel values using a logarithmic signature-based pseudorandom sequence. The proposed encryption is shown to have robust performance—the encrypted regions can still be decrypted after the redacted video is compressed at different quality levels or transcoded between different compression standards. Automatic methods to detect encrypted regions are also proposed.|$|E
40|$|Abstract: This paper {{presents}} a HMAC based Temper Evident Encryption (HTEE) technique for providing confidentiality {{and integrity of}} numeric data in a database environment through an encryption scheme based on the keyed Hash Message Authentication Code (HMAC) function. The encryption scheme implemented in this project extends and improves an existing HMAC based encryption scheme. The result is a symmetric encryption process which detects unauthorized updates to ciphertext data, verifies integrity and provides confidentiality. This encryption scheme provides an alternative to standard approaches that offer confidentiality and integrity of data such as combining the Advanced Encryption Standard (AES) algorithm with a hash digest. The purpose of the scheme {{is to provide a}} straightforward and efficient encryption that supports data integrity, to investigate the use of HMAC for <b>reversible</b> <b>encryption</b> and key transformation, and to improve upon an existing method. ...|$|E
40|$|Secure message {{transmission}} is generally {{required for the}} system where transmitted message need to be verified at the receiver end. Fibonacci develops the <b>reversible</b> <b>encryption</b> algorithms as mentioned in below technique. The technique considers a message as binary string on which the Fibonacci Based Position Substitution (FBPS) method is applied. A block of n bits is taken as an input stream from a continuous stream of bits. The decimal equivalent value of a source block is obtain and finds its position on the Fibonacci series, on a number or in between two numbers. The source value is mapped on a previous number of the series called target number. For proper one-one mapping a scheme is applied on the target number. This target number is again projected on a previous number and so on until the target number reached in a 0 or 1. Each time of the projection a 0 or 1 is produced. Plain text is encrypted for different block sizes as per the specification of a session key of a session to generate the final encrypted stream. Comparison of the proposed technique with existing and industrially accepted RSA and Triple DES...|$|E
30|$|This paper {{presents}} {{a system for}} encrypting selected regions in videos. The system {{can be used for}} ensuring privacy in video surveillance by hiding the identity revealing regions in the video. The encrypted video can be transcoded and or decrypted at a later time with the right decryption keys. The proposed system is independent of the compression algorithms used. The system was tested using H. 264 to MPEG- 2, H. 264 to MPEG- 4, and H. 264 to H. 263 video transcoders in order to verify video quality. The bitrate increases with the number of encrypted blocks. The proposed <b>reversible</b> <b>encryption</b> increases the video bitrate and experiments with H 264 to MPEG- 4 show that the increase is up to 23 % for high bitrate videos with about 7 % of blocks encrypted. This bitrate can be reduced by keeping the ROI QP constant and increasing the frame QP. The increase in bitrates depends on the type of video and the size of encrypted regions. The increase in bitrate is a reasonable cost to pay for protecting individual privacy. The proposed solution does not require any additional information to detect and decrypt encrypted regions. A DCT based method was developed to automatically detect the encrypted regions thus making the system truly independent of the compression algorithms used.|$|E

