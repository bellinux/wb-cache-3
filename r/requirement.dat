10000|10000|Public
5|$|All Marriott School {{students}} may also earn the Global Management Certificate. To earn the certificate, {{students are required}} to take a business language course, pertinent international business classes, and participate in an international field study or study abroad program. Undergraduate {{students may}} also qualify for graduation honors. University Honors is the highest distinction BYU awards its graduates. Overseen by Honors Program, the distinction requires students to complete an honors curriculum <b>requirement,</b> a Great Works <b>requirement,</b> an Advanced Languages <b>requirement,</b> a service <b>requirement,</b> an honors thesis <b>requirement,</b> a graduation portfolio that summarizes the student's honors experiences—all while maintaining at least a 3.5 GPA. The Marriott School designates a faculty member as its Honors Coordinator, who aids students in finding faculty with whom to begin honors thesis research. The university also awards Latin scholastic distinctions: summa cum laude top 1 percent, magna cum laude top 5 percent, and cum laude top 10 percent.|$|E
5|$|Although the 1834 Act {{allowed for}} women to become workhouse guardians {{provided}} they met the property <b>requirement,</b> the first female was not elected until 1875. Working class guardians were not appointed until 1892, when the property <b>requirement</b> was dropped in favour of occupying rented premises worth £5 a year.|$|E
5|$|Although the Act {{was largely}} ineffective, {{it has been}} seen as the first piece of Health & Safety legislation, leading the way to {{subsequent}} regulations covering industrial workplaces; its <b>requirement</b> for factory walls to be whitewashed continued to be a legal <b>requirement</b> until the Factories Act 1961.|$|E
40|$|The aim of {{this work}} is to create A method for {{integrity}} support of <b>requirements</b> specification. For this purpose a process model is developed, which consists of three main tasks: the identification of <b>requirements,</b> specification and composition. The first two tasks helps to identify the crosscutting <b>requirements</b> of the following reduction the <b>requirements</b> dispersal in <b>requirements</b> specification, also identify responsibilities of <b>requirements</b> and identify required <b>requirements.</b> The goal of composition task is to compose the <b>requirements</b> to give the developer {{a view of the}} whole system and to identify and manage conflicts between <b>requirements.</b> Integrity of <b>requirements</b> are ensured keeping all <b>requirements</b> in a unique form. The paper analyzes the identification of crosscutting <b>requirements</b> and gathering strategies. The templates of <b>requirements</b> specification, standards of <b>requirements</b> classification and <b>requirements</b> management tools were analyzed. The methods and techniques of functional and non-functional <b>requirements</b> for the integrity were analyzed. The unique template for <b>requirements</b> specification was created, which includes functional and non-functional <b>requirements,</b> functional and non-functional crosscutting <b>requirements.</b> The template for <b>requirements</b> management was consisted in RequisitePro environment. The MagicDraw profile package was created, which provide the developer a view of the whole system, representing set of <b>requirements</b> for use case diagrams. The method for integrity support of <b>requirements</b> was tested through the ATM system <b>requirements</b> specification...|$|R
40|$|<b>Requirements</b> {{evolution}} {{is one of}} critical problems influencing software engineering activities. Despite there is much research on <b>requirements</b> evolution, there still lacks quantitative understanding of <b>requirements</b> evolution. In this paper, we quantitatively analyze <b>requirements</b> evolution across multiple versions of an industrial software product. Based on data of <b>requirements</b> evolution and defects, we analyze the relationship between <b>requirements</b> evolution and <b>requirements</b> {{as well as between}} defects and <b>requirements</b> evolution. We also analyze the evolution characteristics about <b>requirements</b> modification. Our findings include estimation of the number of defects using evolved <b>requirements</b> may increase accuracy of defect estimation and business rule is the most volatile part in <b>requirements.</b> These findings deepen our understanding of <b>requirements</b> evolution and can help software organizations manage <b>requirements</b> evolution...|$|R
5000|$|PREview (Process and <b>Requirements</b> Viewpoints) is a <b>requirements</b> method {{which focuses}} on the early stage of <b>Requirements</b> Engineering: {{discovering}} and documenting <b>requirements.</b> PREview uses a Viewpoint-Oriented Approach to enable the conversion of top-level goals (“concerns”) into <b>requirements</b> and constraints. “Preview aims {{to improve the quality}} of <b>requirements</b> specification by providing a framework which can support both <b>requirements</b> elicitation and the structuring of the <b>requirements</b> document.” ...|$|R
5|$|Uppercase and {{lowercase}} prefixes are not interchangeable. E.g., {{the quantities}} 1mW and 1MW represent two different quantities; {{the former is}} the typical power <b>requirement</b> of a hearing aid (1milliwatt or 0.001watts), and the latter the typical power <b>requirement</b> of a suburban train (1megawatt or watts).|$|E
5|$|With the {{introduction}} of the Douglas C-54 Skymaster four-engined transport aircraft, the United States Army Air Forces, observing that conventional gliders then in service would be an inefficient use of the C-54's power and capacity, determined that a <b>requirement</b> existed for a new, much larger assault glider. It was determined that the best solution to the <b>requirement</b> was the conversion of the Douglas C-47 Skytrain, already in large-scale production, to meet the <b>requirement.</b> The C-47 could be converted to a glider configuration with minimal alteration to the airframe, and would provide the required capacity.|$|E
5|$|Aggressor: ‘red team’ weaponless {{variant of}} the Gripen C & {{possibly}} D intended for the UK's air support to defence operational training (Asdot) <b>requirement,</b> {{and part of the}} US Air Force's adversary air (AdAir) opportunity.|$|E
40|$|Defining quality <b>requirements</b> {{completely}} and correctly {{is more difficult}} than defining functional <b>requirements</b> because stakeholders do not state most of quality <b>requirements</b> explicitly. We thus propose a method to measure a <b>requirements</b> specification for identifying the amount of quality <b>requirements</b> in the specification. We also propose another method to recommend quality <b>requirements</b> to be defined in such a specification. We expect stakeholders can identify missing and unnecessary quality <b>requirements</b> when measured quality <b>requirements</b> are different from recommended ones. We use a semi-formal language called X-JRDL to represent <b>requirements</b> specifications because it is suitable for analyzing quality <b>requirements.</b> We applied our methods to a <b>requirements</b> specification, and found our methods contribute to defining quality <b>requirements</b> more {{completely and}} correctly. ...|$|R
40|$|To {{understand}} the difference between function, nonfunctional and domain <b>requirements</b> To understand how <b>requirements</b> are organised in a SRS To {{understand the}} main <b>requirements</b> engineering activities and their relationships To introduce techniques of <b>requirements</b> elicitation and analysis, <b>requirements</b> validation, and <b>requirements</b> managemen...|$|R
40|$|Some volumes {{are issued}} as National Research Council {{publications}} or National Academy of Sciences publications. Includes various editions of some vols. An {{activity of the}} Committee on Animal Nutrition, National Research Council. Includes bibliographical references. no. 1. Nutrient <b>requirements</b> of poultry. [...] no. 2. Nutrient <b>requirements</b> of swine. [...] no. 3. Nutrient <b>requirements</b> of dairy cattle. [...] no. 4. Nutrient <b>requirements</b> of beef cattle. [...] no. 5. Nutrient <b>requirements</b> of sheep. [...] no. 6. Nutrient <b>requirements</b> of horses [...] no. 7. Nutrient <b>requirements</b> of minks and foxes [...] no. 8. Nutrient <b>requirements</b> of dogs [...] no. 9. Nutrient <b>requirements</b> of rabbits [...] no. 10. Nutrient <b>requirements</b> of laboratory animals: cat, guinea pig, hamster, monkey, mouse, rat [...] no. 11. Nutrient <b>requirements</b> of trout, salmon, and catfish [...] no. 12. Nutrient <b>requirements</b> of warmwater fishes [...] no. 13. Nutrient <b>requirements</b> of cats [...] no. 14. Nutrient <b>requirements</b> of nonhuman primates [...] no. 15. Nutrient <b>requirements</b> of goats [...] no. 16. Nutrient <b>requirements</b> of coldwater fishes. Publication suspended, 1946 - 1948. Mode of access: Internet...|$|R
5|$|As {{a general}} rule, {{there is no}} <b>requirement</b> for {{particular}} formalities in trust instruments, they can be oral or written. The only <b>requirement</b> is that they show an intention to create a trust. The exceptions are where it is a transfer of land, the transfer of existing equitable interests, or where the trust is made in a will.|$|E
5|$|As {{part of the}} US Department of Labor’s (DOL) governmentwide {{implementation}} of the Davis-Bacon Act, federal regulations require that all laborers and mechanics who work for a contractor or subcontractor on federally financed construction contracts over $2,000 must be paid wages not less than those the DOL established for the project location (i.e., the prevailing wage). This Compliance <b>Requirement</b> was created to assure that recipients oblige contractors {{to comply with the}} Davis-Bacon Act, by including in their construction contracts with a contractor or subcontractor a clause or <b>requirement</b> to comply with the Davis-Bacon Act and the DOL regulations. The clause should also include a <b>requirement</b> for the contractor or subcontractor to submit to the recipient weekly (e.g., for each week in which any contract work is performed) a copy of the construction payroll accompanied by statement of compliance. This report is commonly referred to as “certified payrolls”, and is often done using Optional Form WH-347 (OMB No. 1215-0149), a standard form pre-designed by the OMB.|$|E
5|$|At {{the time}} of the {{development}} of the P.1127 Hawker and Bristol had also undertaken considerable development work on a supersonic version, the Hawker Siddeley P.1154, to meet a North Atlantic Treaty Organisation (NATO) <b>requirement</b> issued for such an aircraft. The design used a single Bristol Siddeley BS100 engine with four swivelling nozzles, in a fashion similar to the P.1127, and required the use of plenum chamber burning (PCB) to achieve supersonic speeds. The P.1154 won the competition to meet the <b>requirement</b> against strong competition from other aircraft manufacturers such as Dassault Aviation's Mirage IIIV. The French government did not accept the decision and withdrew; the NATO <b>requirement</b> was cancelled shortly after in 1965.|$|E
40|$|Abstract—The {{innovation}} {{potential of}} niche communities often remains inaccessible to service providers {{due to a}} lack of awareness and effective negotiation between these two groups. <b>Requirements</b> Bazaar, a browser-based social software for Social <b>Requirements</b> Engineering (SRE), aims at bringing together communities and service providers into such a negotiation process. Communities should be supported to express and trace their <b>requirements</b> and eventually receive a realization. Service providers should be supported in discovering relevant innovative <b>requirements</b> to maximize impact with a realization. In this paper we present <b>Requirements</b> Bazaar with focus on four aspects: <b>requirements</b> specification, a workflow for co-creation, workspace integration and personalizable <b>requirements</b> prioritization. Index Terms—Social <b>Requirements</b> Engineering; Community of Practice; <b>requirements</b> elicitation; <b>requirements</b> negotiation; <b>requirements</b> traceability; <b>requirements</b> prioritization I...|$|R
40|$|<b>Requirements</b> incompleteness {{detected}} {{in a later}} stage of <b>requirements</b> engineering process still require a costly rework to be done. However, Fraunhofer IESE is currently developing an approach based on a Conceptual <b>Requirements</b> Model (CRM) that aims to achieve {{a higher degree of}} <b>requirements</b> completeness in a constructive rather than analytical manner. The aim of this thesis is to provide an algorithm to transform a CRM into a precise <b>requirements</b> elicitation checklist and a <b>requirements</b> specification template. The <b>requirements</b> elicitation checklist will then be used to guide the <b>requirements</b> engineer while eliciting stakeholder's <b>requirements</b> and the <b>requirements</b> specification template will be used to store the elicited <b>requirements.</b> A tool is developed to generate the <b>requirements</b> elicitation checklist and the specification template from the CRM automatically...|$|R
50|$|Part I: Equipment <b>Requirements</b> - {{includes}} general core <b>requirements</b> {{for voting}} systems and voting devices. It includes security and audit architecture, usability, accessibility and privacy <b>requirements,</b> security <b>requirements,</b> and general core <b>requirements.</b>|$|R
5|$|Block-making {{machines}} may form {{blocks that}} have interlocking shapes {{to reduce the}} <b>requirement</b> for mortar.|$|E
5|$|Campus legends {{holding that}} Harry Widener's fate led to {{institution}} of an undergraduate swimming-proficiency <b>requirement,</b> {{and that an}} additional donation from his mother subsidizes ice cream at Harvard meals, are without foundation.|$|E
5|$|Cortana can set reminders, {{recognize}} {{natural voice}} without the <b>requirement</b> for keyboard input, {{and answer questions}} using information from the Bing search engine.|$|E
40|$|This paper {{argues that}} a user's manual makes an excellent, if not the best, {{software}} <b>requirements</b> specification. It discusses several lessons learned from experiences writing user's manuals as <b>requirements</b> specifications. Keywords: ambiguity, <b>requirements</b> analysis, <b>requirements</b> elicitation, <b>requirements</b> validation, <b>requirements,</b> scenarios, specification, test cases; use cases, user's manual...|$|R
40|$|A short {{introduction}} to <b>requirements</b> {{and their role}} in system development. Includes industry definition of <b>requirements,</b> overview of basic <b>requirements</b> process including numbering of <b>requirements,</b> ties to testing, and traceability. An {{introduction to}} <b>requirements</b> quality attributes (correct, unambiguous, etc.) Includes references to <b>requirements</b> process, numbering, and quality papers...|$|R
40|$|This TALIS Federated Architecture <b>Requirements</b> (FAR) {{document}} specifies {{the user}} <b>requirements</b> {{as well as}} the software <b>requirements</b> for the TALIS Federated Architecture to be developed by the TALIS consortium partners. The user <b>requirements</b> are high-level <b>requirements</b> from a user′s point of view. They are discerned into UML Candidate <b>Requirements,</b> UML Business Models, and UML Supplementary <b>Requirements</b> according to the UML/USDP modelling techniques. The software <b>requirements</b> are more detailed technical elaborations of the user <b>requirements</b> that are selected for implementation. They are discerned into UML Use-Case Models and Specifications according to the UML/USDP modelling techniques...|$|R
5|$|Denotes the <b>requirement</b> that guests pay an {{additional}} fee for the ride or attraction.|$|E
5|$|Earmarking is a <b>requirement</b> that {{specifies}} a limit amount or {{percentage of}} the program’s assistance that must (minimum) or may (maximum) be used for specified activities. Examples of this include limits imposed {{on the federal government}} on the amount of federal funds to cover administrative expenses, or a percentage <b>requirement</b> for total program funds provided to subrecipients. Earmarking may also be specified in relation to the types of participants covered (e.g. a limit on how many participants a recipient can provide assistance to).|$|E
5|$|In Fischer v. United States (2000), the Court {{held that}} the {{jurisdictional}} <b>requirement</b> of $10,000 in federal funds can be satisfied by any funds that flow through the organization, for example Medicaid reimbursements which a hospital receives indirectly through the patients. The only <b>requirement</b> is that the funds be traced to a statutory appropriation, and that their receipt be in furtherance of a federal policy.|$|E
40|$|<b>Requirements</b> {{specification}} is the <b>requirements</b> engineering task {{during which}} analyzed <b>requirements</b> are properly documented {{for use by}} their intended audiences. Traditionally, this involved the <b>requirements</b> team using a word processing program to produce a single <b>requirements</b> specification document during an initial <b>requirements</b> phase of a project. However, trends in system development have made the numerous problems with this approach abundantly clear. Improvements in <b>requirements</b> tools have not only enabled better <b>requirements</b> management; they have also enabled the automatic generation of consistent, current, audience-specific <b>requirements</b> specifications that far better {{meet the needs of}} their individual audiences. 1 TRADITIONAL REQUIREMENTS SPECIFICATION During the 1970 s and 1980 s, <b>requirements</b> specification seemed at first glance to be a relatively simple task. During the initial <b>requirements</b> phase of a project, the <b>requirements</b> engineers would elicit functional <b>requirements</b> from the various stakeholders using a functional decomposition method such as structured analysis. Then they would use...|$|R
30|$|In this Section we {{extract from}} the above goals the <b>requirements</b> of the envisioned home {{management}} system, focusing on six major areas: the general architectural <b>requirements,</b> the coordination <b>requirements,</b> the configuration <b>requirements,</b> the GUI <b>requirements,</b> the main functional <b>requirements,</b> and the gamification <b>requirements.</b> Later in this paper (Section Implementation), we will discuss whether and to which extent they can be met with the available technologies.|$|R
40|$|Abstract. <b>Requirements</b> {{standards}} and textbooks typically classify <b>requirements</b> into functional <b>requirements</b> {{on the one}} hand and attributes or non-functional <b>requirements</b> on the other hand. In this classification, <b>requirements</b> given in terms of required operations and/or data are considered to be functional, while performance <b>requirements</b> and quality <b>requirements</b> (such as <b>requirements</b> about security, reliability, maintainability, etc.) are classified as nonfunctional. In this paper, we present arguments why this notion of non-functional <b>requirements</b> is flawed and present a new classification of <b>requirements</b> which is based on four facets: kind (e. g. function, performance, or constraint), representation (e. g. operational, quantitative or qualitative), satisfaction (hard or soft), and role (e. g. prescriptive or assumptive). We define the facets, discuss typical combinations of facets and argue why such a faceted classification of <b>requirements</b> is better than the traditional notion of functional and non-functional <b>requirements.</b> ...|$|R
5|$|In June 2015 the U.S. Food and Drug Administration (FDA) {{published}} {{its final}} rule establishing the <b>requirement</b> of minimum and maximum levels of selenium in infant formula.|$|E
5|$|Legend {{holds that}} to spare future Harvard men her son's fate, Eleanor Widener insisted, as a {{condition}} of her gift, that learning to swim be made a <b>requirement</b> for graduation.|$|E
5|$|Metformin {{may reduce}} insulin <b>requirement</b> in type 1 diabetes.|$|E
40|$|Abstract. <b>Requirements</b> {{managers}} aim {{at keeping}} their sets of <b>requirements</b> well-defined, consistent {{and up to}} date throughout a project’s life cycle. Semantic web technologies have found many valuable applications {{in the field of}} <b>requirements</b> engineering, with most of them focusing on <b>requirements</b> analysis. However the usability of results originating from such <b>requirements</b> analyses strongly depends {{on the quality of the}} original <b>requirements,</b> which often are defined using natural language expressions without meaningful structures. In this work we present the prototypic implementation of a semantic guidance system used to assist <b>requirements</b> engineers with capturing <b>requirements</b> using a semi-formal representation. The semantic guidance system uses concepts, relations and axioms of a domain ontology to provide a list of suggestions the <b>requirements</b> engineer can build on to define <b>requirements.</b> The semantic guidance system is evaluated based on a domain ontology and a set of <b>requirements</b> from the aerospace domain. The evaluation results show that the semantic guidance system effectively supports <b>requirements</b> engineers in defining well-structured <b>requirements...</b>|$|R
40|$|<b>Requirements</b> {{management}} is gathering, defining, modeling, analyzing, documenting, communicating and managing of all stakeholder wishes and needs into a software product. The field of <b>requirements</b> {{management is}} full of challenges. Both practitioners and scientists are struggling with challenges, including questions like “how to improve <b>requirements</b> transferability?”, “how to define <b>requirements</b> generic?”, “how to make <b>requirements</b> understandable for different stakeholders?”, and “how to track <b>requirements</b> during software development?”. 80 % of outsourcing projects fail because of poor <b>requirements</b> management. Software development depends on <b>requirements</b> management. Incorrect or missing <b>requirements</b> lead to incorrect or missing functionality. Applying principles of knowledge management to <b>requirements</b> management has a potential to increase readability, understandability, correctness, completeness, and transferability of <b>requirements.</b> Furthermore, scientists have indicated a potential to elicit and define <b>requirements</b> faster, and at reduced costs when applying knowledge management principles. This is achieved by making <b>requirements</b> management including processes, steps, techniques, and deliverables more efficient, correct, and inline with stakeholder wishes and needs...|$|R
40|$|<b>Requirements</b> {{managers}} aim {{at keeping}} their sets of <b>requirements</b> well-defined, consistent {{and up to}} date throughout a project’s life cycle. Semantic web technologies have found many valuable applications {{in the field of}} <b>requirements</b> engineering, with most of them focusing on <b>requirements</b> analysis. However the usability of results originating from such <b>requirements</b> analyses strongly depends {{on the quality of the}} original <b>requirements,</b> which often are defined using natural language expressions without meaningful structures. In this work we present the prototypic implementation of a semantic guidance system used to assist <b>requirements</b> engineers with capturing <b>requirements</b> using a semi-formal representation. The semantic guidance system uses concepts, relations and axioms of a domain ontology to provide a list of suggestions the <b>requirements</b> engineer can build on to define <b>requirements.</b> The semantic guidance system is evaluated based on a domain ontology and a set of <b>requirements</b> from the aerospace domain. The evaluation results show that the semantic guidance system supports the <b>requirements</b> engineer in defining well-structured <b>requirements...</b>|$|R
