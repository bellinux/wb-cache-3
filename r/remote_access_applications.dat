2|6098|Public
50|$|The {{help desk}} staff and {{supporting}} IT staff may not all {{work from the}} same location. With <b>remote</b> <b>access</b> <b>applications,</b> technicians are able to solve many help desk issues from another work location or their home office. While {{there is still a}} need for on-site support to effectively collaborate on some issues, remote support provides greater flexibility.|$|E
40|$|Abstract: With the {{development}} of the hospital information construction, there are the continued implementations of virtualization technology in a variety of business applications, which can integrate and deploy these resources, and improve equipment utilization. In this paper, we analyze the problems existed in traditional hospital data center architecture, proposes the construction of new hospital data center using virtualization technology from the aspects of virtualization framework, server resources integration, network configuration optimization, etc. Server virtualization integration could save resources, improve server utilization ratio, simplify the hardware maintenance and upgrades, reduce operating costs and improve maintenance efficiency. We have introduced the experiences of Virtual Technology using in the hospital data center storage, the core server, integration system, network application and <b>remote</b> <b>access</b> <b>applications,</b> server and database platform as well as the application effects, which make a useful exploration for the building and {{the development}} of digital hospital. Theoretical Introduction of Virtualization Technology Virtualization is a broad term that refers to running in the virtual computing elements rather than on the basis of real basis. Specifically, in the form of virtualization technology to achieve is to join...|$|E
5000|$|RDM+ - {{multiplatform}} <b>remote</b> <b>access</b> <b>application</b> for mobile devices.|$|R
50|$|The {{program also}} {{includes}} a <b>remote</b> <b>access</b> <b>application</b> that allows individual files to be downloaded to any computer using a web browser.|$|R
50|$|Even {{in cases}} where a system {{has been set up}} to be managed remotely, a local {{keyboard}} and video card may still be needed from time to time, for example to diagnose boot problems that occur before a <b>remote</b> <b>access</b> <b>application</b> is initialized.|$|R
5000|$|Enable <b>remote</b> <b>access</b> into <b>applications,</b> {{allowing}} {{criminals to}} break into networks for malicious purposes.|$|R
50|$|On April 30, 2013, Oracle {{released}} version 5.0 {{which used}} HTML5 to provide <b>remote</b> <b>access</b> to <b>applications,</b> especially for mobile {{devices such as}} the Apple iPad.|$|R
40|$|Advances in {{solid-state}} lighting {{have overcome}} common limitations on optical wireless such as power needs due to light dispersion. It's been recently proposed the modification of lamp's drivers to take advantages of its switching behaviour to include data links maintaining the illumination control they provide. In this paper, a <b>remote</b> <b>access</b> <b>application</b> using visible light communications is presented that provides wireless <b>access</b> to a <b>remote</b> computer using a touchscreen as user interfac...|$|R
5000|$|... #Subtitle level 3: <b>Remote</b> <b>application</b> <b>access</b> {{and virtual}} desktop access ...|$|R
50|$|MetaFrame {{superseded}} WinFrame in 1998. The {{product was}} renamed several times: it became MetaFrame XP in 2002, MetaFrame XP Presentation Server in 2003, {{and then was}} rebranded as Presentation Server in 2005. Each of these products focused on <b>remote</b> <b>access</b> of <b>applications</b> and server-based computing.|$|R
50|$|The {{software}} technology company Code Rebel {{was founded by}} software engineer Arben Kane in 2006, with headquarters in Kahului, Hawaii, United States. Alex Kukhar and Volodymyr Bykov, who {{became part of the}} core engineering team, also co-founded the company. Kane became CEO and chairman. The initial idea behind Code Rebel was to create a new object oriented <b>remote</b> <b>access</b> protocol that would allow the user to <b>access</b> a specific <b>application</b> and its active state. The company went on to develop, manufacture, license, support and sell computer software typically related to terminal services and virtualization software for Apple Inc. products. In particular, the company is known for its <b>remote</b> <b>access</b> software <b>application</b> called iRAPP, and a Mac terminal services application called iRAPP Terminal Server (iRAPP TS).|$|R
50|$|Session Resumability and Mobility is {{a feature}} {{allowing}} <b>remote</b> <b>access</b> to desktop <b>applications</b> from essentially any Java-enabled browser in the world. This {{makes it possible}} to run applications in one's office, then go to another location such as a customer site or one's home and transfer your existing desktop session to a computer there.|$|R
50|$|The company {{developed}} a <b>remote</b> <b>access</b> software <b>application</b> called iRAPP and a Mac terminal services application called iRAPP Terminal Server (iRAPP TS). iRAPP {{allows users to}} remotely access their Mac desktop through the iRAPP protocol, which allows the user to work simultaneously on both PC and Mac or they can use any RDP (Microsoft's Remote Desktop Protocol) compliant <b>application</b> for the <b>remote</b> <b>access.</b> iRAPP TS allows the user to access multiple virtual desktops on one or multiple Mac machines concurrently, comparable to the Citrix solution for Mac. This focus on Apple solutions contrasts with most terminal services and virtualization providers such as VMware, Red Hat, Microsoft, and Citrix Systems, which have historically offered Microsoft Windows-based solutions.|$|R
40|$|Abstract: 2 ̆ 2 As a {{precursor}} to explorations on future network interoperability problem resolution methods and tools, {{it is necessary to}} obtain an understanding of problems in the present day. The <b>remote</b> network <b>access</b> <b>application</b> area was chosen as a case study due to rich sources of information, frequent problems, and considerable detrimental impact on user efficiency. To this end, existing <b>remote</b> network <b>access</b> help desk data was acquired and analyzed. The data was used to characterize <b>remote</b> network <b>access</b> interoperability problems and identify key issues. For the data examined, the two largest problems specific to remote end users were obtaining modem phone numbers for their location and adequate user rights upon connection. Potential for better knowledge re-use and dissemination of solutions to common problems to the general population was also observed. 2 ̆...|$|R
40|$|As a {{precursor}} to explorations on future network interoperability problem resolution methods and tools, {{it is necessary to}} obtain an understanding of problems in the present day. The <b>remote</b> network <b>access</b> <b>application</b> area was chosen as a case study due to rich sources of information, frequent problems, and considerable detrimental impact on user efficiency. To this end, existing <b>remote</b> network <b>access</b> help desk data was acquired and analyzed. The data was used to characterize <b>remote</b> network <b>access</b> interoperability problems and identify key issues. For the data examined, the two largest problems specific to remote end users were obtaining modem phone numbers for their location and adequate user rights upon connection. Potential for better knowledge re-use and dissemination of solutions to common problems to the general population was also observed...|$|R
40|$|The {{emergence}} {{of a new generation of}} networks will dramatically increase the attractiveness of loosely-coupled multicomputers based on workstation clusters. The key to achieving high performance in this environment is efficient network access, because the cost of <b>remote</b> <b>access</b> dictates the granularity of parallelism that can be supported. Thus, in addition to traditional distribution mechanisms such as RPC, workstation clusters should support lightweight communication paradigms for executing parallel applications. This paper describes a simple communication model based on the notion of <b>remote</b> memory <b>access.</b> <b>Applications</b> executing on one host can perform direct memory read or write operations on user-defined remote memory buffers. We have implemented a prototype system based on this model using commercially available workstations and ATM networks. Our prototype uses kernel-based emulation of remote read and write instructions, implemented through unused processor opcodes; thus, applica [...] ...|$|R
5000|$|Check Point GO (formerly Abra) {{was first}} {{introduced}} by Check Point Software Technologies Ltd. and SanDisk Corporation in March 2010 to address security and compliance issues for companies with remote employees. [...] Workers have been increasingly demanding <b>remote</b> <b>access</b> to company <b>applications</b> and data. Personal equipment accessing the network can pose a risk to corporate networks, creating a potential avenue for corporate data loss or allowing unsecure connections.|$|R
2500|$|In June 2010, Google {{software}} engineer Gary Kačmarčík wrote that Chrome OS will <b>access</b> <b>remote</b> <b>applications</b> through a technology unofficially called [...] "Chromoting", which would resemble Microsoft's Remote Desktop Connection. The name {{has since been}} changed to [...] "Chrome Remote Desktop", and is [...] "probably closer to running an application via Remote Desktop Services or by first connecting to a host machine by using RDP or VNC". [...] Initial roll-outs of Chrome OS laptops (Chromebooks) indicate an interest in enabling users to access virtual desktops.|$|R
40|$|Experience related {{performance}} measures {{are important for}} operational, commercial as well as usability reasons. Quality of Experience (QoE) is widely discussed {{as a measure of}} user perceived performance, no universal definition for QoE are available. Instead of moulding QoE into a one-fits-all parameter, this work identifies and defines four specific {{performance measures}} that are more descriptive than traditional QoE. They account for objective and subjective measures and focus on applications and tasks specific performance. The parameters include Quality of (an) Application (QoA) and Quality of Use (QoU). They are further divided into objective and subjective measures, i. e. objective QoA, subjective QoA, objective QoU and subjective QoU. Subjective QoA reassembles QoE widely discussed in technical literature; QoU provides a measure for quality of experience in a more general, non technical sense. It is proposed that these individual performance parameters provide a better picture of performance and allow stakeholders to make more specific decisions. The paper also introduces a set of sample performance evaluations for the <b>Remote</b> <b>Access</b> Laboratories <b>application</b> to demonstrate how this framework can be applied and how such parameters can be measured...|$|R
40|$|Submitted to SAC 05 This paper explores {{technology}} permitting arbitrary {{application components}} {{to be exposed}} for <b>remote</b> <b>access</b> from other software. Using this, the application and its constituent components can be written without concern for its distribution. Software running in different address spaces, on different machines, can perform operations on the remotely accessible components. This is of utility {{in the creation of}} distributed applications and in permitting tools such as debuggers, component browsers, observers or <b>remote</b> probes <b>access</b> to <b>application</b> components. Current middleware systems do not allow arbitrary exposure of application components: instead, the programmer is forced to decide statically which classes of component will support remote accessibility. In the work described here, arbitrary components of any class can be dynamically exposed via Web Services. Traditional Web Services are extended with a remote reference scheme. This extension permits application components to be invoked using either the traditional pass-by-value semantics supported by Web Services or pass-by-reference semantics. The latter permits the preservation of local call semantics across address space boundaries. Preprin...|$|R
40|$|The {{ability of}} {{students}} to participate in laboratory experiences remotely through appropriate technologies has obvious utility for students who are distant from university campuses for whatever reason. This need is experienced in many faculties and this study reports on a project exploring how <b>Remote</b> <b>Access</b> Laboratory (RAL) technologies developed to enhance engineering education can be used to support learning in non technical faculties such as business, arts and education. To take this step, it is necessary to expand the traditional definitions of RAL leading to a range of interpretations of the concept of <b>remote</b> <b>access</b> laboratories; from the traditional, physical and tangible experiment, as is frequently seen in the engineering applications of RAL, to more conceptual experimentation in any form which is conducted remotely. The study focuses on five projects in the Department of Nursing and Midwifery, the Discipline of Surveying and Spatial Science, and the Faculty of Education. Using a program logic framework approach, the project aims to elucidate the pedagogic logic in a range of learning situations and evaluate the usefulness of RAL in each of them. This paper argues that by expanding the concept of <b>remote</b> <b>access</b> laboratories, <b>applications</b> in non technical disciplines are possible and finds that the use of RAL is limited only by the imagination of the teacher {{and the nature of the}} learning objectives. It also suggests that the concepts that are currently being applied in engineering RAL applications should be re-evaluated focussing on constructive alignment. On the basis of learning affordances they provide, that these technologies deserve to be, and can be, developed for wider application across all disciplines in order to address the needs of target demographics but also because they offer exciting new ways of providing quality learning to all students. ...|$|R
40|$|Operating system hangs, crashes, {{deadlocks}} or panics are {{system failures}} {{from which the}} only option for recovery is a reboot. A reboot regains control over the machine but discards all live application and OS state still present in system memory, while this state might be critical to users or clients of the system. Heavy-weight approaches to preserve such state across failures, e. g., process/VM checkpointing, hot backups, etc., are intrusive to failure-free execution and/or require dedicated machines. In this paper, we describe Backdoors (BD), a novel system architecture that enables applications to survive software failures that render the system unavailable (system hangs, OS crashes, etc.) using a light-weight state extraction mechanism. The architecture builds on two components: (i) a programmable NIC that enables access {{to the memory of}} a machine even when its processor is unavailable due to severe OS failures, and (ii) OS extensions that enable <b>remote</b> <b>access</b> to light-weight <b>application</b> and OS state. We have implemented a Backdoors prototype by modifying the FreeBSD kernel and using Myrinet NICs for <b>remote</b> <b>access.</b> We describe a case study in using Backdoors in cluster-based Internet services in which nodes mutually monitor their liveness and recover client sessions from failed nodes. ...|$|R
40|$|Cloud {{computing}} {{is still}} surfing the hype wave of emerging technologies. Delivering hardware, software and resources {{as a service}} over the network, the paradigm is also attracting {{a good deal of}} excitement in the mobile computing space. In this work, we challenge the proclaimed benefits of mobile cloud computing using smartphones as thin clients to <b>access</b> <b>remote</b> running <b>applications,</b> especially for applications that require contextual intelligence. Our experiments using mobile healthcare applications show that many resource and performance trade-offs exist and that current deployment schemes for these kind of applications are rough around the edges. We show how a modular design philosophy for mobile applications enables more optimal deployment and performance when leveraging cloud technology. status: publishe...|$|R
40|$|We {{present an}} {{algorithm}} {{for determining the}} next best position of a range sensor in 3 D space for incrementally recovering an indoor scene. The method works in five dimensions: the sensor navigates inside the scene and can be placed at any 3 D position and oriented by a pan-tilt head. The method {{is based on a}} mixed exhaustive search and hill climbing optimisation, and outputs the next position in usable time. Results are shown with a simulated mobile range sensor navigating in CAD models of environments (closed rooms). 1 Introduction Environment recovery by a sequence of range scans has had some research in recent years [1] [2]. Its aims are to build a realistic computerised model of an indoor or outdoor scene including surface information and texture, so that a user can navigate inside the model. Such models can be placed on the internet, allowing <b>remote</b> <b>access.</b> Among the <b>applications</b> we can mention are virtual Work supported by the European Union funded SMART II (ERB 4061 PL 9 [...] ...|$|R
40|$|Submitted to EuroSys 2006 Middleware {{technologies}} often {{limit the}} way in which object classes may be used in distributed applications due to the fixed distribution policies that they impose. These policies permeate applications developed using existing middleware systems and force an unnatural encoding of application level semantics. For example, the application programmer has no direct control over inter-address-space parameter passing semantics. Semantics are fixed by the distribution topology of the application, which is dictated early in the design cycle. This creates applications that are brittle with respect to changes in distribution. This paper explores technology that provides control over the extent to which inter-address-space communication is exposed to programmers, in order to aid the creation, maintenance and evolution of distributed applications. The described system permits arbitrary objects in an application to be dynamically exposed for <b>remote</b> <b>access,</b> allowing <b>applications</b> to be written without concern for distribution. Programmers can conceal or expose the distributed nature of applications as required, permitting object placement and distribution boundaries to be decided late in the design cycle and even dynamically. Inter-address-space parameter passing semantics may also be decided independently of object implementation and at varying times in the design cycle, again possibly as late as run-time. Furthermore, transmission policy may be defined on a per-class, per-method or per-parameter basis, maximizing plasticity. This flexibility is of utility in the development of new distributed applications, and the creation of management and monitoring infrastructures for existing applications. Preprin...|$|R
5000|$|IPdiva Server: {{acts as a}} {{centralised}} gatekeeper {{for external}} access requests:single point of entry to the sites hosting the systems or <b>access</b> to published <b>applications,</b> mutual authentication and access control, central repository for all traces of <b>remote</b> <b>access.</b>|$|R
5000|$|<b>Remote</b> <b>access</b> {{security}} features: <b>Remote</b> <b>Access</b> Policies for setup, verify Caller ID (IP {{address for}} VPNs), callback and <b>Remote</b> <b>access</b> account lockout ...|$|R
5000|$|<b>Remote</b> <b>access</b> server - {{provides}} <b>remote</b> <b>access</b> connectivity to dial-up or VPN <b>remote</b> <b>access</b> {{clients that}} use IP, IPX, AppleTalk, or NetBEUI.|$|R
40|$|This paper {{presents}} the design, implementation {{and evaluation of}} Java based interaction proxies to distributed computational object to enable web-based steering of distributed simulations. The interaction proxies {{are part of a}} distributed object infrastructure for computational interaction and steering aimed at transforming traditional batch simulations into interactive ones by closing the loop between the user and the application. This infrastructure addresses three key issues: (1) Definition and deployment of Interaction Objects that encapsulate sensor and actuators for interrogation and control. These objects can be distributed (spanning many processors) and dynamic (be created, deleted, changed or migrated), and can be derived from existing computational data-structures. (2) Definition of a control network interconnecting the interaction objects to enable their discovery, interaction and control and manage dynamic object creation, deletion, and migration. (3) Definition of an Interaction Gateway that enables <b>remote</b> <b>access</b> to the <b>application</b> using Java interaction proxies (mirrors). This paper focuses on the definition of these proxies and their <b>remote</b> <b>access.</b> The proxies are created using interaction interfaces exported by the computational objects and use JNI (Java Native Interface) to directly access these interfaces. Access to the proxies uses Java's Remote Method Invocation techniques. The presented research is part of an ongoing effort to develop and deploy a web-based computational collaboratory that enables geographically distributed scientists and engineers to collaboratively monitor, and control distributed applications. Its goal is to bring large distributed simulations to the scientist/engineers desktop by providing collaborative web-based portals for int [...] ...|$|R
5000|$|CrossLoop <b>Remote</b> <b>Access</b> - subscription-based <b>remote</b> <b>access</b> {{software}} ...|$|R
40|$|We {{study the}} {{conditions}} under which banks offer <b>remote</b> <b>access.</b> Note there exists interaction between location and taste for <b>remote</b> <b>access.</b> Offering <b>remote</b> <b>access</b> is an instrument to (partially) segment depositors according to their taste for that technology. The interaction between location and taste for <b>remote</b> <b>access</b> enhances this effect. Different equilibria emerge as the result of two effects. First, introducing <b>remote</b> <b>access</b> steals depositors from the opponent as the product specification becomes more appealing. Second, deposit rate competition is affected as <b>remote</b> <b>access</b> determines the substitutability of banks. status: publishe...|$|R
50|$|<b>Remote</b> Access: <b>Remote</b> <b>access</b> {{is often}} a point where intruders can enter a system. The logical {{security}} tools used for <b>remote</b> <b>access</b> should be very strict. <b>Remote</b> <b>access</b> should be logged.|$|R
40|$|The author {{studies the}} {{conditions}} under which banks offer <b>remote</b> <b>access.</b> Note there exists interaction between location and taste for <b>remote</b> <b>access.</b> Offering <b>remote</b> <b>access</b> is an instrument to (partially) segment depositors according to their taste for that technology. The interaction between location and taste for <b>remote</b> <b>access</b> enhances this effect. Different equilibria emerge as the result of two effects. First, introducing <b>remote</b> <b>access</b> steals depositors from the opponent as the product specification becomes more appealing. Second, deposit rate competition is affected as <b>remote</b> <b>access</b> determines the substitutability of banks. Copyright 1996 by Blackwell Publishing Ltd. ...|$|R
40|$|Abstract: The current <b>remote</b> <b>access</b> {{software}} {{supported by}} Philips (VRAS) has some limitations in usability and supportability. This document handles about {{the design and}} implementation of an alternative, secure, way to offer <b>application</b> <b>access</b> on intranet based servers directly from the Internet using the Citrix Secure Gateway. Conclusions: Citrix Secure Gateway offers an easy to use, secure a cost effective way to offer <b>access</b> to <b>applications</b> in the intranet from the Internet. © Koninklijke Philips Electronics N. V. 2005 ii...|$|R
40|$|Though storing and exchanging {{simulation}} data is {{a rather}} simple task done by simulation practitioners, it is quite often a challenge as huge quantities of data are not uncommon, and conversion between different formats can be much time consuming. After examining some {{of the needs of}} the telecommunications simulation community, we describe the architecture of a working prototype – CostGlue – {{to be used as a}} general-purpose archiver and converter for large quantities of simulation data. The software architecture of the CostGlue tool is modular therefore allowing further development and contributions from other research sphere of activity. The core of the tool – CoreGlue – is responsible for communicating with the database. It acts as a unified interface for writing to the database and reading from it. Specific functions like import and export of data and different mathematical calculations are represented as a set of self-described modules, which are loaded as necessary. The graphic user interface is introduced as a web application for the simplicity of use and effective <b>remote</b> <b>access</b> to the <b>application.</b> The software package CostGlue is going to be released as free software with the possibility of further development...|$|R
50|$|Application sharing is {{an element}} of <b>remote</b> <b>access,</b> falling under the {{collaborative}} software umbrella, that enables two or more users to <b>access</b> a shared <b>application</b> or document from their respective computers simultaneously in real time. Generally, the shared application or document will be running on a host computer, and <b>remote</b> <b>access</b> to the shared content will be provided to other users by the host user. To transfer one application from one computer to another, The application must reside on only one of the machines connected with each other.|$|R
