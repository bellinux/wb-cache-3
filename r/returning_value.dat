8|5442|Public
50|$|The Societies {{aim is to}} {{grow and}} provide a {{flexible}} and competitive investment and mortgage service whilst <b>returning</b> <b>value</b> to the local community.|$|E
5000|$|Bhaskar Save {{developed}} his system of natural farming after being induced to use chemical fertilizers, which {{after three years}} he realized was not <b>returning</b> <b>value</b> to him or his land. He later commented that: [...] "By ruining the natural fertility of the soil, we actually create artificial 'needs' {{for more and more}} external inputs and unnecessary inputs for ourselves, while the results are inferior and more expensive in every way." ...|$|E
5000|$|On September 30, 2009, Lewis {{announced}} his retirement from Bank of America effective as of December 31, 2009. Lewis released the statement [...] "The Merrill Lynch and Countrywide integrations are on track and <b>returning</b> <b>value</b> already. Our {{board of directors and}} our senior management include more talent, and more diversity of talent, {{than at any time in}} this company's history. We are in position to begin to repay the federal government's TARP investments. For these reasons, I decided now is the time to begin to transition to the next generation of leadership at Bank of America." ...|$|E
5000|$|... {{function}} ReturnHandle takes {{handle h}} returns handle return h endfunction [...] function H2I takes handle h returns integer call ReturnHandle(h) //This sets the last <b>returned</b> <b>value</b> to 'h'. if false then return 0 //This can never occur, so the game uses the last <b>returned</b> <b>value</b> as this function's <b>returned</b> <b>value</b> instead. //It will even return the last <b>returned</b> <b>value</b> as a different type, {{in this case}} an integer. endif endfunction ...|$|R
5000|$|Check the <b>return</b> <b>value</b> of all non-void functions, or cast to void to {{indicate}} the <b>return</b> <b>value</b> is useless.|$|R
40|$|This work {{studies the}} {{performance}} impact of <b>return</b> <b>value</b> prediction on chip multiprocessors that support speculative method-level parallelism (SMLP). Previously in doubt, {{the importance of}} accurate <b>return</b> <b>value</b> prediction is confirmed for general-purpose Java programs. This work also compares the performance of common <b>return</b> <b>value</b> prediction strategies and finds that a realistic strategy can increase performance by 29 %. However, the speculative method-level parallelism environment degrades the accuracy of some common value predictors due to the heavy dependence on predictor update assumptions. A new Parameter Stride (PS) predictor is proposed that complements current <b>return</b> <b>value</b> prediction methods. The PS predictor is tailored for <b>return</b> <b>value</b> prediction in a SMLP environment and overcomes the deficiencies of the standard predictors by predicting based on method arguments. Combining the PS predictor with previous predictors results in 6 % speedup versus hybrid <b>return</b> <b>value</b> prediction and 37 % speedup versus a system with no <b>return</b> <b>value</b> prediction...|$|R
5000|$|... e-gold was {{a digital}} gold {{currency}} founded in 1996. A legal case was brought against e-gold in April 2007 that included violations of 18 U.S. Code § 1960 (Prohibition of unlicensed money transmitting businesses). e-gold vigorously contested the § 1960 charges brought against it in April 2007 {{for more than}} a year. In July 2008, following a ruling from the court that effectively enshrined in case law the Treasury Department's expansion of the definition of [...] "money transmitter", e-gold entered into a plea agreement that detailed actions required to bring the companies into compliance with laws and regulations governing operation of a money transmitting business. Although e-gold complied with all other terms of its plea agreement, it was not able to obtain money transmitting licenses due to its guilty plea. [...] Since <b>returning</b> <b>value</b> to customers could constitute money transmitting without a license, e-gold entered into an agreement in 2010 with the US Government to enable e-gold account holders to claim the [...] "monetized value" [...] of their accounts, collectively valued in excess of 90 million US Dollars.|$|E
40|$|A cloud {{infrastructure}} and Android-based system {{were developed to}} enable amateurs and professionals {{to make use of}} laboratory techniques for remote plant disease detection. The system allows users to upload and analyze plant data as citizen scientists, helping to improve models for remote disease detection in horticultural settings by greatly increasing the quantity and diversity of data available for analysis by the community. Techniques used in research laboratories for remote disease detection are generally not available to home gardeners and small commercial farmers. Lab equipment is cost-prohibitive and experiments highly controlled, leading to models that are not necessarily transferable to the user’s environment. Plant producers rely on expert knowledge from training, experience, and extension service professionals to accurately and reliably diagnose and quantify plant health. Techniques for disease detection using visible and infrared imagery have been proven in research studies and can now be made available to individuals due to advancements in smartphones and low-cost thermal imaging devices. The framework presented in this paper provides an internet-accessible data pipeline for image acquisition, preprocessing, stereo rectification, disparity mapping, registration, feature extraction, and machine learning, designed to support research efforts and to make plant stress detection technology readily available to the public. A system of this kind has the potential to benefit both researchers and plant growers: producers can collectively create large labeled data sets which researchers can use to build and improve detection models, <b>returning</b> <b>value</b> to growers in the form of generalizable models that work in real-world horticultural settings. We demonstrate the components of the framework and show data from a water stress experiment on basil plants performed using the mobile app and cloud-based services...|$|E
40|$|Imagine {{attempting}} {{to explain to}} a visitor, from another era or another planet, the economic rationale behind various institutions in the American economy {{at the start of}} the 21 st century. Few practices seem more difficult to justify to the outsider than the current procedure for the issuance of equity securities. The share price in initial public offerings (IPO’s) often bears little connection to the equating of supply and demand, so that IPO’s are sometimes massively oversubscribed and the share price increases by as much as a factor of five from the offering price to the close of the first day of trading. Shares in these oversubscribed offerings are rationed, not according to willingness to pay, but to favored clients of the underwriting investment banks. Often there is at least the appearance that clients receive their allotments in exchange for <b>returning</b> <b>value</b> to the investment banks in other transactions; and recently there have been allegations that some allotments have been made in exchange for agreements to buy additional shares on the open market after the IPO. While the associated returns foregone by the sellers (i. e., the companies going public) would be easier to justify if the explicit fees for the service were commensurately discounted, the explicit fees charged for IPO’s actually seem quite high, generally a 7 % commission on proceeds from the new shares. The main objective of this paper is not to hammer away at the inefficiencies present in the current system of new equity issuance; nor to attempt to explain what prevents the current system from being swept aside. Rather, this paper seeks to draw from new developments in market designâboth theoretical results and new practices in other sectorsâand to highlight alternative procedures that may be best suited to supplement or replace the current flawed system. ...|$|E
40|$|This work {{studies the}} {{performance}} impact of <b>return</b> <b>value</b> prediction {{in a system}} that supports speculative method-level parallelism (SMLP). A SMLP system creates a speculative thread at each method call, allowing the method and the code from which it is called to be executed in parallel. To improve performance, the <b>return</b> <b>values</b> of methods are predicted in hardware so that no method has to wait for its sub-method to complete before continuing to execute. For Java programs, we find that two-thirds of methods have a non-void return type, and perfect <b>return</b> <b>value</b> prediction improves performance by an average of 44 % compared with a system with no <b>return</b> <b>value</b> prediction. However, the performance of realistic predictors is limited by poor prediction accuracy on integer <b>return</b> <b>values</b> and undesirable update characteristics due to the SMLP environment. A Parameter Stride (PS) <b>return</b> <b>value</b> predictor is proposed to address some of the deficiencies of the standard predictors by predicting based on method arguments. Combining the PS predictor with previous predictors results in 7 % speedup on average versus a system with hybrid <b>return</b> <b>value</b> prediction, and 21 % speedup versus a system with no <b>return</b> <b>value</b> prediction...|$|R
5000|$|... ret pops one <b>return</b> <b>value</b> {{from the}} stack, restores S, E, and C from the dump, and pushes the <b>return</b> <b>value</b> onto the now-current stack.|$|R
40|$|Twenty-year <b>return</b> <b>value</b> {{of annual}} and {{seasonal}} maxima of daily precipitation are calculated from {{a set of}} transiently forced coupled general circulation model simulations. The magnitude and pattern of <b>return</b> <b>values</b> {{are found to be}} highly dependent on the seasonal cycle. A similar dependence is found for projected future changes in <b>return</b> <b>values.</b> The correlation between the spatial pattern of <b>return</b> <b>value</b> changes and mean precipitation changes is found to be low. Hence, the changes in mean precipitation do not provide significant information about changes in precipitation extreme values...|$|R
40|$|I take real {{pleasure}} {{in seeing the}} proceedings of the 12 th International Workshop on Worst-Case Execution Time Analysis online already {{on the day of the}} workshop. This helps WCET’ 12 achieve its goal of facilitating discussion and interaction among participants as well as of <b>returning</b> <b>value</b> to the authors of the works that were accepted for presentation. I also feel personal satisfaction in having achieved the production of these proceedings as a tangible manifestation of the considerable effort that went in making WCET’ 12 happen, and successfully so, in fact. The WCET workshop is a successful series indeed. The research community active in WCET analysis evidently cares for the event, values its venue and atmosphere, and the relevance of its proceedings. In that respect, it is a comparatively easy job to be the program chair for it (hopefully my predecessors would not feel diminished by me saying so!) in as far as the harvesting of valuable contributions goes. I was very pleased and reassured at seeing the whole program committee actively help me disseminate the call for papers, scout for good research projects that would be at the stage of maturity to present their ideas in the workshop, and turn in very thorough reviews. We received 23 good-quality submissions, of which we selected 10 for the program and the proceedings. We had the luxury of being selective, and the opportunity of putting together a solid program that makes ample room for discussion and interaction, which is what the workshop is for in the first place. I welcome all participants to WCET’ 12 in both the physical event, taking place as usual as a satellite event to ECRTS 12, this year on 10 July at the beautiful venue of Scuola Sant’Anna in Pisa, Italy, and the online proceedings, which I hope will get the amount of citations that the authors need for their good work...|$|E
40|$|Commercialisation of {{research}} has increasingly become a desirable activity for many tertiary education institutions (TEIs) across the globe. There is now widespread recognition by all sectors of society that TEIs engagement with research commercialisation will help drive a nation’s innovation system {{and contribute to the}} needs of the economy and society. However, in recent times, the growing accountability agenda for research commercialisation has raised important challenges for TEIs. There are increasing concerns that TEIs have failed to achieve the desired results {{of research}} commercialisation (for e. g. Dahlstrand, 2008; Goldfarb & Henrekson, 2003; Salmi, 2009) as has been anticipated by both public and private entities. Predictably, a broad range of stakeholders are increasingly asking TEIs to justify the use of public resources and to provide a more thorough account of their research outcomes (Fielen, 2007; Gauthier, 2004). There also remains considerable uncertainty amongst TEIs as to the mechanisms by which they are able to leverage the intellectual abilities of their research staff, particularly, given the complex and long-term nature of the commercialisation process. This study draws on the theoretical perspectives of new institutional theory (NIT) and uses three New Zealand TEIs as case studies to explore how public TEIs identify and render accountability in the process of enabling commercialisation of research. Data was collected using a mixed method approach of interviews and a broad range of secondary documents and archival records that covered the period 2002 - 2010. The constructive-interpretive research strategy permitted the simultaneous selection, inductive analysis, and interpretation of contextual data in order to construct emergent themes arising from the real-life context of commercialisation. The study highlights a number of important findings. First, TEIs are embedded in a complex network of institutionalised relationships with normative and cultural-cognitive obligations towards enabling commercialisation of research. These relationships require careful management to help shape TEIs responses to select and use appropriate accountability mechanisms to enable and enhance commercialisation. Second, while research commercialisation has become legitimised in terms of nation building activities, the commercialisation agenda has been potentially undermined by a strong performance based research funding (PBRF) culture. As a consequence, commercialisation remains a marginal activity as TEIs strongly view accountability for research in terms of funding levels. In the main, TEIs do not consider <b>returning</b> <b>value</b> in terms of commercialisation as an obligatory part of accepting funding to support basic research. Finally, new public management (NPM) accountability with a focus on bureaucratic compliance fails to recognise the uncertain, complex, and long-term nature of the research commercialisation process. To avoid NPM tensions, TEIs have ‘decoupled’ from the technical requirements to render accountability for commercialisation performance. Consequently, this is causing legitimating behaviour in TEIs and in fact, accountability for research commercialisation seems to have become a ‘representational faithfulness’ to the rhetoric in the TEIs strategic documents. This research makes important contribution to theory, policy and practice. In regards to theory, the current research contributes through the application of new institutional theory (NIT) to two demanding fields of research and this is the first time NIT has been applied to examine public sector accountability within the context of enabling academic research commercialisation. A conceptual model of accountability has been developed identifying accountability obligations, management of accountability expectations, and discharge of accountability obligations. While most studies are ex post, this framework provides a three stage model to help examine ex ante and ex post accountability. In relation to practice, this study identifies the gap between rhetoric and reality of accountability that seems to have become a characteristic of the accountability environment within which public TEIs operate. While the rhetoric in strategic documents helps legitimise research commercialisation, the accountability practices of commercialisation are not thoroughly embedded, widely accepted, and effective as the rhetoric suggests. The study provides a model for enabling commercialisation of research that helps inform practice from early stage development of a research culture, to setting clear research targets in terms of PBRF goals, to finally establishing commercialisation initiatives. In relation to policy, this study identifies notable tensions between academic research and commercialisation. As a consequence, government needs to become more explicit in articulating its policy on research commercialisation so that TEIs move beyond identifying accountability simply in terms of PBRF goals. The study demonstrates that government policy needs to provide incentives to ensure that academic research and research commercialisation become two important roles of TEIs that complement and reinforce each other. The PBRF policy needs to be redeveloped to recognise research in terms of economic contributions and value adding activities leading to commercial outcomes. There is an urgent need for both government and TEIs to frame policy that encourages the development of a research culture within TEIs that remains sufficiently focussed on successful research commercialisation...|$|E
5000|$|The [...] {{function}} in Lisp expects a form {{to be evaluated}} and executed as argument. The <b>return</b> <b>value</b> of the given form will be the <b>return</b> <b>value</b> of the call to [...]|$|R
50|$|Many {{languages}} allow, {{through one}} mechanism or another, a function to <b>return</b> multiple <b>values.</b> If this is available, the function can be redesigned to <b>return</b> a boolean <b>value</b> signalling success or failure, {{in addition to}} its primary <b>return</b> <b>value.</b> If multiple error modes are possible, the function may instead return an enumerated return code (error code) {{in addition to its}} primary <b>return</b> <b>value.</b>|$|R
50|$|System: Defines {{the void}} type, a <b>return</b> <b>value</b> type for {{a method that}} does not <b>return</b> a <b>value.</b>|$|R
40|$|Speculative method-level {{parallelism}} {{has been}} shown to benefit from <b>return</b> <b>value</b> prediction. In this paper we propose and analyse two compiler analyses designed to improve the cost and performance of a hybrid <b>return</b> <b>value</b> predictor in a Java virtual machine setting. A <b>return</b> <b>value</b> use analysis determines which <b>return</b> <b>values</b> are consumed, and enables us to eliminate 2. 6 % of all non-void dynamic method calls in the SPEC JVM 98 benchmarks as prediction candidates. An extension of this analysis detects <b>return</b> <b>values</b> used only inside boolean and branch expressions, and allows us to safely substitute incorrect predictions for 14. 1 % of <b>return</b> <b>values</b> at runtime, provided all future use expressions are satisfied correctly. We find an average 3. 2 % reduction in memory and up to 7 % increase in accuracy. A second, interprocedural parameter dependence analysis reduces the number of inputs to a memoization-based sub-predictor for 10. 2 % of all method calls, and the combination of both analyses reduces overall memory requirements by 5. 3 %. ...|$|R
40|$|AbstractAccurate <b>return</b> <b>value</b> {{prediction}} {{is a key}} tool for enabling effective speculative method-level parallelism, which will be a standard feature {{in the next generation}} of chip-multiprocessor architectures. In this paper we give some information theoretic measures that indicate intrinsic predictability of method <b>return</b> <b>values.</b> This is {{in stark contrast to the}} current ad-hoc heuristic measures imposed by specific prediction techniques. Our hope is that the application of information theoretic principles to the field of <b>return</b> <b>value</b> prediction should result in new kinds of predictors, and better deployment of existing prediction techniques. The two main contributions of this work are: (i) to show that there is some correlation between information theoretic measures and <b>return</b> <b>value</b> predictor performance; (ii) to highlight some major issues that need to be resolved before information theory can be adopted practically by the <b>return</b> <b>value</b> prediction community...|$|R
50|$|The {{number of}} <b>return</b> <b>values</b> of an {{expression}} equals {{the difference between}} the number of operands in an expression and the total arity of the operators minus the total number of <b>return</b> <b>values</b> of the operators.|$|R
50|$|Subroutines may <b>return</b> <b>values.</b>|$|R
50|$|The subtyping of mutable {{references}} {{is similar}} to the treatment of function arguments and <b>return</b> <b>values.</b> Write-only references (or sinks) are contravariant, like function arguments; read-only references (or sources) are covariant, like <b>return</b> <b>values.</b> Mutable references which act as both sources and sinks are invariant.|$|R
5000|$|... with [...] {{giving the}} return type (i, r, c, b, a as above, and p for no <b>return</b> <b>value).</b> The <b>return</b> <b>value</b> {{has to be}} stored in the {{appropriate}} cell previously. On all types except p, returning will leave this value on the stack.|$|R
50|$|Translation of HRESULT <b>return</b> <b>values</b> into exceptions.|$|R
50|$|With fail-soft alpha-beta, the alphabeta {{function}} may <b>return</b> <b>values</b> (v) {{that exceed}} (v < α or v > β) the α and β bounds set by its function call arguments. In comparison, fail-hard alpha-beta limits its function <b>return</b> <b>value</b> into the inclusive range of α and β.|$|R
5000|$|... /* The {{iterator}} <b>return</b> <b>value.</b> */volatile int i_from_iterator; ...|$|R
5000|$|... void : Used as the {{declaration}} type for the <b>return</b> <b>value</b> of a function, specifies that the function will not <b>return</b> a <b>value.</b> Available in all known drivers.|$|R
5000|$|... #Subtitle level 2: <b>Return</b> <b>value</b> of {{overloaded}} {{assignment operator}} ...|$|R
50|$|In {{the context}} of the C++ {{programming}} language, the <b>return</b> <b>value</b> optimization (RVO) is a compiler optimization that involves eliminating the temporary object created to hold a function's <b>return</b> <b>value.</b> The RVO is particularly notable for being allowed to change the observable behaviour of the resulting program by the C++ standard.|$|R
5000|$|... {{function}} quiescence_search(node, depth) if node appears quiet or node is {{a terminal}} node or depth = 0 <b>return</b> estimated <b>value</b> of node else [...] //One might use minimax or alpha-beta search here... search children of node using recursive applications of quiescence_search <b>return</b> estimated <b>value</b> of children [...] //...and here function normal_search(node, depth) if node is a terminal node <b>return</b> estimated <b>value</b> of node else if depth = 0 if node appears quiet <b>return</b> estimated <b>value</b> of node else <b>return</b> estimated <b>value</b> from quiescence_search(node, reasonable_depth_value) else search children of node using recursive applications of normal_search <b>return</b> estimated <b>value</b> of children ...|$|R
5000|$|... #Subtitle level 3: Using {{a custom}} {{convention}} to interpret <b>return</b> <b>values</b> ...|$|R
5000|$|Structured programming—various block structures, named subroutines {{with local}} {{variables}} and <b>return</b> <b>values</b> ...|$|R
5000|$|... {{specify the}} names and data types of its {{parameters}} and <b>return</b> <b>values</b> ...|$|R
50|$|Expressions in Icon often <b>return</b> {{a single}} <b>value,</b> for instance, x < 5 will {{evaluate}} and succeed if {{the value of}} x is less than 5, or else fail. However several of the examples below rely {{on the fact that}} many expressions do not immediately return success or failure, <b>returning</b> <b>values</b> in the meantime. This drives the examples with every and to; every causes to to continue to <b>return</b> <b>values</b> until it fails.|$|R
5000|$|The <b>value</b> <b>returned</b> {{from the}} main {{function}} becomes the exit status of the process, though the C standard only ascribes specific meaning to two values: [...] (traditionally 0) and [...] The meaning of other possible <b>return</b> <b>values</b> is implementation-defined. In case a <b>return</b> <b>value</b> is not defined by the programmer, an implicit [...] {{at the end of}} the [...] function is inserted by the compiler; this behavior is required by the C++ standard.|$|R
2500|$|... left, right := partition(A, p, lo, hi) [...] // note: {{multiple}} <b>return</b> <b>values</b> ...|$|R
