2|5|Public
40|$|A new {{approach}} to high level synthesis with micro-rollback and self-recovery method is presented. The objective {{of this approach is}} to generate a reliable system from the behavioral descriptions. The approach is formulated as a <b>rollback</b> <b>point</b> insertion problem based on the probability function of being inserted rollback points after the given CDFG is scheduled. This function allows us not only to search the problem space efficiently but also to avoid the exhaustive search...|$|E
40|$|This paper {{presents}} an efficient rollback recovery {{scheme based on}} the optimistic message logging. To speed up the recovery process, the <b>rollback</b> <b>point</b> of the failed process is broadcast and other processes asynchronously make the rollback decision based on the vector time. Asynchronous recovery process usually causes two possible problems: One is the message delivered from an invalid state interval of a process to the valid state interval of another process; {{and the other is}} the message delivered from a valid state interval of a process to the invalid state interval of another process. Both problems may cause recursive rollbacks of a process even with a single failure. Many previous solutions focus on the first problem and the second one is usually handled by blocking of the computation. Unlike the previous solutions, in the proposed scheme, each message carries every known failure information so that both problems can easily be detected. Also, the failure information required for the [...] ...|$|E
30|$|If {{it is not}} {{possible}} to satisfy any constraint during iteration step, <b>rollback</b> is performed: <b>point</b> is shifted in such a way that one of the current active constraints is violated again.|$|R
40|$|International audienceIn calculi for {{modelling}} communication protocols, {{internal and}} external choices play dual roles. Two external choices can be viewed naturally as dual too, as they represent an agreement between the communicating parties. If the interaction fails, the past agreements are good candidates as points where to roll back, {{in order to take}} a different agreement. We propose a variant of contracts with synchronous <b>rollbacks</b> to agreement <b>points</b> in case of deadlock. The new calculus is equipped with a compliance relation which is shown to be decidable...|$|R
40|$|In calculi for {{modelling}} communication protocols, {{internal and}} external choices play dual roles. Two external choices can be viewed naturally as dual too, as they represent an agreement between the communicating parties. If the interaction fails, the past agreements are good candidates as points where to roll back, {{in order to take}} a different agreement. We propose a variant of contracts with synchronous <b>rollbacks</b> to agreement <b>points</b> in case of deadlock. The new calculus is equipped with a compliance relation which is shown to be decidable. Comment: In Proceedings PLACES 2015, arXiv: 1602. 0325...|$|R
5000|$|Ren'Py {{includes}} {{the ability to}} create branching stories, save file systems, <b>rollback</b> to previous <b>points</b> in the story, a variety of scene transitions, DLC, and so on. The engine also allows for movie playback for both full-screen movies and animated sprites, in-engine animation (using the built in [...] "Animation and Translation Language", or ATL), and full animation and customization of UI elements via [...] "Screen Language". Ren'Py scripts have a screenplay-like syntax, and can also include blocks of Python code to allow advanced users to add new features of their own. In addition, tools are included in the engine distribution to obfuscate scripts and archive game assets to mitigate copyright infringement.|$|R
40|$|The use is {{considered}} of massively parallel architectures to execute discrete-event simulations {{of what is}} termed self-initiating models. A logical process in a self-initiating model schedules its own state re-evaluation times, independently of any other logical process, and sends its new state to other logical processes following the re-evaluation. The interest is in the effects of that communication on synchronization. The performance {{is considered}} of various synchronization protocols by deriving {{upper and lower bounds}} on optimal performance, upper bounds on Time Warp's performance, and lower bounds on the performance of a new conservative protocol. The analysis of Time Warp includes the overhead costs of state-saving and <b>rollback.</b> The analysis <b>points</b> out sufficient conditions for the conservative protocol to outperform Time Warp. The analysis also quantifies the sensitivity of performance to message fan-out, lookahead ability, and the probability distributions underlying the simulation...|$|R

