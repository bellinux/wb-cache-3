19|268|Public
5000|$|T <b>Reason</b> <b>code</b> (D {{for direct}} call, A for all calls forwarded, B for busy forwarding, U for unknown) ...|$|E
5000|$|With each {{chargeback}} {{the issuer}} selects and submits a numeric <b>reason</b> <b>code.</b> This feedback may help the merchant and acquirer diagnose errors and improve customer satisfaction. Reason codes vary by bank network, but fall in four general categories: ...|$|E
50|$|An {{activity}} relationship chart (ARC) is a tabular {{means of}} displaying the closeness rating among all pairs of activities or departments. In an ARC {{there are six}} closeness ratings which may be assigned to each pair of departments, as well as nine reasons for those ratings (each is assigned by a <b>reason</b> <b>code).</b>|$|E
50|$|The InfoCenter {{has a full}} {{write-up}} of each {{along with}} parameter lists and return <b>code</b> (RC) and <b>reason</b> <b>codes</b> (RSN). Search on cdat_olaapis.|$|R
50|$|In {{addition}} to these releases, there are other re-released compilations (Hardcore Vol. 1-5) featuring bands such as Toxic <b>Reasons,</b> <b>Code</b> of Honor, and Negative Trend.|$|R
40|$|This {{appendix}} {{contains the}} <b>reason</b> <b>codes</b> used for Rejects, Messages, and DKs. Please note: • The messaging layouts and specifications for Pool Netting use MBS messaging specifications as the baseline. • The codes that are shaded in blue (or gray {{if you are}} using a black & white printer) are either new codes introduced for Pool Netting or codes from other FICC product lines (DVP and CMU). • If the codes are not shaded, they are from existing MBS messaging specifications being reused for Pool Netting. • Going forward, new <b>reason</b> <b>codes</b> may be added as needed...|$|R
5000|$|Visa Chargeback <b>reason</b> <b>code</b> 76 {{explicitly}} covers {{situations where}} the [...] "Cardholder was not advised that Dynamic Currency Conversion (DCC) would occur" [...] or [...] "Cardholder was refused the choice of paying in the merchant’s local currency". Customers have a strong chance of successfully disputing such transactions, especially in {{situations where the}}y pay {{with a credit card}} and where Verified by Visa or Securecode is not involved.|$|E
50|$|The ASCII {{character}} set (and, more generally, ISO 646) contains exactly 94 graphic non-whitespace characters, which form a contiguous range of code points. These codes (0x21-0x7E, as corresponding high bit set bytes 0xA1-0xFE) {{also used in}} various multi-byte encoding schemes for languages of East Asia, such as ISO 2022, EUC and GB 2312. For this <b>reason,</b> <b>code</b> pages of 942 and even 943 code points were common in East Asia in 1980s-1990s.|$|E
50|$|The Central Movement Alert List (CMAL) is an {{electronic}} watch list, containing information about individuals who pose either an immigration or national security {{concern to the}} Australian Government {{as well as information}} on lost, stolen or fraudulent travel documents. CMAL comprises two databases, the Person Alert List (PAL) and the Document Alert List (DAL). The PAL database stores the biographical details of identities of concern and DAL is a list of lost, fraudulent or stolen travel documents. PAL records are categorised according to the reason for listing the identity—the alert <b>reason</b> <b>code</b> (ARC). There are 19 ARCs with each being categorised as high, medium or low risk.|$|E
40|$|This paper {{illustrates}} the dedicated Scorecard element {{introduced in the}} 4. 1 specification of the PMML standard, including the various design and computational options available for returning <b>reason</b> <b>codes</b> alongside each computed score. The paper is intended to help both producers and consumers of scorecards as PMML documents. Categories and Subject Descriptor...|$|R
40|$|Reports. Each sample {{report is}} {{introduced}} with a definition table that lists the Purpose, Access, Clearing Source Book Cross-Reference, and Timing requirements. Reports can be printed {{only from the}} Report Center. Also included in this guide are various MBS code tables (e. g., Agency <b>codes,</b> DK <b>Reason</b> <b>codes,</b> and Trade Type codes). This guide assumes that the reader has a general knowledge of mortgage-backed securities processing. For additional information on a specific Clearing function, refer to the MBS...|$|R
50|$|RFC 3463 {{describes}} the codes used {{to indicate the}} bounce <b>reason.</b> Common <b>codes</b> are 5.1.1 (Unknown user), 5.2.2 (Mailbox full) and 5.7.1 (Rejected by security policy/mail filter).|$|R
50|$|High-level {{languages}} {{intend to}} provide features which standardize common tasks, permit rich debugging, and maintain architectural agnosticism; while low-level languages often produce more efficient code through optimization {{for a specific}} system architecture. Abstraction penalty is the border that prevents high-level programming techniques from being applied in situations where computational limitations, standards conformance or physical constraints require access to low-level architectural resources (fi, response time(s), hardware integration). High-level programming exhibits features like more generic data structures/operations, run-time interpretation, and intermediate code files; which often result in execution of far more operations than necessary, higher memory consumption, and larger binary program size. For this <b>reason,</b> <b>code</b> which needs to run particularly quickly and efficiently may {{require the use of}} a lower-level language, even if a higher-level language would make the coding easier. In many cases, critical portions of a program mostly in a high-level language can be hand-coded in assembly language, leading to a much faster, more efficient, or simply reliably functioning optimised program.|$|E
50|$|As {{described}} above, {{this alternative}} to backflushing has a self-correcting property: the shop-floor stock is always {{related to a}} certain production order, onto which all the consumed materials were actually issued. On the other hand, backflushing by its very definition can never be self-correcting and should only be used when corrections are rarely needed. An objection {{can be made with}} the above described alternative that scrap is not reported with a <b>reason</b> <b>code,</b> or broken out separately from other forms of non-standard usage. But how accurate is scrap reporting in an environment without inventory accuracy? Better to settle for inventory accuracy and worry about scrap later as a separate issue. Option: implement a separate scrap analysis protocol unrelated to inventory transactions. Scrapped parts are segregated for subsequent inspection, quality data recording and possible rework. In both cases, scrapped parts are already removed from inventory {{at the end of the}} manufacturing cycle (presumably by returning fewer components to stores). Therefore, an inventory transaction is only needed when parts are deemed acceptable upon inspection, or after a rework operation is performed. Scrap reporting can also be done by using data from the Process control system and/or Manufacturing Execution System. Usually such a system exists to some degree in any firm, even if it is not called PCS or MES and even if it is used eventually only for keeping data regarding personnel performance and piecework, as a basis for calculating the salary of the workers. Such a system could be extended so that each worker reports also the scrapped parts.|$|E
40|$|Modifying Networking {{transmission}} schedules Enhance existing Networking {{records to}} further support the reconciliation of omnibus accounts Enhance the Standardized Data Reporting (SDR) records Add an Underlying Firm Symbol (UFS) to existing records Enhance existing records to support additional 529 account processing Add an additional ToRA reject <b>reason</b> <b>code</b> The Networking transmission schedule changes will impact the following files...|$|E
5000|$|If {{the body}} of source code is copied to another {{computer}} then it is sufficient to re-run [...] (which runs [...] ) and [...] (For this <b>reason</b> source <b>code</b> using Autotools is normally distributed without the files that [...] generates.) ...|$|R
30|$|Peirce’s sign is a {{holistic}} and relational entity {{that does not}} subscribing to the ontology of separateness and Cartesian dualism. It suggests a synergy of “the material” and “the conceptual”. Of course, Peirce’s semiotics also has a schematic understanding: while meaning is of one piece, within it, the three inseparable components can be noticed and analysed in relation to each other. For empirical and practical <b>reasons,</b> <b>coding</b> in the IG approach introduced here is led {{by focusing on the}} researcher’s interpretation of the three components of Peirce’s semiotic sign, its distinct material (physical, sensed) affordances (Pikkarainen, 2014) and how they are related to and therefore melded with socio-cultural and historical particularities of the context.|$|R
40|$|This present {{research}} is conducted {{to find out}} the code switching phenomenon which is produced by the supporting male character named Kell in the novel Supernova: Akar. This research is aimed to investigate the types of code switching and also the <b>reasons</b> of <b>code</b> switching produced by Kell. The writer mainly bases her research on the theories from Holmes (1992), Hoffmann (1991), Stockwell (2002), and Wardhaugh (2006). This research is a descriptive one. The writer got the data from the novel Supernova: Akar page 49 - 89 and 163 - 194, and she took only Kell?s statements. The writer used some steps in analyzing the data. First, she read the novel. Second, she retyped each section. Third, she identified all utterances of the selected character, i. e. Kell. Last, she identified the code switching occurrence in each complete utterance. After the writer had analyzed all Kell?s utterances, the writer found several findings. Kell produced two types and three <b>reasons</b> of <b>code</b> switching. The types of code switching were situational code switching and metaphorical <b>code</b> switching. The <b>reasons</b> of <b>code</b> switching were status, topic, and affective function reasons...|$|R
40|$|Many program {{maintenance}} tools rely on traditional parsing techniques to obtain syntactic level {{models of the}} code being maintained. When, for some <b>reason,</b> <b>code</b> cannot be parsed, software maintainers are forced {{to fall back on}} ad hoc tools and techniques, such as grep. As an alternative, hierarchical lexical analysis augmented with simple data structures can be used to extract an approximation of the abstract syntax for a source file. Experiments indicate that such an approach is feasible and produces results comparable to those obtained using a parser...|$|E
40|$|A {{supply chain}} {{is the system}} of organizations, people, technology, activities, {{information}} and resources involved in moving a product or service from supplier to customer. In Supply Chain Demand planning is a critical business process that impacts Fast Moving Consumer Goods (FMCG) companies ’ ability to manage their value chain business performance. Revenues, costs and asset utilization are all affected by the quality, timeliness and accuracy of demand planning. Cleaning History and <b>Reason</b> <b>Code</b> Analysis offer new solutions that can improve the demand planning process and yield business results. A demand planning methodology and few applications have been shown here. The potential of this Demand Planning Methodology {{is to improve the}} certainty of demand planning decision making of a FMCG company. This methodology helps to maintain less excess and shortage quantity over the supply chain. Hence save the value lost and improve the Supply Chain Efficiency...|$|E
40|$|This thesis {{analyzes}} the contract modifications on 135 Military Construction (MILCON) projects {{administered by the}} U. S. Naval Facilities Engineering Command (NAVFAC). Data for this study came from projects from 9 of the 10 Engineering Field Divisions (EFD' s) /Engineering Field Activities (EFA' s) that makeup the NAVFAC organization. Based {{on the results of}} the analysis observations were made regarding the performance of the EFD/EFA's in major areas such as claims, value engineering, scope changes and A-E liability modifications. Major differences between the performance of the individual EFD/ EFA's and NAVFAC as a whole are also addressed. Lastly, the relationship between the Facility Category Code of the proposed structure or building and the project's modification rate is analyzed. The criteria used for the comparative analysis of the EFD/EFA's was: modification <b>reason</b> <b>code</b> assigned, trade affected by the modification, modification cost and the project's modification rate. Findings and conclusions are presented {{based on the results of}} the analysis. (MM) [URL]...|$|E
40|$|This {{research}} {{investigates the}} use of code mixing in social media networking (Facebook) by Indonesian youngsters. The study aims to describe 1) the types of code mixing and 2) the <b>reasons</b> of using <b>code</b> mixing in social media networking (Facebook) by Indonesian youngsters. This research applies descriptive qualitative method. The data of this research are Indonesian – English code mixing in Indonesian Facebook users posting and the information of the <b>reasons</b> of using <b>code</b> mixing. The data are taken from the Indonesian Facebook users posting and interviewing by chatting. The way to collect data is observation and documentation method. The data are analyzed base on the linguistic form of code mixing by Suwito’s theory and the <b>reasons</b> of <b>code</b> mixing by Hockett’s theory. The results show that there are six types of linguistic forms of code mixing consist of 48 data or 63, 16...|$|R
2500|$|Many {{groups of}} people have spoken out against fluoridated {{drinking}} water, for reasons such as the neurotoxicity of fluoride or the damage fluoride can do as fluorosis. Fluorosis is a condition resulting from the overexposure to fluoride, especially {{between the ages of}} 6nbsp&months and 5nbsp&years, and appears as mottled enamel. [...] Consequently, the teeth look unsightly, although the incidence of dental decay in those teeth is very small. Where fluoride is found naturally in high concentrations, filters are often used to decrease the amount of fluoride in water. For this <b>reason,</b> <b>codes</b> have been developed by dental professionals to limit the amount of fluoride a person should take. These codes are supported by the American Dental Association and the American Academy of Pediatric Dentistry; ...|$|R
50|$|For {{historical}} <b>reasons,</b> {{the source}} <b>code</b> of the libdrm library is maintained {{under the umbrella}} of the Mesa project.|$|R
40|$|Modifications, {{or change}} orders, in Navy {{construction}} contracts are a seemingly inevitable fact of life. In this report I analyzed nearly 8400 modifications in over 2200 completed Navy construction contracts from Southern Division of the Naval Facilities Engineering Command {{to identify the}} most frequent and expensive categories. Using the modification <b>reason</b> <b>code,</b> the modifications were divided into 20 categories {{and the effect of}} each of these categories was determined quantitatively. The data, which I found was not normally distributed, was run three ways: (1) Unadjusted; (2) Adjusted for planned or expected modifications; (3) Adjusted for planned or expected modifications and terminated contracts. The third way is the most representative of a "typical" contract and the modifications with the largest effect on contract price are: (1) Unforeseen Conditions, 2. 65 % increase over the total of all contract prices; (2) Design Changes, 1. 82 % increase; (3) Customer Requested Changes, 1. 64 % increase. Overall, modifications increased the average contract price by 7. 78 %, justifying the customary practice of including a 10 % contingency in funding estimates. I also report on several problems in the use of modification reason codes that effect the analysis, though not significantly[URL]...|$|E
40|$|Unpostable {{transactions}} are those transactions which cannot be posted to the Master File. A transaction which fails to post to an account at MCC {{is returned to}} the Campus for corrective action. Each SC is responsible for maintaining a complete record on tape of all unresolved unpostables originating from the SC. New unpostable items are added and corrected items are deleted from this tape. Each week a Martinsburg Computing Center created unpostable tape is received at the SC. From this tape real-time is updated and information can be obtained via GUF Command Codes. Additionally, an Unpostable Register and several control listings are generated and maintained to insure the later correction or nullification of the unpostable items. Unpostable Codes (UPC) identify the condition which caused the transaction to be unpostable. See IRM 3. 12. 179 (SC Error Resolution of IMF and BMF Unpostables) for additional information. 3 Unpostable Codes- IMF All IMF Unpostable Codes (UPC) will be three numeric positions. There {{will also be a}} 1 position <b>Reason</b> <b>Code.</b> Comprehensive unpostable code descriptions are found in the sections referenced for each unpostable with the exception of various UPC 29 X. Any line marked with # is for official use onl...|$|E
40|$|Part 5 : Test OptimizationInternational audienceCode {{coverage}} is usually {{used as a}} measurement of testing quality and as adequacy criterion. Unfortunately, code {{coverage is}} very sensitive to modifications of the code structure, and, therefore, the same test suite can achieve different degrees of coverage on the same program written in two syntactically different ways. For this <b>reason,</b> <b>code</b> coverage can provide the tester with misleading information. In order to understand how a testing criterion is affected by code structure modifications, we introduce a way to measure the sensitivity of coverage to code changes. We formalize the modifications of the code structure using semantic preserving code-to-code transformations and we propose a framework to evaluate coverage robustness to these transformations, extending actual existing coverage criteria. This allows us to define which programs and which test suites can be considered robust {{with respect to a}} certain set of transformations. We can identify when the obtained coverage is fragile and we extend the concept of coverage criterion by introducing an index that measures the fragility of the coverage of a given test suite. We show how to compute the fragility index and we evidence that also well-written industrial code and realistic test suites can be fragile. Moreover, we suggest how to deal with this kind of testing fragility...|$|E
40|$|This {{research}} aims {{to identify}} the linguistic forms of code mixing used in Cosmo Girl magazine and to explain the <b>reason</b> of <b>code</b> mixing in Cosmo Girl Magazine. This is a qualitative description research. This research using documentation method to get the data. The data are the english word in Cosmo Girl Magazine {{in the form of}} words and phrases. The source of data is Cosmo Girl magazine published on December 2006. To answer those problems this research employs morphological and syntactical form of code mixing and the <b>reason</b> using <b>code</b> mixing uses ohoiwutun's theory that breaks those reason into need filling motives, prestige filling motives and other reason. Other reason are classified into three, respect, to refine and to give information. The result of this study show that first, there are 73 data of morphological forms that breaks into single word 37 data, compound word 36 data and syntactical forms that break into 36 data of noun phrase, 9 data of verb phrase, and 1 datum of 1 adjective phrase. Second, the <b>reason</b> using <b>code</b> mixing is need filling motives 17 data, prestige filling motive 3 data, and other 99 data. Other reason breaks into three, to respect 1 datum, to refine 1 datum and giving information 99 data...|$|R
50|$|The Wabun code (Japanese text in Morse code) {{is a form}} of Morse code used to send Japanese text. Unlike International Morse Code, which {{represents}} letters of the Latin script, in Wabun each symbol represents a Japanese kana. For this <b>reason,</b> Wabun <b>code</b> is also sometimes called Kana code.|$|R
3000|$|Straightforward {{application}} of the SIS algorithm {{is no longer possible}} for two <b>reasons.</b> First, the <b>code</b> constraint prohibits to draw samples from [...]...|$|R
40|$|Abstract—Code {{coverage}} is usually {{used as a}} measurement of testing quality and as adequacy criterion. Unfortunately, code {{coverage is}} very sensitive to modifications of the code structure, and, therefore, we can achieve {{the same degree of}} coverage with different testing effort by writing the same program in syntactically different ways. For this <b>reason,</b> <b>code</b> coverage can provide the tester with misleading information. In order to understand how a testing criterion is affected by code structure modifications, we have introduced a way to measure the sensitivity of coverage to code changes by means of code-to-code transformations. However the manual execution of the robustness analysis is tedious, time consuming and error prone. In order to solve these issues we present AURORA, a tool that automates the robustness analysis process and leverages the capabilities offered from several existing tools. AURORA has an extendible architecture that concretely supports the tester in the execution of the robustness analysis. Due to this extendible architecture, each user can personalize the robustness analysis to his/her needs. AURORA allows the user to add new transformations by using TXL, which is a programming language specifically designed to support source transformation tasks. It performs the coverage evaluation by using existing code coverage tools and is based {{on the use of the}} JUnit framework...|$|E
40|$|Abstract. Code {{coverage}} is usually {{used as a}} measurement of testing quality and as adequacy criterion. Unfortunately, code {{coverage is}} very sensitive to modi cations of the code structure, and, therefore, the same test suite can achieve di erent degrees of coverage on the same program written in two syntactically di erent ways. For this <b>reason,</b> <b>code</b> coverage can provide the tester with misleading information. In order to understand how a testing criterion is a ected by code structure modi cations, we introduce a way to measure the sensitivity of coverage to code changes. We formalize the modi cations of the code structure using semantic preserving code-to-code transformations and we propose a framework to evaluate coverage robustness to these transformations, extending actual existing coverage criteria. This allows us to de ne which programs and which test suites can be considered robust {{with respect to a}} certain set of transformations. We can identify when the obtained coverage is fragile and we extend the concept of coverage criterion by introducing an index that measures the fragility of the coverage of a given test suite. We show how to compute the fragility index and we evidence that also well-written industrial code and realistic test suites can be fragile. Moreover, we suggest how to deal with this kind of testing fragility. ...|$|E
40|$|Throughout the {{foreclosure}} process, you must monitor {{and protect the}} condition of the property. When you determine that a property is distressed, you must act promptly and in a responsible manner to protect both your interests and ours. This quick reference outlines the activities you must perform when you become aware of a distressed property. Please ensure that your foreclosure and bankruptcy representatives and other staff who work with distressed properties have a copy of this quick reference and that they refer to it for all Freddie Mac mortgages. Refer to Sections 67. 27, 67. 28, and Chapter 68 of the Single-Family Seller/Servicer Guide (Guide) for additional information on distressed properties. If you have any questions about managing distressed properties, please contact (800) FREDDIE. What Is a Distressed Property? A distressed property is real property that has sustained significant physical deterioration or whose value has been significantly affected by physical deterioration. A property may also become distressed due to abandonment or a natural or man-made disaster. A distressed property is one that: Requires substantial repairs, or Has been condemned by a local authority, or Poses a risk of property ownership to us Examples of distressed properties include, {{but are not limited to}} properties that have been: Damaged from natural or man-made disasters Abandoned and are deteriorating due to vacancy, waste and/or lack of utilities Affected by environmental hazards such as oil or chemical spills, toxic waste or other poisons Reporting a Distressed Property to Us Report all mortgages on distressed properties that are 30 or more days delinquent to us via Electronic Default Reporting (EDR) within the first three business days of the month following the month in which you identified the problem. Use default <b>reason</b> <b>code</b> 011 (property problem) and the appropriate occupancy code. Refer to the EDR Quick Reference Guide for additional information. If the property has a risk of ownership, you must report the mortgage to us, even if it is not delinquent. To do this, submit the following documentation to us within three business days of identifying the risk...|$|E
50|$|In April 2017 arkOS {{has been}} discontinued, {{with the lack}} of {{resources}} as the principal <b>reason.</b> The source <b>code</b> remains available on GitHub.|$|R
5000|$|International Classification of Primary Care (ICPC-2), {{as well as}} {{procedure}} codes; ICPC-2 {{also contains}} diagnosis <b>codes,</b> <b>reasons</b> for encounter (RFE), and process of care.|$|R
40|$|Key words: sociolinguistics, code {{switching}}, lecturerThis {{study is}} aimed {{to find out}} the code switching used by lecturers in the Study Program of English Literature of Universitas Brawijaya. There were three problems of the study namely: (1) what are the types of code switching used by lecturers; (2) what are the <b>reasons</b> of <b>code</b> switching used by lecturers; and (3) what are the students 2 ̆ 7 perspective toward the code switching used by lecturers. This study used qualitative approach since the data being analyzed were {{in the form of the}} lecturers 2 ̆ 7 utterances when explaining the lesson in the classrooms. In achieving the purposes of the study, the writer applied theories of types and <b>reasons</b> of <b>code</b> switching by Hoffmann (1991). The writer found four types of code switching used by the lecturers such as intra-sentential (78. 1...|$|R
