22|7585|Public
50|$|There are a {{large number}} of alloys within this family, one {{standard}} <b>reference</b> <b>listing</b> over twenty.|$|E
50|$|The list of {{open-source}} components used by {{the different}} releases of WebOS, {{as well as the}} source code of and patches applied to each component, is available at the Palm Open Source webpage. This page also serves as a <b>reference</b> <b>listing</b> of the versions of WebOS that have been publicly released.|$|E
5000|$|In February 2013, Hill {{was interviewed}} by Huffington Post writer Lee Speigel {{in her role as}} a science writer {{regarding}} her analysis of Dr. Melba Ketchum's [...] "Sasquatch Genome Project" [...] and its publication in the DeNovo Journal of Science, which Ketchum acquired for the stated purpose of publishing her research into alleged DNA evidence of sasquatch or [...] "Bigfoot." [...] In 2013, Hill authored a chronology and analysis of the Ketchum Bigfoot project for Skeptical Briefs, which assembled a comprehensive <b>reference</b> <b>listing</b> of the project as well as a special report on the subject for Skeptical Inquirer.|$|E
40|$|An {{alphabetical}} <b>list</b> of <b>references</b> {{is placed}} {{at the end of}} your assignment. This list gives the full publication details of each source you cited in your assignment so that your reader can consult the same sources that you have used. Use this information as a guide: 1. <b>Reference</b> <b>list</b> or bibliography? 2. Analysis of <b>reference</b> <b>list</b> examples 3. Capitalisation styles in reference entries 4. Formatting the <b>reference</b> <b>list</b> 5. Example <b>reference</b> <b>list</b> 1. <b>Reference</b> <b>list</b> or bibliography? A <b>REFERENCE</b> <b>LIST</b> is a list of all the sources that you have used as in-text references in your assignment. A BIBLIOGRAPHY is a wider list of reading that includes both in-text references and other sources which may have informed your thinking on the topic, but may not have been placed as an in-text reference in your assignment. Make sure you know whether a <b>reference</b> <b>list</b> or bibliography is required for the unit you are studying. 2. Analysis of <b>reference</b> <b>list</b> examples When you write your <b>reference</b> <b>list,</b> you need to analyse the patterns of each reference type. Some basic details that you need to look for are authors/no authors, dates/no dates, titles, editions and publishers, pages, DOIs or /URLs, depending on the type of reference you need...|$|R
40|$|In Wen et al. (May 1996, 183 : 2271 - 2282), two entries were mistakenly deleted {{from the}} <b>reference</b> <b>list</b> {{and the list}} was {{consequently}} renumbered. This caused many of the citations within the text {{to refer to the}} incorrect entries on the <b>reference</b> <b>list.</b> The corrected <b>reference</b> <b>list</b> appears below and should he used in place of the version that appeared in the original issue...|$|R
30|$|To {{calculate}} {{recall and}} precision, we considered that true positives are instances (classes or methods) {{present in the}} code smell <b>reference</b> <b>list</b> that are also reported by the tool being assessed. False positives are instances that are not present in the <b>reference</b> <b>list,</b> but they were reported by the tool. False negatives are instances present in the <b>reference</b> <b>list</b> that were not reported by the tool. Finally, true negatives are instances that are not present in the <b>reference</b> <b>list</b> and were also not reported by the tool. Therefore, recall {{is the number of}} true positives divided by the number of instances in the <b>reference</b> <b>list</b> (true positives + false negatives), while precision in the number of true positives divided by the number of instances reported by the tool (true positives + false positives).|$|R
50|$|The {{advent of}} the {{internet}} has reduced the one-time dominant yellow pages to an arcane listing {{that does not include}} cell phones. Victim use of the internet as the phone and location <b>reference</b> <b>listing</b> has virtually rendered the yellow pages as extinct, especially in urban areas. The Group Matrix model leads the field with a Digital Division supplementing the broad reach of its Television Division. Legal advertisers with large visibility can now pinpoint clients in a variety of demographics and geographies with messages that form a synergism with their Broadcast and Cable images. While there are thousands of “internet” advertising firms and many TV producers, the combination of which Group Matrix is the prime example are the most effective for increasing client base.|$|E
40|$|A users's {{manual for}} the {{computer}} programs involved {{in a study of}} the space tug docking simulation is presented. The following subjects are considered: (1) subroutine narratives, (2) program elements, (3) system subroutines, and (4) Univac 1108 cross <b>reference</b> <b>listing.</b> The functional and operational requirements {{for the computer}} programming are explained...|$|E
40|$|Abstract. This paper {{presents}} an algorithm for distributed garbage collection and outlines its implementation within the Network Objects system. The algorithm {{is based on}} a <b>reference</b> <b>listing</b> scheme, which is augmented by partial tracing in order to collect distributed garbage cycles. Processes may be dynamically organised into groups, according to appropriate heuristics, to reclaim distributed garbage cycles. The algorithm places no overhead on local collectors and suspends local mutators only brie y. Partial tracing of the distributed graph involves only objects thought {{to be part of a}} garbage cycle: no collaboration with other processes is required. The algorithm o ers considerable exibility, allowing expediency and fault-tolerance to be traded against completeness...|$|E
40|$|Typically {{you will}} not submit your <b>reference</b> <b>list</b> with your resume. Bring them to your job {{interview}} or send your <b>reference</b> <b>list</b> upon the employer’s request. Contact your <b>references</b> prior to <b>listing</b> them on your <b>reference</b> <b>list</b> to confirm they {{will serve as a}} positive reference for you. Email a copy of your resume to your references, so they have a comprehensive list of your experience, education, and accomplishments. Select professional references that know your skills and abilities well, including supervisors from jobs, internships, student organizations, and volunteer experiences. Professors can also be good references...|$|R
40|$|The <b>reference</b> <b>list</b> (<b>References)</b> is a <b>list</b> {{of sources}} {{used in the}} {{research}} paper. Sources on the <b>reference</b> <b>list</b> must have been cited in the paper’s text. References specifically support the paper and provide the information needed to identify and locate each source. The <b>reference</b> <b>list</b> appears {{at the end of}} the paper, is double-spaced within and between sources, and is arranged alphabetically by the surname of the first author. Sources without authors are arranged alphabetically by title within the same list. The first line of each reference is set flush left and second and subsequent lines are indented (hanging indent). Italics are preferred over the use of underlining. Space once after all punctuation...|$|R
50|$|<b>Reference</b> <b>List</b> of Railway Letter Post Stamps, 1901.|$|R
40|$|The {{algorithm}} {{is based on}} a <b>reference</b> <b>listing</b> scheme augmented by partial tracing in order to collect distributed garbage cycles. Our collector is designed to be flexible thereby allowing efficiency, expediency and fault-tolerance to be traded against completeness. Processes may be dynamically organised into groups, according to appropriate heuristics, in order to reclaim distributed garbage cycles. Unlike previous group-based algorithms, multiple concurrent distributed garbage collections that span groups are supported: when two collections meet they may either merge, overlap or retreat. The algorithm places no overhead on local collectors and suspends local mutators only briefly. Partial tracing of the distributed graph involves only objects thought {{to be part of a}} garbage cycle: no collaboration with other processes is required...|$|E
40|$|Abstract. This paper {{presents}} a new algorithm for distributed garbage collection and outlines its implementation within the Network Objects system. The algorithm {{is based on}} a <b>reference</b> <b>listing</b> scheme augmented by partial tracing in order to collect distributed garbage cycles. Our collector is designed to be exible thereby allowing e ciency, expediency and fault-tolerance to be traded against completeness. Processes may be dynamically organised into groups, according to appropriate heuristics, in order to reclaim distributed garbage cycles. Unlike previous groupbased algorithms, multiple concurrent distributed garbage collections that span groups are supported: when two collections meet they may either merge, overlap or retreat. The algorithm places no overhead on local collectors and suspends local mutators only brie y. Partial tracing of the distributed graph involves only objects thought tobe part of a garbage cycle: no collaboration with other processes is required...|$|E
40|$|This paper {{presents}} an algorithm for distributed garbage collection and outlines its implementation within the Network Objects system. The algorithm {{is based on}} a <b>reference</b> <b>listing</b> scheme, which is augmented by partial tracing in order to collect distributed garbage cycles. Processes may be dynamically organised into groups, according to appropriate heuristics, to reclaim distributed garbage cycles. The algorithm places no overhead on local collectors and suspends local mutators only briefly. Partial tracing of the distributed graph involves only objects thought {{to be part of a}} garbage cycle: no collaboration with other processes is required. The algorithm offers considerable flexibility, allowing expediency and fault-tolerance to be traded against completeness. Keywords: distributed systems, garbage collection, algorithms, termination detection, fault tolerance 1 Introduction With the continued growth of interest in distributed systems, designers of languages for distributed syste [...] ...|$|E
40|$|Objective:The study’s {{purpose was}} to answer two {{research}} questions: (1) In the opinion of social work journal editors, how important is <b>reference</b> <b>list</b> accuracy? and (2) Who is primarily responsible for the accuracy of <b>reference</b> <b>lists</b> published in social work journals? Method: A sample of 119 authors and 26 journal editors was surveyed to ascertain {{their views on the}} above questions and additional items. Results: Regarding the importance of <b>reference</b> <b>list</b> accuracy, editors’ responses (Likert scale) averaged between moderately and extremely important. Fifty-three percent of responding editors and 36. 5...|$|R
50|$|Similarly, two {{authors are}} bibliographically coupled if the {{cumulative}} <b>reference</b> <b>lists</b> {{of their respective}} oeuvres each contain {{a reference to a}} common document, and their coupling strength also increases with the citations to other documents that their share. If the cumulative <b>reference</b> <b>list</b> of an author's oeuvre is determined as the multiset union of the documents that the author has co-authored, then the author bibliographic coupling strength of two authors (or more precisely, of their oeuvres) is defined as the size of the multiset intersection of their cumulative <b>reference</b> <b>lists,</b> however.|$|R
40|$|A typical {{psychology}} {{article contains}} 3 to 9 self-citations, {{depending on the}} length of the <b>reference</b> <b>list</b> (10 % of all citations). In contrast, cited colleagues rarely receive more than 3 citations. This is what we call the self-citation bias: the preference researchers have to refer to their own work when they guide readers to the relevant literature. We argue that this finding is difficult to understand within the traditional, science-based view, which says that <b>reference</b> <b>lists</b> are there to help the reader. It is more easily understood within a social view of <b>reference</b> <b>lists</b> which argues that scientists form groups and that <b>reference</b> <b>lists</b> partly reflect well-known phenomena in social psychology and group dynamics. Within this view, the self-citation bias is a self-serving bias motivated by self-enhancement and self-promotion. </span...|$|R
40|$|The {{purpose of}} this paper is to promote an {{understanding}} of and research into a new category of weapons, designated nonlethal by military services, and less than lethal or less lethal by law enforcement agencies. The intent is to create an initial term and <b>reference</b> <b>listing</b> to help support joint force and dual use initiatives focused on identifying the potential drawbacks of integrating nonlethal weapons into our military services and law enforcement agencies. The paper is split into two sections: a list of terms that describes nonlethal weapons along with the concepts both surrounding and inhibiting their use, and a comprehensive listing of references to facilitate further research. Nonlethal weapons are listed under the categories of acoustics, opticals, antilethals, antiplant agents, barriers, batons, biotechnicals, electricals, electromagnetics, entanglers, holograins, markers, obscurants, projectiles, reactants, and riot control agents. Nonlethal weapons concepts are divided by the following categories: ethical, functional, operational, physiological, and theoretical...|$|E
40|$|Massively {{distributed}} computing is a challenging problem for garbage collection algorithm designers as {{it raises the}} issue of scalability. The high number of hosts involved in a computation can require large tables for <b>reference</b> <b>listing,</b> whereas {{the lack of information}} sharing between hosts in a same locality can entail redundant GC traffic. In this paper, we argue that a conceptual hierarchical organisation of massive distributed computations can solve this problem. By conceptual hierarchical organisation, we mean that processors are still able to communicate in a peer to peer manner using their usual communication mechanism, but GC messages will be routed as if processors were organised in hierarchy. We present an extension of a distributed reference counting algorithm that uses such a hierarchical organisation. It allows us to bound table sizes by the number of hosts in a domain, and it allows us to share GC information between hosts in a same locality in order to reduce crossnetwor [...] ...|$|E
40|$|This is {{the third}} book in Garry Egger 2 ̆ 7 s new series of books based on his 2 ̆ 7 Professor Trim 2 ̆ 7 s Medically Supervised Weight Loss Program 2 ̆ 7, a unique medically-based program being {{endorsed}} by GPs throughout Australia. In the same vein as Garry Egger and Rosemary Stanton 2 ̆ 7 s previously published fat and fibre counters, The Ultimate Energy Guide will provide a comprehensive listing of hundreds of Australian food products broken down by 2 ̆ 7 energy density 2 ̆ 7, the hottest new topic in weight control research. Regulating the energy density of food that is consumed has begun to supersede previous medical arguments about fat or carbohydrate content as the pivotal factor in weight loss. This will be a quick <b>reference</b> <b>listing</b> {{which can be used}} in conjunction with the Becoming Gutless or Becoming Slim weight loss books for men and women respectively. <br /...|$|E
40|$|A <b>list</b> of <b>references</b> {{contains}} details only {{of those}} works {{cited in the}} text. · A bibliography lists sources not cited in the text but which {{are relevant to the}} subject and were used for background reading. · Before you compile your bibliography/reference list check with your lecturer/tutor for the bibliographic style preferred by the Academic Department. · A citation is an acknowledgement in your text of references that support your work. It {{is in the form of}} a number that correlates with a source in your <b>reference</b> <b>list.</b> · There are many ways of setting out bibliographies and <b>reference</b> <b>lists.</b> The following are examples of one style – the Vancouver System. It is commonly used in medical and scientific journals. · Your <b>reference</b> <b>list</b> should identify <b>references</b> cited (eg. book, journal article, pamphlet, internet site, cassette tape or film) in sufficient detail so that others may locate and consult your references. · Your <b>reference</b> <b>list</b> should appear at the end of your essay/report with the entries listed numerically and in the same order that they have been cited in the text. · If you have cited sources from the Internet, these should be in your <b>reference</b> <b>list.</b> · The bibliography is a separate <b>list</b> from the <b>reference</b> <b>list</b> and should be arranged alphabetically by author or title (where no author is given) in the Vancouver Style. · Punctuation marks and spaces in the <b>reference</b> <b>list</b> and citations are very important. Follow the punctuation and spacing exactly in the examples given...|$|R
5000|$|Check the alphabetization of the {{bibliography}} or <b>reference</b> <b>list</b> ...|$|R
2500|$|A {{comprehensive}} and fully <b>referenced</b> <b>list</b> of potentially toxic woods.|$|R
40|$|The Java RMI {{collector}} {{is arguably}} the most widely used distributed garbage collector. Its distributed <b>reference</b> <b>listing</b> algorithm was introduced by Birrell et al. in the context of Network Objects, where the description was informal and heavily biased toward implementation. In this paper, we formalise this algorithm in an implementation-independent manner, which allows us to clarify weaknesses of the initial presentation. In particular, we discover cases critical to the correctness of the algorithm that are not accounted for by Birrell. We use our formalisation to derive an invariant-based proof of correctness of the algorithm that avoids notoriously difficult temporal reasoning. Furthermore, we offer a novel graphical representation of the state transition diagram, which we use to provide intuitive explanations of the algorithm and to investigate its tolerance to faults in a systematic manner. Finally, we examine how the algorithm may be optimised, either by placing constraints on message channels or by tightening the coupling between application program and distributed garbage collector...|$|E
40|$|The {{purpose of}} this study was to {{investigate}} the development of the ability to recognize standard and nonstandard speech in monolingual English-speaking as well as in bilingual Mexican-American children. The tests used consisted of sentences which were either completely standard English or which contained phonological, morphological, or syntactical elements illustrating nonstandard speech influenced by Spanish. Only test items which were validated by at least 80 % agreement in a group of 44 monolingual English-speaking students at the 12 th-and 13 th-grade levels were included in the tests. Subjects were asked to indicate whether they thought the utterances heard were completely standard (speech appropriate to formal school situations), or whether they contained nonstandard features. Based on the test results, the suggestion is made that bilingual Spanish-speaking children who come from environments in which they are continuously exposed to nonstandard English influenced by Spanish should be offered special training consisting of the overt contrasting of standard and nonstandard grammar. (Included in this report are tables of the test items and scores and a <b>reference</b> <b>listing.)</b> (Author/AMM...|$|E
40|$|We {{present a}} Monte-Carlo event {{generator}} for simulating chargino pair {{production at the}} ILC at next-to-leading order in the electroweak couplings. We consider two approaches of including photon radiation. A strict fixed-order approach allows for comparison and consistency checks with published semianalytic results in the literature. A version with soft- and hard-collinear resummation of photon radiation, which combines photon resummation with {{the inclusion of the}} NLO matrix element for the production process, avoids negative event weights, so the program can simulate physical (unweighted) event samples. Photons are explicitly generated throughout the range where they can be experimentally resolved. In addition, it includes further higher-order corrections unaccounted for by the fixed-order method. Inspecting the dependence on the cutoffs separating the soft and collinear regions, we evaluate the systematic errors due to soft and collinear approximations for NLO and higher-order contributions. In the resummation approach, the residual uncertainty can be brought down to the per-mil level, coinciding with the expected statistical uncertainty at the ILC. We closely investigate the two-photon phase space for the resummation method. We present results for cross sections and event generation for both approaches. Comment: PhD Thesis, 136 pages (v 2 : corrected <b>reference</b> <b>listing...</b>|$|E
40|$|Academic writing {{requires}} {{documentation of}} sources (both in-text citations and a <b>reference</b> <b>list).</b> While citation styles {{vary according to}} academic discipline, the Yale Library supports the use of general bibliographic software programs that can help students organizing research, insert citations and footnotes into a document, and create a formatted <b>reference</b> <b>list</b> or bibliography...|$|R
25|$|All awards {{except the}} Loncin prize have this <b>reference</b> <b>listed</b> below.|$|R
50|$|It {{provides}} a useful <b>reference</b> <b>list</b> of schools of the period.|$|R
40|$|With the {{continued}} growth of distributed systems {{as a means}} to provide shared data, designers are turning their attention to garbage collection, prompted by the complexity of memory management and the desire for transparent object management. Garbage collection in very large address spaces is a difficult and unsolved problem, due to problems of efficiency, fault-tolerance, scalability and completeness. The collection of distributed garbage cycles is especially problematic. This thesis presents a new algorithm for distributed garbage collection and describes its implementation in the Network Objects system. The algorithm is based on a <b>reference</b> <b>listing</b> scheme, which is augmented by partial tracing in order to collect distributed garbage cycles. Our collector is designed to be flexible, allowing efficiency, promptness and fault-tolerance to be traded against completeness, albeit it can be also complete. Processes may be dynamically organised into groups, according to appropriate heuristics, in order to reclaim distributed garbage cycles. Multiple concurrent distributed garbage collections that span groups are supported: when two collections meet they may either merge, overlap or retreat. This choice may be done at the level of different partial tracings, of processes or of individual objects. The algorithm places no overhead on local collectors and does not disrupt the collection of acyclic distributed garbage. Partial tracing of the distributed graph involves only objects thought {{to be part of a}} garbage cycle: no collaboration with other processes is required...|$|E
40|$|Social {{bookmarking}} allows {{learners to}} manage reading lists and reading notes. Rather than saving bookmarks in a browser installed {{on a specific}} computer, students can save them on an online application which they can then access from any device with Internet access – at university, at home or at work. In addition, social book-marking allows people to attach keywords (known as ‘tags’), create annotations, and share links. Applications include Delicious, CiteULike, Zotero and Diigo. This chapter explores the benefits of using Diigo in an online Mas-ter’s program. Diigo (or ‘Digest of Internet Information, Groups and Other stuff’) was introduced to help e-learners produce an annotated bibliography, as preliminary work for writing a literature review. It made learning practices such as <b>reference</b> <b>listing,</b> note-taking, and personal opinions more transparent to tutors and other e-learners. This allowed tutors to support students’ work-in-progress, and gave {{students the opportunity to}} discuss readings informally, something more difficult to achieve online than in a campus environment. This chapter starts with an initial review of literature that charts the development of social bookmarking and identifies its benefits and limitations for learning. We then examine through a case study how social bookmarking can help students develop their academic reading skills. Task design, usage patterns, student perceptions and student work are discussed to provide a rich picture of social bookmarking use...|$|E
40|$|Context An optimal {{software}} development process {{is regarded as}} being dependent on the situational characteristics of individual {{software development}} settings. Such characteristics include {{the nature of the}} application(s) under development, team size, requirements volatility and personnel experience. However, no comprehensive reference framework of the situational factors affecting the software development process is presently available. Objective The absence of such a comprehensive reference framework of the situational factors affecting the software development process is problematic not just because it inhibits our ability to optimise the software development process, but perhaps more importantly, because it potentially undermines our capacity to ascertain the key constraints and characteristics of a software development setting. Method To address this deficiency, we have consolidated a substantial body of related research into an initial reference framework of the situational factors affecting the software development process. To support the data consolidation, we have applied rigorous data coding techniques from Grounded Theory and we believe that the resulting framework represents an important contribution to the software engineering field of knowledge. Results The resulting reference framework of situational factors consists of 8 classifications and 44 factors that inform the software process. We believe that the situational factor reference framework presented herein represents a sound initial reference framework for the key situational elements affecting the software process definition. Conclusion In addition to providing a useful <b>reference</b> <b>listing</b> for the research community and for committees engaged in the development of standards, the reference framework also provides support for practitioners who are challenged with defining and maintaining software development processes. Furthermore, this framework can be used to develop a profile of the situational characteristics of a software development setting, which in turn provides a sound foundation for software development process definition and optimisation...|$|E
40|$|This <b>Reference</b> <b>List</b> {{has been}} {{compiled}} {{from a number}} of other published <b>reference</b> <b>lists.</b> The specific relevance of each item to beach drainage technology has not been verified. The list has been sorted by year. Comments & contributions are welcome. 1940 Bagnold, RA “Beach formation by waves; some model experiments in a wave tank. ...|$|R
30|$|The <b>reference</b> <b>list</b> of the {{retrieved}} articles were additionally scrutinised for relevance.|$|R
5000|$|News {{media phone}} hacking scandal* News International phone hacking scandal <b>reference</b> <b>lists</b> ...|$|R
