8|118|Public
5000|$|Some modern {{computers}} <b>receive</b> <b>clock</b> {{information by}} digital radio {{and use it}} to promote time-standards.|$|E
50|$|The SIPO (Serial Input, Parallel Output) block {{typically}} has a <b>receive</b> <b>clock</b> output, {{a set of}} {{data output}} lines and output data latches. The <b>receive</b> <b>clock</b> may have been recovered from the data by the serial clock recovery technique. However, SerDes which do not transmit a clock use reference clock to lock the PLL to the correct Tx frequency, avoiding low harmonic frequencies present in the data stream. The SIPO block then divides the incoming clock down to the parallel rate. Implementations typically have two registers connected as a double buffer. One register is used to clock in the serial stream, {{and the other is}} used to hold the data for the slower, parallel side.|$|E
50|$|The CRS and COL {{signals are}} {{asynchronous}} to the <b>receive</b> <b>clock,</b> and are only meaningful in half-duplex mode. Carrier sense is high when transmitting, receiving, or the medium is otherwise sensed {{as being in}} use. If a collision is detected, COL also goes high while the collision persists.|$|E
50|$|It {{is up to}} the <b>receiving</b> <b>clock</b> {{to apply}} the change at the next 02:00 local time if it notices the bits differ. If the <b>receiving</b> <b>clock</b> happens not to receive an update between 00:00 UTC and 02:00 local time the day of the change, it should apply the DST change on the next update after that.|$|R
5000|$|The {{contestant}} <b>received</b> a <b>clock,</b> but voluntarily {{quit the}} competition.|$|R
5000|$|The {{contestant}} did not <b>receive</b> a <b>clock,</b> {{but was not}} eliminated.|$|R
50|$|The {{first seven}} {{receiver}} signals are entirely {{analogous to the}} transmitter signals, except RX_ER is not optional and used to indicate the received signal could not be decoded to valid data. The <b>receive</b> <b>clock</b> is recovered from the incoming signal during frame reception. When no clock can be recovered (i.e. when the medium is silent), the PHY must present a free-running clock as a substitute.|$|E
40|$|A 4 Gb/s {{serial link}} {{tracking}} clock and data recovery (CDR) circuit fabricated in 0. 24 m CMOS technology dissipates 84 mW and occupies 0. 3 mm 2. The input signal is 2 oversampled by 8 offset-cancelled receive amplifiers per <b>receive</b> <b>clock</b> cycle. The samples are processed by a phase controller {{to position the}} receive clocks at {{the center and the}} edge of the data eye using a semi-digital dual delay-locked loop (DLL) [3]. The quiet-supply p-p jitter of the <b>receive</b> <b>clock</b> is 39 ps with 0. 33 ps/mV supply sensitivity. It allows for plesiochronous clocking with a frequency tolerance of 400 ppm. The worst case phase resolution is < 20 ps...|$|E
40|$|A laser Doppler {{velocimeter}} multiplexer interface {{includes an}} event pulse synchronizer which synchronizes data pulses from events A, B, and C. Clock control {{is connected to}} receive timing information on the data pulses from the synchronizer. Displays are connected to <b>receive</b> <b>clock</b> signals from the clock control for indicating a data rate {{for each of the}} measured events A, B, and C. The display is connected to <b>receive</b> <b>clock</b> signals from the clock control to indicate a coincidence rate between data pulses for any selected combination of the measured events A, B, and C. A multiplexer receives the data pulses from the events A, B, and C and rate data from the clock control. The multiplexer has output for supplying the data pulses and rate data to a single input of a data processing system. A multiplexer control is connected to supply control signals to the multiplexer for selecting the event data pulses and the rate data for output from the multiplexer. The multiplexer control receives start signals from the pulse synchronizer and user selected inputs for desired outputs from the multiplexer...|$|E
5000|$|The {{contestant}} {{was going}} to <b>receive</b> a <b>clock,</b> but was eliminated.|$|R
5000|$|The {{contestant}} did not <b>receive</b> a <b>clock,</b> but {{stayed in}} the competition.|$|R
5000|$|Slave node - node that <b>receives</b> the <b>clock</b> and {{responds}} when {{addressed by}} the master.|$|R
40|$|A {{document}} {{discusses the}} utilization of embedded clocks inside of operating network data links as an auxiliary clock source to satisfy local oscillator monitoring requirements. Modem network interfaces, typically serial network links, often contain embedded clocking information of very tight precision to recover data from the link. This embedded clocking data can be utilized by the receiving device to monitor the local oscillator for tolerance to required specifications, often important in high-integrity fault-tolerant applications. A device can utilize a received embedded clock {{to determine if the}} local or the remote device is out of tolerance by using a single link. The local device can determine if it is failing, assuming a single fault model, with two or more active links. Network fabric components, containing many operational links, can potentially determine faulty remote or local devices in the presence of multiple faults. Two methods of implementation are described. In one method, a recovered clock can be directly used to monitor the local clock as a direct replacement of an external local oscillator. This scheme is consistent with a general clock monitoring function whereby clock sources are clocking two counters and compared over a fixed interval of time. In another method, overflow/underflow conditions can be used to detect clock relationships for monitoring. These network interfaces often provide clock compensation circuitry to allow data to be transferred from the received (network) clock domain to the internal clock domain. This circuit could be modified to detect overflow/underflow conditions of the buffering required and report a fast or slow <b>receive</b> <b>clock,</b> respectively...|$|E
40|$|Abstract-Amesochronous {{pipeline}} {{architecture is}} described in useful portion of clock period available for computation is this paper. Significant performance gains are possible with decreasing. The clock distribution network is also increasing mesochronous pipeline over conventional pipeline architecture. in size (longer wires with increased parasitic resistance, The clock period in conventional pipeline scheme is proportional capacitance and inductance) and load. One consequence of to the maximum stage delay while in mesochronous pipelining it this is the increase in clock network's power consumption, {{is proportional to the}} maximum delay difference, which means which is as high as 500 of the total chip power consumption higher clock speeds are possible in the proposed scheme. Also, the clock distribution network is simple and load on it is less in [3]. Also now the clock signal traverses different paths from mesochronous approach resulting in significant power savings. its source (at the output ofon-chip PLL or the input pin on the An 8 x 8 -bit multiplier using carry-save adder technique has been chip) to different parts of chip. Based on the path taken implemented in conventional and mesochronous pipeline (physical dimensions and parametric values), buffers in the approach using TSMC 180 nm (drawn length 200 nm). The over path, process variations and, load driven, the clock sinks will all power dissipation in mesochronous approach is less than 50 % <b>receive</b> <b>clock</b> with uncertainties. This could jeopardize the of the power dissipation in conventional approach. In systems performance or could result in its complete failure conventional approach, the power dissipation in clock network [1]. Significant research is being done to counter suc...|$|E
40|$|This paper {{describes}} a 20 -lane 62. 5 Gb/s SerDes designed as an interface between the 40 G, or quad 10 G Optics, and a downstream framer device. Transmit and <b>receive</b> <b>clocks</b> {{are derived from}} an LC-based PLL with a wideband RMS jitter below 2. 5 ps. Timing recovery uses a 2 nd order loop and includes over-sampled ∆Σ techniques to achieve both narrow-band filtering and excellent jitter tolerance. To support back-plane applications, line driver and receiver incorporate pre-emphasis and equalization respectively...|$|R
5000|$|Synchronous {{communication}} {{requires that}} the clocks in the transmitting and receiving devices are synchronized [...] - [...] running {{at the same rate}} [...] - [...] so the receiver can sample the signal at the same time intervals used by the transmitter. No start or stop bits are required. For this reason [...] "synchronous communication permits more information to be passed over a circuit per unit time" [...] than asynchronous serial communication. Over time the transmitting and <b>receiving</b> <b>clocks</b> will tend to drift apart, requiring resynchronization.|$|R
5000|$|During the {{elimination}} {{ceremony at the}} end of the episode, Red Oyster announces that she is eliminating herself from the competition to be with her father, who she has just found out was in a serious car accident. Flav tells Red Oyster he is sorry to see her go because he would have saved her from elimination. New York and Hottie had not <b>received</b> <b>clocks</b> at that time, and were saved from elimination, even though one of them was scheduled to leave that night. New York was troubled because she desperately wanted to know if she would have <b>received</b> a <b>clock</b> or not. Red Oyster hugs her alliance [...] "New York" [...] on her way out. Red Oyster also reveals to Hottie that it was Red Oyster herself that ripped the pages out of Hotties diary, because she didnt like Hottie trying to start something between Red Oyster and her ally New York.|$|R
50|$|The BT Speaking <b>Clock</b> <b>receives</b> around 60 million calls a year.|$|R
5000|$|Tic Toc - The Megapolis Zoo <b>receives</b> a <b>clock</b> tower. Chumley accidentally shoots {{an arrow}} {{at the clock}} and Stanley Livingston orders Tennessee and Chumley to remove the arrow. Tennessee and Chumley learn how clocks work from Phineas J. Whoopee. 11/2/1963 ...|$|R
40|$|A bit {{synchronizer}} is analyzed via timing diagrams in a noise-free environment. It {{is believed}} that this new bit synchronizer will track the rising edge of the data bits with 25 % asymmetry and up to a 90 deg phase shift between the <b>received</b> <b>clock</b> and data bit timing. In addition, the data bits will be demodulated correctly. It is not true that phase shifts larger than 90 deg will necessarily be corrected by this bit synchronizer. However, the specifications currently require the loop to operate over only a + or - 75 deg phase shift between the received data stream leading edges and the bit synchronizer leading edges; consequently, {{there should be no}} problem...|$|R
50|$|If a {{clock is}} sent in {{parallel}} with data, that clock {{can be used to}} sample the data. Because the <b>clock</b> must be <b>received</b> and amplified before it can drive the flip-flops which sample the data, there will be a finite, and process-, temperature-, and voltage-dependent delay between the detected clock edge and the received data window. This delay limits the frequency at which data can be sent. One way of eliminating this delay is to include a deskew PLL on the receive side, so that the clock at each data flip-flop is phase-matched to the <b>received</b> <b>clock.</b> In that type of application, a special form of a PLL called a delay-locked loop (DLL) is frequently used.|$|R
50|$|Messrs. John Smith & Sons of Derby <b>received</b> the <b>clock</b> in February 1956. It {{was taken}} apart for the transport. They {{reassembled}} {{the clock in}} their workshop and compared it to existing clocks in the Science Museum before deciding how to restore it.|$|R
50|$|Neither New York nor Hottie {{is happy}} when Flav gives them both clocks. Serious does not <b>receive</b> a <b>clock</b> because Red Oyster informs Flav that she {{believes}} that she is only here to further her career in modeling. Peaches is also eliminated as well.|$|R
2500|$|If a {{clock is}} sent in {{parallel}} with data, that clock {{can be used to}} sample the data. [...] Because the <b>clock</b> must be <b>received</b> and amplified before it can drive the flip-flops which sample the data, there will be a finite, and process-, temperature-, and voltage-dependent delay between the detected clock edge and the received data window. [...] This delay limits the frequency at which data can be sent. [...] One way of eliminating this delay is to include a deskew PLL on the receive side, so that the clock at each data flip-flop is phase-matched to the <b>received</b> <b>clock.</b> In that type of application, a special form of a PLL called a delay-locked loop (DLL) is frequently used.|$|R
5000|$|The {{advantage}} of the asynchronous serial connection is its simplicity. One disadvantage is its low efficiency in carrying data. This can be overcome by using a synchronous interface. In this type of interface, a clock signal is added on a separate wire, and the bits are transmitted in synchrony with the clock [...] - [...] the interface no longer has {{to look for the}} start and stop bits of each individual character [...] - [...] however, it is necessary to have a mechanism to ensure the sending and <b>receiving</b> <b>clocks</b> are kept in synchrony, so data is divided up into frames of multiple characters separated by known delimiters. There are three common coding schemes for framed communications [...] - [...] HDLC, PPP, and Ethernet ...|$|R
5000|$|The {{contestant}} had <b>received</b> the immunity <b>clock</b> before elimination, but was {{not able}} to keep it and was later eliminated.|$|R
5000|$|... "The Danish Churches" [...] {{indicates}} without reservation {{that the}} church's clock is molded. In 2010, Sønderup Church <b>received</b> a new <b>clock.</b>|$|R
50|$|During {{the late}} Victorian period that company {{expanded}} its line to include <b>clocks,</b> <b>receiving</b> the Diploma of Honour for the company’s workmanship in 1888.|$|R
50|$|In bit-synchronous operation, {{clock timing}} is usually {{delivered}} {{at twice the}} modulation rate, and one bit is transmitted or <b>received</b> during each <b>clock</b> cycle.|$|R
40|$|PatentA clock {{synchronization}} buffer for a counter clock flow pipelined circuit including {{a cascade of}} processing modules that receive data from a previous module and provide output results to a following module. The <b>clock</b> synchronization buffer <b>receives</b> a <b>clock</b> input signal and provides clock signals to a local processing module and to the next pipeline stage. The {{clock synchronization}} buffer includes a selectable delay stage that <b>receives</b> a <b>clock</b> input signal and a delay select signal and outputs a clock signal having a selected delay. An amplifier connected to the selectable delay stage provides the delayed clock signal to a local processing module that corresponds to the clock synchronization buffer circuit. An inverting amplifier connected to the selectable delay stage provides the delayed clock signal to the next pipeline stage. A clock synchronization controller synchronizes the phases of reference clock input and synchronized clock input signals...|$|R
50|$|There are {{two types}} of clock skew: {{negative}} skew and positive skew. Positive skew occurs when the transmitting register <b>receives</b> the <b>clock</b> tick earlier than the receiving register. Negative skew is the opposite: the receiving register gets the clock tick earlier than the sending register. Zero clock skew refers to the arrival of the clock tick simultaneously at transmitting and receiving register.|$|R
40|$|Clock skew is an {{increasing}} concern for high-speed circuit designers. Circuit designers use transparent latches and skew-tolerant domino circuits to hide clock skew from the critical path {{and take advantage of}} shared portions of the clock network to budget less skew between nearby elements than across the entire die, but current timing analysis algorithms do not handle correlated clock skews. This paper extends the Sakallah [...] Mudge [...] Olukotun (SMO) latch-based timing analysis to include different amounts of clock skew between different elements. The key change is that departure times from each latch must be defined with respect to launching clocks so that the skew between the launching and <b>receiving</b> <b>clocks</b> can be determined at each receiver. The exact analysis leads to an explosion in the number of timing constraints, but most constraints are not tight in practical situations and {{a modified version of the}} Szymanski [...] Shenoy relaxation algorithm gives exact results with only a small incre [...] ...|$|R
40|$|This paper proposes clock {{synchronization}} algorithms {{based on the}} idea in which randomly chosen m out of the total N processors cooperate to perform the clock adjustment of all processors in a distributed system. Selection of m processors is performed in a fully distributed way. Two types of algorithm which include different random mechanisms of processor selection are described. In the first algorithm, all processors adjust their clocks to the average of <b>received</b> <b>clock</b> signals issued by randomly chosen m processors. In the second algorithm, each processor chooses m processors randomly at its own will and adjust its own clock to the average of the chosen processor clocks. Fault tolerance against processor or link failure is taken into account in both algorithms. These algorithms exhibit desirable features in practical sense like simplicity in implementation, a small number of message exchanged, etc., so that the algorithms can be applied to sufficiently large system. Transient and steady state performances of the proposed algorithms are verified through simulation...|$|R
50|$|The slave starts {{updating}} {{its value}} {{and the data}} line is set to HIGH (idle mode) {{if there are no}} clock pulses within time, tm. This marks the end of single transmission of the data word. Once the slave <b>receives</b> a <b>clock</b> signal at a time, tp (>=tm), the updated position value is frozen and the transmission of the value begins as described earlier.|$|R
50|$|In 1934, Disney {{licensing}} {{expanded to}} hand-crank toy projectors, diamond-studded Mickey Mouse pins, Mickey Mouse toffee in England and a Lionel wind-up train toy, while a patent is <b>received</b> for Ingersoll-Waterbury <b>Clock</b> Company's Mickey Mouse watch.|$|R
50|$|The church <b>received</b> a new <b>clock</b> in 1856 and was renovated in 1870 - 1871 {{when the}} Ferrand Chapel became the vestry {{and some of}} the pews that were tied to the local Manor Houses were {{stripped}} out.|$|R
