16|46|Public
5000|$|... 1 <b>Regular</b> <b>routing</b> {{is between}} Fleetwood and Surrey Central Station, with reduced service to Langley.|$|E
40|$|This paper {{presents}} {{a tool for}} automatic layout of bidimensional processor arrays. The general topology of such structures consists of a processor cells array and interconnections restricted to nearest neighbors. Automatic layout of such structures {{can be viewed as}} processor cells tiling with <b>regular</b> <b>routing</b> between cells. The Madmacs design system is proposed as a tool to generate such structures. Madmacs is a complete graphics layout editor that features logical and coordinate free cursor movements. Furthermore, Madmacs provides a classical but interactive macro-command mechanism. This mechanism is particularly efficient for repetitive tasks like tiling and <b>regular</b> <b>routing.</b> Finally, Madmacs is tightly coupled to a Lisp interpreter. Each Madmacs command has a functional form in the LISP language. As the interpreter evaluates an editor command function, it calls Madmacs which executes the associated command. The LISP language is also available to develop the skeleton of generators. With Madmacs coordinate free cursor movements, the designer is not concerned with the exact sizes of the manipulated objects and so can develop re-usable code. Finally, a macro command can be saved as a new LISP function, and incorporated into a generator. The combined language and interactive approach allows one to obtain fast definitions of generators...|$|E
40|$|A {{structured}} ASIC {{has some}} arrays of pre-fabricated yet configurable logic blocks (CLBs) with/without a <b>regular</b> <b>routing</b> fabric. In this paper, we propose a standard cell like via-configurable logic block (VCLB). We design a 0. 18 um standard cell library {{based on our}} VCLB and establish a design flow using as many commercial tools as possible. We also propose a method to evaluate the viability of a structured ASIC fabric. Our structured ASIC fabric with programmable metals for routing achieves a delay of 2. 7 times, an area of 3 times, and a power of 1. 5 times that attained by the designs using a commercial cell library. 1...|$|E
60|$|Then it {{was that}} Graham of Claverhouse, seeing his opportunity, led his dragoons across the bridge and charged {{the main body of}} the Covenanters. Undisciplined troops could not {{withstand}} the shock of such a charge. They quickly broke and fled; and now the battle was changed to a <b>regular</b> <b>rout.</b>|$|R
50|$|In 1812, Morris was {{appointed}} {{executive officer of}} the USS Constitution under the command of Isaac Hull during her battle with the HMS Guerriere, in which action Morris was severely wounded. He was promoted to captain on March 3, 1813. In 1814, he commanded the USS Adams in raiding expeditions against British commerce. Cornered in the Penobscot River in Maine by a British squadron under Captain Robert Barrie, Morris and his men went ashore with their cannons and, assisted by local militia attempted to hold off the British amphibious force in the Battle of Hampden. The British <b>regulars</b> <b>routed</b> the Americans, however, and Morris and his crew had to burn the ship and escape overland to Portsmouth, New Hampshire.|$|R
40|$|One of {{the popular}} {{wireless}} network architectures is Mobile Ad Hoc Network (MANET). It can be easily deployed in every environment, without any underlying backbone and infrastructure support. MANET is a wireless network that consists of nodes which are mobile in nature. Each node in the network acts as a router which provides the flexibility to the topology of the network. In this paper, an extended AODV routing protocol is proposed for Ad-hoc networks which typically suits to resolve the realistic model problems. This proposed protocol may improve the performance of <b>regular</b> AODV <b>routing</b> protocol. It has all the features of AODV routing protocol, as it follows all {{the steps of the}} route discovery algorithm of AODV routing protocol. The main difference arises {{when it comes to the}} route maintenance approach. We assume that the network is also consist of the static nodes, which helps to recover the path while route maintenance. An assumption reveals that it may increase the efficiency of <b>regular</b> AODV <b>routing</b> protocol in terms of the metrics: Endto-en...|$|R
40|$|In {{an effort}} to control the {{parameter}} variations and systematic yield problems that threaten the affordability of applicationspecific ICs, new forms of design regularity and structure have been proposed. For example, there has been speculation [6] that regular logic fabrics [1] based on regular geometry patterns [2] can offer tighter control of variations and greater control of systematic manufacturing failures. In this paper we describe a routing framework that accommodates arbitrary descriptions of regular and structured routing architectures. We further propose new <b>regular</b> <b>routing</b> architectures and explore the various performance vs. manufacturability trade-offs. Results demonstrate that a more regular, restricted routing architecture can provide a substantial advantage in terms of manufacturability and predictability while incurring a moderate performance penalty...|$|E
40|$|This thesis {{concerns}} {{routing protocols}} for MANETs {{with a particular}} focus on location-based ones. After a deep overview of the literature, one <b>regular</b> <b>routing</b> protocol, DYMO, and two location-based (LB) ones, DYMOselfwd and AODV-Line, have been selected for further study. To this end, they have been implemented and simulated with the OMNET++ simulator. The scenarios are chosen to evaluate {{the impact of the}} node density, the nodes' mobility behaviour and of the ping payload on the performance of the routing protocols, in terms of scalability and ability to recover from route disruptions in a mobile scenario. In addition, the impact of an error in the location information is also analysed {{in the case of the}} two LB protocols...|$|E
40|$|Abstract — In Deep {{sub-micron}} regime, interconnect delays dominate VLSI circuit design. Thus, {{construction of}} cost-effective global routing trees {{is key to}} such designs. In {{order to reduce the}} interconnect delay, traditional Manhattan (M-) routing architectures are currently being replaced by the diagonal X architectures. A recent routing architecture is based on Y interconnects, involving the pervasive use of 0 ◦, 60 ◦, and 120 ◦ oriented global and semi-global wirings. Unlike the X-routing, Y-routing is observed to support <b>regular</b> <b>routing</b> grid, which is important for simplifying manufacturing processes and routing and design rule checking algorithms. In this paper, we propose a novel Y-routing algorithm which can solve reasonably sized problems in nominal time. The proposed method is capable of finding routing solutions for problem instances which could not be solved in reasonable time by some recently reported methods. Moreover, it can be easily extended for routing with any uniform orientation. I...|$|E
6000|$|... "My dear cousin Betty, {{there are}} lunatics endowed with a marvellous shrewdness to commit {{senseless}} villanies, {{and to put}} on a specious seeming. Depend upon it, my unfortunate brother-in-law's wanderings at night were not solely spent in communings with the trees and brooks. Who knows what might be discovered if he were under proper restraint? And it is to you, the only relation I have, that I must turn for assistance in my most unhappy circumstances," [...] she added, wit a glance so full of sweet helplessness that no man could withstand it. [...] "I am so glad you are here. You will be acting for me as well as for yourself in endeavouring to find your poor lovely child, and the first thing I would have done would be to separate Belamour and his black, put them under restraint, and interrogate them separately. You could easily get an order from a magistrate. But ah, here comes my woman. No more now. You will come to me this evening, and we can talk further on this matter. I shall have some company, and it will not be a <b>regular</b> <b>rout,</b> only a few card-tables, and a little dancing for the young people." ...|$|R
40|$|Due to {{the limited}} {{processing}} power, and finite power available to each sensor node, <b>regular</b> ad-hoc <b>routing</b> techniques cannot be directly applied to sensor networks domain. Thus, energy-efficient routing algorithms suitable to the inherent characteristics {{of these types of}} networks are needed. However highly efficient data centric model of routing will improve the longevity of the network. This paper describes a mechanism of improvisation through simulation of existing feature of Rumor routing. The improvised rumor routing algorithm handles node failures and allows for tradeoffs between setup overhead and delivery reliability...|$|R
40|$|In this paper, we {{investigate}} how existing social networks can benefit P 2 P data networks by leveraging the inherent trust associated with social links. We present a trust model that lets us compare routing algorithms for P 2 P networks overlaying social networks. We propose SPROUT, a DHT routing algorithm that, by using social links, significantly increases {{the number of}} query results and reduces query delays. We discuss further optimization and design choices for both the model and the routing algorithm. Finally, we evaluate our model versus <b>regular</b> DHT <b>routing</b> and Gnutella-like flooding. ...|$|R
40|$|Abstract — In WSN, sensor nodes have {{a limited}} {{transmission}} range. In fact, their processing and storage capabilities {{as well as their}} energy resources are also limited. However, <b>regular</b> <b>routing</b> protocols for wireless devices are not well suitable for sensors due to the constraints of their resources. These protocols ensure the duty of maintaining network routing and reliable single/multihop communication which requires considerable energy consumption. In this paper, we present our java-based simulators that implement two state-of-the-art wireless sensor network protocols: TEEN and SPIN. Our goal is to compare them vis-àvis the energy consumption and the average throughput at each node. Our experimentations show a better performance with SPIN in terms of energy consumption protocol. On the other hand, the TEEN protocol shows a slightly higher throughput performance due to the absence of advertising messages as in most reactive routing protocols. Index Terms—Wireless sensor networks, cluster head, energy efficient protocol, SPIN, TEEN. ...|$|E
40|$|Security ICs are {{vulnerable}} to side-channel attacks (SCAs) that find the secret key by monitoring the power consumption or other information that is leaked by the switching behavior of digital CMOS gates. This paper describes a side-channel attack resistant coprocessor IC fabricated in 0. 18 -mu m CMOS consisting of an Advanced Encryption Standard (AES) based cryptographic engine, a fingerprint-matching engine, template storage, and an interface unit. Two functionally identical coprocessors have been fabricated on the same die. The first coprocessor was implemented using standard cells and <b>regular</b> <b>routing</b> techniques. The second coprocessor was implemented using a logic style called wave dynamic differential logic (WDDL) and a layout technique called differential routing to combat the differential power analysis (DPA) side-channel attack. Measurement-based experimental results show that a DPA attack on the insecure coprocessor requires only 8000 encryptions to disclose the entire 128 -bit secret key. The same attack on the secure coprocessor does not disclose the entire secret key even after 1500 000 encryptions. status: publishe...|$|E
40|$|Abstract—Security ICs are {{vulnerable}} to side-channel attacks (SCAs) that find the secret key by monitoring the power consumption or other information that is leaked by the switching behavior of digital CMOS gates. This paper describes a side-channel attack resistant coprocessor IC fabricated in 0. 18 - m CMOS consisting of an Advanced Encryption Standard (AES) based cryptographic engine, a fingerprint-matching engine, template storage, and an interface unit. Two functionally identical coprocessors have been fabricated on the same die. The first coprocessor was implemented using standard cells and <b>regular</b> <b>routing</b> techniques. The second coprocessor was implemented using a logic style called wave dynamic differential logic (WDDL) and a layout technique called differential routing to combat the differential power analysis (DPA) side-channel attack. Measurement-based experimental results show that a DPA attack on the insecure coprocessor requires only 8000 encryptions to disclose the entire 128 -bit secret key. The same attack on the secure coprocessor does not disclose the entire secret key even after 1 500 000 encryptions. Index Terms—Advanced Encryption Standard (AES), biometrics, cryptography, differential power analysis, security, side-channel attacks. I...|$|E
50|$|The {{development}} of Internet infrastructure in Russia began with {{development of}} analog modem-based computer networks in Soviet cities, primarily in scientific institutions. The {{first one to}} connect UNIX email hosts country-wide (including Soviet Republics) was the Relcom organization which formed on August 1, 1990 at the Kurchatov nuclear physics institute in Moscow. They were functioning together with partner programming cooperative Demos, named after the Soviet-made DEMOS Unix-like operating system. In August 1990 they established <b>regular</b> email <b>routing</b> with an Internet node in Helsinki University over a paid voice line.|$|R
40|$|Abstract—Multicast {{communication}} involves transmitting in-formation from {{a single}} source node to multiple destination nodes, and is becoming an important requirement in high-performance networks. In this paper, we study multicast communication {{in a class of}} optical WDM networks with regular topologies such as linear arrays, rings, meshes, tori and hypercubes. For each type of network, we derive the necessary and sufficient conditions on the minimum number of wavelengths required for a WDM network to be wide-sense nonblocking for multicast communication under some commonly used routing algorithms. Index Terms—Multicast communication, optical networks, <b>regular</b> networks, <b>routing</b> algorithm, wavelength assignment algorithm, wavelength division multiplexing (WDM), wide-sense nonblocking. I...|$|R
40|$|We {{study the}} {{convergence}} property {{of a family}} of distributed routing algorithms based on the ant colony metaphor, namely the uniform and <b>regular</b> ant <b>routing</b> algorithms discussed by Subramanian et al. For a simple two-node network, we show that the probabilistic routing tables converge in distribution (resp. in the a. s. sense) for the uniform (resp. regular) case. To the best of the authors' knowledge, the results given here appear to be the first formal convergence results for ant routing algorithms. Although they hold only for a very limited class of networks, their analysis already provide some useful lessons for extending the results to more complicated networks. We also discuss some of implementation issues that naturally arise from the convergence analysis...|$|R
40|$|Detailed routing is an {{important}} phase of realizing exact routing paths for optimizing various design objectives and satisfying increasingly complicated design rules. In this paper, we propose RegularRoute, a fast detailed router trying to use <b>regular</b> <b>routing</b> patterns in a correct-by-construction strategy for better routability and design rule satisfaction. Given a 2 -D global routing solution and the underlying routing tracks, we generate a detailed routing solution in a bottom-up layer-by-layer manner. For each layer, the routing tracks are partitioned {{into a number of}} panels. We formulate the problem of assigning global segments into different tracks of each panel as a Maximum Weighted Independent Set (MWIS) problem. We propose a fast and effective heuristic to solve the MWIS problem. Then unassigned segments after MWIS are partially routed by a greedy technique. For the unrouted portion of each segment, its terminals are promoted so that the assignment is deferred to upper layers. At top layers, we apply panel merging and maze routing techniques to achieve better routability. Due to the unavailability of academic detailed routing benchmarks, we proposed two sets of detailed routing testcases derived from ISPD 98 [1] and ISPD 05 [2] placement benchmark suites respectively. The experimental results demonstrate the effectiveness and efficiency of RegularRoute. ...|$|E
40|$|Security ICs are {{vulnerable}} to side-channel attacks (SCAs) that find the secret key by monitoring the power consumption and other information that is leaked by the switching behavior of digital CMOS gates. This paper describes a side-channel attack resistant coprocessor IC and its design techniques. The IC has been fabricated in 0. 18 µm CMOS. The coprocessor, which is used for embedded cryptographic and biometric processing, consists of four components: an Advanced Encryption Standard (AES) based cryptographic engine, a fingerprint-matching oracle, a template storage, and an interface unit. Two functionally identical coprocessors have been fabricated on the same die. The first, ‘secure’, coprocessor is implemented using a logic style called Wave Dynamic Digital Logic (WDDL) and a layout technique called differential routing. The second, ‘insecure’, coprocessor is implemented using regular standard cells and <b>regular</b> <b>routing</b> techniques. Measurement-based experimental results show that a differential power analysis (DPA) attack on the insecure coprocessor requires only 8, 000 acquisitions to disclose the entire 128 b secret key. The same attack on the secure coprocessor still does not disclose the entire secret key at 1, 500, 000 acquisitions. This improvement in DPA resistance of at least 2 orders of magnitude makes the attack de facto infeasible. The required number of measurements {{is larger than the}} lifetime of the secret key in most practical systems...|$|E
40|$|Abstract — Y-interconnects for VLSI {{chips are}} based on the use of global and semi-global wiring in only 0 ◦, 60 ◦, and 120 ◦. Though X-interconnects are fast {{replacing}} the traditional Manhattan (M) interconnects, the very recently proposed Y-interconnects have been observed to possess certain key advantages. Y-interconnects tend to consume less routing resources than M-interconnects. Unlike the X-interconnect architectures, Y-interconnect architectures support <b>regular</b> <b>routing</b> grid. This is indeed very important for simplifying manufacturing processes and applying the routing and design rule checking algorithms. Several efficient Y-routing algorithms have been proposed in literature. However, {{to the best of our}} knowledge, not much have been reported so far in designing algorithms for Y-interconnectbased VLSI module placement and its effects on the congestion or wire-lengths. In this paper, in an attempt to fill the gap in the existing literature, we propose a novel simulated-annealing-based placement technique for mixed-sized cells which tries to reduce the congestion for Y-interconnects. The proposed method attempts to reduce the congestion, and observes the corresponding changes in the estimated lengths of the Y-interconnects. It has been implemented in Linux environment and experiments performed with randomly generated instances, and some well-known benchmarks. The wirelength estimates for the Y-interconnects, and Manhattan interconnects for the same placement instances are compared. Results obtained are quite encouraging. The experimental results for a specific number of iterations and cooling schedule show improvements in congestion in most of the cases. I...|$|E
40|$|Optical {{networks}} {{are capable of}} switching IP traffic via lambda connections. In this way, big IP flows that overload the <b>regular</b> IP <b>routing</b> level may be moved to the optical level, where they get better Quality of Service (QoS). At the same time, the IP routing level is off-loaded and can serve smaller flows better. Within this context, this paper analyses the eligibility of IP flows to be moved to the optical level. In this analysis, we observe the percentage of IP traffic {{as well as the}} amount of IP flows moved to the optical level while using various definitions for an IP flow. The main contribution {{of this paper is to}} show how the amount of IP traffic transferred over lambda-connections considerably depends on the definition used for a flow...|$|R
40|$|In this paper, a simple, yet {{efficient}} hardwarebased multicasting {{scheme is}} proposed for irregular mesh-based Network-on-Chips. First, an irregular oriented multicast strategy is proposed. Literally, following this strategy, an irregular oriented multicast routing algorithm {{can be designed}} based on any <b>regular</b> mesh-based multicast <b>routing</b> algorithm. One such algorithm, namely, Alternative XY (AL+XY), is proposed based on XY routing, Experimental results show that AL+XY achieve significant reduction in power consumption and packet latency compared with existing solutions. I...|$|R
40|$|Original {{scientific}} paper Under {{the delay}} tolerant network, high mobility of the node and the transmission distance {{make it impossible}} to keep a durable and <b>regular</b> data <b>routing</b> path between two nodes. As a result, such failure affects the function of packet routing mechanism. Therefore, in order to improve the efficacy of data transmission, conventional delay tolerant routing adopts more packet replication, or makes opportunistic on-line with encountered nodes and selects advantageous ones to increase packet arrival rate or reduce transmission delay rate. However, excessive increase of packet replication or excessive records for selected transmission nodes may result in internet traffic or a waste of resources. It may also lead to a lower level of the routing protocol or a compli-cated operation. Thus, conventional delay tolerant routing is not satisfying. This research intends to design an optimized forward strategy on the basis o...|$|R
40|$|Abstract — In this paper, {{we propose}} RegularRoute, an {{efficient}} detailed router encouraging <b>regular</b> <b>routing</b> patterns. RegularRoute is proposed for potentially better design rule satisfaction {{based on a}} correct-by-construction methodology. Given the underlying spacing-based design rules, 2 -D global routing solution, and 3 -D detailed routing tracks, RegularRoute generates a 3 -D detailed routing solution in a bottom-up layer-by-layer framework. At the beginning, local nets, i. e., nets or subnets that are inside one G-cell, are routed using vertical spine routing topology. Routing usage of local nets is treated as blockage when assigning global segments. Then, for each layer we formulate the problem of global segment assignment inside each panel, i. e., grouped routing tracks, as a maximum weighted independent set (MWIS) problem. We propose a fast and effective heuristic to solve the MWIS problem. Unassigned segments are partially routed by a greedy technique. For the unrouted portion of each segment, its terminals are promoted so that the assignment is deferred to the upper layers. At the top layers, we apply the panel merging and maze routing techniques to improve routability. RegularRoute generates a detailed routing solution that satisfies the basic spacing-based design rules. To satisfy all the design rules, we propose an abstract idea of local optimization based on local shift and rip-up-and-reroute, assuming that most design rules are complex functions of local and neighboring geometries. Because of the unavailability of proper academic grid-based detailed routing benchmarks, we propose two sets of detailed routing test cases derived from ISPD 98 and ISPD 05 / 06 placement benchmark suites, respectively. Our experimental results demonstrate the effectiveness and efficiency of RegularRoute. Index Terms — Detailed routing, physical design, routing, VLSI computer-aided design (CAD) ...|$|E
40|$|In VLSI {{physical}} design, the routing task {{consists of}} using over-the-cell metal wires to connect pins and ports of circuit gates and blocks. Traditionally, VLSI routing {{is an important}} design step {{in the sense that}} the quality of routing solution has great impact on various design metrics such as circuit timing, power consumption, chip reliability and manufacturability etc. As the advancing VLSI design enters the nanometer era, the routing success (routability issue) has been arising as one of the most critical problems in back-end design. In one aspect, the degree of design complexity is increasing dramatically as more and more modules are integrated into the chip. Much higher chip density leads to higher routing demands and potentially more risks in routing failure. In another aspect, with decreasing design feature size, there are more complex design rules imposed to ensure manufacturability. These design rules are hard to satisfy and they usually create more barriers for achieving routing closure (i. e., generate DRC free routing solution) and thus affect chip time to market (TTM) plan. In general, the behavior and performance of routing are affected by three consecutive phases: placement phase, global routing phase and detailed routing phase in a typical VLSI physical design flow. Traditional CAD tools handle each of the three phases independently and the global picture of the routability issue is neglected. Different from conventional approaches which propose tools and algorithms for one particular design phase, this thesis investigates the routability issue from all three phases and proposes a series of systematic solutions to build a more generic flow and improve quality of results (QoR). For the placement phase, we will introduce a mixed-sized placement refinement tool for alleviating congestion after placement. The tool shifts and relocates modules based on a global routing estimation. For the global routing phase, a very fast and effective global router is developed. Its performance surpasses many peer works as verified by ISPD 2008 global routing contest results. In the detailed routing phase, a tool is proposed to perform detailed routing using <b>regular</b> <b>routing</b> patterns based on a correct-by-construction methodology to improve routability as well as satisfy most design rules. Finally, the tool which integrates global routing and detailed routing is developed to remedy the inconsistency between global routing and detailed routing. To verify the algorithms we proposed, three sets of testcases derived from ISPD 98 and ISPD 05 / 06 placement benchmark suites are proposed. The results indicate that our proposed methods construct an integrated and systematic flow for routability improvement which is better than conventional methods...|$|E
40|$|A Mobile Ad Hoc Network (MANET) is an {{unstructured}} {{collection of}} wireless nodes that move arbitrarily and use multi-hop protocols to communicate between each other. There {{is not a}} predefined infrastructure in a MANET {{as there is in}} other types of wireless networks. Now days, MANET networks integrate with other networks, like the Internet, permitting ad hoc nodes to communicate with hosts placed in any part of the world. But the integration of MANETs with fixed infrastructures must be carefully studied to evaluate how it performs. In such integrated scenario, commonly known as Hybrid Ad Hoc Network, a MANET can be seen as an extension to the existing infrastructure, whose mobile nodes seamlessly communicate with hosts on the fixed network by forwarding packets throughout the gateways found on the edge that join both types of network. Connecting MANETs to the Internet does not come without difficulties. Ad hoc routing protocols work different than the <b>regular</b> <b>routing</b> protocols used on the Internet, and their interoperability becomes an important issue. But when MANETs integrate with the Internet, a more demanding challenge emerges if node mobility is considered. A moving node may lose registration with its current gateway, and may then need to register to a different gateway (a handover) to continue communicating. During a handover, any ongoing communication will be interrupted affecting network performance. In order to improve this performance, an IP mobility management protocol must be used. The main objective of this research is to develop a model that may be used to evaluate the performance of MANET handovers under different scenarios. Different issues about MANET integration with the Internet are considered: the IP mobility protocol implemented, the external route computation procedure, the type of ad hoc routing protocol used, and the gateway discovery approach used. For this evaluation, a mobile node in a MANET holding a communication with a correspondent node in the Internet roams to a different sub-network, having to change its registration to a different gateway. The different scenarios considered to evaluate the handover performance include the use of different types of MANET protocols, the use of different gateway discovery approaches, and the use of different versions of the Mobile IP protocol. During the research a review was made of the functioning conditions for the proposed scenario. Then, a handover model was proposed, which was used to develop some metrics that were later used to evaluate the MANET handover performance. This metrics are the broken communication time, the probability of handover failure, and the average communication interruption time. In all the results found, we could confirm that the proactive discovery approach has a better handover performance than the reactive discovery approach, which permit us to conclude that regardless the MANET routing protocol, and the Mobile IP version, the proactive agent discovery approach should be used in highly mobile scenarios, preferable, with the reactive routing protocol. ...|$|E
50|$|In any case, the Mantineans and {{the right}} part of the Argives, the elite Argive Thousand entered the gap and routed the Brasideans and the Sciritae and pursued {{them for a long}} distance. In the meantime, the Tegeans and the <b>regular</b> Spartan army <b>routed</b> the Athenians and the Arcadians that formed the left part of the Argive army. Most of them 'did not even stand to fight, but they fled as the Spartans approached; some were even trampled in their hurry to get away before the enemy reached them'.|$|R
40|$|DataRouter {{forwards}} {{network layer}} packets using application layer tags, without requiring per-hop termination of transport protocols {{and the consequent}} reimplementation of transport services in the application. DataRouter provides network delivery based on pattern matching and string replacement. It combines a byte string as a loose source route IP option tag and <b>regular</b> expression <b>routing</b> entries to provide a new network service. DataRouter tags {{have a variety of}} forms, including fixed-length with exact matches for distributed hash tables and variable-length with regular expression matches for URL redirection. Tagged IPv 6 packets traverse non-DataRouter routers transparently. On a platform forwarding IPv 4 packets at 310 K packets/sec., an unoptimized FreeBSD IPv 4 DataRouter forwards hash-match packets at up to 270 K packets/sec. (87 % of max.) and pattern-match packets 155 K packets/sec. (50 % of max.). DataRouter thus provides a viable, higher-performance alternative to application-layer implementation of forwarding, in a generic service more interoperable with existing network and transport protocols...|$|R
40|$|Abstract. We {{consider}} {{the impact of}} scheduling disciplines on the per-formance of routing {{in the framework of}} adversarial queuing. We pro-pose an adversarial model which reflects stalling of packets due to tran-sient failures and explicitly incorporates the feedback produced by the network when packets are stalled. This adversarial model provides a methodology to study stability of routing protocols when flow-control and congestion-control mechanisms affect the volume of traffic. We show that any scheduling policy that is universally stable, in the <b>regular</b> model of <b>routing</b> that additionally allows packets to have two priorities, remains stable in the proposed adversarial model. ...|$|R
40|$|This paper realizes {{techniques}} {{supporting the}} position that strategies for resource location and discovery in distributed systems should be both perturbation-resistant and overlay-independent. Perturbation-resistance means that inserts and lookups must be robust to ordinary stresses such as node perturbation, which may arise out of congestion, competing client applications, or user churn. Overlayindependence implies that the insert and lookup strategies, and to an extent their performance, should be independent of the actual structure of the underlying overlay. We first show how a well-known distributed hash table (Pastry) may degrade under perturbation. We then present a new resource location and discovery algorithm called MPIL (Multi-Path Insertion/Lookup) that is perturbation-resistant and overlay-independent. MPIL is overlay-independent in that it effectively provides to the distributed application an ability to insert and lookup Pastry objects in an overlay with Pastry IDs, but without {{the need to have}} Pastry-style overlay maintenance (i. e., the overlay underneath can be arbitrary). We quantify, through analysis and simulation results, the behavior of MPIL over complete, random, and powerlaw overlays. We also show how MPIL outperforms <b>regular</b> Pastry <b>routing</b> when there is perturbation. ...|$|R
500|$|Mobutu's {{support for}} the FNLA policy backfired when the MPLA won in Angola. The MPLA, then, acting ostensibly at least as the [...] (Front for the National Liberation of the Congo), {{occupied}} Zaire's Katanga Province, then known as Shaba, in March 1977, facing little resistance from the FAZ. This invasion is sometimes known as Shaba I. Mobutu had to request assistance, which was provided by Morocco {{in the form of}} <b>regular</b> troops who <b>routed</b> the MPLA and their Cuban advisors out of Katanga. The humiliation of this episode led to civil unrest in Zaire in early 1978, which the FAZ had to put down.|$|R
30|$|Existing routing {{protocols}} of VANETs {{fall into two}} major categories: topology-based and geographic routing. Topology-based routing [3 – 5] uses the information about links {{that exist in the}} network to perform packet forwarding. Since link information changes in a <b>regular</b> basis, topology-based <b>routing</b> suffers from routing breaks, so this kind of {{routing protocols}} is not suitable for VANETs. Geographic routing [6 – 15] uses neighboring location information to perform packet forwarding. In this kind of routing protocols, nodes are unnecessary to maintain a topology map or exchange link state information or maintain established routes as they do in a conventional mobile ad hoc routing protocol. Therefore, geographic routing can better adapt to network size and topology changes.|$|R
40|$|Modeling the {{forwarding}} feature {{and analyzing}} the performance theoretically for opportunistic routing in wireless multihop network are of great challenge. To address this issue, a generalized geometric distribution (GGD) is firstly proposed. Based on the GGD, the forwarding probability between any two forwarding candidates {{could be calculated}} {{and it can be}} proved that the successful delivery rate after several transmissions of forwarding candidates is irrelevant to the priority rule. Then, a discrete-time queuing model is proposed to analyze mean end-to-end delay (MED) of a <b>regular</b> opportunistic <b>routing</b> with the knowledge of the forwarding probability. By deriving the steady-state joint generating function of the queue length distribution, MED for directly connected networks and some special cases of nondirectly connected networks could be ultimately determined. Besides, an approximation approach is proposed to assess MED for the general cases in the nondirectly connected networks. By comparing with a large number of simulation results, the rationality of the analysis is validated. Both the analysis and simulation results show that MED varies with the number of forwarding candidates, {{especially when it comes to}} connected networks; MED increases more rapidly than that in nondirectly connected networks with the increase of the number of forwarding candidates...|$|R
5000|$|On June 11 Missouri Governor Claiborne Fox Jackson held {{a last-ditch}} {{meeting at the}} Planter's House Hotel in St. Louis to delay open {{conflict}} in the State. Jackson was an open Confederate sympathizer and Price had been a conditional Unionist until the Camp Jackson Affair. During the meeting, Lyon angrily refused Price's requests to limit federal forces to the metropolitan St. Louis area, and to disband [...] "Home Guard" [...] companies established by Missouri Unionists. Lyon refused to accept any limitations on his military actions in the state, and eventually halted the meeting, informing Governor Jackson and MG Price that such limitations on federal authority [...] "means war". Price and Jackson returned to the State Capitol at Jefferson City, and worked to concentrate State Guard forces in anticipation of open warfare with Unionist forces. Three days later Lyon landed troops {{at the state capitol}} from steamboats and occupied the city without a shot fired. Lyon's mixed force of volunteers and <b>Regulars</b> subsequently <b>routed</b> the State Guard at the June 17, 1861 Battle of Boonville which gave Unionist forces control of Jefferson City, the Missouri River line and the strategic North Missouri Railroad.|$|R
40|$|International audienceProblem:• Routing is a {{challenge}} in DTNs (Delay Tolerant Networks). <b>Regular</b> ad- hoc <b>routing</b> protocols fail because the topology suffers from connectivity disruptions. Proposition:• We propose to use mobility patterns of nodes, i. e. regularities in nodes contacts or movements, to define their position in a virtual Euclidean space used for routing. This space is called the MobySpace. • Each node’s position in the MobySpace (its MobyPoint) is flooded throughout the network. Other nodes use this information for routing. • To route a bundle, a node chooses among its physical neighbors. It passes the bundle to the neighbor whose MobyPoint is closest to the destination’s. • The MobySpace can be defined in many ways, e. g. type/number of dimensions, distance function. This poster describes preliminary work...|$|R
