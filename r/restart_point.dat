11|60|Public
25|$|Aside {{from the}} {{addition}} of the southern route, the route has remained relatively constant. The largest changes were {{the addition of}} the restart location in 1995 and the shift from Ptarmigan to Rainy Pass in 1996. Checkpoints along the route are also occasionally added or dropped, and the ceremonial start of the route and the <b>restart</b> <b>point</b> are commonly adjusted depending on weather.|$|E
2500|$|This is an {{exciting}} portion of the race for dogs and musher, as {{it is one of}} the few portions of the race where there are spectators, and the only spot where the trail winds through an urban environment. However, in [...] "Iditarod Dreams", DeeDee Jonrowe wrote, [...] "A lot of mushers hate the Anchorage start. They don't like crowds. They worry that their dogs get too excited and jumpy. The time for covering this portion of the race does not count toward the official race time, so the dogs, musher, and Idita-Rider are free to take this all in at a relaxed pace. The mushers then continue through several miles of city streets and city trails before reaching the foothills to the east of Anchorage, in Chugach State Park in the Chugach Mountains. The teams then follow Glenn Highway for two to three hours until they reach Eagle River, [...] away. Once they arrive at the Veterans of Foreign Wars building, the mushers check in, unharness their teams, return them to their boxes, and drive [...] of highway to the <b>restart</b> <b>point.</b>|$|E
5000|$|... #Caption: Musher Thomas Knolmayer at the Willow <b>restart</b> <b>point.</b>|$|E
40|$|When {{an error}} {{occurs in a}} {{manufacturing}} cell it sometimes means that the whole cell has to be emptied and then re-initialized before production can continue. Obviously, {{this is not an}} optimal approach. Instead, an automatic restart as close as possible in state and space to the one where the error first occurred should be strived for. One way of achieving this is by using the concept of <b>restart</b> <b>points,</b> that is, production states from which a cell can continue its work after the occurrence of an error, sometimes transparently. By restarting from such <b>restart</b> <b>points</b> a lot of actions {{do not need to be}} taken. Nonetheless, the <b>restart</b> <b>points</b> have to be identified. This paper presents a control system architecture (known as CHAMP) that, among other things, enables the fast restart of a machining cell after the occurrence of different error types through the use of <b>restart</b> <b>points.</b> The different error types that can be handled are described and the necessary actions to obtain fast [...] ...|$|R
50|$|Platform gives players a {{start and}} finish point with {{mandatory}} checkpoints and <b>restart</b> <b>points</b> in between. The {{objective is to}} finish the race while restarting as few times as possible. Many of these races have jumps and other features that {{make it difficult to}} stay on the track.|$|R
5000|$|... 1. - Race was {{abandoned}} after second <b>restart,</b> half <b>points</b> awarded.|$|R
50|$|Restart at Willow: From the Airstrip {{the teams}} were shipped by truck to the <b>restart</b> <b>point,</b> which is {{normally}} at the Iditarod Headquarters in Wasilla. Due to inclement weather the restart was moved 30 mi north to Willow, and the checkpoint at Knik was skipped.|$|E
50|$|Aside {{from the}} {{addition}} of the southern route, the route has remained relatively constant. The largest changes were {{the addition of}} the restart location in 1995 and the shift from Ptarmigan to Rainy Pass in 1996. Checkpoints along the route are also occasionally added or dropped, and the ceremonial start of the route and the <b>restart</b> <b>point</b> are commonly adjusted depending on weather.|$|E
5000|$|This is an {{exciting}} portion of the race for dogs and musher, as {{it is one of}} the few portions of the race where there are spectators, and the only spot where the trail winds through an urban environment. However, in [...] "Iditarod Dreams", DeeDee Jonrowe wrote, [...] "A lot of mushers hate the Anchorage start. They don't like crowds. They worry that their dogs get too excited and jumpy. The time for covering this portion of the race does not count toward the official race time, so the dogs, musher, and Idita-Rider are free to take this all in at a relaxed pace. The mushers then continue through several miles of city streets and city trails before reaching the foothills to the east of Anchorage, in Chugach State Park in the Chugach Mountains. The teams then follow Glenn Highway for two to three hours until they reach Eagle River, 20 mi away. Once they arrive at the Veterans of Foreign Wars building, the mushers check in, unharness their teams, return them to their boxes, and drive 30 mi of highway to the <b>restart</b> <b>point.</b>|$|E
50|$|Willy has {{a limited}} amount of time to make his way through each level, as {{indicated}} by a bonus counter {{at the bottom of the}} screen which counts down from 1000 in increments of 10; when the counter reaches zero, one life is lost and the level <b>restarts.</b> <b>Points</b> remaining at the end of the level are added to the player's score. The player also earns points by jumping cannonballs (20 points) or collecting presents (100 points).|$|R
40|$|This paper {{presents}} {{our first}} attempt to apply Support Vector Machines {{to the problem of}} automatically tuning CP search algorithms. More precisely, we exploit instances features to dynamically adapt the search strategy of a CP solver in order to more efficiently solve a given instance. In these preliminary results, adaptation is restricted to <b>restart</b> <b>points,</b> and the number of times the strategy changes is also restricted. We report very encouraging results where our adaptation outperforms what is currently considered as one {{of the state of the}} art dynamic variable selection strategy. ...|$|R
40|$|International Symposium on Combinatorial Search - 2009 This paper {{presents}} {{our first}} attempt to apply Support Vector Machines {{to the problem of}} automatically tuning CP search algorithms. More precisely, we exploit instances features to dynamically adapt the search strategy of a CP solver in order to more efficiently solve a given instance. In these preliminary results, adaptation is restricted to <b>restart</b> <b>points,</b> and the number of times the strategy changes is also restricted. We report very encouraging results where our adaptation outperforms what is currently considered as one {{of the state of the}} art dynamic variable selection strategy...|$|R
40|$|AbstractIn this paper, Trajectory Scheduling Methods (TSMs) are {{proposed}} for the permutation flowshop scheduling problem with total tardiness minimization criterion. TSMs belong to an iterative local search framework, in which local search is performed on an initial solution, a perturbation operator is deployed to improve diversification, and a <b>restart</b> <b>point</b> mechanism is used to select the new start point of another cycle. In terms of the insertion and swap neighborhood structures, six composite heuristics are introduced, which exploit the search space with a strong intensification effect. Based on purely insertion-based or swap-based perturbation structures, three compound perturbation structures are developed that construct a candidate <b>restart</b> <b>point</b> set rather than just a single <b>restart</b> <b>point.</b> The distance between the current best solution and each start point of the set is defined, according to which the diversification effect of TSMs can be boosted by choosing the most appropriate <b>restart</b> <b>point</b> for the next iteration. A total of 18 trajectory scheduling methods are constructed by different combinations of composite heuristics. Both {{the best and worst}} combinations are compared with three best existing sequential meta-heuristics for the considered problem on 540 benchmark instances. Experimental results show that the proposed heuristics significantly outperform the three best existing algorithms within the same computation time...|$|E
40|$|International audienceIn this work, our {{objective}} is to study the impact of knowledge sharing {{on the performance of}} portfolio-based parallel local search algorithms. Our work is motivated by the demonstrated importance of clause-sharing in the performance of complete parallel SAT solvers. Unlike complete solvers, state-of-the-art local search algorithms for SAT are not able to generate redundant clauses during their execution. In our settings, each member of the portfolio shares its best configuration (i. e., one which minimizes conflicting clauses) in a common structure. At each <b>restart</b> <b>point,</b> instead of classically generating a random configuration to start with, each algorithm aggregates the shared knowledge to carefully craft a new starting point. We present several aggregation strategies and evaluate them on a large set of problems...|$|E
30|$|One {{can show}} that BFGS–GCR always converges for SPD {{matrices}} which are mainly discussed in the present study: First, the residual norm in the flexible GCR always becomes small at each GCR iteration with SPD matrices, and therefore the flexible GCR always converges (Hayami and Sugihara 2004). Second, if the initial Hessian matrix is SPD, the BFGS update always provides SPD Hessian matrices (Nocedal and Wright 1999). Both the diagonal scaling and SSOR provide SPD preconditioning matrices if the original coefficient matrices are SPD (Kushida 2015). Therefore, the Hessian matrices {{in this study are}} also SPD within SPD problems. Finally, precenditioned matrices with SPD preconditioning matrices are also SPD (Kushida 2015). With those points, BFGS–GCR always converges with the diagonal scaling and SSOR within SPD problems although the preconditioning matrices vary at each <b>restart</b> <b>point.</b> In addition, as discussed in this section, the BFGS preconditioning provides a better approximation as the BFGS step continues. Consequently, BFGS–GCR converges faster than the preconditioned GCR.|$|E
25|$|This {{is related}} to the {{so-called}} resumption model of exception handling, in which some exceptions are said to be continuable: it is permitted to return to the expression that signaled an exception, after having taken corrective action in the handler. The condition system is generalized thus: within the handler of a non-serious condition (a.k.a. continuable exception), it is possible to jump to predefined <b>restart</b> <b>points</b> (a.k.a. <b>restarts)</b> that lie between the signaling expression and the condition handler. Restarts are functions closed over some lexical environment, allowing the programmer to repair this environment before exiting the condition handler completely or unwinding the stack even partially.|$|R
50|$|Denny Hamlin led {{the field}} to the green flag at 1:20 p.m. but Brad Keselowski took the lead from him to lead lap one. The first caution of the day came out at lap 32 for {{a fire in the}} inside wall in turn 3. The fire {{apparently}} was in the area where pyrotechnics were launched during the pre-race ceremonies. After getting into the rear of Jamie McMurray and damaging {{the front of the car}} on the ensuing <b>restart,</b> <b>points</b> leader Matt Kenseth wound up going a lap down on lap 50. Keselowski led the first 57 laps until he came in to pit and Jeff Gordon took the lead for one lap before handing it to Tony Stewart.|$|R
5000|$|... Race {{was stopped}} after 10 laps due to heavy rain. The race was not <b>restarted</b> and no <b>points</b> were awarded.|$|R
40|$|The {{problem is}} {{considered}} {{of finding a}} global minimum point of a given continuously differ-entiable function. The strategy is adopted of a sequential nonmonotone improvement of local optima. In particular, to escape the basin of attraction of a local minimum, a suitable gaussian-based filling function is constructed using the quadratic model of the objective function, and added to the objective to fill the basin. Then, a procedure is defined where some new minima are determined, and that of them with the lowest function value is selected as the subsequent <b>restarting</b> <b>point,</b> even if its basin {{is higher than the}} starting one. The algorithm is applied to a set of test functions from the literature and the numerical results are reported. Key words: Global optimization, unconstrained minimization, gradient methods. A filling function method for unconstrained global optimization F. Lampariello∗, G. Liuzzi...|$|R
5000|$|Kim debuted with Kim Gun Mo 1 in 1992, {{which was}} {{followed}} by his second album Excuse in 1993. His third album Mis-Encounter came out in 1995. In the following year, he released Exchange. As {{one of the most}} popular Korean entertainers, Kim holds the record for biggest selling album in Korea with his third studio album, which sold over 3.3 million copies. Kim's albums rank consistently high on Korean music charts; his 8th album, ‘He-story,’ was the best-selling album of 2003. His most famous songs include [...] "Excuse", “Mis-Encounter”, and “Jjangga”. In 2004, he released his 9th album Kim Gun Mo 9 which is reminiscent of his first album. This album was his second <b>restarting</b> <b>point</b> in his music career. In the following year, he came up with BE Like...which was also a huge success in Korea. His most recent work was released in 2008, entitled, Soul Groove.|$|R
50|$|Allowing {{the player}} {{to save the}} game state to disk, so that the game can be <b>restarted</b> from that <b>point</b> {{even if it does}} not support saving.|$|R
50|$|In 2009, the ISPA <b>restarted</b> the {{exchange}} <b>point</b> in Cape Town, CINX, to complement JINX, and in September 2012, an exchange point in Durban, (DINX), was started.|$|R
40|$|Abstract. Breakdown in Lanczos-type {{algorithms}} is {{a common}} phenomenon {{which is due to}} the non-existence of some orthogonal polynomials. It causes the solution process to halt. It is, therefore, important to deal with it to improve the resilience of the algorithms and increase their usability. In this paper, we consider restarting from a number of different approximate solutions that seem to be attractive starting points. They are: (a) the last iterate preceding breakdown, (b) the iterate with minimum residual norm found so far, and (c) the approximate solution whose entries are the median values of entries of all iterates generated by the Lanczos-type algorithm considered. Although it has been shown theoretically in the context of Arnoldi-type algorithms as well as Lanczos-type algorithms that restarting mitigates breakdown and allows the iterative process to continue and converge to good solutions, here we give an alternative theorem to that effect and a proof of it. However, emphasis is {{on the quality of the}} <b>restarting</b> <b>points.</b> Numerical results are included...|$|R
40|$|In {{this paper}} we {{describe}} how {{to generate a}} large set of <b>restart</b> <b>points</b> for a sequential control program, thus enabeling fast restart of a plant after a fault and subsequent repair. This is work in progress, and will recapitulate the main idea as developped in the Aramis project, and discuss its applicability to the programming languages defined by IEC 1131 - 3. KEYWORDS: error recovery, sequential control, task-level programming INTRODUCTION The languages used to instruct the production equipment at a shop floor are primarily designed for describing the normal flow of activities [...] - sequential control in combination with continuous control. The handling of an abnormal or unforeseen situation is generally not supported. If such situations must be dealt with, this must be explicitly encoded using the same language elements as for the normal control. There exist several attempts to use different form of planning formalisms to synthesise the program, given a specification of goals or inte [...] ...|$|R
500|$|Mega Man X {{received}} {{criticism from}} some publications as well. Ed Semrad, Danyon Carpenter, and Al Manuel of the EGM review panel all {{noted that the}} game may have too low a difficulty level; Semrad disliked the introductory stage and felt that the game was too short as well. Super Play editor Zy Nicholson lowered his review score of the game because he found the levels were neither large nor challenging. [...] "A few elementary tricks like repeating easy sections to recoup energy and weapon power will see you through the harder bits," [...] Nicholson explained. [...] "Within the level you'll also find <b>restart</b> <b>points,</b> extra lives, and no harsh time limit {{to put pressure on}} your performance. Couple this with a password system that records your level completion, status and weapon accumulation and you'll see we're not looking at a lasting challenge for the experienced player." [...] Nintendo Power criticized how little the game had changed stating that [...] "the theme remains the same as the Game Boy and NES Mega Man titles." ...|$|R
50|$|Classical {{techniques}} of optimization would need multiple <b>restart</b> <b>points</b> and multiple {{runs in the}} hope that a different solution may be discovered every run, with no guarantee however. Evolutionary algorithms (EAs) due to their population based approach, provide a natural advantage over classical optimization techniques. They maintain a population of possible solutions, which are processed every generation, and if the multiple solutions can be preserved over all these generations, then at termination of the algorithm we will have multiple good solutions, rather than only the best solution. Note that this is against the natural tendency of classical optimization techniques, which will always converge to the best solution, or a sub-optimal solution (in a rugged, “badly behaving” function). Finding and maintenance of multiple solutions is wherein lies the challenge of using EAs for multi-modal optimization. Niching is a generic term referred to as the technique of finding and preserving multiple stable niches, or favorable parts of the solution space possibly around multiple solutions, so as to prevent convergence to a single solution.|$|R
5000|$|Mega Man X {{received}} {{criticism from}} some publications as well. Ed Semrad, Danyon Carpenter, and Al Manuel of the EGM review panel all {{noted that the}} game may have too low a difficulty level; Semrad disliked the introductory stage and felt that the game was too short as well. Super Play editor Zy Nicholson lowered his review score of the game because he found the levels were neither large nor challenging. [...] "A few elementary tricks like repeating easy sections to recoup energy and weapon power will see you through the harder bits," [...] Nicholson explained. [...] "Within the level youll also find <b>restart</b> <b>points,</b> extra lives, and no harsh time limit {{to put pressure on}} your performance. Couple this with a password system that records your level completion, status and weapon accumulation and youll see were not looking at a lasting challenge for the experienced player." [...] Nintendo Power criticized how little the game had changed stating that [...] "the theme remains the same as the Game Boy and NES Mega Man titles." ...|$|R
50|$|After the {{suspension}} of construction on the tunnel in the 1930s, there was optimism through to the 1950s {{that it would be}} <b>restarted</b> at some <b>point,</b> particularly after residential development commenced at Wainuiomata in 1941.|$|R
50|$|The Royals {{protested the}} game, and American League {{president}} Lee MacPhail upheld their protest and ordered {{that the game}} be <b>restarted</b> from the <b>point</b> of Brett's home run. The game was restarted on August 18 and officially ended with the Royals winning 5-4.|$|R
50|$|Checkpointing is a {{technique}} to add fault tolerance into computing systems. It basically consists of saving {{a snapshot of the}} application's state, so that it can <b>restart</b> from that <b>point</b> in case of failure. This is particularly important for long running applications that are executed in failure-prone computing systems.|$|R
40|$|Before {{attempting}} to solve {{an instance of}} the satisfiability problem, what can we ascertain about the instance at hand {{and how can we}} put that information to use when selecting and tuning a SAT algorithm to solve the instance? We argue for an ensemble-based approach and describe an illustrative example of how such a methodology can be applied to determine optimal <b>restart</b> cutoff <b>points</b> for systematic, backtracking search procedures for SAT. We discuss the methodology and indicate how it can be applied to evaluate such strategies as restarts, algorithm comparison, randomization and portfolios of algorithms...|$|R
25|$|Jaussen's {{informant}} Metoro Tau‘a Ure {{started his}} 'reading' of the tablet {{at the bottom}} of the verso, contradicting Pozdniakov's determination of the order. In addition, instead of continuing on the recto at the point where the verso left off, he <b>restarted</b> at the <b>point</b> diagonally opposite with a new subject.|$|R
50|$|For any attacking {{team that}} kicks {{the ball from}} the outside the {{opponent}}s 30m line (30m from try line) and the ball goes dead in-goal, the opponent will receive the ball via a handover (tap <b>restart)</b> from the <b>point</b> where the kick originated once the match officials are in place.|$|R
50|$|Jaussen's {{informant}} Metoro Tau‘a Ure {{started his}} 'reading' of the tablet {{at the bottom}} of the verso, contradicting Pozdniakov's determination of the order. In addition, instead of continuing on the recto at the point where the verso left off, he <b>restarted</b> at the <b>point</b> diagonally opposite with a new subject.|$|R
40|$|Lanczos-type {{algorithms}} {{are prone}} to breaking down before convergence to an acceptable solution is achieved. This study investigates {{a number of ways}} to deal with this issue. In the first instance, we investigate the quality of three types of <b>restarting</b> <b>points</b> in the <b>restarting</b> strategy when applied to a particular Lanczos-type algorithm namely Orthodir. The main contribution of the thesis, however, is concerned with using regression as an alternative way to deal with breakdown. A Lanczos-type algorithm is run for a number of iterations and then stopped, ideally, just before breakdown occurs. The sequence of generated iterates is used to build up a regression model that captures the characteristic of this sequence. The model is then used to generate new iterates that belong to that sequence. Since the iterative process of Lanczos is circumvented, or ignored, while using the model to find new points, the breakdown issue is resolved, at least temporarily, unless convergence is achieved. This new approach, called EIEMLA, is shown formally, through extrapolation, that it generates a new point which is at least as good as the last point generated by the Lanczos-type algorithm prior to stoppage. The remaining part of the thesis reports on the implementation of EIEMLA sequentially and in parallel on a standard parallel machine provided locally and on a Cloud Computing platform, namely Domino Data Lab. Through these implementations, we have shown that problems with up to $ 10 ^ 6 $ variables and equations can be solved with the new approach. Extensive numerical results are included in this thesis. Moreover, we point out some important issues for further investigation...|$|R
50|$|The {{team that}} kicked is awarded a tap-kick <b>restart</b> from the <b>point</b> {{that the ball}} left the field. Before the 40-20 rule, the non-kicking team would have {{otherwise}} been awarded the scrum feed. Until recent years, a successful 40-20 kick resulted in a scrum for the kicking team. This was changed and now the attacking team is awarded a tap restart in line from where the ball went out of bounds.|$|R
