4|43|Public
5000|$|A bipolar {{transistor}} switch is the simplest <b>RTL</b> <b>gate</b> (inverter or NOT gate) implementing logical negation. It {{consists of a}} common-emitter stage with a base resistor connected between the base and the input voltage source. The role of the base resistor is to expand the negligible transistor input voltage range (about 0.7 V) to the logical [...] "1" [...] level (about 3.5 V) by converting the input voltage into current. Its resistance is settled by a compromise: it is chosen low enough to saturate the transistor and high enough to obtain high input resistance. The role of the collector resistor is to convert the collector current into voltage; its resistance is chosen high enough to saturate the transistor and low enough to obtain low output resistance (high fan-out).|$|E
40|$|While the IEEE P 1500 {{standards}} {{working group}} {{is on the}} verge of recommending a standard test interface for &quot;non-mergeable &quot; cores, a need was felt to adopt a standard methodology to achieve easy test interoperability for &quot;non-merged &quot; core (<b>RTL,</b> <b>gate</b> level) integration. A task force was formed under the P 1500 working group investigating this issue and came up with a recommendation. DFT Disclosure Document (DDD) was the outcome of this exercise. The DDD, targeted to be an IEEE standard recommended practice document, aims at capturing the DFT related experience the core provider would like to share with the integrator to facilitate easy test integration. This paper presents the objective and structure of this document along with some use models from participating companies as well as an example. ...|$|E
40|$|This paper {{describes}} a high-level multi-HDL design process applied to an industrial {{design of a}} single chip Videophone Codec. It makes use of many state-of-the-art design tools and methods: • Behavioural VHDL control path synthesis for the controller of the Codec motion estimator. • Behavioural DSP synthesis from Silage to generate an application-specific calculation unit that performs vector prediction for the motion estimator. • Retargetable C compilation for an embedded application-specific microcontroller. • Multi-level (behavioural, <b>RTL,</b> <b>gate)</b> and multi-language (VHDL, Silage, C) co-simulation. We will show that, {{with respect to a}} manual design process, the use of these tools led to the following results: • A five-fold reduction in the source HDL description complexity. • Equal or better timing performance. • Silicon area within 15 % (4 % area overhead for the DSP operator, and 14 % overhead for the controller). • Automatically compiled assembly code (from ANSI C descriptions) that is as compact as hand-coded assembler. We also identified a strong need to pay attention to design verification issues, especially when dealing with multi-level descriptions and multiple languages. Validation of the design was the single most time consuming part of the process...|$|E
5000|$|A {{standard}} {{integrated circuit}} <b>RTL</b> NOR <b>gate</b> can {{drive up to}} 3 other similar gates.Alternatively, it has enough output to drive up to 2 standard integrated circuit RTL [...] "buffers", each of which can drive up to 25 other standard <b>RTL</b> NOR <b>gates.</b>|$|R
50|$|To build a {{functionally}} complete logic system, relays, valves (vacuum tubes), or transistors can be used. The simplest {{family of}} logic gates using bipolar transistors is called resistor-transistor logic (RTL). Unlike simple diode logic gates (which {{do not have}} a gain element), <b>RTL</b> <b>gates</b> can be cascaded indefinitely to produce more complex logic functions. <b>RTL</b> <b>gates</b> were used in early integrated circuits. For higher speed and better density, the resistors used in RTL were replaced by diodes resulting in diode-transistor logic (DTL). Transistor-transistor logic (TTL) then supplanted DTL. As integrated circuits became more complex, bipolar transistors were replaced with smaller field-effect transistors (MOSFETs); see PMOS and NMOS. To reduce power consumption still further, most contemporary chip implementations of digital systems now use CMOS logic. CMOS uses complementary (both n-channel and p-channel) MOSFET devices to achieve a high speed with low power dissipation.|$|R
5000|$|... #Caption: Flatpack <b>RTL</b> NOR <b>gate</b> {{integrated}} circuits in the Apollo guidance computer ...|$|R
40|$|For {{the past}} few decades, {{semiconductor}} capabilities have been improving as Moore's law predicted. Transistor size has been shrinking and technology size will be less than 20 nm in the near future. These improvements enable designers {{to come up with}} more complex systems. However, this has made power dissipation a major design obstacle. Conventionally, power consumption is considered in the later stages of the design process, like the architecture level, Register Transfer Level (<b>RTL),</b> <b>gate</b> level, and physical level, where detailed information about the design is available. Although there are many power-aware design tools at theselower levels, the simulation and evaluation time are high and often beyond the time-to-market requirements. To tackle the long simulation time as well as avoiding time consuming design modifications at lower levels, designers are raising the level of abstraction to the system level. Over the last decade, research in Electronic System Level (ESL) design has resulted in significant advances in addressing the rising design complexity and meeting the required performance constraints. Now a major concern of system-level design is power dissipation in System-on-Chip (SoC) which not only affects battery lifetime but also thermal aspects and reliability of the end product. Although power aware design is crucial in ESL design, System Level Description Languages (SLDL) are not supporting this feature natively. Towards power-aware ESL design, in this dissertation we present MAVO, an automated framework to Monitor, Analyze, Visualize and Optimize both power and performance at {{the early stages of the}} design process. The proposed framework supports waveform-based power estimation and optimization for rapid system-level design. MAVO is adapted for automated SoC design and it is integrated to System-on-Chip Environment, a prototype ESL design tool for rapid power-aware design. We perform different experiments to evaluate the accuracy and fidelity of the framework, including JPEG image encoder, MP 3 audio decoder and H. 264 video decoder and encoder. Experimental results show that our developed framework can achieve a high degree of fidelity while providing significant speedup. We also examined MAVO for applying different power optimization mechanisms on a Canny edge detector application. Our studies show large potential for design modification toward power efficient design models at system-level. Additionally we applied MAVO along withstatic analyzer tool in order to capture power and performance trade-offs and apply power optimization techniques automatically. Overall, our work provides an advanced power estimation infrastructure for power- and performance-aware system model development. It can significantly help embedded system designers to build low-power and reliable products in shorter time frame...|$|E
5000|$|Synthesizable (<b>RTL</b> to <b>gates)</b> MIPS {{processor}} core allowing customer owned tools and customer chosen foundry.|$|R
5000|$|... #Caption: Schematic of a multi-transistor <b>RTL</b> NOR <b>gate</b> used {{to build}} the Apollo Guidance Computer ...|$|R
40|$|This paper {{describes}} a design methodology for reducing ASIC power consumption {{through use of}} the <b>RTL</b> clock <b>gating</b> feature in Synopsys Power Compiler. This feature causes inactive clocked elements to have clock gating logic automatically inserted which reduces power consumption on those elements to zero when the values stored by those elements are not changing. The <b>RTL</b> clock <b>gating</b> feature allows easily configurable, automatically implemented clock gating which allows maximal reduction in power requirements with minimal designer involvement and no software involvement. The paper also discusses the integration of <b>RTL</b> clock <b>gating</b> with full scan techniques, allowing designs to be both low-power and fully testable. The methodology was proven in a 200 K-gate ASIC, which implemented full scan testing and used This paper describes our experience with the <b>RTL</b> clock <b>gating</b> feature of Synopsys Power Compiler. The chip in question is a specialized microcontroller peripheral ASIC designed for performing real-time control of an internal combustion engine. The design was originally scoped at around 60 K gates with a 50 mA dynamic current specification. Over {{the course of the}} progra...|$|R
50|$|In {{high-level}} synthesis, behavioral/algorithmic {{designs in}} ANSI C/C++/SystemC code is synthesized to RTL, {{which is then}} synthesized into gate level through logic synthesis. Functional verification is the task to make sure a design at <b>RTL</b> or <b>gate</b> level conforms to a specification. As logic synthesis matures, most functional verification is done at the higher abstraction, i.e. at RTL level, the correctness of logic synthesis tool in the translating process from <b>RTL</b> description to <b>gate</b> netlist is a less concern today.|$|R
40|$|SPI (Serial Peripheral Interface) is {{a serial}} {{interface}} which facilitates the synchronous serial data transfer between 2 devices. It operates in master and slave modes. AMBA (Advanced Microcontroller Bus Architecture) is an on chip bus developed by ARM Ltd. and {{is widely used}} in Soc designs. AHB (Advanced High Performance Bus) is a high frequency and high bandwidth bus which comes under AMBA classification. The AMBA-AHB slave interface programs the SPI registers. In this paper the power consumption of AHB SPI-Master is being optimized by using <b>RTL</b> clock <b>gating</b> technique. The <b>RTL</b> clock <b>gating</b> technique is used for reducing dynamic power consumption. The overall design comprises of AHB- slave interface, SPImaster, SCLK generator, gated clock and memory. RTL coding is done in verilog. Simulations are observed in MODELSIM simulator and power is calculated by loading the design in Lattice diamond FPGA kit...|$|R
5000|$|Direct-coupled {{transistor}} logic (DCTL) {{is similar}} to resistor-transistor logic (RTL) but the input transistor bases are connected directly to the collector outputs without any base resistors. Consequently, DCTL gates have fewer components, are more economical, and are simpler to fabricate onto integrated circuits than <b>RTL</b> <b>gates.</b> Unfortunately, DCTL has much smaller signal levels, has more susceptibility to ground noise, and requires matched transistor characteristics. The transistors are also heavily overdriven; {{that is a good}} feature in that it reduces the saturation voltage of the output transistors, but it also slows the circuit down due to a high stored charge in the base. [...] Gate fan-out is limited due to [...] "current hogging": if the transistor base-emitter voltages (...) are not well matched, then the base-emitter junction of one transistor may conduct most of the input drive current at such a low base-emitter voltage that other input transistors fail to turn on.|$|R
5000|$|Another {{limitation}} of RTL was its limited fan-in: 3 inputs being the limit for many circuit designs, before it completely lost usable noise immunity. It {{has a low}} noise margin. Lancaster says that integrated circuit <b>RTL</b> NOR <b>gates</b> (which have one transistor per input) may be constructed with [...] "any reasonable number" [...] of logic inputs, and gives {{an example of an}} 8-input NOR gate.|$|R
5000|$|Language is DUT-neutral in {{that you}} can use a single e {{testbench}} to verify a SystemC/C++ model, an <b>RTL</b> model, a <b>gate</b> level model, or even a DUT residing in a hardware acceleration box (using the UVM Acceleration for e Methodology) ...|$|R
40|$|In {{this paper}} we propose a {{framework}} for the incorporation of formal methods in the design flow of DSP (Digital Signal Processing) systems in a rigorous way. In the proposed approach we model and verify DSP descriptions at different abstraction levels using higher-order logic based on the HOL theorem prover. This framework enables the formal verification of DSP designs which in the past could only be done partially using conventional simulation techniques. To this end, we provide a shallow embedding of DSP descriptions in HOL at the floating-point, fixed-point, behavioral, <b>RTL,</b> and netlist <b>gate</b> levels. We make use of existing formalization of floating-point theory in HOL and a parallel one developed for fixed-point arithmetic. The high ability of abstraction in HOL allows a seamless hierarchical verification encompassing the whole DSP design path, starting from top level floating- and fixedpoint algorithmic descriptions down to <b>RTL,</b> and <b>gate</b> level implementations. We illustrate the new verification framework on FFT algorithm as case study. I...|$|R
5000|$|The {{limitations}} of the one-transistor <b>RTL</b> NOR <b>gate</b> are overcome by the multi-transistor RTL implementation. It consists {{of a set of}} parallel-connected transistor switches driven by the logic inputs (see the figure on the right). In this configuration, the inputs are completely separated and the number of inputs is limited only by the small reverse saturation current of the cut-off transistors at output logical [...] "1". The same idea was used later for building DCTL, ECL, some TTL (7450, 7460), NMOS and CMOS gates.|$|R
50|$|Digital {{hardware}} {{is described}} using hardware description languages (HDL) like VHDL, Verilog or System Verilog. These descriptions are simulated {{together with a}} problem-specific testbench. The initial functional verification of most IP designs is done via simulation at register transfer level (<b>RTL)</b> or <b>gate</b> level. In an event driven simulation method the code must be processed sequential by a CPU, because a normal computer {{is not able to}} process the implemented hardware parallel. This sequential approach leads to long simulation times especially in complex systems on chip (SoC) designs.|$|R
40|$|This paper {{proposes a}} {{framework}} for the incorporation of formal methods in the design flow of digital signal processing (DSP) systems in a rigorous way. In the proposed approach, DSP descriptions were modeled and verified at different abstraction levels using higher order logic based on the higher order logic (HOL) theorem prover. This framework enables the formal verification of DSP designs {{that in the past}} could only be done partially using conventional simulation techniques. To this end, a shallow embedding of DSP descriptions in HOL at the floatingpoint (FP), fixed-point (FXP), behavioral, register transfer level (<b>RTL),</b> and netlist <b>gate</b> levels is provided. The paper made use of existing formalization of FP theory in HOL and a parallel one developed for FXP arithmetic. The high ability of abstraction in HOL allows a seamless hierarchical verification encompassing the whole DSP design path, starting from top-level FP and FXP algorithmic descriptions down to <b>RTL,</b> and <b>gate</b> level implementations. The paper illustrates the new verification framework on the fast Fourier transform (FFT) algorithm as a case study...|$|R
40|$|This {{document}} {{presents a}} mixed signal System on Chip design developed at ITESO {{as a test}} vehicle for manufacturing at 180 nm node through MOSIS manufacturing services. The ITESO TV 1 is a serializer and deserializer based on the PCIe protocol. The current report includes details on the design for the deserializer digital module for the SerDes. The testing done at <b>RTL</b> and <b>gate</b> level abstractions to the Deserializer are presented. The report finishes by discussing the VLSI technique used for the system integration of analog and digital modules in the SerDes. This research effort is a first attempt at ITESO to generate a mixed signal complex system for manufacturing...|$|R
40|$|Abstract-This paper {{describes}} {{about the}} design methodology for reducing router power consumption {{with the aid}} of <b>RTL</b> clock <b>gating</b> technique. It causes inactive clocked elements to have clock gating logic (automatically by using cadence tool) which reduces power consumption on those elements to zero when the values stored by those elements are not changing. This technique allows a variety of features such as easily configurable, automatically implemented clock gating which allows maximal reduction in power requirements with minimal designer involvement and software involvement. In this paper, source code was written in Verilog (Hardware Descriptive language) and it was synthesized in Xilinx 9. 1 i version, simulated in Modelsim 6. 6 version and clock gating was applied by using Cadence...|$|R
40|$|Abstract: The {{proposed}} paper presents multiplier-less architecture for the discrete {{wavelet transform}} using canonic signed digit (CSD). In the proposed architecture, the canonic sign digit (CSD) algorithm {{has been applied}} {{to reduce the number of}} full adders required by 2 ’s complement based deigns. The proposed design has been coded in VHDL and functionality is verified by <b>RTL</b> and <b>gate</b> level simulation targeting Xilinx vertex-IV, SF Packet 363. The proposed architecture is based on arithmetic for low complexity and efficient implementation of 2 -D discrete wavelet transform. DWPT provides good temporal and spectral resolutions in arbitrary regions of the time and frequency plane. With this proposed architecture the speed of the 2 -D DWPT operation will increase. This architecture is suitable for high speed on-line applications...|$|R
40|$|This paper {{presents}} spade, {{a system}} for partitioning designs onto multi-fpga architectures. The input to spade is a task graph, that is composed of computational tasks, memory tasks and the communication and synchronization between tasks. spade consists of an iterative partitioning engine, an architectural constraint evaluator, and a throughput optimization and rtl design space exploration heuristic. We show how various architectural constraints can be effectively handled using an iterative partitioning engine. 1 Introduction The primary focus of existing multi-fpga partitioning research is <b>rtl</b> or <b>gate</b> level partitioning. A popular and advantageous system-synthesis approach is to perform behavioral partitioning prior to, or during, the high-level synthesis process [1]. Although several interesting features {{may be found in}} existing multi-fpga partitioning techniques, {{it is very difficult to}} adapt any of them to suite partitioning for a generic multi-fpga board. This is because, stateo [...] ...|$|R
40|$|Logic {{simulation}} is {{a crucial}} veri cation task in processor design. Aiming at signicant acceleration of system simulation we have parallelized IBM's cycle-based simulator TEXSIM. Resulting parallelTEXSIM has already been employed successfully in simulating S/ 390 architectures on IBM SP systems. Here we present parallelTEXSIM together with its model partitioning environment. I. Introduction Verication of processor designs is a real challenge due to rapidly growing design complexity. Ensuring correctness of logic designs containing millions of gates requires {{a large amount of}} simulation. For system simulation at register transfer level (<b>RTL)</b> and <b>gate</b> level (GL) it {{has proven to be a}} good practice to separate timing analysis from functional verication (logic simulation). The application of static timing veriers and cycle-based simulators as tools targeted to the corresponding task is advantage [9]. Considering functional verication, cycle-based simulators are signicantly faster than e [...] ...|$|R
40|$|Abstract: The new EDA {{tools such}} as high level {{automatic}} synthesis and design analysis programs require measurement of testability at one or more levels of abstraction. Depending on the application {{and the level of}} the input hardware description, we may need to measure testability of a design at the <b>gate,</b> <b>RTL</b> or behavioral level. This paper presents a survey of various testability methods at these levels. In the last section of this paper, we compare these methods for their applications, speed and complexity of algorithms. 1...|$|R
40|$|This thesis {{presents}} {{implementation of}} an extension to an existing instruction set architecture, which gains considerable reduction in power consumption. The reduction in power consumption is achieved through coding {{of the most}} frequently executed instructions in a short format done by the compiler based on a profile of previous executions. This leads to fewer accesses to the instruction cache and that more instructions can fit in the cache. Another major advantage is the {{reduction in the number of}} instruction fetch cycles which will also contribute significantly towards reduction in power consumption. The work involves implementing the new processor front-end architecture in ASIC and estimation of power-consumption compared to the normal architecture. Power was estimated using both <b>RTL</b> and <b>gate</b> level estimation methods. As an extension to the thesis the possible architectures which could be implemented in the case of superscalar processors are also discussed. 3...|$|R
40|$|Abstract — Information on false {{paths in}} a circuit {{is useful for}} design and test. Since {{identification}} of the false paths at gate level is hard, several methods using high-level design information have been proposed. These methods are effective only if the correspondence between paths at register transfer level (<b>RTL)</b> and at <b>gate</b> level can be established. Until now, the correspondence has been established only by some restricted logic synthesis. In this paper, we propose a method for mapping RTL false paths to their corresponding gate level paths without such a specific logic synthesis. I...|$|R
40|$|Abstract In {{this paper}} we present an {{integrated}} simulation paradigm in which parallel mixed-mode co-simulation {{is accomplished by}} integrating sequential simulators in a soft-ware simulation backplane. Distributed conservative event-driven scheduling is used in combination with an efficient deadlock-free mechanism for handling synchronous feedback circuits. Simulation concurrency can be further increased by utilizing circuit pipeline. The resulting parallel simulation backplane is capable of concurrently simulating systems at cir-cuit, switch, <b>gate,</b> <b>RTL</b> and behavioral levels. We implemented this parallel mixed-mode simulator on both the iPSC/ 860 mes-sage-passing machine and the DASH shared-memory multi-processor. Experimental results are presented. ...|$|R
40|$|International audienceThis paper {{focuses on}} the veri cation of {{requirements}} for hardware/software systems on chip (SoC's) along the design ow. In {{the early stages of}} this ow, the Electronic System Level (ESL) description style, and languages such as SystemC TLM, enable high-level debugging of the SoC functionality. In the last stages, hardware blocks become <b>RTL</b> or <b>gate</b> level (VHDL or Verilog) descriptions. We have developed two autonomous Assertion-Based Veri cation (ABV) solutions, for SystemC TLM platforms and for VHDL/Verilog IP blocks: designs are automatically instrumented with ad hoc property checkers produced from requirements formalized as PSL assertions. Furthermore, for a comprehensive and seamless veri cation ow, analogous requirements should be veri able before and after ESL-to- RTL hardware re nement. This requires the transformation of ESL assertions into their counterparts at the RT level. This paper discusses this issue and proposes a rst set of transformation rules for the automatic re nement of PSL assertions from the system level to the signal level. Properties of an industrial case study are used as illustrative examples...|$|R
40|$|In this paper, {{we present}} several {{techniques}} for modeling and formal verification of the Fairisle {{asynchronous transfer mode}} (ATM) switch fabric using multiway decision graphs (MDG's). MDG's represent {{a new class of}} decision graphs which subsumes Bryant's reduced ordered binary decision diagrams (ROBDD's) while accommodating abstract sorts and uninterpreted function symbols. The ATM device we investigated is in use for real applications in the Cambridge University Fairisle network. We modeled and verified the switch fabric at three levels of abstraction: behavior, and register transfer level (<b>RTL)</b> and <b>gate</b> levels. In a first stage, we validated the high-level specification by checking specific safety properties that reflect the behavior of the fabric in its real operating environment. Using the intermediate abstract RTL model, we hierarchically completed the verification of the original gate-level implementation of the switch fabric against the behavioral specification. Since MDG's avoid model explosion induced by data values, this work demonstrates the effectiveness of MDG-based verification as an extension of ROBDD-based approaches. All the verifications were carried out automatically in a reasonable amount of CPU time...|$|R
40|$|In {{this thesis}} we propose a {{framework}} for the incorporation of formal methods in the design flow of DSP (Digital Signal Processing) systems in a rigorous way. In the proposed approach we model and verify DSP descriptions at different abstraction levels using higher-order logic based on the HOL (Higher Order Logic) theorem prover. This framework enables the formal verification of DSP designs which in the past could only be done partially using conventional simulation techniques. To this end, we provide a shallow embedding of DSP descriptions in HOL at the floating-point, fixed-point, behavioral, RTL (Register Transfer Level), and netlist gate levels. We make use of existing formalization of floating-point theory in HOL and introduce a parallel one for fixed-point arithmetic. The high ability of abstraction in HOL allows a seamless hierarchical verification encompassing the whole DSP design path, starting from top level floating- and fixed-point algorithmic descriptions down to <b>RTL,</b> and <b>gate</b> level implementations. We illustrate the new verification framework using different case studies such as digital filters and FFT (Fast Fourier Transform) algorithms...|$|R
40|$|Abstract – As the {{complexity}} of Very Large Scale Integration (VLSI) increases, testing becomes tedious. Currently fault models are used to test digital circuits at gate level or at levels lower than gate. Modeling faults at these levels, leads to increase in the design cycle time period. Hence, {{there is a need}} to explore new approaches for modeling faults at higher levels. This paper proposes fault modeling at the Register Transfer Level (RTL) for digital circuits. Using this level of modeling, results are obtained for fault coverage, area and test patterns. A software prototype, FEVER, has been developed in C which reads a RTL description and generates two output files: one a modified RTL with test features and two a file consisting of set of test patterns. These modified RTL and test patterns are further used for fault simulation and fault coverage analysis. Comparison is performed between the <b>RTL</b> and <b>Gate</b> level modeling for ISCAS benchmarks and the results of the same are presented. Results are obtained using Synopsys, TetraMax and it is shown that it is possible to achieve 100 % fault coverage with no area overhead at the RTL level...|$|R
40|$|Abstract—RTL-to-gate logic {{equivalence}} checking is a {{very critical}} step inside circuit design flows. It is used {{to make sure the}} gate-level circuit doesn’t alter functional behaviors of the RTL. Of the various commercial logic equivalence checking tools, Combinational Equivalence Checking (CEC) tools are often used to prove equivalence between <b>RTL</b> and <b>gate</b> due to their high efficiency and good scalability. However, unlike Sequential Equivalence Checking (SEC), which traverses the product Finite State Machine (FSM), combinational equivalence checking proves equivalence for combinational circuits (i. e., Equivalences are formally verified for combinational logic cones between the state points.). For AMD high-performance microprocessor designs, we aggressively exploit optimization techniques to achieve competitive performance, power consumption, and die size. It is very common to see false non-equivalence of CEC on state spaces that are either optimized away or infeasible based on the circuit behavior. In order to avoid such false non-equivalences, we use design constraints to remove the invalid state space. As a consequence, the CEC results now highly rely on the correctness of these constraints. This paper presents our experiences and learning with formal verification of CEC constraints using model checking tools...|$|R
40|$|Abstract. In this article, the {{efficiency}} and applicability of several power reduction techniques applied on a modern 65 nm FPGA is described. For image erosion and dilation algorithms, two major solutions were tested and compared with respect to power and energy consumption. Firstly the algorithm was run on a general purpose processor (gpp) NIOS and then hardware architecture of an Intellectual Property (IP) was designed. Furthermore IPs design was improved by applying a number of power optimization techniques. They involved <b>RTL</b> level clock <b>gating,</b> power driven synthesis with fitting and appropriate coding style. Results show that hardware implementation is much more energy efficient than a general purpose processor and power optimization schemes can reduce the overall power consumption on an FPGA...|$|R
5000|$|With {{two or more}} base {{resistors}} (R3 and R4) {{instead of}} one, the inverter becomes a two-input <b>RTL</b> NOR <b>gate</b> (see the figure on the right). The logical operation OR is performed by applying consecutively the two arithmetic operations addition and comparison (the input resistor network acts as a parallel voltage summer with equally weighted inputs and the following common-emitter transistor stage as a voltage comparator with a threshold about 0.7 V). The equivalent resistance of all the resistors connected to logical [...] "1" [...] and the equivalent resistance of all the resistors connected to logical [...] "0" [...] form the two legs of a composed voltage divider driving the transistor. The base resistances {{and the number of}} the inputs are chosen (limited) so that only one logical [...] "1" [...] is sufficient to create base-emitter voltage exceeding the threshold and, as a result, saturating the transistor. If all the input voltages are low (logical [...] "0"), the transistor is cut-off. The pull-down resistor R1 biases the transistor to the appropriate on-off threshold. The output is inverted since the collector-emitter voltage of transistor Q1 is taken as output, and is high when the inputs are low. Thus, the analog resistive network and the analog transistor stage perform the logic function NOR.|$|R
40|$|AbstractThe third {{generation}} of {{spiking neural networks}} raises the level of biological realism by using individual spikes. So instead of using rate coding, these neurons use pulse coding mechanisms where neurons receive and do send out individual pulses, allowing multiplexing of information. This work depicts how Spiking neural network model is used for character recognition and classification. Here, we adapt to the technique of using ASIC for large scale simulations of the Izhikevich model and use <b>RTL</b> Clock <b>gating</b> approach for reducing the dynamic power. Here {{the focus is on}} how power consumption and system cost can be reduced for large production run. The full custom biologically plausible spiking neural network model is implemented on ASIC with 90 nm Process. The Izhikevich spiking neuron model is best suited for large scale cortical simulations due to its accuracy, efficiency, power and simulation time. The classification efficiency of SNN based on MATLAB simulations is demonstrated in this work by its ability to classify the 27 characters correctly out of 30 noisy character images presented. The ASIC realizing the English character classification and recognition dissipates power of 2. 8 mW and an area of 120312 μm 2. This work brings about the application of using networks of these spiking neurons for character recognition and their suitability for custom realization with reduced power consumption...|$|R
