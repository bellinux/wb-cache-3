1420|513|Public
5|$|The {{unitary state}} {{was not an}} end in itself, but a means to higher ends. The {{republic}} had been in dire financial straits even before the revolution of 1795. The system of public finance {{that had been the}} envy of the world in its Golden Age, enabling it to throw far beyond its weight in world politics up to the Peace of Utrecht in 1713, had become a millstone around its neck. By 1713 the public debt of the province of Holland had reached 310 million guilders; the debt of the Generality was 68 million; and the debts of the smaller provinces, and of the cities came on top of this. The debt service of Holland alone in that year required 14 million guilders, which exceeded its regular tax revenue. Most of this humongous public debt was held by Dutch private citizens, so in a sense it merely engendered an internal money circuit in the Dutch economy. However, it was mostly concentrated {{in the hands of the}} rentier class, while the debt was serviced by mainly regressive taxes that weighed on the working population. Most importantly, these were taxes levied by the individual provinces, who serviced their own debt, and paid into the Generality coffers according to a <b>repartition</b> schedule last changed in 1616. Attempts to reform this structure during the 18th century were mainly fruitless.|$|E
25|$|Mandelbrot, B. (1959) Variables et {{processus}} stochastiques de Pareto-Levy, et la <b>repartition</b> des revenus. Comptes Rendus Acad. Sci. Paris, 249, 613–615.|$|E
25|$|The {{board of}} directors, which has 30 members, determines {{the policy of}} the institution. He is {{responsible}} for budget, jobs <b>repartition,</b> and the approval of agreements and conventions.|$|E
40|$|<b>Repartitioning</b> of co-solvents between {{particles}} of latex emulsions was investigated {{by means of}} a fluorescence method based on the detection of the amount of co-solvent via the solvatochromic shift of the emission maximum of a fluorescent probe, copolymerized at a low concentration. Complete <b>repartitioning</b> of co-solvents between {{particles of}} latex materials with a low T g (ca. 25 °C) occurred within minutes. For a hydrophilic latex with a T g of 68 °C, equilibration was achieved within an hour. <b>Repartitioning</b> was faster for more hydrophobic co-solvents. For a hydrophobic latex of similar T g, co-solvent <b>repartitioning</b> took place on the same time scale, but complete equilibration was not reached. Possibly, there is an additional slow component in the <b>repartitioning,</b> or the prolonged presence of co-solvent causes a structural change in the latex particles that affects the outcome of the experiment...|$|R
40|$|Adaptive {{scientific}} simulations {{require that}} periodic <b>repartitioning</b> occur dynamically {{throughout the course}} of the computation. The repartitionings should be computed so as to minimize both the inter-processor communications incurred during the iterative mesh-based computation and the data redistribution costs required to balance the load. Recently developed schemes for computing repartitionings provide the user with only a limited control of the tradeoffs among these objectives. This paper describes a new Unified <b>Repartitioning</b> Algorithm that can tradeoff one objective for the other dependent upon a user-defined parameter describing the relative costs of these objectives. We show that the Unified <b>Repartitioning</b> Algorithm is able to reduce the precise overheads associated with <b>repartitioning</b> as well as or better than other <b>repartitioning</b> schemes for a variety of problems, regardless of the relative costs of performing inter-processor communication and data redistribution. Our experimental results show that this scheme is extremely fast and scalable to large problems...|$|R
5000|$|Series: <b>Répartitions</b> aléatoires ("Chance divisions") {{from the}} 1950s ...|$|R
25|$|Xavier Mérit and Véronique Mérit: Les Parnassius de France, textes de Xavier Mérit-Véronique Mérit et Henri Descimon, cartes de <b>répartition,</b> planches, et photos en nature de Luc Manil, Xavier Mérit et Bernard Turlin, bibliographies, Bulletin des Lépidoptéristes parisiens, Volume 15 (2006), n°33 (numéro thématique), Paris, septembre 2006 (56 pages).|$|E
25|$|The <b>repartition</b> of the doubles teams {{also took}} place, with Bob and Mike Bryan holding the top seed, and {{headlining}} the Red Group, and defending champion Daniel Nestor and new partner Nenad Zimonjić taking upon the second seed {{and the head}} of the Gold Group. With the Bryans landed Mahesh Bhupathi and Mark Knowles, Jeff Coetzee and Wesley Moodie, and Pablo Cuevas and Luis Horna, while Nestor and Zimonjić were joined by Jonas Björkman and Kevin Ullyett, Lukáš Dlouhý and Leander Paes, and Erlich and Ram's replacements Mariusz Fyrstenberg and Marcin Matkowski.|$|E
25|$|In 1722, Enríquez alleged in {{a letter}} to the Crown that since his return Danío had only pursued the {{appropriation}} of his fortune. These accusations were backed by Valdivia and Paris. However, the governor was likely simply trying to recover the wealth that he had left in charge of the privateer years before. Enríquez tried to bring an end to the conflict by offering a sum between 15,000 and 20,000 pieces of eight to Danío. However, this offering was declined. Furthermore, both could never agree on the amount of money that was owed due to their previous arrangement, with the governor claiming that it was 42,261 pieces of eight, but the privateer rebuffing that it was a shared debt and that the fortune was spent in critical investments. Enríquez even told the king that he possessed a document stating that he was actually the creditor of the governor's fortune and as such owned nothing. This infuriated Danío, who ordered his incarceration on December 9, 1722. Antonio Camino, was also jailed but soon escaped and traveled to Havana. Once there, he began collecting positive accounts for his employer. Among those that agreed to help were a group of military officials that had been neglected by Danío in October 1720, only to be fully attended by Enríquez. After gathering the support, Camino traveled to Spain where he spoke in the privateer's behalf for over a year. Valdivia tried to request an excarceration with external help, but Enríquez remained in jail. The relationship between the Church functionary and the privateer had been criticized by Danío. To further antagonize Enríquez, he created a system of official privateering by reassigning the sloop Santiago, confiscated along his other property. Ubides became involved in this venture, but the plan backfired and the ship was captured by a pirate brigantine sailing from Martinique in its first mission. The entire blame fell on Danío, who had staffed the boat with an inexperienced crew that did not know how to react once they witnessed a jolly roger. Seeking an escape, the governor devised an account where he blamed Camino, claiming that he had provided route information to the pirates, supposedly acting on Enríquez's behalf. Danío claimed that the privateer formed an alliance with the pirates so that he could freely import illegal contraband and he even tried to bribe a St. Thomas sailor with 1,000 pieces of eight so that his account had a witness. The governor tried to restart the official privateering project, meeting moderate success by mimicking the pirate code's <b>repartition</b> of the loot captured. They captured three vessels, two from France and Great Britain and a third one sailed by freebooters.|$|E
5000|$|Automatic data <b>repartitioning</b> {{in case of}} removed or added nodes ...|$|R
40|$|L-carnitine {{has been}} shown to be a <b>repartitioning</b> agent (i. e.,setting {{metabolism}} toward more protein and less fat accretion) in animals used for food production. The purpose of this study was to determine the effects on body composition <b>repartitioning</b> (i. e.,increasing lean body mass) of added dietary L-carnitine in adult dogs and cats...|$|R
40|$|In this Chapter {{we discuss}} the load-balancing issues arising in {{parallel}} mesh based computational mechanics codes for which the processor loading changes during the run. We briefly touch on geometric <b>repartitioning</b> ideas and then focus on different ways of using a graph both to solve the load-balancing problem and the optimisation problem, both locally and globally. We also briefly discuss whether <b>repartitioning</b> is always valid. Sample illustrative results are presented and we conclude that <b>repartitioning</b> is an attractive option if the load changes are not too dramatic {{and that there is}} a certain trade-off between partition quality and volume of data that the underlying application needs to migrate...|$|R
500|$|The Fontaine d'Eure, at [...] {{above sea}} level, is only [...] {{higher than the}} <b>repartition</b> basin in Nîmes, but this {{provided}} a sufficient gradient to sustain {{a steady flow of}} water to the 50,000 inhabitants of the Roman city. The aqueduct's average gradient is only 1 in 3,000. It varies widely along its course, but is as little as 1 in 20,000 in some sections. The Pont du Gard itself descends [...] in , a gradient of 1 in 18,241. The average gradient between the start and end of the aqueduct is far shallower than was usual for Roman aqueducts – only about a tenth of the average gradient of some of the aqueducts in Rome.|$|E
500|$|It {{was in his}} 1945 {{dissertation}} that Belevitch {{first introduced}} the important idea of the scattering matrix (called <b>repartition</b> matrix by Belevitch). [...] This work was reproduced in part in a later paper by Belevitch, Transmission Losses in 2n-terminal Networks. [...] Belgium was occupied by Nazi Germany for most of World War II and this prevented Belevitch from any communication with American colleagues. [...] It was only after the war that {{it was discovered that}} the same idea, under the scattering matrix name, had independently been used by American scientists developing military radars. [...] The American work by Montgomery, Dicke and Purcell was published in 1948. [...] Belevitch in his work had applied scattering matrices to lumped circuits and was certainly the first to do so, whereas the Americans were concerned with the distributed circuits used at microwave frequencies in radar.Montgomery et al., pp.146-161Valkenburg, p.336Vandewalle, p.429 ...|$|E
500|$|The Nîmes {{aqueduct}} {{was built}} to channel water from the springs of the Fontaine d'Eure near Uzès to the castellum divisorum (<b>repartition</b> basin) in Nemausus. From there, it was distributed to fountains, baths and private homes around the city. The straight-line distance {{between the two is}} only about [...] but the aqueduct takes a winding route measuring around [...] This was necessary to circumvent the southernmost foothills of the Massif Central, known as the [...] They are difficult to cross, as they are covered in dense vegetation and garrigue and indented by deep valleys. It was impractical for the Romans to attempt to tunnel through the hills, as it would have required a tunnel of between , depending on the starting point. A roughly V-shaped course around the eastern end of the Garrigues de Nîmes was therefore the only practical way of transporting the water from the spring to the city.|$|E
40|$|Adaptive sc ientific {{simulations}} {{require that}} periodic <b>repartitioning</b> oc c ur dynamic ally throughout thec ourse of the cU putation. The repartitionings should bec puted {{so as to}} minimize both the inter-proc essorc ommunic ations inc urred during the iterative mesh-basedc omputation and the data redistributionc osts required to balanc e the load. Rec ently developedsc hemes forc omputing repartitionings provide the user with only a limitedc ontrol of the tradeo#s among these objec tives. This paper desc ribes a new Unified <b>Repartitioning</b> Algorithm thatc an tradeo# one objec tive for the other dependent upon a user-defined parameter desc ribing the relativec osts of these objec tives. We show that the Unified <b>Repartitioning</b> Algorithm is able to reduc e the prec ise overheads assoc iated with <b>repartitioning</b> as well as or better than other repartitioningsc hemes {{for a variety of}} problems, regardless of the relativec osts of performing inter-proc essorc ommunic ation and data redistributi [...] ...|$|R
5000|$|Holstein-Itzehoe, branch county between 1261 and 1290, {{partitioned}} from Holstein, <b>repartitioned</b> into Holstein-Pinneberg, Holstein-Plön and Holstein-Rendsburg ...|$|R
50|$|The hepatic schizonts {{are small}} and the colloid is <b>repartitioned.</b> It is most similar morphologically to Hepatocystis rodhaini.|$|R
2500|$|Paul Dubos: Droit romain, le luxe et les lois somptuaires: économie politique de l'influence du luxe sur la <b>répartition</b> des richesses: Paris: Université de France, Faculté de droit de Paris: 1888 (reprint Hachette: Paris: 2014. [...] ).|$|E
2500|$|Prié V. (2005) [...] "Synthèse sur la <b>répartition</b> de Xerocrassa geyeri (Soόs, 1926), Vertigo substriata (Jeffreys, 1833), Argna ferrari blanci (Bourguignat, 1874) et Pagodulina austeniana (Nevill, 1880) dans la marge Sud-Ouest du Massif central. [...] ". MalaCo, Bulletin de la Malacologie Continentale Française 1: 13-16.|$|E
2500|$|The dress {{exists in}} two versions: the petit costume ("small costume") {{and the grand}} costume ("great costume"). Both are {{identical}} in form, and differ only in {{the presence or absence}} of the mortarboard and the <b>repartition</b> of colours on the gown and sash (the other elements of the dress, especially the epitoga, being identical for both): ...|$|E
40|$|International audienceA {{parallel}} meshing technique using {{a combination}} between a local remeshing technique and <b>repartitioning</b> is presented. The meshing method is based on local mesh topology optimizations and is shown to work for all meshing applications from adaptive remeshing to mesh generation by using a minimal volume principle. Parallel remeshing is performed independently on each subdomain with fixed interfaces. A constrained <b>repartitioning</b> technique is introduced to move the interfaces between subdomains in an optimal way. <b>Repartitioning</b> and remeshing are iterated until a good mesh and a good partition are reached. Several examples are given for different meshing objectives. Application examples are shown with the commercial code Forge 3, devoted to large deformation analysis and equipped with the proposed remeshing technique...|$|R
5000|$|Optional {{support for}} dynamic rate <b>repartitioning,</b> {{allowing}} flexible {{change of the}} SHDSL data rate without service interruption, described in Annex E.10.3 ...|$|R
40|$|On-line Transaction Processing (OLTP) {{applications}} often rely on shared-nothing distributed databases {{that can}} sustain {{rapid growth in}} data volume. Distributed transactions (DTs) that involve data tuples from multiple geo-distributed servers can adversely impact the performance of such databases, especially when the transactions are short-lived and these require immediate responses. The k-way min-cut graph clustering based database <b>repartitioning</b> algorithms {{can be used to}} reduce the number of DTs with acceptable level of load balancing. Web applications, where DT profile changes over time due to dynamically varying workload patterns, frequent database <b>repartitioning</b> is needed to keep up with the change. This paper addresses this emerging challenge by introducing incremental <b>repartitioning.</b> In each <b>repartitioning</b> cycle, DT profile is learnt online and k-way min-cut clustering algorithm is applied on a special sub-graph representing all DTs as well as those non-DTs that have at least one tuple in a DT. The latter ensures that the min-cut algorithm minimally reintroduces new DTs from the non-DTs while maximally transforming existing DTs into non-DTs in the new partitioning. Potential load imbalance risk is mitigated by applying the graph clustering algorithm on the finer logical partitions instead of the servers and relying on random one-to-one cluster-to-partition mapping that naturally balances out loads. Inter-server data-migration due to <b>repartitioning</b> is kept in check with two special mappings favouring the current partition of majority tuples in a cluster—the many-to-one version minimising data migrations alone and the one...|$|R
2500|$|The first {{published}} description of S-parameters {{was in the}} thesis of Vitold Belevitch in 1945. [...] The name used by Belevitch was <b>repartition</b> matrix and limited consideration to lumped-element networks. [...] The term scattering matrix was used by physicist and engineer Robert Henry Dicke in 1947 who independently developed the idea during wartime work on radar. [...] The technique was popularized in the 1960s by Kaneyuki Kurokawa ...|$|E
2500|$|In early January 1994, the UDA {{released}} a document calling for ethnic cleansing and <b>repartition,</b> {{with the goal}} of making Northern Ireland wholly Protestant. The plan was to be implemented should the British Army withdraw from Northern Ireland. Areas in the south and west with strong Catholic/nationalist majorities would be handed over to the Republic, and those Catholics left stranded in the [...] "Protestant state" [...] would be [...] "expelled, nullified, or interned". The story was printed in The Sunday Independent newspaper on 16 January. The [...] "doomsday plan" [...] was {{based on the work of}} Dr Liam Kennedy, a lecturer at Queen's University Belfast who in 1986 had published a book called Two Ulsters: A Case for <b>Repartition</b> although it did not call for ethnic cleansing. The UDP's Raymond Smallwoods said [...] "I wasn't consulted but the scenario set out is a perfectly plausible one". The DUP's Sammy Wilson stated that the plan [...] "shows that some loyalist paramilitaries are looking ahead and contemplating what needs to be done to maintain our separate Ulster identity" ...|$|E
2500|$|Electric {{fields are}} caused by {{electric}} charges, described by Gauss's law, [...] or varying magnetic fields, described by Faraday's law of induction. [...] Together, these laws are enough to define {{the behavior of the}} electric field as a function of charge <b>repartition</b> and magnetic field. However, since the magnetic field is described as a function of electric field, the equations of both fields are coupled and together form Maxwell's equations that describe both fields as a function of charges and currents.|$|E
40|$|We examine three {{parallel}} algorithms for <b>repartitioning</b> adaptive {{finite element}} grids {{in the context}} of dynamic load balancing for adaptive multigrid methods. The first is a recursive bisection method based on the refinement tree of the adaptive refinement process. The second is a k-way version of the refinement tree partitioning method. The third is a multilevel <b>repartitioning</b> algorithm from ParMETIS. The methods are compared numerically via execution time of the partitioner and quality metrics of the partition...|$|R
40|$|We {{discuss the}} load-balancing issues arising in {{parallel}} mesh based computational mechanics codes {{for which the}} processor loading changes during the run. We briefly touch on geometric <b>repartitioning</b> ideas and then focus on different ways of using a graph both to solve the load-balancing problem and the optimisation problem, both locally and globally. We also briefly discuss whether <b>repartitioning</b> is always valid. Sample illustrative results are presented and we conclude that <b>repartitioning</b> is an attractive option if the load changes are not too dramatic {{and that there is}} a certain trade-off between partition quality and volume of data that the underlying application needs to migrate. Key words. graph partitioning, mesh partitioning, load-balancing, multilevel algorithms. 1 Introduction Mesh partitioning has been developed recently as an important enabling technology for mapping unstructured meshes arising from applications such as Computational Fluid Dynamics (CFD) and Comput [...] ...|$|R
40|$|This work {{presents}} a rule-based approach for declarative query optimizer generation considering parallel execution in object-oriented databases. The main {{goal of this}} work {{is to provide a}} framework that can capture relevant aspects of parallel query optimization in a declarative way, combining procedural techniques with the advantages of rule processing. One of those techniques was used for determining <b>repartitioning</b> and selecting the algorithms to evaluate operator in a query tree considering the trade-offs between processing costs and <b>repartitioning</b> costs. This technique was proposed as a procedural algorithm and it was adapted to be used as rules in the context of object-oriented database optimizers. Another algorithm, used for query operator reordering in object-oriented databases, was adapted in order to consider <b>repartitioning</b> cost and was added to the framework. Finally, a new module for processing rules for parallelism extraction was added to the framework, providing a better support for inter-operator parallelism optimization techniques. ...|$|R
2500|$|In early January 1994, the Ulster Defence Association {{released}} a document {{calling for the}} <b>repartition</b> of Ireland {{with the goal of}} making Northern Ireland wholly Protestant. [...] The plan was to be implemented should the British Army withdraw from Northern Ireland. The Irish Catholic/nationalist-majority areas would be handed over to the Republic, and those left in the rump state would be [...] "expelled, nullified, or interned". [...] Sammy Wilson, then a DUP press officer and a future Stormont minister and MP, spoke positively of the document, calling it a [...] "valuable return to reality" [...] and lauded the UDA for [...] "contemplating {{what needs to be done}} to maintain our separate Ulster identity".|$|E
60|$|Leroy-Beaulieu’s “Traité de la science des finances” (1883). This is an {{extended}} work, in two volumes, on taxation and finance; “Essai sur la <b>répartition</b> des richesses” (second edition, 1883).|$|E
60|$|Such is the fantastical and unjust {{inequality}} between {{mass and}} mass, in this curious <b>repartition</b> {{of the rights}} of representation arising out of territory and contribution. The qualifications which these confer are in truth negative qualifications, that give a right in an inverse proportion to the possession of them.|$|E
40|$|We {{present a}} {{scalable}} distributed database system called SD-SQL Server. Its original feature is dynamic and transparent <b>repartitioning</b> of growing tables, avoiding the cumbersome manual <b>repartitioning</b> that characterize current technology. SD-SQL Server re-partitions a table when an insert overflows existing segments. With {{the comfort of}} a single node SQL Server user, the SD-SQL Server user has larger tables or gets a faster response time through the dynamic parallelism. We present the architecture of our system, and its user/application interface. KEY WORDS Scalable table, scalable database, dynamic table partitioning, scalable distributed data structure. 1...|$|R
40|$|In {{parallel}} adaptive applications, the computational {{structure of}} the applications changes over time, leading to load imbalances even though the initial load distributions were balanced. To restore balance and to keep communication volume low in further iterations of the applications, dynamic load balancing (<b>repartitioning)</b> of the changed computational structure is required. <b>Repartitioning</b> differs from static load balancing (partitioning) due to the additional requirement of minimizing migration cost to move data from an existing partition to a new partition. In this paper, we present a novel <b>repartitioning</b> hypergraph model for dynamic load balancing that accounts for both communication volume in the application and migration cost to move data, {{in order to minimize}} the overall cost. Use of a hypergraph-based model allows us to accurately model communication costs rather than approximate them with graph-based models. We show that the new model can be realized using hypergraph partitioning with fixed vertices and describe our parallel multilevel implementation within the Zoltan load-balancing toolkit. To the best of our knowledge, this is the first implementation for dynamic load balancing based on hypergraph partitioning. To demonstrate the effectiveness of our approach, we conducted experiments on a Linux cluster with 1024 processors. The results show that, in terms of reducing total cost, our new model compares favorably to the graph-based dynamic load balancing approaches, and multilevel approaches improve the <b>repartitioning</b> quality significantly...|$|R
50|$|Waldburg-Wolfegg-Zeil was a County {{ruled by}} the House of Waldburg, located in southeastern Baden-Württemberg, Germany. Waldburg-Wolfegg-Zeil was a {{partition}} of Waldburg and was <b>repartitioned</b> in 1589, to create Waldburg-Waldburg, Waldburg-Wolfegg and Waldburg-Zeil.|$|R
