0|1414|Public
50|$|For CPHA=0, data is {{captured}} on the clock's falling <b>edge</b> (high→low <b>transition)</b> and data is changed at the <b>rising</b> <b>edge</b> (low→high <b>transition).</b>|$|R
50|$|Metal K-edge {{spectroscopy}} is a spectroscopic {{technique used}} to study the electronic structures of transition metal atoms and complexes. This method measures X-ray absorption caused by the excitation of a 1s electron to valence bound states localized on the metal, which creates a characteristic absorption peak called the K-edge. The K-edge {{can be divided into}} the pre-edge region (comprising the pre-edge and <b>rising</b> <b>edge</b> <b>transitions)</b> and the near-edge region (comprising the intense <b>edge</b> <b>transition</b> and ~150 eV above it).|$|R
50|$|A <b>rising</b> <b>edge</b> is the <b>transition</b> {{from low}} to high. It is also named {{positive}} edge. When a circuit is rising edge-triggered, it becomes active when its clock signal goes from low to high, and ignores the high-to-low transition.|$|R
50|$|The Falling <b>Edge</b> <b>Transition</b> {{attack is}} limited to a partial {{recovery}} of the keystrokes. This is a significant limitation. The GTT is a falling <b>edge</b> <b>transition</b> attack improved, which recover almost all keystrokes. Indeed, between two traces, there is exactly one data <b>rising</b> <b>edge.</b> If attackers are able to detect this transition, they can fully recover the keystrokes.|$|R
5000|$|Write address latched on <b>rising</b> <b>edge</b> of K (in burst-of-4 mode, burst-of-2 uses <b>rising</b> <b>edge</b> of not-K) ...|$|R
5000|$|After n-CLOCK pulses (<b>rising</b> <b>edges)</b> {{the data}} is {{completely}} transmitted. With the next CLOCK pulse (<b>rising</b> <b>edge</b> n+1) the sensor output goes to low level {{which can be used}} to detect a short circuit in the cable. If it is high even after n+1 <b>rising</b> <b>edges</b> then it means that the interface has a short circuit.|$|R
50|$|To {{achieve these}} data-rates, data is clocked on <b>rising</b> and falling <b>edges</b> for 1000 Mbit/s, and on <b>rising</b> <b>edges</b> only for 10/100 Mbit/s. The RX_CTL signal carries RXDV (data valid) on the <b>rising</b> <b>edge,</b> and (RXDV xor RXER) on the falling edge. The TX_CTL signal {{likewise}} carries TXEN on <b>rising</b> <b>edge</b> and (TXEN xor TXER) on the falling edge. This {{is the case}} for both 1000 Mbit/s and 10/100 Mbit/s.|$|R
5000|$|Modes 1 and 5: The <b>rising</b> <b>edge</b> of GATE starts counting. GATE may go low without {{affecting}} counting, {{but another}} <b>rising</b> <b>edge</b> will restart the count from the beginning.|$|R
2500|$|All {{commands}} are timed {{relative to}} the <b>rising</b> <b>edge</b> of a clock signal. In addition to the clock, there are 6 control signals, mostly active low, which are sampled on the <b>rising</b> <b>edge</b> of the clock: ...|$|R
50|$|When the MAC {{drives the}} MDIO line, {{it has to}} {{guarantee}} a stable value 10 ns (setup time) before the <b>rising</b> <b>edge</b> of the clock MDC. Further, MDIO has to remain stable 10 ns (hold time) after the <b>rising</b> <b>edge</b> of MDC.|$|R
40|$|Temporal {{and spatial}} optical field {{distributions}} of a stepped pulse on the hohlraum wall are numerically analyzed using fast-Fourier-transform method combined with chromatographic theory. Changes in the <b>rising</b> <b>edge</b> of the stepped pulse caused by spatio-temporal effect are systematically studied. Results demonstrate {{that a certain}} time difference exists for the laser to reach the hohlraum wall because of oblique incidence, which causes distortion to the stepped pulse, especially to the <b>rising</b> <b>edge.</b> Influences of the incident angle, focal length, and width of the input <b>rising</b> <b>edge</b> on distortion degree of the stepped pulse are also discussed. This letter provides some guidance for targeting pulse shaping and synchronization...|$|R
5000|$|The next {{data word}} on Data In is latched on <b>rising</b> <b>edge</b> of /K ...|$|R
2500|$|All PCI bus {{signals are}} sampled on the <b>rising</b> <b>edge</b> of the clock. [...] Signals {{nominally}} {{change on the}} falling edge of the clock, giving each PCI device approximately one half a clock cycle {{to decide how to}} respond to the signals it observed on the <b>rising</b> <b>edge,</b> and one half a clock cycle to transmit its response to the other device.|$|R
50|$|After {{receiving}} the Control Word and COUNT, the output {{will be set}} high. Once the device detects a <b>rising</b> <b>edge</b> on the GATE input, it will start counting. When the counter reaches 0, the output will go low for one clock cycle - after that it will become high again, to repeat the cycle on the next <b>rising</b> <b>edge</b> of GATE.|$|R
50|$|All PCI bus {{signals are}} sampled on the <b>rising</b> <b>edge</b> of the clock. Signals {{nominally}} {{change on the}} falling edge of the clock, giving each PCI device approximately one half a clock cycle {{to decide how to}} respond to the signals it observed on the <b>rising</b> <b>edge,</b> and one half a clock cycle to transmit its response to the other device.|$|R
50|$|The {{transmission}} mode is evoked when the master initiates a train of clock pulses. Once the slave receives {{the beginning of}} the clock signal (1), it automatically freezes its current data. With the first <b>rising</b> <b>edge</b> (2) of the clock sequence, the MSB of the sensor’s value is transmitted and with consequent <b>rising</b> <b>edges,</b> the bits are sequentially transmitted to the output.|$|R
50|$|All {{measurements}} of Allan variance will in effect be {{the comparison of}} two different clocks. Lets consider a reference clock and a device under test (DUT), and both having a common nominal frequency of 10 MHz. A time-interval counter {{is being used to}} measure the time between the <b>rising</b> <b>edge</b> of the reference (channel A) and the <b>rising</b> <b>edge</b> of the device under test.|$|R
5000|$|... #Caption: A {{logic signal}} waveform: (1) low level, (2) high level, (3) <b>rising</b> <b>edge,</b> and (4) falling edge.|$|R
5000|$|... #Caption: An {{implementation}} of a master-slave D flip-flop that is triggered on the <b>rising</b> <b>edge</b> of the clock ...|$|R
5000|$|The second <b>rising</b> <b>edge</b> of C {{puts the}} data word, from address A, on the Data Out bus ...|$|R
50|$|As mentioned, {{the clock}} enable (CKE) input {{can be used}} to {{effectively}} stop the clock to an SDRAM. The CKE input is sampled each <b>rising</b> <b>edge</b> of the clock, and if it is low, the following <b>rising</b> <b>edge</b> of the clock is ignored for all purposes other than checking CKE. As long as CKE is low, it is permissible to change the clock rate, or even stop the clock entirely.|$|R
5000|$|The next <b>rising</b> <b>edge</b> of /C {{puts the}} next data word, from address A+1, on the Data Out bus ...|$|R
3000|$|... for {{the first}} time after the start of a {{measurement}} window, the <b>rising</b> <b>edge</b> of the comparator output V [...]...|$|R
2500|$|As mentioned, {{the clock}} enable (CKE) input {{can be used}} to {{effectively}} stop the clock to an SDRAM. [...] The CKE input is sampled each <b>rising</b> <b>edge</b> of the clock, and if it is low, the following <b>rising</b> <b>edge</b> of the clock is ignored for all purposes other than checking CKE. [...] As long as CKE is low, it is permissible to change the clock rate, or even stop the clock entirely.|$|R
40|$|Ultraintense laser pulses with a few-cycle <b>rising</b> <b>edge</b> are {{ideally suited}} to {{accelerating}} ions from ultrathin foils, and achieving such pulses in practice represents a formidable challenge. We show that such pulses can be obtained using sufficiently strong and well-controlled relativistic nonlinearities in spatially well-defined near-critical-density plasmas. The resulting ultraintense pulses with an extremely steep <b>rising</b> <b>edge</b> give <b>rise</b> to significantly enhanced carbon ion energies consistent with a transition to radiation pressure acceleration...|$|R
3000|$|... {{represents}} a sample index on the <b>rising</b> <b>edge</b> of the signal, where it first exceeds the threshold Th, while n [...]...|$|R
2500|$|CKE Clock Enable. When this {{signal is}} low, the chip behaves {{as if the}} clock has stopped. No {{commands}} are interpreted and command latency times do not elapse. The state of other control lines is not relevant. The effect of this signal is actually delayed by one clock cycle. [...] That is, the current clock cycle proceeds as usual, but the following clock cycle is ignored, except for testing the CKE input again. Normal operations resume on the <b>rising</b> <b>edge</b> of the clock after the one where CKE is sampled high.Put another way, all other chip operations are timed relative to the <b>rising</b> <b>edge</b> of a masked clock. The masked clock is the logical AND of the input clock {{and the state of}} the CKE signal during the previous <b>rising</b> <b>edge</b> of the input clock.|$|R
50|$|When a {{read command}} is issued, the SDRAM will produce the {{corresponding}} output {{data on the}} DQ lines {{in time for the}} <b>rising</b> <b>edge</b> of the clock a few clock cycles later, depending on the configured CAS latency. Subsequent words of the burst will be produced in time for subsequent <b>rising</b> clock <b>edges.</b>|$|R
5000|$|... ‘T’ {{represents}} {{the width of}} each clock cycle. It is the time taken between two falling or two <b>rising</b> <b>edges</b> in a continuous clock sequence.|$|R
2500|$|When a {{read command}} is issued, the SDRAM will produce the {{corresponding}} output {{data on the}} DQ lines {{in time for the}} <b>rising</b> <b>edge</b> of the clock a few clock cycles later, depending on the configured CAS latency. [...] Subsequent words of the burst will be produced in time for subsequent <b>rising</b> clock <b>edges.</b>|$|R
50|$|In {{order to}} avoid false marker detection, SDA is changed on the SCL falling edge and is sampled and {{captured}} on the <b>rising</b> <b>edge</b> of SCL.|$|R
5000|$|But, {{if there}} are {{continuous}} clock pulses even after then (i.e. the next clock pulses comes in time tw (< tm [...] )) {{the value of the}} slave is not updated. This is because the monoflop is still unsteady and the value in the shift register still contains the same value as before. So with the next <b>rising</b> <b>edge,</b> i.e. after the n+1 <b>rising</b> <b>edge,</b> the transmission of the same data continues and the MSB of data transmitted earlier is re-transmitted at the end of tw.|$|R
5000|$|The initial {{sequences}} are {{the same}} as that of the single transmission. In the idle state the CLOCK and DATA lines are high but with the arrival of the first falling edge the transmission mode is evoked and the similarly the data bits are transmitted sequentially starting with the MSB with every <b>rising</b> <b>edge.</b> The transmission of the LSB means that the transmission of the data is completed. An additional <b>rising</b> <b>edge</b> pushes the data line to LOW signifying the end of transmission of the particular data.|$|R
50|$|SDRAM {{significantly}} revises the asynchronous memory interface, {{adding a}} clock (and a clock enable) line. All other signals are received on the <b>rising</b> <b>edge</b> of the clock.|$|R
50|$|A time {{to digital}} {{converter}} assigns timestamps. The time to digital converter needs fast <b>rising</b> <b>edges</b> with normed height.The plastic scintillation counter delivers fast <b>rising</b> <b>edge</b> with varying heights.Theoretically, the signal could be {{split into two}} parts. One part would be delayed and the other low pass filtered, inverted and then used in a variable gain amplifier to amplify the original signal to the desired height. Practically, {{it is difficult to}} achieve a high dynamic range for the variable gain amplifier, and analog computers have problems with the inverse value.|$|R
50|$|In {{this example}} the always @ {{statement}} would first execute when the <b>rising</b> <b>edge</b> of reset occurs which would place q to {{a value of}} 0. The next time the always block executes would be the <b>rising</b> <b>edge</b> of clk which again would keep q at a value of 0. The always block then executes when set goes high which because reset is high forces q to remain at 0. This condition {{may or may not}} be correct depending on the actual flip flop. However, this is not the main problem with this model. Notice that when reset goes low, that set is still high. In a real flip flop this will cause the output to go to a 1. However, in this model it will not occur because the always block is triggered by <b>rising</b> <b>edges</b> of set and reset — not levels. A different approach may be necessary for set/reset flip flops.|$|R
