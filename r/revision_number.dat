54|164|Public
25|$|Dolphin {{became an}} {{open-source}} project on 13 July 2008 when the developers released the source code publicly on a SVN repository on Google Code under the GPLv2. At this point, the emulator had basic Wii emulation implemented, limited Linux compatibility {{and a new}} GUI using wxWidgets. Upon its open sourcing, various developers were attracted, and development on the emulator has been continuous since, with regular releases of SVN builds. The preview builds and unofficial SVN builds were released with their <b>revision</b> <b>number</b> (e.g., RXXXX) rather than version numbers (e.g., 1.03). As with previous builds, differences between consecutive builds are typically minor.|$|E
2500|$|... â€“ How to Find Build and <b>Revision</b> <b>Number</b> of Windows Vista or Windows Server 2008 Installed ...|$|E
2500|$|... svn:{{keywords}} : A list of keywords {{to substitute}} into a file when changes are made. The file itself must also reference the keywords as $keyword$ or $keyword:...$. This {{is used to}} maintain certain information (e.g., author, date of last change, <b>revision</b> <b>number)</b> in a file without human intervention.The keyword substitution mechanism originates from RCS and from CVS.|$|E
2500|$|... svn:mergeinfo : Used {{to track}} merge data (<b>revision</b> <b>numbers)</b> in Subversion 1.5 (or later). This {{property}} is automatically {{maintained by the}} merge command, {{and it is not}} recommended to change its value manually.|$|R
50|$|When an {{emergency}} procedure is revised and reissued, previous versions must be withdrawn from {{point of use}} to avoid confusion. For the same reason, a <b>revision</b> <b>numbering</b> system and a schedule of amendments are frequently used with procedures to reduce the potential for errors and misunderstandings.|$|R
5000|$|The {{simplest}} {{of all the}} systems the IJNAS allocated name characters to engines combined with Model and <b>revision</b> <b>numbers,</b> introduced to reduce confusion and also to reduce the intelligence value of the designation to enemies.e.g. Nakajima Homare 11 - (praise" [...] or, more usually, [...] "honour (Homare)) ...|$|R
2500|$|Each {{carburetor}} {{model number}} includes the style, size and a specific model letter, {{which may be}} followed by a <b>revision</b> <b>number.</b> Each application (the specific engine and airframe combination) then receives a [...] "list number" [...] that contains a list of the specific parts and flow sheet for that application. Needless to say, there are hundreds of parts list and flow sheets in the master catalog.|$|E
2500|$|Both {{of these}} editions saw {{multiple}} print runs each incorporating newly found corrections. Starting {{with the third}} printing, updated table entries were marked by adding a small superscript number to the entry number indicating the corresponding print run ("3" [...] etc.), a convention carried over into later editions by continuing to increase the superscript number {{as kind of a}} <b>revision</b> <b>number</b> (no longer directly corresponding with actual print runs).|$|E
5000|$|... keyword expansion: Supports {{automatic}} {{expansion of}} keywords such as file <b>revision</b> <b>number.</b>|$|E
50|$|Like GNU arch, {{and unlike}} Subversion, Monotone takes a {{distributed}} approach to version control. Monotone uses SHA-1 hashes to identify specific files {{or groups of}} files, as with Git and Mercurial, in place of linear <b>revision</b> <b>numbers.</b> Each participant maintains their own revision history, stored in a local SQLite database.|$|R
50|$|All four {{variations}} were standardized by February 1998, {{prior to}} general use of digital satellite television. The later versions are backwards {{compatible with the}} lower revisions, but the lower revisions are, as might be expected, not forwards compatible with the higher <b>revision</b> <b>numbers.</b> 1.x and 2.x versions are both backwards and forwards compatible.|$|R
5000|$|The {{development}} of the browser began in February 2010 under the name [...] "xxxterm" [...] by several OpenBSD users specifically for that operating system. Initially the releases of the browsers were identified by CVS <b>revision</b> <b>numbers,</b> though more common [...] "X.Y.Z" [...] version numbering scheme was introduced as development moved to Git.|$|R
5000|$|... ebump - Bump the <b>revision</b> <b>number</b> of an ebuild and all support files.|$|E
5000|$|List {{of files}} sent: file name, size, type, <b>revision</b> <b>number</b> and other {{relevant}} metadata.|$|E
5000|$|... 9165 - SVN <b>revision</b> <b>number,</b> {{corresponding}} to the last commit that triggered the build ...|$|E
5000|$|Usually, {{a company}} logo, {{alphanumeric}} codes and sometimes words are printed {{on top of}} the package to identify its manufacturer and type, when it was made (usually as a year and a week number), sometimes where it was made, and other proprietary information (perhaps <b>revision</b> <b>numbers,</b> manufacturing plant codes, or stepping ID codes.) ...|$|R
40|$|In {{the area}} of {{component}} software, the work so far has concentrated primarily on the key issues of architecture specification and component updating. However, the problems of maintaining application consistency and versioning of components as they evolve have received less attention, and the available solutions are either ad-hoc or not well suited for component applications. In this paper we evaluate these solutions and present {{a new approach to}} component versioning developed for the SOFA architecture. Based on the analysis of changes between two versions, component <b>revision</b> <b>numbers</b> and change indications are derived as a lightweight compatibility description which is subsequently used for consistency verification during application composition or component update. Thus it is shown how giving the <b>revision</b> <b>numbers</b> a precise semantics and providing additional versioning information provides a support for the tasks of configuration management in component applications. Th [...] ...|$|R
2500|$|SVN labels {{would more}} closely {{resemble}} the [...] "tags" [...] of other {{systems such as}} CVS or Git. The fact that Subversion has global <b>revision</b> <b>numbers</b> opens {{the way to a}} very simple label->revision implementation. Yet as of 2013, no progress has been made and symbolic tags are not in the list of the most wanted features.|$|R
50|$|Future {{versions}} of the standard will change the <b>revision</b> <b>number</b> at the end - but 1.0 is the only version currently in use.|$|E
50|$|On 18 February 2014, the Nokia Lumia 822 {{received}} the 'Black' firmware update (<b>revision</b> <b>number</b> 3051.40000.1352.0042), and it receive the 'DENIM' firmware update that introduces Windows 8.1.|$|E
50|$|Common {{methods of}} ETag {{generation}} include using a collision-resistant hash {{function of the}} resource's content, a hash of the last modification timestamp, or even just a <b>revision</b> <b>number.</b>|$|E
50|$|Commodore's AmigaOS {{was formed}} {{of both the}} Kickstart {{firmware}} and a software component provided on disk (with the software portion often termed as Workbench). For most AmigaOS updates the Kickstart version number was matched to the Workbench version number. Confusingly, Commodore also used internal <b>revision</b> <b>numbers</b> for Kickstart chips. For example, there were several Kickstart revisions designated as version 2.0.|$|R
40|$|Statistical Treatment of Uncertainty Method (ASTRUM) and revises Technical Specification (TS) 5. 6. 4. b to {{reference}} WCAP- 16009 -P-A. The request also {{proposes to}} implement Technical Specification Task Force (TSTF) Traveler- 363 A {{in order to}} eliminate the <b>revision</b> <b>numbers</b> and dates {{from the list of}} topical reports identified in TS 5. 6. 4. b. The NRC staff requested additional information (RAI) in order to continue its review o...|$|R
60|$|Such was our position, {{and such}} the {{resources}} at our command, {{when the first}} of the Ten Days dawned upon us. Shortly after four in the afternoon I completed my work of <b>revision,</b> <b>numbered</b> the manuscripts from one to six exactly as they happened to lie under my hand, and inclosed them all in a portfolio, covered with purple morocco, which became known from that time by the imposing title of The Purple Volume.|$|R
5000|$|The {{variables}} of build date and design <b>revision</b> <b>number</b> are semi-independent. There is no natural law that forces {{one to be}} strictly correlated to the other, other than that: ...|$|E
50|$|Clients {{can also}} compare versions, request a {{complete}} history of changes, or {{check out a}} historical snapshot of the project as of a given date or as of a <b>revision</b> <b>number.</b>|$|E
5000|$|Tag : A tag or label {{refers to}} an {{important}} snapshot in time, consistent across many files. These files at that point may all be tagged with a user-friendly, meaningful name or <b>revision</b> <b>number.</b> See baselines, labels and tags.|$|E
5000|$|To address such issues, posters on the Subversion {{mailing lists}} have {{suggested}} a new feature called [...] "labels" [...] or [...] "aliases".SVN labels would more closely resemble the [...] "tags" [...] of other {{systems such as}} CVS or Git. The fact that Subversion has global <b>revision</b> <b>numbers</b> opens {{the way to a}} very simple label->revision implementation. Yet as of 2013, no progress has been made and symbolic tags are not in the list of the most wanted features.|$|R
25|$|<b>Revision</b> <b>numbers</b> are {{difficult}} to remember in any version-control system. For this reason, most systems offer symbolic tags as user-friendly references to them. Subversion does not have such a feature and what its documentation recommends to use instead is very different in nature. Instead of implementing tags as references to points in history, Subversion recommends making snapshot copies into a well-known subdirectory ("tags/") {{in the space of}} the repository tree. Only a few predefined references are available: HEAD, BASE, PREV and COMMITTED.|$|R
5000|$|Scholarpedia {{articles}} are written by invited expert authors and {{are subject to}} peer review. Scholarpedia lists the real names and affiliations of all authors, curators and editors involved in an article: however, the peer review process (which can suggest changes or additions, {{and has to be}} satisfied before an article can appear) is anonymous.Scholarpedia {{articles are}} stored in an online repository, and can be cited as conventional journal articles (Scholarpedia has the ISSN number [...] ). Scholarpedias citation system includes support for <b>revision</b> <b>numbers.</b>|$|R
50|$|The {{model year}} (MY) {{of a product}} is a number used worldwide, but {{with a high level}} of {{prominence}} in North America, to describe approximately when a product was produced, and it usually indicates the coinciding base specification (design <b>revision</b> <b>number)</b> of that product.|$|E
50|$|When {{a product}} is in a {{warehouse}} or store, it can be tracked via its barcode and/or other tracking criteria, such as serial number, lot number or <b>revision</b> <b>number.</b> Systems. for Business, Encyclopedia of Business, 2nd ed. Nowadays, inventory management software often utilizes barcode, radio-frequency identification (RFID), and/or wireless tracking technology.|$|E
5000|$|... svn:{{keywords}} : A list of keywords {{to substitute}} into a file when changes are made. The file itself must also reference the keywords as $keyword$ or $keyword:...$. This {{is used to}} maintain certain information (e.g., author, date of last change, <b>revision</b> <b>number)</b> in a file without human intervention.The keyword substitution mechanism originates from RCS and from CVS.|$|E
40|$|Editorial note: <b>revision</b> <b>numbers</b> for the {{references}} to documents of the WCS 2. 0 set are not yet adjusted; this will {{be done in the}} final editing step. Warning This document is not an OGC Standard. It is distributed for review and comment. It is subject to change without notice and may not be referred to as an OGC Standard. Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation...|$|R
40|$|This change modifies {{accuracies}} of {{the water}} skid temperature indicators and controllers TIC- 410. TI- 412, TI- 413, TIC- 413, TIC- 414, TIC- 415. Acknowledges ability to calibrate PQIT- 367 and modifies the accuracy of that instrument loop. Adjusts the allowable dilution dater temperature from 110 - 130 F to 102 - 130 F based on PCP Rev. 2 and adjusts alarm and other points to reflect that change. Removes <b>revision</b> <b>numbers</b> for all references. Numerous additional changes (fixing typos, more detailed explanations etc.) throughout...|$|R
50|$|The {{motherboard}} came {{in eight}} different revisions: Revision 1, 5, 7, 8, CC1, CC2, WC1, and WC2. A list of motherboard part <b>numbers</b> and <b>revision</b> <b>numbers</b> {{can be found}} here. Revisions 1 through 7 were usually found in model DC-2011, with revisions 8 through WC2 being either in 2010E or 2011E. WC1 (presumably also WC2) is 7.16 MHz only. Due to its tight integration, the Model D motherboard was a nonstandard form factor, so replacing the motherboard with an off-the-shelf upgrade was not possible.|$|R
