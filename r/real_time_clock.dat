152|10000|Public
25|$|In the standby mode, the AGC slept {{most of the}} time; {{therefore}} it was not awake to perform the Pinc instruction needed to update the AGC's <b>real</b> <b>time</b> <b>clock</b> at 10ms intervals. To compensate, one of the functions performed by the AGC each time it awoke in the standby mode was to update the <b>real</b> <b>time</b> <b>clock</b> by 1.28 seconds.|$|E
2500|$|SPI devices {{sometimes}} {{use another}} signal line {{to send an}} interrupt signal to a host CPU. [...] Examples include pen-down interrupts from touchscreen sensors, thermal limit alerts from temperature sensors, alarms issued by <b>real</b> <b>time</b> <b>clock</b> chips, SDIO, and headset jack insertions from the sound codec in a cell phone. Interrupts {{are not covered by}} the SPI standard; their usage is neither forbidden nor specified by the standard.|$|E
5000|$|The Raspberry Pi, {{as well as}} most boards from Arduino, {{does not}} have an onboard <b>real</b> <b>time</b> <b>clock.</b> The Galileo boards have a <b>real</b> <b>time</b> <b>clock,</b> {{requiring}} only a 3V coin cell battery. [...] The boards can therefore keep accurate time without being connected to either a power source or internet.|$|E
40|$|Abstract This {{application}} note aims to assist a user of above mentioned <b>Real</b> <b>Time</b> <b>Clocks</b> in achieving succesful design-in and application. It contains useful hints {{with respect to}} electrical schematic and PCB layout as well as code examples for the well established NXP PCF 8563 and related <b>Real</b> <b>Time</b> <b>Clocks.</b> Also the more recent <b>Real</b> <b>Time</b> <b>Clocks</b> PCF 2123 and PCA 2125 have been taken into account. NXP Semiconductors UM 1030...|$|R
5000|$|Backup {{power for}} {{personal}} computer <b>real</b> <b>time</b> <b>clocks</b> and BIOS configuration data ...|$|R
50|$|Computer <b>real</b> <b>time</b> <b>clocks</b> keep <b>time</b> with a quartz crystal, {{but can be}} {{periodically}} (usually weekly) synchronized {{over the}} Internet to atomic clocks (UTC), using the Network Time Protocol (NTP). Sometimes computers on a local area network (LAN) get their time from a single local server which is maintained accurately.|$|R
5000|$|Real-time clock. The <b>real</b> <b>time</b> <b>clock</b> {{provides}} a persistent time account.|$|E
50|$|Several {{manufacturers}} provided <b>real</b> <b>time</b> <b>clock</b> upgrades as a CPU daughter board.|$|E
50|$|In the standby mode, the AGC slept {{most of the}} time; {{therefore}} it was not awake to perform the Pinc instruction needed to update the AGC's <b>real</b> <b>time</b> <b>clock</b> at 10 ms intervals. To compensate, one of the functions performed by the AGC each time it awoke in the standby mode was to update the <b>real</b> <b>time</b> <b>clock</b> by 1.28 seconds.|$|E
40|$|Abstract The {{temperature}} dependent {{characteristics of}} quartz crystals prevent time keeping also with state-of-the-art <b>real</b> <b>time</b> <b>clocks</b> from being highly accurate {{over a wide}} temperature range, unless corrective measures are implemented. This application note describes how {{the use of an}} external temperature sensor, placed in a location which will be at or near the same temperature as the quartz crystal attached to the RTC, can improve accuracy considerably. If the application is already using a temperature sensor for some reason, only some extra firmware is needed without adding to the Bill Of Material (BOM) ...|$|R
40|$|The {{temperature}} dependent {{characteristics of}} quartz crystals prevent time keeping with state-of-the-art <b>real</b> <b>time</b> <b>clocks</b> from being highly accurate {{over a wide}} temperature range, unless corrective measures are implemented. This application note describes how {{the use of an}} external temperature sensor, placed in a location which will be at or near the same temperature as the quartz crystal attached to the PCF 8563 RTC can improve accuracy considerably. If the application is already using a temperature sensor for some reason, all that is needed is some extra firmware without adding to the Bill Of Material (BOM). NXP Semiconductors AN 10652 Improved timekeeping accuracy using external temperature sensor Revision histor...|$|R
40|$|During {{the last}} decade, a {{considerable}} technological development of miniaturized electronic systems has induced an increasing demand concerning rechargeable energy sources able to power these microsystems. In this context, numerous researches have been leaded on all-solid-state lithium microbatteries [1]. These systems may be relevant {{for a wide}} range of applications such as <b>real</b> <b>time</b> <b>clocking</b> (RTC) to replace the primary button cell, radio frequency identification (RFID) tag and smart packaging, sensors and smartcards. A microbattery is defined as a two-dimensional system comprising a positive electrode, an electrolyte (insulating layer) and a negative electrode. Such system generally has a thickness of some micrometers (typically 10 - 15 µm) including the protective layers and a surface ranging fro...|$|R
50|$|A VLSI Technologies VL82C106 {{combination}} chip, {{connected to}} the pseudo-486 buses, contains the <b>real</b> <b>time</b> <b>clock</b> and 66 bytes of battery-backed RAM, in addition to two serial ports, a parallel port, and two PS/2 port interfaces. The <b>real</b> <b>time</b> <b>clock</b> and the battery-backed RAM draws power from an external 4.5 volt battery pack. The battery-backed RAM was primarily used to store system configuration information.|$|E
5000|$|<b>Real</b> <b>Time</b> <b>Clock</b> (Ricoh RP5C01A compatible) {{including}} 26 x 4 bits RAM, {{backed up}} by (separate) battery ...|$|E
5000|$|Battery-backed <b>real</b> <b>time</b> <b>clock</b> {{for time}} and date {{stamping}} of files, if the internal RAM card is present.|$|E
40|$|In this paper, {{we present}} a <b>real</b> <b>time</b> {{animator}} for dynamical systems that can be modeled as hybrid automata i. e. standard finite automata extended with differential equations. We describe its semantic foundation and its implementation in Java and C using CVODE, a software package for solving ordinary differential equations. We show how the animator is interfaced with the Uppaal tool to demonstrate the <b>real</b> <b>time</b> behavior of dynamical systems {{under the control of}} discrete components described as timed automata. 1 Introduction Uppaal is a software tool for modeling, simulation and verification of <b>real</b> <b>time</b> systems that can be described as timed automata. In recent years, it has been applied in a number of case studies [4, 5, 6, 7, 8], which demonstrates the potential application areas of the tool. It suits best the class of systems that contain only discrete components with <b>real</b> <b>time</b> <b>clocks.</b> But it can not handle hybrid systems, which has been a serious restriction on many industrial ap [...] ...|$|R
40|$|Abstract — Main {{objective}} {{of this paper is}} to provide intimation about the fault that occurs in four wheeler. The main fault, the fault which leads to the engine fault, the fault which leads to the temperature rise, is the fault which arises from clutch and gear box. These are the main faults and it should be corrected at earliest for that accuracy is needed. This paper also deals with the fault related to safeness, for safe travelling correct and accurate operation of break and steering should be ensured, this paper also deals with the intimation faults occurs break and steering. RTC is provided for <b>real</b> <b>time</b> <b>clocking</b> of the system. To make it happen practically, this paper provides idea of using various kinds of sensors, comparative algorithm and microcontroller...|$|R
50|$|The {{design was}} also simple to modify {{for the sake}} of system {{expansion}} and enhancement. Many different modifications to increase the system clock speed were possible, including some that required nothing more than jumpers (e.g. the 3.5 MHz speed upgrade obtained by jumpering the clock divider, with no software modifications or changes to the ICs on the board.) There was also a minor industry in user-installable system upgrades such as <b>real</b> <b>time</b> <b>clocks,</b> 4 MHz upgrades, double density floppy upgrades, character enhancements for the display (reverse video, blinking, etc.), and the addition of hard disk interfaces such as SASI and SCSI. Most of these upgrades were accomplished through the use of daughter boards that plugged into existing IC sockets on the board, with the original IC either replaced by a more capable IC or placed into a socket on the daughter board.|$|R
5000|$|SmartTRACK/SmartMOUSE - An 'intelligent' Commodore 1351 3-buttoned mouse or {{trackball}} {{which had}} 2K of RAM and a battery-backed Y2K compliant <b>Real</b> <b>Time</b> <b>Clock</b> which was GEOS compatible ...|$|E
50|$|Chipset: In {{addition}} to the Z80 and 6502, the system also included Intel 8255A PIO, Intel 8251A USART, Intel 8214 Programmable Interrupt Controller, Motorola 6845 CRT controller, Western Digital 1793 floppy disk controller, and OKI MSM5832 <b>real</b> <b>time</b> <b>clock.</b>|$|E
50|$|M6117 is {{a highly}} integrated, low voltage, single-chip {{implementation}} of the Intel 386SX compatible microprocessor plus ALi M1217 chipset. The M6117 provides a static 386SX core, DRAM controller, ISA bus logic, <b>real</b> <b>time</b> <b>clock,</b> keyboard controller, and power management unit.|$|E
40|$|Abstract. Enhanced RFID tag {{technology}} {{especially in}} the UHF frequency range provides extended functionality like high operating range and sensing and monitoring capabilities. Such functionality requiring extended system structures including data acquisition units, <b>real</b> <b>time</b> <b>clocks</b> and active transmitters causes a high energy consumption of the tag and requires an on board energy store (battery). As a key parameter of the reliability of an RFID system is the lifetime, the energy budget of the higher class tag has to be as balanced as possible. This {{can be achieved by}} using energy harvesting devices as additional power supply. The PowerTag 1 project and thus this paper proposes special power management mechanisms in combination with special energy storage structures interfacing energy harvesting devices and dealing with their special requirements. First various power management and power saving techniques are simulated and their performance is evaluated. In a second step different implementation variants of energy storage structures ar...|$|R
40|$|A {{low voltage}} {{start-up}} energy harvesting medium frequency receiver is presented, {{for use as}} the power and synchronisation part of a remote sensor node in a wide area industrial or agricultural application. The use of embedded low bandwidth network synchronisation data permits very low operational duty cycle {{without the need for}} <b>real</b> <b>time</b> <b>clocks</b> or wake up receivers at each node with their associated continuous power drain. The receiver consists of a rectifier, a power management unit and a phase-shift keying demodulator. The rectifier is optimised for low start-up and operating voltage rather than power efficiency. With standard MOS thresholds the rectifier can cold start with only 250 mV peak antenna input, and useful battery charging is delivered with 330 mV peak input. The QPSK demodulator consumes 1. 27 μW with a supply voltage of 630 mV at a data rate of 1. 6 kbps with 1 MHz carrier frequency. The IC is implemented in a standard threshold 0. 18 μm CMOS technology, occupies 0. 54 mm 2 and can deliver 10. 3 μW at 3 V to an external battery or capacitor...|$|R
40|$|Recursive {{algorithms}} for real-time {{digital pulse}} shaping in pulse height measurements have been developed. The differentiated {{signal from the}} preamplifier (exponential pulse) is amplified and then digitized. Digital data are deconvolved so that {{the response of the}} high-pass network is eliminated. The deconvolved pulse is processed by a time-invariant digital filter which allows trapezoidal/triangular or cusp-like shapes to be synthesized. A prototype of a digital trapezoidal processor was built which is capable of sampling and processing digital data in <b>real</b> <b>time</b> at <b>clock</b> rates up to 50 MHz...|$|R
50|$|Some {{motherboards}} {{are made}} without real time clocks. The <b>real</b> <b>time</b> <b>clock</b> is omitted either {{out of the}} desire to save money (as in the Raspberry Pi system architecture) or because real time clocks may not be needed at all (as in the Arduino system architecture).|$|E
5000|$|July 1980: TRS-80 Model III (N. Am.), {{essentially}} a TRS-80 Model I repackaged in an all-in-one cabinet, {{to comply with}} FCC regulations for radiofrequency interference, to eliminate cable clutter, and use only one electrical outlet. Some enhancements like extended character set, repeating keys, and <b>real</b> <b>time</b> <b>clock.</b>|$|E
50|$|The CPU {{consisted}} of a total 24 printed circuit boards. The last eight positions in the rack were used for I/O devices operated by program control, such as the console Teletype, punched paper tape and punched card reader and punch, line printer, display, operator's panel, and the <b>real</b> <b>time</b> <b>clock.</b>|$|E
40|$|This paper {{presents}} a wide area medium frequency loosely coupled magnetic energy harvesting system with power delivery and network synchronisation for remote sensors, intended for agricultural and industrial environments. Intended for situations with poor service access, {{power is supplied}} from a source via a large area loop. Receiver nodes may use ferrite cored coils for good efficiency with modest volume. Transmission of low bandwidth network synchronisation data permits very low operational duty cycle {{with the need for}} <b>real</b> <b>time</b> <b>clocks</b> or wake up receivers and their associated power drain. As a key enabler for the system, a full custom energy harvester and QPSK data demodulator IC has been designed and fabricated in a commercial 180 nm CMOS technology. The IC occupies 0. 54 mm 2 and can deliver 10. 3 µW at 3 V to an external battery or capacitor. With standard MOS device thresholds the rectifier can start from cold with only 250 mV peak from the antenna loop, and the battery charge output is delivered with 330 mV peak input. Results are presented from laboratory evaluation and from preliminary measurements in the field with a 10 m x 10 m loop driven at 800 kHz...|$|R
40|$|AbstractIt {{is known}} that clock {{synchronization}} can be achieved {{in the presence of}} faulty processors as long as the nonfaulty processors are connected, provided that some authentication technique is used. Without authentication the number of faults that can be tolerated has been an open question. Here we show that if we restrict logical clocks to running within some linear functions of <b>real</b> <b>time,</b> then <b>clock</b> synchronization is impossible without authentication when one-third or more of the processors are faulty. We also provide a lower bound on the closeness to which simultaneity can be achieved in the network {{as a function of the}} transmission and processing delay properties of the network...|$|R
50|$|The German team {{protested the}} time {{penalties}} to the appeals {{panel of the}} International Equestrian Federation (FEI), stating that Hoy {{could not have known}} her <b>real</b> <b>time</b> as the <b>clock</b> did not show her true time and that she could have ridden harder to avoid the time penalties. The decision to add the time penalties were reversed, with team gold being awarded to Germany and the individual gold to Hoy.|$|R
50|$|GoTo mounts are pre-aligned before use. When it {{is powered}} on, it may {{ask for the}} user's latitude, longitude, time, and date. It can also get this data from a GPS {{receiver}} connected to the telescope or built into the telescope mount itself, and the mount controller can have its own <b>real</b> <b>time</b> <b>clock.</b>|$|E
50|$|In Linux, the <b>real</b> <b>time</b> <b>clock</b> alarm {{can be set}} or {{retrieved}} using /proc/acpi/alarm or /sys/class/rtc/rtc0/wakealarm. Alternatively the rtcwake utility may be used {{which prevents}} problems when using local time instead of UTC by automatically processing the /etc/adjtime file. systemd {{can be used to}} wake a system and run a task at a specific time.|$|E
50|$|The {{significance}} of the 'RAM retention' vs the 'real-time clock mode' is that in <b>real</b> <b>time</b> <b>clock</b> mode the CPU can go to sleep with a clock running which will wake it up at a specific future time. In RAM retention mode, some external signal is required to wake it, e.g. I/O pin signal or SPI slave receive interrupt.|$|E
40|$|Enhanced RFID tag {{technology}} {{especially in}} the UHF frequency range provides extended functionality like high operating range and sensing and monitoring capabilities. Such functionality requiring extended system structures including data acquisition units, <b>real</b> <b>time</b> <b>clocks</b> and active transmitters causes a high energy consumption of the tag and requires an on board energy store (battery). As a key parameter of the reliability of an RFID system is the lifetime, the energy budget of the higher class tag has to be as balanced as possible. This {{can be achieved by}} using energy harvesting devices as additional power supply. The PowerTag project and thus this paper proposes special power management mechanisms in combination with special energy storage structures interfacing energy harvesting devices and dealing with their special requirements. First various power management and power saving techniques are simulated and their performance is evaluated. In a second step different implementation variants of energy storage structures are compared by using accurate simulation models of the various parts of the system. The results are compared to manufacturer given and guaranteed system performance parameters of a state-of-the-art higher class UHF RFID system. The presented approach combines two simulations for the design and the evaluation of different tag architectures and power saving techniques. Simulation results are showing an improvement of over 44 % of achievable lifetime applying the power saving techniques and power subsystem architectures presented in this paper, compared to a state-of-the-art higher class system...|$|R
50|$|The second use, {{with the}} advent of multi-tasking, is to {{quantify}} how the processor is shared between computer programs. High CPU usage by a single program may indicate that it is highly demanding of processing power or that it may malfunction; for example, it has entered an infinite loop. CPU time allows to measure how much processing power a single program requires, eliminating interference, such as time executed waiting for input or being suspended to allow other programs to run. In contrast, elapsed <b>real</b> <b>time</b> (or simply <b>real</b> <b>time,</b> or wall <b>clock</b> <b>time)</b> is the time taken from the start of a computer program until the end as measured by an ordinary <b>clock.</b> Elapsed <b>real</b> <b>time</b> includes I/O time and all other types of waits incurred by the program.|$|R
40|$|In the {{investigation}} of computer crimes time plays an important role. Files on a computer system are time-stamped, meaning as each file is modified, created, or accessed, the time at which these events happen is recorded. Investigators of computer crimes correlate these time-stamps to events on a computer system. Computer systems that have inaccurate clocks {{make it difficult for}} an investigator to perform time-event correlation. A successful correlation depends upon time-stamps and corroborating evidence that can link events to times. Typical computers are built with inexpensive materials and as such have inaccurate clocks. The use of an inaccurate clock can be observed as a <b>clock</b> skew: the <b>time</b> reported by the <b>clock</b> degrades over <b>time</b> making the <b>clock</b> lag behind or move past <b>real</b> <b>time.</b> A <b>clock</b> model represents how a computer clock behaves in it’s reporting of <b>time.</b> The <b>clock</b> model includes all of the discrete time events in the clock’s history. The difficultly in creating a complete clock model for forensic investigation is {{that it is difficult to}} interpret discrete time events and predict how a computer clock will behav...|$|R
