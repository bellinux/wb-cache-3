175|219|Public
25|$|A {{number of}} systems, {{going back to}} the 1960s, have been {{credited}} as the first <b>RISC</b> <b>architecture,</b> partly based on their use of load/store approach. The term RISC was coined by David Patterson of the Berkeley RISC project, although somewhat similar concepts had appeared before.|$|E
25|$|Processors {{that have}} a <b>RISC</b> <b>architecture</b> {{typically}} require fewer transistors than those with a complex instruction set computing (CISC) architecture (such as the x86 processors found in most personal computers), which improves cost, power consumption, and heat dissipation. These characteristics are desirable for light, portable, battery-powered devicesincluding smartphones, laptops and tablet computers, and other embedded systems. For supercomputers, which consume large amounts of electricity, ARM {{could also be a}} power-efficient solution.|$|E
25|$|Another {{study was}} {{started to see}} if a new <b>RISC</b> <b>architecture</b> could be defined that could {{directly}} support the VMS operating system. The new design used most of the basic PRISM concepts, but was re-tuned to allow VMS and VMS programs to run at reasonable speed with no conversion at all. The decision was also made to upgrade the design to a full 64-bit implementation from PRISM's 32-bit, a conversion all of the major RISC vendors were undertaking. Eventually that new architecture became Alpha. The primary Alpha instruction set architects were Richard L. Sites and Richard T. Witek. The PRISM's Epicode was developed into the Alpha's PALcode, providing an abstracted interface to platform- and processor implementation-specific features.|$|E
2500|$|Other {{features}} that are typically found in <b>RISC</b> <b>architectures</b> are: ...|$|R
50|$|GNU lightning's {{instruction}} set is based loosely on existing <b>RISC</b> <b>architectures.</b>|$|R
50|$|As {{compiler}} {{and memory}} technologies advanced, <b>RISC</b> <b>architectures</b> were introduced. <b>RISC</b> <b>architectures</b> need more instruction memory and require a compiler to translate high-level languages to RISC assembly code. Further advancement of compiler and memory technologies leads to emerging very long instruction word (VLIW) processors, where the compiler controls the schedule of instructions and handles data hazards.|$|R
5000|$|... 1980: Reduced {{instruction}} set computing (RISC) architectureIBM successfully builds the first prototype computer employing IBM Fellow John Cocke's <b>RISC</b> <b>architecture.</b> RISC simplified the instructions given to computers, making them {{faster and more}} powerful. Today, <b>RISC</b> <b>architecture</b> {{is the basis of}} most workstations and widely viewed as the dominant computing architecture.|$|E
50|$|Later 32-bit models used HP's PA-RISC general register-based <b>RISC</b> <b>architecture.</b>|$|E
5000|$|Digital Signal Processor - 32-bit <b>RISC</b> <b>architecture,</b> 8 KB {{internal}} cache ...|$|E
50|$|Due to {{the large}} number of bits needed to encode the three {{registers}} of a 3-operand instruction, <b>RISC</b> <b>architectures</b> that have 16-bit instructions are invariably 2-operand designs, such as the Atmel AVR, TI MSP430, and some versions of ARM Thumb. <b>RISC</b> <b>architectures</b> that have 32-bit instructions are usually 3-operand designs, such as the ARM, AVR32, MIPS, Power ISA, and SPARC architectures.|$|R
2500|$|By the {{beginning}} of the 21st century, the majority of low end and mobile systems relied on <b>RISC</b> <b>architectures.</b> Examples include: ...|$|R
25|$|Computer {{architecture}} {{courses in}} universities and technical schools often study the MIPS architecture. The architecture greatly influenced later <b>RISC</b> <b>architectures</b> such as Alpha.|$|R
50|$|The OpenRISC 1200 (OR1200) is an {{implementation}} of the open source OpenRISC 1000 <b>RISC</b> <b>architecture</b> http://opencores.org/openrisc,architecture.|$|E
5000|$|... 16 - John Cocke, 77, American {{computer}} scientist, {{key figure}} {{in the development of}} <b>RISC</b> <b>architecture.</b>|$|E
5000|$|Graphics {{processing}} unit (GPU) - 32-bit <b>RISC</b> <b>architecture,</b> 4 KB internal cache, all graphics effects are software based.|$|E
25|$|The ARM {{processor}} {{also has}} features rarely seen in other <b>RISC</b> <b>architectures,</b> such as PC-relative addressing (indeed, on the 32-bit ARM the PC {{is one of}} its 16nbsp&registers) and pre- and post-increment addressing modes.|$|R
25|$|Most <b>RISC</b> <b>architectures</b> have fixed-length {{instructions}} (commonly 32 bits) and {{a simple}} encoding, which simplifies fetch, decode, and issue logic considerably. One drawback of 32-bit instructions is reduced code density, which is more adverse a characteristic in embedded computing {{than it is in}} the workstation and server markets <b>RISC</b> <b>architectures</b> were originally designed to serve. To address this problem, several architectures, such as ARM, Power ISA, MIPS, RISC-V, and the Adapteva Epiphany, have an optional short feature-reduced instruction format or instruction compression feature. The SH5 also follows this pattern, albeit having evolved in the opposite direction, having added longer media instructions to an original 16-bit encoding.|$|R
50|$|When {{a branch}} {{instruction}} is involved, {{the location of}} the following delay slot instruction in the pipeline may be called a branch delay slot. Branch delay slots are found mainly in DSP <b>architectures</b> and older <b>RISC</b> <b>architectures.</b> MIPS, PA-RISC, ETRAX CRIS, SuperH, and SPARC are <b>RISC</b> <b>architectures</b> that each have a single branch delay slot; PowerPC, ARM, Alpha, and RISC-V do not have any. DSP architectures that each have a single branch delay slot include the VS DSP, µPD77230 and TMS320C3x. The SHARC DSP and MIPS-X use a double branch delay slot; such a processor will execute a pair of instructions following a branch instruction before the branch takes effect.|$|R
5000|$|DEC {{achieved}} similar {{success with}} its translation tools to help users migrate from the CISC VAX architecture to the Alpha <b>RISC</b> <b>architecture.</b>|$|E
50|$|The SH-2 is a 32-bit <b>RISC</b> <b>architecture</b> with a 16-bit fixed {{instruction}} length for high code density and features a hardware multiply-accumulate (MAC) block for DSP algorithms {{and has a}} five-stage pipeline.|$|E
50|$|In more {{traditional}} processor architectures, a processor is usually programmed by defining the executed operations and their operands. For example, an addition instruction in a <b>RISC</b> <b>architecture</b> could {{look like the}} following.|$|E
25|$|<b>RISC</b> <b>architectures</b> are {{now used}} {{across a wide}} range of platforms, from {{cellular}} telephones and tablet computers to some of the world's fastest supercomputers such as the K computer, the fastest on the TOP500 list in 2011.|$|R
50|$|Dennis Brylow at Marquette University has ported Xinu to {{both the}} PowerPC and MIPSEL {{processor}} architectures. Porting Xinu to reduced instruction set computing (<b>RISC)</b> <b>architectures</b> greatly simplified its implementation, increasing its ability {{to be used as}} a tool for teaching and research.|$|R
50|$|Most <b>RISC</b> <b>architectures</b> {{have only}} about five simple {{addressing}} modes, while CISC architectures {{such as the}} DEC VAX have over a dozen addressing modes, {{some of which are}} quite complicated. The IBM System/360 architecture had only three addressing modes; a few more have been added for the System/390.|$|R
5000|$|Sunway, or ShenWei, (Chinese:), is {{a series}} of {{computer}} microprocessors, developed by Jiāngnán Computing Lab (...) in Wuxi, China. It uses a reduced instruction set computing (<b>RISC)</b> <b>architecture,</b> but details are still sparse.|$|E
5000|$|In 1985, {{research}} on a second-generation <b>RISC</b> <b>architecture</b> {{started at the}} IBM Thomas J. Watson Research Center, producing the [...] "AMERICA architecture"; in 1986, IBM Austin started developing the RS/6000 series, based on that architecture.|$|E
5000|$|HAL Computer Systems, Inc was a Campbell, California-based {{computer}} manufacturer founded in 1990 by Andrew Heller, a principal {{designer of the}} original IBM POWER architecture. His idea was to build computers based on a <b>RISC</b> <b>architecture</b> for the commercial market.|$|E
40|$|In {{this paper}} an {{implementation}} of the back propagation (BP) algorithm (Rumelhart 86) on a cluster of workstations is presented. In a previous paper (Anguita 94), we proposed an efficient implementation of BP on <b>RISC</b> <b>architectures</b> (Matrix Back-Propagation- MBP) : now we extend that work to clusters of workstations using PVM...|$|R
5000|$|The {{full range}} of {{addressing}} modes (including immediate and base+offset) even for instructions such as [...] and , makes direct usage of the stack for integer, floating point and address data simple, as well as keeping the ABI specifications and mechanisms relatively simple compared to some <b>RISC</b> <b>architectures</b> (require more explicit call stack details).|$|R
40|$|High-performance {{networking}} requires {{attention to}} operating system support at the device driver level. Existing driver models, {{such as those}} of Unix, are not necessarily well-suited to supporting high-speed network interfaces. In fact, current drivers may represent a significant obstacle between applications and the high-speed network adapters they seek to exploit. Yet existing models cannot simply be discarded. Certain trends in RISC processor design can also tend to make existing device driver implementations less efficient. Specifically, many drivers make extensive use of operations which are becoming relatively more costly as <b>RISC</b> <b>architectures</b> evolve. This paper describes an effort currently underway to develop device drivers specifically designed to support high-speed network interfaces on <b>RISC</b> <b>architectures.</b> We have analyzed the operation of some existing commercial device driver implementations and modified one using several techniques. Taken together, these techniques promise [...] ...|$|R
50|$|PA-RISC is an {{instruction}} set architecture (ISA) developed by Hewlett-Packard. As the name implies, it is a {{reduced instruction set computer}} (<b>RISC)</b> <b>architecture,</b> where the PA stands for Precision Architecture. The design is {{also referred to}} as HP/PA for Hewlett Packard Precision Architecture.|$|E
50|$|In {{the late}} 1990s, only two 64-bit RISC {{architectures}} were still produced in volume for non-embedded applications: SPARC and Power ISA, but as ARM {{has become increasingly}} powerful, in the early 2010s, it became the third <b>RISC</b> <b>architecture</b> in the general computing segment.|$|E
50|$|A {{number of}} systems, {{going back to}} the 1960s, have been {{credited}} as the first <b>RISC</b> <b>architecture,</b> partly based on their use of load/store approach. The term RISC was coined by David Patterson of the Berkeley RISC project, although somewhat similar concepts had appeared before.|$|E
5000|$|... TOP500 {{supercomputers}} are now all 64-bit, mostly {{based on}} x86-64 CPUs (Intel EMT64 and AMD AMD64 instruction set architecture), {{with few exceptions}} (all based on reduced instruction set computing (<b>RISC)</b> <b>architectures)</b> including 22 supercomputers based on Power Architecture used by IBM POWER microprocessors, seven SPARC (all with Fujitsu-designed SPARC-chips, one of which surprisingly made the top in 2011 without a GPU, currently ranked seventh), and two, seemingly related, Chinese designs: the ShenWei-based (ranked 11 in 2011, ranked 158th in November 2016) and Sunway SW26010-based ranked 1 in 2016, making up the remainder (another non-US design is PEZY-SC, while it's an accelerator paired with Intel's Xeon). Before the ascendance of 32-bit x86 and later 64-bit x86-64 in the early 2000s, a variety of RISC processor families made up most TOP500 supercomputers, including <b>RISC</b> <b>architectures</b> such as SPARC, MIPS, PA-RISC and Alpha.|$|R
5000|$|Power is a <b>RISC</b> load/store <b>architecture.</b> It has {{multiple}} sets of registers: ...|$|R
50|$|By 1989, {{researchers}} at HP recognized that {{reduced instruction set computer}} (<b>RISC)</b> <b>architectures</b> were reaching a limit at one instruction per cycle. They began {{an investigation into}} a new architecture, later named EPIC. The basis for the research was VLIW, in which multiple operations are encoded in every instruction, and then processed by multiple execution units.|$|R
