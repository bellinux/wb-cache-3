34|143|Public
25|$|Terminal Server {{is managed}} by the Terminal Server Manager Microsoft Management Console snap-in. It {{can be used to}} {{configure}} the sign in requirements, as well as to enforce a single instance of <b>remote</b> <b>session.</b> It can also be configured by using Group Policy or Windows Management Instrumentation. It is, however, not available in client versions of Windows OS, where the server is pre-configured to allow only one session and enforce the rights of the user account on the <b>remote</b> <b>session,</b> without any customization.|$|E
25|$|RemoteApp (or TS RemoteApp) is {{a special}} mode of RDS, {{available}} in Windows Server 2008 R2 and later, where <b>remote</b> <b>session</b> configuration is integrated into the client operating system. The RDP 6.1 client ships with Windows XP SP3, KB952155 for Windows XP SP2 users, Windows Vista SP1 and Windows Server 2008. The UI for the RemoteApp is rendered in a window over the local desktop, and is managed like any other window for local applications. The end result {{of this is that}} remote applications behave largely like local applications. The task of establishing the <b>remote</b> <b>session,</b> as well as redirecting local resources to the remote application, is transparent to the end user. Multiple applications can be started in a single RemoteApp session, each with their own windows.|$|E
25|$|Windows Vista onwards, Terminal Services also {{includes}} a multi-party desktop sharing capability known as Windows Desktop Sharing. Unlike Terminal Services, which creates a new user session for every RDP connection, Windows Desktop Sharing can host the <b>remote</b> <b>session</b> {{in the context of}} the currently logged in user without creating a new session, and make the Desktop, or a subset of it, available over RDP. Windows Desktop Sharing can be used to share the entire desktop, a specific region, or a particular application. Windows Desktop Sharing can also be used to share multi-monitor desktops. When sharing applications individually (rather than the entire desktop), the windows are managed (whether they are minimized or maximized) independently at the server and the client side.|$|E
5000|$|RTP-MIDI {{devices are}} able to {{duplicate}} MIDI streams from one session to any number of <b>remote</b> <b>sessions</b> without requiring any [...] "MIDI THRU" [...] support device. When an RTP-MIDI session is connected to two or more <b>remote</b> <b>sessions,</b> all the <b>remote</b> <b>sessions</b> receive {{a copy of the}} MIDI data sent from the source.|$|R
25|$|Session connectivity: Sessions can be {{disconnected}} and reconnected. <b>Remote</b> <b>sessions</b> {{have become}} more tolerant of temporary network failures.|$|R
5000|$|<b>Remote</b> EJB {{stateless}} <b>session</b> bean connectivity: {{connecting to}} <b>remote</b> stateless <b>session</b> beans ...|$|R
25|$|Terminal Server is {{the server}} {{component}} of Terminal services. It handles {{the job of}} authenticating clients, as well as making the applications available remotely. It is also entrusted with the job of restricting the clients according {{to the level of}} access they have. The Terminal Server respects the configured software restriction policies, so as to restrict the availability of certain software to only a certain group of users. The <b>remote</b> <b>session</b> information is stored in specialized directories, called Session Directory which is stored at the server. Session directories are used to store state information about a session, and can be used to resume interrupted sessions. The terminal server also has to manage these directories. Terminal Servers {{can be used in a}} cluster as well.|$|E
25|$|With version 6.0, if the Desktop Experience {{component}} is {{plugged into the}} remote server, remote application user interface elements (e.g., application windows borders, Maximize, Minimize, and Close buttons etc.) will take on the same appearance of local applications. In this scenario, the remote applications will use the Aero theme if the user connects to the server from a Windows Vista machine running Aero. Later versions of the protocol also support rendering the UI in full 32-bit color, as well as resource redirection for printers, COM ports, disk drives, mice and keyboards. With resource redirection, remote applications can use {{the resources of the}} local computer. Audio is also redirected, so that any sounds generated by a remote application are played back at the client system. Moreover, a <b>remote</b> <b>session</b> can also span multiple monitors at the client system, independent of the multi-monitor settings at the server. RDC {{can also be used to}} connect to Windows Media Center (WMC) remote sessions; however, since WMC does not stream video using RDP, only the applications can be viewed this way, not any media.|$|E
500|$|Plan 9's {{distributed}} operation {{relies on}} the per-process namespaces as well, allowing client and server processes to communicate across machines in the way just outlined. For example, the [...] command starts a <b>remote</b> <b>session</b> on a compute server. The command exports part of its local namespace, including the user's terminal's devices ( [...] , , [...] ), to the server, so that remote programs can perform input/output using the terminal's mouse, keyboard and display, combining the effects of remote login and a shared network filesystem.|$|E
25|$|BITS 5.0 is also {{included}} in Windows 8.1 and Windows 10. The version of BITS in Windows 10 supports transfer jobs in PowerShell <b>Remote</b> <b>Sessions.</b>|$|R
5000|$|... cXML {{supports}} <b>remote</b> shopping <b>session</b> (PunchOut) transactions ...|$|R
5000|$|... #Caption: Screenshot from I'm InTouch <b>remote</b> control <b>session.</b>|$|R
2500|$|Remote Desktop Connection (RDC, {{also called}} Remote Desktop, {{formerly}} Microsoft Terminal Services Client, mstsc or tsclient) [...] MSTSC in the filename mstsc.exe stands for Microsoft Terminal Services Client.}} is the client application for RDS. [...] It allows a user to remotely log into a networked computer running the terminal services server. RDC presents the desktop interface (or application GUI) of the remote system, {{as if it}} were accessed locally. In addition to regular username/password for authorizing for the <b>remote</b> <b>session,</b> RDC also supports using smart cards for authorization. With RDC 6.0, the resolution of a <b>remote</b> <b>session</b> can be set independently of the settings at the remote computer.|$|E
2500|$|In Windows Server 2008, it {{has been}} {{significantly}} overhauled. While logging in, if the user logged on to the local system using a Windows Server Domain account, the credentials from the same sign-on {{can be used to}} authenticate the <b>remote</b> <b>session.</b> However, this requires Windows Server 2008 to be the terminal server OS, while the client OS is limited to Windows Server 2008, Windows Vista and Windows 7. In addition, the terminal server may be configured to allow connection to individual programs, rather than the entire desktop, by means of a feature named RemoteApp. Terminal Services Web Access (TS Web Access) makes a RemoteApp session invocable from the web browser. It includes the TS Web Access Web Part control which maintains the list of RemoteApps deployed on the server and keeps the list up to date. [...] Terminal Server can also integrate with Windows System Resource Manager to throttle resource usage of remote applications.|$|E
50|$|Terminal Server {{is managed}} by the Terminal Server Manager Microsoft Management Console snap-in. It {{can be used to}} {{configure}} the sign in requirements, as well as to enforce a single instance of <b>remote</b> <b>session.</b> It can also be configured by using Group Policy or Windows Management Instrumentation. It is, however, not available in client versions of Windows OS, where the server is pre-configured to allow only one session and enforce the rights of the user account on the <b>remote</b> <b>session,</b> without any customization.|$|E
5000|$|Central or {{machine level}} {{auditing}} of executed <b>remote</b> control <b>sessions.</b>|$|R
5000|$|Microsoft Security Support Provider Interface {{technology}} (SSPI) securely authenticates {{the identity}} of the person initiating a connection. SSPI is also used to impersonate {{the identity of}} this person on the client machine. Using the identity and privileges of the person who initiated the <b>remote</b> control <b>session,</b> the <b>remote</b> control <b>session</b> is either authorized or rejected.|$|R
50|$|Access Permission Request: local user should {{approve a}} <b>remote</b> access <b>session</b> start.|$|R
50|$|Remote Desktop Connection (RDC, {{also called}} Remote Desktop, {{formerly}} Microsoft Terminal Services Client, mstsc or tsclient) is the client application for RDS. It allows a user to remotely log into a networked computer running the terminal services server. RDC presents the desktop interface (or application GUI) of the remote system, {{as if it}} were accessed locally. In addition to regular username/password for authorizing for the <b>remote</b> <b>session,</b> RDC also supports using smart cards for authorization. With RDC 6.0, the resolution of a <b>remote</b> <b>session</b> can be set independently of the settings at the remote computer.|$|E
50|$|A session defines {{connection}} between two endpoints (MIDI IN of one endpoint being then {{connected to the}} MIDI OUT of the remote endpoint, and vice versa). A single endpoint can accept multiple sessions, depending on the software configuration. Each session for a given endpoint appears as a singleton for the <b>remote</b> <b>session</b> handler (a <b>remote</b> <b>session</b> handler does not know if the endpoint it is connected to is being used by other sessions at the same time). If multiple sessions are active for a given endpoint, the different MIDI streams reaching the endpoint are merged before the MIDI data are sent to the application. In the other direction, MIDI data produced by an application are sent to all sessions handler which are connected to this endpoint.|$|E
50|$|RemoteApp (or TS RemoteApp) is {{a special}} mode of RDS, {{available}} in Windows Server 2008 R2 and later, where <b>remote</b> <b>session</b> configuration is integrated into the client operating system. The RDP 6.1 client ships with Windows XP SP3, KB952155 for Windows XP SP2 users, Windows Vista SP1 and Windows Server 2008. The UI for the RemoteApp is rendered in a window over the local desktop, and is managed like any other window for local applications. The end result {{of this is that}} remote applications behave largely like local applications. The task of establishing the <b>remote</b> <b>session,</b> as well as redirecting local resources to the remote application, is transparent to the end user. Multiple applications can be started in a single RemoteApp session, each with their own windows.|$|E
25|$|<b>Remote</b> Desktop <b>Session</b> Host: Enables {{a server}} to host RemoteApp {{programs}} as session-based desktops. Users can connect to RD Session Host servers in a session collection to run programs, save files, and use resources on those servers. Users can access <b>Remote</b> Desktop <b>Session</b> Host server {{by using the}} Remote Desktop Connection client or by using RemoteApp programs.|$|R
5000|$|RTP-MIDI {{devices are}} able to merge {{different}} MIDI streams without needing any specific component (MIDI 1.0 devices require [...] "MIDI mergers"). As {{it can be seen}} on the diagram, when a session controller is connected to two or more <b>remote</b> <b>sessions,</b> it merges automatically the MIDI streams coming from the distant devices, without requiring any specific configuration.|$|R
5000|$|File Transfer - Transfer files between remote computers, tablets or {{smartphones}} during <b>remote</b> support <b>sessions</b> ...|$|R
50|$|The Mobile Module {{allows the}} full Vision module {{to run on}} devices that {{do not support the}} Java Runtime Environment. This is {{accomplished}} by the mobile client viewing a <b>remote</b> <b>session</b> on the Ignition Gateway. The mobile module requires a javascript compliant browser that supports the canvas element. Compatible examples include: iPad, iPhone, Android 2.2+, and VNC clients.|$|E
50|$|PowerShell has a {{built-in}} command and API functions (to be used when authoring commands) for writing/updating a progress bar. Progress bar messages are sent separates from regular command outputand the progress bar is always displayed at the ultimate interactive users console {{regardless of whether the}} progress messages originates from an interactive script, from a background job or from a <b>remote</b> <b>session.</b>|$|E
5000|$|Users {{could see}} what was {{happening}} on another's terminal (using a command called OS for [...] "output spy"). A target of OS could detect and kill it using another command called JEDGAR, named after FBI Director J. Edgar Hoover). This facility was later disabled in an interesting way: it looked like the <b>remote</b> <b>session</b> was killed, but it was not.|$|E
5000|$|X2Go is an {{open source}} remote desktop {{software}} for Linux that uses the NX technology protocol. X2Go gives remote access to the Linux graphical user interface. It {{can also be used}} to access Windows desktops. It provides secure <b>remote</b> <b>sessions</b> via ssh. The server package must be installed on a Linux host; Some Linux desktops require workarounds for compatibility. Client packages can be run on Linux, OS X, or Windows.|$|R
50|$|The {{framework}} {{also provides}} fault-recovery (automatic reconnection after connection failure) and some optimizations for client-side use of EJB <b>remote</b> stateless <b>session</b> beans.|$|R
5000|$|... winrs [...] - [...] Windows Remote Shell (WinRS) allows {{establishing}} secure Windows <b>Remote</b> Management <b>sessions</b> {{to multiple}} <b>remote</b> computers {{from a single}} console.|$|R
50|$|When {{the display}} manager {{runs on the}} user's computer, it starts the X server before {{presenting}} the user the login screen, optionally repeating when the user logs out. In this condition, the DM realizes in the X Window System the functionality of getty and login on character-mode terminals. When the display manager runs on a remote computer, it acts like a telnet server, requesting username and password and starting a <b>remote</b> <b>session.</b>|$|E
5000|$|Plan 9's {{distributed}} operation {{relies on}} the per-process namespaces as well, allowing client and server processes to communicate across machines in the way just outlined. For example, the [...] command starts a <b>remote</b> <b>session</b> on a compute server. The command exports part of its local namespace, including the user's terminal's devices ( [...] , , [...] ), to the server, so that remote programs can perform input/output using the terminal's mouse, keyboard and display, combining the effects of remote login and a shared network filesystem.|$|E
5000|$|The {{terminal}} emulator Eterm has an interface layer named Escreen for interoperating with the terminal multiplexers GNU Screen or Twin. This allows Eterm to support multiple sub-shell sessions {{within a single}} window. This feature works similarly to the [...] "tabbed" [...] sessions offered by {{terminal emulator}}s such as Konsole or GNOME Terminal. However, being an interface to existing software, Escreen {{has the advantage of}} providing additional capabilities like multiple regions per display, detach/reattach capability, seamless <b>remote</b> <b>session</b> support, firewall support, and more.|$|E
5000|$|In {{addition}} to film scores, {{it is also}} used for video game scores, events, recording MusicMAX video sessions, live performances, film screenings, and as a rehearsal space. In 2005 Trackdown recorded both the full score for Happy Feet and also <b>remote</b> <b>sessions</b> for ADR using [...] "Source Connect” technology. Most recently, Mentoring Sessions for The Voice Australia, were recorded in the scoring stage. [...] In October 2010 Trackdown scoring stage was renamed The Simon Leadley Scoring Stage in honour of its co-founder.|$|R
50|$|Blake runs HiSpeedHorns, {{a website}} {{allowing}} artists to get horn parts arranged and recorded via <b>remote</b> internet <b>sessions.</b> The website {{was featured in}} Mix Magazine.|$|R
5000|$|Reduced latency {{by using}} {{statistical}} multiplexing across channels—enhances the experience for latency sensitive {{services such as}} gaming, video telephony, <b>remote</b> console <b>sessions</b> and web browsing.|$|R
