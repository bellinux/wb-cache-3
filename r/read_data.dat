602|3490|Public
25|$|Radio-frequency {{identification}} (RFID) – Technology using {{electromagnetic fields}} to <b>read</b> <b>data</b> stored in tags embedded in other items.|$|E
25|$|USB host/memory card audio players: Players {{that rely}} on USB flash drives or other memory cards to <b>read</b> <b>data.</b>|$|E
25|$|Starting with Illumina 1.3 {{and before}} Illumina 1.8, the format encoded a Phred quality score from 0 to 62 using ASCII 64 to 126 (although in raw <b>read</b> <b>data</b> Phred scores from 0 to 40 only are expected).|$|E
50|$|Request.Form <b>reads</b> <b>data</b> sent by POST.|$|R
50|$|Request.QueryString <b>reads</b> <b>data</b> sent by GET.|$|R
50|$|Read (four variants): <b>Reads</b> <b>data</b> from a device.|$|R
25|$|To {{interrupt}} a read burst by a {{write command}} is possible, but more difficult. It can be done, if the DQM signal {{is used to}} suppress output from the SDRAM so that the memory controller may drive data over the DQ lines to the SDRAM {{in time for the}} write operation. Because the effects of DQM on <b>read</b> <b>data</b> are delayed by 2 cycles, but the effects of DQM on write data are immediate, DQM must be raised (to mask the <b>read</b> <b>data)</b> beginning at least two cycles before write command, but must be lowered for the cycle of the write command (assuming the write command is intended to have an effect).|$|E
25|$|The {{system allows}} for the GPU to {{directly}} <b>read</b> <b>data</b> produced by the CPU without going to main memory. In this specific case of data streaming, called Xbox procedural synthesis (XPS), the CPU is effectively a data decompressor, generating geometry on-the-fly for consumption by the GPU 3D core.|$|E
25|$|In February 2017, an {{implementation}} error {{caused by}} a single mistyped character in code used to parse HTML created a buffer overflow error on Cloudflare servers. Similar in its effects to the Heartbleed bug discovered in 2014, this overflow error, widely known as Cloudbleed, allowed unauthorized third parties to <b>read</b> <b>data</b> {{in the memory of}} programs running on the servers—data that should otherwise have been protected by TLS.|$|E
50|$|Unlike current storage {{technologies}} that record and <b>read</b> one <b>data</b> bit at a time, holographic memory writes and <b>reads</b> <b>data</b> in parallel {{in a single}} flash of light.|$|R
30|$|The {{fact that}} the {{execution}} rule <b>reads</b> <b>data</b> from all sensors and other sources leads to a runtime cost that is not negligible, {{when the number of}} devices is high. The reason is that the middleware LINC is used to design reactive rules. To not miss an event and to react as soon as it occurs, a rule is executed by building an inference tree from the <b>data</b> <b>read</b> in its precondition. Hence, the more a rule <b>reads</b> <b>data,</b> the bigger is the inference tree. This slows down the rule execution.|$|R
5000|$|... <b>reading</b> <b>data</b> from a {{nominated}} {{operational system}} (ERP, CRM, SCM, etc.) into a data warehouse optimized for analysis (data led automation), ...|$|R
25|$|To <b>read</b> <b>data,</b> {{first the}} desired group is {{selected}} (in {{the same way}} that a single transistor is selected from a NOR array). Next, most of the word lines are pulled up above the VT of a programmed bit, while one of them is pulled up to just over the VT of an erased bit. The series group will conduct (and pull the bit line low) if the selected bit has not been programmed.|$|E
25|$|Early SDSC host {{devices that}} assume 512-byte blocks {{therefore}} {{do not fully}} support the insertion of 2GB or 4GB cards. In some cases, the host device can <b>read</b> <b>data</b> that happens to reside in the first 1GB of the card. If the assumption {{is made in the}} driver software, success may be version-dependent. In addition, any host device might not support a 4GB SDSC card, since the specification lets it assume that 2GB is the maximum for these cards.|$|E
25|$|Some devices {{even have}} minor variances from the CPOL/CPHA modes {{described}} above. Sending data from slave to master {{may use the}} opposite clock edge as master to slave. Devices often require extra clock idle time before the first clock or after the last one, or between a command and its response. Some devices have two clocks, one to <b>read</b> <b>data,</b> and another to transmit it into the device. Many of the read clocks run from the chip select line.|$|E
5000|$|While loops are {{frequently}} used for <b>reading</b> <b>data</b> {{line by line}} (as defined by the [...] line separator) from open filehandles: ...|$|R
5000|$|Erasing is {{very slow}} (typically 1-100 ms per erase block, which is 103-105 times slower than <b>reading</b> <b>data</b> {{from the same}} region) ...|$|R
50|$|The ANSI/ISO {{standard}} SQL 92 {{refers to}} three different read phenomena when Transaction 1 <b>reads</b> <b>data</b> that Transaction 2 might have changed.|$|R
25|$|The TOSHIBA {{optical drive}} {{used in the}} unit can read Compact Discs and DVDs in {{addition}} to HD DVDs when connected to a host that supports reading these formats (such as a PC). As the drive communicates via a generic mass storage protocol over USB the drive {{can be used as}} a standard optical drive on computers and operating systems that support USB optical drives. The operating system must have a UDF 2.5 driver to <b>read</b> <b>data</b> from HD DVDs. In addition a software player capable of playing HD DVD titles is required for playback of video. The 256MB internal Memory Unit on the drive which is used for storage of HD DVD features is also accessible by manually installing USB Mass Storage drivers. Once installed, this can be formatted for use as a storage device although it will no longer function on an Xbox 360 unless it is reformatted.|$|E
25|$|Many systems {{also support}} a {{low-power}} sleep mode {{in which the}} processing functions of the machine are powered down, using a little power to preserve the contents of RAM and support waking up. Instantaneous resumption {{is one of the}} advantages of sleep mode over hibernation. A hibernated system must start up and <b>read</b> <b>data</b> back to RAM, which typically takes time. A system in sleep mode only needs to power up the CPU and display, which is almost instantaneous. On the other hand, a system in sleep mode still consumes power to keep the data in the RAM. Detaching power from a system in sleep mode results in data loss, while cutting the power of a system in hibernation has no risk; the hibernated system can resume when and if the power is restored. Both shut down and hibernated systems may consume standby power unless they are unplugged.|$|E
25|$|SQL Server allows {{multiple}} {{clients to}} use the same database concurrently. As such, it needs to control concurrent access to shared data, to ensure data integrity—when multiple clients update the same data, or clients attempt to <b>read</b> <b>data</b> that {{is in the process of}} being changed by another client. SQL Server provides two modes of concurrency control: pessimistic concurrency and optimistic concurrency. When pessimistic concurrency control is being used, SQL Server controls concurrent access by using locks. Locks can be either shared or exclusive. Exclusive lock grants the user exclusive access to the data—no other user can access the data as long as the lock is held. Shared locks are used when some data is being read—multiple users can read from data locked with a shared lock, but not acquire an exclusive lock. The latter would have to wait for all shared locks to be released.|$|E
50|$|The Balise Transmission Module (BTM) is an {{set with}} antennas and the {{wireless}} interface for <b>reading</b> <b>data</b> telegrams from and writing to eurobalises.|$|R
40|$|This paper {{describes}} an algorithm that improves {{the performance of}} application-controlled demand paging for out-of-core visualization by hiding the latency of <b>reading</b> <b>data</b> from both local disks or disks on remote servers. The performance improvements come from better overlapping the computation with the page reading process, and by performing multiple page reads in parallel. The paper includes measurements that show that the new multithreaded paging algorithm decreases {{the time needed to}} compute visualizations by one third when using one processor and <b>reading</b> <b>data</b> from local disk. The time needed when using one processor and <b>reading</b> <b>data</b> from remote disk decreased by two thirds. Visualization runs using data from remote disk actually ran faster than ones using data from local disk because the remote runs were able {{to make use of the}} remote server's high performance disk array...|$|R
5000|$|XMMS has Input plugins {{that take}} care of <b>reading</b> <b>data</b> and {{decoding}} it to audio. XMMS2 splits this into a Transport stage and a Decode stage, so that a single transport plugin may supply data of any type to any decoder plugin (such as an HTTP plugin <b>reading</b> mp3 <b>data</b> from a web site).|$|R
25|$|The core idea of ReadyBoost {{is that a}} {{flash memory}} (e.g. a USB flash drive or an SSD) have a much faster seek time than a typical {{magnetic}} hard disk (less than 1ms), allowing it to satisfy requests faster than reading files from the hard disk. It also leverages the inherent advantage of two parallel sources from which to <b>read</b> <b>data,</b> whereas Windows 7 {{enables the use of}} up to eight flash drives at once, allowing up to nine parallel sources. USB 2.0 flash drives are slower for sequential reads and writes than modern desktop hard drives. Desktop hard drives can sustain anywhere from 2 to 10 times the transfer speed of USB 2.0 flash drives but are equal to or slower than USB 3.0 and Firewire (IEEE 1394) for sequential data. USB 2.0 and faster flash drives have faster random access times: typically around 1ms, compared to 12ms for mainstream desktop hard drives.|$|E
25|$|A {{spindle motor}} {{in the drive}} rotates the {{magnetic}} medium at a certain speed, while a stepper motor-operated mechanism moves the magnetic read/write head(s) radially along {{the surface of the}} disk. Both read and write operations require the media to be rotating and the head to contact the disk media, an action originally accomplished by a disk-load solenoid. Later drives held the heads out of contact until a front-panel lever was rotated (5¼") or disk insertion was complete (3½"). To write data, current is sent through a coil in the head as the media rotates. The head's magnetic field aligns the magnetization of the particles directly below the head on the media. When the current is reversed the magnetization aligns in the opposite direction, encoding one bit of data. To <b>read</b> <b>data,</b> the magnetization of the particles in the media induce a tiny voltage in the head coil as they pass under it. This small signal is amplified and sent to the floppy disk controller, which converts the streams of pulses from the media into data, checks it for errors, and sends it to the host computer system.|$|E
500|$|Although the bug {{received}} more attention {{due to the}} threat it represents for servers, TLS clients using affected OpenSSL instances are also vulnerable. In what The Guardian therefore dubbed Reverse Heartbleed, malicious servers are able to exploit Heartbleed to <b>read</b> <b>data</b> from a vulnerable client's memory. Security researcher Steve Gibson said of Heartbleed that: ...|$|E
5000|$|... {{data can}} be entered into the {{simulation}} when it starts up, for example by reading one or more files, or by <b>reading</b> <b>data</b> from a preprocessor; ...|$|R
50|$|FSK was {{primarily}} used in compatibility modes, which allowed <b>reading</b> <b>data</b> written on Microsha, Radio-86RK and ZX Spectrum. Native tape format used by original software is PSK.|$|R
50|$|A {{disadvantage}} of tags {{is that their}} processing is slower than simply <b>reading</b> <b>data</b> from a structure or the stack. Additionally, compile time type checking is lost.|$|R
2500|$|Solexa/Illumina 1.0 format can encode a Solexa/Illumina quality {{score from}} -5 to 62 using ASCII 59 to 126 (although in raw <b>read</b> <b>data</b> Solexa scores from -5 to 40 only are expected) ...|$|E
2500|$|Business {{intelligence}} software {{is a type}} of application software designed to retrieve, analyze, transform and report data for business intelligence. [...] The applications generally <b>read</b> <b>data</b> that have been previously stored, often, though not necessarily, in a data warehouse or data mart.|$|E
2500|$|If {{an address}} is not claimed by any device, the {{transaction}} initiator's address phase will time out causing the initiator to abort the operation. [...] In case of reads, it is customary to supply all-ones for the <b>read</b> <b>data</b> value (0xFFFFFFFF) in this case. PCI devices therefore generally {{attempt to avoid}} using the all-ones value in important status registers, so that such an error can be easily detected by software.|$|E
5000|$|... cat /dev/random > /dev/dsp # plays {{white noise}} through the speaker cat /dev/dsp > a.a # <b>reads</b> <b>data</b> from the {{microphone}} and copies it to file a.a ...|$|R
5000|$|In computing, {{vectored}} I/O, {{also known}} as scatter/gather I/O, is a method of input and output by which a single procedure call sequentially <b>reads</b> <b>data</b> from multiple buffers and writes it to a single <b>data</b> stream, or <b>reads</b> <b>data</b> from a data stream and writes it to multiple buffers, as defined in a [...] vector of buffers. Scatter/gather refers {{to the process of}} gathering data from, or scattering data into, the given set of buffers. Vectored I/O can operate synchronously or asynchronously. The main reasons for using vectored I/O are efficiency and convenience.|$|R
50|$|Existing {{standardized}} interfaces for <b>reading</b> <b>data</b> {{are built}} into several mobile devices, e.g., to get position data from GPS equipment (NMEA) {{or to get}} deceleration information from airbag units.|$|R
