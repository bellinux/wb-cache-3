0|10000|Public
40|$|This {{research}} {{examines the}} performance <b>of</b> <b>due</b> <b>date,</b> resource allocation, project release, and activity scheduling rules in a multiproject environment. The {{results show that}} workload sensitive <b>due</b> <b>date</b> rules always provide better <b>due</b> <b>date</b> estimates than workload insensitive <b>due</b> <b>date</b> rules. In contrast, the performance <b>of</b> <b>due</b> <b>date</b> sensitive resource allocation rules is severely affected by <b>due</b> <b>date</b> nervousness. When <b>due</b> <b>date</b> nervousness is not mitigated, the <b>due</b> <b>date</b> insensitive First In System First Served (FISFS) resource allocation rule performs better than the <b>due</b> <b>date</b> sensitive resource allocation rules. Project release rules can, however, mitigate the effect <b>of</b> <b>due</b> <b>date</b> nervousness. Using a simple project release rule, {{the results show that}} the <b>due</b> <b>date</b> sensitive Minimum Project <b>Due</b> <b>Date</b> resource allocation rule performs better than FISFS and two other <b>due</b> <b>date</b> sensitive resource allocation rules in many project environments...|$|R
40|$|A {{review of}} the results on the <b>due</b> <b>date</b> {{assignment}} and scheduling problems in the static deterministic case is presented. In the problems under consideration, {{the objective is to}} nd optimal values <b>of</b> <b>due</b> <b>dates</b> and the related optimal schedule so that to minimize a given criterion based on the <b>due</b> <b>dates</b> and the completion times <b>of</b> jobs. The <b>due</b> <b>date</b> assignment models where <b>due</b> <b>dates</b> depend on the jobs' processing times or on the positions of the jobs in the schedule are considered. The results on algorithms and complexity <b>of</b> the <b>due</b> <b>date</b> assignment and scheduling problems are summarized in this paper...|$|R
3000|$|... is {{the maximum}} {{completion}} time of all jobs. Tight or loose <b>due</b> <b>dates</b> {{can be obtained}} by large or small value of τ respectively. Moreover, the <b>due</b> <b>date</b> range factor (R) decides the variability <b>of</b> <b>due</b> <b>dates.</b> The range factor (R) is equal to (d [...]...|$|R
40|$|In {{this paper}} we {{introduce}} the concept <b>of</b> <b>due</b> <b>date</b> assignment {{in the project}} scheduling literature. Despite the fact that <b>due</b> <b>date</b> assignment problems belongs {{to the core of}} the machine scheduling literature, no {{attempts have been made to}} tackle this problem in a project scheduling environment. However, of obvious practical importance, an optimal assignment <b>of</b> <b>due</b> <b>dates</b> is <b>of</b> primary interest to the project manager. In a recent research paper on project scheduling with <b>due</b> <b>dates,</b> the problem has been restricted to considering projects with pre-assigned <b>due</b> <b>dates.</b> In reality, <b>due</b> <b>dates</b> are the results of negotiations, rather than simply dictated by the client of the project. In this paper we consider this negotiation process and take a contractor’s point of view who faces the problem <b>of</b> assigning <b>due</b> <b>dates</b> to a particular project, based on the negotiation arguments of the client. We show that the problem under study can be solved by means of the combination of different ideas from the operations research community. Project Management; <b>Due</b> <b>date</b> assignment; Weighted earliness-tardiness costs,Due dates...|$|R
40|$|For a {{customer-oriented}} wafer fab, low volume {{products such}} as development lots or customer samples are often more critical than high volume products with regard to cycle time and delivery reliability because <b>of</b> <b>due</b> <b>date</b> commitment. In this study, a global rule combining WIP balance and <b>due</b> <b>date</b> control is developed for a wafer fab with low and high volume products. The purpose {{is to figure out}} the following two issues. Firstly, whether WIP balance of high volume products takes the cost <b>of</b> <b>due</b> <b>date</b> <b>of</b> low volume products. Secondly, how to make the trade-off between on-time delivery and WIP balance for the low volume products. ...|$|R
40|$|AbstractGiven {{a single}} machine {{and a set}} <b>of</b> jobs with <b>due</b> <b>dates,</b> the {{classical}} NP-hard problem of scheduling to minimize total tardiness is a well-understood one. Lawler gave a fully polynomial-time approximation scheme (FPTAS) for it some 20 years ago. If the jobs have positive weights the problem of minimizing total weighted tardiness seems to be considerably more intricate. it. In this paper, we give {{some of the first}} approximation algorithms for it. We examine first the weighted problem with a fixed number <b>of</b> <b>due</b> <b>dates</b> and we design a pseudopolynomial algorithm for it. We show how to transform the pseudopolynomial algorithm to an FPTAS for the case where the weights are polynomially bounded. For the case with an arbitrary number <b>of</b> <b>due</b> <b>dates</b> and polynomially bounded processing times, we provide a quasipolynomial algorithm which produces a schedule whose value has an additive error proportional to the weighted sum <b>of</b> the <b>due</b> <b>dates.</b> We also investigate the performance of algorithms for minimizing the related total weighted late work objective...|$|R
30|$|Scheduling that {{incorporates}} <b>due</b> <b>dates</b> is <b>of</b> permanent interest [46]. The {{problem has been}} investigated since 1965 {{in the work of}} Jackson [47]. In academic research, the incorporation <b>of</b> <b>due</b> <b>dates</b> in scheduling problem acts in a twofold manner: it increases the constraints of the problem and thus it increases computational complexity, and it serves as a milestone against which important indicators are calculated, such as tardiness, earliness, and slack time. In a similar manner, in an industrial context, where the satisfaction of customer needs is the primary concern, the assignment and adherence <b>of</b> <b>due</b> <b>dates</b> determine the efficiency of a factory. Therefore, the assignment <b>of</b> realistic <b>due</b> <b>dates</b> is utterly important. In the literature, few works treat scheduling problems with the due-date assignment decision being of primary focus. Among the most significant contributions, Cheng and Gupta [48] review due-date assignment approaches up to 1990, whereas Gordon et al. [46] review more recent publications (up to 2002). In most works, the due-date assignment problem is treated using benchmarking instances [49], single-resource problems [50, 51] or is focused on assembly shops [52]. Moreover, the calculation <b>of</b> <b>due</b> <b>dates</b> in ETO environments is relatively mistreated. Most studies focus on static problem instances where jobs do not arrive continuously in the system [46], or require significant modelling efforts [53] and simulation experiments [54], which are rarely feasible in actual daily practice for due-date calculation.|$|R
40|$|AbstractIn this paper, we {{consider}} the problem of simultaneous determination <b>of</b> optimal <b>due</b> <b>dates</b> and optimal schedule for the single machine problem with multiple common <b>due</b> <b>dates.</b> The penalty for a job {{is assumed to be}} a linear function <b>of</b> the <b>due</b> <b>date</b> and the earliness/tardiness for the job. The objective function is to minimize the total penalty for all jobs. We show that with the introduction of learning to job processing times the problem remains polynomially solvable for a given number <b>of</b> multiple common <b>due</b> <b>dates...</b>|$|R
40|$|We {{considered}} {{a problem of}} creation of feasible schedule of performing an independent operations with different durations and <b>due</b> <b>dates</b> <b>of</b> a single device, in which the minimum of the total earliness <b>of</b> <b>due</b> <b>dates</b> is achieved. We consider PDS ? an algorithm for finding an optimal schedule on criteria of minimizing the total earliness. ??????????? ?????? ??????????? ??????????? ?????????? ?????????? ??????????? ????? ? ?????????? ?????????????? ? ???????????? ??????? ????? ????????, ??? ??????? ???????????? ????????? ?????????? ??????????? ??????. ????????? ??? ? ???????? ?????????? ???????????? ?????????? ?? ???????? ??????????? ?????????? ??????????...|$|R
40|$|We analyze {{a number}} <b>of</b> <b>due</b> <b>date</b> {{assignment}} {{problems with the}} weighted number of tardy jobs objective and show that these problems can be solved in O(n 2) time by dynamic programming. We show {{that the effects of}} learning or the effects of past-sequence-dependent setup times can be incorporated into the problem formulation at no additional computational cost. We also show that some single-machine <b>due</b> <b>date</b> assignment problems can be extended to an identical parallel machine setting. Finally, we improve the complexity of the solution algorithms for two other <b>due</b> <b>date</b> assignment problems. Weighted number <b>of</b> tardy jobs <b>Due</b> <b>date</b> assignment...|$|R
40|$|In this paper, {{we examine}} the cycle time and on-time {{delivery}} performance of a semiconductor wafer fabrication facility (wafer fab) under critical ratio (CR) dispatch regime. It turns out that determining appropriate <b>due</b> <b>dates</b> for this rule is a critical task. We provide {{a detailed analysis of}} the wafer fab behavior for a large range <b>of</b> <b>due</b> <b>date</b> values. From the results of the experiments we develop a heuristic for conservative <b>due</b> <b>date</b> estimates...|$|R
40|$|Published version at [URL] {{study the}} problem of {{scheduling}} jobs whose processing times are decreasing functions of their starting times. We {{consider the case of}} a single machine and a common decreasing rate for the processing times. The problem is to determine an optimal combination <b>of</b> the <b>due</b> <b>date</b> and schedule so as to minimize the sum <b>of</b> <b>due</b> <b>date,</b> earliness and tardiness penalties. We give an O(n log n) time algorithm to solve this problem. Department of Logistics and Maritime StudiesAuthor name used in this publication: T. C. E. ChengAuthor name used in this publication: L. Y. KangAuthor name used in this publication: C. T. N...|$|R
40|$|<b>Due</b> <b>date</b> {{determination}} problems comprise scheduling {{problems in}} {{which not only}} the scheduling of n jobs is involved, but the assignment <b>of</b> <b>due</b> <b>dates</b> to jobs as well. This paper considers the case where a schedule is given {{and there is a}} single decision variable involved: the <b>due</b> <b>date</b> multiplier. The multiplier is used to set the <b>due</b> <b>dates</b> in order to minimize a composite objective function. Recently, an O(n 2) algorithm was presented, the validity of which was proved on basis of the dual of the linear programming formulation of this problem. We give a simpler and faster algorithm based upon strictly primal arguments, requiring only O(n log n) time. In addition, we point out that these arguments can be employed for alternative proofs in case <b>of</b> a common <b>due</b> <b>date...</b>|$|R
40|$|VirtualClock service {{scheduling}} scheme [1] is an Earliest <b>Due</b> <b>Date</b> (EDD) scheme {{where the}} <b>due</b> <b>date</b> <b>of</b> a cell is its departure time {{from a single}} server queue with constant service rate equal to the allocated bandwidth of the cell's Virtual Connection (VC). The initial implementation of the VirtualClock scheme [1] computed the <b>due</b> <b>date</b> <b>of</b> an arriving cell and stamped the cell with the <b>due</b> <b>date.</b> The stamped cells were placed in a sorted buffer and served in increasing order <b>of</b> <b>due</b> <b>dates.</b> Since <b>due</b> <b>dates</b> are monotonically increasing parameters, a large buffer is needed to store stamped cells. In this paper, a new implementation is proposed which does not use cell stamping nor any monotonically increasing parameters such as virtual and real clocks. Instead <b>of</b> storing the <b>due</b> <b>dates</b> <b>of</b> each cell, the proposed implementation only keeps track of the time to <b>due</b> <b>date</b> <b>of</b> the Head-of-the-Line (HOL) cell of each VC. Moreover, the proposed implementation also sheds light on the relationship betwee [...] ...|$|R
40|$|Performance {{in doing}} a {{task in the}} {{learning}} stage depends on the previous practice on other tasks –learning curve is path dependent. A mathematical program aimed to assign a set of tasks {{to a set of}} workers considering path dependent learning curves is presented. <b>Due</b> <b>dates</b> for task and final knowledge objectives are possible, some tasks can be subcontracted and temporary workers can be hired. The model allows obtaining the cost <b>of</b> <b>due</b> <b>dates</b> and final knowledge...|$|R
50|$|In June 2010 Kadir {{has signed}} {{for three years}} with Maccabi Tel Aviv. Five months later he was loaned to Maccabi Haifa for the <b>reminder</b> <b>of</b> the season <b>due</b> to lack <b>of</b> playing minutes.|$|R
40|$|With the {{increased}} emphasis on the effective management of operational issues in supply chains, the timely delivery of products has become even more important. Companies have to quote attainable delivery dates and then meet these, or face large tardiness penalties. We study systems that can be modeled by single-machine scheduling problems with <b>due</b> <b>date</b> assignment and controllable job-processing times, which are either linear or convex functions {{of the amount of}} a continuously divisible and nonrenewable resource that is allocated to the task. The <b>due</b> <b>date</b> assignment methods studied include the common <b>due</b> <b>date,</b> the slack <b>due</b> <b>date,</b> which reflects equal waiting time allowance for the jobs, and the most general method <b>of</b> unrestricted <b>due</b> <b>dates,</b> when each job may be assigned a different <b>due</b> <b>date.</b> For each combination <b>of</b> <b>due</b> <b>date</b> assignment method and processing-time function, we provide a polynomial-time algorithm to find the optimal job sequence, <b>due</b> <b>date</b> values, and resource allocations that minimize an integrated objective function, which includes the weighted number of tardy jobs, and <b>due</b> <b>date</b> assignment, makespan, and total resource consumption costs. delivery time quotation, order sequencing, single-machine scheduling, <b>due</b> <b>date</b> assignment methods, controllable processing times, resource allocation...|$|R
40|$|In this paper, we {{consider}} a single-machine earliness-tardiness scheduling problem with due-date assignment, {{in which the}} processing time of a job {{is a function of}} its position in a sequence and its resource allocation. The <b>due</b> <b>date</b> assignment methods studied include the common <b>due</b> <b>date,</b> and the slack <b>due</b> <b>date,</b> which reflects equal waiting time allowance for the jobs. For each combination <b>of</b> <b>due</b> <b>date</b> assignment method and processing time function, we provide a polynomial-time algorithm to find the optimal job sequence, <b>due</b> <b>date</b> values, and resource allocations that minimize an integrated objective function, which includes earliness, tardiness, <b>due</b> <b>date</b> assignment, and total resource consumption costs. Department of Industrial and Systems Engineerin...|$|R
50|$|The Estimated Date of Confinement (EDC), {{also known}} as {{expected}} <b>date</b> <b>of</b> delivery/estimated <b>due</b> <b>date</b> (EDD) or simply <b>due</b> <b>date,</b> is a term describing the estimated delivery date for a pregnant woman. Normal pregnancies last between 37 and 42 weeks.|$|R
50|$|The Pensions Bill 2011 {{working its}} way through Parliament makes a number of {{amendments}} to the Act, ahead <b>of</b> its <b>due</b> <b>date</b> to be brought into force in 2012.|$|R
40|$|This chapter {{deals with}} common <b>due</b> <b>date</b> {{scheduling}} problem on single and parallel machines in which job processing times are identical. The {{objective is to}} minimize the total weighted earliness-tardiness. According to the common <b>due</b> <b>date,</b> two cases are considered. In the first case, the <b>due</b> <b>date</b> is given which involves that the common <b>due</b> <b>date</b> is enough early (restrictive version) or not (non-restrictive version) to constraint the optimal solution. In this case, there is no cost related to its value. The second case deals with unknown <b>due</b> <b>date</b> which is a decision variables. It means that the decision maker not only takes sequencing and scheduling decisions to minimize the total weighted earliness-tardiness but also determines the optimal value <b>of</b> <b>due</b> <b>date</b> which is specified as controllable parameter...|$|R
40|$|This paper {{includes}} part of {{the strategies}} used to solve a scheduling problem developed {{for a company that}} produces flexible packaging, presented in quite a general form though. In this problem it is necessary to schedule several jobs that involve four process and for each one of them there is a group of machines available (of similar characteristics). Each activity is performed on just one machine. Besides, for our application, the scheduling must try to verify certain conditions. For each process (and consequently for all the activities that performs this process) there is a list of attributes. The problem is not only to assign each activity to a starting time and to a specific machine, but also to try to verify conditions that depend on the values of the attributes of the activities. Moreover, there are criteria to choose a particular machine. An approach to solve this problem was presented first in (Ibañez et al., 2001). As mentioned there, some jobs could not be fulfilled to meet their <b>due</b> <b>dates.</b> An approach to decrease the quantity <b>of</b> <b>due</b> <b>dates</b> violations was presented in (Ibañez et al., 2002). The algorithm presented in (Ibañez et al., 2001) is entirely dedicated to verify as many conditions as possible disregarding <b>due</b> <b>date</b> violations. The algorithm shown in (Ibañez et al., 2002) was focussed to reduce the number <b>of</b> <b>due</b> <b>date</b> violations by paying the price of decreasing the fulfilment of conditions. Roughly speaking, the first approach favours the company whereas the second one is more convenient for the customers. The present work includes an algorithm, which allows us to assign weights to set an appropriate trade <b>of</b> between <b>due</b> <b>date</b> violation reduction and fulfillment of conditions. Eje: Agentes y Sistemas Inteligentes (ASI...|$|R
5000|$|The Photoclerk {{was used}} in the {{transaction}} card charging system to make copies <b>of</b> the <b>due</b> <b>date</b> cards. [...] Shaw also experimented with the Photo-Clerk at the Department of Agriculture Library.|$|R
40|$|We {{consider}} several two-agent scheduling {{problems with}} assignable <b>due</b> <b>dates</b> {{on a single}} machine, where each of the agents wants to minimize a measure depending on the completion times of its own jobs and the <b>due</b> <b>dates</b> are treated as given variables and must be assigned to individual jobs. The goal is to assign a <b>due</b> <b>date</b> from a given set <b>of</b> <b>due</b> <b>dates</b> and {{a position in the}} sequence to each job so that the weighted sum of the objectives of both agents is minimized. For different combinations of the objectives, which include the maximum lateness, total (weighted) tardiness, and total (weighted) number of tardy jobs, we provide the complexity results and solve the corresponding problems, if possible. Department of Logistics and Maritime Studie...|$|R
40|$|The basic {{enterprise}} task is {{to satisfy}} customer requirements: <b>due</b> <b>date,</b> price and quality. Based on experiences from engineers practice of work in Croatian enterprises it could be concluded that enterprises {{are not able to}} fulfil obligations to the customer in a way <b>of</b> <b>due</b> <b>dates.</b> One <b>of</b> the basic reasons lies in inappropriate scheduling model that has not had possibility to make plan variants. The paper shows how genetic algorithm could be successfully applied in scheduling model {{to solve the problem of}} plan variant. As a basic selection in the paper 3 -tournament steady-state selection has been applied...|$|R
40|$|Abstract <b>Due</b> <b>date</b> {{assignment}} {{is an important}} task in shop floor control, affecting both timely delivery and customer sat-isfaction. <b>Due</b> <b>date</b> related performances are impacted by the quality <b>of</b> the <b>due</b> <b>date</b> assignment methods. Among the sim-ple and easy to implement <b>due</b> <b>date</b> assignment methods, the total work content (TWK) method achieves the best perform-ance for tardiness related performance criteria and is most widely used in practice and in study. The performance of the TWK method can be improved if the <b>due</b> <b>date</b> allowance factor k could render a more precise and accurate flowtime estimation of each individual job. In this study, {{in order to improve}} the performance of the TWK method, we have presented a model that incorporated a data mining tool – Decision Tree – for min-ing the knowledge of job scheduling about <b>due</b> <b>date</b> assign-ment in a dynamic job shop environment, which is represented by IF-THEN rules and is able to adjust an appropriate factor k according to the condition of the shop at the instant of job arrival, thereby reducing the <b>due</b> <b>date</b> prediction errors <b>of</b> the TWK method. Simulation results show that our proposed rule-based TWK <b>due</b> <b>date</b> assignment (RTWK) model is significantly better than its static and dynamic counterparts (i. e., TWK and Dynamic TWK methods). In addition, the RTWK model also extracted comprehensive scheduling knowledge about <b>due</b> <b>date</b> assignment, expressed in the form of IF-THEN rules, allowing production managers to easily understand the principles <b>of</b> <b>due</b> <b>date</b> assignment...|$|R
40|$|This {{paper is}} an {{extension}} of a previous paper published in [2]. In this problem it is necessary to schedule several jobs that involve four process and for each one of them there is a group of machines available (of similar characteristics). Each activity is performed on just one machine. Besides, for our application, the scheduling must try to verify certain conditions. For each process (and consequently for all the activities that perform this process) there is a list of attributes. The problem is not only to assign each activity to a starting time and to a specific machine, but also to try to verify conditions that depend on the values of the attributes of the activities. Moreover, there are criteria to choose a particular machine An approach to solve this problem was presented first in [1]. As mentioned there, some <b>due</b> <b>dates</b> could not be fulfilled on time. An approach to decrease the quantity <b>of</b> <b>due</b> <b>dates</b> violations was presented in [2]. Roughly speaking, the algorithm presented in [1] is entirely dedicated to verify as many conditions as possible disregarding <b>due</b> <b>dates</b> violations. By the other hand, the algorithm shown in [2] was focussed to reduce the numer <b>of</b> <b>due</b> <b>dates</b> violations paying the price of decreasing the fulfillment of conditions. Roughl speaking, the first approach favour the company whereas the second one is more convenient for the customers. The present work includes an algorithm which allows to assign weights to set an appropriate trade-off between <b>due</b> <b>date</b> violations reduction and fulfillment of conditionsEje: V - Workshop de agentes y sistemas inteligente...|$|R
40|$|AbstractA control-theoretic, order <b>due</b> <b>date</b> {{deviation}} regulation {{method is}} {{presented in this paper}} for work systems that can dynamically adjust their capacity and order release times. The relationship between <b>due</b> <b>date</b> deviations and work system capacity is shown to be nonlinear and time varying, and a method is presented for characterizing the relationship quantitatively in real time and using this information in an adaptive capacity adjustment control law that maintains favorable dynamic behavior {{in the presence of the}} nonlinearities. Control theoretic analyses are included in the paper for designing the dynamic behavior <b>of</b> <b>due</b> <b>date</b> deviations and work system capacity, and results of discrete event simulations driven by industrial data are used to illustrate dynamic behavior. Conclusions are presented regarding the efficacy of combining scheduling and <b>due</b> <b>date</b> deviation regulation and the resulting tradeoffs between <b>due</b> <b>date</b> deviation and capacity...|$|R
40|$|This {{paper is}} {{a review of}} the results on the <b>due</b> <b>date</b> {{assignment}} and scheduling problems in the static deterministic case. In the problems under consideration, the objective is to find optimal values <b>of</b> the <b>due</b> <b>dates</b> and the related optimal schedule so that to minimize a given criterion based on the <b>due</b> <b>dates</b> and the completion times of jobs. The problems with <b>due</b> <b>date</b> determination have received considerable attention {{in the last ten years}} due to the introduction of new methods of inventory management such as Just-In-Time systems. According to the Just-In-Time concept jobs are to be completed neither too early nor too late which leads to the problems with non-regular measure of performance that includes earliness and tardiness costs. The <b>due</b> <b>date</b> assignment models where <b>due</b> <b>dates</b> depend on the jobs' processing times or on the positions of the jobs in the schedule are considered. The results on algorithms and complexity <b>of</b> the <b>due</b> <b>date</b> assignment and scheduling problems are summarized...|$|R
2500|$|Not {{reflected}} in the above order <b>of</b> battle <b>due</b> to <b>date</b> discrepancies: ...|$|R
40|$|What are {{the roles}} of time and time {{pressures}} in design and performance of agile processes for software development? How do we plan our rapid development activities given the constraints <b>of</b> <b>due</b> <b>dates?</b> What {{does it mean to}} be on ‘internet time’? Agile methods are meant to be fast-paced, but are they fast in an effective way? How do time-pressures influence the productivity of a project team and how do they impact the motivations of developers? This paper considers the time issues i...|$|R
40|$|International audienceIn {{this paper}} we {{consider}} the maximization of the weighted number of early jobs on a single machine with non-availability constraints. We deal with the resumable and the non-resumable cases. We show that the resumable version of this problem has a fully polynomial time approximation scheme (FPTAS) even {{if the number of}} the non-availability intervals is variable and a subset of jobs has deadlines instead <b>of</b> <b>due</b> <b>dates.</b> For the non-resumable version we remark that the problem cannot admit an FPTAS even if all <b>due</b> <b>dates</b> are equal and only one non-availability interval occurs. Nevertheless, we show in this case that it admits a polynomial time approximation scheme (PTAS) for a constant number of non-availability intervals and arbitrary <b>due</b> <b>dates...</b>|$|R
40|$|Different single {{dispatching}} rules aim {{at different}} objectives, for instance, SPT (shortest processing time) rule {{is good at}} minimizing cycle time and ODD (operation <b>due</b> <b>date)</b> rule intends to minimize deviation between lateness and target <b>due</b> <b>date</b> to achieve better on-time delivery. While some advanced rules called composite rules combine the characteristics of those basic single rules into one composite dispatching rule such as MOD (modified operation <b>due</b> <b>date)</b> which {{is a combination of}} SPT and ODD rule. In this paper, a new composite rule which combines ODD, SPT and LWNQ rules (least work at next queue) is developed with the objective <b>of</b> <b>due</b> <b>date</b> control and workload balance. A design of experiment is used to determine the appropriate scaling parameter for this composite rule. The simulation results show significant improvement versus the use of MOD rule. ...|$|R
40|$|Since its {{development}} in the early 90 's, parameterized complexity has been widely {{used to analyze the}} tractability of many NP-hard combinatorial optimization problems with respect to various types of problem parameters. While the generic nature of the framework allows the analysis of any combinatorial problem, the main focus along the years was on analyzing graph problems. In this paper we diverge from this trend by studying the parameterized complexity of Just-In-Time (JIT) flow-shop scheduling problems. Our analysis focuses on the case where the number <b>of</b> <b>due</b> <b>dates</b> is considerably smaller than the number of jobs, and can thus be considered as a parameter. We prove that the two-machine problem is W[1]-hard with respect to this parameter, even if all processing times on the second machine are of unit length, while the problem is in XP even for a parameterized number of machines. We then move on to study the tractability of the problem when combining the different number <b>of</b> <b>due</b> <b>dates</b> with either the number of different weights or the number of different processing times on the first machine. We prove that in both cases the problem is fixed-parameter tractable for the two machine case, and is W[1]-hard for three or more machines...|$|R
30|$|Every part has a {{predefined}} {{processing sequence}} incorporating batch size, <b>due</b> <b>dates</b> and penalty costs in case <b>of</b> not meeting <b>due</b> <b>dates.</b> The processing time of every part is known and deterministic.|$|R
40|$|One of {{the basic}} {{assumptions}} in past job shop research is that arriving jobs are immediately released to the shop floor for processing regardless of available job and shop information. In practice, jobs arriving at the shop are usually collected into a backlog file. Jobs are then released by some mechanism {{so that they can}} be processed within the time available before the <b>due</b> <b>date.</b> This study examines the effects of several release mechanisms on the performance of a dual resource constrained job shop. The release mechanisms differ in the amount and types of information used to make release decisions. Four release mechanisms are tested in conjunction with two dynamic, <b>due</b> <b>date</b> oriented dispatching rules, Modified Operation <b>Due</b> <b>Date</b> and Critical Ratio. The job shop environment is specified by two levels <b>of</b> <b>due</b> <b>date</b> tightness. A labor and machine limited job shop model was used to simulate the shop performance. ...|$|R
