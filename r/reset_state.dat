45|145|Public
50|$|Bringing the {{replications}} into synchrony requires {{making their}} internal stored states the same. They can be started from a fixed initial state, {{such as the}} <b>reset</b> <b>state.</b> Alternatively, the internal state of one replica can be copied to another replica.|$|E
5000|$|A {{variant of}} the D-flop is one with an {{asynchronous}} reset; there is a convention that the <b>reset</b> <b>state</b> {{will be the first}} if clause within the statement.reg q;always @(posedge clk or posedge reset) if(reset) q <= 0; else q <= d; ...|$|E
50|$|On {{exit from}} the <b>RESET</b> <b>state,</b> the {{instruction}} register is preloaded with either BYPASS or IDCODE. This allows JTAG hosts to identify the size and, at least partially, contents of the scan chain {{to which they are}} connected. (They can enter the <b>RESET</b> <b>state</b> then scan the Data Register until they read back the data they wrote. A BYPASS register has only a zero bit; while an IDCODE register is 32-bits and starts with a one. So the bits not written by the host can easily be mapped to TAPs.) Such identification is often used to sanity check manual configuration, since IDCODE is often unspecific. It could for example identify an ARM Cortex-M3 based microcontroller, without specifying the microcontroller vendor or model; or a particular FPGA, but not how it has been programmed.|$|E
50|$|Mileposts <b>reset</b> at <b>state</b> line crossings.|$|R
30|$|Error tolerance: {{frequent}} <b>reset</b> of <b>state</b> indices allows high error tolerance.|$|R
5000|$|Mileposts <b>reset</b> at <b>state</b> line crossings. In Nebraska, US 275 is {{considered}} an east - west highway, its mileposts run from west to east ...|$|R
5000|$|UNI/O {{defines a}} signal pulse, called the [...] "standby pulse", {{that can be}} {{generated}} by the master to force slave devices into a <b>reset</b> <b>state</b> (referred to as [...] "standby mode"). To generate a standby pulse, the master must drive the bus to a logic high {{for a minimum of}} 600 µs.|$|E
50|$|Dual-rail {{encoding}} {{is by far}} {{the most}} common, mostly with a four-phase protocol which is also called three-state encoding, since it has two valid states (10 and 01, after a transition) and a <b>reset</b> <b>state</b> (00). Another common encoding, which leads to simpler implementation than one-hot two-phase dual-rail, is four state encoding, or level encoded dual-rail, which uses a data bit and a parity bit to achieve a two-phase protocol.|$|E
5000|$|Most D-type {{flip-flops}} in ICs {{have the}} capability to be forced to the set or <b>reset</b> <b>state</b> (which ignores the D and clock inputs), much like an SR flip-flop. Usually, the illegal S = R = 1 condition is resolved in D-type flip-flops. By setting S = R = 0, the flip-flop can be used as described above. Here is the truth table for the others S and R possible configurations: ...|$|E
50|$|Mileposts <b>reset</b> at the <b>state</b> line.|$|R
40|$|Phase change {{materials}} (PCM) based {{memory device}} is {{considered as one}} of the most promising candidates for next-generation non-volatile solid-state memory [1]. The set and <b>reset</b> <b>states</b> in this device correspond to a low resistance and a high resistance of the cell, which in-turn correspond to the crystalline and amorphous states of the phase change material, respectively. The total resistance of a phase change memory cell, however, consists of the resistance from the PCM and the interfacial contact resistance of the PCM to the electrodes. Although a large amount research has been done on characterization of PCM resistance, little attention is paid to study the contact resistance. Here in this work, the contact resistance of Ge 2 Sb 2 Te 5 to titanium nitride (TiN) electrode has been characterized in both set and <b>reset</b> <b>states</b> using a nanowire structure obtained from spacer etch. This spacer etch is a novel technique and can be used as a low-cost alternative to E-beam lithography for sub-hundred nanometre nanowire fabrication. Unlike bottom-up technology, it is compatible with current CMOS process and the geometry and location of the nanowires can be precisely controlled. In this case it allows us make long structures with small contact area to separate the resistive contribution of bulk and interfac...|$|R
50|$|Mileage <b>resets</b> at the <b>state</b> line crossing.|$|R
50|$|The TRST pin is an {{optional}} active-low reset {{to the test}} logic - usually asynchronous, but sometimes synchronous, depending on the chip. If the pin is not available, the test logic can be reset by switching to the <b>reset</b> <b>state</b> synchronously, using TCK and TMS. Note that resetting test logic doesn't necessarily imply resetting anything else. There are generally some processor-specific JTAG operations which can reset {{all or part of}} the chip being debugged.|$|E
50|$|A simple PoR {{uses the}} {{charging}} of a capacitor, {{in series with}} a resistor, to measure a time period during which {{the rest of the}} circuit is held in a <b>reset</b> <b>state.</b> A Schmitt trigger may be used to deassert the reset signal cleanly, once the rising voltage of the RC network passes the threshold voltage of the Schmitt trigger. The resistor and capacitor values should be determined so that the charging of the RC network takes long enough that the supply voltage will have stabilised by the time the threshold is reached.|$|E
5000|$|In all NMOS logic {{forms of}} the 6502, the decimal flag (D flag) is not {{initialized}} to a known state following <b>reset</b> (<b>state</b> is [...] "random") or when an interrupt is processed (state has been kept from [...] "before the interrupt occurred"), which may lead to arbitrary behavior. This forces 6502 programmers to use the CLD instruction early in the reset handler code (it is generally the second instruction executed after SEI), {{as well as in}} the front end of the interrupt handler. The 65C02 addresses these problems by causing the D flag to be cleared at reset or upon receipt of an interrupt (after the status register is pushed onto the stack).|$|E
5000|$|On January 27, 2017, Cole {{released}} her lead single [...] "You" [...] (featuring Remy Ma and French Montana) from her upcoming seventh studio album. In {{an interview with}} Rap-Up magazine, she announced {{the name of her}} upcoming album titled 11:11 <b>Reset</b> <b>stating</b> [...] "For the past year, I’ve been seeing 1111 constantly and to my understanding, you’re aligned spiritually with your destiny and everything that is meant to be in your life is happening at the right time. The timing is right. Everything is right. Reset is definitely cohesive with that.".|$|R
40|$|<b>Reset</b> <b>states</b> {{are often}} not known for a given design {{until late in the}} design cycle. There is {{therefore}} a need for sequential equivalence checking algorithms that work in the absence of this information. One popular choice for such a notion is alignability, which has the allure of not necessarily needing a symbolic traversal of every state in the system. However, to use alignability in practice, there are several obstacles that needs to be overcome. First of all, the standard alignability theory {{does not take into account}} that the golden design often may specify a range of acceptable implementations by means of designer annotated don’t care states and don’t care logic. Second, when two designs are unalignable, the fact that there are no specified initial state makes it hard to generate a meaningful counter-example to aid the designer in debugging the designs. We address these issues by extending the standard alignability theory so that it handles don’t care information in the absence of <b>reset</b> <b>states,</b> and by devising a heuristic for finding a meaningful initial state for the debug traces. Our experimental results show that our theory extensions are necessary to be able to deal with a large portion of the industrial designs that we have applied our alignability checking tool to. We also show how our debug trace heuristic has allowed us to find a real optimization tool bug. ...|$|R
5000|$|... 3: <b>state</b> <b>reset,</b> {{properties}} reset using properties byte, dictionary reset ...|$|R
50|$|Note: The above routine {{presumes that}} the CDP1802 {{microprocessor}} {{is in an}} initial <b>reset</b> <b>state</b> (or {{that it has been}} set as such prior to executing this code). Therefore, the program counter (PC) and the X indirect register 'pointer' are both set to 16-bit register R0. That is why you can output an immediate value, as in the example 'OUT 4,00', because PC and X are both pointing to R0. The PC is incremented after the opcode instruction byte is retrieved from memory, so it points to the next address when the OUT 4 is executed. Therefore, it outputs the value in memory pointed to by RX = R0, which is the next immediate byte. The OUT instruction also increments the X register, which is R0, which is also the PC, so it outputs the immediate value after the OUT and continues program execution at the next instruction address after the immediate value. This is why you see the routine set X (SEX) to register R6 and R0 as needed. Also note that, although the OUT opcode increments the RX register, to easily output a section of memory ('buffer'), INP does not. It stores the value at the address pointed to by RX and into the D 8-bit data byte accumulator, but RX is not modified.|$|E
5000|$|LIBRARY ieee;USE ieee.std_logic_1164.ALL; [...] ENTITY bin2bcd_12bit_test_file ISEND bin2bcd_12bit_test_file; ARCHITECTURE {{behavior}} OF bin2bcd_12bit_test_file IS [...] -- Component Declaration for the Unit Under Test (UUT) [...] COMPONENT bin2bcd_12bit PORT( [...] binIN : IN std_logic_vector(11 downto 0); ones : OUT std_logic_vector(3 downto 0); tens : OUT std_logic_vector(3 downto 0); hundreds : OUT std_logic_vector(3 downto 0); thousands : OUT std_logic_vector(3 downto 0) [...] ); END COMPONENT; [...] -- WARNING: Please, {{notice that}} {{there is no need for}} a clock signal in the testbench, since the design is strictly -- combinational (or concurrent, in contrast to the C implementation which is sequential). -- This clock is here just for simulation; you can omit all clock references and process, and use [...] "wait for ... ns" [...] -- statements instead. --Inputs signal binIN : std_logic_vector(11 downto 0) := (others => '0'); signal clk : std_logic := '0'; -- can be omitted --Outputs signal ones : std_logic_vector(3 downto 0); signal tenths : std_logic_vector(3 downto 0); signal hunderths : std_logic_vector(3 downto 0); signal thousands : std_logic_vector(3 downto 0); -- Clock period definitions constant clk_period : time := 10 ns; -- can be omitted -- Miscellaneous signal full_number : std_logic_vector(15 downto 0);BEGIN [...] -- Instantiate the Unit Under Test (UUT) uut: bin2bcd_12bit PORT MAP ( [...] binIN => binIN, ones => ones, tens => tenths, hundreds => hunderths, thousands => thousands [...] ); -- Clock process definitions -- the whole process can be omitted clk_process :process begin clk <= '0'; wait for clk_period/2; clk <= '1'; wait for clk_period/2; end process; [...] -- Combine signals for full number full_number <= thousands & hunderths & tenths & ones; -- Stimulus process stim_proc: process begin [...] -- hold <b>reset</b> <b>state</b> for 100 ns. wait for 100 ns; [...] wait for clk_period*10; -- insert stimulus here [...] -- should return 4095 binIN <= X"FFF"; wait for clk_period*10; assert full_number = x"4095" [...] severity error; -- use [...] "wait for ... ns;" [...] -- should return 0 binIN <= X"000"; wait for clk_period*10; assert full_number = x"0000" [...] severity error; -- should return 2748 binIN <= X"ABC"; wait for clk_period*10; assert full_number = x"2748" [...] severity error; [...] wait; end process;END; ...|$|E
40|$|AbstractThe BDD- and SAT-based model {{checking}} and verification methods normally require an initial state. Here {{we are concerned}} with sequential hardware verification, where an initial state {{must be one of}} the reset states. In practice, a <b>reset</b> <b>state</b> is not always given by the designer, and computing a <b>reset</b> <b>state</b> of a circuit is a hard problem. In this paper we propose a method allowing usage of SAT-based verification methods without a need for a user-given or a computed initial state. The idea is to employ a binary encoding of 3 -valued modeling of circuits, and use the undefined state X as a <b>reset</b> <b>state...</b>|$|E
40|$|Another {{example of}} a {{controlled}} system (see Sec. 4. 2) Figure 3. The first two plots describe {{the behavior of the}} system which rotates the state by a → 10 ◦ and b → − 10 ◦, with the <b>reset</b> <b>states</b> aligned in a way that taking the opposite action brings the system to its topmost point. The x and y in the plots represent possible actions such that x = y. The bottom plot demonstrates how the average reward changes as a function of α and β, where the policies having 2 hidden states (S ∈ { 1, 2 }) are parametrized as...|$|R
5000|$|LZMA <b>state</b> <b>resets</b> cause a reset of all LZMA state {{except the}} dictionary, and specifically: ...|$|R
40|$|Sensor {{quantization}} {{is one of}} the {{key factors}} that deteriorate the tracking performance of positioning systems with low-resolution optical encoders. This paper presents a <b>reset</b> kinematic <b>state</b> estimator (RKSE) by merging an accelerometer to improve the performance of such systems. The RKSE is immune to both system perturbations and input disturbances and offers more accurate state estimation than the standard state estimator (SSE) without <b>reset.</b> The estimated <b>state</b> is fed back for sinusoidal position tracking control. Experimental results demonstrate the improved tracking accuracy and the robustness with the use of RKSE...|$|R
40|$|This paper {{presents}} a <b>reset</b> <b>state</b> estimator {{to improve the}} position estimation for motion control systems with sensor quantization. The reset scheme is guided {{by the idea that}} the actual output is known exactly to be at the mid-point of the two consecutive quantizer levels and is within the range of a quantizer level bounded by half of quantization step size. Hence, using this information to update the estimated state can give a better estimation under the influence of disturbance and quantization noise. We also show that the reset scheme will not destroy the stability of a baseline estimator system. The <b>reset</b> <b>state</b> estimator is applied to a linear motor control system with an optical encoder. Simulation and experiment demonstrate that the <b>reset</b> <b>state</b> estimator can achieve smaller position estimation error and more accurate tracking accuracy than those of a standard state estimator...|$|E
40|$|Te based chalcogenide {{glasses are}} being {{explored}} for non-volatile memory applications. We report the electrical switching studies on bulk Ge(0. 20) Te(0. 8) 0 glass alloyed with As 0. 40 Se 0. 60 in different proportions. The addition of As 0. 40 Se 0. 60 increases the electrical resistivity and the threshold voltage of (As 0. 4 Se 0. 6) (x) (Ge 0. 2 Te 0. 8) (1 -x) glasses {{in the composition}} range 0 = 0. 15 exhibit threshold switching. The memory (SET) state can be brought back to <b>RESET</b> <b>state</b> by passing a current of 3 - 5 mA. Particularly, the glass with x = 0. 10 is identified to be very stable, {{and it can be}} cycled between the SET and <b>RESET</b> <b>state</b> consistently with 3 mA current. The Raman spectra of SET and RESET states indicate that the SET sample has GeTe and Te crystalline units while the structure of <b>RESET</b> <b>state</b> is analogous to the as-quenched glass. Interestingly, the variation in the local structure is minimal for SET and RESET states for x = 0. 10. And also the resistance of the SET state is relatively high. So they can be set to <b>RESET</b> <b>state</b> with less current and can be explored for low power phase change memory applications. Published by AIP Publishing...|$|E
40|$|An {{empirical}} model for calculating the SET and <b>RESET</b> <b>state</b> resistance of phase change memory (PCM) is developed base on a resistor network method. The {{model has been}} extensively compared with numerical simulations with good accuracy. The model can be directly implemented into SPICE for simulating circuits with PCM elements...|$|E
40|$|Abstract—In this paper, {{we propose}} a new Verilog-A current-voltage model for multi-level-cell PCRAMs. This model can {{describe}} the PCRAM operation {{not only in}} full SET and <b>RESET</b> <b>states</b> {{but also in the}} partial resistance states. And, 3 PCRAM operating regions of SET-RESET, Negative Differential Resistance, and strong-ON are unified into one equation in this model thereby any discontinuity that may introduce a convergence problem cannot be found in the new PCRAM model. The percentage error between the measured data and this model is as small as 7. 4 % on average compared to 60. 1 % of the previous piecewise model. The parameter extraction which is embedded in the Verilog-A code can be done automatically...|$|R
40|$|The {{resistive}} switching {{phenomena of}} HfO 2 films grown by metalorganic {{chemical vapor deposition}} was studied {{for the application of}} ReRAM devices. In the fabricated Pt/HfO 2 /TiN memory cells, the bipolar resistive switching characteristics were observed, and the set and <b>reset</b> <b>states</b> were measured to be as low as 7 uA and 4 uA, respectively, at VREAD = 1 V. Regarding the resistive switching performance, the stable RS performance was observed under 40 repetitive dc cycling test with the small variations of set/reset voltages and currents, and good retention characteristics over 105 s in both LRS and HRS. These results show the possibility of MOCVD grown HfO 2 films as a promising resistive switching materials for ReRAM applications...|$|R
5000|$|System Reset sends a reset signal {{on every}} I/O channel and clears the {{processor}} state; all pending interruptions are cancelled. System Reset is not guaranteed to correct parity errors in general registers, floating point registers or storage. System Reset does not <b>reset</b> the <b>state</b> of shared I/O devices.|$|R
40|$|Use Recall Menu as a {{shortcut}} {{to recall the}} last command executed. Power-On and <b>Reset</b> <b>State</b> The parameters marked with a bullet (•) are stored in non-volatile memory. The factory settings are shown. NOTE: The power-on state will be different if you have enabled the power-down storage mode. See “Power-Down Recall Mode...|$|E
30|$|In a stuck-RESET failure, {{the device}} {{resistance}} suddenly and irretrievably spikes, entering {{a state that}} has much higher resistance than the normal <b>RESET</b> <b>state.</b> Stuck-RESET can also be caused by over programmed current[20]. Higher programming current results in larger amorphous volume, which takes more time to become crystalline, shows higher resistance than desired value after a SET operation.|$|E
30|$|Hard errors {{occur when}} the data value stored in one cell cannot be changed in the next {{programming}} cycle. There {{are two types of}} hard errors in PRAM: stuck-RESET failure and stuck-SET failure[20]. Stuck-SET or stuck-RESET means that the value of stored data in PRAM cell is stuck in SET or <b>RESET</b> <b>state</b> no matter what value has been written into the cell. These errors increase as the number of programming cycles increases.|$|E
40|$|As {{design rule}} shrinks below 32 nm, high reset current of phase change {{random access memory}} (PRAM) induces thermal cross-talks, {{resulting}} in the malfunction of reading to SET and <b>RESET</b> <b>states.</b> As {{the one of the}} improving method of the problem, it is suggested that the structure of PRAM cell has been changed from a planer type (T-shaped structure) to a confine cell structure in which chemical mechanical polishing (CMP) process was inevitably adopted to remove the overburden polycrystalline Ge 2 Sb 2 Te 5 (pc-GST) film and then separate each confined cell structure. In these research fields, the effect of oxidizer, pH, and abrasive type were presented to reveal the CMP mechanism for pc-GST film. [1 - 2] However, the role of chelating reaction of GST in CMP slurry was not demonstrated. Therefore, w...|$|R
5000|$|In a fluid {{dynamics}} simulation: <b>resetting</b> the phase <b>state</b> of an immiscible fluid, {{to speed the}} search for its critical separation temperature.|$|R
5000|$|BOCU-1 {{offers a}} similar {{robustness}} also for input texts without the above-mentioned values {{with the special}} reset code [...] When a decoder finds this octet it <b>resets</b> its <b>state</b> to [...] as for a line end. The use of [...] reset bytes is not recommended in the BOCU-1 specification, because it conflicts with other BOCU-1 design goals, notably the binary order.|$|R
