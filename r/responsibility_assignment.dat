56|63|Public
5000|$|... #Caption: Example of a <b>responsibility</b> <b>assignment</b> (or RACI) matrix.|$|E
50|$|GRASP (General <b>Responsibility</b> <b>Assignment</b> Software Patterns) {{is another}} set of {{guidelines}} advocated by Craig Larman.|$|E
5000|$|This is {{an early}} version of a <b>Responsibility</b> <b>Assignment</b> Matrix, with the roles defined as: ...|$|E
40|$|The {{district}} shall issue supplemental {{contracts and}} employment agreements to personnel for extended time assignments, activities <b>assignments</b> and special <b>responsibility</b> <b>assignments.</b> Such agreements {{shall not be}} subject to the continuing contract law. Salary for services performed under supplemental employment agreements shall be paid according to the current salary schedule for supervision of extracurricular activities or, in the case of extended time assignments, according to the applicable provisions for payment of services rendered...|$|R
40|$|AbstractIn recent years, {{knowledge-based}} {{society and}} economic structures {{have changed the}} academicians’ <b>responsibilities,</b> <b>assignments,</b> work definitions, activities they participate and sufficiency. Therefore {{it is thought that}} these changes affect “academicianship” concept in Turkey. In this context, the object {{of this study is to}} determine academicians’ perceptions on their professions. Content analysis, which is one of the qualitative research approaches, is used in the study. Data were collected from 81 academicians working at universities in Istanbul via open-ended questionnaire form, which includes three themes: (i) advantages of their profession, (ii) disadvantages of their professions, (iii) their professions’ side that should be developed...|$|R
40|$|The thesis {{proposes a}} number of {{techniques}} for elaborating requirements constructively from high-level goals. The techniques {{are based on the}} KAOS goal-oriented method for requirements engineering. This method consists in identifying goals and refining them into subgoals until the latter can be assigned as responsibilities of single agents such as humans, devices and software. Domain properties and assumptions about the software environment are also used during the goal refinement process. The method supports the exploration of alternative goal refinements and alternative <b>responsibility</b> <b>assignments</b> of goals to agents. It also supports the identification and resolution of conflicts between goals, and the identification and resolution of exceptional agent behaviors, called obstacles, that violate goals and assumptions produced during the goal refinement process. The thesis enriches the KAOS framework through three kinds of techniques: (a) techniques for identifying agents, goal refinements, and alternative <b>responsibility</b> <b>assignments,</b> and for deriving agent interfaces from such responsibility assignments; (b) techniques for deriving operational requirements from goal specifications; (c) techniques for generating obstacles to the satisfaction of idealized goals and assumptions, and for generating alternative obstacle resolutions. The result is a coherent body of systematic techniques for requirements elaboration that are both theoretically well-founded (a formal model of agent is defined) and effective in practice (the techniques are validated on two real case studies of significant size: the London ambulance despatching system, and the Bay Area Rapid Transit train system). (FSA 3) [...] UCL, 200...|$|R
50|$|General <b>responsibility</b> <b>assignment</b> {{software}} patterns (or principles), abbreviated GRASP, {{consist of}} guidelines for assigning responsibility to classes and objects in object-oriented design.|$|E
5000|$|A WBS {{is not an}} {{organizational}} hierarchy, {{although it may be}} used when assigning responsibilities. See also: <b>responsibility</b> <b>assignment</b> (RACI) matrix (also called a Staffing Matrix).|$|E
50|$|A <b>Responsibility</b> <b>assignment</b> matrix - Details {{the persons}} responsible, {{accountable}} for any tasks {{to comply with}} the requirements of the plan. It also states those who should be communicated to and Informed.|$|E
5000|$|Undertake {{and accept}} <b>responsibility</b> for {{professional}} <b>assignments</b> only when qualified by training or experience; ...|$|R
40|$|Panel {{presentations and}} {{activities}} {{aimed at a}} critical assessment of the completeness and accuracy of a pilot methodology survey for an Applications Data Service are presented. Standards for interconnecting pilot programs for data sharing are outlined. Panel <b>responsibilities</b> and <b>assignments</b> for the session are given...|$|R
5000|$|Students share {{custodial}} <b>responsibilities</b> with rotating <b>assignments</b> of [...] "kitchen duty" [...] and [...] "building duty" [...] by room number.|$|R
50|$|Each of the {{following}} major processes/activities have a <b>responsibility</b> <b>assignment</b> (RACI) matrix, indicating {{the responsibilities of the}} senior executives, business managers, and information managers, along with the major and minor COBIT control objectives associated with the activity.|$|E
5000|$|A <b>{{responsibility}}</b> <b>assignment</b> matrix (RAM), {{also known}} as RACI matrix [...] or linear responsibility chart (LRC), describes the participation by various roles in completing tasks or deliverables for a project or business process. It is especially useful in clarifying roles and responsibilities in cross-functional/departmental projects and processes.|$|E
50|$|The matrix is {{typically}} created with a vertical axis (left-hand column) of tasks (e.g., from a {{work breakdown structure}} WBS) or deliverables (e.g., from a product breakdown structure PBS), and a horizontal axis (top row) of roles (e.g., from an organizational chart) - as illustrated in the image of an example <b>responsibility</b> <b>assignment</b> (or RACI) matrix.|$|E
5000|$|The <b>responsibilities</b> and <b>assignments</b> of train {{operations}} are loosely {{referred to as}} Open Line. A great deal of {{emphasis is placed on}} open line experience. Indeed, there are few cases of people who have succeeded in the organisation without a significant tenures on the Open Line.|$|R
50|$|McGarr {{was born}} in Yuma, Arizona on March 5, 1904, and {{graduated}} from the United States Military Academy in 1928. After receiving his commission as a second lieutenant of infantry he served in command and staff positions of increasing rank and <b>responsibility,</b> including <b>assignments</b> in Hawaii, California and Georgia.|$|R
40|$|The {{results of}} the space station data flow study are reported. Conceived is a low cost {{interactive}} data dissemination system for space station experiment data that includes facility and personnel requirements and locations, phasing requirements and implementation costs. Each of the experiments identified by the operating schedule is analyzed and the support characteristics identified {{in order to determine}} data characteristics. Qualitative and quantitative comparison of candidate concepts resulted in a proposed data system configuration baseline concept that includes a data center which combines the responsibility of reprocessing, archiving, and user services according to the various agencies and their <b>responsibility</b> <b>assignments.</b> The primary source of data is the space station complex which provides through the Tracking Data Relay Satellite System (TDRS) and by space shuttle delivery data from experiments in free flying modules and orbiting shuttles {{as well as from the}} experiments in the modular space station itself...|$|R
50|$|Organize:Pro is a {{personal}} task manager with focus on business users by taskfabric for Windows, Mac OS X, iOS and Web Browsers. The application is created to capture tasks and ideas, structure and process them. Basically it works like a to do list, but every list can also be displayed as a mind map or diagram. The application uses concepts based on established project management techniques (<b>Responsibility</b> <b>assignment</b> matrix, Action/Information/Decision classification) and supports concepts and techniques described in popular books about organization, like Getting Things Done (commonly abbreviated as GTD) by David Allen.|$|E
50|$|The typical form {{of company}} was the {{so-called}} Collegantia. Within its frame a silent partner introduced about {{three quarters of the}} capital investment, the active partner, who conducted the trade, introduced the rest. Aims, <b>responsibility</b> <b>assignment</b> and shares were fixed before the journey being started, but the active partner could also reinvest his gains during the same journey. In a way silent and active partner were only roles that were fixed before each adventure, in which several silent partners could dare their luck.This way the risks diminished and the opportunities to accumulate capital increased. Close relationships and dependencies were developed and as a consequence family partnerships were largely preferred.|$|E
5000|$|The {{construction}} of responsibility or liability rests therefore {{in the identification}} of a range of possibilities, plausible causes or motives, and intuitions about their influence on human behaviour. The positive identification of original causes would require the isolation and separation of influences and events, something that is possible in theory alone. When we refer to responsibility, we refer therefore to narratives that explain and interpret causality, free will and hence responsibility as a basis for particular responses, cultural, legal, political. Our <b>Responsibility</b> <b>Assignment</b> Narrative ... is therefore not a critique of any specific interpretation of responsibility, as much as a critique of particular implementations of concepts such as free will or causality.|$|E
40|$|In {{this paper}} we {{describe}} an approach towards {{the support of}} architectural design decisions during the early software life cycle. A major issue in these development stages {{is to find a}} set of components that have an optimal <b>assignment</b> of <b>responsibilities</b> concerning the fulfillment of stated requirements. Besides functionality responsibilities that can be assigned to single components there exist crosscutting concerns that are spread all over the system. One distinguishing property of crosscutting concerns is that they cannot be localized in a single component. Due to the massive impact on the overall system crosscutting concerns have to be identified as early as possible to find component <b>responsibility</b> <b>assignments</b> that are optimally set up to prevent late, and thus, deep impact changes. For identifying crosscutting concerns already at the requirements level we propose a process that embeds a set of indicators that classify these concerns during use case driven requirements analysis. The concluding architectural evaluation is based on the crosscutting concerns identified. Additionally, we provide heuristics for architectural tactics like component responsibility rearrangements, which lead to recommendations for architecture improvement...|$|R
5000|$|Yates {{continued}} {{to serve in}} other <b>responsibilities</b> and <b>assignments</b> in the church. He {{wrote a book called}} A Brief History of the Origin of the Nations. He worked as a tour guide at Temple Square and served as a temple worker for ten years. [...] He died on February 8, 1958, in Abilene, Texas, while he was visiting. He died in the Rancho Motel. Investigators found that he died due to a pulmonary hemorrhage.|$|R
25|$|The story follows Honor and {{her crew}} as {{they deal with}} the <b>responsibilities</b> of their <b>assignment.</b> When their duty leads them to {{discover}} events {{that would lead to}} an invasion of Medusa, they {{have no choice but to}} act.|$|R
50|$|In {{addition}} to managing technical and schedule performance, large and complex projects require that cost performance be monitored and reviewed at regular intervals. To measure cost performance, planned value (or BCWS - Budgeted Cost of Work Scheduled) and earned value (or BCWP - Budgeted Cost of Work Performed) {{must be in}} units of currency (the same units that actual costs are measured.) In large implementations, the planned value curve is commonly called a Performance Measurement Baseline (PMB) and may be arranged in control accounts, summary-level planning packages, planning packages and work packages. In large projects, establishing control accounts is the primary method of delegating responsibility and authority to {{various parts of the}} performing organization. Control accounts are cells of a <b>responsibility</b> <b>assignment</b> (RACI) matrix, which is the intersection of the project WBS and the organizational breakdown structure (OBS). Control accounts are assigned to Control Account Managers (CAMs). Large projects require more elaborate processes for controlling baseline revisions, more thorough integration with subcontractor EVM systems, and more elaborate management of procured materials.|$|E
40|$|In {{the context}} of {{object-oriented}} analysis and design (OOAD), class <b>responsibility</b> <b>assignment</b> {{is not an easy}} skill to acquire. Though there are many methodologies for assigning responsibilities to classes, they all rely on human judgment and decision making. Our objective is to provide decision-making support to re-assign methods and attributes to classes in a class diagram. Our solution is based on a multi-objective genetic algorithm (MOGA) and uses class coupling and cohesion measurement for defining fitness functions. Our MOGA takes as input a class diagram to be optimized and suggests possible improvements to it. The choice of a MOGA {{stems from the fact that}} there are typically many evaluation criteria that cannot be easily combined into one objective, and several alternative solutions are acceptable for a given OO domain model. Using a carefully selected case study, this article investigates the application of our proposed MOGA to the class <b>responsibility</b> <b>assignment</b> problem, in {{the context of}} object-oriented analysis and domain class models. Our results suggest that the MOGA can help correct suboptimal class <b>responsibility</b> <b>assignment</b> decisions and perform far better than simpler alternative heuristics such as hill climbing and a single objective GA. ...|$|E
40|$|<b>Responsibility</b> <b>assignment</b> {{modelling}} {{is concerned}} with developing a picture of how the responsibilities in a socio-technical system are distributed across the different automated elements and actors in that system. At this stage, we are not concerned with {{the details of the}} responsibilities themselves, nor with what th...|$|E
40|$|This {{exploratory}} study investigates preservice teacher written reflection during the full-time internship semester and trends across assignments, topics, and interns {{that may have}} a relationship with dialogic or critical reflection. Sociocultural theory serves as the theoretical underpinning of the study. The study applies Hatton and Smith’s (1995) types of writing: descriptive writing, descriptive reflection, dialogic reflection, and critical reflection. Case study and content analysis methodologies are simultaneously used to address the research questions. This study reveals that interns engage in written reflection within all three categories (descriptive reflection, dialogic reflection, and critical reflection) (Dinkelman, 2000; Hatton & Smith, 1995), however, the overwhelming majority of reflection is descriptive reflection (95. 8 %), followed by dialogic reflection (4. 1 %) and critical reflection (0. 1 %). This study did not find a single condition, topic, or assignment that guarantees written dialogic or critical reflection. Instead, this study found that intern written dialogic and critical reflection appears to be an outgrowth of a combination of factors including, but not limited to, intern understanding of reflection, internship semester <b>responsibilities,</b> <b>assignment</b> design, {{and the role of the}} college supervisor...|$|R
50|$|Suzanne M. Daley is an American {{journalist}} {{who is the}} associate editor for international print for The New York Times. She was national editor from 2005 to 2010. In early 2010 she returned to reporting with <b>responsibility</b> for special <b>assignment</b> feature writing across Europe.|$|R
50|$|The French Army has {{the concept}} of a Binome ("pair"). In the regular forces it is the pairing of an {{experienced}} soldier with a recruit or replacement. The new man learns from the experienced man how to properly perform the everyday tasks and <b>responsibilities</b> of his <b>assignment.</b>|$|R
40|$|This {{document}} {{contains the}} Fiscal Year 1995 Plan for the Mixed Waste Management Facility (MWMF) at Lawrence Livermore National Laboratory. Major objectives {{to be completed}} during FY 1995 for the MWMF project are listed and described. This report also contains a budget plan, project task summaries, a milestone control log, and a <b>responsibility</b> <b>assignment</b> matrix for the MWMF project...|$|E
40|$|This article {{describes}} the philosophy, design, and prototype implementation of an operator override system intended for use in managing unmanned robotic systems capable of lethal behavior. The ethical ramifications associated with the <b>responsibility</b> <b>assignment</b> of such a system are presented, which guide {{the development of the}} proof-of-concept system that serves {{as the basis for the}} simulation results presented herein...|$|E
40|$|Soft {{computing}} approach like swarm optimization {{can be used}} in {{the software}} development environment also for developing effective software. Software development and testing cost must be reduced and optimized so that companies can survive and sustain in the market. Object oriented analysis and design is used for developing complex real time software systems. In object oriented software methods, class plays very crucial role and all the systems responsibility and functional and nonfunctional requirements are implemented through class. Assigning responsibility of the class with optimization is an issue which should be dealt carefully. An attempt is made to study Class <b>Responsibility</b> <b>Assignment</b> in the context of object oriented analysis and design. It is a crucial issue encountered in the software design phase in the software development life cycle. Class Responsibility Approach (CRA) depends on human judgment and decision making skills to a great extent. In this paper we have presented an algorithm using Particle Swarm Optimization to provide decisionmaking support for class <b>responsibility</b> <b>assignment,</b> to reassign methods and attributes to classes in a class diagram. This will help the designers and developers of the object oriented software...|$|E
50|$|In the {{province}} of Ontario, for example, the licensing process for the Law Society of Upper Canada (Ontario's governing law society) consists of three mandatory components: The Skills and Professional <b>Responsibility</b> Program with <b>assignments</b> and assessments, Licensing Examinations (a Barrister Licensing Examination and a Solicitor Licensing Examination), and a 10-month Articling term.|$|R
40|$|A Community Patient Demographic System is described. Its {{purpose is}} to link patient identification, {{demographic}} and insurance information among multiple organizations in a community or among multiple registration systems within the same organization. This function requires {{that there be a}} competent patient identification methodology and clear definition of local <b>responsibilities</b> for number <b>assignment</b> and database editing...|$|R
50|$|In a {{subsequent}} telephone {{interview with the}} Wall Street Journal, Gruber repeated his assumption of full <b>responsibility</b> for the <b>assignment,</b> {{and said that he}} did not discuss the matter with Ratzinger. Gruber said that, at that time, it was common to give a priest another chance if he expressed regret and was determined to be rehabilitated.|$|R
