1159|10000|Public
25|$|ABQ RIDE fixed {{bus service}} {{operates}} {{four types of}} routes, Rapid Ride routes, regular routes, commuter routes, and the Downtown D-Ride. Service times on each route may vary from every 20 minutes to every hour, but the system generally runs from 5:30 am until 6 pm, with some routes running later. A notable exception is route #66 which runs from 5:30 am until 12:30 am weekdays and Saturdays. Commuter routes {{only have a few}} <b>run</b> <b>times</b> during weekdays, usually towards Downtown Albuquerque or Kirtland AFB during the mornings and away from during the evenings. The Downtown D-Ride operates during weekdays without a fixed schedule, and departs the Alvarado Transportation Center every 7 minutes from 6:30 am to 5:33 pm.|$|E
2500|$|Agarose gels do {{not have}} a uniform pore size, but are optimal for {{electrophoresis}} of proteins that are larger than 200 kDa. Agarose gel electrophoresis can also be used for the separation of DNA fragments ranging from 50 base pair to several megabases (millions of bases), the largest of which require specialized apparatus. The distance between DNA bands of different lengths is influenced by the percent agarose in the gel, with higher percentages requiring longer <b>run</b> <b>times,</b> sometimes days. [...] Instead high percentage agarose gels should be run with a pulsed field electrophoresis (PFE), or field inversion electrophoresis.|$|E
2500|$|In this table, [...] is {{the number}} of records to be sorted. The columns [...] "Average" [...] and [...] "Worst" [...] give the time {{complexity}} in each case, under the assumption that the length of each key is constant, and that therefore all comparisons, swaps, and other needed operations can proceed in constant time. [...] "Memory" [...] denotes the amount of auxiliary storage needed beyond that used by the list itself, under the same assumption. The <b>run</b> <b>times</b> and the memory requirements listed below should be understood to be inside big O notation, hence the base of the logarithms does not matter; the notation [...] means [...]|$|E
5000|$|The <b>run</b> <b>time</b> type of {{a virtual}} class depends on the <b>run</b> <b>time</b> {{type of a}}n object of the outer class. (Just like the <b>run</b> <b>time</b> type of an object decides which virtual {{function}} should be used.) ...|$|R
40|$|There {{are many}} {{alternatives}} to handle discrete optimization problems in applications. Problem-specific algorithms vs. heuristics, exact optimization vs. approximation vs. heuristic solutions, guaranteed <b>run</b> <b>time</b> vs. expected <b>run</b> <b>time</b> vs. experimental <b>run</b> <b>time</b> analysis. Here, {{a framework for}} a theory of randomized search heuristics is presented. After a brie...|$|R
5000|$|... {{assigning}} unique <b>run</b> <b>time</b> addresses to {{each section}} and each symbol, giving all code (functions) and data (global variables) unique <b>run</b> <b>time</b> addresses ...|$|R
2500|$|The rise of Netflix has {{affected}} the way audiences watch televised content. Netflix's CPO Neil Hunt believes that Netflix is a model for what television will look like in 2025. He points out that because the Internet allows users the freedom to watch shows at their own pace, an episode does not need cliffhangers to tease the audience to keep tuning in week after week, because they can just binge straight into the next episode. Netflix has allowed content creators to deviate from traditional formats that force 30 minute or 60 minute timeslots once a week, which it claims gives them an advantage over networks. Their model provides a platform that allows varying <b>run</b> <b>times</b> per episode based on a storyline, {{eliminates the need for}} a week to week recap, and does not have a fixed notion of what constitutes a [...] "season". This flexibility also allows Netflix to nurture a show until it finds its audience, unlike traditional networks which will quickly cancel a show if it is unable to maintain steady ratings.|$|E
2500|$|The {{magnitude}} and capacity {{of these systems}} makes the Ames Arc Jet Complex unique in the world. The largest power supply can deliver 75 megawatts (MW) for a 30-minute duration or 150 MW for a 15-second duration. This power capacity, in combination with a high-volume 5-stage steam ejector vacuum-pumping system, enables facility operations to match high-altitude atmospheric flight conditions with samples of relatively large size. The Thermo-Physics Facilities Branch operates four arc jet facilities. The Interaction Heating Facility (IHF), with an available power of over 60-MW, {{is one of the}} highest-power arc jets available. It is a very flexible facility, capable of long <b>run</b> <b>times</b> of up to one hour, and able to test large samples in both a stagnation and flat plate configuration. The Panel Test Facility (PTF) uses a unique semielliptic nozzle for testing panel sections. Powered by a 20-MW arc heater, the PTF can perform tests on samples for up to 20 minutes. The Turbulent Flow Duct provides supersonic, turbulent high temperature air flows over flat surfaces. The TFD is powered by a 20-MW Hüls arc heater and can test samples [...] in size. The Aerodynamic Heating Facility (AHF) has similar characteristics to the IHF arc heater, offering a wide range of operating conditions, samples sizes and extended test times. A cold-air-mixing plenum allows for simulations of ascent or high-speed flight conditions. Catalycity studies using air or nitrogen can be performed in this flexible rig. A 5-arm model support system allows the user to maximize testing efficiency. The AHF can be configured with either a Hüls or segmented arc heater, up to 20-MW. 1 MW is enough power to supply 750 homes.|$|E
50|$|<b>Run</b> <b>times</b> and gigabase (Gb) output per run for single-end {{sequencing}} are noted. <b>Run</b> <b>times</b> and outputs approximately double when performing paired-end sequencing. ‡Average read lengths for the Roche 454 and Helicos Biosciences platforms.|$|E
40|$|EnergyPlus {{is a new}} {{generation}} building performance simulation program offering many new modeling capabilities and more accurate performance calculations integrating building components in sub-hourly time steps. However, EnergyPlus runs much slower than the current generation simulation programs. This {{has become a major}} barrier to its widespread adoption by the industry. This paper analyzed EnergyPlus <b>run</b> <b>time</b> from comprehensive perspectives to identify key issues and challenges of speeding up EnergyPlus: studying the historical trends of EnergyPlus <b>run</b> <b>time</b> based on the advancement of computers and code improvements to EnergyPlus, comparing EnergyPlus with DOE- 2 to understand and quantify the <b>run</b> <b>time</b> differences, identifying key simulation settings and model features that have significant impacts on <b>run</b> <b>time,</b> and performing code profiling to identify which EnergyPlus subroutines consume the most amount of <b>run</b> <b>time.</b> This paper provides recommendations to improve EnergyPlus <b>run</b> <b>time</b> from the modeler?s perspective and adequate computing platforms. Suggestions of software code and architecture changes to improve EnergyPlus <b>run</b> <b>time</b> based on the code profiling results are also discussed...|$|R
30|$|For {{both the}} {{software}} and hardware programs, five trials were run. For each trial, the <b>time</b> required to <b>run</b> backprojection and form the resulting image on each node was measured, and the maximum time reported. Thus, the overall <b>run</b> <b>time</b> {{is equal to the}} <b>run</b> <b>time</b> of the slowest node. The arithmetic mean of the times (in seconds) from the five trials are presented, with standard deviation. The mean <b>run</b> <b>time</b> is compared to the mean <b>run</b> <b>time</b> for one node in order to show the speedup factor.|$|R
5000|$|The {{top type}} {{may also be}} seen as the implied type of non-statically typed languages. Languages with <b>run</b> <b>time</b> typing often provide downcasting (or type refinement) to allow {{discovering}} a more specific type for an object at <b>run</b> <b>time.</b> In C++, downcasting from [...] cannot be done in a safe way, where failed downcasts are detected by the language <b>run</b> <b>time.</b>|$|R
5000|$|Running {{applications}} with unpredictable {{resource requirements}} or <b>run</b> <b>times.</b>|$|E
5000|$|... #Caption: Master Sgt. William Sander {{records the}} <b>run</b> <b>times</b> of two CAP cadets.|$|E
5000|$|... {{high-quality}} instruments {{capable of}} rapid measurements due to short <b>run</b> <b>times</b> in intermittent tunnels ...|$|E
25|$|Some {{algorithms}} {{are slow}} {{compared to those}} discussed above, such as the bogosort with unbounded <b>run</b> <b>time</b> and the stooge sort which has O(n2.7) <b>run</b> <b>time.</b> These sorts are usually described for educational purposes in order to demonstrate how <b>run</b> <b>time</b> of algorithms is estimated. The following table describes some sorting algorithms that are impractical for real-life use due to extremely poor performance or specialized hardware requirements.|$|R
30|$|The {{proposed}} {{system has}} {{approximately the same}} <b>run</b> <b>time</b> as the DISCOVER codec in the low-rate region. However, for the higher RD points, the proposed system has a longer <b>run</b> <b>time</b> than the DISCOVER codec. It should be mentioned that no {{attempt was made to}} optimise the encoder implementation, and it is expected that the <b>run</b> <b>time</b> can be significantly reduced in the future.|$|R
50|$|Some {{algorithms}} {{are slow}} {{compared to those}} discussed above, such as the bogosort with unbounded <b>run</b> <b>time</b> and the stooge sort which has O(n2.7) <b>run</b> <b>time.</b> These sorts are usually described for educational purposes in order to demonstrate how <b>run</b> <b>time</b> of algorithms is estimated. The following table describes some sorting algorithms that are impractical for real-life use due to extremely poor performance or specialized hardware requirements.|$|R
5000|$|The {{back cover}} lists {{deliberately}} erroneous <b>run</b> <b>times.</b> They are listed above in (parentheses and italics).|$|E
5000|$|... #Caption: Motivation by the Military Training Instructor assists these seventh week {{flights to}} exceed their <b>run</b> <b>times</b> {{for the final}} {{physical}} training assessment.|$|E
50|$|X3 {{came with}} a user {{replaceable}} 950 mAh Lithium Ion battery, which could be replaced by an optional 1800 mA extended battery which doubled <b>run</b> <b>times.</b>|$|E
40|$|International audienceWe {{propose to}} use Artificial Intelligence {{techniques}} {{to monitor and}} control complex processing chains of software components. We consider software systems that run in an evolving environment and thus may require adaptation at <b>run</b> <b>time.</b> Our approach relies on knowledge representations of both structural and dynamic aspects of components and processing chains. The paper concentrates more precisely on <b>run</b> <b>time</b> adaptation to cope with context changes. <b>Run</b> <b>time</b> policies are expressed by means of inference rules. At <b>run</b> <b>time</b> an inference engine uses these rules to orchestrate the component chain, in particular to achieve <b>run</b> <b>time</b> adaptations, such as component parameter tuning or re-assembly of the processing chain. We describe the general evaluation-repair mechanism which involves to evaluate environment changes and execution results and then to trigger the suitable reconfigurations...|$|R
30|$|The results {{shown in}} Table 2 confirm the fact that, for large graphs, the <b>run</b> <b>time</b> of {{shortest}} path search with the proposed {{approach would be}} smaller than the <b>run</b> <b>time</b> obtained with classical approaches.|$|R
30|$|The {{bootstrap}} algorithm requires {{usually at}} least 25 iterations to converge, {{which results in}} a <b>run</b> <b>time</b> of several days for the values of p[*]and N[*]in the experimental system. This <b>run</b> <b>time</b> is unacceptable in most applications.|$|R
50|$|Theta* is an any-angle path {{planning}} algorithm {{that is based}} on the A* search algorithm. It can find near-optimal paths with <b>run</b> <b>times</b> comparable to those of A*.|$|E
5000|$|A {{fuel cell}} UPS has been {{developed}} in recent years using hydrogen and a fuel cell as a power source, potentially providing long <b>run</b> <b>times</b> in a small space.|$|E
5000|$|Trying to {{minimize}} costly machine setups, managers and workers resort to running large batch sizes. Large batch sizes result in long <b>run</b> <b>times,</b> leaving other jobs waiting and increasing lead times ...|$|E
5000|$|This {{algorithm}} {{does not}} guarantee success, but the <b>run</b> <b>time</b> is bounded. The number of iterations is always {{less than or equal}} to k. Taking k to be constant the <b>run</b> <b>time</b> (expected and absolute) is [...]|$|R
25|$|Dynamic loading, {{a subset}} of dynamic linking, {{involves}} a dynamically linked library loading and unloading at <b>run</b> <b>time</b> on request. Such a request may be made implicitly at compile time or explicitly at <b>run</b> <b>time.</b> Implicit requests are made at compile time when a linker adds library references that include file paths or simply file names. Explicit requests are made when applications make direct calls to an operating system's API at <b>run</b> <b>time.</b>|$|R
3000|$|... (iv) Ease of Application Representation. The Apps {{should be}} {{represented}} {{in a way that}} allows abstracting from the specific availability of resources at <b>run</b> <b>time</b> in a way that allows operation with various combinations and substitutions of <b>run</b> <b>time</b> available resources.|$|R
50|$|For {{standard}} agarose gel electrophoresis, larger molecules {{are resolved}} better using a low concentration gel while smaller molecules separate better at high concentration gel. High concentrations gel however requires longer <b>run</b> <b>times</b> (sometimes days).|$|E
50|$|Modern {{underwater}} video {{lights are}} now relatively small, have <b>run</b> <b>times</b> of 45-60 minutes and output 600-8000 lumens. These LED lights are powered by Lithium-ion batteries and {{usually have a}} 5600K (daylight) color temperature.|$|E
50|$|Electric boats for racing {{are capable}} of {{reaching}} speeds of more than 50 mph and <b>run</b> <b>times</b> of around 10 minutes. Electric boats also hold the 100-yard sprint record against rival internal combustion powerplants since 2000.|$|E
30|$|In general, multi-condition {{training}} {{is an effective}} strategy, since the run-time reverberation condition is unknown in the system development stage. However, {{the part of the}} training data with mismatched reverberation conditions to the <b>run</b> <b>time</b> may cause an adverse effect. We could expect better performance if we prepare models trained with single reverberation conditions and choose a best-matched model at the <b>run</b> <b>time</b> in some way, although the choice of the best-matched model at <b>run</b> <b>time</b> itself is non-trivial.|$|R
50|$|Its <b>run</b> <b>time</b> is six minutes.|$|R
5000|$|The {{inner loop}} checks every {{point in the}} set S, and the outer loop repeats for each point on the hull. Hence the total <b>run</b> <b>time</b> is [...] The <b>run</b> <b>time</b> depends {{on the size of}} the output, so Jarvis's march is an output-sensitive algorithm.|$|R
