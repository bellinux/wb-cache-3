1|2|Public
50|$|Core memory {{controllers}} {{were designed}} so that every read was followed immediately by a write (because the read forced all bits to 0, and because the write assumed this had happened). Computers began {{to take advantage of}} this fact. For example, a value in memory could be read with post-increment almost as quickly as it could be read; the hardware simply incremented the value between the read phase and the write phase of a single memory cycle (perhaps signalling the memory controller to pause briefly in the middle of the cycle). This might be twice as fast as the process of obtaining the value with a <b>read-write</b> <b>cycle,</b> incrementing the value in some processor register, and then writing the new value with another <b>read-write</b> <b>cycle.</b>|$|E
2500|$|Original {{flash memory}} designs had very limited {{estimated}} lifetimes. The failure mechanism for flash memory cells {{is analogous to}} a metal fatigue mode; the device fails by refusing to write new data to specific cells that {{have been subject to}} many <b>read-write</b> <b>cycles</b> over the device's lifetime. Premature failure of a [...] "live USB" [...] could be circumvented by using a flash drive with a write-lock switch as a WORM device, identical to a live CD. Originally, this potential failure mode limited the use of [...] "live USB" [...] system to special-purpose applications or temporary tasks, such as: ...|$|R

