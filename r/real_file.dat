36|132|Public
500|$|In {{the ninth}} series, Harry reinstates Lucas {{as chief of}} Section D; this makes Lucas {{responsible}} for the integration of two new team members into the section, Beth Bailey (Sophia Myles) and Dimitri Levendis (Max Brown). Vaughn returns and hands Lucas a briefcase with possessions from his life before MI5, including photographs of him and Maya Lahan. When he visits her, however, she is so shocked at his reappearance and angry over his letting her believe him dead that at first she wants {{nothing to do with}} him. Later, Vaughn promises to leave Lucas alone in exchange for an MI5 file on [...] "Albany"; Lucas eventually hands him what he believes is the file. Believing he is free from Vaughn, Lucas persuades Maya to restart their relationship. However, it is revealed the file was not Albany, though it leads to the location of the actual file. Vaughn forces Lucas to find the file, which is in the possession of former Section D member Malcolm Wynn-Jones (Hugh Simon). After convincing Malcolm to give him the file, Lucas hands it over to Vaughn, but it is soon discovered that this file, too, is a fake, and Malcolm has abandoned the house where he and Lucas had met. To force Lucas to continue seeking the file hand Vaughn kidnaps Maya. By this time, Harry Pierce has discovered that Lucas is not who he claims to be. Arrested and questioned, Lucas admits his true identity and his past, but convinces Harry to save Maya. A mortally wounded Vaughn is able to [...] "wake up" [...] Lucas' true persona, who he was before MI5. Believing Harry may not honour the deal they have worked out, Lucas intends to leave the country after getting his hands on the Albany file. The file is revealed to contain directions for building a genetic weapon that Vaughn has agreed to sell to the Chinese. After Lucas acquires the <b>real</b> <b>file</b> from Harry in exchange for team member Ruth Evershed, whom he has kidnapped, Maya is killed while he is trying to escape with her. He delivers the file to the Chinese agents anyway and intends to kill Harry for revenge. During their roof-top confrontation, Lucas learns that Albany is an elaborate deception; the genetic weapon is unworkable. Lucas then forces Harry to turn around, as if he is about to execute him. Instead, Lucas throws himself from the roof, to his death.|$|E
50|$|CFS, the OpenSSI Cluster File System {{provides}} transparent inter-node {{access to}} an underlying <b>real</b> <b>file</b> system on one node.|$|E
50|$|Note: Instead of {{creating}} a <b>real</b> <b>file</b> with only zero bytes, many file systems also support the creation of sparse files which returns zeros upon reading but use less actual space.|$|E
5000|$|WikipediaFS: View {{and edit}} Wikipedia {{articles}} {{as if they}} were <b>real</b> <b>files</b> ...|$|R
50|$|WikipediaFS is {{a virtual}} {{filesystem}} which allows users to view and edit the articles of any MediaWiki-based site {{as if they were}} <b>real</b> <b>files</b> on a local disk drive. This enables a user to edit articles directly with any text editor. WikipediaFS is developed primarily by Mathieu Blondel on SourceForge.net.|$|R
40|$|Users rarely {{consider}} their media player {{as a security}} critical application. However, with an increasing amount of media content available on the web, users are exposing themselves to attack by downloading possibly malicious content. We focus on identifying vulnerabilities in three media formats (AVI, MPEG and Ogg) and two media players (MPlayer and VLC). We use a modification of traditional format-free fuzzing techniques to identify vulnerabilities in the format-strict environment of media players. We build upon typical fuzzing techniques by (1) adding structure to random files and (2) randomizing <b>real</b> <b>files.</b> We find that with these added techniques, fuzzing {{can be used to}} find bugs in applications with strict format requirements. Randomizing <b>real</b> <b>files</b> can, with no knowledge of file structure, identify a wide variety of bugs. While strategically adding structure to random files can produce a greater number of crashes, this was not correlated with finding a greater number of unique bugs. ...|$|R
50|$|A user agent, {{commonly}} a {{web browser}} or web crawler, initiates communication by making {{a request for a}} specific resource using HTTP and the server responds with the content of that resource or an error message if unable to do so. The resource is typically a <b>real</b> <b>file</b> on the server's secondary storage, but this is not necessarily the case and depends on how the web server is implemented.|$|E
50|$|The {{different}} branches may {{be either}} read-only and read-write file systems, so that writes to the virtual, merged copy are directed {{to a specific}} <b>real</b> <b>file</b> system. This allows a file system to appear as writable, but without actually allowing writes to change the file system, also known as copy-on-write. This may be desirable when the media is physically read-only, {{such as in the}} case of Live CDs.|$|E
50|$|CFS is {{stacked on}} top of the <b>real</b> <b>file</b> system and co-ordinates accesses from {{different}} nodes using a token mechanism. One node has physical access to the underlying file system and performs all read and write operations. At any one time one node owns a token, representing a part of the underlying file, this implies that that part of the file is in the cache of the owning node. If another node tries to access that part of the file the token is stolen and the cache contents are copied to the stealing node. The OpenSSI CFS implementation is remarkably similar to that used by HP TruCluster.|$|E
50|$|However, May and Rob plan to con Dawn by {{claiming}} {{he loves her}} and suggest they raise the baby together. Rob leaves May for <b>real,</b> <b>filing</b> for divorce when her behaviour becomes increasingly erratic and irrational. May reacts by taking pills intended for patients but when challenged, accuses nurse Naomi Julien (Petra Letang) of stealing the pills and forces her to leave the Square.|$|R
5000|$|Editing a long Wikipedia article can {{sometimes}} {{turn out to}} be painful and time-consuming due to web-forms limitations. Instead, when WikipediaFS is mounted on a directory, articles become like <b>real</b> <b>files</b> in that directory: it is thus possible to use a text-editor to edit files. Text-editors are generally more stable and less sluggish than browsers and have useful features such as spell checking and wiki syntax highlighting.|$|R
50|$|When Mexico ceded California to the United States {{after the}} Mexican-American War, the 1848 Treaty of Guadalupe Hidalgo stipulated {{that the land}} grants would be honored. However, owners were {{required}} to provide proof of their title. As required by the Land Act of 1851, Gutierrez and <b>Real</b> <b>filed</b> a claim for Rancho Potrero de San Carlos with the Public Land Commission in 1852. The court approved their Land patent in 1862.|$|R
5000|$|In {{the ninth}} series, Harry reinstates Lucas {{as chief of}} Section D; this makes Lucas {{responsible}} for the integration of two new team members into the section, Beth Bailey (Sophia Myles) and Dimitri Levendis (Max Brown). Vaughn returns and hands Lucas a briefcase with possessions from his life before MI5, including photographs of him and Maya Lahan. When he visits her, however, she is so shocked at his reappearance and angry over his letting her believe him dead that at first she wants {{nothing to do with}} him. Later, Vaughn promises to leave Lucas alone in exchange for an MI5 file on [...] "Albany"; Lucas eventually hands him what he believes is the file. Believing he is free from Vaughn, Lucas persuades Maya to restart their relationship. However, it is revealed the file was not Albany, though it leads to the location of the actual file. Vaughn forces Lucas to find the file, which is in the possession of former Section D member Malcolm Wynn-Jones (Hugh Simon). After convincing Malcolm to give him the file, Lucas hands it over to Vaughn, but it is soon discovered that this file, too, is a fake, and Malcolm has abandoned the house where he and Lucas had met. To force Lucas to continue seeking the file hand Vaughn kidnaps Maya. By this time, Harry Pierce has discovered that Lucas is not who he claims to be. Arrested and questioned, Lucas admits his true identity and his past, but convinces Harry to save Maya. A mortally wounded Vaughn is able to [...] "wake up" [...] Lucas' true persona, who he was before MI5. Believing Harry may not honour the deal they have worked out, Lucas intends to leave the country after getting his hands on the Albany file. The file is revealed to contain directions for building a genetic weapon that Vaughn has agreed to sell to the Chinese. After Lucas acquires the <b>real</b> <b>file</b> from Harry in exchange for team member Ruth Evershed, whom he has kidnapped, Maya is killed while he is trying to escape with her. He delivers the file to the Chinese agents anyway and intends to kill Harry for revenge. During their roof-top confrontation, Lucas learns that Albany is an elaborate deception; the genetic weapon is unworkable. Lucas then forces Harry to turn around, as if he is about to execute him. Instead, Lucas throws himself from the roof, to his death.|$|E
40|$|This paper {{describes}} the method {{we use to}} do file system research. File system algorithms and policies are analyzed off-line in Patsy, in so-called file system experiments. When algorithms or policies perform as expected in Patsy, they are migrated to a <b>real</b> <b>file</b> system (in this case PFS). Since Patsy and PFS are configured from a common plug-and-play file system framework, migration of policies and algorithms from Patsy to PFS goes smoothly. 1 Introductio...|$|E
40|$|P 2 P {{file sharing}} systems often use {{incentive}} policies to encourage sharing. With the decrease of free riders, {{the amount of}} cheating behaviors has increased. Some users rename a common file with a popular name to attract the downloads of other users {{in order to gain}} unfair advantages from incentive policies. We call the renamed file a fake file. While techniques have been proposed to combat fake files, an effective approach to filter out fake files in existing systems is lacking, especially before a <b>real</b> <b>file</b> comes out. In this paper, we design two detectors to identify fake files by mining historical logs and find that fake files are indeed pervasive. We introduce a metric called lifetime, which is a file’s average retention time in users’ computers, and show that {{it can be used to}} distinguish between real and fake files. We then propose a lifetime and popularity based ranking approach to filter out fake files. Experiments are designed with the real and fake files collected by the two detectors, and the results show that this approach can reduce the download volume of fake files both before and after a <b>real</b> <b>file</b> comes out. 1...|$|E
25|$|WoodyGuthrie.de. Woody Guthrie Related Audio. Miscellaneous <b>Real</b> Audio <b>files</b> {{featuring}} Pete Seeger, Arlo Guthrie, Alan Lomax and others. Retrieved on January 29, 2008.|$|R
5000|$|Preserving a {{significant}} collection of photographic prints, {{audio and video}} recordings, <b>real</b> estate <b>files,</b> architectural drawings biographical files, books, newspapers, school yearbooks, art, printed ephemera and scrapbooks, manuscripts, artifacts ...|$|R
5000|$|Sound import (digital music <b>files,</b> <b>real</b> {{instruments}} or vocals) ...|$|R
40|$|Abstract—The {{initial phase}} in a content {{distribution}} (file sharing) scenario {{is a delicate}} phase {{due to the lack}} of global knowledge and the dynamics of the overlay. An unwise distribution of the pieces in this phase can cause delays in reaching steady state, thus increasing file download times. We devise a scheduling algorithm at the seed (source peer with full content), based on a proportional fair approach, and we implement it on a <b>real</b> <b>file</b> sharing client [1]. In dynamic overlays, our solution improves up to 25 % the average downloading time of a standard protocol ala BitTorrent. A. Problem and Motivation I...|$|E
40|$|The {{initial phase}} in a content {{distribution}} (file sharing) scenario {{is a delicate}} phase {{due to the lack}} of global knowledge and the dynamics of the overlay. An unwise distribution of the pieces in this phase can cause delays in reaching steady state, thus increasing file download times. We devise a scheduling algorithm at the seed (source peer with full content), based on a proportional fair approach, and we implement it on a <b>real</b> <b>file</b> sharing client [1]. In dynamic overlays, our solution improves up to 25 % the average downloading time of a standard protocol ala BitTorrent. National Science Foundation (CISE/CCF 0820138, CISE/CSR 0720604, CISE/CNS 0524477, CNS/ITR 0205294, and CISE/EIA RI 0202067...|$|E
40|$|This paper {{presents}} {{an alternative to}} traditional file carving, targeted to cell phone forensics. The proposed algorithm processes the cell phone memory dump thanks to a previous partial knowledge {{of the content of}} the regular files present in the memory dump. The memory dump is decomposed into elementary parts, each part classified according to the file type it is supposed to belong to, and finally ordered in a sequence representing the recovered file. The sequence is then transformed into a <b>real</b> <b>file.</b> This paper presents {{the first part of the}} algorithm (model and implementation) and does not cover the reordering of clusters nor the export of the recovered file. A reference to a basic open source software using this technology is provided...|$|E
50|$|Primitive {{data types}} in ICI include integers, <b>reals,</b> strings, <b>files,</b> safe pointers, and regular expressions. Aggregate data types are arrays, sets, and {{associative}} tables. Sets can be heterogeneous, nested, {{and support the}} usual set operations: union, intersection, etc.|$|R
40|$|A data {{compression}} scheme that exploits locality of reference, such as occurs when words are used frequently over short intervals and then fall into {{long periods of}} disuse, is described. The scheme {{is based on a}} simple heuristic for self-organizing sequential search and on variable-length encodings of integers. We prove that it never performs much worse than Huffman coding and can perform substantially better; experiments on <b>real</b> <b>files</b> show that its performance is usually quite close to that of Huffman coding. Our scheme has many implementation advantages: it is simple, allows fast encoding and decod-ing, and requires only one pass over the data to be compressed (static Huffman coding takes two passes) ...|$|R
50|$|On October 4, 2011, <b>Real</b> Mex <b>filed</b> for Chapter 11 {{bankruptcy}} {{and announced that}} it was putting itself up for sale citing the poor economy as a reason. It was acquired by a group of its noteholders in a bankruptcy auction in 2012.|$|R
40|$|This paper aims to {{evaluate}} {{the quality of the}} pseudorange observables generated for a Virtual Reference Station (VRS). In order to generate the VRS data three different approaches were implemented and tested. In the first one, raw data from the reference station network were used while in the second it was based on double difference reference station corrections. Finally, in the third approach atmospheric models (ionosphere and troposphere) were used to create the VRS data. Sao Paulo State Network stations were used in all experiments. The VRS data were generated in a reference station position of known coordinates (<b>real</b> <b>file).</b> In order to validate the approaches, the VRS data were compared with the real data file. The results were quite similar, reaching the decimeter or centimeter level, depending on the approach applied...|$|E
40|$|A new disk {{allocation}} algorithm, {{added to}} a recent version of the UNIX Fast File System, attempts to improve file layout by exploiting the clusters of free space that {{are available in the}} file system. In this paper I study the effectiveness of this algorithm at reducing file system fragmentation. To do this, I have created a program that artificially ages a file system by replaying a workload similar to that experienced by a <b>real</b> <b>file</b> system. To evaluate the effectiveness of the new disk allocation algorithm, I use this program to replay four months of activity on two file systems that differ only in the disk allocation algorithms that they use. At the end of the four month simulation, the file system that used the new allocation algorithm had 3 % more file data blocks that were contiguously laid out. ...|$|E
40|$|In {{a content}} {{distribution}} (file sharing) scenario, the initial phase is delicate {{due to the}} lack of global knowledge and the dynamics of the overlay. An unwise piece dissemination in this phase can cause delays in reaching steady state, thus increasing file download times. After showing that finding the scheduling strategy for optimal dissemination is computationally hard, even when the offline knowledge of the overlay is given, we devise a new class of scheduling algorithms at the seed (source peer with full content), based on a proportional fair approach, and we implement them on a <b>real</b> <b>file</b> sharing client. In addition to simulation results, we validated on our own file sharing client (BUTorrent) that our solution improves up to 25 % the average downloading time of a standard file sharing protocol. Moreover, we give theoretical upper bounds on the improvements that our scheduling strategies may achieve...|$|E
40|$|The rsync {{algorithm}} is tuned so to obtain optimum cloud storage performace. More than 50000 emulations with the “real rsync” and <b>real</b> <b>files</b> {{have been carried}} out so to obtain information on the algorithm’s performance. The performance of cloud storage is said to be optimum when the number of bytes trasmitted with every synchronisation is minimum. Hence I also present a model that captures the number of bytes that are transmitted through the rsync link. This model was validated by simulating it and comparing the results to the outcomes of the experiments that were performed. Finally by analysing the model mathematically I extracted an expression that gives the optimal block-size which depends {{on the size of the}} file and the changes made to it...|$|R
5000|$|Četnické humoresky (Policeman's Humoresques) is a Czech crime {{television}} series about {{a police station}} {{in the city of}} Brno. The story is set in the period of the pre-war First Czechoslovak Republic and combines elements of crime drama and comedy. The stories are based on <b>real</b> case <b>files</b> from that era.|$|R
5000|$|The mtap & ptap are MS-DOS {{tools for}} {{creating}} <b>real</b> tape <b>files</b> (.TAP files) from original C64, VIC-20 and C16 tapes using the Commodore Datasette, and for playing back [...]TAP <b>files</b> to <b>real</b> tapes {{for use with}} an actual Commodore 64 machine. mtap & ptap were developed in 1998-2002 by Markus Brenner.|$|R
40|$|This study {{focuses on}} spatial metaphor {{expression}} {{and analysis of}} hierarchy data {{with the help of}} map metaphor. We use classic cartographic methods synthetically to process the non-spatial data to realize the spatialization. This process makes abstract data concrete which can reduce cognitive load. In addition,it expands the extension of cartography. In terms of specific methods,we use the landscape metaphor to reflect data feature,and introduce LOD and Cartogram into map metaphor which is suitable for hierarchy data's structural characteristics. Comprehensive usage of above methods help highlight features of each layer of data and analyze data characteristics through the map. At last the validity of this method is verified by the <b>real</b> <b>file</b> hierarchy data. We conduct experiments to analyze file number distribution,large file location and file depth. The results show that our method can effectively express the hierarchical data and support some map analysis and data mining...|$|E
40|$|Abstract — This paper {{describes}} the technologies and design ideas {{that underlie the}} Logistical File Systems (LoFS). LoFS is close to a traditional distributed file system in structure and {{in the class of}} operations it supports, but it is designed to preserve the easy deployability and scalability across the administrative boundaries that have been the pillars of the Web’s success. The leading idea behind the design of LoFS is that in order to implement a <b>real</b> <b>file</b> system that nonetheless preserves the strengths of the Internet of model resource sharing, one has to apply that model to the storage resources needed to implement file system operations, so that they are exposed and shareable to the global network. Systems that do not expose the underlying resources used to implement file system operations can implement remote access to file system operations, but they cannot distribute many important functions of the file system itself. 1...|$|E
40|$|We {{wanted to}} use a {{multiple}} probes and white light interferometer to measure the surface profile of thin film. However, this system, as assessed with a scanning method, suffers from {{the presence of a}} moving stage and systematic sensor errors. In this paper, in order to separate measurement error caused by the moving stage and systematic sensor errors, the least squares analysis is applied to achieve self-calibration in the measurement process. The modeling principle and resolution process of the least squares analysis with multiple probes and autocollimator are introduced and the corresponding theory uncertainty calculation method is also given. Using this method, we analysis the experimental data and obtain a shape close to the <b>real</b> <b>file.</b> Contrasting with the actual value, the bias and uncertainty in the case of different number of probes are discussed. The results demonstrated the feasibility of the constructed multi-ball cantilever system with the autocollimator for measuring thin film with high accuracy. ...|$|E
5000|$|In computing, '''''' (initial ramdisk) is {{a scheme}} for loading a {{temporary}} root file system into memory, {{which may be}} used as part of the Linux startup process. [...] and [...] refer to two different methods of achieving this. Both are commonly used to make preparations before the <b>real</b> root <b>file</b> system can be mounted.|$|R
30|$|In[4], {{simulations}} using external <b>real</b> trace <b>files</b> on IEEE 802.16 e network deployments with {{no specific}} handover enhancement and {{taking into account}} the signaling message loss showed an average handover latency of 162.25 ms for data traffic. This is clearly superior to the previously identified handover latency for 4 G technologies and justifies further research in this area.|$|R
40|$|For {{the purpose}} of {{improving}} the efficiency of traffic signal control for isolate intersection under oversaturated conditions, a multi-objective optimization algorithm for traffic signal control is proposed. Throughput maximum and average queue ratio minimum are selected as the optimization objectives of the traffic signal control under oversaturated condition. A simulation environment using VISSIM SCAPI was utilized to evaluate the convergence and the optimization results under various settings and traffic conditions. It is written by C++/CRL to connect the simulation software VISSIM and the proposed algorithm. The simulation {{results indicated that the}} signal timing plan generated by the proposed algorithm has good efficiency in managing the traffic flow at oversaturated intersection than the commonly utilized signal timing optimization software Synchro. The update frequency applied in the simulation environment was 120 [*]s, and it can meet the requirements of signal timing plan update in <b>real</b> <b>filed.</b> Thus, the proposed algorithm has the capability of searching Pareto front of the multi-objective problem domain under both normal condition and over-saturated condition...|$|R
