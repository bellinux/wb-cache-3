12|2306|Public
25|$|Following {{the merger}} of Insoft, Harple served as Senior Vice President at Netscape. Harple's team used the {{collaborative}} computing and streaming media technologies created at InSoft {{as the basis for}} new Netscape products such as LiveAudio and LiveVideo. These efforts {{led to the creation of}} a number of internet standards, including <b>Real-Time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP).</b>|$|E
50|$|SDP is {{designed}} to be extensible to support new media types and formats. SDP started off as a component of the Session Announcement Protocol (SAP), but found other uses in conjunction with Real-time Transport Protocol (RTP), <b>Real-time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> Session Initiation Protocol (SIP) and even as a standalone format for describing multicast sessions.|$|E
50|$|Designing {{a network}} {{protocol}} to support streaming media raises many problems. Datagram protocols, {{such as the}} User Datagram Protocol (UDP), send the media stream {{as a series of}} small packets. This is simple and efficient; however, there is no mechanism within the protocol to guarantee delivery. It is up to the receiving application to detect loss or corruption and recover data using error correction techniques. If data is lost, the stream may suffer a dropout. The <b>Real-time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> Real-time Transport Protocol (RTP) and the Real-time Transport Control Protocol (RTCP) were specifically designed to stream media over networks. RTSP runs over a variety of transport protocols, while the latter two are built on top of UDP.|$|E
40|$|Internet {{telephony}} {{must offer}} the standard telephony services. However, {{the transition to}} Internetbased telephony services also provides an opportunity to create new services more rapidly and with lower complexity than in the existing {{public switched telephone network}} (PSTN). The Session Initiation Protocol (SIP) is a signaling protocol that creates, modifies and terminates associations between Internet end systems, including conferences and point-to-point calls. SIP supports unicast, mesh and multicast conferences, as well as combinations of these modes. SIP implements services such as call forwarding and transfer, placing calls on hold, camp-on and call queueing by a small set of call handling primitives. SIP implementations can re-use parts of other Internet service protocols such as HTTP and the <b>Real-Time</b> <b>Stream</b> <b>Protocol</b> (<b>RTSP).</b> In this paper, we describe SIP, and show how its basic primitives can be used to construct a wide range of telephony services. ...|$|R
40|$|The Internet and intranets {{have been}} used to deliver {{continuous}} media, both stored and live, for a number of years. Most of the attention has focused on providing guaranteed quality of service (RSVP) and end-to-end data transport (RTP), with every application using its own control protocol. In this paper, we describe a control architecture that offers most standard advanced telephony features and integrates stored and conference multimedia. The protocol re-uses much of the "infrastructure" of HTTP, including its security and proxy mechanisms. The architecture is instantiated by two related, but independent protocols: the Session Initiation Protocol (SIP) for inviting participants to a multimedia session and the <b>Real-Time</b> <b>Stream</b> <b>Protocol</b> (<b>RTSP)</b> to control playback and recording for stored continuous media. 1 Introduction In the last few years, the Internet has become a viable infrastructure to support multimedia services, including oneway retrieval of stored multimedia content on deman [...] ...|$|R
5000|$|Feng is a {{multimedia}} streaming server compliant with IETF standards for <b>real-time</b> <b>streaming</b> of multimedia content over IP networks. Feng implements Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP,</b> [...] ) and <b>Real-time</b> Transport Protocol / RTP Control Protocol (RTP/RTCP, [...] ). It supports the RTP Profile for Audio and Video Conferences with Minimal Control (...) [...]|$|R
40|$|A Network Address Translator (NAT) Traversal {{mechanism}} for media controlled by <b>Real-Time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> draft-ietf-mmusic-rtsp-nat- 09 This document defines {{a solution for}} Network Address Translation (NAT) traversal for datagram based media streams setup and controlled with Real-time Streaming Protocol version 2 (RTSP 2. 0). It uses Interactive Connectivity Establishment (ICE) adapted to use RTSP as a signalling channel, defining the necessary extra RTSP extensions and procedures...|$|E
40|$|The {{focus of}} this paper is on the {{management}} of time-shifted television (tsTV), one of services of IPTV, which allows to watch the broadcast content at real-time with a small time shift. The architecture for a large-scale tsTV ser-vices deployment is presented. It uses co-operating proxy located in broadband access networks, and they are based on the IETF's <b>Real-Time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP).</b> Caching algorithms have been designed to take into account content popularity and distance metrics...|$|E
40|$|The {{increasing}} {{popularity of}} multimedia streaming applications introduces new challenges in content distribution networks. Streaming {{services such as}} Video on Demand (VoD) or digital television over the Internet (IPTV) are very bandwidth-intensive and cannot tolerate the high delays and poor loss properties of today's Internet. To solve these problems, caching (a sliding segment of) popular streams at proxies could be envisaged. This paper presents a novel caching algorithm and architecture for time-shifted television (tsTV) and its implementation using the IETFs <b>Real-Time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP).</b> The algorithm uses sliding caching windows with sizes depending on content popularity and/or distance metrics. The caches can work in stand-alone mode {{as well as in}} co-operative mode. This paper shows that the network load can already be reduced considerably using small diskless caches, especially when using cooperative caching. A brief overview of the functionality of a prototype proxy implementation is presented as well...|$|E
50|$|Real Data Transport (RDT) is a {{proprietary}} transport protocol {{for the actual}} audio-video data, developed by RealNetworks in the 1990s. It is commonly used in companion with a control <b>protocol</b> for <b>streaming</b> media like the IETF's Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP).</b>|$|R
50|$|Version 1.5.x was {{released}} on May 15, 2008 and added support for H.264 video and Advanced Audio Coding (AAC) audio, and ingest support for Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> <b>Real-time</b> Transport <b>Protocol</b> (RTP), MPEG transport stream (MPEG-TS), and ICY (SHOUTcast/Icecast) sources for re-streaming to the Flash Player client.|$|R
25|$|In 1992, Harple co-founded InSoft with partner Richard Pizzarro. The Grantham, Pennsylvania {{company was}} a {{provider}} of distributed digital video solutions, desktop conferencing and videoconferencing applications. The Internet media streaming, telephony and collaborative applications originated by InSoft {{laid the foundation for}} development of the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> standard.|$|R
40|$|The {{increasing}} {{popularity of}} multimedia streaming applications introduces new challenges in content distribution. Web-initiated multimedia streams typically experience high start-up delay, due to large protocol overheads {{and the poor}} delay, throughput, and loss properties of the Internet. Internet service providers can improve performance by caching the initial segment (the prefix) of popular streams at proxies near the requesting clients. The proxy can initiate transmission to the client while simultaneously requesting {{the remainder of the}} stream from the server. This paper analyzes the challenges of realizing a prefix-caching service {{in the context of the}} IETF's <b>Real-Time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> a multimedia streaming protocol that derives from HTTP. We describe how to exploit existing RTSP features, such as the Range header, and how to avoid several round-trip delays by caching protocol information at the proxy. Based on our experiences, we propose extensions to RTSP th [...] ...|$|E
40|$|This {{document}} {{provides a}} brief technical overview of several higher level protocols used with IP Multicast. First, protocols {{that have been}} developed to support real-time multimedia delivery and Quality-of-Service (QoS) specifiers for multicast and unicast network services are presented. These include the Real-time Transport Protocol (RTP), the control protocol (RTCP) that works in conjunction with RTP, the resource reservation protocol (RSVP), and the <b>real-time</b> <b>streaming</b> <b>protocol</b> (<b>RTSP).</b> Quality-of-service routing is briefly considered. Next, reliable IP Multicast protocols, an emerging standards area, are discussed. Lastly, group setup protocols are introduced. The protocols described in this paper are at different levels of maturity. If you are an engineer interested in evaluating or implementing IP Multicast for your organization, product or service, this document will help you understand how these protocols enhance the usefulness of IP Multicast. It assumes you have a conceptual understanding of IP Multicast addressing, group management and routing. If you are unfamiliar with these, we recommend you first read the IP Multicast Initiative white papers "How IP Multicast Works" and "Introduction to IP Multicast Routing". Need for additional protocol...|$|E
40|$|Proxies are {{commonly}} used to cache objects, especially multimedia objects, so that clients can enjoy a better quality-of-service (QoS) guarantees such as smaller start-up latency and lower loss rate. But the use of multimedia proxies increases the risk that data are exposed to unauthorized access by intruders. In this paper, we propose an enhancement of the Internet IETF’s <b>Real-time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> which employs a notion of “asymmetric reversible parametric sequence” (ARPS) to provide the following security properties: (i) data confidentiality during transmission, (ii) end-to-end data confidentiality, (iii) data confidentiality against proxy intruders, and (iv) data confidentiality against member collusion. We present the Secure Multimedia Library (SML) {{which is based on}} ARPS and then realize these security features on a production video streaming server: Apple’s Darwin Streaming Server. Our framework guarantees the system resilience against attacks is provably strong given the standard computability assumptions. To reduce the computation demand on the receiving client, our scheme only requires the client to perform a “single decryption operation ” to recover the original data even though the data packets have been encrypted by multiple proxies along the delivery path. To tradeoff between degree of confidentiality and computational overhead, we also propose the use of a set of “encryption configuration parameters ” (ECP) to trade off proxy encryption throughput against the presentation quality of audio/video obtained by unauthorized parties. Our implementation prototype shows that one can simultaneously achieve high encryption throughput and extremely low audio/video quality (in terms of audio fidelity, and peak signal-to-noise ratio and visual quality of decoded video frames) for unauthorized access...|$|E
50|$|The {{company is}} {{credited}} with developing {{the first generation of}} commercial, US-based VoIP (Voice Over Internet <b>Protocol,</b> Internet media <b>streaming</b> and realtime Internet telephony/collaborative software and standards that would later become NetscapeConference and NetscapeMedia Server. These, in turn, would provide the basis for the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> standard.|$|R
30|$|The {{application}} {{layer of the}} OPTIMIX architecture enables the usage of different video coding schemes such as H. 264 /AVC and SVC. For session initialization and maintenance, Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> and <b>Real-time</b> Transport Control Protocol (RTCP) are used. In this article, we {{will focus on the}} transmission of pre-encoded SVC videos.|$|R
50|$|Shodan {{collects}} data {{mostly on}} web servers (HTTP/HTTPS - port 80, 8080, 443, 8443), {{as well as}} FTP (port 21), SSH (port 22), Telnet (port 23), SNMP (port 161), SIP (port 5060), and Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP,</b> port 554). The latter {{can be used to}} access webcams and their video stream.|$|R
40|$|Abstract Nowadays mobile {{streaming}} service through {{cell phone}} {{is becoming the}} highlight of new value-added mobile services. Based on the present CDMA 1 x wireless data network and Binary Runtime Environment for Wireless (BREW) platform, adopting compression technologies of H. 264 and QCP, a set of streaming media players are designed and implemented, and the principle, structure, key technologies and performance analysis of this system are introduced. This player works well in practice. Key Words streaming media; Binary Runtime Environment for Wireless (BREW); Real-time Transport Protocol (RTP); <b>Real-time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> There are two major methods for audio/video files transfer through the network, downloading and streaming. The volume of storage and network bandwidth restricts transferring big audio/video files. Downloading needs minutes or hours while streaming only takes several seconds in starting and buffering. Streaming server will continuously send real-time packets to clients and the users don’t need {{to wait for the}} whole file to be downloaded. They can play and receive simultaneously without big cache. Streaming is certainly a better choice for the limited working space of cell phone and PDA, etc [1 - 2]. The expanded bandwidth for air interfaces has made a solid ground for streaming media application on wireless networks. With the advantages of wireless system in time and place, mobile streaming media service is very attractive. The China Unicom’s CDMA 1 x data network has an average steady rate of 70 - 80 kbps and is capable of running streaming media business. This paper will introduce the implementation of a mobile streaming client player based on BREW platform. 1 Mobile Streaming Media System Fig. 1 shows the structure of the mobile streaming media system, including four basic parts: the server, the client, the transmission channel and the content source. The server adopts concurrent server of cluster; the client is a cell phone supporting BREW application; the transmission channel uses CDMA 1 x wireless network of China Unicom; and the content source are the streaming type documents or real-time audio/vide...|$|E
40|$|The {{objective}} of this research can be categorised into the following aspects : (a) To present an extensive analysis on Internet Routing - Methods, Protocols, Internals, Issues and Trends. (b) To develop an efficient minimal cut set algorithm in order to extract the minimal paths between any source and destination links in a web link network and use this approach for graphical design of web link structures. © To explore optimal web surfing by improvising the classical routing algorithms using fuzzy distance measurers. (d) To present a comprehensive survey of Internet multimedia protocols such as RTP, RTCP, RTSP and TFRCP, and to analyse the performances of SIP and H. 323 for signaling and control of Internet telephony, RSVP and YESSIR for resource reservation in the Internet. (e) To analyse the problems of video streaming over the Internet and to develop qualitative solution models with regard to video streaming based on two architectures (RTP/RTCP and TCP/UDP/IP) and (f) To attain global optimisation through end-to-end congestion control for Internet Routing {{and to develop a}} modified congestion control algorithm for routers in the Internet. In order to study and analyse the internal organisation of links in a web site, a recursive algorithm is used to extract all the links in a specific web-site and link connectivity is represented as a tree structure using graphs and logic gates. Minimal cut sets are extracted to minimise the number of clicks while surfing from the source page to the destination page, that is, to find the minimal path between them. Identifying the presence of minimal cut sets in a web link network positively enhances the reliability and security of the web site. An efficient minimal cut set algorithm is developed to extract the minimal paths between any source and destination links in a web link network. The proposed algorithm is tested on a link tree and the minimal cut sets are obtained. And this approach is found to be effective for the reliability and security of a web site. To explore optimal web surfing (shortest path routing), fuzzy simulation of routing algorithms for finding the optimal path set of links to a target web site in a web link network is implemented. Fuzzy distance measures are derived from the subjective estimation of each link in a web link network by different users with regard to the retrieval rate. Classical routing algorithms (Floyd-Warshall's, Dijkstra's and Bellman-Ford's) are extended using fuzzy hamming distance to explore optimal web surfing. Fuzzy Hurwicz rule is taken into account in establishing the optimistic and pessimistic view of different users for various path sets in the web link network. An optimal surfing path is estimated in a web link network using the implemented fuzzy distance based routing algorithms. A range of protocols are certainly necessary to provide streaming multimedia across the Internet. These protocols include mechanisms for data transfer (RTP), resource reservation (RSVP), session setup for specific applications (SDP, SAP), media-on-demand, control of stored and live multimedia (RTSP), Internet telephony, multimedia conference session initiation, call control (SIP), quality-of-service monitoring (RTCP) and congestion control for time-sensitive multimedia data streams (TFRCP). An extensive survey of Real-time Transport Protocol (RTP), Real-time Transport Control Protocol (RTCP), <b>Real-Time</b> <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> and TCP-friendly Rate Control Protocol (TFRCP) are presented. The performances of the Session Initiation Protocol (SIP) and H. 323 standards for signaling and control for internet telephony, Resource ReSerVation Protocol (RSVP) and Yet another Sender Session Internet Reservations (YESSIR) for resource reservation in the Internet have been analysed and compared. Based on the performances of the above protocols, certain improvements are suggested for efficient transfer of real-time continuous media data. The problems of video streaming over the Internet I. e., transferring a video file over an Internetwork effectively without the loss of video data is studied and analysed. Video Streaming architectures based on RTP/RTCP and TCP/UDP/IP are analysed and comparisons have been made about real time video streaming applications. Possible qualitative solutions for the improvement of Video Streaming over an Internet. Environment is developed based on key components such as multicast capability, real time data transport, assured QoS, retransmission, forward error correction, receiver buffering and adaptation. In order to address the steady rise of packet loss rates in real time media streaming, two important destination based congestion control algorithms in packet switched networks are examined. They are Random Early detection (RED) algorithm and modified approach called Derivative Random Drop (DRD) algorithm. The original RED algorithm presents two variants of RED namely RED_VAR- 1 and RED-VAR- 2. A new proposal has been made for the RED algorithm with two more different variants called as RED-VAR- 3 and RED-VAR- 4. The performances and the result of all RED variants have been presented. A modified congestion control algorithm (RED-VAR- 4 algorithm) for real time media streaming applications over an Internet routing environment is proposed...|$|E
50|$|Media Resource Control Protocol (MRCP) is a {{communication}} protocol used by speech servers to provide various services (such as speech recognition and speech synthesis) to their clients. MRCP relies on another protocol, such as Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> or Session Initiation Protocol (SIP) for establishing a control session and audio streams between {{the client and}} the server.|$|R
40|$|This draft {{presents}} a requirement and proposes {{a solution to}} integration of Session Initiation Protocol (SIP), to the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP</b> and RTSP v 2) [RFC 2326 and IDRTSP] especially {{in the context of}} converged media services or IPTV services. The document develops a rationale and solution space for using SIP with streaming media applications. One service on top of IPTV service is sketched out, which required SIP optimally...|$|R
50|$|InSoft {{has been}} called a pioneer in the desktop {{videoconferencing}} market, and is credited with developing the first generation of Internet media streaming and VoIP/collaborative software applications that would later be developed into NetscapeConference and NetscapeMedia Server. These, in turn, would provide the groundwork for the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> standard. RTSP is used to control incoming data when streaming video. The company was sold to Netscape Communications on April 25, 1996.|$|R
50|$|The Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> is {{a network}} control {{protocol}} {{designed for use}} in entertainment and communications systems to control streaming media servers. The protocol is used for establishing and controlling media sessions between end points. Clients of media servers issue VCR-style commands, such as play, record and pause, to facilitate real-time control of the media streaming from the server to a client (Video On Demand) or from a client to the server (Voice Recording).|$|R
40|$|Internet {{telephony}} {{offers the}} opportunity to design a global multimedia communications system that may eventually replace the existing telephony infrastructure. We describe the upper-layer protocol components that are specific to Internet telephony services: the Real-Time Transport Protocol (RTP) to carry voice and video data, and the Session Initiation Protocol (SIP) for signaling. We also mention some complementary protocols, including the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> for control of streaming media, and the Wide Area Service Discovery Protocol (WASRV) for location of telephony gateways. ...|$|R
40|$|This {{application}} note describes Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> extensions to two existing demos, the Dialogic ® 3 G- 324 M Multimedia Gateway demo (also {{referred to as}} the 3 G- 324 M demo) and the Dialogic ® Multimedia demo (also {{referred to as the}} Multimedia demo). An open-source RTSP stack from Live Networks, Inc., called LIVE 555, was used to add RTSP client functionality to those demos. Demo code changes, LIVE 555 usage and Dialogic ® device considerations for RTSP are explained...|$|R
30|$|YouTube service employs {{progressive}} download technique, {{which enables}} the playback {{of the video}} before the content downloaded is completely finished [16]. Old YouTube delivery service for mobile terminals (through the mobile YouTube link [URL] was based on conventional video streaming architecture, i.e., Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> and Real Time Protocol (RTP), the latter being transported over User Datagram Protocol (UDP). However, the current delivery service (both for smartphones and PCs) uses progressive video download via HyperText Transfer Protocol (HTTP) over Transmission Control Protocol (TCP).|$|R
50|$|RealVideo can {{be played}} from a RealMedia file or {{streamed}} over the network using the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> a standard <b>protocol</b> for <b>streaming</b> media developed by the IETF. However, RealNetworks uses RTSP only {{to set up and}} manage the connection. The actual video data is sent with their own proprietary Real Data Transport (RDT) protocol. This tactic has drawn criticism because it made it difficult to use RealVideo with other player and server software. However, the open source MPlayer project has now developed software capable of playing the RDT streams.|$|R
5000|$|The {{first version}} of RealAudio used a {{proprietary}} protocol called PNA or PNM to send streaming audio data. RealNetworks later switched to the IETF standardized Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> but they use RTSP only to manage the connection. The actual audio data is sent with their own proprietary RDT protocol, which they initially kept secret. Recently, some specifications for the RDT protocol have been made public through the Helix Community project. By around 2004 the open-source MPlayer project [...] developed a means of playing the RDT streams.|$|R
40|$|Many {{emerging}} mobile {{applications and}} services require playback of streaming media. In this paper we describe an adaptable system architecture to implement mobile streaming services. The main components of this architecture are the streaming server, the multicast proxy and the mobile client. The main novelty of our approach {{lies on the}} client {{which is designed to}} fit most mobile devices. The streaming servers and client are all compliant with 3 GPP standards, and therefore use the Session Description Protocol (SDP), Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> and Realtime Transport Protocol (RTP), as well as the Adaptive Multi-Rate (AMR) audio media standard. Key words: Mobile computing,, multimedia, software, streaming...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2005). This document outlines the needs and requirements for a protocol to control distributed speech processing of audio streams. By speech processing, this document specifically means automatic speech recognition (ASR), speaker recognition [...] which includes both speaker identification (SI) and speaker verification (SV) [...] and text-to-speech (TTS). Other IETF protocols, such as SIP and Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP),</b> address rendezvous and control for generalized media streams. However, speech processing presents additional requirements {{that none of the}} extant IETF protocol...|$|R
40|$|Status of this Memo This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2003). All Rights Reserved. This document defines Signaling Compression (SigComp), a solution for compressing messages generated by application protocols such as the Session Initiation Protocol (SIP) (RFC 3261) and the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> (RFC 2326). The architecture and prerequisites of SigComp are outlined, along with {{the format of the}} SigComp message...|$|R
40|$|Abstract—Traditional {{answering}} {{machines and}} voice mail services are tightly coupled to Plain Old Telephone Systems. It {{is hard to}} provide simple services like forwarding voice mail outside the local PBX. With the advent of Internet telephony, various Internet based voice mail service providers are likely to come up. We propose a multimedia mail architecture using the existing Internet protocols, in particular SIP (Session Initiation <b>Protocol)</b> and <b>RTSP</b> (<b>Real-Time</b> <b>Streaming</b> <b>Protocol).</b> We discuss the design and implementation aspects of our prototype system and the protocol issues in using SIP and RTSP...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document defines general extensions for Session Description Protocol (SDP) and Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> to carry messages, as specified by a key management protocol, {{in order to secure}} the media. These extensions are presented as a framework, to be used by one or more key management protocols. As such, their use is meaningful only when complemented by an appropriate key management protocol...|$|R
50|$|UDP {{does not}} control {{congestion}}. Protocols built atop UDP must handle congestion independently. Protocols that transmit {{at a fixed}} rate, independent of congestion, can be problematic. <b>Real-time</b> <b>streaming</b> <b>protocols,</b> including many Voice over IP protocols, have this property. Thus, special measures, such as quality-of-service routing, {{must be taken to}} keep packets from being dropped.|$|R
40|$|Includes bibliographical {{references}} (leaves 72 - 76). Rapid {{increase in}} bandwidth and the interactive and scalability {{features of the}} Internet provide a precedent for a converged platform that will support interactive television. Next Generation Network platforms such as the IP Multimedia Subsystem (IMS) support Quality of Service (QoS), fair charging and possible integration with other services for the deployment of IPTV services. IMS architecture supports {{the use of the}} Session Initiation Protocol (SIP) for session control and the Real Time <b>Streaming</b> <b>Protocol</b> (<b>RTSP)</b> for media control. This study aims to investigate video interactivity designs over the Internet using an evaluation framework to examine the performance of both SIP and <b>RTSP</b> <b>protocols</b> over the IMS over different access networks. It proposes a Three Layered Video Interactivity Framework (TLVIF) to reduce the video processing load on a server...|$|R
