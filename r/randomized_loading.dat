2|81|Public
5000|$|Privilege separation, {{privilege}} revocation, chrooting and <b>randomized</b> <b>loading</b> of libraries {{also play}} a role in increasing the security of the system. Many of these have been applied to the OpenBSD versions of common programs such as tcpdump and Apache, and to the BSD Authentication system.|$|E
40|$|Lithium-ion {{batteries}} {{are widely used}} in many systems. Because they provide a power source to the whole system, their state-of-health (SOH) {{is very important for}} a system’s proper operation. A direct way to estimate the SOH is through the measurement of the battery’s capacity; however, this measurement during the battery’s operation is not that easy in practice. Moreover, the battery is always running under <b>randomized</b> <b>loading</b> conditions, which makes the SOH estimation even more difficult. Therefore, this paper proposes an indirect SOH estimation method that relies on indirect health indicators (HIs) that can be measured easily during the battery’s operation. These indicators are extracted from the battery’s voltage and current and the number of cycles the battery has been through, which are far easier to measure than the battery’s capacity. An empirical model based on an elastic net is developed to build the quantitative relationship between the SOH and these indirect HIs, considering the possible multi-collinearity between these HIs. To further improve the accuracy of SOH estimation, we introduce a particle filter to automatically update the model when capacity data are obtained occasionally. We use a real dataset to demonstrate our proposed method, showing quite a good performance of the SOH estimation. The results of the SOH estimation in the experiment are quite satisfactory, which indicates that the method is effective and accurate enough to be used in real practice...|$|E
50|$|Stable hashing {{is a tool}} used to {{implement}} <b>randomized</b> <b>load</b> balancing and distributed lookup in peer-to-peer computer systems.|$|R
40|$|We {{consider}} {{the problem of}} building cost-effective networks which are robust to dynamic changes in demand patterns. We compare several architectures based on using demandoblivious routing strategies. Traditional approaches include single-hop architectures based on a (static or dynamic) circuitswitched core infrastructure, and multi-hop (packet-switched) architectures based on point-to-point circuits in the core. To address demand uncertainty, we seek minimum cost networks that can carry the class of hose demand matrices. Apart from shortest-path routing, Valiant’s <b>randomized</b> <b>load</b> balancing (RLB), and VPN tree routing, we propose a third, highly attractive approach: selective <b>randomized</b> <b>load</b> balancing (SRLB). This {{is a blend of}} dual-hop hub routing and <b>randomized</b> <b>load</b> balancing which combines the advantages of both architectures in terms of network cost, delay, and delay jitter. In particular, we give empirical analyses for the cost (in terms of transport and switching equipment) for the discussed architectures, based on three representative carrier networks. On these three networks, SRLB maintains the resilience properties of RLB while achieving significant cost reduction over all other architectures, including RLB and multi-hop IP/MPLS networks using VPN tree routing...|$|R
40|$|Embedding {{locations}} in DHT node IDs makes locality explicit and, thereby, enables engineering of the trade-off between careful placement and <b>randomized</b> <b>load</b> balancing. This paper discusses hierarchical, topology-exposed DHTs and their benefits for content locality, and administrative control and routing locality...|$|R
40|$|A {{significant}} portion of the electricity network capacity is built to run only a few days a year when demand peaks. As a result, expensive power generation plants and equipment costing millions of dollars are sitting idle most of the time, which increases costs for everyone. We present <b>randomized</b> <b>load</b> control, a simple distributed approach for scheduling smart appliances. <b>Randomized</b> <b>load</b> control schedules the start time of appliances that are programmed to run within a specified time window, so that the aggregate load achieves a given ideal load. Our results show that we do achieve the given ideal load to a great extent. This is remarkable as the approach is completely distributed and preserves customer privacy as the scheduling happens within each house or building separately. ...|$|R
40|$|<b>Randomized</b> <b>load</b> {{balancing}} greatly {{improves the}} sharing of resources while being simple to implement. In one such model, jobs arrive according to a rate-αN Poisson process, with α < 1, {{in a system of}} N rate- 1 exponential server queues. In Vvedenskaya et al. [19], it was shown that when each arriving job is assigned to the shortest of D, D ≥ 2, randomly chosen queues, the equilibrium queue sizes decay doubly exponentially in the limit as N → ∞. This is a substantial improvement over the case D = 1, where queue sizes decay exponentially. The reasoning in [19] does not easily generalize to jobs with nonexponential service time distributions. A modularized program for treating <b>randomized</b> <b>load</b> balancing problems with general service time distributions was introduced in Bramson et al. [5]. The program relies on an ansatz that asserts that, for a <b>randomized</b> <b>load</b> balancing scheme in equilibrium, any fixed number of queues become independent of one another as N → ∞. This allows computation of queue size distributions and other performance measures of interest. In this article, we demonstrate the ansatz in several settings. We consider the least loaded balancing problem, where an arriving job is assigned to the queue with the smallest workload. We also consider the more difficult prob...|$|R
40|$|Structured P 2 P overlay {{networks}} {{based on}} a consistent hashing function have an aftermath load balance problem {{that needs to be}} dealt with. A load balancing method should take into account both proximity and dynamic features of DHTs. Randomized matching between heavily loaded nodes with lightly loaded nodes can deal with the dynamic feature. But current randomized methods are unable to consider physical proximity of the node simultaneously. There are locality-aware methods that rely on an additional logical network to capture the physical locality in load balancing. Due to the cost for network construction and maintenance, these locality-aware algorithms can hardly deal with DHTs with churn. This paper presents a locality-aware <b>randomized</b> <b>load</b> balancing algorithm to deal with both of the proximity and dynamic features of DHTs. We introduce a factor of randomness in the probing process in a range of proximity to deal with the DHT churn. We further improve the <b>randomized</b> <b>load</b> balancing efficiency by d-way probing. Simulation results show the superiority of a locality-aware 2 -way <b>randomized</b> <b>load</b> balancing in DHTs, in comparison with other pure random policies and locality-aware sequential algorithms. In DHTs with churn, it performs no worse than the best churn resilient algorithm. ...|$|R
40|$|Abstract: 2 ̆ 2 Embedding {{locations}} in DHT node IDs makes locality explicit and, thereby, enables engineering of the trade-off between careful placement and <b>randomized</b> <b>load</b> balancing. This paper discusses hierarchical, topology-exposed DHTs and their benefits for content locality, and administrative control and routing locality. 2 ̆...|$|R
40|$|<b>Randomized</b> <b>load</b> {{balancing}} greatly {{improves the}} sharing of resources {{in a number of}} applications while being simple to implement. One model that has been extensively used to study <b>randomized</b> <b>load</b> balancing schemes is the supermarket model. In this model, jobs arrive according to a rate-nλ Poisson process at a bank of n rate- 1 exponential server queues. A notable result, due to Vvedenskaya et. al. (1996), showed that when each arriving job is assigned to the shortest of d ≥ 2 randomly chosen queues, the equilibrium queue sizes decay doubly exponentially in the limit as n → ∞. This is a substantial improvement over the case d = 1, where queue sizes decay exponentially. The method of analysis used in the above paper and in the subsequent literature applies to jobs with exponentia...|$|R
40|$|In this paper, {{we provide}} a matrix-analytic {{solution}} for <b>randomized</b> <b>load</b> balancing models (also known as supermarket models) with phase-type (PH) service times. Generalizing the service {{times to the}} phase-type distribution makes {{the analysis of the}} supermarket models more difficult and challenging than that of the exponential service time case which has been extensively discussed in the literature. We first describe the supermarket model as a system of differential vector equations, and provide a doubly exponential solution to the fixed point of the system of differential vector equations. Then we analyze the exponential convergence of the current location of the supermarket model to its fixed point. Finally, we present numerical examples to illustrate our approach and show its effectiveness in analyzing the <b>randomized</b> <b>load</b> balancing schemes with non-exponential service requirements. Comment: 24 page...|$|R
40|$|It is {{well known}} that simple <b>randomized</b> <b>load</b> {{balancing}} schemes can balance load effectively while incurring only a small overhead, making such schemes appealing for practical systems. In this paper, we provide new analyses for several such dynamic <b>randomized</b> <b>load</b> balancing schemes. Our work extends a previous analysis of the supermarket model, a model that abstracts a simple, efficient load balancing scheme in the setting where jobs arrive at a large system of parallel processors. In this model, customers arrive at a system of n servers as a Poisson stream of rate #n, # < 1, with service requirements exponentially distributed with mean 1. Each customer chooses d servers independently and uniformly at random from the n servers, and is served according to the First In First Out (FIFO) protocol at the choice with the fewest customers. For the supermarket model, {{it has been shown that}} using d = 2 choices yields an exponential improvement in the expected time a customer spends in the syst [...] ...|$|R
40|$|We {{extend the}} lower bound of Adler et. al [1] and Berenbrink [3] for {{parallel}} <b>randomized</b> <b>load</b> balancing algorithms. The setting in these asynchronous and distributed algorithms is of n balls and n bins. The algorithms begin by each ball choosing d bins independently and uniformly at random. The balls and bins communicate {{to determine the}} assignment of each ball to a bin. The goal is to minimize the maximum load, i. e., the number of balls that are assigned to the same bin. In [1, 3], a lower bound of Ω (r logn / log log n) is proved if the communication is limited to r rounds. Three assumptions appear in the proofs in [1, 3]: the topological assumption, random choices of confused balls, and symmetry. We extend the proof of the lower bound so that it holds without these three assumptions. This lower bound applies to every parallel <b>randomized</b> <b>load</b> balancing algorithm {{we are aware of}} [1, 3, 8, 5]...|$|R
40|$|We {{consider}} {{load balancing}} {{in a network}} of caching servers delivering contents to end users. <b>Randomized</b> <b>load</b> balancing via the so-called power of two choices is a well-known approach in parallel and distributed systems that reduces network imbalance. In this paper, we propose a <b>randomized</b> <b>load</b> balancing scheme which simultaneously considers cache size limitation and proximity in the server redirection process. Since the memory limitation and the proximity constraint cause correlation in the server selection process, we may not benefit from the power of two choices in general. However, we prove that in certain regimes, in terms of memory limitation and proximity constraint, our scheme results in the maximum load of order Θ(n) (here n {{is the number of}} servers and requests), and at the same time, leads to a low communication cost. This is an exponential improvement in the maximum load compared to the scheme which assigns each request to the nearest available replica. Finally, we investigate our scheme performance by extensive simulations. Comment: 14 pages, 6 figure...|$|R
40|$|This paper {{studies the}} rate of {{convergence}} of the power-of-two-choices, a celebrated <b>randomized</b> <b>load</b> balancing algorithm for many-server queueing systems, to its mean field limit. The convergence to the mean-field limit has been proved in the literature, but {{the rate of}} convergence remained to be an open problem. This paper establishes that the sequence of stationary distributions, indexed by M, the number of servers in the system, converges in mean-square to its mean-field limit with rate O((M) ^ 3 (M) ^ 2 /M). ...|$|R
40|$|Load {{balancing}} {{and switch}} scheduling are two important algorithms {{in the effort}} to maximize the stability region and minimize (average) latency. Load balancing regulates the traffic to conform to the service rate while the switch scheduling allocates the service rates adaptive to the arrival patterns. Many existing load balancing and switch scheduling algorithms share great resemblance. We show that the load balancing and switch scheduling problems are dual systems of each other based on the linear queue dynamics approximation. This allows us to cast a load balancing problem in terms of a scheduling problem and vice versa. We further show an example of designing a new algorithm for load balancing using an existing scheduling algorithm based on the duality. We also explore the possibility of finding the entropy rate of the <b>randomized</b> <b>load</b> balancing system based on the duality and current knowledge of the entropy rate of <b>randomized</b> <b>load</b> balancing system [5]. The load balanced switch has stirred a lot of interest for its simplicity and performance. We conjecture the joint use of more sophisticated load balancing and switch scheduling algorithms will further improve the performance. We use mean field analysis to show such performance gain in the one dimensional case. I...|$|R
40|$|DHT {{networks}} {{based on}} consistent hashing functions have an inherent load uneven distribution problem. The objective of DHT load balancing is {{to balance the}} workload of the network nodes in proportion to their capacity so as to eliminate traffic bottleneck. It is challenging because of the dynamism nature of DHT networks and time-varying load characteristics. In this paper, we present a hash-based proximity clustering approach for load balancing in heterogeneity DHTs. In the approach, DHT nodes are classified as regular nodes and supernodes according to their computing and networking capacities. Regular nodes are grouped and associated with supernodes via consistent hashing of their physical proximity information on the Internet. The supernodes form a self-organized and churn resilient auxiliary network for load balancing. The hierarchical structure facilitates the design and implementation of a locality-aware <b>randomized</b> <b>load</b> balancing algorithm. The algorithm introduces a factor of randomness in the load balancing processes {{in a range of}} neighborhood so as to deal with both the proximity and dynamism. Simulation results show the superiority of the approach, in comparison with a number of other DHT load balancing algorithms. The approach performs no worse than existing proximity-aware algorithms and exhibits strong resilience to the effect of churn. It also greatly reduces the overhead of resilient <b>randomized</b> <b>load</b> balancing algorithms due to the use of proximity information. ...|$|R
40|$|We {{consider}} {{load balancing}} {{in a network}} of caching servers delivering contents to end users. <b>Randomized</b> <b>load</b> balancing via the so-called power of two choices is a well-known approach in parallel and distributed systems. In this framework, we investigate the tension between storage resources, communication cost, and load balancing performance. To this end, we propose a <b>randomized</b> <b>load</b> balancing scheme which simultaneously considers cache size limitation and proximity in the server redirection process. In contrast to the classical power of two choices setup, since the memory limitation and the proximity constraint cause correlation in the server selection process, we may not benefit from the power of two choices. However, we prove that in certain regimes of problem parameters, our scheme results in the maximum load of order Θ(n) (here n is the network size). This is an exponential improvement compared to the scheme which assigns each request to the nearest available replica. Interestingly, the extra communication cost incurred by our proposed scheme, compared to the nearest replica strategy, is small. Furthermore, our extensive simulations show that the trade-off trend {{does not depend on}} the network topology and library popularity profile details. Comment: This is the journal version of our earlier work [arXiv: 1610. 05961] presented at International Parallel & Distributed Processing Symposium (IPDPS), 2017. This manuscript is 15 pages and contains 15 figure...|$|R
40|$|In this paper, {{we provide}} a novel matrix-analytic {{approach}} for studying doubly exponential solutions of <b>randomized</b> <b>load</b> balancing models (also known as supermarket models) with Markovian arrival processes (MAPs) and phase-type (PH) service times. We describe the supermarket model {{as a system}} of differential vector equations by means of density dependent jump Markov processes, and obtain a closed-form solution with a doubly exponential structure to the fixed point {{of the system of}} differential vector equations. Based on this, we show that the fixed point can be decomposed into the product of two factors inflecting arrival information and service information, and further find that the doubly exponential solution to the fixed point is not always unique for more general supermarket models. Furthermore, we analyze the exponential convergence of the current location of the supermarket model to its fixed point, and apply the Kurtz Theorem to study density dependent jump Markov process given in the supermarket model with MAPs and PH service times, which leads to the Lipschitz condition under which the fraction measure of the supermarket model weakly converges the system of differential vector equations. This paper gains a new understanding of how workload probing can help in load balancing jobs with non-Poisson arrivals and non-exponential service times. Comment: <b>Randomized</b> <b>load</b> balancing, supermarket model, matrix-analytic approach, doubly exponential solution, density dependent jump Markov process, Markovian Arrival Process (MAP), phase type (PH) distribution, fixed point, exponential convergence, Lipschitz conditio...|$|R
40|$|Part 6 : Load Balancing, Analysis, and ManagementInternational audienceIn this paper, {{we provide}} a matrix-analytic {{solution}} for <b>randomized</b> <b>load</b> balancing models (also known as supermarket models) with phase-type (PH) service times. Generalizing the service {{times to the}} phase-type distribution makes analysis of the supermarket models more difficult and challenging {{than that of the}} exponential service time case which has been extensively discussed in the literature. We describe the supermarket model as a system of differential vector equations, provide a doubly exponential solution to the fixed point of the system of differential vector equations, and analyze the exponential convergence of the current location of the supermarket model to its fixed point...|$|R
40|$|AbstractWe {{extend the}} lower bound of Adler et al. (1998)  [1] and Berenbrink et al. (1999)  [2] for {{parallel}} <b>randomized</b> <b>load</b> balancing algorithms. The setting in these asynchronous and distributed algorithms is of n balls and n bins. The algorithms begin by each ball choosing d bins independently and uniformly at random. The balls and bins communicate {{to determine the}} assignment of each ball to a bin. The goal is to minimize the maximum load, i. e., the number of balls that are assigned to the same bin. In Adler et al. (1998) [1] and Berenbrink et al. (1999)  [2], a lower bound of Ω(logn/loglognr) is proved if the communication is limited to r rounds. Three assumptions appear in the proofs in Adler et al. (1998) [1] and Berenbrink et al. (1999)  [2]: the topological assumption, random choices of confused balls, and symmetry. The topological assumption states that each ball’s decision is based only on collisions between choices of balls. The confused ball assumption states that if a ball obtains the same topological information from all its chosen bins, then the ball commits {{to one of the}} chosen bins by flipping a fair coin. The symmetry assumption states that all the balls run identical algorithms, the same assumption holds for the bins. We extend the proof of the lower bound so that it holds without these three assumptions. This lower bound applies to every parallel <b>randomized</b> <b>load</b> balancing algorithm we are aware of (Adler et al., 1998 [1]; Berenbrink et al., 1999 [2]; Stemann, 1996 [3]; Even and Medina, 2009 [4]) ...|$|R
40|$|Static load {{balancing}} is attractive {{due to its}} simplicity and low communication costs. We analyze under which circumstances a <b>randomized</b> static <b>load</b> balancer can achieve good balance if the subproblem sizes are unknown and choosen by an adversary. It turns out that this worst case scenario is quite close to a more specialized model for applications related to parallel backtrack search. In both cases, {{a large number of}} subproblems has to be generated in order to make good load balance possible. Nevertheless, a carefully implemented <b>randomized</b> static <b>load</b> balancer can sometimes compete with dynamic {{load balancing}} on parallel machines with slow communication. The ideas and results derived here {{can also be used to}} analyze and improve existing load balancing algorithms...|$|R
40|$|Abstract. It is {{well known}} that simple <b>randomized</b> <b>load</b> {{balancing}} schemes can balance load effectively while incurring only a small overhead, making such schemes appealing for practical systems. In this paper we provide new analyses for several such dynamic <b>randomized</b> <b>load</b> balancing schemes. Our work extends a previous analysis of the supermarket model, a model that abstracts a simple, efficient load balancing scheme in the setting where jobs arrive at a large system of parallel processors. In this model, customers arrive at a system of n servers as a Poisson stream of rate λn, λ< 1, with service requirements exponentially distributed with mean 1. Each customer chooses d servers independently and uniformly at random from the n servers, and is served according to the First In First Out (FIFO) protocol at the choice with the fewest customers. For the supermarket model, {{it has been shown that}} using d = 2 choices yields an exponential improvement in the expected time a customer spends in the system over d = 1 choice (simple random selection) in equilibrium. Here we examine several variations, including constant service times and threshold models, where a customer makes up to d successive choices until finding one below a set threshold. Our approach involves studying limiting, deterministic models representing the behavior of these systems as the number of servers n goes to infinity. Results of our work include useful general theorems for showing that these deterministic systems are stable or converge exponentially to fixed points. We also demonstrate that allowing customers two choices instead of just one leads to exponential improvements in the expected time a customer spends in the system in several of the related models we study, reinforcing the concept that just two choices yields significant power in load balancing...|$|R
40|$|The Objective: This paper {{presents}} {{a method to}} identify the optimal location and size of DGs based on the power stability index and particle swarm optimization (PSO) algorithm. Materials and methods: First, a novel maximum power stability index (MPSI) {{is derived from the}} well-established theorem of maximum power transfer. The MPSI is utilized as an objective function to determine the optimal DG locations. Next, a PSO-based model with <b>randomized</b> <b>load</b> is developed to optimize DG sizing in view of the system’s real power losses. Results and Conclusion: Lastly, a IEEE 30 -bus test system is employed in the simulation. The performance of proposed MPSI index are comparable with other voltage stability indices. The DG optimization model considering voltage stability and loss minimization provides better results compared to that obtained using only loss minimization approach...|$|R
40|$|Consider a <b>randomized</b> <b>load</b> {{balancing}} problem {{consisting of a}} large number n of server sites each equipped with K servers. Under the greedy policy, clients randomly probe a site to check whether there is still a server available. If not, d − 1 other sites are probed and the task is assigned to the site with the fewest number of busy servers. If all the servers are also busy in each of these d − 1 sites, the task is lost. This short paper analyzes a set of policies, i. e., (L, d) policies, that will occasionally probe additional sites even when there is still a server available at the site that was probed first. Using mean field methods, we show that these policies, that preventively probe other sites, can achieve the same loss probability while requiring a lower overall probe rate. 1. PROBLEM DESCRIPTIO...|$|R
40|$|In {{this paper}} we {{consider}} the problem of randomly distributing balls over n holes. The weight of the balls is given by a random variable. This problem models several problems from computer science, most importantly <b>randomized</b> <b>load</b> balancing. We analyse {{the distribution of the}} sums of the weights of the balls in the holes. We will carry out an analysis using the Chernoff bound and the Hoeffding inequality. Often O(n log n) balls are enough to assure good balancing of the weights. If the expected weight of the balls is much smaller than their maximal weight, it is very useful to gather balls to super-balls. We also give an analysis based on the moment-generating function of the ball weights. We derive the moment-generating function of the probability-mass function of the sum of weights. From this moment-generating function it is easy to derive moments and variance...|$|R
40|$|This paper {{presents}} the reactive diffracting tree data structure and its implementation on a shared memory multiprocessor system. The reactive diffracting tree is a shared structure {{similar to a}} diffracting tree, but which can grow and shrink to better handle changing access patterns and the memory layouts, providing true scalability and locality. The tree mimics the behavior of an optimal size diffracting tree for each concurrency range. Empirical evidence, collected on the Alewife cache-coherent multiprocessor and the Proteus simulator, shows that the reactive diffracting tree provides throughput within a constant factor of optimal diffracting trees at all load levels. It also shows {{it to be an}} effective competitor with <b>randomized</b> <b>load</b> balancing algorithms in several producer/consumer applications. We believe that reactive diffracting trees will provide fast and truly scalable implementations of many primitives on multiprocessor systems, including shared counters, k barriers, pools, stacks, and priority queues. 1. INTRODUCTIO...|$|R
40|$|The {{views and}} {{conclusions}} contained {{in this document}} {{are those of the}} author and should not be interpreted as representing the official policies, either expressed or implied, of any sponsoring Distributed key-value systems have been widely used as elemental components of many Internet-scale services at sites such as Amazon, Facebook and Twitter. This thesis examines a system design approach to scale existing key-value systems, both horizontally and vertically, by carefully engineering and integrating techniques that are grounded in recent theory but also informed by underlying architectures and expected workloads in practice. As a case study, we re-design FAWN-KV—a distributed key-value cluster consisting of “wimpy ” key-value nodes—to use less memory but achieve higher throughput even in the worst case. First, to improve the worst-case throughput of a FAWN-KV system, we propose a <b>randomized</b> <b>load</b> balancing scheme that can fully utilize all the nodes regardless of their query distribution. We analyticall...|$|R
40|$|Multithreading is a {{promising}} approach {{to address the}} problems inherent in multiprocessor systems, such as network and synchronization latencies. Moreover, the benefits of multithreading are not limited to loop-based algorithms but apply also to irregular parallelism. EARTH - Efficient Architecture for Running THreads, is a multithreaded model supporting fine-grain, non-preemptive threads. This model is supported by a C-based runtime system which provides the multithreaded environment for the execution of concurrent programs. This thesis describes the design and implementation of a set of dynamic load balancing algorithms, and an in-depth study of their behavior with divide-and-conquer, regular, and irregular classes of applications. The results described in this thesis are based on EARTH-SP 2, an implementation of the EARTH program execution model on the IBM SP- 2, a distributed memory multiprocessor system. The main results of this study are as follows: ffl A <b>randomizing</b> <b>load</b> balance [...] ...|$|R
40|$|We {{propose a}} {{completely}} general, informed <b>randomized</b> dynamic <b>load</b> balancing method called random seeking (RS) suitable for parallel algorithms with characteristics {{found in many}} search algorithms used in artificial intelligence and operations research and many divide-and-conquer algorithms. In it, source processors randomly seek out sink processors for load balancing by flinging "probe" messages. These probes not only locate sinks, but also collect load distribution information {{which is used to}} efficiently regulate load balancing activities. We empirically compare RS with a well-known <b>randomized</b> dynamic <b>load</b> balancing method, the random communication (RC) strategy, by using them in parallel best-first branch-and-bound algorithms on up to 512 processors of an nCUBE 2 multicomputer. We find that the RC execution times are more than those of RS by 8 [...] 67 % when used to perform combined dynamic quantitative and qualitative load balancing, and by 5 [...] 74 % when used to perform just dynamic quant [...] ...|$|R
40|$|This paper {{presents}} {{simulation results}} for a taxonomy of typical distribution feeders with {{various levels of}} photovoltaic (PV) penetration. For each of the 16 feeders simulated, the maximum PV penetration that {{did not result in}} steady-state voltage or current violation is presented for several PV location scenarios: clustered near the feeder source, clustered near the midpoint of the feeder, clustered {{near the end of the}} feeder, randomly located, and evenly distributed. In addition, the maximum level of PV is presented for single, large PV systems at each location. Maximum PV penetration was determined by requiring that feeder voltages stay within ANSI Range A and that feeder currents stay within the ranges determined by overcurrent protection devices. Simulations were run in GridLAB-D using hourly time steps over a year with <b>randomized</b> <b>load</b> profiles based on utility data and typical meteorological year weather data. For 86 % of the cases simulated, maximum PV penetration was at least 30 % of peak load...|$|R
40|$|Hash-based {{randomization}} is {{a powerful}} technique used in clusters and distributed systems for load management. It offers uniform distribution, efficient addressing, little shared state, and scalability. However, simple hash-based randomization is unable to deal with skew and heterogeneity and, therefore, cannot achieve load balance in many environments. Virtual processors have been proposed {{as a solution to}} simple randomization's problem. We evaluate an alternative load management scheme for heterogeneous, shared-disk clusters. Our scheme directly tunes hash-based <b>randomized</b> <b>load</b> placement using a technique called adaptive, non-uniform (ANU) randomization [40] and compares favorably to the virtual processor approach. It provides the load balancing benefits of virtual processors with less shared state. It also automatically adapts to workload and cluster configuration changes, such as failure and recovery and adding or removing servers, without human involvement. Experimental results show that our scheme outperforms virtual processors and performs comparably to prescient load-balancing algorithms. They also show that our system maintains consistent performance across all servers while moving a minimal amount of load...|$|R
40|$|This paper {{deals with}} balls and bins {{processes}} related to <b>randomized</b> <b>load</b> balancing, dynamic resource allocation, and hashing. Suppose ¡ balls {{have to be}} assigned to ¡ bins, where each ball has to be placed without knowledge about the distribution of previously placed balls. The goal is to achieve an allocation that is as even as possible so that no bin gets much more balls than the average. A well known and good solution for this problem is to choose ¢ possible locations for each ball at random, to look into each of these bins, and to place {{the ball into the}} least full among these bins. This class of algorithms has been investigated intensively in the past, but almost all previous analyses assume that the ¢ locations for each ball are chosen uniformly and independently at random from the set of all bins. We investigate whether a non-uniform and possibly de-pendent choice of the...|$|R
40|$|Supermarket {{models are}} {{a class of}} {{interesting}} parallel queueing networks with dynamic <b>randomized</b> <b>load</b> balancing and real-time resource management. When the parallel servers are subject to breakdowns and repairs, analysis of such a supermarket model becomes more difficult and challenging. In this paper, we apply the mean-field theory to studying four interrelated supermarket models with repairable servers, and numerically indicate impact of the different repairman groups on performance of the systems. First, we set up the systems of mean-field equations for the supermarket models with repairable servers. Then we prove the asymptotic independence of the supermarket models through the operator semi-group and the mean-field limit. Furthermore, we show that the fixed points of the supermarket models satisfy the systems of nonlinear equations. Finally, we use the fixed points to give numerical computation for performer analysis, and provide valuable observations on model improvement. Therefore, this paper provides a new and effective method {{in the study of}} complex supermarket models. Comment: 48 pages; 9 figure...|$|R
40|$|The Power of Two Choices in <b>Randomized</b> <b>Load</b> Balancing by Michael David Mitzenmacher Doctor of Philosophy in Computer Science University of California at Berkeley Professor Alistair Sinclair, Chair Suppose that n {{balls are}} placed into n bins, each ball being placed into a bin chosen {{independently}} and uniformly at random. Then, with high probability, the maximum load in any bin is approximately log n log log n. Suppose instead that each ball is placed sequentially into the least full of d bins chosen independently and uniformly at random. It {{has recently been}} shown that the maximum load is then only log log n log d +O(1) with high probability. Thus giving each ball two choices instead of just one leads to an exponential improvement in the maximum load. This result demonstrates the power of two choices, and it has several applications to load balancing in distributed systems. In this thesis, we expand upon this result by examining related models and by developing techniques for stu [...] ...|$|R
40|$|Michael Mitzenmacher Department of Computer Science U. C. Berkeley Berkeley, CA 94720 mitzen@cs. berkeley. edu Abstract We {{provide a}} new {{approach}} for analyzing both static and dynamic <b>randomized</b> <b>load</b> balancing strategies. We demonstrate the approach by providing the first analysis of the following model: customers arrive as a Poisson stream of rate n, ! 1, at a collection of n servers. Each customer chooses some constant d servers independently and uniformly at random from the n servers, and waits for service at {{the one with the}} fewest customers. Customers are served according to the first-in first-out (FIFO) protocol, and the service time for a customer is exponentially distributed with mean 1. We call this problem the supermarket model. We wish to know how the system behaves, and in particular we are interested the expected time a customer spends in the system in equilibrium. The model provides a good abstraction of a simple, efficient load balancing scheme in the setting where jobs [...] ...|$|R
