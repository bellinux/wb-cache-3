301|494|Public
2500|$|Another {{important}} vulnerability {{is present}} in the last step in the authentication scheme when TLS / SSL are not used: the redirect-URL from the Identity Provider to the Relying Party. The problem with this redirect is the fact that anyone who can obtain this URL (e.g. by sniffing the wire) can replay it and get logged into the site as the victim user. Some of the Identity Providers use nonces (number used once) to allow a user to log into the site once and fail all the consecutive attempts. The nonce solution works if the user is the first one to use the URL. However a fast attacker who is sniffing the wire can obtain the URL and immediately reset a user's TCP connection (as an attacker is sniffing the wire and knows the required TCP sequence numbers) and then execute the <b>replay</b> <b>attack</b> as described above. Thus nonces only protect against passive attackers but cannot prevent active attackers from executing the <b>replay</b> <b>attack.</b> [...] Use of TLS/SSL in the authentication process eliminates this risk.|$|E
50|$|See also <b>Replay</b> <b>attack.</b>|$|E
50|$|The {{voting system}} is {{vulnerable}} to a limited <b>replay</b> <b>attack.</b>|$|E
5000|$|... #Subtitle level 3: General {{countermeasure}} for all <b>replay</b> <b>attacks</b> ...|$|R
30|$|This section classifies all {{potential}} attacks into five categories, such as guessing <b>attacks,</b> <b>replay</b> <b>attacks,</b> man-in-the-middle attacks, node capture attacks, and {{denial of service}} attack.|$|R
40|$|AbstractBiometric-based {{access control}} systems (BACSs) are {{vulnerable}} to <b>replay</b> <b>attacks.</b> <b>Replay</b> <b>attacks</b> occur when a biometric template is intercepted and maliciously used to gain unauthorized access to a system. In this paper, we introduce a Genetic and Evolutionary Biometric Security (GEBS) application which uses a Genetic and Evolutionary Computation to develop disposable Feature Extractors (FEs) {{in an effort to}} mitigate <b>replay</b> <b>attacks.</b> We describe how a previously developed system known as GEFE (Genetic and Evolutionary Feature Extraction) can be used to evolve unique and disposable FEs for users of BACS. Furthermore, we propose two access control protocols based on the use of disposable FEs and/or their resulting templates (also referred to as feature vectors (FVs)). In our proposed protocols, FEs/FVs are used to authenticate the identity of individuals and are then discarded. Our results show that this GEBS application can be successfully used to mitigate biometric <b>replay</b> <b>attacks...</b>|$|R
5000|$|... #Subtitle level 2: Real world {{examples}} of <b>replay</b> <b>attack</b> susceptibility ...|$|E
5000|$|... packet {{number to}} provide unique {{initialization}} vector for encryption and authentication algorithms {{as well as}} protection against <b>replay</b> <b>attack</b> ...|$|E
50|$|ONE-NET helps {{resist a}} {{spoofing}} attack or <b>replay</b> <b>attack</b> by using embedded nonces to ensure unique packets. Cryptographic nonce tracking allows source verification.|$|E
5000|$|Each {{message has}} a {{sequence}} number {{that protects the}} network against <b>replay</b> <b>attacks.</b>|$|R
5000|$|A {{timestamp}} payload (T) - this {{contains the}} time and hence helps protect against <b>replay</b> <b>attacks.</b>|$|R
30|$|As {{previously}} discussed, <b>replay</b> <b>attacks</b> {{are one of}} {{the threats}} to data integrity that may be present in network virtualization environments. The addition of unique identifiers inside encrypted messages makes it possible to detect duplicated messages, and therefore, <b>replay</b> <b>attacks.</b> For this purpose, the architecture proposed by Fernandes and Duarte [26, 31] inserts timestamps inside encrypted messages {{in order to ensure that}} messages are non-reproducible.|$|R
5000|$|... iOS 5.0 {{and later}} {{versions}} of iOS implement {{an addition to}} the SHSH system, a random number (a cryptographic nonce) in the [...] "APTicket", {{making it more difficult}} to perform a <b>replay</b> <b>attack,</b> and thus more difficult to downgrade.|$|E
50|$|This is {{an example}} of a very basic {{authentication}} protocol vulnerable to many threats such as eavesdropping, <b>replay</b> <b>attack,</b> man-in-the-middle attacks, dictionary attacks or brute-force attacks. Most authentication protocols are more complicated in order to be resilient against these attacks.|$|E
5000|$|The {{protocol}} {{is vulnerable}} to a <b>replay</b> <b>attack</b> (as identified by Denning and Sacco). If an attacker uses an older, compromised value for KAB, he can then replay the message [...] to Bob, who will accept it, being unable to tell that the key is not fresh.|$|E
5000|$|Authentication Headers (AH) {{provides}} connectionless {{data integrity}} and data origin authentication for IP datagrams and provides protection against <b>replay</b> <b>attacks.</b>|$|R
40|$|We {{present a}} {{reduction}} semantics for the LySa calculus extended with session information, for modelling cryptographic protocols, and a static analysis for it. If a protocol passes the analysis {{then it is}} free of <b>replay</b> <b>attacks</b> and thus preserves freshness. The analysis has been implemented and applied {{to a number of}} protocols, including both original and corrected version of Needham-Schroeder protocol. The experiment results show that the analysis is able to capture potential <b>replay</b> <b>attacks...</b>|$|R
2500|$|Server nonce {{is allowed}} to contain timestamps. Therefore, the server may inspect nonce {{attributes}} submitted by clients, to prevent <b>replay</b> <b>attacks</b> ...|$|R
50|$|There is a <b>replay</b> <b>attack</b> {{against the}} basic access control {{protocol}} that allows an individual passport to be traced. The attack {{is based on}} being able to distinguish a failed nonce check from a failed MAC check and works against passports with randomized unique identifiers and hard to guess keys.|$|E
50|$|Since webcron {{solutions}} involve availability via a URL, {{there are}} several different security concerns that users should address. A webcron solution introduces issues of trust, opportunities for denial-of-service attacks, network or packet sniffing, executing a <b>replay</b> <b>attack,</b> and possible exposure of information. A webcron solution is an ideal entry point for criminal computer hackers.|$|E
50|$|A <b>replay</b> <b>attack</b> (also {{known as}} {{playback}} attack) {{is a form}} of network attack in which a valid data transmission is maliciously or fraudulently repeated or delayed. This is carried out either by the originator or by an adversary who intercepts the data and re-transmits it, possibly as part of a masquerade attack by IP packet substitution.|$|E
30|$|In {{order to}} {{tolerate}} <b>replay</b> <b>attacks</b> on the backbone, we indicate that each 3 TCAC which composes a new signalling message should append to it the current timestamp value. As all 3 TCAC modules are synchronized, the <b>replay</b> <b>attacks</b> attempted by malicious entities will be easily detected when the receiving 3 TCAC verifies whether its current timestamp value is much {{superior to the}} value indicated within the received signalling message added to the delay on that link.|$|R
40|$|Abstract. We {{present a}} {{reduction}} semantics for the LYSA calculus extended with session information, for modelling cryptographic protocols, and a static analysis for it. If a protocol passes the analysis {{then it is}} free of <b>replay</b> <b>attacks</b> and thus preserves freshness. The analysis has been implemented and applied {{to a number of}} protocols, including both original and corrected version of Needham-Schroeder protocol. The experiment results show that the analysis is able to capture potential <b>replay</b> <b>attacks.</b> ...|$|R
25|$|Technically, digest {{authentication}} is {{an application}} of MD5 cryptographic hashing with usage of nonce values to prevent <b>replay</b> <b>attacks.</b> It uses the HTTP protocol.|$|R
50|$|Attack authentication. An {{attacker}} {{can obtain}} the password authentication {{due to a}} crack or other methods. Basically, a UE {{does not have a}} SIM card used, as mentioned above, HTTP Digest. This method is based on a username and password, which usually is not high security level. HTTP Digest lists several attacks, such as brute force or a <b>replay</b> <b>attack.</b>|$|E
5000|$|The server {{would perform}} the request given (to deliver a waffle of type eggo to the given {{location}} for user 1) {{only if the}} signature is valid for the user. The signature used here is a MAC, signed with a key not known to the attacker. (This example is also vulnerable to a <b>replay</b> <b>attack,</b> by sending the same request and signature a second time.) ...|$|E
5000|$|... iOS 5 {{and later}} {{versions}} of iOS implement {{an addition to}} this system, a random number (a cryptographic nonce) in the [...] "APTicket", making that simple <b>replay</b> <b>attack</b> no longer effective. Versions of redsn0w after 0.9.9b9 include a way to bypass the nonce requirement for iOS 5, allowing the SHSH blobs and APTicket to both be replayed by [...] "stitching" [...] them into custom firmware.|$|E
30|$|With MDA emulation, we {{are able}} to {{validate}} the operations of the MDA scheme and exhibit that MDA can withstand man-in-the-middle attacks. However, our emulation has failed to establish that MDA can prevent <b>replay</b> <b>attacks</b> on request or response frames. The scheme does not have any timestamp component, which makes it difficult to identify if a valid request frame is sent from an adversary at later stage. Therefore, <b>replay</b> <b>attacks</b> could be launched on the request frames before EXP resets.|$|R
50|$|Authentication {{protocols}} may use nonces {{to ensure}} that old communications cannot be reused in <b>replay</b> <b>attacks.</b> For instance, nonces are used in HTTP digest access authentication to calculate an MD5 digest of the password. The nonces are different each time the 401 authentication challenge response code is presented, thus making <b>replay</b> <b>attacks</b> virtually impossible. The scenario of ordering products over the Internet can provide {{an example of the}} usefulness of nonces in <b>replay</b> <b>attacks.</b> An attacker could take the encrypted information and—without needing to decrypt—could continue to send a particular order to the supplier, thereby ordering products over and over again under the same name and purchase information. The nonce is used to give 'originality' to a given message so that if the company receives any other orders from the same person with the same nonce, it will discard those as invalid orders.|$|R
50|$|ECB mode {{can also}} make {{protocols}} without integrity protection even more susceptible to <b>replay</b> <b>attacks,</b> since each block gets decrypted {{in exactly the same}} way.|$|R
5000|$|Another {{important}} vulnerability {{is present}} in the last step in the authentication scheme when TLS / SSL are not used: the redirect-URL from the Identity Provider to the Relying Party. The problem with this redirect is the fact that anyone who can obtain this URL (e.g. by sniffing the wire) can replay it and get logged into the site as the victim user. Some of the Identity Providers use nonces (number used once) to allow a user to log into the site once and fail all the consecutive attempts. The nonce solution works if the user is the first one to use the URL. However a fast attacker who is sniffing the wire can obtain the URL and immediately reset a user's TCP connection (as an attacker is sniffing the wire and knows the required TCP sequence numbers) and then execute the <b>replay</b> <b>attack</b> as described above. Thus nonces only protect against passive attackers but cannot prevent active attackers from executing the <b>replay</b> <b>attack.</b> [...] Use of TLS/SSL in the authentication process eliminates this risk.|$|E
50|$|Cydia caches {{the digital}} {{signatures}} called SHSH blobs used by Apple to verify restores of iOS (which Apple uses to limit users to only installing {{the latest version}} of iOS). Cydia's storage mechanism enables users to downgrade a device to a prior version of iOS by means of a <b>replay</b> <b>attack.</b> This means, for example, that a person with a jailbroken device who upgrades to a non-jailbreakable version of iOS can choose to downgrade back to a jailbreakable version.|$|E
50|$|Authentication {{protocols}} usually {{employ a}} cryptographic nonce as {{the challenge to}} ensure that every challenge-response sequence is unique. This protects against a man-in-the-middle attack and subsequent <b>replay</b> <b>attack.</b> If it is impractical to implement a true nonce, a strong cryptographically secure pseudorandom number generator and cryptographic hash function can generate challenges that are highly unlikely to occur more than once. It {{is important not to}} use time-based nonces, as these can weaken servers in different time zones and servers with inaccurate clocks.|$|E
30|$|Possible {{attacks in}} {{wireless}} channel (such as <b>replaying</b> <b>attack,</b> eavesdropping attack, {{denial of service}} attack, Byzantine attack, etc.) have raised concerns of users and medical service providers. The detail security requirements of WBANs are introduced in [14] that is not altogether different from general WSNs.|$|R
40|$|In {{this paper}} we propose {{liveness}} verification for audio-video speaker authentication systems to guard against possible <b>replay</b> <b>attacks</b> that employ pre-recorded audio and/or still face samples from a photo. The technique uses a fusion of acoustic features and visual features, automatically extracted from the lip region, to differentiate synchronous audio-video presentations from asynchronous <b>replay</b> <b>attacks.</b> Experiments with the multi-modal VidTIMIT database achieve liveness verification equal-error rates of less than 1 % using lip-voice feature vectors comprising mel-cepstral coefficients, eigenlips and lip region measurements. 1...|$|R
50|$|There {{are several}} real world {{examples}} of how <b>replay</b> <b>attacks</b> have been used and how the issues were detected and fixed {{in order to prevent}} further attacks.|$|R
