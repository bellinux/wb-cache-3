34|320|Public
50|$|Many web browsers {{implemented}} {{this code}} {{in a manner}} that violated this standard, changing the <b>request</b> <b>type</b> of the new request to GET, regardless of the type employed in the original request (e.g. POST). For this reason, HTTP/1.1 (RFC 2616) added the new status codes 303 and 307 to disambiguate between the two behaviours, with 303 mandating the change of <b>request</b> <b>type</b> to GET, and 307 preserving the <b>request</b> <b>type</b> as originally sent. Despite the greater clarity provided by this disambiguation, the 302 code is still employed in web frameworks to preserve compatibility with browsers that do not implement the HTTP/1.1 specification.|$|E
50|$|Information that is {{included}} includes, full name, date of birth, place of birth, reason for <b>request,</b> <b>type</b> of request.|$|E
50|$|Is {{not a part}} of RRCP {{protocol}} itself, but {{is closely}} associated, being an underlying mechanism for a Layer-2 analog of ICMP Echo <b>request</b> (<b>Type</b> 8) message in RRCP-capable switch controllers.|$|E
5000|$|The syntax for the WMTS <b>request</b> <b>types</b> is {{different}} {{for each of}} these encodings. Some <b>request</b> <b>types</b> are: ...|$|R
5000|$|<b>Request</b> <b>types</b> that WMS {{providers}} may optionally support include: ...|$|R
5000|$|An OPTIONS request {{returns the}} <b>request</b> <b>types</b> the server will accept.|$|R
50|$|Web Coverage Processing Service (WCPS) defines {{flexible}} ad-hoc {{processing and}} filtering on coverage sets. This is an abstract query language (like SQL and XQuery) that is independent {{from any other}} OGC service standard. The WCS Processing Extension establishes linkage of WCPS into the WCS suite, introducing an additional <b>request</b> <b>type,</b> ProcessCoverages, which accepts a WCPS query string and returns a list of response items resulting from server-side WCPS evaluation.|$|E
5000|$|Quad Data Rate (QDR) SRAM {{is a type}} {{of static}} RAM {{computer}} memory that can transfer up to four words of data in each clock cycle. Like Double Data-Rate (DDR) SDRAM, QDR SRAM transfers data on both rising and falling edges of the clock signal. The main purpose of this capability is to enable reads and writes to occur at high clock frequencies without the loss of bandwidth due to bus-turnaround cycles incurred in DDR SRAM. QDR SRAM uses two clocks, one for read data and one for write data and has separate read and write data buses (also known as Separate I/O), whereas DDR SRAM uses a single clock and has a single common data bus used for both reads and writes (also known as Common I/O). This helps to eliminate problems caused by the propagation delay of the clock wiring, and allows the illusion of concurrent reads and writes (as seen on the bus, although internally the memory still has a conventional single port - operations are pipelined but sequential). When all data I/O signals are accounted, QDR SRAM is not 2x faster than DDR SRAM but is 100% efficient when reads and writes are interleaved. In contrast, DDR SRAM is most efficient when only one <b>request</b> <b>type</b> is continually repeated, e.g. only read cycles. When write cycles are interleaved with read cycles, one or more cycles are lost for bus turnaround to avoid data contention, hence bus efficiency is reduced. Most SRAM manufacturers constructed QDR and DDR SRAM using the same physical silicon, differentiated by a post-manufacturing selection (e.g. blowing a fuse on chip).(citation needed) ...|$|E
3000|$|... is {{used for}} {{forwarding}} a response. When VState of a vehicle is changed, the <b>request</b> <b>type</b> is changed, too. Therefore, the recorded [...]...|$|E
5000|$|Technically, WCS Core {{establishes}} three <b>request</b> <b>types,</b> inline {{with the}} OGC Web Service definition: ...|$|R
5000|$|WMS {{specifies}} {{a number}} of different <b>request</b> <b>types,</b> two of which are required by any WMS server: ...|$|R
5000|$|Ajax filter - In order get all {{benefits}} of RichFaces, a developer should register a filter in the web.xml file of the application. The filter recognizes multiple <b>request</b> <b>types.</b>|$|R
40|$|Children's {{understanding}} and fulfilling of requests {{is essential to}} succeeding {{in the home and}} school environment. The current study examines differences between teachers' and mothers' request styles to determine if children are exposed to different request styles in each respective environment. Forty naturalistic lessons and free-play sessions of teachers and mothers conversing with children were coded for requests along several dimensions, including <b>request</b> <b>type.</b> Analysis revealed contrasting teacher and mother request styles. Results suggest that requests occur frequently in teachers' and mothers' speech, with teachers using slightly more total requests. Further analysis reveals that teachers and mothers differ slightly in their <b>request</b> <b>type</b> frequency distributions, with teachers using more need/want statements and hints. The results are discussed in terms of their implications for children's transition to school, Theory of Mind and request comprehension...|$|E
40|$|This paper {{describes}} {{the results of}} corpus and experimental investigation into the factors that affect the way clarification questions in dialogue are interpreted, {{and the way they}} are responded to. We present some results from an investigation using the BNC which show some general correlations between clarification <b>request</b> <b>type,</b> likelihood of answering, answer type and distance between question and answer...|$|E
40|$|Abstract. Aiming at {{the virtual}} network {{embedding}} problem under dynamic service request, Service Request Aware-based Dynamic Virtual Network Embedding (SRAD) algorithm is proposed. We first present virtual network embedding model, and then define virtual network construction cost {{according to the}} dynamic characteristic of service request. Our goal {{is to find the}} optimal reconfiguration policies by awaring service <b>request</b> <b>type</b> and changing trends, which can minimize the overall construction cost using substrate resource. Experimental results show that the proposed algorithm satisfies the service request, achieves higher success ratio and gains higher revenue/cost ratio for substrate network comparing with the existing algorithms...|$|E
25|$|In {{addition}} to resource records defined in a zone file, the {{domain name system}} also defines several <b>request</b> <b>types</b> that are used only in communication with other DNS nodes (on the wire), such as when performing zone transfers (AXFR/IXFR) or for EDNS (OPT).|$|R
40|$|In systems {{consisting}} of multiple clusters of processors interconnected by relatively slow connections such as our Distributed ASCI Supercomputer (DAS), jobs may request coallocation, i. e., the simultaneous allocation of processors in different clusters. The performance of coallocation may be severely {{impacted by the}} slow intercluster connections, and by the <b>types</b> of job <b>requests.</b> We distinguish different job <b>request</b> <b>types</b> ranging from ordered requests that specify the numbers of processors needed {{in each of the}} clusters, to flexible requests that only specify a total. We simulate multicluster systems with the FCFS policy [...] -and with two policies for placing a flexible request, one tries to balance cluster loads and one tries to fill clusters completely [...] -to determine the response times under workloads {{consisting of}} a single or of different <b>request</b> <b>types</b> for different communication speeds across the inter-cluster connections...|$|R
3000|$|... σ {{ranges from}} 0 to 62, while the arrival rates of new {{connection}} <b>requests</b> from services <b>type</b> 1 and 2 remain constant at 0.5 connection requests per minute and ψ = 50. Pb 1 and Pb 2 are the blocking probabilities of new connection <b>requests</b> of <b>types</b> 1 and 2 services, respectively. Pf 1, Pf 2, and Pf 3 are the forced termination probabilities of handover connection <b>requests</b> of <b>types</b> 1, 2, and 2 * services, respectively. The blocking probabilities of new connection requests and the dropping probabilities of handover connection <b>requests</b> of <b>type</b> 2 services {{are the highest}} because the connections require five {{times the amount of}} BBUs as type 1 services. In contrast, the dropping probabilities of handover connection <b>requests</b> of a <b>type</b> 2 * service are higher than a type 1 service. This is because the connection requirement of a type 2 * service requires three times as many BBUs as type 1 services.|$|R
40|$|Put PxTyp in {{the correct}} place (as TrdCaptRpt attribute) on TCR Submissions and TCR Acks. It was {{misplaced}} previously. Clarified that the Amt block and PxTyp on both top-level and leglevel are only supported and required for FX options or Multi-leg FX Options trades. Removed duplicate TrdLeg/Amt block in the TCR Ack Added note that MinPriceTick is absent from SecDef if product supports variable tick. Switched Mult to contract level on SecDef and indicated it can differ on a contract level for Electricity Products. Removed from Product <b>Request</b> <b>Type</b> 100 (List of Products). Changed PxUOMQty in SecDef examples for Options (now matches the Future) ...|$|E
30|$|This {{second result}} of Figures  5 and 6 {{can be seen}} by {{comparing}} the ratio of ingoing and outgoing data for each <b>request</b> <b>type.</b> Here we see the asymmetric algorithm reduces the overall amount of data going from the cloud to the premise (red part of the chart). This can be a major factor when charges associated with data going from the cloud to the premise are more expensive than charges for data going from the premise to the cloud. On average over the request types, asymmetric partitioning reduces the overall amount of data going from the cloud to the premise by a factor of 52 %. As we see in the next experiment, this can play a role in decreasing the total cost of deployment.|$|E
30|$|For the {{transformation}} of activities into structured processes, we use business process mining (BPM) techniques (as proposed in [38]). For data construction, we use the concept of trace clustering which divides activity logs into traceable clusters or in other words single process iterations. In the context of IAM, {{this could be a}} ticket number or a process id in relation with a specific <b>request</b> <b>type.</b> This information are subsequently mapped into a process representation (e.g. BPMN) for further analysis. Information about processes could theoretically be extracted directly from a business process management system. Yet, the goal is to create a detailed overview about the status quo within the IAM system (independent of how the system should actually be used) and possibly create a comparison to already defined processes.|$|E
50|$|If {{the file}} is {{expected}} to exist and it does, the file access, as restricted by permission flags within the file meta data or access control list, is validated against the <b>requested</b> <b>type</b> of operations. This usually requires an additional filesystem access although in some filesystems meta-flags {{may be part of}} the directory structure.|$|R
40|$|This paper compares Java and CORBA object models. By {{identifying}} main characteristics, {{the paper}} highlights {{similarities and differences}} of both models. Moreover, the key concepts of both object models are overviewed, including object definition, operations, <b>requests,</b> <b>types,</b> interfaces, classes, meta-classes, and inspection. A brief comparison of both models is presented {{at the end of}} the paper...|$|R
40|$|This {{report shows}} {{performance}} {{results of a}} RADIUS implementation using the DiPS+ software architecture. In addition it compares this implementation with a commercially available RADIUS implementation, and shows that the DiPS+ architecture differentiates between user <b>types</b> and <b>request</b> <b>types.</b> In fact, the DiPS+ prototype prioritizes incoming tra#c based on application-specific preferences, and allocates the available processing resources to the highest priority requests...|$|R
40|$|Abstract-This paper {{presents}} a specification language, implementation mechanism, and proof techniques for problems involving the arbitration of concurrent requests to shared protected resources whose integrity must be preserved. This mechanism is the serializer, {{which may be}} described as a kind ofprotection mechanism, in that it prevents improper orders of access to a protected resource. Serializers are a more structured form of the monitor mechanism of Brinch Hansen and Hoare. Serializers attempt to systematize and abstract desirable features of synchronization control structure into a coherent language construct. Serializers have better synchronization modularity than monitors in several respects. Monitors synchronize requests by providing a pair of operations for each <b>request</b> <b>type</b> (examples are STARTREAD/ENDREAD and STARTWRITE/ENDWRITE for the readers-writers problems). Such a pair of operations must be used in a certain order for the synchronizatio...|$|E
40|$|Diploma thesis {{deals with}} the mapping project funding from the EU Structural Funds, {{particularly}} as funds {{are and what they}} contribute. The theoretical part is focused on the possibility of drawing funds from EU structural funds, which contribute to economic and social cohesion, reducing disparities between different regions. Diploma thesis is focused on various operational programs in particular to the Operational Program Industry and Enterprise (OPIE). The functional part of the diploma thesis contains a characteristic of G-PROJECT, Ltd., which is focused on assistance applicants submitting projects to European and other funds. Also contains a <b>request</b> <b>type</b> to help potential applicants to increase the success rate in submitting their project applications. Procedure type application was mapped on the project "Improving the competitiveness of the purchase and restructuring of production technologies" for the Operational Program Industry and Enterprise...|$|E
40|$|To test a RESTful API {{one must}} make {{requests}} to all resources of an API and check whether the provided output is correct. Verifying the output {{is done by}} checking whether the <b>request</b> <b>type</b> was allowed on this resource as well as checking what data the request returned. A universal test client {{should be able to}} do this automatically. The only entry point that it should need is the base URL of the API that needs to be tested. In this thesis it is shown to what extent a test client like this can be automated and still be universally suitable for RESTful APIs. Furthermore, a test client has been implemented to support the findings. It has been used on a number of real-world APIs and the outcomes of this test work is discussed in this thesis. ...|$|E
40|$|In systems {{consisting}} of multiple clusters of processors interconnected by relatively slow connections such as our Distributed ASCI 1 Supercomputer (DAS), jobs may request coallocation, i. e., the simultaneous allocation of processors in different clusters. The performance of co-allocation may be severely {{impacted by the}} slow intercluster connections, and by the <b>types</b> of job <b>requests.</b> We distinguish different job <b>request</b> <b>types</b> ranging from ordered requests that specify the numbers of processors needed {{in each of the}} clusters, to flexible requests that only specify a total. We simulate multicluster systems with the FCFS policy [...] -and with two policies for placing a flexible request, one tries to balance cluster loads and one tries to fill clusters completely [...] -to determine the response times under workloads {{consisting of}} a single or of different <b>request</b> <b>types</b> for different communication speeds across the intercluster connections. In addition to a synthetic workload, we also consider a workload derived from measurements of a real application on the DAS...|$|R
40|$|Introduction: In 2010, Médecins Sans Frontières (MSF) {{launched}} a tele-expertise system {{to improve the}} access to specialized clinical support for its field health workers. Among medical specialties, dermatology {{is the second most}} commonly <b>requested</b> <b>type</b> of tele-expertise. The aim {{of the present study was}} to review all MSF teledermatology cases in the first 4 years of operation. Our hypothesis was that the review would enable th...|$|R
5000|$|Any value {{returned}} from a dynamic member access is itself of type [...] Values of type [...] are implicitly convertible both from and to any other type. In the code sample above this permits [...] function to treat the value returned by a call to [...] as an integer without any explicit cast. At run time the actual value will be converted to the <b>requested</b> <b>type.</b>|$|R
40|$|Previous {{work has}} shown that the {{information}} value of requests can be manipulated by controlling the sparsity of hypotheses, the degree to which category members are rare or common in the domain under consideration when making those requests. However, the degree to which people are sensitive to expected information value is unknown. This study examined a binary sorting task where sparsity differed across conditions. In contrast to previous work using hypotheses representable as visual areas, the stimuli in this study defined hypotheses in an abstract similarity space over geometric shapes. Participants could request labels for either category members or non-members. While both request types were used in all conditions, most often evenly, the proportion of participants showing a preference for one type of request was strongly impacted by the information value of that <b>request</b> <b>type.</b> A small tendency to prefer requests from the designated target category was also observed. Steven Langsford, Andrew T. Hendrickson, Amy Perfors, Daniel J. Navarr...|$|E
40|$|This paper {{presents}} a new algorithm for request distribution in clustered EJB systems. A new classification for EJB requests is first introduced, on which request distribution is based. The {{objective is to}} achieve load balancing and to enhance the caching performance in the EJB containers. The algorithm is based on periodically collecting traffic statistics from the EJB containers, and then solving a constrained optimization problem that finds the best distribution strategies for each <b>request</b> <b>type.</b> An event-driven simulator is built for the performance evaluation, where the TPC-W benchmark is used as the workload. Simulation results show that for relatively small sizes of the containers ' caches, the new algorithm clearly outperforms the random and round robin algorithms, currently used in clustered EJB systems. In addition, it scales better with the cluster size and can adapt to the varying load patterns. Experiments have also shown that increasing the cache hit ratio has a higher impact on the system performance than load balancing...|$|E
40|$|In a first study, we {{considered}} whether modelling {{and the type}} of an adult's request influenced children's ability at 1; 8 and 2; 2 to comprehend gestures and replica objects as symbols for familiar objects. In a second study, we evaluated whether modelling and type of request influenced children's ability at 1; 8 (N= 24) to understand unfamiliar (i. e. unconventional) objects as symbols. Results of Study 1 indicated that children at 2; 2 comprehended a gesture as a symbol {{in the absence of any}} previous model demonstration. All children comprehended a replica as standing for another object, although modelling marginally improved children's performance at 2; 2 and decreased performance at 1; 8. In general, the type of request did not influence children's comprehension of gestures or replicas as symbols. Results of Study 2 showed that modelling and <b>request</b> <b>type</b> did not influence children's understanding of objects that are unconventional and novel, as symbols. The studies converge to suggest that symbolic comprehension is a highly context-dependent ability that continues to develop over the second year...|$|E
40|$|As {{reported}} by Yamazoe and Shimizu [1], the most <b>requested</b> <b>types</b> of humidity sensors are those {{based on the}} variation of electrical properties such as resistance or impedance. These sensors should present high sensitivity and selectivity, long-term stability, simple structure and low cost. This paper describes {{for the first time}} the use of a BaCl 2 - 2 H 2 O layer as a material for sensing humidity...|$|R
50|$|Application layer {{transparency}} is symmetric {{when the}} same working mode is used on both the sides. The transparency is asymmetric when the firewall (usually a proxy) converts server <b>type</b> <b>requests</b> to proxy <b>type</b> or vice versa.|$|R
30|$|In passing we {{note that}} the concept of nested coverages, {{including}} modelling of the contributing footprints of each sub-coverage to the super-coverage as well as temporal validity, exist already in the WCS Earth Observation Application Profile (EO-WCS) [53], established earlier with funding by ESA. Hence, we recommend to align the INSPIRE modelling details in this respect with OGC EO-WCS, which offers even more powerful concepts plus streamlined request functionality, e.g., through dedicated <b>request</b> <b>types.</b>|$|R
