161|1626|Public
5|$|The {{next most}} {{important}} <b>record</b> <b>type</b> are those achieved {{at a specific}} competition. For example, the Olympic records represent the best performances by athletes at the Summer Olympics. All major championships and games have their relevant competition records {{and a large number}} of track and field meetings keep a note of their meet records. Other record types include: stadium records, records by age range, records by disability, and records by institution or organisation. Cash bonuses are usually offered to athletes if they break significant records, as doing so can generate greater interest and public attendance in track and field competitions.|$|E
25|$|The Sender Policy Framework and DomainKeys were {{designed}} {{to take advantage of}} another DNS <b>record</b> <b>type,</b> the TXT record, but have since been assigned specific record types.|$|E
25|$|Following in 1958, more stereo LP {{releases}} {{were offered}} by Audio Fidelity Records in the US and Pye Records in Britain. However, {{it was not}} until the mid-to-late 1960s that the sales of stereophonic LPs overtook those of their monophonic equivalents, and became the dominant <b>record</b> <b>type.</b>|$|E
5000|$|Richard Skelton, Marking Time, Preservation <b>Records</b> , <b>Type</b> <b>Records</b> LP ...|$|R
5000|$|There is a {{wide variety}} of <b>record</b> <b>types</b> because of {{consolidation}} of OMF variants from several vendors, and adding such features as 32-bit code and dynamic linking, Important <b>record</b> <b>types</b> are: ...|$|R
2500|$|RDATA is data of type-specific relevance, {{such as the}} IP {{address for}} address records, or the {{priority}} and hostname for MX records. Well known <b>record</b> <b>types</b> may use label compression in the RDATA field, but [...] "unknown" [...] <b>record</b> <b>types</b> must not (RFC 3597).|$|R
2500|$|TYPE is the <b>record</b> <b>type.</b> It {{indicates}} {{the format of}} the data and it gives a hint of its intended use. For example, the A record is used to translate from a domain name to an IPv4 address, the NS record lists which name servers can answer lookups on a DNS zone, and the MX record specifies the mail server used to handle mail for [...] a domain specified in an e-mail address.|$|E
2500|$|Typographically, the {{ampersand}} ("&"), {{representing the}} word et, is a space-saving ligature {{of the letters}} [...] "e" [...] and [...] "t", its component graphemes. Since the establishment of movable-type printing in the 15th century, founders have created many such ligatures for each set of <b>record</b> <b>type</b> (font) to communicate much information with fewer symbols. Moreover, during the Renaissance (14th to 17th centuries), when Ancient Greek language manuscripts introduced that tongue to Western Europe, its scribal abbreviations were converted to ligatures in imitation of the Latin scribal writing to which readers were accustomed. Later, in the 16th century, when the culture of publishing included Europe's vernacular languages, Graeco-Roman scribal abbreviations disappeared, an ideologic deletion ascribed to the anti-Latinist Protestant Reformation (1517–1648).|$|E
50|$|In November 2011, DNSimple {{announced}} a new proprietary DNS <b>record</b> <b>type</b> called ALIAS which provides a CNAME-like DNS record for the apex domain. DNSimple was the first DNS provider to offer this capability using a custom DNS <b>record</b> <b>type.</b>|$|E
40|$|Dependently-typed {{records have}} been studied in type theory in several {{previous}} research attempts, with applications {{to the study of}} module mechanisms for both programming and proof languages. Recently, the author has proposed an improved formulation of dependent <b>record</b> <b>types</b> in the context of studying manifest fields of module types. In this paper, we study this formulation in more details by considering universes of <b>record</b> <b>types</b> and some application examples. In particular, we show that <b>record</b> <b>types</b> provide a more powerful mechanism (than record kinds) in expressing module types and additional useful means (as compared with Σ-types) in applications. 1...|$|R
5000|$|I32HEX files {{use only}} <b>record</b> <b>types</b> , , , and [...] (32 bit addresses) ...|$|R
50|$|NGC 1316 {{has hosted}} two <b>recorded</b> <b>Type</b> Ia supernovae: 1980N(Ia) and 1981D(Ia).|$|R
50|$|Records that {{absolutely}} must {{be managed by}} a record locking process are those which are processor shared. In TPF, most record accesses are done by using <b>record</b> <b>type</b> and ordinal. So if you had defined a <b>record</b> <b>type</b> in the TPF system of 'FRED' and gave it 100 records or ordinals, then in a processor shared scheme, <b>record</b> <b>type</b> 'FRED' ordinal '5' would resolve to exactly the same file address on DASD — clearly necessitating {{the use of a}} record locking mechanism.|$|E
50|$|This {{demonstrates}} ALGOL W's <b>record</b> <b>type</b> facility.|$|E
5000|$|Each {{line of the}} OASIS {{representation}} below contains (from the left) {{a record}} number and a <b>record</b> <b>type</b> followed {{by a set of}} values that define that <b>record</b> <b>type.</b> For instance, the first RECTANGLE record below defines the following type of rectangle shape, its size and its absolute location: ...|$|E
5000|$|I16HEX files {{use only}} <b>record</b> <b>types</b> [...] through [...] (20 bit addresses) ...|$|R
5000|$|Clicking on a {{work area}} {{will bring you}} to the <b>record</b> <b>types</b> you work with most often ...|$|R
5000|$|DNS Server: DNS policies, new DDS <b>record</b> <b>types</b> (TLSA, SPF, {{and unknown}} records), new PowerShell cmdlets and {{parameters}} ...|$|R
5000|$|... #Subtitle level 2: OASIS <b>Record</b> <b>Type</b> Restrictions in OASIS.MASK ...|$|E
5000|$|Additionally, {{there is}} a Route 53-specific virtual <b>record</b> <b>type</b> called [...] "Alias".|$|E
50|$|A set {{consists}} of circular linked lists where one <b>record</b> <b>type,</b> the set owner or parent, appears once in each circle, {{and a second}} <b>record</b> <b>type,</b> the subordinate or child, may appear multiple times in each circle. In this way a hierarchy may be established between any two record types, e.g., type A {{is the owner of}} B. At the same time another set may be defined where B is the owner of A. Thus all the sets comprise a general directed graph (ownership defines a direction), or network construct. Access to records is either sequential (usually in each <b>record</b> <b>type)</b> or by navigation in the circular linked lists.|$|E
5000|$|... <b>record</b> <b>types</b> (like census, church, land, or vital records): descriptions, {{how to find}} them, and how to {{interpret}} them ...|$|R
50|$|The {{designer}} allows {{administrators to}} create and modify <b>Record</b> <b>Types,</b> Fields, Lists, hook code and scripts in a simple fashion.|$|R
5000|$|Special {{names are}} {{sometimes}} used to denote the formats of HEX files that employ specific subsets of <b>record</b> <b>types.</b> For example: ...|$|R
5000|$|In {{systems with}} record subtyping, {{operations}} on values of <b>record</b> <b>type</b> may also include: ...|$|E
50|$|A {{processor}} unique {{record is}} one that is defined such that each processor expected to be in the loosely coupled complex has a <b>record</b> <b>type</b> of 'FRED' and perhaps 100 ordinals. However, if a user on any 2 or more processors examines the file address that <b>record</b> <b>type</b> 'FRED', ordinal '5' resolves to, they will note a different physical address is used.|$|E
5000|$|... {{illustrations}} {{in articles}} frequently include maps, clickable maps, repository images, flags, and <b>record</b> <b>type</b> examples ...|$|E
5000|$|Similarly to {{the older}} OS/360 format, object file records are divided into 6 {{different}} <b>record</b> <b>types,</b> some added, some deleted, some altered: ...|$|R
25|$|Listed {{below are}} the species {{classified}} under Bumastus and {{the countries of}} their <b>recorded</b> <b>type</b> localities. The list is incomplete and may be inaccurate.|$|R
50|$|Hooks can be {{used for}} a variety of tasks such as pre-populating fields, validating Field and Record data, and even {{creating}} new <b>Record</b> <b>Types.</b>|$|R
50|$|An * {{next to the}} <b>record</b> <b>type</b> {{means that}} the record is forced to stable storage.|$|E
5000|$|Declaration {{of a new}} <b>record</b> <b>type,</b> {{including}} the position, type, and (possibly) name of each field; ...|$|E
5000|$|... #Caption: Entries for Croydon and Cheam, Surrey, in Domesday Book (1086), as {{published}} using <b>record</b> <b>type</b> in 1783.|$|E
50|$|Listed {{below are}} the species {{classified}} under Bumastus and {{the countries of}} their <b>recorded</b> <b>type</b> localities. The list is incomplete and may be inaccurate.|$|R
5000|$|DNS is {{implemented}} {{by the use of}} several resource records. To implement DNSSEC, several new DNS <b>record</b> <b>types</b> were created or adapted to use with DNSsec: ...|$|R
50|$|NSEC (next secure record): Contains {{a link to}} {{the next}} record name in the zone and lists the <b>record</b> <b>types</b> that exist for the record's name. DNS Resolvers use NSEC records to verify the non-existence of a <b>record</b> name and <b>type</b> as part of DNSSEC validation.|$|R
