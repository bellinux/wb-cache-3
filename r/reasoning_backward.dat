12|112|Public
6000|$|... upon {{any of the}} [...] "memorable scenes" [...] of his life. The image is, therefore, out of all imaginative keeping, and vulgarizes {{the chief}} personage in a grand {{historical}} tragedy, who, if not a great, {{was at least a}} decorous actor. But Mr. Masson can do worse than this. Speaking of a Mrs. Katherine Chidley, who wrote in defence of the Independents against Thomas Edwards, he says, [...] "People wondered who this she-Brownist, Katherine Chidley, was, and did not quite lose their interest in her when they found that she was an oldish woman, and a member of some hole-and-corner congregation in London. Indeed, she put her nails into Mr. Edwards with some effect." [...] Why did he not say at once, after the good old fashion, that she [...] "set her ten commandments in his face"? In another place he speaks of [...] "Satan standing with his staff around him." [...] Mr. Masson's style, a little Robertsonian at best, naturally grows worse when forced to condescend to every-day matters. He can no more dismount and walk than the man in armor on a Lord Mayor's day. [...] "It [Aldersgate Street] stretches away northwards a full fourth of a mile as one continuous thoroughfare, until, crossed by Long Lane and the Barbican, it parts with the name of Aldersgate Street, and, under the new names of Goswell Street and Goswell Road, completes its tendency towards the suburbs and fields about Islington." [...] What a noble work might not the Directory be if composed on this scale! The imagination even of an alderman might well be lost in that full quarter of a mile of continuous thoroughfare. Mr. Masson is very great in these passages of civic grandeur; but he is more surprising, on the whole, where he has an image to deal with. Speaking of Milton's [...] "two-handed engine" [...] in Lycidas, he says: [...] "May not Milton, whatever else he meant, have meant a coming English Parliament with its two Houses? Whatever he meant, his prophecy had come true. As he sat among his books in Aldersgate Street, the two-handed engine {{at the door of the}} English Church was on the swing. Once, twice, thrice, it had swept its arcs to gather energy; now it was on the backmost poise, and the blow was to descend." [...] One cannot help wishing that Mr. Masson would try his hand on the tenth horn of the beast in Revelation, or on the time and half a time of Daniel. There is something so consoling to a prophet in being told that, no matter what he meant, his prophecy had come true, and that he might mean [...] "whatever else" [...] he pleased, so long as he may have meant what we choose to think he did, <b>reasoning</b> <b>backward</b> from the assumed fulfilment! But perhaps there may be detected in Mr. Masson's [...] "swept its arcs" [...] a little of that prophetic hedging-in vagueness to which he allows so generous a latitude. How if the [...] "two-handed engine," [...] after all, were a broom (or besom, to be more dignified), ...|$|E
5000|$|Although new {{approaches}} {{have since been}} found, McDermott turned {{to other areas of}} AI, such as vision and robotics, and began working on automated planning again. His work on planning focused on the [...] "classical" [...] case rather than on hierarchical task network planning. In 1990 he was named a Fellow of the Association for the Advancement of Artificial Intelligence, one of the first group of Fellows. In 1996 he (and Hector Geffner and Blai Bonet independently) discovered [...] "estimated-regression planning", based on the idea of heuristic search with an estimator derived from a simplified domain model by <b>reasoning</b> <b>backward</b> ("regression") from the goal. The simplified version is obtained automatically from a full domain model by ignoring propositions deleted by actions. In 2000 he got interested in logic again because the development of the semantic web made it seem newly applicable. He did work on ontology translation and on semantic web services.|$|E
40|$|Abstract. Based on P-law <b>{{reasoning}},</b> <b>backward</b> P-law {{reasoning and}} its structure are presented, Next, the relation and relation theorems between backward P-law reasoning and general reasoning are given. Using the theory results, {{the application of}} backward P-law reasoning in the information image camouflage-reduction is given...|$|E
50|$|Many {{reasoning}} systems employ deductive reasoning to draw inferences from available knowledge. These inference engines support forward <b>reasoning</b> or <b>backward</b> <b>reasoning</b> {{to infer}} conclusions via modus ponens. The recursive reasoning methods they employ are termed ‘forward chaining’ and ‘backward chaining’, respectively. Although reasoning systems widely support deductive inference, some systems employ abductive, inductive, defeasible {{and other types}} of reasoning. Heuristics may also be employed to determine acceptable solutions to intractable problems.|$|R
40|$|This study investigates {{strategies}} in reasoning about mental states of others, {{a process that}} requires theory of mind. It {{is a first step}} in studying the cognitive basis of such reasoning, as strategies affect tradeoffs between cognitive resources. Participants were presented with a two-player game that required reasoning about the mental states of the opponent. Game theory literature discerns two candidate strategies that participants could use in this game: either forward <b>reasoning</b> or <b>backward</b> <b>reasoning.</b> Forward reasoning proceeds from the first decision point to the last, whereas <b>backward</b> <b>reasoning</b> proceeds in the opposite direction. <b>Backward</b> <b>reasoning</b> is the only optimal strategy, because the optimal outcome is known at each decision point. Nevertheless, we argue that participants prefer forward reasoning because it is similar to causal reasoning. Causal reasoning, in turn, is prevalent in human reasoning. Eye movements were measured to discern between forward and backward progressions of fixations. The observed fixation sequences corresponded best with forward reasoning. Early in games, the probability of observing a forward progression of fixations is higher than the probability of observing a backward progression. Later in games, the probabilities of forward and backward progressions are similar, which seems to imply that participants were either applying <b>backward</b> <b>reasoning</b> or jumping back to previous decision points while applying forward reasoning. Thus, the game-theoretical favorite strategy, <b>backward</b> <b>reasoning,</b> does seem to exist in human reasoning. However, participants preferred the more familiar, practiced, and prevalent strategy: forward reasoning. © 2012 Meijering et al...|$|R
40|$|Abduction* is {{the genus}} with {{deduction}} and induction as species. Modus tollens is <b>backward</b> <b>reasoning</b> as an unknown proposition is inferred from a known proposition. Reductio ad absurdum is abductive because the conclusion is inferred by deriving a contradiction from an assumption. Inductive reasoning from effect to cause is also <b>backward</b> <b>reasoning.</b> But abduction* consists of forward reasoning as well. The generic structure of abductive* argumentation is universal among all cultures, occupations and disciplines...|$|R
40|$|The recent {{adaptation}} of deep neural network-based methods to reinforcement learning and planning domains has yielded remarkable progress on individual tasks. Nonetheless, progress on task-to-task transfer remains limited. In pursuit of efficient and robust generalization, we introduce the Schema Network, an object-oriented generative physics simulator capable of disentangling multiple causes {{of events and}} <b>reasoning</b> <b>backward</b> through causes to achieve goals. The richly structured architecture of the Schema Network can learn the dynamics of an environment directly from data. We compare Schema Networks with Asynchronous Advantage Actor-Critic and Progressive Networks on a suite of Breakout variations, reporting results on training efficiency and zero-shot generalization, consistently demonstrating faster, more robust learning and better transfer. We argue that generalizing from limited data and learning causal relationships are essential abilities on the path toward generally intelligent systems...|$|E
40|$|We {{propose a}} logic-based {{language}} for programming agents that can reason {{about their own}} beliefs {{as well as the}} beliefs of other agents and can communicate with each other. The agents can be reactive, rational/deliberative or hybrid, combining both reactive and rational behaviour. We illustrate the language by means of examples. 1 Introduction Kowalski & Sadri [12] propose an approach to agents within an extended logic programming framework. In the remainder of the paper we will refer to their agents as KS-agents. KS-agents are hybrid in that they exhibit both rational (or deliberative) and reactive behaviour. The reasoning core of KS-agents is a proof procedure that combines forward and backward <b>reasoning.</b> <b>Backward</b> reasoning is used primarily for planning, problem solving and other deliberative activities. Forward reasoning is used primarily for reactivity to the environment, possibly including other agents. The proof procedure is executed within an observe-thinkact cycle that all [...] ...|$|E
40|$|This paper {{attempts}} {{to demonstrate the}} wide variety of characteristic properties of defeasible argumentation, of which nonmonotonicity is one. To do so, we introduce a simple formalism, called abstract argumentation system, with which we discuss different methods for raising arguments: forward <b>reasoning,</b> <b>backward</b> reasoning and, in particular, combinations thereof. Resource-bounded defeasible reasoning is also briefly dealt with (the prefix `defeasible' is essential here). The main goal of this paper is not to tell how this should be done, but to show how these simple procedures suddenly may change in the context of defeasible argumentation. Research area 1985 Mathematics subject classification 68 C 01; 1987 CR classification scheme F. 4. 0, I. 2. 3, - key words and phrases: nonmonotonic reasoning, defeasible argumentation, abstract argumentation system, argumentation sequence, resource-bounded defeasible reasoning. 1. Introduction A defeasible argument is a piece of reasoning that might be [...] ...|$|E
40|$|Abstract. Focusing is {{traditionally}} {{seen as a}} means of reducing inessential non-determinism in backward-reasoning strategies such as uniform proof-search or tableaux systems. In this paper we construct a form of focused derivations forpropositional linear logic that is appropriate for forward reasoning in the inverse method. We show that the focused inverse method conservatively generalizes theclassical hyperresolution strategy for Horn-theories, and demonstrate through a practical implementation that the focused inverse method is considerably fasterthan the non-focused version. 1 Introduction Strategies for automated deduction can be broadly classified as <b>backward</b> <b>reasoning</b> orforward <b>reasoning.</b> Among the <b>backward</b> <b>reasoning</b> strategies we find tableaux and matrix methods; forward reasoning strategies include resolution and the inverse method. The approaches seem fundamentally di fficult to reconcile because the state of a back-ward reasoner is global, while a forward reasoner maintains locally self-contained state...|$|R
40|$|Objective: The role of {{planning}} in binge eating episodes is unknown. We investigated the characteristics {{of planning}} associated with food cues in binging patients. We studied planning based on <b>backward</b> <b>reasoning,</b> reasoning that determines a sequence of actions back to front from the final outcome. Method: A cross-sectional {{study was conducted with}} 20 healthy participants, 20 bulimia nervosa (BN), 22 restrictive (ANR) and 23 binging anorexia nervosa (ANB), without any concomitant impulsive disorder. In neutral/relaxing, binge food and stressful conditions, <b>backward</b> <b>reasoning</b> was assessed with the Race game, promotion of delayed large rewards with an intertemporal discounting task, attention with the Simon task, and repeating a dominant behavior with the Go/No-go task. Results: BN and to a lower extent ANB patients succeeded more at the Race game in food than in neutral condition. This difference discriminated binging from non-binging participants. <b>Backward</b> <b>reasoning</b> in the food condition was associated with lower approach behavior toward food in BN patients, and higher food avoidance in ANB patients. Enhanced <b>backward</b> <b>reasoning</b> in the food condition related to preferences for delayed large rewards in BN patients. In BN and ANB patients the enhanced success rate at the Race game in the food condition was associated with higher attention paid to binge food. Conclusion: These findings introduce a novel process underlying binges: planning based on <b>backward</b> <b>reasoning</b> is associated with binges. It likely aims to reduce craving for binge foods and extend binge refractory period in BN patients, and avoid binging in ANB patients. Shifts between these goals might explain shifts between eating disorder subtypes...|$|R
40|$|This study {{examines}} whether forward reasoning {{provides a more}} appropriate framework for describing audit judgment than <b>backward</b> <b>reasoning.</b> Identifying the appropriate framework is important for future research because forward and <b>backward</b> <b>reasoning</b> are influenced differently by task and knowledge variables. A forward-reasoning framework is presented and evaluated using results from published studies and data from a computerized process-tracing experiment. Findings suggest that auditors rely heavily on forward reasoning, which challenges the assumption that generating and testing hypotheses is {{the primary focus of}} diagnostic reasoning during audit judgment...|$|R
40|$|We {{study the}} problem of endowing logic-based agents that can reason about their own beliefs {{as well as the}} beliefs of other agents with {{communication}} skills. We show how communication performatives from existing agent communication languages as well as their preconditions and eects can be expressed within logic-based agents in terms of the agents' beliefs. We illustrate the resulting language for programming logic-based agents by means of examples. 1 Introduction In an earlier paper [6], we propose an approach to logic-based agents by combining the approach to agents by Kowalski and Sadri [11] and the approach to meta-reasoning by Costantini et al. [5, 4]. Similarly to Kowalski and Sadri's agents, the agents in [6] are hybrid in that they exhibit both rational (or deliberative) and reactive behaviour. The reasoning core of the agents is a proof procedure that combines forward and backward <b>reasoning.</b> <b>Backward</b> reasoning is used primarily for planning, problem solving and other deliber [...] ...|$|E
40|$|A new region-based frame {{interpolation}} {{algorithm is}} proposed based on the segmented motion layers with planar perspective motion models. It is shown that performing the motion model interpolation in the homography parameter space is equivalent to interpolating {{the parameters of the}} real camera motion, which requires decomposition of the homography matrix, under several practically reasonable assumptions. Based on this <b>reasoning,</b> <b>backward</b> and forward motion models from the interpolation frame(s) to the original frames of the sequence are estimated for each motion layer. Layer support maps at the point(s) of interpolation in time are generated by using these interpolated motion models and the layer maps of the neighboring original frames. Finally, pixel intensities of the interpolation frame are determined by a series of conditions on the layer occlusion relations and the intensities at the transformed locations of the original frames. Experimental results show that the proposed algorithm achieves visually pleasing results without blur or halo effects on dynamic scenes with complex motion. Index Terms — Frame rate up-conversion, frame interpolation, motion segmentation, motion model interpolatio...|$|E
40|$|This {{paper offers}} first steps towards a {{typology}} of forms and uses of abductive reasoning in mathematics education. It organises several descriptions of abductive reasoning {{found in the}} literature in terms of their logical forms, the relation between specifics and generalities found in them, and the uses suggested for abductive reasoning. Examples are then given of abductive reasoning in mathematics classrooms, and these examples are described making use of the typology developed. Most people, if you describe a train of events to them, will tell you what the result would be. They can put those events together in their minds, and argue from them that something will come to pass. There are few people, however, who, if you told them the result, would be able to evolve from their own inner consciousness what the steps were which led up to that result. This power is what I mean when I talk of <b>reasoning</b> <b>backward.</b> Sherlock Holmes in Study in Scarlet There is a growing literature on the importance of abductive reasoning i...|$|E
5000|$|However, the <b>backward</b> <b>reasoning</b> technique, {{implemented}} by SLD resolution, used {{to solve problems}} in logic programming languages such as Prolog, treats programs as goal-reduction procedures. Thus clauses of the form: ...|$|R
40|$|International audiencee develop various proof {{techniques}} for {{the synthesis of}} sorting algorithms on binary trees, by extending our previous work on the synthesis of algorithms on lists. Appropriate induction principles are designed and various specific prove-solve methods are experimented, mixing rewriting with assumption-based forward <b>reasoning</b> and goal-based <b>backward</b> <b>reasoning</b> à la Prolog. The proof techniques are implemented in the Theorema system and are used for the automatic synthesis of several algorithms for sorting and for the auxiliary functions, from which we present few here. Moreover we formalize and check some of the algorithms {{and some of the}} properties in the Coq system...|$|R
5000|$|With <b>backward</b> <b>reasoning,</b> an {{inference}} engine can determine whether Fritz is green in four steps. To start, the query is phrased {{as a goal}} assertion {{that is to be}} proved: [...] "Fritz is green".|$|R
40|$|Reverse {{engineering}} of gene networks aims at {{revealing the}} structure of the gene regulation network in a biological system by <b>reasoning</b> <b>backward</b> directly from experimental data. Many methods have recently been proposed for reverse engineering of gene networks by using gene transcript expression data measured by microarray. Whereas the potentials of the methods have been well demonstrated, the assumptions and limitations behind them are often not clearly stated or not well understood. In this review, we first briefly explain the principles of the major methods, identify the assumptions behind them and pinpoint the limitations and possible pitfalls in applying them to real biological questions. With regard to applications, we then discuss challenges in the experimental verification of gene networks generated from reverse engineering methods. We further propose an optimal experimental design for allocating sampling schedule and possible strategies for reducing the limitations of some of the current reverse engineering methods. Finally, we examine the perspectives for the development of reverse engineering and urge the need to move from revealing network structure to the dynamics of biological systems...|$|E
40|$|Current {{theoretical}} and computational models of dopamine-based reinforcement learning are largely {{rooted in the}} classical behaviorist tradition, and envision the organism as a purely reactive recipient of rewards and punishments, with resulting behavior that essentially reflects the sum of this reinforcement history. This framework is missing some fundamental features of the affective nervous system, most importantly, {{the central role of}} goals in driving and organizing behavior in a teleological manner. Even when goal-directed behaviors are considered in current frameworks, they are typically conceived of as arising in reaction to the environment, rather than being in place from the start. We hypothesize that goal-driven cognition is primary, and organized into two discrete phases: goal selection and goal engaged, which each have a substantially different effective value function. This dichotomy can potentially explain a wide range of phenomena, playing a central role in many clinical disorders, such as depression, OCD, ADHD, and PTSD, and providing a sensible account of the detailed biology and function of the dopamine system and larger limbic system, including critical ventral and medial prefrontal cortex. Computationally, <b>reasoning</b> <b>backward</b> from active goals to action selection is more tractable than projecting alternative action choices forward to compute possible outcomes. An explicit computational model of these brain areas and their function in this goal-driven framework is described, as are numerous testable predictions from this framework. Comment: 62 pages, 11 figure...|$|E
40|$|Companies spend {{millions}} of dollars on advertising to boost a brand's image and simultaneously {{spend millions}} of dollars on promotion that many believe calls attention to price and erodes brand equity. We believe this paradoxical situation exists because both advertising and promotion are necessary to compete effectively in dynamic markets. Consequently, brand managers need to account for interactions between marketing activities and interactions among competing brands. By recognizing interaction effects between activities, managers can consider interactivity trade-offs in planning the marketing-mix strategies. On the other hand, by recognizing interactions with competitors, managers can incorporate strategic foresight in their planning, which requires them to look forward and reason backward in making optimal decisions. Looking forward means that each brand manager anticipates how other competing brands are likely to make future decisions, and then by <b>reasoning</b> <b>backward</b> deduces one's own optimal decisions in response to the best decisions to be made by all other brands. The joint consideration of interaction effects and strategic foresight in planning marketing-mix strategies is a challenging and unsolved marketing problem, which motivates this paper. This paper investigates the problem of planning marketing mix in dynamic competitive markets. We extend the Lanchester model by incorporating interaction effects, constructing the marketing-mix algorithm that yields marketing-mix plans with strategic foresight, and developing the continuous-discrete estimation method to calibrate dynamic models of oligopoly using market data. Both the marketing-mix algorithm and the estimation method are general, so they can be applied to any other alternative model specifications for dynamic oligopoly markets. Thus, this dual methodology augments the decision-making toolkit of managers, empowering them to tackle realistic marketing problems in dynamic oligopoly markets. We illustrate the application of this dual methodology by studying the dynamic Lanchester competition across five brands in the detergents market, where each brand uses advertising and promotion to influence its own market share and the shares of competing brands. Empirically, we find that advertising and promotion not only affect the brand shares (own and competitors') but also exert interaction effects, i. e., each activity amplifies or attenuates the effectiveness of the other activity. Normatively, we find that large brands underadvertise and overspend on promotion, while small brands underadvertise and underpromote. Finally, comparative statics reveal managerial insights into how a specific brand should respond optimally to the changes in a competing brand's situation; more generally, we find evidence that competitive responsiveness is asymmetric. continuous-discrete estimation, dynamic competition, interaction effects, marketing-mix planning, strategic foresight, two-point boundary value problem...|$|E
50|$|Backward {{chaining}} (or <b>backward</b> <b>reasoning)</b> is an inference {{method that}} can be described colloquially as working backward from the goal(s). It is used in automated theorem provers, inference engines, proof assistants and other artificial intelligence applications.|$|R
50|$|An {{opportunistic}} {{reasoning system}} may combine {{elements of both}} forward and <b>backward</b> <b>reasoning.</b> It is useful {{when the number of}} possible inferences is very large and the reasoning system must be responsive to new data that may become known.|$|R
40|$|Audit {{judgement}} {{research has}} widely assumed that auditors rely primarily on <b>backward</b> <b>reasoning</b> during analytical procedures but the relative use of forward reasoning {{has not been}} directly examined. The present study explains how auditors use <b>backward</b> and forward <b>reasoning</b> during analytical procedures, discusses evidence from other research suggesting that forward reasoning could be more prevalent, and examines the relative use of forward reasoning during analytical procedures with data from a computerised process-tracing field study. Results suggest that auditors rely extensively on forward reasoning when using analytical procedures. Findings motivate future research that examines when forward and <b>backward</b> <b>reasoning</b> are most effective. Copyright 2004 Accounting and Finance Association of Australia and New Zealand. ...|$|R
40|$|We {{show that}} {{paradoxical}} conclusions {{similar to those}} emerging from <b>reasonings</b> of <b>backward</b> induction can arise also in simultaneous move games with incomplete information. In a static setting, these paradoxes are particularly puzzling, because the usual attempts to avoid the backward induction solution do not work. In a dynamic setting, {{there is a way}} out of the paradoxes, which hinges on a (possibly endogenous) uncertainty over the past behaviour of the players and does not call for a long time-horizon...|$|R
40|$|Backward {{compatibility}} {{of class}} libraries ensures that an old {{implementation of a}} library can safely {{be replaced by a}} new implementation without breaking existing clients. Formal <b>reasoning</b> about <b>backward</b> compatibility requires an adequate semantic model to compare the behavior of two library implementations. In the object-oriented setting with inheritance and callbacks, finding such models is difficult as the interface between library implementations and clients are complex. Furthermore, handling these models in a way to support practical reasoning requires appropriate verification tools. This thesis proposes a formal model for library implementations and a <b>reasoning</b> approach for <b>backward</b> compatibility that is implemented using an automatic verifier. The first part of the thesis develops a fully abstract trace-based semantics for class libraries of a core sequential object-oriented language. Traces abstract from the control flow (stack) and data representation (heap) of the library implementations. The construction of a most general context is given that abstracts exactly from all possible clients of the library implementation. Soundness and completeness of the trace semantics as well as the most general context are proven using specialized simulation relations on the operational semantics. The simulation relations also provide a proof method for <b>reasoning</b> about <b>backward</b> compatibility. The second part of the thesis presents the implementation of the simulation-based proof method for an automatic verifier to check backward compatibility of class libraries written in Java. The approach works for complex library implementations, with recursion and loops, in the setting of unknown program contexts. The verification process relies on a coupling invariant that describes a relation between programs that use the old library implementation and programs that use the new library implementation. The thesis presents a specification language to formulate such coupling invariants. Finally, an application of the developed theory and tool to typical examples from the literature validates the reasoning and verification approach...|$|R
25|$|The {{fact that}} Horn clauses {{can be given}} a {{procedural}} interpretation and, vice versa, that goal-reduction procedures {{can be understood as}} Horn clauses + <b>backward</b> <b>reasoning</b> means that logic programs combine declarative and procedural representations of knowledge. The inclusion of negation as failure means that logic programming is a kind of non-monotonic logic.|$|R
40|$|In this paper, {{we propose}} {{diagnosis}} of steady-state process behaviour using rules {{derived from the}} signed directed graph(SDG) representing the interaction among the process variables. All abnormalities are correlated using <b>backward</b> <b>reasoning</b> through rules to yield a diagnosis. These rules can be added with experimental rules which are obtained from experts on plant operation...|$|R
40|$|We study {{access control}} to web {{services}} in virtual organizations. Accessing a service requires {{a set of}} credentials which is established {{by means of an}} interaction between client and server. We formalize argumentation framework. In the proposed framework goals are derived from desires by forward reasoning, and plans are derived from goals and planning rules by <b>backward</b> <b>reasoning.</b> ...|$|R
5000|$|Abductive logic {{programming}} is a computational framework that extends normal {{logic programming}} with abduction. It separates the theory [...] into two components, {{one of which}} is a normal logic program, used to generate [...] by means of <b>backward</b> <b>reasoning,</b> the other of which is a set of integrity constraints, used to filter the set of candidate explanations.|$|R
40|$|We {{present a}} proof {{procedure}} that combines <b>backward</b> <b>reasoning</b> with logic programs and forward reasoning with integrity constraints. We illustrate {{the use of}} the proof procedure as the inference engine underlying agents. Roughly speaking, the <b>backward</b> <b>reasoning</b> component of the proof procedure is responsible for the deliberative behaviour of agents, whereas the forward reasoning component is responsible for their reactive behaviour. 1 Introduction Recent years have seen a shift in the treatment of agents in artificial intelligence. In conventional approaches, intelligent agents reason and plan within a closed environment, producing a complete plan before they start executing it. In more recent, and arguably more realistic approaches, intelligent agents reason and plan while reacting to and interacting with the external environment (e. g., see [15]). The agent architecture of [6 [...] 8] combines rational, deliberative behaviour and reactivity to the external environment. At the heart of th [...] ...|$|R
40|$|This paper {{explores the}} {{relationship}} between verification of logic programs and imperative programs {{with the aim of}} uncovering the kinds of reasoning used to construct logic programs. We discuss forward reasoning, such as that used for verifying imperative programs using the inductive assertion method, and <b>backward</b> <b>reasoning,</b> such as that used for verifying imperative programs using subgoal induction and logic programs using consequence verification. We argue that consequence verification is often inadequate for Prolog programs because programmers make implicit assumptions about how procedures are called. These assumptions can be made explicit using general type declarations. Verification of logic programs with type declarations can be done in two steps. We show that one corresponds to subgoal induction and the other corresponds to the inductive assertion method. Thus two existing verification methods are combined. The forward and <b>backward</b> <b>reasoning</b> inherent in this method of verificat [...] ...|$|R
40|$|This paper {{develops}} a bi-directional prediction approach {{to predict the}} production parameters and performance of differential fibers based on neural networks and a multi-objective evolutionary algorithm. The proposed method does not require accurate description and calculation for the multiple processes, different modes and complex conditions of fiber production. The bi-directional prediction approach includes the forward prediction and <b>backward</b> <b>reasoning.</b> Particle swam optimization algorithms with K-means algorithm are used to minimize the prediction error of the forward prediction results. Based on the forward prediction, <b>backward</b> <b>reasoning</b> uses the multi-objective evolutionary algorithm to find the reasoning results. Experiments with polyester filament parameters of differential production conditions indicate that the proposed approach obtains good prediction results. The results {{can be used to}} optimize fiber production and to design differential fibers. This study also has important value and widespread application prospects regarding the spinning of differential fiber optimization...|$|R
40|$|With the {{advances}} in sensor and platform technologies, the capability for collecting geospatial data has significantly increased. Large volumes of data {{have been collected}} using remote sensing. While those data are potentially valuable {{for the benefit of}} society, they must be converted to geospatial knowledge before they are useful. The traditional methods — only geospatial experts analyze data — fall far short of today’s increased demands for geospatial knowledge. As a result, significant amounts of data have not even once been analyzed after collection. Recent progress in the geospatial semantic Web has shown promise for developing automatic geospatial knowledge discovery methods for solving application problems, which otherwise require considerable resources. This paper presents an approach for automatically solving geospatial problems in the geospatial semantic Web environment. The approach simulates the process used by geospatial experts who first use <b>backward</b> <b>reasoning</b> from the required knowledge to the available raw data to select a set of available geo-processing functions, and then execute the functions sequentially, starting from raw data, to derive the desired knowledge. This <b>backward</b> <b>reasoning</b> effectively creates a path from raw geospatial data to the desired geospatial knowledge. With rich semantic descriptions of services and the support of ontology, the path can be formed automatically through <b>backward</b> <b>reasoning</b> from the desired result to raw geospatial data using semantic Web services. Such a path can be instantiated to become an executable workflow to generate the result automatically. A prototypical system is implemented to demonstrate the above concept and approach...|$|R
40|$|This paper {{focuses on}} a linguistic-valued {{temporal}} logic based reasoning formalism for dynamically modelling and merging information under uncertainty in some real world systems where the state of a system evolves over time and the transition through states depends on uncertain conditions. We provide forward and <b>backward</b> <b>reasoning</b> algorithms which, respectively, support simulation and query answering. These algorithms are then explained through several examples based on Smart Homes applications...|$|R
40|$|The {{problem of}} {{detecting}} feature interactions in telephone systems design is addressed. The method proposed involves specification {{of the features}} in LOTOS, and uses an analysis technique called <b>backward</b> <b>reasoning.</b> This is is implemented in LOTOS {{by a combination of}} backward and forward execution. A tool to help carry out backward execution is presented. A detailed example of the use of the technique is given, involving the three-way-calling and call-waiting features...|$|R
