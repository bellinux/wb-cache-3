510|166|Public
5|$|Ideas {{from the}} Deep, now {{formally}} established as id Software, {{used some of}} these to prototype ideas for their own games. Adrian Carmack used them to push his preferred, dark art style, while John Carmack began to experiment with 3D computer graphics, which until then was largely the purview of flight simulation games such as Wing Commander (1990). Carmack found that this was {{largely due to the}} limitations of personal computers of the time, which had difficulty displaying a fast action game in 3D due to the number of surfaces it needed to calculate. During 1991, he experimented with limiting the possible surfaces the computer needed to display, creating game levels with walls designed only on a flat grid rather than with arbitrary shapes or angles. He also took the unusual approach of creating the displayed graphics through <b>ray</b> <b>casting,</b> in which only the surfaces visible to the player were calculated rather than the entire area surrounding the player. After six weeks of development, Carmack had created a rudimentary 3D game engine that used animated 2D sprites for enemies. Id Software then used the engine for the April 1991 Softdisk game Hovertank 3D, in which the player drives a tank through a plane of colored walls and shoots nuclear monsters. In the fall of 1991, after the team—sans Wilbur—had relocated to Madison, Wisconsin, and he had largely finished the engine work for Commander Keen in Goodbye, Galaxy, Carmack learned about , a role-playing game in development by Blue Sky Productions. Ultima Underworld was planned to display texture-mapped 3D graphics without Hovertanks restrictions of flat walls and simple lighting. Deciding that he could add texture mapping without sacrificing the engine's speed or greatly increasing the system requirements as Underworld was doing, Carmack enhanced the engine over six weeks from Hovertank 3D for another Softdisk game, the November 1991 Catacomb 3-D. Upon seeing it, Scott Miller of Apogee began to push the team to make a 3D shareware action game.|$|E
25|$|Matrix {{inversion}} plays {{a significant}} role in computer graphics, particularly in 3D graphics rendering and 3D simulations. Examples include screen-to-world <b>ray</b> <b>casting,</b> world-to-subspace-to-world object transformations, and physical simulations.|$|E
25|$|In 1968, Arthur Appel {{described}} the first algorithm {{for what would}} eventually become known as <b>ray</b> <b>casting</b> - a basis point for almost all of modern 3D graphics, {{as well as the}} later pursuit of photorealism in graphics.|$|E
5000|$|... {{supports}} volume {{visualization of}} data via texture and <b>ray</b> <b>cast</b> mappers ...|$|R
5000|$|... a {{technique}} for {{hidden surface removal}} based on finding the first intersection of a <b>ray</b> <b>cast</b> from the eye through each pixel of an image, ...|$|R
40|$|A <b>ray</b> <b>cast</b> {{algorithm}} {{utilizing a}} hierarchical acceleration structure needs {{to perform a}} tree traversal in the hierarchy. In its basic form, executing the traversal requires a stack that holds the nodes that are still to be processed. In some cases, such a stack can be prohibitively expensive to maintain or access, due to storage or memory bandwidth limitations. The stack can, however, be eliminated or replaced with a fixed-size buffer using so-called stackless or short stack algorithms. These require that the traversal can be restarted from root so that the already processed part of the tree is not entered again. For kd-tree <b>ray</b> <b>casts,</b> this is accomplished easily by ray shortening, but the approach does not extend to other kinds of hierarchies such as BVHs. In this paper, we introduce restart trail, a simple algorithmic method that makes restarts possible regardless {{of the type of}} hierarchy by storing one bit of data per level. This enables stackless and short stack traversal for BVH <b>ray</b> <b>casts,</b> where using a full stack or constraining the traversal order have so far been the only options. 1...|$|R
25|$|Optical {{ray tracing}} {{describes}} {{a method for}} producing visual images constructed in 3D computer graphics environments, with more photorealism than either <b>ray</b> <b>casting</b> or scanline rendering techniques. It works by tracing a path from an imaginary eye through each pixel in a virtual screen, and calculating {{the color of the}} object visible through it.|$|E
25|$|Ray tracing is an {{extension}} of the same technique developed in scanline rendering and <b>ray</b> <b>casting.</b> Like those, it handles complicated objects well, and the objects may be described mathematically. Unlike scanline and casting, ray tracing is almost always a Monte Carlo technique, that is one based on averaging a number of randomly generated samples from a model.|$|E
25|$|<b>Ray</b> <b>casting</b> is {{primarily}} used for realtime simulations, {{such as those}} used in 3D computer games and cartoon animations, where detail is not important, or where it is more efficient to manually fake the details {{in order to obtain}} better performance in the computational stage. This is usually the case when a large number of frames need to be animated. The resulting surfaces have a characteristic 'flat' appearance when no additional tricks are used, as if objects in the scene were all painted with matte finish.|$|E
50|$|She {{retired from}} acting in 1953, though her other screen {{appearances}} {{were limited to}} a short film in 1933 and an unbilled appearance in the 1936 serial Flash Gordon, until Fred Olen <b>Ray</b> <b>cast</b> her in his films Scalps (1983) and Biohazard (1985).|$|R
50|$|The central {{performance}} bottleneck in Path Tracing is {{the complex}} geometrical calculation of <b>casting</b> a <b>ray.</b> Importance Sampling {{is a technique}} which is motivated to <b>cast</b> fewer <b>rays</b> through the scene while still converging correctly to outgoing luminance on the surface point. This is done by <b>casting</b> more <b>rays</b> in directions in which the luminance would have been greater anyway. If the density of <b>rays</b> <b>cast</b> in certain directions matches the strength of contributions in those directions, the result is identical, but far fewer <b>rays</b> were actually <b>cast.</b> Importance Sampling is used to match ray density to Lambert's Cosine law, and also used to match BRDFs.|$|R
50|$|Ranjit {{started his}} career with Bengali {{director}} Mrinal Sen's film Interview (1971). He received the International Best Actor Award from Karlovy Vary for this work. He then become a popular romantic hero in the 1970s and featured in memorbale films like Mouchak, Devi Chaudharani, Raag Anuraag, Sayang Siddha. Satyajit <b>Ray</b> <b>cast</b> him in his film Shakha Proshakha, where he {{played the role of}} a young man who was caught between values and tradition.|$|R
500|$|In 1994, Exact {{released}} Geograph Seal for the Japanese Sharp X68000 home computer. An obscure import {{title as}} far as the Western market was concerned, it was nonetheless [...] "a fully 3D polygonal first-person shooter" [...] with innovative platform game mechanics and [...] "free-roaming" [...] outdoor environments. The following year, Exact released its successor for the PlayStation console, Jumping Flash!, which placed more emphasis on its platform elements. Descent (released by Parallax Software in 1995), a game in which the player pilots a spacecraft around caves and factory ducts, was a truly three-dimensional first-person shooter. It abandoned sprites and <b>ray</b> <b>casting</b> in favour of polygons and six degrees of freedom.|$|E
500|$|Wolfenstein 3D (created by id Software and {{released}} in 1992) {{was an instant}} success, fueled largely by its shareware release, and has been credited with inventing the first-person shooter genre. It {{was built on the}} <b>ray</b> <b>casting</b> technology pioneered in earlier games to create a revolutionary template for shooter game design, which first-person shooters are still based upon today. Despite its violent themes, Wolfenstein largely escaped the controversy generated by the later Doom, although it was banned in Germany due to the use of Nazi iconography; and the Super NES version replaced the enemy attack dogs with giant rats. Apogee Software, the publisher of Wolfenstein 3D, followed up its success with [...] in 1993. The game was initially well-received but sales rapidly declined {{in the wake of the}} success of id's Doom, released a week later.|$|E
500|$|Id Software's Hovertank 3D pioneered <b>ray</b> <b>casting</b> {{technology}} in May 1991 to enable faster gameplay than 1980s vehicle simulators; {{and six months}} later Catacomb 3-D introduced another advance, texture mapping, in November 1991. The second game to use texture mapping was , a March 1992 action role-playing game by Looking Glass Technologies that featured a first-person viewpoint and an advanced graphics engine. In October 1990, id developer John Romero learned about texture mapping from {{a phone call to}} Paul Neurath. Romero described the texture mapping technique to id programmer John Carmack, who remarked, [...] "I can do that.", and would feel motivated by Looking Glass's example to do the same in Catacomb 3-D. Catacomb 3-D also introduced the display of the protagonist's hand and weapon (in this case, magical spells) on the screen, whereas previously aspects of the player's avatar were not visible. The experience of developing Ultima Underworld would make it possible for Looking Glass to create the Thief and System Shock series years later.|$|E
50|$|Bobita's notable work {{includes}} Shukhe Thako, Taka Anna Pai, Shorolipi, Manusher Mon, Pich Dhala Path, Noyon Moni, Jonmo Theke Jolchi and Anarkoli. Her acting {{gained the}} attention of the Indian director Satyajit Ray. In 1973, <b>Ray</b> <b>cast</b> Bobita in Ashani Sanket ("Distant Thunder"), his film about the Bengal famine of 1943. Bobita appeared in the lead role of Ananga, the demure wife of the village doctor Gangacharan, who was played by long-time Ray favorite Soumitra Chatterjee.|$|R
3000|$|... of the plane, {{on which}} nodes are located. If the <b>ray</b> is <b>casted</b> in the reverse {{direction}} of the normal vector N [...]...|$|R
50|$|As a {{qualified}} engineer, Chatterjee {{had a job}} in Rajasthan, following which {{he came back to}} Kolkata and joined Sandesh, the Bengali magazine revived by Satyajit Ray. He started his career in the advertisement department of the children's magazine Sandesh. <b>Ray</b> <b>cast</b> him in a cameo in Mahanagar and then famously as the singer Goopy Gyne in Goopy Gyne Bagha Byne. The song Aaha Ki Aananda Aakshe Batashe filmed on him and Rabi Ghosh still stirs the memory of the Bengali film lovers.|$|R
2500|$|The first {{ray tracing}} {{algorithm}} used for rendering was presented by Arthur Appel in 1968. This algorithm {{has since been}} termed [...] "ray casting". The idea behind <b>ray</b> <b>casting</b> is to shoot rays from the eye, one per pixel, and find the closest object blocking the path of that ray. Think of an image as a screen-door, with each square in the screen being a pixel. [...] This is then the object the eye sees through that pixel. [...] Using the material properties {{and the effect of}} the lights in the scene, this algorithm can determine the shading of this object. [...] The simplifying assumption is made that if a surface faces a light, the light will reach that surface and not be blocked or in shadow. [...] The shading of the surface is computed using traditional 3D computer graphics shading models. [...] One important advantage <b>ray</b> <b>casting</b> offered over older scanline algorithms was its ability to easily deal with non-planar surfaces and solids, such as cones and spheres. If a mathematical surface can be intersected by a ray, it can be rendered using <b>ray</b> <b>casting.</b> Elaborate objects can be created by using solid modeling techniques and easily rendered.|$|E
2500|$|Ray tracing's {{popularity}} {{stems from}} its basis in a realistic simulation of lighting over other rendering methods (such as scanline rendering or <b>ray</b> <b>casting).</b> [...] Effects such as reflections and shadows, which {{are difficult to}} simulate using other algorithms, are a natural result of the ray tracing algorithm. The computational independence of each ray makes ray tracing amenable to parallelization.|$|E
50|$|This gallery {{represents}} {{a collection of}} images rendered using high quality volume <b>ray</b> <b>casting.</b> Commonly the crisp appearance of volume <b>ray</b> <b>casting</b> images distinguishes them from output of texture mapping VR due to higher accuracy of volume <b>ray</b> <b>casting</b> renderings.|$|E
25|$|Although {{there is}} yet no {{comparable}} site in Britain, {{it is likely that}} field work will locate other mines, simply by tracing the remains of aqueducts and reservoirs, and often, if not usually, aided by aerial photography. Physical remains like tanks and aqueducts are often recognised by the shadows cast by the structures in oblique lighting conditions. Thus Tank A was first seen in early morning light when the sun's <b>rays</b> <b>cast</b> an oblique light across the hill (Allt Cwmhenog) on which the structure is situated.|$|R
40|$|We {{describe}} an algorithm for occlusion culling by visibility preprocessing. The algorithm intelligently partitions the five-dimensional viewing parameter space using a 5 D tree (a k-D tree with k = 5), such that each leaf {{of the tree}} contains {{a reference to a}} subset of the n scene objects. The visibility of each of the objects is determined using a ray-casting procedure. We show how to minimize the number of <b>rays</b> <b>cast</b> in order to achieve a reliable estimate of the visibility relations, and how to efficiently code the resulting 5 D tree...|$|R
5000|$|<b>Ray</b> was <b>cast</b> in 1925 as {{the lead}} in the opera [...] "Prince of Hawaii" [...] by noted Hawaiian {{composer}} Charles E. King. The opera began touring in California in 1926.|$|R
5000|$|Volume <b>ray</b> <b>casting,</b> {{sometimes}} called volumetric <b>ray</b> <b>casting,</b> volumetric ray tracing, or volume ray marching, is an image-based volume rendering technique. It computes 2D images from 3D volumetric data sets (3D scalar fields). Volume <b>ray</b> <b>casting,</b> which processes volume data, {{must not be}} mistaken with <b>ray</b> <b>casting</b> in the sense used in ray tracing, which processes surface data. In the volumetric variant, the computation doesn't stop at the surface but [...] "pushes through" [...] the object, sampling the object along the ray. Unlike ray tracing, volume <b>ray</b> <b>casting</b> does not spawn secondary rays. When the context/application is clear, some authors simply call it <b>ray</b> <b>casting.</b> [...] Because raymarching does not necessarily require an exact solution to ray intersection and collisions, it is suitable for real time computing for many applications for which ray tracing is unsuitable.|$|E
5000|$|... #Subtitle level 2: Examples of {{high quality}} {{volumetric}} <b>ray</b> <b>casting</b> ...|$|E
5000|$|ImageVis3D - a GPU volume slicing and <b>ray</b> <b>casting</b> {{implementation}} ...|$|E
50|$|Bidirectional Path Tracing {{combines}} both Shooting and Gathering in {{the same}} algorithm to obtain faster convergence of the integral. A shooting path and a gathering path are traced independently, and then {{the head of the}} shooting path is connected to the tail of the gathering path. The light is then attenuated at every bounce and back out into the pixel. This technique at first seems paradoxically slower, since for every gathering sample we additionally trace a whole shooting path. In practice however, the extra speed of convergence far outweighs any performance loss from the extra <b>ray</b> <b>casts</b> on the shooting side.|$|R
40|$|Abstract. We {{reconstruct}} pipe-shaped {{objects from}} {{a set of}} contours, {{each of which is}} extracted from an image representing a slice sampled from 3 D volume data. The contours are formed by connecting the inter-section points between <b>rays</b> <b>cast</b> from a central pixel of an image slice and the boundary of the shape. The edges on the contours are classified into several types, which are exploited in triangulating the contours, thus eliminating most of the floating-point computation from the tiling. Ini-tially, contours of lowest resolution are extracted to reconstruct a lowest-resolution object, which is refined by adding points to the contours. ...|$|R
40|$|The {{original}} publication {{is available}} at www. springerlink. comInternational audienceThe ray-casting of implicit surfaces on GPU has been explored {{in the last few}} years. However, until recently, they were restricted to second degree (quadrics). We present an iterative solution to <b>ray</b> <b>cast</b> cubics and quartics on GPU. Our solution targets efficient implementation, obtaining interactive rendering for thousands of surfaces per frame. We have given special attention to torus rendering since it is a useful shape for multiple CAD models. We have tested four different iterative methods, including a novel one, comparing them with classical tessellation solution...|$|R
5000|$|ImageVis3D - an Open Source GPU volume <b>ray</b> <b>casting</b> {{implementation}} ...|$|E
5000|$|<b>Ray</b> <b>casting</b> {{can refer}} {{to a variety of}} {{problems}} and techniques: ...|$|E
50|$|The {{technique}} of volume <b>ray</b> <b>casting</b> {{can be derived}} directly from the rendering equation. It provides results of very high quality rendering. Volume <b>ray</b> <b>casting</b> is classified as an image-based volume rendering technique, as the computation emanates from the output image and not the input volume data, {{as is the case}} with object-based techniques.|$|E
3000|$|B 2. Search of {{infeasible}} pair for deformation If {{there are}} some source nodes whose His-flag is on, <b>rays</b> are <b>cast</b> from those nodes {{in the direction of}} the plane’s normal vector N [...]...|$|R
40|$|Abstract. The ray-casting of {{implicit}} surfaces on GPU {{has been}} explored {{in the last}} few years. However, until recently, they were restricted to second degree (quadrics). We present an iterative solution to <b>ray</b> <b>cast</b> cubics and quartics on GPU. Our solution targets efficient implementation, obtaining interactive rendering for thousands of surfaces per frame. We have given special attention to torus rendering since it is a useful shape for multiple CAD models. We have tested four different iterative methods, including a novel one, comparing them with classical tessellation solution. Fig. 1. The faces of two bounding boxes are used to trigger the fragment shader responsible for rendering the tori. ...|$|R
5000|$|By {{the time}} Ray signed with United Artists, {{he had grown}} tired of playing young country bumpkin {{characters}} and decided to go against type by casting himself as a romantic leading man. In November 1922, he announced plans to produce an epic historical drama film based on The Courtship of Miles Standish, an 1858 narrative poem by Henry Wadsworth Longfellow. The poem centers around a love triangle between early American settlers John Alden, Miles Standish, and Priscilla Mullens. <b>Ray</b> <b>cast</b> himself as John Alden stating that, [...] "There will be immense satisfaction to me in playing a real character, not the puppet of some author's invention." ...|$|R
