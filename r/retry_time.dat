2|22|Public
50|$|As a minimum, {{the zone}} file must specify the Start of Authority (SOA) record {{with the name}} of the {{authoritative}} master name server for the zone and the email address of someone responsible for management of the name server. The parameters of the SOA record also specify a list of timing and expiration parameters (serial number, slave refresh period, slave <b>retry</b> <b>time,</b> slave expiration time, and the maximum time to cache the record).Some DNS server software, such as BIND, also requires at least one additional name server record. The email address in the SOA RR has the @ symbol replaced by a period. In the zone file, host names that do not end in a period are relative to the origin. For example, in the example above, www refers to www.example.com, and example.com. is example.com, and not example.com.example.com. Names ending with a full stop (or point) are said to be fully qualified domain names.|$|E
30|$|The {{reason is}} that {{schedule}} I has more evenly distributed active times of receivers than schedule III does, and thus, schedule I will be offered with longer <b>retry</b> <b>time</b> (i.e., more opportunities) before its maximum retransmission is hit.|$|E
40|$|Abstract. In {{this paper}} we {{experimentally}} investigate if optimal <b>retry</b> <b>times</b> {{can be determined}} based on models that assume independence of successive tries. We do this using data obtained for HTTP GET. This data provides application-perceived timing characteristics for the various phases of web page download, including response times for TCP connection set-ups and individual object downloads. The data consists of pairs of consecutive downloads for over one thousand randomly chosen URLs. Our analysis shows that correlation exists for normally completed invocations, but is remarkably low for relatively slow downloads. This implies that for typical situations in which retries are applied, models relying on the independence assumption are appropriate. ...|$|R
50|$|To design, {{code and}} test {{all of the}} {{components}} {{that make up a}} robust Notification Services Application-such as notification scheduling, failure detection, <b>retry</b> logic, <b>time</b> zone management, notification grouping, and queue management, adding Notification Services to software applications can be a daunting task.|$|R
50|$|There is a sixth <b>Time</b> Control, called <b>RETRY.</b> This <b>Time</b> Control {{cannot be}} {{triggered}} manually, it is triggered automatically when Blinx is knocked out by an enemy or lost to an infinite chasm. If Blinx holds no RETRYs {{when he is}} knocked out, the game is over.|$|R
40|$|Abstract. The Poster {{presents}} an analytical model of polling in multihop electrical Automatic Meter Reading (AMR) systems. It {{is based on}} a Markov Chain and provides explicit formulas for the probability of each state {{as well as for the}} recurrence time of the initial state from which the throughput of the system is derived. The Poster includes curves showing the behavior of the system as a function of several parameters such as number of hop-by-hop retransmissions, depth of the multihop scheme, probability of <b>retry,</b> Global <b>Time</b> Out and Reconfiguration time. Keywords- Markov Chains, Polling, Multihop, AMR, PLC I...|$|R
5000|$|The {{clicking}} sound itself {{arises from}} the unexpected movement of the disk's read-write actuator. At startup, and during use, the disk head must move correctly {{and be able to}} confirm it is correctly tracking data on the disk. If the head fails to move as expected or upon moving cannot track the disk surface correctly, the disk controller may attempt to recover from the error by returning the head to its home position and then <b>retrying,</b> at <b>times</b> causing an audible [...] "click". In some devices, the process automatically retries, causing a repeated or rhythmic clicking sound.|$|R
40|$|Abstract — We {{consider}} several object sharing synchronization mechanisms including lock-based, lock-free, and wait-free sharing for LNREF [1], {{an optimal}} real-time scheduling algorithm on multiprocessors. We derive LNREF’s minimum-required space cost for wait-free synchronization using the space-optimal waitfree algorithm. We then establish the feasibility conditions for lock-free and lock-based sharing under LNREF, and the concomitant tradeoffs. While the tradeoff between wait-free versus the other sharing is obvious, i. e., {{space and time}} costs, we show that the tradeoff between lock-free and lock-based sharing for LNREF hinges {{on the cost of}} the lock-free <b>retry,</b> blocking <b>time</b> under lock-based. Finally, we numerically evaluate lock-free and lock-based sharing for LNREF. I...|$|R
2500|$|They {{have also}} collaborated with Marion Cotillard for the 2010 Lady Dior campaign. The band wrote the lyrics and plays {{the music for}} the song [...] "The Eyes of Mars", while the actress is on vocals. Kapranos noted that it was {{refreshing}} working with her as {{she had a lot}} of fun going and <b>retrying</b> the song <b>time</b> and time again.|$|R
40|$|The growing {{prevalence}} of e-learning systems and on-line courses has made educational material widely accessible to students of vary-ing abilities, backgrounds and styles. There {{is thus a}} growing need to accomodate for individual differences in such e-learning sys-tems. This paper presents a new algorithm for personliazing educa-tional content to students that combines collaborative filtering algo-rithms with social choice theory. The algorithm constructs a “dif-ficulty ” ranking over questions for a target student by aggregating the ranking of similar students, as measured by different aspects of their performance on common past questions, such as grades, num-ber of <b>retries,</b> and <b>time</b> spent solving questions. It infers a difficulty ranking directly over the questions for a target student, rather than ordering them according to predicted performance, which is prone to error. The algorithm was tested on two large real world data sets containing {{tens of thousands of}} students and a million records. Its performance was compared to a variety of personalization methods as well as a non-personalized method that relied on a domain ex-pert. It was able to significantly outperform all of these approaches according to standard information retrieval metrics. Our approach can potentially be used to support teachers in tailoring problem sets and exams to individual students and students in informing them about areas they may need to strengthen. 1...|$|R
40|$|In {{the article}} is {{discussed}} {{the problem of the}} accessof broad masses of the population to information. The use of speech recognition in the interactive information systems is the most suitable way to make these systems more open and easily available for people. The purpose of our work was to create the functioning speech interfaces in Russian language to information and service systems and to analyze the results. Our efforts resulted in creation of the first voice servers for interactive information and services systems in Russia: computer reservation system Sirena, a system for dispatching of orders for taxi delivery, and a banking system. We developed several analytical models that allow dialogue optimization and control. One of our models, which enable the calculation of the mean number of <b>retries</b> and appropriate <b>time</b> losses in different conditions, is presented in this paper. 1...|$|R
40|$|The {{article is}} {{available}} at: [URL] paper presents a multiserver retrial queueing system with servers kept apart, thereby rendering {{it impossible for}} one to know the status (idle/busy) of the others. Customers proceeding to one channel {{will have to go}} to orbit if the server in it is busy and <b>retry</b> after some <b>time</b> to some channel, not necessarily the one already tried. Each orbital customer, independently of others, chooses the server randomly according to some specified probability distribution. Further this distribution is identical for all customers. We assume that the same ‘orbit’ is used by all retrial customers, between repeated attempts, to access the servers. We derive the system state probability distribution under Poisson arrival process of external customers, exponentially distributed service times and linear retrial rates to access the servers. Several system state characteristics are obtained and numerical illustrations provided...|$|R
40|$|The Distributed Table Manager (DTM) is a {{fast and}} {{efficient}} utility for distributing named binary data structures called Tables, of arbitrary size and structure, around a heterogeneous network of computers {{to a set}} of registered clients. The Tables are transmitted over a UDP network between DTM servers in network format, where the servers perform the conversions to and from host format for local clients. The servers provide clients with synchronization mechanisms, a choice of network data flows, and table options such as keeping table disc copies, shared memory or heap memory table allocation, table read/write permissions, and table subnet broadcasting. DTM has been designed to be easily maintainable, and to automatically recover from the type of errors typically encountered in a large control system network. The DTM system is based on a three level server daemon hierarchy, in which an inter daemon protocol handles network failures, and incorporates recovery procedures which will guarantee table consistency when communications are re-established. These protocols are implemented over a communications layer which performs the data conversions, packet splitting, error-correction with <b>retry,</b> and <b>time</b> out handling. The same communications layer is used to implement the application program interface which calls on the server daemon for client services. DTM is a registration based system, in which communications are established dynamically as needed, and tables are distributed only to the clients who have registered their interest in them. The registration protocols include mechanisms to recover from daemon re-launches, and clean up after aborted clients...|$|R
40|$|Abstract. The paper studies multiserver retrial {{queueing}} {{systems with}} m servers. Arrival {{process is a}} quite general point process. An arriving customer occupies one of free servers. If upon arrival all servers are busy, then the customer waits for his service in orbit, and after random <b>time</b> <b>retries</b> {{more and more to}} occupy a server. The orbit has one waiting space only, and arriving customer, who finds all servers busy and the waiting space occupied, abandons the system. Time intervals between possible retrials are assumed to have arbitrary distribution (the retrial scheme is exactly explained in the paper). The paper provides analysis of this system. Specifically the paper studies optimal number of servers to decrease the loss proportion to a given value. The representation obtained for loss proportion enables us to solve the problem numerically. The algorithm for numerical solution includes effective simulation, which meets the challenge of rare events problem in simulation. Application of the results to call centers is discussed as well...|$|R
40|$|Abstract. The paper studies a multiserver retrial {{queueing}} {{system with}} m servers. Arrival {{process is a}} point process with strictly stationary and ergodic increments. A customer arriving to the system occupies one of the free servers. If upon arrival all servers are busy, then the customer goes to the secondary queue, orbit, and after some random <b>time</b> <b>retries</b> {{more and more to}} occupy a server. A service time of each customer is exponentially distributed random variable with parameter µ 1. A time between retrials is exponentially distributed with parameter µ 2 for each customer. Using a martingale approach the paper provides an analysis of this system. The paper establishes the stability condition and studies a behavior of the limiting queue-length distributions as µ 2 increases to infinity. As µ 2 → ∞, the paper also proves the convergence of appropriate queue-length distributions to those of the associated ‘usual’ multiserver queueing system without retrials. An algorithm for numerical solution of the equations, associated with the limiting queue-length distribution of retrial systems, is provided. Keywords: Multiserver retrial queues, Queue-length distribution, Stochastic calculus, Martingales and semimartingale...|$|R
40|$|This paper {{proposes a}} novel and {{cost-effective}} forward recovery checkpointing scheme for multiprocessor systems with duplex modular redundancy. In our scheme, one processing module is selected to retry the questionable checkpoint, {{and the other}} processing module executes toward the next checkpoint if a mismatched comparison between the two processing modules occurs at any checkpoint. Those schemes using a spare module to <b>retry</b> need much <b>time</b> to initiate the module, and the extra cost is high. Although the traditional rollback scheme retries the questionable checkpoint without any spare module, it has longer average completion time than our scheme for a job under any fault distribution. In our scheme, besides transient faults, permanent faults can be located as well. Experimental results based on our mathematical models demonstrate that, under burst errors, the average completion time of our scheme is reduced by 50 % {{compared with that of}} the traditional rollback and is comparable with that of the scheme using a spare module to retry. In addition, our scheme has the least total execution time (the most cost-effectiveness) among the three schemes under any fault distribution...|$|R
40|$|The {{interest}} in retrial queueing systems mainly lies in their application to telephone systems. This paper studies multiserver retrial queueing systems with n servers. The arrival {{process is a}} quite general point process. An arriving customer occupies one of the free servers. If upon arrival all servers are busy, then the customer waits for his service in orbit, and after a random <b>time</b> <b>retries</b> in order to occupy a server. The orbit has one waiting space only, and an arriving customer, who finds all servers busy and the waiting space occupied, is lost from the system. Time intervals between possible retrials are assumed to have arbitrary distribution (the retrial scheme is explained more precisely in the paper). The paper provides analysis of this system. Specifically the paper studies the optimal number of servers to decrease the loss proportion to a given value. The representation obtained for the loss proportion enables us {{to solve the problem}} numerically. The algorithm for numerical solution includes effective simulation, which meets the challenge of a rare events problem in simulation...|$|R
40|$|Abstract- Cryptography is {{a concept}} to protect data during {{transmission}} over wireless network. Cryptography is used in information security to protect information from unauthorized or accidental disclosure while the information is in transmitting (either electrically or physically) and while information is in storage. The information could be accessed by the unauthorized user for malicious purpose. Therefore, {{it is necessary to}} apply effective encryption/decryption methods to enhance data security. The existing system limits only the total number of users from the unknown remote host to as low as the known remote host. It uses the white list values for tracking legitimate users. But the cookie value expires after certain time period. So the attackers may use different browsers or may try on another machine or may <b>retry</b> after certain <b>time.</b> If any malicious attacks occurred the authenticated user does not know about that. The proposed system uses two algorithms known us Bio-Metric Encryption Algorithm (BEA), Minutiae Extraction Algorithm (MEA). It uses Multi Bio-metric features for authentication purpose. And also this system dynamically generates a new Session Key for each transaction. So the proposed system will protect Dat...|$|R
40|$|The paper studies a multiserver retrial {{queueing}} {{system with}} m servers. Arrival {{process is a}} point process with strictly stationary and ergodic increments. A customer arriving to the system occupies one of the free servers. If upon arrival all servers are busy, then the customer goes to the secondary queue, orbit, and after some random <b>time</b> <b>retries</b> {{more and more to}} occupy a server. A service time of each customer is exponentially distributed random variable with parameter μ_ 1. A time between retrials is exponentially distributed with parameter μ_ 2 for each customer. Using a martingale approach the paper provides an analysis of this system. The paper establishes the stability condition and studies a behavior of the limiting queue-length distributions as μ_ 2 increases to infinity. As μ_ 2 →∞, the paper also proves the convergence of appropriate queue-length distributions to those of the associated `usual' multiserver queueing system without retrials. An algorithm for numerical solution of the equations, associated with the limiting queue-length distribution of retrial systems, is provided. Comment: To appear in "Annals of Operations Research" 141 (2006) 19 - 52. Replacement corrects a small number of misprint...|$|R
40|$|Abstract [...] -Adapting present Web {{services}} to the mobile environment has raised new Quality of Service (QoS) challenges for both service provider and requester. In a mobile Web services (MWS) scenario, a successful service invocation will depend on (1) service application (2) condition of mobile network and (3) capabilities of mobile device. Hence, from a client perspective, {{the availability of a}} service will depend on all three factors. This paper presents an Availability Checking Model (ACM), to determine the availability status of MWS by processing and referring to end-to-end service QoS parameters. This model introduces availability metrics to quantify service availability checking points. These metrics are represented by a XML schema and published as extension to WSDL. We also discuss mechanisms to aggregate server-side, mobile network and client device metrics to calculate the overall availability information. By knowing the end-to-end availability of a service, mobile client may use that information to make necessary decisions such as to proceed with invocation, to look for alternative service, to <b>retry</b> after predefined <b>time</b> or to stop entirely. Besides, this “check before subscribe” approach will help mobile user to save cost as it prevent unnecessary message transactions. For a service provider, this will improve its overall QoS and can be useful reference for managing Service Level Agreement (SLA) ...|$|R
40|$|An {{option is}} a {{short-term}} skill {{consisting of a}} control policy for a specified region of the state space, and a termination condition recognizing leaving that region. In prior work, we proposed an algorithm called Deep Discovery of Options (DDO) to discover options to accelerate reinforcement learning in Atari games. This paper studies an extension to robot imitation learning, called Discovery of Deep Continuous Options (DDCO), where low-level continuous control skills parametrized by deep neural networks are learned from demonstrations. We extend DDO with: (1) a hybrid categorical-continuous distribution model to parametrize high-level policies that can invoke discrete options as well continuous control actions, and (2) a cross-validation method that relaxes DDO's requirement that users specify the number of options to be discovered. We evaluate DDCO in simulation of a 3 -link robot in the vertical plane pushing a block with friction and gravity, and in two physical experiments on the da Vinci surgical robot, needle insertion where a needle is grasped and inserted into a silicone tissue phantom, and needle bin picking where needles and pins are grasped from a pile and categorized into bins. In the 3 -link arm simulation, results suggest that DDCO can take 3 x fewer demonstrations {{to achieve the same}} reward compared to a baseline imitation learning approach. In the needle insertion task, DDCO was successful 8 / 10 times compared to the next most accurate imitation learning baseline 6 / 10. In the surgical bin picking task, the learned policy successfully grasps a single object in 66 out of 99 attempted grasps, and in all but one case successfully recovered from failed grasps by <b>retrying</b> a second <b>time.</b> Comment: Published at CoRL 201...|$|R

