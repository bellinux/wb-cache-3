4893|457|Public
25|$|<b>Ray</b> <b>tracing</b> is an {{extension}} of the same technique developed in scanline rendering and ray casting. Like those, it handles complicated objects well, and the objects may be described mathematically. Unlike scanline and casting, <b>ray</b> <b>tracing</b> is almost always a Monte Carlo technique, that is one based on averaging a number of randomly generated samples from a model.|$|E
25|$|<b>Ray</b> <b>tracing</b> in 3D optical {{systems with}} a finite set of {{rectangular}} reflective or refractive objects is undecidable.|$|E
25|$|<b>Ray</b> <b>tracing</b> in 3D optical {{systems with}} a finite set of {{refractive}} objects {{represented by a}} system of rational linear inequalities is undecidable.|$|E
40|$|A <b>ray</b> <b>trace</b> {{model of}} the light {{trapping}} filtered concentrator spectrum splitting architecture is presented. The scripted <b>ray</b> <b>trace</b> allows for examination of non-idealities in materials and design that were not addressed in previous analytical investigations of this optical design. The design of the angle restricting elements is examined with regards to optical efficiency and system efficiency. In addition, the scripted <b>ray</b> <b>trace</b> enables rapid evaluation of multiple candidate filter sets and optimization of the optical design for each set via a gradient ascent algorithm. A discussion of filter design considerations and insight provided by the <b>ray</b> <b>trace</b> model evaluations is presented...|$|R
5000|$|... #Caption: <b>Ray</b> <b>traced</b> model demonstrating {{specular}} reflection.|$|R
50|$|The {{first public}} {{demonstration}} of the Larrabee architecture {{took place at the}} Intel Developer Forum in San Francisco on September 22, 2009. An early Larrabee port of the former CPU-based research project Quake Wars: <b>Ray</b> <b>Traced</b> has been shown in real-time. The scene contained a <b>ray</b> <b>traced</b> water surface that reflected the surrounding objects like a ship and several flying vehicles accurately.|$|R
25|$|A serious {{disadvantage}} of <b>ray</b> <b>tracing</b> is performance (while it can in theory be faster than traditional scanline rendering depending on scene complexity vs. number of pixels on-screen). Scanline algorithms and other algorithms use data coherence to share computations between pixels, while <b>ray</b> <b>tracing</b> normally starts the process anew, treating each eye ray separately. However, this separation offers other advantages, {{such as the}} ability to shoot more rays as needed to perform spatial anti-aliasing and improve image quality where needed.|$|E
25|$|<b>Ray</b> <b>tracing</b> in 3D optical {{systems with}} a finite set of {{reflective}} or partially reflective objects {{represented by a}} system of rational linear inequalities is PSPACE-hard.|$|E
25|$|At SIGGRAPH 2009, Nvidia {{announced}} OptiX, a free API for real-time <b>ray</b> <b>tracing</b> on Nvidia GPUs. The API exposes seven programmable {{entry points}} within the <b>ray</b> <b>tracing</b> pipeline, allowing for custom cameras, ray-primitive intersections, shaders, shadowing, etc. This flexibility enables bidirectional path tracing, Metropolis light transport, {{and many other}} rendering algorithms that cannot be implemented with tail recursion. Nvidia has shipped over 350,000,000 OptiX capable GPUs as of April 2013. OptiX-based renderers are used in Adobe AfterEffects, Bunkspeed Shot, Autodesk Maya, 3ds max, and many other renderers.|$|E
5000|$|... #Caption: A {{model of}} a wine glass <b>ray</b> <b>traced</b> with photon mapping to show caustics.|$|R
5000|$|... #Caption: A {{computer-generated image}} of a wine glass <b>ray</b> <b>traced</b> with photon mapping to {{simulate}} caustics ...|$|R
5000|$|Volumetric Shadows {{as well as}} <b>ray</b> <b>traced</b> {{hard and}} soft shadows as well as ambient {{occlusion}} support.|$|R
25|$|For any {{dimension}} {{equal to or}} greater than 2, <b>ray</b> <b>tracing</b> with a finite set of parallel and perpendicular reflective surfaces represented by rational linear inequalities is in PSPACE.|$|E
25|$|<b>Ray</b> <b>tracing</b> in 3D optical {{systems with}} a finite set of {{reflective}} or partially reflective objects {{represented by a}} system of linear inequalities, some {{of which can be}} irrational is undecidable.|$|E
25|$|Scenes in <b>ray</b> <b>tracing</b> are {{described}} mathematically by a programmer or by a visual artist (typically using intermediary tools). Scenes may also incorporate data from images and models captured by means such as digital photography.|$|E
40|$|A new {{calculation}} method of rainbow angles for wavelengths is proposed, {{which consists of}} a <b>ray</b> <b>trace</b> simulation and a phase shift calculation. Because supernumeraries inside the primary bow is caused by optical interference, a simple <b>ray</b> <b>trace</b> method {{is not able to}} treat the phenomena. However introducing an idea of complex intensity according to phase shift, we can simulate the rainbow with good approximation and less amount of calculatio...|$|R
40|$|Stray light {{analysis}} {{has been carried}} out for the main laser section of the National Ignition Facility main laser section using a comprehensive non-sequential <b>ray</b> <b>trace</b> model supplemented with additional <b>ray</b> <b>trace</b> and diffraction propagation modeling. This paper describes the analysis and control methodology, gives examples of ghost paths and required tilted lenses, baffles, absorbers, and beam dumps, and discusses analysis of stray light �pencil beams� in the system...|$|R
5000|$|There {{cannot be}} an apple-to-apples {{performance}} {{comparison between the}} original and the <b>ray</b> <b>traced</b> version due to the additional special effects, but in general the frame rates on the original, rasterized version are several factors higher and usually over 100 frames per second on high-end graphics cards of 2009. The reported performance numbers in a resolution of 1280×720 of the <b>ray</b> <b>traced</b> version have been given {{for a variety of}} systems: ...|$|R
25|$|Some {{topics in}} {{computer}} graphics include user interface design, sprite graphics, vector graphics, 3D modeling, shaders, GPU design, implicit surface visualization with <b>ray</b> <b>tracing,</b> and computer vision, among others. The overall methodology depends {{heavily on the}} underlying sciences of geometry, optics, and physics.|$|E
25|$|If {{wavelength}} {{is smaller}} than the textured size, the reflection reduction can be explained {{with the help of}} the geometric optics approximation: rays should be reflected many times before they are sent back toward the source. In this case the reflection can be calculated using <b>ray</b> <b>tracing.</b>|$|E
25|$|<b>Ray</b> <b>tracing</b> is a {{technique}} for generating an image by tracing the path of light through pixels in an image plane. The technique is capable of producing a very high degree of photorealism; usually {{higher than that of}} typical scanline rendering methods, but at a greater computational cost.|$|E
2500|$|<b>Ray</b> <b>traced</b> {{images with}} hidden surface elimination. This site {{provides}} a good description of methods of visualizing 4D solids.|$|R
40|$|Light can be coupled {{out of a}} {{waveguide}} to {{a focused}} point by a focusing grating coupler and has possible applications in optical data storage. The grating can be fabricated with either e-beam techniques or holographic techniques. Two design methods are demonstrated that model the focusing grating coupler with holographic optical elements. Both methods take a geometrical optics approach to designing the holographic optical elements and both methods make use of commercially available <b>ray</b> <b>trace</b> programs. The first method uses complicated non-rotationally symmetric construction optics and requires either a modified <b>ray</b> <b>trace</b> program or special user defined surfaces. The second method involves a much simpler approach which did not require any changes to an existing <b>ray</b> <b>trace</b> program and requires only rotationally symmetric elements to correct the aberrations...|$|R
40|$|While large {{investments}} {{are made in}} sophisticated graphics hardware, most realistic rendering is still performed off-line using <b>ray</b> <b>trace</b> or radiosity systems. A coordinated use of hardware-provided bitplanes and rendering pipelines can, however, approximate <b>ray</b> <b>trace</b> quality illumination effects in a user-interactive environment, {{as well as provide}} the tools necessary for a user to declutter such a complex scene. A variety of common <b>ray</b> <b>trace</b> and radiosity illumination effects are presented using multi-pass rendering in a pipeline architecture. We provide recursive reflections through the use of secondary viewpoints, and present a method for using a homogeneous 2 -D projective image mapping to extend this method for refractive transparent surfaces. This paper then introduces the Dual Z-buffer, or DZ-buffer, an evolutionary hardware extension which, along with current framebuffer functions such as stencil planes and accumulation buffers, provides the hardware platform to render non-refr [...] ...|$|R
25|$|The {{realism of}} all {{rendering}} methods can be evaluated as an approximation to the equation. <b>Ray</b> <b>tracing,</b> {{if it is}} limited to Whitted's algorithm, {{is not necessarily the}} most realistic. Methods that trace rays, but include additional techniques (photon mapping, path tracing), give far more accurate simulation of real-world lighting.|$|E
25|$|Optical <b>ray</b> <b>tracing</b> {{describes}} {{a method for}} producing visual images constructed in 3D computer graphics environments, with more photorealism than either ray casting or scanline rendering techniques. It works by tracing a path from an imaginary eye through each pixel in a virtual screen, and calculating {{the color of the}} object visible through it.|$|E
25|$|Although it does handle {{interreflection}} {{and optical}} effects such as refraction accurately, traditional <b>ray</b> <b>tracing</b> {{is also not}} necessarily photorealistic. True photorealism occurs when the rendering equation is closely approximated or fully implemented. Implementing the rendering equation gives true photorealism, as the equation describes every physical effect of light flow. However, this is usually infeasible given the computing resources required.|$|E
40|$|A {{systematic}} {{performance analysis}} of aplanatic Cassegrainian telescopes {{has been accomplished}} {{by means of a}} <b>ray</b> <b>trace</b> program. The results indicate that the available field angle for a given geometric spot size is, to a very close approximation, a function of the relative back focal distance only. Image curvatures, as computed by third-order theory and by the <b>ray</b> <b>trace</b> program, were found to be in very close agreement. Image curvature is plotted {{as a function of the}} ray height ratio for a wide range of secondary magnification...|$|R
50|$|There {{cannot be}} an apple to apple {{performance}} {{comparison between the}} original and the <b>ray</b> <b>traced</b> version due to the additional special effects, but in general the frame rates on the original, rasterized version are higher and usually over 100 frames per second on high-end graphics cards of 2010. The reported performance numbers in a resolution of 1280x720 of the <b>ray</b> <b>traced</b> version in the cloud-based setup are 40-80 frame/s (depending on the scene) for a small laptop that displayed the game in a public demonstration.|$|R
5000|$|Glass: To {{demonstrate}} {{the properties of}} a <b>ray</b> <b>traced</b> glass shader a dome has been shown consisting of a glass surface that correctly reflects the surrounding environment including all dynamic objects.|$|R
25|$|Path tracing, {{occasionally}} {{referred to}} as Monte Carlo <b>ray</b> <b>tracing,</b> renders a 3D scene by randomly tracing samples of possible light paths. Repeated sampling of any given pixel will eventually cause {{the average of the}} samples to converge on the correct solution of the rendering equation, {{making it one of the}} most physically accurate 3D graphics rendering methods in existence.|$|E
25|$|Ray {{transfer}} matrix analysis (also known as ABCD matrix analysis) {{is a type}} of <b>ray</b> <b>tracing</b> technique used in the design of some optical systems, particularly lasers. It involves the construction of a ray {{transfer matrix}} which describes the optical system; tracing of a light path through the system can then be performed by multiplying this matrix with a vector representing the light ray. The same analysis is also used in accelerator physics to track particles through the magnet installations of a particle accelerator, see Beam optics.|$|E
25|$|Mirrors with curved {{surfaces}} can be modelled by <b>ray</b> <b>tracing</b> {{and using}} the law of reflection at each point on the surface. For mirrors with parabolic surfaces, parallel rays incident on the mirror produce reflected rays that converge at a common focus. Other curved surfaces may also focus light, but with aberrations due to the diverging shape causing the focus to be smeared out in space. In particular, spherical mirrors exhibit spherical aberration. Curved mirrors can form images with magnification greater than or less than one, and the magnification can be negative, indicating that the image is inverted. An upright image formed by reflection in a mirror is always virtual, while an inverted image is real and can be projected onto a screen.|$|E
5000|$|... #Caption: A <b>ray</b> <b>trace</b> {{through a}} prism with apex angle α. Regions 0, 1, and 2 have indices of {{refraction}} , , and , and primed angles [...] indicate the ray's angle after refraction.|$|R
5000|$|Rewired is {{the only}} Belgian annual demoparty, which is {{organised}} since 2008. Typical competitions include PC demos and intros, hand-made and <b>ray</b> <b>traced</b> graphics, [...] "wild", music and [...] "oldskool" [...] competitions.|$|R
40|$|A {{standard}} data format for the archival and transport of x-ray events generated by <b>ray</b> <b>trace</b> models is described. Upon review and acceptance by the Advanced X-ray Astrophysics Facility (AXAF) Software Systems Working Group (SSWG), this standard shall become the official AXAF data format for <b>ray</b> <b>trace</b> events. The Flexible Image Transport System (FITS) {{is well suited}} {{for the purposes of}} the standard and was selected to be the basis of the standard. FITS is both flexible and efficient and is also widely used within the astronomical community for storage and transfer of data. In addition, software to read and write FITS format files are widely available. In selecting quantities to be included within the <b>ray</b> <b>trace</b> standard, the AXAF Mission Support team, Science Instruments team, and the other contractor teams were surveyed. From the results of this survey, the following requirements were established: (1) for the scientific needs, each photon should have associated with it: position, direction, energy, and statistical weight; the standard must also accommodate path length (relative phase), and polarization. (2) a unique photon identifier is necessary for bookkeeping purposes; (3) a log of individuals, organizations, and software packages that have modified the data must be maintained in order to create an audit trail; (4) a mechanism for extensions to the basic kernel should be provided; and (5) the <b>ray</b> <b>trace</b> standard should integrate with future AXAF data product standards...|$|R
