8|1|Public
50|$|Alina is a Point of Sale Malware or POS <b>RAM</b> <b>Scraper</b> {{that is used}} by cybercriminals {{to scrape}} credit card and debit card {{information}} from the point of sale system. It first started to scrape information in late 2012. It resembles JackPOS Malware.|$|E
50|$|PandaLabs {{discovered}} this malware and it infects {{the point of}} sale system to breach credit and debit card details. PunkeyPOS Malware uses two functions such as keylogger and <b>RAM</b> <b>Scraper</b> to steal information at Point of Sale Terminal. Once the information is stolen, it is encrypted and sent to cybercriminal’s Control and Command Server (C&C).|$|E
5000|$|PunkeyPOS is a {{new type}} of Point of Sale Malware which was {{recently}} discovered by PandaLabs. This new Point of Sale Malware infects the Point of Sale(POS) Systems with two types of malware applications - keylogger and <b>RAM</b> <b>Scraper.</b> [...] PunkeyPOS gets installed into the computer automatically without the knowledge of the user, in a similar manner as other POS malware.|$|E
50|$|The {{magnetic}} stripe of payment cards hold three different data tracksTrack 1, Track 2 and Track 3.The POS <b>RAM</b> <b>scrapers</b> {{were created to}} implement the use of expression matches to gain access and collect the Track 1 and Track 2 card data from the RAM process memory. <b>RAM</b> <b>scrapers</b> also use Luhn algorithm to reach access and ex-filtrate victim's card data.|$|R
5000|$|Unlike other POS malware, FastPOS {{does not}} store the {{information}} locally {{to send it}} to the cyber thieves periodically. [...] The variant POS malware executes the attack on the target through infected websites or through Virtual Network Computing (VNC) or via file sharing service. The stolen data is instantly transferred to the Control and Command Server that is hardcoded by the hacker. The POS malware consists of two components- a keylogger and a <b>RAM</b> <b>scraper.</b> [...] The logged keystrokes are stored in memory and transmitted to the attacker when the Enter key is pressed and are not stored in a file of the infected system. The stolen data can be user credentials, payment information which depends on the business procedures. The <b>RAM</b> <b>scraper</b> is devised to steal only credit card data. [...] The memory scraper is designed to verify the service code of the credit card to help remove out cards that demands PINS.|$|E
5000|$|The {{keylogger}} captures {{and records}} the keystrokes {{made at the}} POS terminals in the retail stores. It captures data only related to credit cards. The <b>RAM</b> <b>Scraper</b> reads {{the memory of the}} system processes in the POS terminals. The information in the magnetic strips on the cards gets stored in the POS terminal/ device memory and this stolen information is then encrypted and forwarded to the cybercriminal’s Control and Command Server (C&C).|$|E
50|$|Malumpos is a {{point of}} sale malware that are {{designed}} to steal or scrape customer’s credit and debit card detail from point of sale system. These are designed {{in a way that it}} records point of sale’s data which is running in an Oracle MICROS payment system of the restaurant. The collected data has been used in 333,000 customer sites around the world. Malumpos Malware targets hotels and other US businesses and put the retail customers at risk. This POS <b>RAM</b> <b>Scraper</b> is written in the Delphi programming language. Malumpos monitors, processes, scrapes the stolen data of the infected POS system and the RAM. First it stores the stolen credit or debit card details of the customer from the infected point of sale system once it is swiped. Then it sends the data to the cybercriminal to empty the customer bank balance or the details are sold to the black market.|$|E
40|$|Abstract. Modern {{software}} ecosystem is data-centric. Data exfiltration {{due to the}} at-tacks of Memory Scraper type malwares is {{an emerging}} threat. In this paper, we set up an appropriate mathematical model capturing the threat such attacks pose to Identity Based Cryptosystems (IBE). Following the formalism, we demonstrate an attack on pop-ular Boneh-Franklin CCA 2 secure IBE construction that compels us to relook the fact of CCA 2 being the de-facto standard of security. We offer two constructions, one identity based and another public-key based (PKE) encryption schemes capable of withstand-ing <b>Ram</b> <b>Scraper</b> attacks. Our design assumes a hybrid system equipped with a bare minimal ‘Trusted Platform Module ’ (TPM) that can only perform group exponentiation operation. Building systems to implement our IBE/PKE protocols should be feasible as well as efficient from practical standpoint...|$|E
40|$|Abstract. Security of an {{encryption}} system is formally established through {{the properties of}} an abstract game played between a challenger and an adversary. During the game, the adversary will be provided with all information that he could obtain in an attack model so that the adversary is fully empowered {{to carry out the}} break. The information will be provided to the adversary through the answers of appropriately defined oracle queries. Thus, during the game, adversary will ask various oracle queries and obtain the related responses and have them at his disposal to effect a break. This kind of interaction between challenger and adversary is called as training to the adversary. For example, in the lunch time attack model, the adversary may ask encryption as well as decryption oracle queries. The indistinguishability of ciphertext under this model (IND-CCA 2 model) is considered to offer strongest security for confidentiality. In the recent past, an adversary could obtain several additional information than what he could normally obtain in the CCA 2 model, thanks to the availability of powerful malwares. In order to realistically model the threats posed by such malwares, we need to empower the adversary with answers to few other kinds of oracles. This paper initiates such a research to counter malwares such as RAM scrapers and extend the CCA 2 model with additional oracles to capture the effect of RAM scrapers precisely. After discussing the new kind of attack/threat and the related oracle, we show that the transformation in [8] that yields a CCA 2 secure system does not offer security against <b>RAM</b> <b>scraper</b> based attack. We refer the decryption oracle as glass box decryption oracle. We then propose two new schemes that offer security against glassbox decryption and also establish the formal security proof for the new schemes in random oracle and standard model...|$|E

