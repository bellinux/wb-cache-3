379|260|Public
5|$|Buchanan {{resented the}} fact that Breckinridge had {{supported}} both Pierce and Douglas before endorsing his nomination. Relations between the two were further strained when, upon asking for a private interview with Buchanan, Breckinridge was told {{to come to the}} White House and ask for Harriet Lane, who acted as the mansion's host for the unmarried president. Feeling slighted by the response, Breckinridge refused to carry out these instructions; later, three of Buchanan's intimates informed Breckinridge that requesting to speak to Miss Lane was actually a secret instruction to White House staff to usher the <b>requestor</b> into a private audience with the president. They also conveyed Buchanan's apologies for the misunderstanding.|$|E
25|$|Windows CardSpace {{also keeps}} a {{track of all}} Identities used, and {{represents}} them as visually identifiable virtual cards, accessible to the user from a centralized location. Whenever an application requests any identity, Windows CardSpace informs the user about which identity is being used and needs confirmation before it provides the <b>requestor</b> with the identity.|$|E
25|$|A {{relative}} or bona fide {{friend of the}} offender may demand or request the body within 48 hours after death, upon payment of a fee not to exceed US$25 for the mortician's services in embalming the deceased; once TDCJ receives the receipt the body shall be released to the <b>requestor</b> or his/her authorized agent.|$|E
30|$|As {{the number}} of <b>requestors</b> increases, the {{delivery}} ratios of three algorithms decrease generally. In terms of the two compared algorithms, the more the <b>requestors,</b> the higher the queuing time is. This leads to higher probability of timeout. As to DSV-BD, the increase of <b>requestors</b> means the increase of hops in the delivery path and more timeout happens due to increasing delivery time. As is shown from the figure above, the delivery ratio of DSV-BD is 17.3 % {{higher than that of}} greedy and 15.9 % higher than that of deadline-pri, which shows the higher delivery reliability with various numbers of <b>requestors.</b>|$|R
40|$|Service-based {{software}} can be exploited by potentially untrustworthy service <b>requestors</b> while providing services. Given that, {{it is important}} to identify, analyze the trust re-lationships between service providers and <b>requestors,</b> and incorporate them into the service-based software. Treating trust as a nonfunctional requirement (NFR) dur-ing software development and monitoring allows clarifying these relationships and measuring the trustworthiness of service <b>requestors.</b> This analysis is facilitated by incorporating trust scenarios and trust models into the software. A trust scenario describes a trust relationship between interested parties based on a specific context. A trust model provides trust equations to measure the trustworthiness of service <b>requestors</b> based on the analysis of service-based interactions. Although much re-search has been devoted to monitor service quality, to date, no approach has been proposed to develop and automatically monitor service providing software from trust perspectives. In this thesis, we propose a trust-aware service-based software development frame...|$|R
5000|$|How many service {{deliverables}} {{are making}} it to their targeted service <b>requestors</b> (i.e. service-specific supply) ...|$|R
25|$|Serum {{from the}} DoDSR may be {{requested}} by clinicians within the Military Health System to aid diagnosis and guide clinical management. Serum {{may also be}} released to clinicians outside the Military Health System provided a physician in the Military Health System in the same specialty as the <b>requestor</b> validates the clinical relevance of the requested use prior {{to the release of}} any serum.|$|E
2500|$|The client-based {{version of}} Btrieve for Windows could access {{server-based}} versions of Btrieve via a DOS-based [...] "requester". The <b>requestor</b> required {{the use of}} DOS Protected Mode Interface (DPMI) which allowed program access to DOS extended memory accessible only via the CPU's Protected Mode.|$|E
2500|$|In {{addition}} to handling whole-disk failures, RAID-Z can also detect and correct silent data corruption, offering [...] "self-healing data": when reading a RAID-Z block, ZFS compares it against its checksum, {{and if the}} data disks did not return the right answer, ZFS reads the parity and then figures out which disk returned bad data. Then, it repairs the damaged data and returns good data to the <b>requestor.</b>|$|E
5000|$|Service level {{agreement}} (SLA) {{data and}} information that helps service providers set expectations for their service <b>requestors</b> ...|$|R
5000|$|Client-server model—Client-server {{computing}} refers broadly to any {{distributed application}} that distinguishes between service providers (servers) and service <b>requestors</b> (clients).|$|R
5000|$|Prepares {{monthly data}} sets and {{transfers}} them by network to {{participants in the}} U.S., Australia and France, {{as well as to}} <b>requestors.</b>|$|R
2500|$|Issa {{argued in}} favor of the bill because it [...] "shifts the burden of proof from the public <b>requestor</b> seeking {{information}} about a government agency...to the government being open and transparent unless it has a good reason to withhold." [...] The bill passed unanimously in the United States House of Representatives on February 25, 2014. However, a nearly identical senate bill failed when it was tabled by House Speaker John Boehner.|$|E
50|$|If the {{employee}} wishes for a <b>requestor</b> {{to see his}} or her salary history, {{the employee}} logs on and obtains a 6-digit code, {{which he or she}} passes on to the <b>requestor.</b> Without that particular 6-digit code, the <b>requestor</b> is not allowed to view salary of the employee.|$|E
5000|$|WS-Federation Active <b>Requestor</b> Profile is a Web Services {{specification}} - {{intended to}} work with the WS-Federation specification - which defines how identity, authentication and authorization mechanisms work across trust realms. The specification deals specifically with how applications, such as SOAP-enabled applications, make requests using these mechanisms. By way of contrast, WS-Federation Passive <b>Requestor</b> Profile deals with [...] "passive requestors" [...] such as web-browsers. WS-Federation Active <b>Requestor</b> Profile was created by IBM, BEA Systems, Microsoft, VeriSign, and RSA Security.|$|E
3000|$|... allow <b>requestors</b> to {{aggregate}} their roles and attributes from multiple sources of authority so that finer grained privacy policies can be created; [...]...|$|R
25|$|General Accounting Office. Labor-Management Relations: Strikes and the Use of Permanent Strike Replacements in the 1970s and 1980s. Report to Congressional <b>Requestors,</b> GAO/HRD-91-2, January 1991.|$|R
5000|$|... pickdns [...] - [...] a database-driven server that chooses from {{matching}} records {{depending on}} the <b>requestor's</b> location. (This feature is now a standard part of tinydns.) ...|$|R
5000|$|WS-Federation Passive <b>Requestor</b> Profile is a Web Services {{specification}} - {{intended to}} work with the WS-Federation specification - which defines how identity, authentication and authorization mechanisms work across trust realms. The specification deals specifically with how applications, such as web browsers, make requests using these mechanisms. In this context, the web-browser is known as a [...] "passive requestor." [...] By way of contrast, WS-Federation Active <b>Requestor</b> Profile deals with [...] "active requestors" [...] such as SOAP-enabled applications. WS-Federation Passive <b>Requestor</b> Profile was created by IBM, BEA Systems, Microsoft, VeriSign, and RSA Security.|$|E
50|$|SRT = Single <b>Requestor</b> Terminal program. Not a MRT.|$|E
50|$|Door-in-the-face {{was first}} {{introduced}} in 1975 by Cialdini and colleagues. The opposite of foot-in-the-door, in the door-in-the-face technique, the <b>requestor</b> asks a large objectionable request which is denied by the target instead of gaining compliance by asking a smaller easy request. The <b>requestor</b> seeking compliance ask a smaller more reasonable request.|$|E
40|$|An {{empirical}} {{analysis of}} the first ten years of decisions by the Board Patent Appeals and Interferences regarding inter partes patent reexamination appeals was conducted. The analysis of 101 cases focused on answering three broad questions: (1) How accurate are the specialist patent examiners of the Central Reexamination Unit of the U. S. Patent and Trademark Office? (2) Do patent owners or third party <b>requestors</b> fare better in appeals of decisions in inter partes reexamination proceedings? (3) Which types of appeals {{are more likely to}} be successful? The examiners’ determinations were upheld more than three fourths of the time; third party <b>requestors</b> tended to be more successful than patent owners at winning appeals; and appeals solely by third party <b>requestors</b> of unadopted grounds of rejection were the most successful type of appeal. These historical observations can be used to predict the success rate for appeals of Patent Trial and Appeal Board decisions in Inter Partes Review (IPR) proceedings, which was implemented in September 2012. Appeals of IPR decisions by third party <b>requestors</b> are predicted to have a better success rate at maintaining patent claim rejections and adding new grounds of rejection than appeals by patent owners will have at receiving reversal of patent claim rejections...|$|R
5000|$|Application for an EudraCT {{number is}} made via the EudraCT website. To {{generate}} the EudraCT number some basic {{information about the}} <b>requestor's</b> organisation and the trial is required: ...|$|R
40|$|A {{guide is}} {{presented}} to assist <b>requestors</b> in formulating and submitting the required Complete Package for Information Resources (IR) acquisitions. Advance discussions with cognizant procurement personnel are strongly recommended for complex IR requirements or for those <b>requestors</b> new to the acquisition process. Open Market means the requirement either is not available on GSA Schedule Contract or exceeds the $ 300, 000 threshold and/or the quantity Maximum Order Limitation of the GSA Schedule Contract. Only open market contract acquisitions (i. e., {{in excess of the}} $ 25, 000 small purchase threshold), are addressed...|$|R
50|$|For {{applications}} using digitally signed data, the <b>requestor</b> {{signs the}} digital hash with its private key and submits the digital signature to the TSA, which performs the same operations {{as in the}} previous example: bind the submitted data with a timestamp using its cryptographic binding and return the results to the <b>requestor.</b>|$|E
5000|$|... suspend - The suspend {{operation}} {{enables a}} <b>requestor</b> to disable an object.|$|E
5000|$|If {{the target}} {{finds that the}} <b>requestor</b> is lying or being {{deceptive}} about being the last one, it will create a negative outlook on the person and the organization {{that he or she}} represents. Even though losing some of the effectiveness the <b>requestor</b> could state that they are [...] "close to their goal" [...] or [...] "almost there".|$|E
40|$|As Web {{services}} are growing rapidly and as their adoption {{by a large}} number of business organizations is increasing, scalability and performance management of Web services environments are of paramount importance. This chapter proposes a scalable QoS-aware architecture, called QoSMA, for the management of QoS-aware Web services. The aim of this architecture is to provide QoS management support for both Web services’ providers and consumers. The proposed architecture is based on the commonly used notion of QoS brokerage service. The QoS broker mediates between service <b>requestors</b> and service providers. Its responsibilities include performance monitoring of Web services, supporting users in Web services selection based on their QoS requirements, and the negotiation of QoS issues between <b>requestors</b> and providers. The QoSMA architecture provides the following benefits: first, it allows the automation of QoS management and QoS monitoring for both providers and clients. Second, the scalability of the architecture allows for better handling of the increasing demand while maintaining the pre-agreed on QoS between service <b>requestors</b> and providers...|$|R
40|$|PURPOSE – This paper {{seeks to}} {{investigate}} how {{the concept of a}} trust level is used in the access control policy of a web services provider in conjunction with the attributes of users. DESIGN/METHODOLOGY/APPROACH – A literature review is presented to provide background to the progressive role that trust plays in access control architectures. The web services access control architecture is defined. FINDINGS – The architecture of an access control service of a web service provider consists of three components, namely an authorisation interface, an authorisation manager, and a trust manager. Access control and trust policies are selectively published according to the trust levels of web services <b>requestors.</b> A prototype highlights the incorporation of a trust level in the access control policy as a viable {{solution to the problem of}} web services access control, where decisions of an autonomous nature need to be made, based on information and evidence. RESEARCH LIMITATIONS/IMPLICATIONS – The WSACT architecture addresses the selective publication of policies. The implementation of sophisticated policy-processing points at each web service endpoint, to automatically negotiate about policies, is an important element needed to complement the architecture. PRACTICAL IMPLICATIONS – The WSACT access control architecture illustrates how access control decisions can be made autonomously by including a trust level of web services <b>requestors</b> in an access control policy. ORIGINALITY/VALUE – The WSACT architecture incorporates the trust levels of web services <b>requestors</b> and the attributes of users into one model. This allows web services providers to grant advanced access to the users of trusted web services <b>requestors,</b> in contrast with the limited access that is given to users who make requests through web services <b>requestors</b> with whom a minimal level of trust has been established. Department of Labour, South Afric...|$|R
40|$|AbstractWeb Services are {{composed}} by linking together service providers and <b>requestors.</b> To ensure interoperability, the <b>requestor's</b> requirements for a service {{have to be}} matched against a service description offered by the provider. Besides data types and operation signatures, this requires service specifications to include behavioral information, like contracts specifying pre- and post-conditions of (required or provided) operations. In this paper, we propose to visualize contracts by graph transformation rules which blend well with a UML-based notion of data models and signatures. The operational interpretation of rules {{could turn out to}} be useful for simulating the behavior of required components in unit testing...|$|R
5000|$|... setPassword - Enables a <b>requestor</b> {{to specify}} a new {{password}} for an object.|$|E
5000|$|SPMLv2 defines two “profiles” {{in which}} a <b>requestor</b> and {{provider}} may exchange SPML protocol: ...|$|E
5000|$|... modify - The modify {{operation}} {{enables a}} <b>requestor</b> to change an object on a target.|$|E
50|$|The Work Number allows <b>requestors</b> {{to receive}} {{immediate}} confirmation of an individual's employment and salary for verification purposes. The fee for {{this information is}} revealed only after the requester answers several personal questions.|$|R
3000|$|... {{provide an}} {{optional}} access over-ride capability (so called break the glass policies) which allow responsible <b>requestors</b> to over-ride the access control decision {{in an emergency}} situation, when {{they are willing to}} justify this later.|$|R
40|$|Peer-to-peer {{information}} sharing environments are increasingly gaining acceptance on the Internet as they provide an infrastructure {{in which the}} desired information can be located and downloaded while preserving the anonymity of both <b>requestors</b> and providers. As recent experience with P 2 P environments such as Gnutella shows, anonymity {{opens the door to}} possible misuses and abuses by resource providers exploiting the network as a way to spread tampered-with resources, including malicious programs, such as Trojan Horses and viruses. In this paper, we propose an approach to P 2 P security where servents can keep track, and share with others, information about the reputation of their peers. Reputation sharing is based on a distributed polling algorithm by which resource <b>requestors</b> can assess the reliability of perspective providers before initiating the download. The approach complements existing P 2 P protocols and has a limited impact on current implementations. Furthermore, it keeps the current level of anonymity of <b>requestors</b> and providers, {{as well as that of}} the parties sharing their view on others’ reputations...|$|R
