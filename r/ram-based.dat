146|0|Public
5|$|The {{development}} toolkit for the Motorola CPU {{included a}} compiler for the C programming language, {{which the two}} programmers were familiar with. After Atari had conducted performance evaluations, it approved usage of the language. Cerny and Flanagan's decision to program Marble Madness in the C language had positive and negative consequences. Atari games had previously been programmed in assembly language. The C language was easier to program, but was less efficient, so the game operates at the slower speed of 30Hz instead of the normal 60Hz frequency of arcade games at the time. Cerny decided to use a trackball system (marketed by Atari as Trak-Ball) to give the game a unique control system, and he chose a motorized trackball for faster spinning and braking when the in-game ball traveled downhill and uphill, respectively. As it was building the prototypes, Atari's design department informed Cerny that the motorized trackball's design had an inherent flaw—one of the four supports had poor contact with the ball—and {{the use of a}} regular trackball was more feasible. Additionally, Cerny had anticipated the use of powerful custom chips that would allow <b>RAM-based</b> sprites to be animated by the CPU, but the available hardware was a less-advanced system using ROM-based, static sprites.|$|E
5000|$|... 2001US6185126 - Self-initializing <b>RAM-based</b> {{programmable}} device ...|$|E
5000|$|... debugfs a Linux kernel's <b>RAM-based</b> {{file system}} {{specifically}} designed for debugging purposes ...|$|E
50|$|Configfs is a <b>RAM-based</b> {{virtual file}} system {{provided}} by the 2.6 Linux kernel.|$|E
5000|$|Minimum RAM footprint: 32 MB with disk-based root {{filesystem}}, 64 MB with <b>RAM-based</b> root filesystem ...|$|E
50|$|Unlike TR-DOS, iS-DOS is a <b>RAM-based</b> {{operating}} system, {{which reduces}} amount of memory for user programs.|$|E
50|$|DCS2 <b>RAM-based</b> multi-channel: This version {{used the}} ADSP2181 DSP {{and up to}} six DMA-driven DACs, {{outputting}} in multichannel sound.|$|E
50|$|The Dodge T-Rex is a <b>Ram-based</b> concept vehicle {{produced}} by Dodge in 1997 with three axles and six-wheel drive.|$|E
50|$|This is {{the first}} Gals Panic game to support the JAMMA connector. The DIP-switch arcade {{configuration}} was largely replaced by a more flexible, <b>RAM-based</b> software integrated to the service menu.|$|E
5000|$|A plucked string {{physical}} model {{that allows you}} to pluck, strike, scrape, or otherwise [...] "excite" [...] the string with 16 different [...] "pluck" [...] types, noise, or any of the onboard or <b>RAM-based</b> PCM waveforms.|$|E
5000|$|Random access {{stored program}} machine—RASP: counter-based or <b>RAM-based</b> machine with a [...] "program of instructions" [...] {{to be found}} in the {{registers}} themselves in the matter of a Universal Turing machine i.e. the von Neumann architecture.|$|E
50|$|DCS2 <b>RAM-based</b> stereo: This version {{used the}} ADSP2115 DSP and two DMA-driven DACs, {{outputting}} in stereo. This {{was used in}} Midway's 3DFX-based hardware (NFL Blitz, etc.). This system would be adopted by Atari Games, following their acquisition by WMS Industries.|$|E
5000|$|Automatic {{assignment}} of virtual IP addresses to VPN clients {{from one or}} several address pools using either the IKEv1 ModeConfig or IKEv2 Configuration payload. The pools are either volatile (i.e. <b>RAM-based)</b> or stored in a SQLite or MySQL database (with configurable lease-times).|$|E
50|$|A remote, {{indirect}} memory-access disk (RIndMA Disk) uses {{a secondary}} {{computer with a}} fast network or (direct) Infiniband connection {{to act like a}} <b>RAM-based</b> SSD, but the new, faster, flash-memory based, SSDs already available in 2009 are making this option not as cost effective.|$|E
5000|$|Synclavier PSMT (1984): {{a faster}} ABLE Model C {{processor}} based system, {{with a new}} 'Multi-Channel-Distribution' real-time digitally controlled analog signal routing technology, and 16-bit <b>RAM-based</b> stereo sampling subsystem. The monaural FM voice card was doubled up and enabling software panning for stereo output was introduced.|$|E
50|$|MUMPS {{has a large}} set {{of string}} {{manipulation}} operators, and its hierarchical variable management system extends to both <b>RAM-based</b> and disk-based variables. Disk resident (i.e., database) variables are automatically stored in hierarchical structures. Most implementations use caching, node indexes and name compression to reduce the time/space cost of disk references.|$|E
50|$|By 1982, the Fairlight CMI Series II {{represented}} another advance {{as it now}} {{offered more}} <b>RAM-based</b> sample memory than any other system with an improved sample rate, and in the Series III (1985) changed from 8-bit to 16-bit samples. The Synclavier introduced hard-disk based sampling in 1982, storing megabytes of samples for the first time.|$|E
50|$|HyperDrive (HD) is {{a series}} of <b>RAM-based</b> {{solid-state}} drives invented by Accelerated Logic B.V. (became Accelerated Logic ltd., and is now a German company) employee Pascal Bancsi (for HyperDrive II architecture), who partnered with the British company HyperOs Systems, who manufactured the retail product. The HyperDrive interfaces with and is recognized by computer systems as a standard hard drive.|$|E
50|$|In comparison, zswap {{operates}} transparently {{and requires}} no additional configuration in userspace, and {{acts as a}} <b>RAM-based</b> compressed cache for regular swap devices. This provides zswap with an eviction mechanism for less used swapped pages, which zram lacks. Though, {{as a result of}} its design, at least one already existing swap device is required for zswap to be used.|$|E
5000|$|... debugfs is a simple-to-use <b>RAM-based</b> {{file system}} {{specially}} designed for debugging purposes. It exists {{as a simple}} way for kernel developers to make information available to user space. [...] Unlike , which is only meant for information about a process, or sysfs, which has strict one-value-per-file rules, debugfs has no rules at all. Developers can put any information they want there.|$|E
50|$|Lucee has {{built-in}} support for multiple caching systems, including Infinispan, Ehcache, and Memcached, {{and can be}} extended with additional systems. The cache implementations can be configured within the Lucee server, then used within an application—both explicitly and implicitly—for the caching of database results, function call results, external HTTP request results, serialized session storage, and as a flexible backing store for an in-process <b>RAM-based</b> file-system abstraction.|$|E
50|$|Anthony Rose {{was born}} on 24 September 1964 in Cape Town, South Africa. At the age of 14 Rose began {{developing}} his own 6800-based home computer and within a year he was developing various computer products, including a RAM character generator add-on board and a <b>RAM-based</b> hard drive emulator for the Apple II. He then set up a company, A. R. Technology, through which to sell these products.|$|E
50|$|Video coprocessors {{have their}} own {{internal}} CPU dedicated to reading (and writing) their own video RAM, and converting the contents of this video RAM to a video signal. The main CPU can give commands to the coprocessor, for example to change the video modes or to manipulate the video RAM contents. The video coprocessor also controls the (most often <b>RAM-based)</b> character generator, the colour attribute RAM, palette registers, and the sprite logic (as long as these exist of course).|$|E
50|$|While not a <b>RAM-based</b> storage system, a CDBMS is {{designed}} to use as much RAM as the operating system can provide. For large databases, additional RAM improves performance. Generally, 4GB of RAM will provide optimized access times up to about 100 million records. 8GB of RAM is adequate for databases up to 10 times that size. Because the incremental RAM consumed decreases as the database grows, 16GB of RAM will generally support databases containing up to approximately 20 billion records.|$|E
5000|$|The main {{difference}} is that zram provides a compressed block device using RAM for storing data, which acts as a regular and separate swap device. Using zram requires additional configuration in userspace, using the [...] and [...] command-line utilities, so the <b>RAM-based</b> swap device provided by zram is initialized and configured to be used. As {{a result of its}} design, zram can provide swap space even if no other swap devices are available, which makes zram more suitable for systems not already providing swap space, such as embedded devices.|$|E
50|$|The {{character}} memory {{resides in}} a read-only memory in some systems. Other systems allow {{the use of}} RAM for this purpose, {{making it possible to}} redefine the typeface and even the character set for application-specific purposes. The use of <b>RAM-based</b> characters also facilitates some special techniques, such as the implementation of a pixel-graphics frame buffer by reserving some characters for a bitmap and writing pixels directly to their corresponding character memory. In some historical graphics chips, including the TMS9918, the MOS Technology VIC, and the Game Boy graphics hardware, this was actually the canonical way of doing pixel graphics.|$|E
5000|$|HP-71B — Handheld model {{natively}} programmable in {{an extended}} BASIC language including a <b>RAM-based</b> filesystem, recursion, multiline user-defined functions and subprogram calling with parameter passing, but also capable of accepting plug-in ROM modules {{to provide such}} functionalities as full I/O capabilities to any type of device (printers, mass storage, measurement instruments), programmability in other languages (Forth, Assembler), advanced math capabilities (such as matrix operations, support for complex numbers, multidimensional numerical integration and root finding, Fast Fourier Transforms, etc.), and an advanced Calculator Mode capable of executing algebraic expressions {{one step at a}} time and undoing individual steps.|$|E
50|$|It had {{somewhat}} better video display possibilities {{than the average}} CGA card (8 colors at 640x200 resolution, vs CGA's 4 colors at 320x200 or 2 colors at 640x200), {{but it was not}} completely compatible with the IBM-PC. It lacked a standard BIOS, having only a minimal bootloader in ROM that accessed hardware directly to load a <b>RAM-based</b> BIOS. The (FM rather than MFM) diskette format used was not completely compatible with the IBM PC, but special software on an original PC or PC/XT (but not PC/AT) could read and write the diskettes, and software expecting a standard 18.2 Hz clock interrupt had to be rewritten.|$|E
50|$|Although {{heapsort}} has {{the same}} time bounds as merge sort, it requires only Θ(1) auxiliary space instead of merge sort's Θ(n). On typical modern architectures, efficient quicksort implementations generally outperform mergesort for sorting <b>RAM-based</b> arrays. On the other hand, merge sort is a stable sort and is more efficient at handling slow-to-access sequential media. Merge sort is often {{the best choice for}} sorting a linked list: in this situation it is relatively easy to implement a merge sort {{in such a way that}} it requires only Θ(1) extra space, and the slow random-access performance of a linked list makes some other algorithms (such as quicksort) perform poorly, and others (such as heapsort) completely impossible.|$|E
50|$|The VIC chip did {{not support}} a true bitmap mode, but programmers could define their own custom {{character}} set. It was possible to get a fully addressable screen, although slightly smaller than normal, by filling the screen with a sequence of different double-height characters, then turning on the pixels selectively inside the <b>RAM-based</b> character definitions. The Super Expander cartridge added BASIC commands supporting such a graphics mode using a resolution of 160×160 pixels. It was also possible to fill a larger area of the screen with addressable graphics using a more dynamic allocation scheme, if the contents were sparse or repetitive enough. This was used, for instance, by the game Omega Race. The VIC chip {{did not support}} sprites.|$|E
5000|$|Blocks or sectors on {{the media}} can be tracked in a least {{frequently}} used (LFU) queue of some sort. The data structures for the queue itself must either be stored off-device or {{in such a way}} that the space it uses is itself wear-leveled or, in the case of flash memory, in a block with a specially extended life. However, usual cache algorithms are designed to manage the data flow into and out of <b>RAM-based</b> caches, making them not directly suitable for flash-based storage devices as they have an asymmetrical nature reads are usually much faster than writes, and erase operations can be performed only one [...] "block" [...] at a time.|$|E
50|$|While the {{original}} design was being worked on, the team had to constantly tune the software for maximum performance. This led to continual ROM updates, causing considerable problems. This led to increasing interest in a <b>RAM-based</b> machine that booted from the network, reversing their earlier decision. In 1989 development along these lines started using the DECstation 3100 which had just been released. In this case the system was essentially a MIPS-based 3100 with the hard drive and other components removed, running the VAXELN operating system and DECwindows. As the system could only be used with a host computer, there was no local user interface. Implementing {{this version of the}} system required considerably more hardware and expense, so {{the decision was made to}} make this a color-only model, in comparison to the earlier models which were monochrome.|$|E
5000|$|Since MUMPS's global {{variables}} are stored on disk, they are immediately visible to and modifiable {{by any other}} running program once they are created. <b>RAM-based</b> variables, called locals are only visible inside the currently running process, and their value is lost when the process exits. The scope of local variables is determined by using the [...] command to declare the variable. Declaration is optional - an undeclared variable is in scope for all routines running in the same process. A declared variable is accessible at the stack level it was declared, and remains accessible {{as long as that}} stack level exists. This means that a called routine has access to the variables available in its calling routine. Using the [...] command, a routine can redeclare variables its caller might have created, and thus prevent itself from modifying them. It cannot prevent routines it calls from modifying its own variables, so good MUMPS programming practice is to have every routine 'new' the variables it uses.|$|E
5000|$|Over time, the {{performance}} {{gap between the}} central processing units (CPUs) and electromechanical storage (hard disk drives and their RAID setups) widened, requiring advancements in the secondary storage technology. [...] A solution was found in flash memory, which is an electronic non-volatile computer storage media that can be electrically erased and reprogrammed. Solid-state storage typically uses the NAND type of flash memory, which may be written and read in chunks {{much smaller than the}} entire size of the storage device. The size of a minimal chunk (page) for read operations is much smaller than the minimal chunk size (block) for write/erase operations, resulting in an undesirable phenomenon called write amplification that limits the random write performance and write endurance of flash-based solid-state storage devices. Another type of solid-state storage devices uses volatile random-access memory (RAM) combined with a battery that allows the contents of RAM to be preserved for a limited amount of time after the device's power supply is interrupted. As an advantage, <b>RAM-based</b> solid-state storage is much faster compared to flash, and does not experience write amplification.|$|E
50|$|Writing {{assembler}} code programs {{under the}} new OS was rather different {{than it had been}} on the Model III. This was because the Model 4 was completely <b>RAM-based,</b> whereas the earlier TRS-80's memory maps were occupied by both RAM and ROM. No longer would assember programs issue CALL instructions to absolute addresses in ROM; TRSDOS 6 provided a standard interface to its service routines with its Supervisor Calls (SVCs). The code of the requested SVC was loaded into the Z-80 accumulator, any required parameters were loaded into their specified Z-80 general purpose registers (or needed regions of RAM set up as required, such as File Control Blocks), and a Z-80 restart instruction was issued (RST 40). TRSDOS then fetched from a table the absolute address of the needed service routine and branched to it. This indirect method made it possible to revise the operating system and build in additional features, which was done in major ways some half-dozen times throughout the active life of the OS. Four SVC codes were left unassigned and reserved for applications programmer's own uses. Four Z-80 restart vectors were similarly left unassigned.|$|E
5000|$|The Canadian Army Engineering Design Branch {{through the}} Canadian government's Department of Munitions and Supply {{were asked to}} build a vehicle similar to the M7 on the Ram tank chassis. The Ram tank was a Canadian tank design that used the chassis of the American Medium Tank M3 as did the Priest. The Ram had been sidelined by a {{decision}} to standardize on the Sherman tank for British and Canadian units. A prototype was completed on 23 June 1942. Following trials in Canada, the Canadian government ordered 124 vehicles in three batches. The prototype was shipped to the United Kingdom in early 1943, where it underwent further trials; the vehicle {{was found to be}} highly satisfactory and was given the designation [...] "Sexton" [...] (after the religious custodian) in May 1943. The British government ordered 300 Sextons in the summer of 1943; however, these Sextons were to be built on Grizzly tank hulls (Canadian-built M4A1 Sherman tanks) instead of Ram tank hulls. The <b>Ram-based</b> Sexton was designated as the Sexton Mark I and the Grizzly-based Sexton was designated the Sexton Mark II. British orders for the Sexton II eventually totalled 2,026 vehicles.|$|E
