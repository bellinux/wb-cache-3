2|5|Public
5000|$|The CAN {{specifications}} use {{the terms}} [...] "dominant" [...] bits and [...] "recessive" [...] bits where dominant {{is a logical}} 0 (actively driven to a voltage by the transmitter) and recessive is a logical 1 (passively returned to a voltage by a resistor). The idle state {{is represented by the}} recessive level (Logical 1). If one node transmits a dominant bit and another node transmits a <b>recessive</b> <b>bit</b> then there is a collision and the dominant bit [...] "wins". This means there is no delay to the higher-priority message, and the node transmitting the lower priority message automatically attempts to re-transmit six bit clocks {{after the end of the}} dominant message. This makes CAN very suitable as a real time prioritized communications system.|$|E
30|$|On a CAN bus every {{transmitting}} node {{monitors the}} state of the bus. Whenever a node tries to send a <b>recessive</b> <b>bit,</b> and reads back a dominant bit, it backs off and retries to send the interrupted message at a later point in time. As high-priority message identifiers contain more leading dominant bits than low-priority identifiers, a message with a high priority is sent first (i.e., it wins the arbitration). In order to reproduce this behavior, the CAN router maintains a priority queue at every destination CIS and transmits the messages to the destination CAN bus according to their priority.|$|E
50|$|The {{following}} second {{field is}} the ERROR DELIMITER (8 <b>recessive</b> <b>bits).</b>|$|R
5000|$|Passive Error Flag: six <b>recessive</b> <b>bits</b> - Transmitted by a node {{detecting}} {{an active}} error frame {{on the network}} that is in error state [...] "error passive".|$|R
50|$|The {{start of}} an {{overload}} frame due to case 1 is only {{allowed to be}} started at the first bit time of an expected intermission, whereas overload frames due to case 2 start one bit after detecting the dominant bit. Overload Flag consists of six dominant bits. The overall form corresponds {{to that of the}} active error flag. The overload flagâ€™s form destroys the fixed form of the intermission field. As a consequence, all other stations also detect an overload condition and on their part start transmission of an overload flag. Overload Delimiter consists of eight <b>recessive</b> <b>bits.</b> The overload delimiter is of the same form as the error delimiter.|$|R
5000|$|Data {{frames and}} remote frames are {{separated}} from preceding frames by a bit field called interframe space. Interframe space consists {{of at least three}} consecutive <b>recessive</b> (1) <b>bits.</b> Following that, if a dominant bit is detected, it will be regarded as the [...] "Start of frame" [...] bit of the next frame. Overload frames and error frames are not preceded by an interframe space and multiple overload frames are not separated by an interframe space. Interframe space contains the bit fields intermission and bus idle, and suspend transmission for error passive stations, which have been transmitter of the previous message.|$|R
50|$|Data Frame {{is called}} {{telegraph}} in Byteflight specification. Data frame {{start with a}} start sequence containing six dominant bits the start sequence is followed by one byte message identifier followed by a length field which contain {{the size of the}} data sent in bytes. Byteflight specification currently supports only data length up to 12 bytes, the length field is followed by the data field which may be up to 12 bytes in size the datagram then ends with a 15 bit CRC encoded in two bytes with the LSB left unused. All the bytes are cushioned in the beginning by a <b>recessive</b> start <b>bit</b> and a dominant stop bit.|$|R

