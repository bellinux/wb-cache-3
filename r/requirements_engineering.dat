3402|1496|Public
2500|$|Bolchini, D., Paolini, P.: [...] "Goal-Driven Requirements Analysis for Hypermedia-intensive Web Applications", <b>Requirements</b> <b>Engineering</b> Journal, Springer, RE03 Special Issue (9) 2004: 85-103.|$|E
2500|$|Systems {{engineering}} is an interdisciplinary field {{of engineering and}} engineering management that focuses on how to design and manage complex systems over their life cycles. At its core systems engineering utilizes systems thinking principles to organize this body of knowledge. [...] Issues such as <b>requirements</b> <b>engineering,</b> , logistics, coordination of different teams, testing and evaluation, maintainability and many other disciplines necessary for successful system development, design, implementation, and ultimate decommission become more difficult when dealing with large or complex projects. Systems engineering deals with work-processes, optimization methods, and risk management tools in such projects. It overlaps technical and human-centered disciplines such as industrial engineering, mechanical engineering, manufacturing engineering, control engineering, software engineering, electrical engineering, cybernetics, organizational studies and project management. [...] Systems engineering ensures that all likely aspects of a project or system are considered, and integrated into a whole.|$|E
50|$|IREB CPRE FL (Certified Professional for <b>Requirements</b> <b>Engineering</b> - Foundation Level): The International <b>Requirements</b> <b>Engineering</b> Board is {{responsible}} for the international scheme called Certified Professional <b>Requirements</b> <b>Engineering.</b> The HTB is recognized by the International <b>Requirements</b> <b>Engineering</b> Board (IREB) as an IREB - CPRE Exam Provider.|$|E
40|$|The <b>requirement</b> <b>engineering</b> is {{the process}} of {{collection}} of requirements and further, implements it to the software development process. It is important for every organization to develop quality software products that satisfy the user’s needs. To achieve this goal we have to apply <b>requirement</b> <b>engineering</b> practices in every step of software development process. We use <b>requirement</b> <b>engineering</b> practices because <b>requirement</b> <b>engineering</b> is most important phase of software development process {{and with the help of}} <b>requirement</b> <b>engineering</b> practices we collect user’s requirement and implement them in software development process. The purpose of this paper is to give an idea to how <b>requirement</b> <b>engineering</b> is necessary for software development and how <b>requirement</b> <b>engineering</b> influences the software development process. In this paper we analyze the <b>requirement</b> <b>engineering</b> process for designing quality software products and also describe the importance of <b>requirement</b> <b>engineering...</b>|$|R
40|$|<b>Requirement</b> <b>Engineering</b> (RE) {{research}} {{has reported that}} incomplete requirement specification, uncontrolled changing requirement, unsecure and outdated requirement elicitation, and lack of user involvements are major reasons of software failure. The presented research paper introduces various <b>requirement</b> <b>engineering</b> issues, which can be helpful to develop effective, secure, updated, and quality <b>requirement</b> <b>engineering</b> process for software development. A systematic review on <b>requirement</b> <b>engineering</b> practices along with our published research work including RE process model, Information <b>Requirement</b> <b>Engineering</b> (IRE), Security <b>Requirement</b> <b>Engineering</b> (SRE), and <b>requirement</b> modeling is highlighted, as well as measurement analysis of proposed RE process model is also described in this research article...|$|R
40|$|<b>Requirement</b> <b>Engineering</b> is {{the crucial}} phase of {{software}} development life cycle. The activity of <b>requirement</b> <b>engineering</b> is contract between {{the client and}} developer. The gathering of complete and consistent requirements can motive the quality of software product and can satisfy the user’s needs. The <b>requirement</b> <b>engineering</b> is a complex exercise that consider the product requirement demands {{from the number of}} viewpoints, roles and responsibilities. The successful systematic implementation of <b>requirement</b> <b>engineering</b> process can have good impact on the quality of software product [...] In this research paper, we highlights the role of <b>requirement</b> <b>engineering</b> and its activities in the development of quality software product...|$|R
50|$|<b>Requirements</b> <b>engineering</b> and {{software}} architecture {{can be seen}} as complementary approaches: while software architecture targets the 'solution space' or the 'how', <b>requirements</b> <b>engineering</b> addresses the 'problem space' or the 'what'. <b>Requirements</b> <b>engineering</b> entails the elicitation, negotiation, specification, validation, documentation and management of requirements. Both <b>requirements</b> <b>engineering</b> {{and software}} architecture revolve around stakeholder concerns, needs and wishes.|$|E
50|$|The {{first use}} of the term <b>requirements</b> <b>engineering</b> was {{probably}} in 1979 in a TRW technical report but did not come into general use until the 1990s with the publication of an IEEE Computer Society tutorial and the establishment of a conference series on <b>requirements</b> <b>engineering</b> that has evolved into the current International <b>Requirements</b> <b>Engineering</b> Conference.|$|E
5000|$|The {{second was}} the International Conference on <b>Requirements</b> <b>Engineering</b> (ICRE), {{starting}} in 1994. In 2002, these two conference series merged {{under the name}} Joint International <b>Requirements</b> <b>Engineering</b> Conference (RE'02).|$|E
40|$|<b>Requirement</b> <b>engineering</b> {{is first}} phase of {{software}} development processes and it is most important phase for every software development model. In <b>requirement</b> <b>engineering</b> phase we can gather the requirements from user and use this requirement to software development and produce software product that satisfy the user needs. In this research paper we describe the fundamental description of <b>requirement</b> <b>engineering</b> and present the basics dimensions of <b>requirement</b> <b>engineering.</b> Also, in this research paper we also give the basic idea of software requirement specification and present the concept of why requirement management is important for software development...|$|R
40|$|<b>Requirement</b> <b>engineering</b> is an {{integral}} part of the software development lifecycle since the basis for developing successful software depends on comprehending its requirements in the first place. <b>Requirement</b> <b>engineering</b> involves a number of processes for gathering requirements in accordance with the needs and demands of users and stakeholders of the software product. In this paper, we have reviewed the prominent processes, tools and technologies used in the requirement gathering phase. The study is useful to perceive the current state of the affairs pertaining to the <b>requirement</b> <b>engineering</b> research and to understand the strengths and limitations of the existing <b>requirement</b> <b>engineering</b> techniques. The study also summarizes the best practices and how to use a blend of the <b>requirement</b> <b>engineering</b> techniques as an effective methodology to successfully conduct the <b>requirement</b> <b>engineering</b> task. The study also highlights the importance of security requirements as though they are part of the non-functional requirement, yet are naturally considered fundamental to secure software development...|$|R
40|$|Focus of Aspect Oriented Software Development {{is on the}} identification, separation, {{representation}} and composition of crosscutting concerns. Crosscutting concerns behavior effects the whole system development. Traditional <b>requirement</b> <b>engineering</b> process does not cater for these crosscutting concerns. A new aspect oriented <b>requirement</b> <b>engineering</b> process is proposed to overcome this deficiency. Focus of this research activity is to justify why this new aspect oriented <b>requirement</b> <b>engineering</b> process is needed...|$|R
50|$|In the {{waterfall}} model, <b>requirements</b> <b>engineering</b> {{is presented as}} {{the first phase of}} the development process. Later software development methods, including the Rational Unified Process (RUP), assume that <b>requirements</b> <b>engineering</b> continues through the lifetime of a system.|$|E
50|$|He is also {{founding}} member of IREB e.V. (International <b>Requirements</b> <b>Engineering</b> Boards). IREB is a Non-Profit-Organisation and provider of CPRE (Certified Professional for <b>Requirements</b> <b>Engineering).</b> More than 22,000 people in more than 59 countries have passed the CPRE Foundation Level.|$|E
5000|$|Alan M. Davis's {{extensive}} {{bibliography of}} <b>requirements</b> <b>engineering.</b>|$|E
40|$|<b>Requirement</b> <b>Engineering</b> acts as {{foundation}} for any software {{and is one}} of the most important tasks. Entire software is supported by four pillars of <b>requirement</b> <b>engineering</b> processes. Functional and non-functional requirements work as bricks to support software edifice. Finally, design, implementation and testing add stories to construct entire software tower on top of this foundation. Thus, the base needs to be well-built to support rest of software tower. For this purpose, requirement engineers come across with numerous challenges to develop successful software. The paper has highlighted <b>requirement</b> <b>engineering</b> challenges encountered in development of software applications and selection of right customer-off-the-shelf components (COTS). Comprehending stakeholder’s needs; incomplete and inconsistent process description; verification and validation of requirements; classification and modeling of extensive data; selection of COTS product with minimum requirement modifications are foremost challenges faced during <b>requirement</b> <b>engineering.</b> Moreover, the paper has discussed and critically evaluated challenges highlighted by various researchers. Besides, the paper presents a model that encapsulates seven major challenges that recur during <b>requirement</b> <b>engineering</b> phase. These challenges have been further categorized into problems. Furthermore, the model has been linked with previous research work to elaborate challenges that have not been specified earlier. Anticipating <b>requirement</b> <b>engineering</b> challenges could assist requirement engineers to prevent software tower from any destruction. Keywords: <b>Requirement</b> <b>Engineering,</b> Customer-off-the-shelf (COTS), Multi-site software development. 1...|$|R
40|$|The aim of {{this paper}} is to measure {{security}} in <b>requirement</b> <b>engineering</b> using questionnaire based approach. The questionnaire is applied in the four stages of <b>requirement</b> <b>engineering</b> (Elicitation, analyses, validation, management). The questionnaire based approach is composing of three main parts. First the security questions part. Second the evaluation part which should be filled by the stakeholders. Third the assessment part. Finally A case study conducted to apply Questionnaire based approach and to measure security in <b>requirement</b> <b>engineering.</b> 1...|$|R
40|$|<b>Requirement</b> <b>Engineering</b> {{is one of}} {{the most}} {{important}} stages of Software <b>Engineering.</b> Eliciting <b>requirements</b> is highly critical and a complex process as the software end product totally depends on the quality of requirements that were collected. The property of the requirements is dynamic that keeps changing and constantly evolving. The Traditional Strategies for <b>Requirement</b> <b>Engineering</b> lacked organization and change management was entirely manual which consumed a lot of time and skilled labor. A centralized strategy for Elicitation of Dynamic Requirements using the concept of Requirement Cloud is proposed with high level of organization and structuring. A novel idea of using Cloud Storage Service for <b>Requirement</b> <b>Engineering</b> is implemented using a heuristics approach. Change management is incorporated and a few activities like requirements document generation is automated in this approach. Finally a survey between the Traditional <b>Requirement</b> <b>Engineering</b> and Proposed Cloud Methodology is conducted to prove the proposed methodology is better than the traditional strategies of <b>Requirement</b> <b>Engineering...</b>|$|R
5000|$|... #Subtitle level 2: Certified Professional for <b>Requirements</b> <b>Engineering</b> ...|$|E
5000|$|Light Control: <b>Requirements</b> <b>Engineering</b> Case Study, Dagstuhl Seminar ...|$|E
5000|$|... {{adoption}} {{and integration of}} aspect-oriented <b>requirements</b> <b>engineering,</b> and ...|$|E
40|$|The {{goal and}} {{objective}} of the purposed framework is to bring <b>requirement</b> <b>engineering</b> and security <b>requirement</b> <b>engineering</b> process together in such a simplify form so, that a requirement analyst should not get confused and not leave any loop holes in security part of requirement analysis which can be cause of changes in initial deployment of the software. Analyst should not dive in a deep concepts and analysis in one direction, purposed framework can {{be treated as a}} complete abstract of the <b>requirement</b> <b>engineering</b> process as well security <b>requirement</b> <b>engineering,</b> our effort is to balancing the requirement analysis in the all part of the system including security issues. As the part of security <b>requirement</b> <b>engineering</b> framework, concepts have been inherited from the existing framework of security <b>requirement</b> <b>engineering</b> [3]. Where in the third stage of the security engineering framework to identify security requirements, seven states of the security as defined in ISO/IEC 13335 standard [18] is mapped to produce security error traceability matrix, as the current edge of technology, in the mobile world Android has captured the market, all the corporate and personal users are relying on the android and think that their data is fully secured. With the help of purposed framework, an argument has done with android to find out security error...|$|R
40|$|Collecting the {{stakeholder}} requirements {{starts at}} {{the early stages of}} <b>requirement</b> <b>engineering.</b> It is a continuous and is highly critical process. Eliciting requirements from users remains a major challenge for systems developers. This paper focuses on the different elicitation techniques that are widely used in <b>requirement</b> <b>engineering...</b>|$|R
30|$|After <b>requirement</b> <b>engineering</b> process, {{design phase}} will start.|$|R
5000|$|... #Subtitle level 3: Tools {{for general}} <b>Requirements</b> <b>Engineering</b> ...|$|E
50|$|There is no {{evidence}} that <b>requirements</b> <b>engineering</b> contributes to the success of software projects or systems. Problem structuring, a key aspect of <b>requirements</b> <b>engineering,</b> decreases design performance. Some research suggests that software requirements are often an illusion misrepresenting design decisions as requirements in situations where no real requirements are evident.|$|E
5000|$|The {{syllabus}} {{does not}} attempt to convey all methods and techniques {{that are used in}} <b>Requirements</b> <b>Engineering.</b> Rather, the course represents today’s most commonly used set of methods and techniques. Above all, the course intends to inspire attendees to actively gain for more experience in <b>Requirements</b> <b>Engineering</b> on their own authority ...|$|E
40|$|In current years many {{industries}} {{have been moving}} {{to the use of}} object-oriented methods for the development of large scale information systems The requirement of Object Oriented approach in the development of software systems is increasing day by day. This paper is basically a survey paper on various Object-oriented <b>requirement</b> <b>engineering</b> methods. This paper contains a summary of the available Object-oriented <b>requirement</b> <b>engineering</b> methods with their relative advantages and disadvantages. On next, several features have been proposed. These features are the characteristics of a good model of Object-oriented <b>requirement</b> <b>engineering...</b>|$|R
40|$|<b>Requirement</b> <b>engineering</b> {{has always}} {{occupied}} a primal position in software engineering. ”If {{you get the}} requirement correct, you {{are very close to}} getting the software correct”, has been an accepted fact. Many principles and techniques have been proposed for efficient requirement gathering and these have been validated and applied in practice. Incorporation of security into <b>requirements</b> are <b>engineering</b> present several challenges and opportunities for researches. Security requirements posses certain unique characteristics that prevent them from being treated par with other normal functional requirement. In this paper we are going to concentrate a security approach in <b>requirement</b> <b>engineering</b> phase. We have explored how <b>requirement</b> <b>engineering</b> phase plays important role in software development life cycl...|$|R
40|$|Higher Learning Education (HLE) {{fails to}} deliver {{undergraduates}} with employability skills that expert in <b>Requirement</b> <b>Engineering.</b> The {{objective of this}} research is to identify challenges in the current practice of teaching Software Engineering at the undergraduate level in <b>Requirement</b> <b>Engineering.</b> To that reason, the Project-Based Learning (PjBL) proposed as well as a mechanism for educators in their delivery to assist students in enhancing their skill. The skills enhanced from the elicitation process until the management of requirement which students can easily apply in their employability skills. Future work will discuss on the analysis of the weaknesses in the current <b>Requirement</b> <b>Engineering</b> practices...|$|R
5000|$|... 1994. A Natural Language Approach For <b>Requirements</b> <b>Engineering.</b> With C. Proix.|$|E
50|$|Aspect-oriented <b>requirements</b> <b>engineering</b> {{approaches}} are techniques that explicitly recognise {{the importance of}} clearly addressing both functional and non-functional crosscutting concerns in addition to non-crosscutting ones. Therefore, these approaches focus on systematically and modularly treating, reasoning about, composing and subsequently tracing crosscutting functional and non-functional concerns via suitable abstraction, representation and composition mechanisms tailored to the <b>requirements</b> <b>engineering</b> domain.|$|E
5000|$|Forsberg, Kevin, and Harold Mooz. [...] "System {{engineering}} overview." [...] Software <b>Requirements</b> <b>Engineering</b> (1997): 44-72.|$|E
5000|$|... #Subtitle level 3: Tools for Model-Based Software or Systems <b>Requirement</b> <b>Engineering</b> ...|$|R
40|$|The <b>Requirement</b> <b>Engineering</b> (RE) is {{the most}} {{important}} phase of the software development life cycle (SDLC). This phase is used to translate the imprecise, incomplete needs and wishes of the potential users of software into complete, precise and formal specifications. The specifications act as the contract between the software users and the developers. Therefore the importance of <b>Requirement</b> <b>Engineering</b> is enormous to develop effective software and in reducing software errors at the early stage of the development of software. Since <b>Requirement</b> <b>Engineering</b> (RE) has great role in different stages of the SDLC, its consideration in software development is crucial. There exist a number of approaches for <b>requirement</b> <b>engineering.</b> Among the approaches, object-based and problem domain-based approaches are widely used. An effective analysis of methods is essential for the appropriate capturing of requirements. Taking the above viewpoint into account, this paper demonstrates an effective method of <b>requirement</b> <b>engineering,</b> which {{plays an important role in}} different phases of the SDLC. Hospital can be seen as an example of a complex system. Therefore, the paper considers Hospital as a case study for which a software system has been developed taking the mentioned approach into account...|$|R
40|$|The Master thesis {{explores the}} {{knowledge}} sharing {{that takes place}} during the <b>requirement</b> <b>engineering</b> phase of globally distributed information systems development. In recent years, due to globalization, information systems development activities have become increasingly distributed across different geographical locations. <b>Requirement</b> <b>engineering</b> is an important and knowledge intensive phase {{in the development of}} information systems. <b>Requirement</b> <b>engineering</b> is the process of identifying, analyzing, documenting, validating and managing the requirements of a system. Effective and efficient knowledge sharing during the <b>requirement</b> <b>engineering</b> is vital for the successful development of information systems. However, the global distribution of the stakeholders has affected knowledge sharing during <b>requirement</b> <b>engineering</b> in various ways making it more challenging.   Drawing on the theories of knowledge sharing within the field of information systems, this interpretive research study aims at exploring stakeholders’ perceptions about the challenges met during the knowledge sharing in <b>requirement</b> <b>engineering</b> phase of globally distributed information systems development projects. More specifically, this Master thesis explores the perceived challenges and generates a list of suggestions to overcome the challenges by conducting qualitative semi-structured interviews among the key stakeholders, both customers and business analysts.   The findings indicate that the knowledge sharing is influenced by challenges such as cultural differences, language barriers, communication issues, coordination issues arising from multiple stakeholders, time difference and difficulty in sharing tacit knowledge in the globally distributed settings. Participants’ suggestions for overcoming these challenges include cultural trainings, kick off meetings, language trainings, use of translator, face-to-face communication and interaction, video conferencing, scheduling important meetings in the common suitable timings, identification of the main stakeholders, having a mediator and making close observations with face-to-face interactions.     Keywords:  Information Systems, Information Systems Development, <b>Requirement</b> <b>Engineering,</b> Knowledge Sharing, Global Distribution, Outsourcing...|$|R
