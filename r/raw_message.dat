8|21|Public
5000|$|The encoded-word {{format is}} not used for {{the names of the}} headers (for example [...] ). These header names are always in English in the <b>raw</b> <b>message.</b> When viewing a message with a non-English email client, the header names are usually {{translated}} by the client.|$|E
50|$|Trade-off between {{reliability}}, latency, and throughput: The {{pursuit of}} perfect reliability may hurt other relevant parameters of a data transmissionmost importantly latency and throughput. This {{is particularly important}} for applications that require no perfect reliability, but rather value predictable throughput and low latencythe classic example being interactive real-time voice applications. This use case was catered for in the ARPANET by providing a <b>raw</b> <b>message</b> service that dispensed with various reliability measures so as to provide faster and lower latency data transmission service to the end hosts.|$|E
50|$|When a form {{is added}} to a Web page that submits data to a Web application, a {{malicious}} user may exploit the MIME format to append additional information to the message being sent, such as a new list of recipients or a completely different message body. Because the MIME format uses a carriage return to delimit the information in a message, and only the <b>raw</b> <b>message</b> determines its eventual destination, adding carriage returns to submitted form data can allow a simple guestbook {{to be used to}} send thousands of messages at once. A malicious spammer could use this tactic to send large numbers of messages anonymously.|$|E
40|$|Emerging {{application}} domains such as interactive vision, animation, {{and multimedia}} collaboration display dynamic scalable parallelism, and high computational requirements, making them good candidates for executing on parallel architectures such as SMPs or clusters of SMPs. Apart from their main algorithmic components, these applications need specialized support mechanisms that enable plumbing different modules together, cross module data transfer, automatic buffer management, synchronization and so on. Such support mechanisms are usually {{part of the}} runtime system, and {{in this paper we}} quantify their performance. The runtime for our evaluation is Stampede, a cluster programming system that is designed to meet the requirements of such applications. We have developed a cycle accurate timing infrastructure that helps tease out the time spent by an application in different layers of software, viz., the main algorithmic component, the support mechanisms, and the <b>raw</b> <b>messaging.</b> We conducted our experiments with two representative applications on two flavors of Unix, viz., Solaris and Linux. There are several interesting insights coming from this study. First, memory allocation does not take up a significant amount of the execution time despite the interactive and dynamic nature of the application domain. Second, the Stampede runtime adds a minimal overhead over <b>raw</b> <b>messaging</b> for structuring such applications. Third, the results suggest that the thread scheduler on Linux may be more responsive than the one on Solaris; we quantify the effect of the scheduler responsiveness in terms of difference in blocking time for threads and time spent in synchronization in the messaging layer. Fourth, the mes...|$|R
50|$|Both bands {{were known}} for their outspoken {{commitment}} to social justice and vegetarianism. Though the sound was <b>raw,</b> their <b>messages</b> focused on social justice, human rights, environmentalism, relationships, individuality and espousing straight-edge views against drugs, alcohol and promiscuous sex.|$|R
5000|$|... #Caption: Screenshot of an APRS {{display in}} XASTIR, an APRS {{software}} system for Linux/Unix. Station positions, objects and items are {{displayed on a}} map overlaying counties around New York City. <b>Raw</b> APRS <b>messages</b> are displayed in the terminal window on the lower right.|$|R
40|$|Abstract This paper {{introduces}} oc-net, {{a software}} communications system which implements the CSP/occam model {{of communication and}} synchronisation across networks of workstations. The spotlight is initially directed towards the design of oc-net, the finer grain parallelism it accommodates, and its careful integration into the operating environment, which distinguishes itself, if mishandled, in being hostile to oc-net's objectives. The {{second part of the}} paper describes a preliminary empirical measurement of oc-net's <b>raw</b> <b>message</b> passing performance vis `a vis popular parallel computing software for networks of workstations. Parallels are drawn between the latters ' unrestrained models of parallelism, and occam's carefully controlled communication topologies, to which various advantages can be attributed...|$|E
40|$|The ISIS toolkit is a {{distributed}} {{programming environment}} based on support for virtually synchronous process groups and group communication. A suite of protocols {{is presented to}} support this model. The approach revolves around a multicast primitive, called CBCAST, which implements a fault-tolerant, causally ordered message delivery. This primitive can be used directly or extended into a totally ordered multicast primitive, called ABCAST. It normally delivers messages immediately upon reception, and imposes a space overhead proportional {{to the size of}} the groups to which the sender belongs, usually a small number. It is concluded that process groups and group communication can achieve performance and scaling comparable to that of a <b>raw</b> <b>message</b> transport layer. This finding contradicts the widespread concern that this style of distributed computing may be unacceptably costly...|$|E
40|$|There are two extreme stances in mechanizing natural {{language}} inference. One seeks to reformulate a <b>raw</b> <b>message</b> {{so as to}} conform with the syntax and semantics of some formal logical system (such as FOL) suited for reliable, potentially deep general reasoning. The other uses what {{has become known as}} Natural Logic—an easy but shallow way of treating {{natural language}} itself as logic and reasoning directly on this level. Finding the right balance between these opposing stances {{is one of the key}} tasks in advancing the ability of machines to understand human language, and thus, for example, extract knowledge inferentially from text. In this paper, we provide arguments and evidence that EPILOG, a general reasoner for the natural language–like Episodic Logic, can be equipped with the knowledge needed for effective Natural Logic–like inference while also providing greater generality. ...|$|E
40|$|Eleven {{variants}} of six widely used open-source spam filters are tested on a chronological sequence of 49086 email messages received {{by an individual}} from August 2003 through March 2004. Our approach differs from those previously reported in that the test set is large, comprises uncensored <b>raw</b> <b>messages,</b> and is presented to each filter sequentially with incremental feedback. Misclassification rates and Receiver Operating Characteristic Curve measurements are reported, with statistical confidence intervals. Quantitative results indicate that content-based filters can eliminate 98 % of spam while incurring 0. 1 % legitimate email loss. Qualitative {{results indicate that the}} risk of loss depends {{on the nature of the}} message, and that messages likely to be lost may be those that are less critical. More generally, our methodology has been encapsulated in a free software toolkit, which may used to conduct similar experiments...|$|R
25|$|Internet based servers' {{market share}} can be {{measured}} with statistical surveys of publicly accessible servers, such as web servers, mail servers or DNS servers on the Internet: the operating systems powering such servers are found by inspecting <b>raw</b> response <b>messages.</b> This method gives insight only into market share of operating systems that are publicly accessible on the Internet.|$|R
40|$|The paper {{describes}} {{the design and}} development of an efficient visualization tool called security console for monitoring security related events in a large agent society (Cougaar™). This administrative tool is primarily used to collect and process alert messages generated by various sensors across the distributed agent society. This tool exploits the agents’ hierarchical structural for aggregating security events in order to discover correlation among them. In particular, it logically groups related alerts from <b>raw</b> <b>messages</b> (by removing duplicates, if any) and applies data mining techniques (like association rules and frequency episode learning), to discover situations that have certain characteristics in common. We performed extensive experimentation with the security console in various attack scenarios that generate large number of alert messages. Reported results exhibit that this alert monitoring and correlation tool can provide a profile of attack patterns which occur more frequently in the monitored agent society...|$|R
40|$|XML-based {{communication}} governs most of today’s systems communication, {{due to its}} {{capability of}} representing complex structural and hierarchical data. However, XML document structure is considered a huge and bulky data that {{can be reduced to}} minimize bandwidth usage, transmission time, and maximize performance. This contributes to a more efficient and utilized resource usage. In cloud environments, this affects the amount of money the consumer pays. Several techniques are used to achieve this goal. This paper discusses these techniques and proposes a new XML Schema-based Minification technique. The proposed technique works on XML Structure reduction using minification. The proposed technique provides a separation between the meaningful names and the underlying minified names, which enhances software/code readability. This technique is applied to Intrusion Detection Message Exchange Format (IDMEF) messages, as part of Security Information and Event Management (SIEM) system communication hosted on Microsoft Azure Cloud. Test results show message size reduction ranging from 8. 15 % to 50. 34 % in the <b>raw</b> <b>message,</b> without using time-consuming compression techniques. Adding GZip compression to the proposed technique produces 66. 1 % shorter message size compared to original XML messages...|$|E
40|$|Homomorphic {{encryption}} is an encryption {{scheme that}} allows computations {{to be evaluated}} on encrypted inputs without knowledge of their <b>raw</b> <b>messages.</b> Recently Ouyang et al. constructed a quantum homomorphic encryption (QHE) scheme for Clifford circuits with statistical security (or information-theoretic security (IT-security)). It is desired to see whether an information- theoretically-secure (ITS) quantum FHE exists. If not, what other nontrivial class of quantum circuits can be homomorphically evaluated with IT-security? We provide a limitation for the first question that an ITS quantum FHE necessarily incurs exponential overhead. As for the second one, we propose two QHE schemes for an enlarged class of the instantaneous quantum polynomial-time (IQP) circuits called IQP +. The first scheme TRIV follows directly from the one-time pad. The second scheme IQPP is constructed from a class of concatenated quantum stabilizer codes, whose logical X and Z operators act nontrivially on different sets of qubitsComment: 17 pages. Definitions are modified and some mistakes are correcte...|$|R
40|$|Abstract—Modern {{computing}} {{systems are}} instrumented to generate {{huge amounts of}} system logs and these data can be utilized for understanding and complex system behaviors. One main fundamental challenge in automated log analysis is the generation of system events from raw textual logs. Recent works apply clustering techniques to translate the <b>raw</b> log <b>messages</b> into system events using only the word/term information. In this paper, we first illustrate the drawbacks of existing techniques for event generation from system logs. We then propose LogTree, a novel and algorithm-independent framework for events generation from <b>raw</b> system log <b>messages.</b> LogTree utilizes the format and structural information of the raw logs in the clustering process to generate system events with better accuracy. In addition, an indexing data structure, Message Segment Table, is proposed in LogTree to significantly improve the efficiency of events generation. Extensive experiments on real system logs demonstrate the effectiveness and efficiency of LogTree. Keywords-event generation; mining system log data; LogTree; log message clustering. I...|$|R
40|$|Abstract: RTKLIB is an {{open source}} program package for RTK-GPS {{developed}} by the authors. RTKLIB is a compact and portable program library written in C to provide a standard platform for RTK-GPS applications. The library implements fundamental navigation functions and carrier-based relative positioning algorithms for RTK-GPS with integer ambiguity resolution by LAMBDA. RTKLIB also supports data communication via serial I/O, TCP/IP connection and NTRIP, and various data formats including RTCM 2. 3, RTCM 3. 1 and proprietary <b>raw</b> <b>messages</b> for some GPS receivers. By supporting RTCM and NTRIP, NRTK (Network RTK) service {{can be used with}} RTKLIB. From the version 2. 2. 0, RTKLIB has been distributed under the GPLv 3 license. RTKLIB was originally implemented on Windows PC. In this study, we port RTKLIB to a small and compact single-board computer BeagleBoard and construct a low-cost RTK-GPS receiver with RTKLIB. BeagleBoard has 600 MHz ARM Cotex-A 8 core CPU and supports embedded Linux environment. In order to acquire and track GPS signals, we employ a single-frequency GPS receiver module LEA- 4 T provided by u-blox AG. The RTK-GPS server running on BeagleBoard inputs the u-blox <b>raw</b> binary data <b>messages.</b> The server also inputs the base-station data via a serial port or USB network device and computes RTK-GPS solution in real-time. The total cost of the developed RTK-GPS receiver was about $ 400. To demonstrate and verify the performance of the low-cost RTK-GPS receiver, we made some field tests. In these tests, CPU/memory usage, accuracy of solutions and fixing ratio are evaluated. According to the test results, even with such a low-cost RTK-GPS receiver, we can obtain reasonable performance in company with RTKLIB...|$|R
40|$|Emerging {{application}} domains such as interactive vision, animation, {{and multimedia}} collaboration display dynamic scalable parallelism, and high computational requirements, making them good candidates for executing on parallel architectures such as SMPs and clusters of SMPs. The necessity to reason about program behavior {{along the time}} dimension is an important characteristic {{of these types of}} applications. Stampede is a cluster programming system that is designed to meet many of the challenges in such applications. Stampede supports time-sequenced data items, and thus facilitates temporally correlating data items from different streams. The system performs automatic garbage collection of data items no longer needed by any application thread. The Stampede system has been built as a runtime library on top of standard operating systems. In this paper, we study the interaction between the Stampede runtime system and the underlying operating system. The study is conducted on two identical hardware platforms running Solaris and Linux, respectively. A cycle accurate event logging facility using the CPU cycle counter {{is at the core of}} this study. There are several interesting insights coming from this study. First, memory allocation does not take up a significant amount of the execution time despite the interactive and dynamic nature of the application domain. Second, the Stampede runtime does not pose a significant overhead over <b>raw</b> <b>messaging</b> for structuring such applications. Third, the results suggest that the thread scheduler on Linux may be more responsive than the one on Solaris. Fourth, the messaging layer spends quite a bit of time in synchronization operations...|$|R
40|$|In this letter, a {{compressed}} relaying scheme via Huffman and physical-layer network coding (HPNC) {{is proposed}} for two-way relay networks with correlated sources (TWRN-CS). In the HPNC scheme, both sources first transmit the correlated <b>raw</b> source <b>messages</b> to the relay simultaneously. The relay performs physical-layer network coding (PNC) on the received symbols, compresses the PNC-coded symbols using Huffman coding, and broadcasts the compressed symbols to both source nodes. Then, each source decodes the other source's messages by using its own messages as side information. Compression rate and block error rate (BLER) {{of the proposed}} scheme are analyzed. Simulation results demonstrate that the HPNC scheme can effectively improve the network throughput, and meanwhile, achieve the superior BLER performance compared with the conventional non-compressed relaying scheme in TWRN-CS. Comment: 11 pages, 4 figures. appears in IEEE Wireless Communications Letters, 201...|$|R
40|$|The Gardens language, Mianjin, {{supports}} {{task based}} parallel computation, which utilises Active Messages style asynchronous communication. Unlike <b>raw</b> Active <b>Messages,</b> {{which is a}} library, this is achieved safely and without degrading performance by enforcing all necessary restrictions statically at the language level. Also supported {{is the definition of}} communication abstractions. To do this Mianjin utilises a partitioned address space where local objects are distinguished from those made globally accessible; this is achieved via type annotations. Type annotations are also used to distinguish those routines which may perform communications from those which will not; a distinction important for the static safety of an Active Message implementation. A special parameter mechanism is used to implement and enforce the conditions necessary for safe reply (read) operations. 1 Introduction This paper describes the Gardens programming language, Mianjin 1, and its support for global objects [...] . ...|$|R
3000|$|... {{performs}} the same task and takes 88 milliseconds. In this case, {{we are paying}} in both gf and gr the overhead of making a Clive’s file interface for an underlying UNIX file system, and converting <b>raw</b> bytes to <b>messages</b> and vice-versa. Furthermore, the implementation in Go for Clive’s commands is not optimized and relies on multiple Go processes, while the native diff command is a fine-tuned, sequential, C implementation. Because the command was measured within a single machine with no extra latency added, UNIX outperforms Clive.|$|R
40|$|Approved {{for public}} release, {{distribution}} unlimitedThis thesis applies Latent Dirichlet Allocation (LDA) {{to the problem}} of topic and topic change in conversational threads using e-mail. We demonstrate that LDA can be used to successfully classify <b>raw</b> e-mail <b>messages</b> with threads to which they belong, and compare the results with those for processed threads, where quoted and reply text have been removed. Raw thread classification performs better, but processed threads show promise. We then present two new, unsupervised techniques for identifying topic change in e-mail. The first is a keyword clustering approach using LDA and DBSCAN to identify clusters of topics, and transition points between them. The second is a sliding window technique which assesses the current topic for every window, identifying transition points. The keyword clustering performs better than the sliding window approach. Both {{can be used as a}} baseline for future work. NASA Ames Research Center author (civilian) ...|$|R
40|$|AbstractWe may see {{competition}} among mobile providers to acquire new customers through campaign and advertisement war, especially on social media. The problem arises {{on how to}} measure the brand reputation of these providers based on people response on their services quality. This paper addresses this issue by measuring brand reputation based on customer satisfaction through customer's sentiment analysis from Twitter data. Sample model is built and extracted from 10. 000 <b>raw</b> Twitter <b>messages</b> data from January to March 2015 of top three mobile providers in Indonesia. We compared several features extractions, algorithms, and the classification schemes. After data cleaning and data balancing, the sentiments are classified and compared using three different algorithms: Naïve Bayes, Support Vector Machine, and Decision Tree classifier method. We measure customer satisfaction on five products: 3 G, 4 G, Short Messaging, Voice and Internet services. This paper also discusses some correlated business insights in a telecommunication services industry. Based on the overall comparison of these five products, the NBR scores for PT XL Axiata Tbk, PT Telkomsel Tbk, and PT Indosat Tbk are 32. 3 %, 19. 0 %, and 10. 9 % respectively...|$|R
40|$|Choreography/Direction: Jennifer EssexPerformers: Louiseanne Wong, Rosie Macari, Christopher Vann, Natalie Trewinnard, Christina Blackwell, and Paul Harman Videography by Beth Brownless Music by Portia Graves Costumes by Emily Spreadborough Technical Assistant Alyssa LisleREPLICAS uses real-life text {{messages}} from three couples {{at various stages}} of their relationships as inspiration for dance duets, each exploring how we communicate in the digital age. <b>Raw</b> text <b>messages,</b> videos and photos are sent to audiences in real time, giving audience an inside view of the on-stage relationships. This also allowed Essex to continue her research into attention and how attention can be diverted from the live by the digital. www. replicasdance. com was developed alongside the performance to explore the gamification of the performance’s messages, stories, and images. REPLICAS examines questions {{at the forefront of}} our culture: how communication is changing in the digital age, what is to be lost and what can be gained by our new intimacy with technology and {{what is the role of}} touch in our time – can we be touched by technology? This work continues Essex’s interest in methods of communication and how dance can provide an opportunity for the embodiment of complex emotions. REPLICAS was commissioned by the Stockton International Riverside Festival and subsequently performed at Middlesbrough Institute of Modern Art...|$|R
40|$|Abstract — While BGP routing datasets, {{consisting}} of raw routing data, are freely available {{and easy to}} obtain, extracting any useful information is tedious. Currently, researcher and network operators implement their own custom data processing tools and scripts. A single tool that provides {{easy access to the}} information within large raw BGP data-sets could be used by both communities to avoid re-writing these tools each time. Moreover, providing not just <b>raw</b> BGP <b>messages,</b> but some commonly used summary statistics as well can help guide deeper custom analyses. Based on these observations this paper describes the first steps towards building a scalable tool. We describe the various techniques and algorithms we have used to build an efficient generic tool called BGP-Inspect. When dealing with large datasets, dataset size, lookup speed, and data processing time are the most challenging issues. We describe our implementations of chunked compressed files and B+ tree indices that attempt to address these issues. We then provide an evaluation of our implementations. Finally, we provide some example scenarios and case studies where BGP-Inspect can provide useful insight into the management and operation of complex BGP based networks. An efficient and flexible back-end custom BGP message database, coupled with an intuitive and easy to use web-based query front-end makes BGP-Inspect a unique and powerful tool. I...|$|R
40|$|Abstract—This study {{focuses on}} bureau {{management}} technologies and information systems in developing countries. Developing countries use such systems which facilitate executive and organizational functions through {{the utilization of}} bureau management technologies and provide the executive staff with necessary information. The concepts of data and information differ {{from each other in}} developing countries, and thus the concepts of data processing and information processing are different. Symbols represent ideas, objects, figures, letters and numbers. Data processing system is an integrated system which deals with the processing of the data related to the internal and external environment of the organization in order to make decisions, create plans and develop strategies; {{it goes without saying that}} this system is composed of both human beings and machines. Information is obtained through the acquisition and the processing of data. On the other hand, data are <b>raw</b> communicative <b>messages.</b> Within this framework, data processing equals to producing plausible information out of raw data. Organizations in developing countries need to obtain information relevant to them because rapid changes in the organizational arena require rapid access to accurate information. The most significant role of the directors and managers who work in the organizational arena is to make decisions. Making a correct decision is possible only when the directors and managers are equipped with sound ideas and appropriate information. Therefore, acquisition, organization and distribution of information gain significance. Today’s organizations make use of computer-assisted “Management Information Systems” in order to obtain and distribute information. Decision Support System which is closely related to practice is an information system that facilitates the director’s task of makin...|$|R
40|$|Background: The {{most common}} reason for patient {{dissatisfaction with the}} public health service is related to {{information}} and communication. Due to shorter admission periods cancer patients are increasingly expected to deal with symptoms and side-effects related to their treatment at home and by them selves. Online discussion groups increase the patient’s ability to exchange information and provide mutual support. Aim: To explore significance of relations in information exchanged between breast cancer patients participating in an online discussion forum. Method: A qualitative content analysis with an explorative/descriptive design was used. The <b>raw</b> data include <b>messages</b> submitted by 45 women with breast cancer to an online discussion group. Findings: The analysis shows that the patients, through the exchange of information, experienced sharing a unique bond. They noticed their peer’s ways of handling the illness and demonstrated great personal and formal knowledge of how to live with cancer. Conclusion: The patients in the online discussion group possess extensive knowledge about cancer and how to live with the illness. Their shared experiences enable them to show understanding and acceptance for each other’s situation. The patients are important resources for their peers in providing hope for the future, but also for handling painful situations. Online discussion groups are important supplements to the information provided by medical professionals...|$|R
40|$|Abstract — BGP, the inter-domain routing protocol, can exhibit complex {{behaviors}} {{under various}} conditions. Although BGP log data {{have been made}} available in the recent years, {{the sheer size of}} the log data makes it difficult to interpret BGP behavior using only the <b>raw</b> BGP update <b>messages</b> and understanding the global routing dynamics in today’s Internet remains a great challenge. In this paper we focus on the analysis of BGP update bursts, a commonly observed event that occurs at varying frequency. We define a BGP update burst as an occurrence {{of a large number of}} BGP updates that are separated by very short time intervals. To investigate the causes of such bursts we developed an ON/OFF model which can be used to classify the BGP bursts into two classes: stable routing changes and transient route flapping. A stable routing change means an existing route is replaced by a new route that lasts for a long time period, while transient route flapping means a series of routing updates occur for the prefix over a short time period but at the end of the burst the route is the same as the original route. By applying our ON/OFF model to BGP routing updates over the last two years, we found that the ON/OFF model is an effective way to identify stable routing changes, such as those caused by physical failures in the network, and that about half of the update bursts are caused by transient route flapping. Further investigation reveals the specific causes for a number of the transient flappings. Overall, the development of the ON/OFF model helps us make a significant step towards a complete understanding of the global routing dynamics. I...|$|R

