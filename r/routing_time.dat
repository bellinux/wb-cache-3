129|792|Public
50|$|After over 15 years, {{the market}} now has {{numerous}} service providers of virtual telephone numbers, {{each with a}} different package of advanced features, e.g. conference calling, fax to email, voicemail to email, area <b>routing,</b> <b>time</b> of day routing.|$|E
50|$|The system {{contains}} both a leaf set of neighbor nodes, {{which provides}} fault tolerance and a probabilistic invariant of constant routing progress, and a PRR-style routing table to improve <b>routing</b> <b>time</b> to a logarithmic factor of network size.|$|E
5000|$|The recipient's {{computer}} {{checks the}} {{date in the}} header (e.g., , which represents the date 8 Apr 2006). If it is not within two days of the current date, it is invalid. (The two-day window compensates for clock skew and network <b>routing</b> <b>time</b> between different systems.) ...|$|E
40|$|The article {{shows the}} study of model {{development}} of travelling salesman problem. Three models are studied, i. e. travelling salesman problem with <b>time</b> windows, vehicle <b>routing</b> problem, and vehicle <b>routing</b> problem with <b>time</b> windows. Abstract in Bahasa Indonesia : Dalam artikel ini dipaparkan kajian mengenai pengembangan model travelling salesman problem. Ada tiga model yang dikaji yaitu travelling salesman problem dengan <b>time</b> windows, vehicle <b>routing</b> problem, serta vehicle <b>routing</b> problem dengan <b>time</b> windows. Kata-kunci: travelling salesman problem, vehicle <b>routing</b> problem, <b>time</b> windows...|$|R
5000|$|Kolen, Antoon WJ, A. H. G. Rinnooy Kan, and H. W. J. M. Trienekens. [...] "Vehicle <b>routing</b> with <b>time</b> windows." [...] Operations Research 35.2 (1987): 266-273.|$|R
40|$|Abstract. In hot-potato (deflection) routing, nodes in {{the network}} have no buffers for packets in transit, so that some {{conflicting}} packets must be deflected away from their destinations. We study one-to-many batch routing problems on arbitrary tree topologies with n nodes. We present two hot-potato routing algorithms, one deterministic and one randomized, whose <b>routing</b> <b>times</b> are asymptotically near-optimal (within polylogarithmic factors). Both algorithms are local, hence distributed, and greedy; so, routing decisions are made locally, and packets are advanced towards their destinations whenever possible. ...|$|R
5000|$|This {{process of}} halving the {{remaining}} distance repeats itself, so after [...] steps, the distance remaining to [...] is at most in particular, after [...] steps, the remaining distance is at most [...] Because nodes are distributed uniformly at random along the identifier circle, the expected number of nodes falling within an interval of this length is 1, and with high probability, {{there are fewer}} than [...] such nodes. Because the message always advances {{by at least one}} node, it takes at most [...] steps for a message to traverse this remaining distance. The total expected <b>routing</b> <b>time</b> is thus [...]|$|E
50|$|The Italian navy ("Regia Marina") had {{the mission}} of keeping open the trans Mediterranean to North Africa and the Balkans; it was {{challenged}} by the British Royal Navy. It was well behind the British in the latest technology, such as radar, which was essential for night gunnery at long range. The Regia Marina had six battleships, 19 cruisers, 59 destroyers, 67 torpedo boats, and 116 submarines. Two aircraft carriers were under construction; they were never launched. The nation was too poor to launch a major shipbuilding campaign, which made the senior commanders cautious for fear of losing assets {{that could not be}} replaced. In the Battle of the Mediterranean the British had broken the Italian naval code and knew the times of departure, <b>routing,</b> <b>time</b> of arrival and make up of convoys. The Italians neglected to capture Malta, which became the main staging and logistical base for the British.|$|E
40|$|Abstract. Given an {{arbitrary}} network, and a routing problem with congestion C and dilation D, a long standing open {{problem is to}} show the existence of bufferless routing algorithms with optimal performance guarantees (<b>routing</b> <b>time</b> close to the lower bound Ω(C+D)). Our main result is a new deterministic technique that constructs a universal bufferless algorithm by emulating a universal buffered algorithm. The heart of the emulation is to replace packet buffering with packet circulation on regions of the network. The cost of the emulation on the <b>routing</b> <b>time</b> {{is proportional to the}} square of the node buffer size used by the buffered algorithm. We apply this emulation to a simple randomized buffered algorithm to obtain a distributed, universal bufferless algorithm with <b>routing</b> <b>time</b> O((C + D) · log 3 (n + N)), which is within poly-logarithmic factors from the optimal, where n is the size of the network and N is the number of packets. The bufferless competitive ratio is the ratio of the best achievable bufferless <b>routing</b> <b>time,</b> to the best achievable buffered <b>routing</b> <b>time.</b> We give the first non-trivial bound of O(log 3 (n + N)) for the bufferless competitive ratio for arbitrary routing problems. ...|$|E
40|$|AbstractIn this paper, {{we present}} a review with some limited of exacts, {{heuristics}} and metaheuristics methods for the vehicle <b>routing</b> problem <b>time</b> windows (VRPTW). Over the past 20 years vehicle <b>routing</b> problem with <b>time</b> windows has been an area of research that has attracted many researchers. In this period {{a number of papers}} have been published on the exact, heuristics and metaheursitics methods of the <b>routing</b> problem with <b>time</b> windows. This problem has model character in many branches of mathematics, computer science, and operations research. Metaheuristics support managers in decision-making with robust that provide high-quality solutions to important applications in business, engineering, economic and science in reasonable time horizons...|$|R
2500|$|<b>Time</b> {{dependent}} vehicle <b>routing</b> {{problem with}} <b>time</b> windows (TDVRPTW) ...|$|R
40|$|AbstractIn {{this article}} we present {{benchmark}} datasets for the Mixed Capacitated Arc <b>Routing</b> Problem under <b>Time</b> restrictions with Intermediate Facilities (MCARPTIF). The problem is a generalisation of the Capacitated Arc Routing Problem (CARP), and closely represents waste collection routing. Four different test sets are presented, each consisting of multiple instance files, and {{which can be used}} to benchmark different solution approaches for the MCARPTIF. An in-depth description of the datasets can be found in “Constructive heuristics for the Mixed Capacity Arc <b>Routing</b> Problem under <b>Time</b> Restrictions with Intermediate Facilities” (Willemseand Joubert, 2016) [2] and “Splitting procedures for the Mixed Capacitated Arc <b>Routing</b> Problem under <b>Time</b> restrictions with Intermediate Facilities” (Willemseand Joubert, in press) [4]. The datasets are publicly available from “Library of benchmark test sets for variants of the Capacitated Arc <b>Routing</b> Problem under <b>Time</b> restrictions with Intermediate Facilities” (Willemse and Joubert, 2016) [3]...|$|R
40|$|In hot-potato (deflection) routing, nodes in {{the network}} have no buffers for packets in transit, so that some {{conflicting}} packets must be deflected away from their destinations. In this work, we study one-to-many batch routing problems on arbitrary tree topologies with n nodes. The <b>routing</b> <b>time</b> of a routing algorithm {{is the time for}} the last packet to reach its destination. Denote by rt ∗ the optimal <b>routing</b> <b>time</b> for a given routing problem. We construct the first hot-potato routing algorithms whose routing times are asymptotically near-optimal; that is, the incurred routing times are within polylogarithmic factors from optimal. More specifically, we present: 1. A deterministic algorithm whose <b>routing</b> <b>time</b> is O(δ · rt ∗ · lg n), where δ is the maximum node degree; thus, for bounded-degree trees, the <b>routing</b> <b>time</b> becomes O(rt ∗ · lg n). 2. A randomized algorithm whose <b>routing</b> <b>time</b> is O(rt ∗ · lg 2 n) with high probability; randomization is used for adjusting packet priorities. Both algorithms are local, hence distributed, and greedy; so, routing decisions are made locally, and packets are advanced towards their destinations whenever possible, respectively...|$|E
40|$|Abstract-Permutation {{switching}} is a {{key operation}} in many computer and communication systems. The well-known BeneS and Waksman permutation networks can be constructed with an asymptotically minimum number of switches, but the best routing algorithms for such networks need O ((Ig 4 n/lg Ig n)) time on an n Ig n-processor computer. Other networks {{that can be used}} for permutation switching are Batcher’s sorting networks and Koppelman and Oruq’s self-routing permutation network, but these networks require O(nlgz n) switches and O(lg 2 n) <b>routing</b> <b>time.</b> Using a new composite interconnection network model, this paper presents a self-routing permutation network with O(n Ign) switches and O(Ig 2 n) <b>routing</b> <b>time.</b> More generally, it describes a permutation network with O(kn’+’’k) cost and O(k Ign) <b>routing</b> <b>time</b> for any k; 1 5 k 5 Ig n. This improves Nassimi and Sahni’s routing algorithm that gives O(klg 3 n) <b>routing</b> <b>time</b> for the same cost expression. The only networks capable of permutation switching with O(nIgn) cost and O(lgn) <b>routing</b> <b>time</b> are the AKS sorting network and Upfal’s packet routing network, but the constants hidden in the complexities of these networks are so large that they remain impractical until n gets very large. Index Terms- Concentrator, cube network permutation net-work, radix permuter, radix sorting, self-routing network. I...|$|E
40|$|In hot-potato (deflection) routing, nodes in {{the network}} have no bu#ers for packets in transit, so that some {{conflicting}} packets must be deflected away from their destinations. In this work, we study one-tomany batch routing problems on arbitrary tree topologies with n nodes. The <b>routing</b> <b>time</b> of a routing algorithm {{is the time for}} the last packet to reach its destination. Denote by rt the optimal <b>routing</b> <b>time</b> for a given routing problem...|$|E
2500|$|Vehicle <b>routing</b> {{problem with}} <b>time</b> windows and {{multiple}} service workers (VRPTWMS) ...|$|R
30|$|Only {{one copy}} of a packet is <b>routed</b> at any <b>time.</b>|$|R
5000|$|Vehicle <b>routing</b> {{problem with}} <b>time</b> windows and {{multiple}} service workers (VRPTWMS) ...|$|R
40|$|In a routing problem, {{a set of}} packets must be routed {{from their}} sources to their {{destinations}} along specified paths in a connected network. Given paths with congestion C and dilation D a lower bound on the <b>routing</b> <b>time</b> is Ω(C + D). The celebrated result of Leighton, Maggs and Rao (1988) established, non-constructively, {{the existence of a}} routing schedule which uses constant size buffers and routes the packets in optimal time O(C + D). Since then, construc-tive algorithms, as well as generalizations to distributed, buffered routing schedules have been developed. A long standing open problem is to give or show the existence of bufferless routing algorithms with optimal performance guarantees. This is the problem we address here. Our main result is a new deterministic technique that constructs a universal bufferless algorithm by emulating a universal buffered algorithm. The heart of the emulation is to replace packet buffering with packet circulation on regions of the network. The cost of the emulation on the <b>routing</b> <b>time</b> is proportional to the square of the node buffer size used by the buffered algorithm. We apply this emulation to a simple randomized universal buffered algorithm to obtain a distributed, universal bufferless algorithm with <b>routing</b> <b>time</b> the optimal <b>routing</b> <b>time</b> within a poly-logarithmic factor:...|$|E
40|$|In hot-potato (deflection) routing, nodes in {{the network}} have no bu#ers for packets in transit. A hotpotato routing {{algorithm}} is greedy if packets are advanced from their sources toward their destinations whenever possible. The dilation D is the longest distance a packet has to travel; the congestion C is {{the maximum number of}} packets that traverse any edge. The <b>routing</b> <b>time</b> of a routing-algorithm is the time for the last packet to reach its destination. A well known lower bound on the <b>routing</b> <b>time</b> is # C +D) ...|$|E
40|$|We give near optimal bufferless routing {{algorithms}} for leveled networks. N packets with preselected paths are given, {{and once}} injected, the packets {{may not be}} buffered while in transit to their destination. For the preselected paths, the dilation D is the maximum path length, and the congestion C is {{the maximum number of}} times an edge is used. We give two bufferless routing algorithms for leveled networks: (i) a centralized algorithm with <b>routing</b> <b>time</b> O((C+D) log(DN)); (ii) a distributed algorithm with <b>routing</b> <b>time</b> O((C+D) log&sup 2;(DN)). The distributed algorithm uses a new [...] ...|$|E
40|$|Abstract—QoS (Quality-of-Service) control {{will be one}} of {{the most}} {{important}} mechanisms in the next-generation Internet, where QoS routing (QoSR) is a promising solution. We propose a multi-constrained intradomain QoS routing protocol SQOSPF. The advantages of this protocol include easy implementation, multi-constrained QoS support, high-speed convergence and multiple QoSR algorithms support. Stochastic Petri Net is employed to model SQOSPF and analyze impacts of update threshold and <b>routing</b> holding <b>time</b> upon the load of networks and routers. Extensive simulations show that choosing appropriate update threshold and <b>routing</b> holding <b>time</b> can excessively reduce the extra load and keep routing performance at the same <b>time.</b> Keywords-QoS <b>routing,</b> routing protocol, Petri Net, SQOSPF, performance analysi...|$|R
40|$|The Electric Vehicle <b>Routing</b> Problem with <b>Time</b> Windows {{is a new}} {{variant of}} the {{classical}} Vehicle <b>Routing</b> Problem with <b>Time</b> Windows where the vehicles are routed to service a set of customers under recharging constraints. In this study, we propose an Adaptive Large Neighborhood Search method to solve this problem. Our initial results show the proposed method is effective in finding good solutions...|$|R
40|$|A {{parallel}} {{simulated annealing}} algorithm {{to solve the}} vehicle <b>routing</b> problem with <b>time</b> windows is presented. The objective {{is to find the}} best possible solutions to some wellknown instances of the problem by using parallelism. The empirical evidence indicate that parallel simulated annealing can be applied with success to bicriterion optimization Key words. Parallel simulated annealing, message passing model of parallel computation, vehicle <b>routing</b> problem with <b>time</b> windows, bicriterion optimization...|$|R
40|$|Abstract. We {{present the}} first constant-factor {{approximation}} algorithm for a fundamental problem: the store-and-forward packet routing problem on arbitrary networks. Furthermore, the queue sizes required {{at the edges}} are bounded by an absolute constant. Thus, this algorithmbalances a global criterion (<b>routing</b> <b>time)</b> with a local criterion (maximum queue size) and shows how to get simultaneous good bounds for both. For this particular problem, approximating the <b>routing</b> <b>time</b> well, even without considering the queue sizes, was open. We then consider a class of such local vs. global problems {{in the context of}} covering integer programs and show how to improve the local criterion by a logarithmic factor by losing a constant factor in the global criterion...|$|E
40|$|Routing with {{locality}} is {{studied for}} meshes with buses. In this problem, packets' distances are bounded by a value, d, {{which is less}} than the diameter of the network. This problem arises naturally when specific known algorithms are implemented on meshes. Solving this problem in ordinary meshes requires at least a <b>routing</b> <b>time</b> of d steps. To do better than this, we propose adding a kind of short bus to ordinary meshes. By using a technique which we call iterative walk-and-ride, we show how the <b>routing</b> <b>time</b> can be reduced by approximately one-third for solving the problem (including the multipacket version) on one-and two-dimensional short-bus meshes. The bounds we develop are tight. © 1996 Academic Press, Inc. link_to_subscribed_fulltex...|$|E
40|$|Abstract. We give near optimal bufferless routing {{algorithms}} for leveled networks. N packets with preselected paths are given, {{and once}} injected, the packets {{may not be}} buffered while in transit to their destination. For the preselected paths, the dilation D is the maximum path length, and the congestion C is {{the maximum number of}} times an edge is used. We give two bufferless routing algorithms for leveled networks: (i) a centralized algorithm with <b>routing</b> <b>time</b> O((C + D) log(DN)); (ii) a distributed algorithm with <b>routing</b> <b>time</b> O((C + D) log 2 (DN)). The distributed algorithm uses a new technique, reverse-simulation, which is used to obtain a distributed emulation of the centralized algorithm. Since a well known lower bound on the <b>routing</b> <b>time</b> is Ω (C + D), our results are at most one or two logarithmic factors from optimal. 1 Introduction We study bufferless routing on leveled networks, where packets cannot be storedat nodes while in transit to their destination. In particular we consider hot-potato (or deflection) routing [2], in which packets get &quot;deflected &quot; (like a &quot;hot-potato&quot;) if they cannot make progress toward their destination. Buffereless routing is appropriate when buffering is costly or impossible, for example in optical networks. A leveled network with dept...|$|E
40|$|In {{this article}} we present {{benchmark}} datasets for the Mixed Capacitated Arc <b>Routing</b> Problem under <b>Time</b> restrictions with Intermediate Facilities (MCARPTIF). The problem is a generalisation of the Capacitated Arc Routing Problem (CARP), and closely represents waste collection routing. Four different test sets are presented, each consisting of multiple instance files, and {{which can be used}} to benchmark different solution approaches for the MCARPTIF. An in-depth description of the datasets can be found in “Constructive heuristics for the Mixed Capacity Arc <b>Routing</b> Problem under <b>Time</b> Restrictions with Intermediate Facilities” (Willemseand Joubert, 2016) [2] and “Splitting procedures for the Mixed Capacitated Arc <b>Routing</b> Problem under <b>Time</b> restrictions with Intermediate Facilities” (Willemseand Joubert, in press) [4]. The datasets are publicly available from “Library of benchmark test sets for variants of the Capacitated Arc <b>Routing</b> Problem under <b>Time</b> restrictions with Intermediate Facilities” (Willemse and Joubert, 2016) [3]. The National Research Foundation of South Africa (Grant number 87749) and by the South African Department of Trade and Industry (Grant number 96415). [URL] and Systems Engineerin...|$|R
3000|$|When {{simulating}} sociable <b>routing,</b> the <b>time</b> {{interval between}} two refreshes of the sociability indicators must be set. This should be calibrated {{based on the}} nature of mobility traces. We assume no a priori information is available about the social behavior of the nodes. We then take [...]...|$|R
40|$|We give a livelock free routing {{algorithm}} for any allowed network. Unlike {{some other}} solutions to this problem: 1) packets entering the network have an absolute {{upper bound on}} the time to reach their destination; 2) under light loads, packets are delivered to their destinations in nearly optimal time; 3) packets with desired paths far away from congested areas will have <b>routing</b> <b>times</b> far shorter than packets wanting to access congested areas; 4) if the network becomes congested and later clears, the network operates just {{as it would have}} when it was initially under a light load. The main ideas of this note appear in a different form in my 1994 patent 5, 369, 745. This note adds to those results and makes them more mathematical. Comment: 5 page...|$|R
40|$|In Kleinberg's small-world network model, {{strong ties}} are modeled as {{deterministic}} edges in the underlying base grid and weak ties are modeled as random edges connecting remote nodes. The probability of connecting a node u with node v through a weak tie {{is proportional to}} 1 /|uv|^α, where |uv| is the grid distance between u and v and α> 0 is the parameter of the model. Complex contagion refers to the propagation mechanism in a network where each node is activated only after k > 2 neighbors of the node are activated. In this paper, we propose the concept of routing of complex contagion (or complex routing), where we can activate one node at one time step {{with the goal of}} activating the targeted node in the end. We consider decentralized routing scheme where only the weak ties from the activated nodes are revealed. We study the <b>routing</b> <b>time</b> of complex contagion and compare the result with simple routing and complex diffusion (the diffusion of complex contagion, where all nodes that could be activated are activated immediately in the same step with the goal of activating all nodes in the end). We show that for decentralized complex routing, the <b>routing</b> <b>time</b> is lower bounded by a polynomial in n (the number of nodes in the network) for all range of α both in expectation and with high probability (in particular, Ω(n^ 1 /α+ 2) for α 2 in expectation), while the <b>routing</b> <b>time</b> of simple contagion has polylogarithmic upper bound when α = 2. Our results indicate that complex routing is harder than complex diffusion and the <b>routing</b> <b>time</b> of complex contagion differs exponentially compared to simple contagion at sweetspot. Comment: Conference version will appear in COCOON 201...|$|E
40|$|Kademlia is {{currently}} {{the most widely used}} searching algorithm in P 2 P (peer-to-peer) networks. This work studies an essential question about Kademlia from a mathematical perspective: {{how long does it take}} to locate a node in the network? To answer it, we introduce a random graph K and study how many steps are needed to locate a given vertex in K using Kademlia's algorithm, which we call the <b>routing</b> <b>time.</b> Two slightly different versions of K are studied. In the first one, vertices of K are labelled with fixed IDs. In the second one, vertices are assumed to have randomly selected IDs. In both cases, we show that the <b>routing</b> <b>time</b> is about c*log(n), where n is the number of nodes in the network and c is an explicitly described constant. Comment: ISAAC 201...|$|E
40|$|We {{show that}} adding partitioned-buses (as opposed to long buses that span an entire row or column) to {{ordinary}} meshes {{can reduce the}} <b>routing</b> <b>time</b> by approximately one-third for permutation routing with locality. A matching time lower bound is also proved. The result can be generalized to multi-packet routing. published_or_final_versio...|$|E
50|$|Vehicle <b>Routing</b> Problem with <b>Time</b> Windows (VRPTW): The {{delivery}} locations {{have time}} windows {{within which the}} deliveries (or visits) must be made.|$|R
40|$|This paper {{presents}} an efficient and well-scalable metaheuristic for fleet size and mix vehicle <b>routing</b> with <b>time</b> windows. The suggested solution method combines {{the strengths of}} well-known threshold accepting and guided local search metaheuristics to guide a set of four local search heuristics. The computational tests were done using the benchmarks of [Liu, F. -H., & Shen, S. -Y. (1999). The fleet size and mix vehicle <b>routing</b> problem with <b>time</b> windows. Journal of the Operational Research Society, 50 (7), 721 - 732] and 600 new benchmark problems suggested in this paper. The {{results indicate that the}} suggested method is competitive and scales almost linearly up to instances with 1000 customers...|$|R
60|$|July 30.--One of {{the most}} peppering thunder-storms which I have heard for some <b>time.</b> <b>Routed</b> and roared from {{six in the morning}} till eight continuously.|$|R
