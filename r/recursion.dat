10000|947|Public
5|$|The film {{inspired}} the suffix , {{which can be}} appended to a noun to indicate a layering, nesting, or <b>recursion</b> of the thing in question.|$|E
5|$|Using this <b>recursion,</b> Bézout's {{integers}} s and t {{are given}} by s = s'N and t = t'N, where N+1 is the step {{on which the}} algorithm terminates with r'N+1 = 0.|$|E
5|$|At the {{beginning}} of the kth iteration, the variable b holds the latest remainder r'k−1, whereas the variable a holds its predecessor, r'k−2. The step b := a mod b is equivalent to the above <b>recursion</b> formula r'k ≡ r'k−2 mod r'k−1. The temporary variable t holds the value of r'k−1 while the next remainder r'k is being calculated. At the end of the loop iteration, the variable b holds the remainder r'k, whereas the variable a holds its predecessor, r'k−1.|$|E
40|$|AbstractDetecting bounded <b>recursions</b> is a {{powerful}} optimization technique for recursive database query languages, as bounded <b>recursions</b> can be replaced by equivalent nonrecursive definitions. The problem is also of theoretical interest in that varying the class of <b>recursions</b> considered generates problem instances that vary from linearly decidable to NP-hard to undecidable. In this paper we review and clarify the existing definitions of boundedness. We then specify a class of <b>recursions</b> C such that membership in C guarantees that a certain simple condition is necessary and sufficient for boundedness. We use the notion of membership in C to unify and extend previous work on determining decidable classes of bounded <b>recursions...</b>|$|R
40|$|In several {{applications}} arising in compute science, cascade theory, {{and other}} applied areas, {{it is of}} interest to evaluate the tail probabilities of non-homogeneous stochastic fixed point equations. Recently, techniques {{have been developed for}} the related linear <b>recursions,</b> yielding tail estimates and importance sampling methods for these <b>recursions.</b> However, such methods do not routinely generalize to non-homogeneous <b>recursions.</b> Drawing on techniques from the weighted branching process literature, we present a consistent, strongly efficient importance sampling algorithm for estimating the tail probabilities for the case of non-homogeneous <b>recursions.</b> ...|$|R
3000|$|... (refer to Section 4 and (7)).) {{is higher}} than a desired value, {{there is no need}} to proceed any further. Otherwise, we can {{gradually}} increase the number of <b>recursions</b> by an appropriate step size. This heuristic stops when it either reaches the maximum allowed <b>recursions</b> or when increasing the number of <b>recursions</b> does not result in a noticeable improvement in the throughput.|$|R
5|$|Modelling is {{far from}} the only {{possible}} way to illustrate mathematical concepts. Giotto's Stefaneschi Triptych, 1320, illustrates <b>recursion</b> in the form of mise en abyme; the central panel of the triptych contains, lower left, the kneeling figure of Cardinal Stefaneschi, holding up the triptych as an offering. Giorgio Chirico's metaphysical paintings such as his 1917 Great Metaphysical Interior explore the question of levels of representation in art by depicting paintings within his paintings.|$|E
5|$|Mathematics has {{directly}} influenced {{art with}} conceptual {{tools such as}} linear perspective, the analysis of symmetry, and mathematical objects such as polyhedra and the Möbius strip. Magnus Wenninger creates colourful stellated polyhedra, originally as models for teaching. Mathematical concepts such as <b>recursion</b> and logical paradox {{can be seen in}} paintings by Rene Magritte and in engravings by M. C. Escher. Computer art often makes use of fractals including the Mandelbrot set, and sometimes explores other mathematical objects such as cellular automata. Controversially, the artist David Hockney has argued that artists from the Renaissance onwards made use of the camera lucida to draw precise representations of scenes; the architect Philip Steadman similarly argued that Vermeer used the camera obscura in his distinctively observed paintings.|$|E
25|$|In {{functional}} programming languages, such as Haskell and Scheme, loops {{can be expressed}} by using <b>recursion</b> or fixed point iteration rather than explicit looping constructs. Tail <b>recursion</b> is a special case of <b>recursion</b> which can be easily transformed to iteration.|$|E
40|$|This paper {{begins with}} a brief {{discussion}} of a class of polynomial Riemann hypotheses, {{which leads to the}} consideration of sequences of orthogonal polynomials and 3 -term <b>recursions.</b> The discussion further leads to higher order polynomial <b>recursions,</b> including 4 -term <b>recursions</b> where orthogonality is lost. Nevertheless, we show that classical results on the nature of zeros of real orthogonal polynomials (i. e., that the zeros of pn are real and those of pn+ 1 interleave those of pn) may be extended to polynomial sequences satisfying certain 4 -term <b>recursions.</b> We identify speci c polynomial sequences satisfying higher order <b>recursions</b> that should also satisfy this classical result. As with the 3 -term <b>recursions,</b> the 4 -term <b>recursions</b> give rise naturally to a linear functional. In the case of 3 -term <b>recursions</b> the zeros fall nicely into place when it is known that the functional is positive, {{but in the case of}} our 4 -term <b>recursions,</b> we show that the functional can be positive even when there are non-real zeros among some of the polynomials. It is interesting, however, that for our 4 -term <b>recursions</b> positivity is guaranteed when a certain real parameter C satis es C 3, and this is exactly the condition of our result that guarantees the zeros have the aforementioned interleaving property. We conjecture the condition C 3 is also necessary. Next we used a classical determinant criterion to nd exactly when the associated linear functional is positive, and we found that the Hankel determinants n formed from the sequence of moments of the functional when C = 3 give rise to the initial values of the integer sequence 1; 3; 26; 646; 45885;; of Alternating Sign Matrices (ASMs) with vertical symmetry. This spurred an intense interest in these moments, and we give 9 divers [...] ...|$|R
40|$|A {{deductive}} database system prototype, LogicBase, has been developed, {{with an emphasis}} on efficient compilation and query evaluation of application-oriented <b>recursions</b> in {{deductive database}}s. The system identifies different classes of <b>recursions</b> and compiles <b>recursions</b> into chain or pseudo-chain forms when appropriate. Queries posed to the compiled <b>recursions</b> are analyzed systematically with efficient evaluation plans generated and executed, mainly based on a chain-based query evaluation method. The system has been tested using sophisticated <b>recursions</b> and queries with satisfactory performance. This paper introduces the general design principles and implementation techniques of the system and discusses its strength and limitations. 1 Introduction As an important extension to relational approach, research into deductive database systems represents a direction towards declarative query processing, high-level database programming, and integration of logic programming and relational databa [...] ...|$|R
40|$|Introduction The four {{sections}} {{in this chapter}} deal with four distinct topics: systems of <b>recursions,</b> exponential generating functions, P'olya's Theorem and asymptotics estimates. These sections can be read independently of one another. The section on &quot;asymptotic &quot; estimates refers to formulas in earlier sections of the chapter, {{but there is no}} need to read the section containing the formula. &quot;Systems of <b>recursions,</b> &quot; as you might guess, deals with the creation and solution of sets of simultaneous <b>recursions.</b> These can arise in a variety of ways. One source of them is algorithms that involve interrelated recursive subroutines. Another source is situations that can be associated with grammars. General context free grammars can lead to complicated <b>recursions,</b> but regular grammars (which are equivalent to finite state automata) lead to simple systems of <b>recursions.</b> We limit our attention to these simple systems...|$|R
25|$|In {{this case}} the tree {{function}} calls the forest function by single <b>recursion,</b> but the forest function calls the tree function by multiple <b>recursion.</b>|$|E
25|$|The System One variety {{accessible}} to System Three of <b>recursion</b> x equals the variety disposed by {{the sum of}} the metasystems of <b>recursion</b> y for every recursive pair.|$|E
25|$|Contemporary {{research}} in <b>recursion</b> theory includes {{the study of}} applications such as algorithmic randomness, computable model theory, and reverse mathematics, {{as well as new}} results in pure <b>recursion</b> theory.|$|E
40|$|We present {{telescoping}} recursive representations {{for both}} continuous and discrete indexed noncausal Gauss-Markov random fields. Our <b>recursions</b> {{start at the}} boundary (a hypersurface in ^d, d > 1) and telescope inwards. For example, for images, the telescoping representation reduce <b>recursions</b> from d = 2 to d = 1, i. e., to <b>recursions</b> on a single dimension. Under appropriate conditions, the <b>recursions</b> for the random field are linear stochastic differential/difference equations driven by white noise, for which we derive recursive estimation algorithms, that extend standard algorithms, like the Kalman-Bucy filter and the Rauch-Tung-Striebel smoother, to noncausal Markov random fields. Comment: To appear in the Transactions on Information Theor...|$|R
40|$|In {{this paper}} we study the {{asymptotic}} eigenvalue distribution of certain random Lyapunov and Riccati <b>recursions</b> {{that arise in}} signal processing and control. The analysis of such <b>recursions</b> has remained elusive when the system and/or covariance matrices are random. Here we use transform techniques (such as the Stieltjes transform and free probability) that have gained popularity {{in the study of}} large random matrices. While we have not yet developed a full theory, we do obtain explicit formula for the asymptotic eigendistribution of certain classes of Lyapunov and Riccati <b>recursions,</b> which well match simulation results. Generalizing the results to arbitrary classes of such <b>recursions</b> is currently under investigation...|$|R
40|$|Synchronous chain <b>recursions</b> {{are a very}} {{frequent}} form of query in {{deductive database}} systems. Efficient query-processing is required, and algorithms suitable for parallel processing are needed. This paper generalises the arithmetic method of query answering (by integer arithmetic on path lengths in the query subgraph of the database diagraph) to N-chain <b>recursions.</b> Introduction Two assumptions which pervade the DDB literature are: i) no single evaluation can work efficiently on all forms of recursive query ii) the majority of DDB queries are single-linear <b>recursions.</b> (Also known as linear sirups and canonical strongly linear (SL) queries). Accordingly, efficient DDB systems use {{a number of different}} query processing methods, and performance can be significantly improved by efficiently handling linear <b>recursions.</b> There are usually two ways to improve DDB systems performance: i) develop efficient query processing algorithm and ii) make use of parallel processing. N-chain <b>recursions</b> a [...] ...|$|R
25|$|In {{mathematics}} and computer science, mutual <b>recursion</b> {{is a form}} of <b>recursion</b> where two mathematical or computational objects, such as functions or data types, are defined in terms of each other.|$|E
25|$|Some {{commentators}} {{argue that}} both the names <b>recursion</b> theory and computability theory fail to convey {{the fact that most}} of the objects studied in <b>recursion</b> theory are not computable.|$|E
25|$|Mutual <b>recursion</b> is {{very common}} in the {{functional}} programming style, and is often used for programs written in LISP, Scheme, ML, and similar languages. In languages such as Prolog, mutual <b>recursion</b> is almost unavoidable.|$|E
40|$|AbstractYoung tableaux and Gelfand {{patterns}} which combinatorially describe {{characters of}} irreducible finite dimensional representations of complex classical Lie groups are presented. Some branching rules and/or character <b>recursions</b> are given explicit combinatorial descriptions. These <b>recursions</b> {{are derived from}} manipulations of determinantal character formulas...|$|R
30|$|The next theorem {{states the}} {{bilinear}} lag-one <b>recursions.</b>|$|R
5000|$|... "3 The {{converse}} {{seems to}} be true, if besides <b>recursions</b> according to the scheme (2) <b>recursions</b> of other forms (e.g., with respect to two variables simultaneously) are admitted. This cannot be proved, since the notion of finite computation is not defined, but {{it serves as a}} heuristic principle." ...|$|R
25|$|Any mutual <b>recursion</b> {{between two}} {{procedures}} {{can be converted}} to direct <b>recursion</b> by inlining the code of one procedure into the other. If there is only one site where one procedure calls the other, this is straightforward, though if there are several it can involve code duplication. In terms of the call stack, two mutually recursive procedures yield a stack ABABAB..., and inlining B into A yields the direct <b>recursion</b> (AB)(AB)(AB)...|$|E
25|$|Generalized <b>recursion</b> theory {{extends the}} ideas of <b>recursion</b> theory to {{computations}} that are no longer necessarily finite. It includes the study of computability in higher types as well as areas such as hyperarithmetical theory and -recursion theory.|$|E
25|$|Infinite {{loops and}} {{infinite}} <b>recursion.</b>|$|E
40|$|This paper {{extends the}} Chandrasekhar-type <b>recursions</b> due to Morf, Sidhu, and Kailath "Some new {{algorithms}} for recursive estimation in constant, linear, discrete-time systems, IEEE Trans. Autom. Control 19 (1974) 315 - 323 " {{to the case}} of periodic time-varying state-space models. We show that the S-lagged increments of the one-step prediction error covariance satisfy certain <b>recursions</b> from which we derive some algorithms for linear least squares estimation for periodic state-space models. The proposed <b>recursions</b> may have potential computational advantages over the Kalman Filter and, in particular, the periodic Riccati difference equation...|$|R
50|$|Observe {{that the}} grammar {{does not have}} left <b>recursions.</b>|$|R
40|$|Recursion's removal {{improves}} {{the efficiency of}} recursive algorithms, especially algorithms with large formal parameters, such as fast matrix multiplication algorithms. In this article, a general method of breaking <b>recursions</b> in fast matrix multiplication algorithms is introduced, which is generalized from <b>recursions</b> removal of a specific fast matrix multiplication algorithm of Winograd...|$|R
25|$|There {{are also}} some {{algorithms}} which naturally have two phases, such as minimax (min and max), and these can be implemented by having each phase in a separate function with mutual <b>recursion,</b> though {{they can also be}} combined into a single function with direct <b>recursion.</b>|$|E
25|$|The Ackermann function, {{due to its}} {{definition}} in terms of extremely deep <b>recursion,</b> {{can be used as}} a benchmark of a compiler's ability to optimize <b>recursion.</b> The first published use of Ackermann's function in this way was in 1971 by Yngve Sundblad.|$|E
25|$|Everett {{claims that}} the absence of <b>recursion,</b> if real, falsifies the basic {{assumption}} of modern Chomskyan linguistics. This claim is contested by many linguists, who claim that <b>recursion</b> has been observed in Pirahã by Everett himself, while Everett argues that those utterances that superficially seemed recursive to him at first were misinterpretations caused by his earlier lack of familiarity with the language. Furthermore, some linguists, including Chomsky himself, argue that even if Pirahã lacked <b>recursion,</b> that would have no implications for Chomskyan linguistics.|$|E
40|$|At Crypto 2009 [1], Bernstein {{initiated}} an optimization of Karatsuba {{formula for}} binary polynomial multiplication by reorganizing the computations {{in the reconstruction}} part of two <b>recursions</b> of the formula. This approach was generalized in [10] to an arbitrary number of <b>recursions</b> resulting in the best known bit parallel multiplier based on Karatsuba formula. In this paper we extend this approach to three-way split formula: we first reorganize two <b>recursions</b> and then extend this re-organization to an arbitrary number s of <b>recursions.</b> We obtain a parallel multiplier with a space complexity of 4. 68 n log 3 (6) +O(n) XOR gates and n log 3 (6) AND gates and a delay of 3 log 3 (n) D⊕+D⊗. This improves the previous best known results regarding space complexity of [2] and reaches the same time complexity as the the best known approach [4]...|$|R
40|$|We {{describe}} three <b>recursions</b> for top intersections of tautological {{classes on}} blowups of moduli spaces of genus-one curves. Two of these <b>recursions</b> are {{analogous to the}} well-known string and dilaton equations. As shown in separate papers, these numbers are useful for computing genus-one enumerative invariants of projective spaces and Gromov-Witten invariants of complete intersections...|$|R
30|$|The further {{detail of}} the EKF <b>recursions</b> {{can be found in}} [20].|$|R
