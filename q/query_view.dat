41|702|Public
5000|$|Given a <b>query,</b> <b>view</b> {{this as a}} mini document, {{and compare}} it to your {{documents}} in the low-dimensional space.|$|E
50|$|QVT, which {{introduces}} {{means to}} <b>query,</b> <b>view</b> and transform MOF-based models, {{is a very}} important standard, approved in 2005. See Model Transformation Language for further information.|$|E
5000|$|The <b>Query</b> <b>view</b> {{is similar}} in {{appearance}} to the Pipeline view. Here, the user constructs partial pipelines. When the query is executed, VisTrails identifies the pipeline versions which contain the specified partial pipeline. This {{is analogous to the}} Query By Example method of performing database queries.|$|E
5000|$|Database Explorer - GUI {{tool for}} <b>querying,</b> <b>viewing</b> and editing {{database}} content.|$|R
40|$|Materialized complex {{object-oriented}} {{views are}} a promising technique for {{the integration of}} heterogeneous databases {{and the development of}} powerful data warehousing systems. Path <b>query</b> <b>views</b> are virtual classes formed from selection queries that specify a predicate upon the value of an aggregation hierarchy path. The primary difference between previous work regarding OODB indexing and the efficient implementation of materialized path <b>query</b> <b>views</b> addressed in this paper lies in the nature of their usage. For OODB indexing, query usage is the primary purpose of index structures. Because the materialized view data itself can be used to answer queries, the primary use of index structures with regard to materialized path <b>query</b> <b>views</b> is for the incremental maintenance of views in the face of updates. We have developed an augmented inherited multi-index (AIM) strategy that is specifically tailored for the maintenance of materialized path <b>query</b> <b>views.</b> We find that we can improve update perform [...] ...|$|R
40|$|One {{approach}} to simplifying ontologies, {{for inclusion in}} a more tractable semantic web, is {{through the use of}} non-materialized <b>view</b> <b>queries.</b> <b>View</b> <b>queries</b> define how a simplified “view” or “application” ontology is derived from larger more complex ontologies. In this work we look at a language for specifying <b>view</b> <b>queries</b> over OWL/RDFS sources, and we illustrate some initial ideas for how to execute user <b>queries</b> over our <b>view</b> ontology, without materializing it first...|$|R
40|$|In {{this paper}} {{we present a}} {{prototype}} system for image based localization in urban environments. Given a database of views of city street scenes tagged by GPS locations, the system computes the GPS location of a novel <b>query</b> <b>view.</b> We first use a wide-baseline matching technique based on SIFT features to select the closest views in the database. Often due to a large change of viewpoint and presence of repetitive structures, {{a large percentage of}} matches (> 50 %) are not correct correspondences. The subsequent motion estimation between the <b>query</b> <b>view</b> and the reference view, is then handled by a novel and efficient robust estimation technique capable of dealing with large percentage of outliers. This stage is also accompanied by a model selection step among the fundamental matrix and the homography. Once the motion between the closest reference views is estimated, the location of the <b>query</b> <b>view</b> is then obtained by triangulation of translation directions. Approximate solutions for cases when triangulation cannot be obtained reliably are also described. The presented system is tested on the dataset used in ICCV 2005 Computer Vision Contest and is shown to have higher accuracy than previous reported results. ...|$|E
40|$|Abstract—In {{this paper}} we present an {{approach}} for image based localization in urban environments. Given {{a database of}} views of city street views tagged by GPS locations, the system computes the GPS location of a novel <b>query</b> <b>view.</b> We first use a wide-baseline matching technique based on SIFT features to select the closest views in the database. Often due to a large change of viewpoint and presence of repetitive structures, {{a large percentage of}} matches (> 50 %) are not correct correspondences. The subsequent motion estimation between the <b>query</b> <b>view</b> and the reference view, is then handled by a novel and efficient robust estimation technique capable of dealing with large percentage of outliers. We will discuss in detail sensitivity and robustness of the proposed robust estimation method. The motion estimation stage is also accompanied by a model selection step among the fundamental matrix and the homography. Once the motion between the closest reference views is estimated, the location of the <b>query</b> <b>view</b> is then obtained by triangulation of translation directions. The presented system is tested on a moderate size dataset of street views and results are shown to have higher accuracy than previous reported results. Performance and scalability of the presented system will be also discussed...|$|E
40|$|To {{provide a}} {{complete}} {{analysis of the}} organization, its business and its needs, {{it is necessary for}} leaders to have data that help decision making. Data warehouses are designed to meet such needs; they are an analysis and data management technology. This article describes an MDA (Model Driven Architecture) process that we have used to automatically generate the multidimensional schema of data warehouse. This process uses model transformation using several standards such as Unified Modeling Language, Meta-Object Facility, <b>Query</b> <b>View</b> Transformation, Object Constraint Language, [...] . From the UML model, especially the class diagram, a multidimensional model is generated as an XML file, the transformation is carried out by the QVT (<b>Query</b> <b>View</b> Transformation) language and the OCL (Object Constraint Language) Language. To validate our approach a case study is presented {{at the end of this}} wor...|$|E
40|$|We propose {{incorporating}} <b>query</b> <b>views</b> in {{a number}} of static pruning strategies, namely term-centric, document-centric and access-based approaches. These query-view based strategies considerably outperform their counterparts for both disjunctive and conjunctive query processing in Web search engines. Categories and Subject Descriptor...|$|R
40|$|Answering <b>queries</b> using <b>views</b> {{amounts to}} {{computing}} {{the answer to}} a query having information only on the extension of a set of precomputed <b>queries</b> (<b>views).</b> This problem is relevant in several fields, such as information integration, query optimization, and data warehousing, and has been studied recently in different settings. In this paper we address answering <b>queries</b> using <b>views</b> in a setting where intensional knowledge about the domain is represented using a very expressive Description Logic equipped with n-ary relations, and queries are nonrecursive datalog queries whose predicates are the concepts and relations that appear in the Description Logic knowledge base. We study the problem under different assumptions, namely, closed and open domain, and sound, complete, and exact information on view extensions. We show that under the closed domain assumption, in which the set of all objects in the knowledge base coincides with the set of objects stored in the <b>views,</b> answering <b>queries</b> using <b>views</b> is already intractable. We show also that under the open domain assumption the problem is decidable in double exponential time...|$|R
40|$|We {{present an}} {{scalable}} algorithm for answering multiple conjunctive <b>queries</b> using <b>views.</b> This {{is an important}} problem in query optimization, data integration and ontology-based data access. Since rewriting one conjunctive <b>query</b> using <b>views</b> is an NP-hard problem, we develop an approach where answering n queries takes less than n times the cost of answering one query, by compactly representing and indexing common patterns in the input <b>queries</b> and the <b>views.</b> Our initial experimental results show a promising speed up. 1...|$|R
40|$|Location-based service Continuous spatial <b>query</b> <b>View</b> field nearest {{neighbor}} query query {{can be employed}} for applications such as augmented reality systems, tour guide sys-jects outsid lled the vi {{nearest neighbor}} query. Given the location and {{the field of view}} of a user, the view field nearest neighbor query retrie nearest data object (from the user’s location) that exists in the user’s view field...|$|E
40|$|In this paper, {{we present}} our methods on {{explicitly}} documenting the evolution processes of a design pattern based on two-level transformations. We provide tool support to automate such process {{based on the}} <b>Query,</b> <b>View,</b> Transformation (QVT). In this way, a software system design with the applications of design patterns represented in UML model may be automatically evolved to a new design based on the model transformation rules defined for the corresponding design patterns applied...|$|E
40|$|We {{describe}} {{the prototype of}} a system intended to allow a user to navigate in an urban environment using a mobile telephone equipped with a camera. The system uses a database of views of building facades to determine the pose of a <b>query</b> <b>view</b> provided by the user. Our method {{is based on a}} novel wide-baseline matching algorithm that can identify corresponding building facades in two views despite significant changes of viewpoint and lighting. We show that our system is capable of localising query views reliably in a large part of Cambridge city centre. ...|$|E
40|$|International audienceLocation {{recognition}} is commonly treated as visual instance retrieval on "street view" imagery. The dataset items and <b>queries</b> are panoramic <b>views,</b> i. e. groups of images taken {{at a single}} location. This work introduces a novel panorama-to-panorama matching process, either by aggregating features of individual images in a group or by explicitly constructing a larger panorama. In either case, multiple views are used as queries. We reach near perfect location recognition on a standard benchmark with only four <b>query</b> <b>views...</b>|$|R
40|$|We {{revisit the}} problem of {{answering}} tree pattern <b>queries</b> using <b>views.</b> We first show that, for <b>queries</b> and <b>views</b> {{that do not have}} nodes labeled with the wildcard *, there is an alternative to the approach of query rewriting which does not require us to find any rewritings explicitly yet which produces the same answers as the maximal contained rewriting. Then, using the new approach, we give a simple criterion and a corresponding algorithm for identifying redundant view answers, which are view answers that can be ignored when evaluating the maximal contained rewriting. Finally, for <b>queries</b> and <b>views</b> that do have nodes labeled *, we provide a method to find the maximal contained rewriting and show how to answer the <b>query</b> using <b>views</b> without explicitly finding the rewritings. Griffith Sciences, School of Information and Communication TechnologyFull Tex...|$|R
40|$|A popular {{technique}} for answering <b>queries</b> using <b>views</b> is to rst rewrite the <b>queries</b> using the <b>views</b> {{and then to}} evaluate the queries using the data in the views. Exist-ing work has addressed the problem of nd-ing equivalent or maximally-contained rewrit-ings (MCR) of <b>queries</b> using <b>views.</b> At the same time, emerging applications require in-vestigating the problem of rewriting <b>queries</b> using <b>views</b> in a more general setting, and pose new technical challenges. In this paper we consider the problem of nding whether there exist rewritings that (1) are contained in the query, (2) contain the query, or (3) overlap with the query. We investigate com-plexity issues and present ecient sound and complete algorithms that nd minimally con-taining rewritings (MiCR) and check {{for the existence of}} contained rewritings, which is an easier problem than nding an MCR...|$|R
40|$|The MOF <b>Query,</b> <b>View</b> and Transformation RFP, {{issued by}} OMG {{will result in}} a key {{enabling}} technology for model-driven development of large distributed systems. We have designed a transformation language which will meet the re-quirements of this RFP, and several others besides. The lan-guage is declarative and patterns based. Transformation descriptions are explicitly reusable and modular. Rules that make up such descriptions may be aspect-driven, allowing for transformations to be written to address semantic con-cepts rather than structural features. This paper introduces the language and its rationale, and shows how it is used to solve a small but non-trivial MDA problem. ...|$|E
40|$|The OMG’s Model Driven Architecture is a {{reference}} architecture for model driven development of computing systems. Implementations of primitive forms of {{this style of}} development are everywhere, but {{a reference}} implementation architecture is still some way off. This paper explains our set of requirements for the main components required for MDA: A single Meta-Modeling Language, Platform Independent Modelling Languages, Platform Specific Modelling Languages, and a Transformation Language. It also sketches the solutions that are emerging from various standardisation efforts in which the authors are participating in particular the EDOC ECA language and the MOF 2. 0 <b>Query,</b> <b>View</b> and Transformation languag...|$|E
40|$|International audienceThe Object Constraint Language (OCL) is {{a central}} {{component}} in modeling and transformation languages such as the Unified Modeling Language (UML), the Meta Object Facility (MOF), and <b>Query</b> <b>View</b> Transformation (QVT). OCL is standardized as a strict functional language. In this article, we propose a lazy evaluation strategy for OCL. We argue that a lazy evaluation semantics is beneficial in some model-driven engineering scenarios for: i) lowering evaluation times on very large models; ii) simplifying expressions on models by using infinite data structures (e. g., infinite models); iii) increasing the reusability of OCL libraries. We implement the approach on the ATL virtual machine EMFTVM...|$|E
40|$|In {{studying}} actual Web searching by {{the public}} at large, we analyzed over one million Web queries by users of theExcitesearchengine. Wefoundthatmostpeopleuse few search terms, few modified <b>queries,</b> <b>view</b> few Web pages,andrarelyuseadvancedsearchfeatures. Asmall number of search terms are used with high frequency, andagreatmanytermsareunique;thelanguageofWeb queries is distinctive. Queries about recreation and entertainmentrankhighest. Findingsarecomparedtodata from two other large studies of Web queries. This study providesaninsightintothepublicpracticesandchoices in Web searching...|$|R
5000|$|Added the Visual Query Designer, a {{graphical}} interface {{that allows}} users to interactively build <b>queries</b> and <b>view</b> the results.|$|R
40|$|Abstract. We {{study the}} problem of {{rewriting}} <b>queries</b> using <b>views</b> {{in the presence of}} access patterns, integrity constraints, disjunction, and negation. We provide asymptotically optimal algorithms for finding minimal containing and maximal contained rewritings and for deciding whether an exact rewriting exists. We show that rewriting <b>queries</b> using <b>views</b> in this case reduces (a) to rewriting queries with access patterns and constraints without views and also (b) to rewriting <b>queries</b> using <b>views</b> under constraints without access patterns. We show how to solve (a) directly and how to reduce (b) to rewriting queries under constraints only (semantic optimization). These reductions provide two separate routes to a unified solution for all three problems, based on an extension of the relational chase theory to queries and constraints with disjunction and negation. We also handle equality and arithmetic comparisons. ...|$|R
40|$|The MOF (Meta Object Facility) <b>query,</b> <b>view</b> and {{transformation}} RFP, issued by OMG {{will result in}} a key enabling technology for model-driven development of large distributed systems. We have designed a transformation language which will meet the requirements of this RFP, and several others besides. The language is declarative and patterns based. Transformation descriptions are explicitly reusable and modular. Rules that make up such descriptions may be aspect-driven, allowing for transformations to be written to address semantic concepts rather than structural features. This paper introduces the language and its rationale, and shows how it is used to solve s small but non-trivial MDA problem...|$|E
40|$|A Data {{warehouse}} (DW) {{is characterized}} by a complex architecture, designed in order to integrate data derived from operational data sources (DS), hence providing advanced analytical tools of these data. The DW is highly dependent on its DS. Hence, evolutions of the DS schema need to be propagated to the DW schema and content. This paper presents a model-driven approach for the evolution of a multidimensional DW. It is based on two evolution models: a first evolution model for the DS and another for the DW. These two models concern the data structure aspects as well as the evolution operations. The transition between these two models is performed through specific transformation rules defined in QVT (<b>Query</b> <b>View</b> Transformation) ...|$|E
40|$|Transformation {{is one of}} the {{prominent}} features and the rising research area of Model Driven Architecture since last few years. There are many techniques which have been proposed as a Request for Proposal (RFP) in <b>Query,</b> <b>View</b> and Transformation (QVT). In this paper we have conducted a survey on transformation techniques. The surveyed techniques include pattern based approaches, transformation languages, transformation rules, Metamodel based approaches etc. This work has summarize, categorized and identified different analysis parameters of these techniques. On the basis of identified parameters we have presented an analysis matrix to describe the strength of different approaches. The major focus of the work is on model to model transformation techniques i. e. from PIM to PSM transformation...|$|E
40|$|In this paper, we {{investigate}} {{a first step}} towards the long-term vision of the Semantic Web by studying the problem of answering queries posed through a mediated ontology to multiple information sources whose content is described as views over the ontology relations. The contributions of this paper are twofold. We first o#er a uniform logical setting which allows us to encompass and to relate the existing work on answering and rewriting <b>queries</b> using <b>views.</b> In particular, we make clearer {{the connection between the}} problem of rewriting <b>queries</b> using <b>views</b> and the problem of answering queries using extensions of views. Then we focus on an instance of the problem of rewriting conjunctive <b>queries</b> using <b>views</b> through an ontology expressed in a description logic, for which we exhibit a complete algorith...|$|R
40|$|In this paper, {{we propose}} several {{filtering}} techniques for rewriting XPath <b>queries</b> using <b>views.</b> The work {{is motivated by}} scenarios dealing with large quantities of <b>queries</b> and <b>views,</b> such as semantic query caching and data integration. Considerable rewriting computation could be saved if we manage to efficiently discover that, given a query Q and a view V, there does not exist a rewriting for Q using V. In contrast to O(|Q||V|) (O(|Q||V| 2)) time complexity to compute an equivalent rewriting (contained rewriting) for XP {/,//,[] }, we devise linear algorithms running in O(|Q|) to filter queries for both equivalent rewriting and contained rewriting. Our filtering algorithms can be extended to support <b>queries</b> and <b>views</b> in XP {/,//,[],*}, where the equivalent (or contained) rewriting existence problem is still coNP-hard...|$|R
40|$|This chapter {{examines}} ambivalent {{perception of}} sexual subject categories among HIV prevention {{workers in the}} north of West Bengal, India. Based on ethnographic fieldwork the chapter <b>queries</b> <b>views</b> of modernity as associated with increasingly individualised aspirations for personal sexual identity and examined how {{men who have sex with}} men in the context studied resisted contemporary categories of sexuality. The chapter raises broader issues concerning globalisation in India and the subject categories used in international HIV prevention...|$|R
40|$|Virtual space {{environment}} may {{be improved by}} combining it with graphical and visual tools. This paper analyses an integrated system able to merge fusion techniques, icons tools and a virtual {{space environment}}. A virtual space is characterised {{by a set of}} dynamic visual icons and by a heterogeneous virtual reality environment. Their integration is supported by virtual icon grammar (VIG) working on dynamic icons and virtual world. VIG allows to test the actions made by dynamic icons on the activated Virtual World metaphors at a time “t”, and a range of different transactions that place between user and VW(visual <b>query,</b> <b>view</b> and browse of under-world,…), moreover, user can define, modify and remove actions related to one or more VW and DVI...|$|E
40|$|AbstractTransformation {{is one of}} the {{prominent}} features and the rising research area of Model Driven Architecture since last few years. There are many techniques which have been proposed as a Request for Proposal (RFP) in <b>Query,</b> <b>View</b> and Transformation (QVT). In this paper we have conducted a survey on transformation techniques. The surveyed techniques include pattern based approaches, transformation languages, transformation rules, Metamodel based approaches etc. This work has summarize, categorized and identified different analysis parameters of these techniques. On the basis of identified parameters we have presented an analysis matrix to describe the strength of different approaches. The major focus of the work is on model to model transformation techniques i. e. from PIM to PSM transformation. Keywords- Model Driven Architecture; Transformation and analysis matri...|$|E
40|$|Abstract — Visual sensing is {{essential}} to robot’s interaction with its environment and can dramatically enhance its autonomy, navigation, manipulation and human interaction capabilities. In the context of these tasks, the crucial choice its the one of representation {{of the environment and}} objects, in order to enable robust relative positioning, localization and initialization of different visually guided tasks. In this paper I will overview a class of geometric techniques for acquisition of 3 D models of objects from multiple views and simultaneous computation of camera/object motion. In the context localization task I will demonstrate that by endowing the geometric features with invariant appearance based signatures simplifies difficult matching stage and enables global localization and successful computation of the relative pose between the <b>query</b> <b>view</b> and the model database. I...|$|E
40|$|<b>Query</b> {{answering}} using <b>views</b> {{amounts to}} computing {{the answer to}} a query having information only on the extension of a set of views. This problem is relevant in several elds, such as information integration, data warehousing, query optimization, mobile computing, and maintaining physical data independence. We address <b>query</b> answering using <b>views</b> in a context where <b>queries</b> and <b>views</b> are regular path queries, i. e., regular expressions that denote the pairs of objects in the database connected by a matching path. Regular path queries are the basic query mechanism when the database is conceived as a graph, such as in semistructured data and data on the web. We study algorithms for answering regular path <b>queries</b> using <b>views</b> under dierent assumptions, namely, closed and open domain, and sound, complete, and exact information on view extensions. We characterize data, expression, and combined complexity of the problem, showing that the proposed algorithms are essentially optimal. Our results ar [...] ...|$|R
40|$|Answering <b>queries</b> using <b>views</b> {{amounts to}} {{computing}} {{the answer to}} a query having information only on the extension of a set of views. This problem is relevant in several elds, such as information integration, data warehousing, query optimization, etc. In this paper we address the problem of <b>query</b> answering using <b>views</b> for nonrecursive datalog queries embedded in a Description Logics (equipped with #- ary relations) knowledge base. We present the following results. <b>Query</b> answering using <b>views</b> is decidable in all cases. Specically, if the set of all objects in the knowledge base coincides with the set of objects stored in the views (closed domain assumption), the problem is coNP complete, whereas if the knowledge base may contain additional objects (open domain assumption) it is solvable in double exponential time. 1 Introduction Answering <b>queries</b> using <b>views</b> amounts to computing {{the answer to a}} query having information only on the extension of a set of views. This pr [...] ...|$|R
5000|$|Orace JSON Store - Oracle Database {{supports}} JavaScript Object Notation (JSON) data natively with {{relational database}} features, including transactions, indexing, declarative <b>querying,</b> and <b>views.</b>|$|R
