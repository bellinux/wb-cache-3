37|10000|Public
5000|$|... query {{framework}} that supports an object-oriented expression framework, <b>Query</b> <b>by</b> <b>Example</b> (<b>QBE),</b> EJB QL, SQL, and stored procedures ...|$|E
50|$|IBM bought Metaphor Computer Systems {{to utilize}} their GUI {{interface}} and encapsulating SQL platform {{that had already}} been in use since the mid 80's.In parallel with the development of SQL IBM also developed <b>Query</b> <b>by</b> <b>Example</b> (<b>QBE),</b> the first graphical query language.|$|E
50|$|Microsoft Query is {{a visual}} method of {{creating}} database queries using examples {{based on a}} text string, {{the name of a}} document or a list of documents. The QBE system converts the user input into a formal database query using Structured Query Language (SQL) on the backend, allowing the user to perform powerful searches without having to explicitly compose them in SQL, and without even needing to know SQL. It is derived from Moshé M. Zloof's original <b>Query</b> <b>by</b> <b>Example</b> (<b>QBE)</b> implemented in the mid-1970s at IBM's Research Centre in Yorktown, New York.|$|E
30|$|The {{enormous}} {{growth of}} personal and on-line multimedia content has created the need for tools of automatic database management. Such management tools include, for instance, <b>query</b> <b>by</b> humming or <b>query</b> <b>by</b> <b>example,</b> multimedia classification, and speaker recognition. <b>Query</b> <b>by</b> <b>example</b> is an audio retrieval task where a user provides an example signal and the retrieval system returns similar samples from the database. The main problem in the <b>query</b> <b>by</b> <b>example</b> and the other above content management applications {{is to determine the}} similarity between two database items.|$|R
50|$|Typically, {{this type}} of search engine uses {{techniques}} of <b>query</b> <b>by</b> <b>example</b> or Image <b>query</b> <b>by</b> <b>example,</b> which use the content, shape, texture and color of the image to compare them in a database and then deliver the approximate results from the query.|$|R
5000|$|A visual <b>Query</b> <b>by</b> <b>Example</b> {{implementation}} {{that was}} supported by an AI engine.|$|R
5000|$|<b>Query</b> <b>by</b> <b>Example</b> (<b>QBE)</b> is a {{database}} query language for relational databases. It was devised by Moshé M. Zloof at IBM Research during the mid-1970s, in parallel {{to the development of}} SQL. It is the first graphical query language, using visual tables where the user would enter commands, example elements and conditions. Many graphical front-ends for databases use the ideas from QBE today. Originally limited only for the purpose of retrieving data, QBE was later extended to allow other operations, such as inserts, deletes and updates, as well as creation of temporary tables.|$|E
40|$|WebDev is a {{programming}} in the WYSIWYG interface tool for building dynamic web pages that connect to databases. The system allows designers to program by entering <b>query</b> <b>by</b> <b>example</b> (<b>QBE)</b> and spreadsheet formulas into visual components of HTML documents. The system then automatically generates dynamic web pages {{that can be}} executed in a browser...|$|E
40|$|WebSheets is a {{programming}} in the WYSIWYG interface tool for building dynamic web pages that access and modify databases. Without programming, designers can specify {{not only the}} presentation of a page, but the dynamic content as well. This capability is facilitated through a novel application of Programming by Example (PBE), <b>Query</b> <b>by</b> <b>Example</b> (<b>QBE),</b> and spreadsheet formulas within the WYSIWYG HTML editor environment...|$|E
50|$|Image search: Although usually it's used simple {{metadata}} search, increasingly {{is being}} used indexing methods for making the results of users queries more accurate using <b>query</b> <b>by</b> <b>example.</b> For example, QR codes.|$|R
40|$|<b>Query</b> <b>by</b> <b>example</b> video {{retrieval}} aims at automatic {{retrieval of}} video samples which {{are similar to}} a user-provided example from video database. Considering that much of prior work on video analysis support retrieval using only visual features, in this paper, a two-step method for <b>query</b> <b>by</b> <b>example</b> is proposed, in which both audio and visual features are used. In the proposed method, a set of audio and visual features are, respectively, extracted from the shot level and key frame level. Among these features, audio features are employed to rough retrieval, while visual features are applied to refine retrieval. The experimental results demonstrate the good performance of the proposed approach...|$|R
40|$|<b>Query</b> <b>by</b> <b>example</b> of {{multimedia}} signals aims at automatic retrieval of media samples from a database, which {{are similar to}} a userprovided example. This paper proposes a method for <b>query</b> <b>by</b> <b>example</b> of audio signals. The method calculates a set of acoustic features from the signals and models their probability density functions (pdfs) using Gaussian mixture models. The method measures the similarity between two samples using the Euclidian distance between their pdfs. A novel method for calculating the closed form solution of the distance is proposed. Simulation experiments show that proposed method enables higher retrieval accuracy than the reference methods. Index Terms — Acoustic signal processing, database query processing, feature extraction. 1...|$|R
40|$|On the web, {{searching for}} sounds is usually limited to text queries. This {{requires}} adding textual descriptions to each audio file, which is indexed effectively as a text document. Recent developments in browser technologies allow develop-ers {{to access the}} audio input or microphone of the computer, enabling <b>Query</b> <b>by</b> <b>Example</b> (<b>QbE)</b> applications. We present a demonstration system that allows users to make queries on Freesound. org by recording audio in the browser. A basic prototype is available online...|$|E
40|$|In {{this article}} we {{address the problem of}} {{benchmarking}} image browsers. Image browsers are systems that help the user in finding an image from scratch, as opposed to <b>query</b> <b>by</b> <b>example</b> (<b>QBE),</b> where an example image is needed. The existence of different search paradigms for image browsers makes it difficult to compare image browsers. Currently, the only admissible way of evaluation is by conducting large-scale user studies. This makes it difficult to use such an evaluation as a tool for improving browsing systems. As a solution, we propose an automatic image browser benchmark that uses structured text annotation of the image collection for the simulation of the user's needs. We apply such a benchmark on an example system...|$|E
40|$|International audienceWe {{present a}} content {{spotting}} system for line drawing graphic document images. The proposed system is sufficiently domain independent {{and takes the}} keyword based information retrieval for graphic documents, one step forward, to <b>Query</b> <b>By</b> <b>Example</b> (<b>QBE)</b> and focused retrieval. During offline learning mode: we vectorize the documents in the repository, represent them by attributed relational graphs, extract regions of interest (ROIs) from them, convert each ROI to a fuzzy structural signature, cluster similar signatures to form ROI classes and build an index for the repository. During online querying mode: a Bayesian network classifier recognizes the ROIs in the query image and the corresponding documents are fetched by looking up in the repository index. Experimental results are presented for synthetic images of architectural and electronic documents...|$|E
40|$|We {{consider}} {{the requirements for}} the design and implementation of Image DataBase (IDB) systems which support the retrieval of medical images by content. Attention is focused on a methodology for the efficient representation and retrieval of medical images based on spatial information. The content of medical images is represented by Attributed Relational Graphs (ARGs) holding features of objects or regions and relationships between such objects or regions. The method can answer <b>queries</b> <b>by</b> <b>example,</b> such as "find all image examinations similar to Smith's examination". The performance of the method has been evaluated using a dataset of 13, 500 simulated, but realistic computed tomography and magnetic resonance images. Key-Words: image database, medical image, attributed relational graph, <b>query</b> <b>by</b> <b>example.</b> ...|$|R
40|$|Various {{methods for}} <b>query</b> <b>by</b> <b>example</b> for audio signals are {{discussed}} in this paper. The <b>query</b> <b>by</b> <b>example</b> aims at automatic retrieval of audio excerpts similar to a userprovided audio sample from his/her personal audio database. Methods based on hidden Markov models, feature histograms, and likelihood ratio test are discussed. A class based approach was adopted in defining the concept of similarity between two audio samples. For this reason two databases were constructed for the simulations. Experiments were carried out by using a high quality audio database and an audio database collected with a mobile phone. Considering {{the difficulty of the}} task the results are quite encouraging also from the future research point of view. 1...|$|R
50|$|<b>Query</b> <b>by</b> <b>example</b> is a <b>query</b> {{technique}} that involves providing the CBIR system with an example image {{that it will}} then base its search upon. The underlying search algorithms may {{vary depending on the}} application, but result images should all share common elements with the provided example.|$|R
40|$|Automatic {{indexing}} of comic-page-image reposito- ries {{has evolved}} as an interesting research problem for graphics recognition research community. In this paper {{we present a}} sys- tem for automatically indexing the comic-page-images {{in order to achieve}} <b>query</b> <b>by</b> <b>example</b> (<b>QBE)</b> based focused content retrieval. In our system we represent the comic-page-images by attributed graphs and translate the problem of automatic indexing / QBE based focused content retrieval as a subgraph spotting problem. Our system uses an explicit graph embedding technique to embed the comic-page-image graphs into numeric feature vectors and then employs state-of-the-art machine learning tools for automatic indexing / QBE based focused content retrieval. Experimental results are presented for automatic indexing and QBE based focused content retrieval in a comic-page-image repository...|$|E
40|$|Abstract—We {{present a}} content {{spotting}} system for line drawing graphic document images. The proposed system is sufficiently domain independent {{and takes the}} keyword based information retrieval for graphic documents, one step forward, to <b>Query</b> <b>By</b> <b>Example</b> (<b>QBE)</b> and focused retrieval. During offline learning mode: we vectorize the documents in the repository, represent them by attributed relational graphs, extract regions of interest (ROIs) from them, convert each ROI to a fuzzy structural signature, cluster similar signatures to form ROI classes and build an index for the repository. During online querying mode: a Bayesian network classifier recognizes the ROIs in the query image and the corresponding documents are fetched by looking up in the repository index. Experimental results are presented for synthetic images of architectural and electronic documents...|$|E
40|$|Precise {{modelling}} of behaviour is an {{area where}} programming meets modelling, and textual syntax competes with a visual one. By developing a UML based platform-independent framework, we aimed to find a visual syntax aid to make the language more approachable to stakeholders, while taking advantage of existing UML syntax intuitions and offering a truly higher level of abstraction. Our solution consists of seamlessly integrated UML Actions and the Object Constraint Language (OCL) as a database query language, featuring both a textual and a visual syntax. In this paper we describe a declarative, <b>Query</b> <b>by</b> <b>Example</b> (<b>QBE)</b> -based approach to visualizing OCL expressions over a UML object-oriented model instance, to be used inside of textual or visual imperative statements. Such visual OCL expressions can also be used as ad-hoc queries. The paper presents a choice of visual syntax and describes its underlying semantics...|$|E
5000|$|The Query view {{is similar}} in {{appearance}} to the Pipeline view. Here, the user constructs partial pipelines. When the query is executed, VisTrails identifies the pipeline versions which contain the specified partial pipeline. This {{is analogous to the}} <b>Query</b> <b>By</b> <b>Example</b> method of performing database queries.|$|R
50|$|TeamMate was {{merged with}} Bentley {{development}} and in 1996 MicroStation TeamMate 96 was released. This version {{was focused on}} MicroStation support, but also handled other formats and applications such as Microsoft Office and AutoCAD. TeamMate also had metadata, file history, versions, and <b>Query</b> <b>By</b> <b>Example</b> to locate files.|$|R
40|$|We propose an {{original}} approach for {{the characterization of}} video dynamic content {{with a view to}} supplying new functionalities for motion-based video indexing and retrieval with <b>query</b> <b>by</b> <b>example.</b> We have designed a statistical framework for motion content description without any prior motion segmentation, and for motion-based video classification and retrieval...|$|R
40|$|CROFlora is a {{multi-user}} database {{application for}} species-oriented and specimen-oriented systematic and taxonomic work on Croatian flora. It {{is designed for}} dealing {{with all kinds of}} data that are commonly used in systematic botany and floristic work. CROFlora comprises several main modules: (1) taxonomy, (2) herbarium, (3) literature, (4) chorology and (5) related data, such as ecology and multimedia. CROFlora was built over a relational database. The database relies on the normalised data model, which is presented in the paper. Amongst other features, the client application provides the user with extended <b>query</b> <b>by</b> <b>example</b> (<b>QBE)</b> capabilities and with user-customised reports. The reports include taxon sheets, taxa checklists, herbarium labels, bibliography labels and other complex reports. The database can be connected to a geographical information system (GIS), which empowers easy production of distribution maps and other spatial analysis. The Web interface enables Internet searches...|$|E
40|$|In December 2008, ISO/IEC SC 29 WG 11 (more {{commonly}} known as MPEG) published the ISO/IEC 15938 - 12 standard, i. e. the MPEG Query Format (MPQF), providing a uniform search&retrieval interface for multimedia repositories. While the MPQF’s coverage of basic retrieval functionalities is unequivocal, it’s suitability for advanced retrieval tasks is still under discussion. This paper analyzes how MPQF addresses four of the most relevant approaches for advanced multimedia retrieval: <b>Query</b> <b>By</b> <b>Example</b> (<b>QBE),</b> Retrieval trough Semantic Indexing, Interactive Retrieval, and Personalized and Adaptive Retrieval. The paper analyzes the contribution of MPQF in narrowing the semantic gap, and {{the flexibility of the}} standard. The paper proposes several language extensions to solve the different identified limitations. These extensions are intended to contribute to the forthcoming standardization process of the envisaged MPQF’s version 2. Postprint (author’s final draft...|$|E
40|$|XQuery, the {{standard}} query language for XML, is gaining popularity among users with a SQL background; indeed, formulating XQuery and SQL queries requires comparable skills. However, this nucleus of programmers is not vast, {{and the availability}} of simpler XQuery “dialects ” could be valuable for establishing its success. With this motivation in mind, we designed XQBE, a visual dialect of XQuery inspired by QBE (<b>Query</b> <b>by</b> <b>Example).</b> <b>QBE</b> was initially proposed as alternative to SQL and has gained popularity as the language supported by MS Access, currently presented to users with a very limited experience of query languages. Coherent with the XML data model, XQBE uses one or more hierarchical structures to denote the input XML documents and one structure to denote the output document. Similar to QBE, structures are annotated to express selection predicates; explicit bindings between these structures visualize the input/output mappings. 1...|$|E
40|$|It {{is common}} for humans to {{identify}} some content <b>by</b> listing <b>examples</b> of similar content. Some movies of a Tarantino, a movie producer {{can be used to}} identify more movies of the same producer. <b>Querying</b> <b>by</b> <b>examples</b> is an alternative way of querying which allows to identify more content as well as to expand knowledge. We experimen...|$|R
5000|$|In <b>query</b> <b>by</b> <b>example,</b> {{the element}} used to search is a {{multimedia}} content (image, audio, video). In other words, the query is a media. Often, it's used audiovisual indexing. It {{will be necessary}} to choose the criteria we are going to use for creating metadata. The process of search can be divided in three parts: ...|$|R
30|$|The above {{results show}} that the {{proposed}} similarity measures perform well in <b>query</b> <b>by</b> <b>example</b> with the database. The good performance is partly exampled by the good quality of the database: the signals within a class are usually significantly different from those in other classes, and they do not contain acoustic interference which would make the problem harder.|$|R
40|$|XQuery, the {{standard}} query language for XML, is increasingly popular among computer scientists with a SQL background, since queries in XQuery and SQL require comparable {{skills to be}} formulated. However, the number of these experts is limited, {{and the availability of}} easier XQuery “dialects ” could be extremely valuable. With this motivation in mind, we designed XQBE, a dialect of XQuery inspired by the QBE language (<b>Query</b> <b>by</b> <b>Example).</b> <b>QBE,</b> initially proposed as an alternative to SQL, has then become popular as the user-friendly query language supported by MS Access. XQBE starts from hierarchical structures, coherent with the hierarchical nature of XML, and uses one or more structures to denote the input documents, and one structure to denote the XML document produced in output. These structures are annotated to express selection predicates; explicit bindings connecting the nodes of these structures visualize the input/output mappings. ...|$|E
40|$|Abstract—In this paper, we {{describe}} {{issues related to}} the measurement of structural similarity between document images. We define structural similarity, and discuss the benefits of using it as a complement to content similarity for querying document image databases. We present an approach to computing a geometrically invariant structural similarity, and use this measure to search document image databases. Our approach supports both full image matching using <b>query</b> <b>by</b> <b>example</b> (<b>QBE)</b> and sub-image matching using query by sketch (QBS). The similarity measure considers spatial and layout structure, and is computed by aggregating content area overlap measures with respect to their underlying column structures. These techniques are tested within the Intelligent Document Image Retrieval (IDIR) System, and results demonstrating effectiveness and efficiency of structure queries with respect to human relevance judgments are presented. Index Terms—Document image understanding, indexing and retrieval of document images, similarity, document layout structure S I...|$|E
40|$|In design, {{the form}} {{creation}} process involves imagining, seeing and drawing. Translating the vague and imprecise initial ideas into sketches requires significant ability, {{and in this}} process, images of existing products (precedents) are a welcomed aid. Searching for them, however, is difficult, because it requires either exhaustive browsing or verbalization of the ideas {{to be able to}} use search engines. This paper presents an approach that uses images as query seeds instead of keywords called <b>Query</b> <b>by</b> <b>Example</b> (<b>QBE).</b> This approach is tested through an empirical study. It shows that the approach is a significant step into helping designers satisfy their visual information needs. It also shows that, as designers change their focus from function to context to form, their way of expressing their information needs changes. It concludes suggesting ways of improving both current systems and the QBE software tested. Categories & Subject Descriptor...|$|E
30|$|The {{combination}} of the above mentioned methods have also been used. Kiranyaz et al. made initial segmentation and supervised classification into four predefined classes, after which <b>query</b> <b>by</b> <b>example</b> was applied to samples, which were classified into the same class [8]. For image databases, also using multiple examples [9] and user feedback [10] have been suggested.|$|R
30|$|Since {{the above}} {{approaches}} define the similarity beforehand, they limit {{the applicability of}} the method to a certain application area or to certain classes of signals. The generic <b>query</b> <b>by</b> <b>example</b> of audio does not restrict the type of signals, but aims at finding similarity criteria which correlates with the perceptual similarity in general [6, 7].|$|R
40|$|We {{present a}} system for {{content-based}} retrieval of perceptually similar sound events in audio documents (‘sound spotting’, using a <b>query</b> <b>by</b> <b>example.</b> The system consists of three discrete stages: a front-end for feature extraction, a self-organizing map, and a pattern matching unit. Our paper introduces the approach, describes the separate modules and discusses some preliminary results and future research...|$|R
