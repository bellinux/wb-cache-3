35|106|Public
50|$|Also, a {{new process}} is always {{inserted}} {{at the tail}} of the top level queue with the assumption that it will complete in a short amount of time. Long processes will automatically sink to lower level queues based on their time consumption and interactivity level. In the multilevel feedback queue a process is given just one chance to complete at a given <b>queue</b> <b>level</b> before it is forced down to a lower level queue.|$|E
30|$|In this section, we take {{a deeper}} look into the {{distribution}} of the <b>queue</b> <b>level</b> and its influence on the probability of accepting a packet for different traffic loads.|$|E
30|$|This {{is due to}} {{the policy}} that in a {{transmission}} slot with q=K, no new packets can be pushed to the queue, but certainly, a packet will be sent, i.e., q=K− 1 in the next slot. However, for all other queue levels, it is possible to maintain the same <b>queue</b> <b>level</b> by sending and receiving one packet. That is even more apparent for A_n= 1.5 where a <b>queue</b> <b>level</b> larger than q= 5 most of the time leads to a packet acceptance probability of Paccept,n= 0.67 for both scenarios. Having q=K more often than other queue levels is only possible for very high rates of A_n = 2.5. Here, the node is highly congested and a Paccept,n= 0.40 is achieved in both scenarios.|$|E
50|$|For scheduling, the {{scheduler}} always starts {{picking up}} processes {{from the head}} of the highest <b>level</b> <b>queue.</b> Only if the highest <b>level</b> <b>queue</b> has become empty will the scheduler take up a process from the next lower <b>level</b> <b>queue.</b> The same policy is implemented for picking up in the subsequent lower <b>level</b> <b>queues.</b> Meanwhile, if a process comes into any of the higher <b>level</b> <b>queues,</b> it will preempt a process in the lower <b>level</b> <b>queue.</b>|$|R
40|$|This paper {{introduces}} a bulk queueing {{system with a}} single server processing groups of customers of a variable size. If upon completion of service the <b>queueing</b> <b>level</b> is at least r the server takes a batch of size r and processes it a random time arbitrarily distributed. If the <b>queueing</b> <b>level</b> is less than r the server idles until the queue accumulates r customers in total. Then the server capacity is generated by a random number equals the batch size taken for service which lasts an arbitrarily distributed time dependent on the batch size...|$|R
50|$|If {{the process}} uses all the quantum time, it is pre-empted and {{inserted}} {{at the end}} of the next lower <b>level</b> <b>queue.</b> This next lower <b>level</b> <b>queue</b> will have a time quantum which is more than that of the previous higher <b>level</b> <b>queue.</b>|$|R
40|$|We {{consider}} an innite capacity second order fluid queue {{governed by a}} continuous time Markov chain and with linear service rate. The variability of the trac is modeled by a Brownian motion and a local variance function modulated by the Markov chain and proportional to the fluid level in the queue. The behavior of this second order fluid flow model is described by a linear stochastic dierential equation, satised by the transient <b>queue</b> <b>level.</b> We study the transient level’s convergence in distribution under weak assumptions and we obtain {{an expression of the}} stationary <b>queue</b> <b>level.</b> For the rst order case, we give a simple expression of all its moments as well as of its Laplace transform. For the second order model we compute its two rst moments...|$|E
30|$|Furthermore, {{since the}} model assumes no losses on the {{physical}} layer, retransmissions are not considered. If other sources of packet loss are considered, retransmissions have to be integrated in the model by adding transitions in the Markov chain for maintaining the <b>queue</b> <b>level</b> after a failed transmission. For the considered scenario, these transitions would never be taken and thus not change the results.|$|E
40|$|This paper {{addresses}} {{the problem of}} configuring active queue management systems (e. g. WRED and RIO) for service level specifications in Internetworks. In particular, we focus on Assured Forwarding (AF) for non-responsive flows in Differentiated Services networks. The difficulty {{is to determine the}} correct <b>queue</b> <b>level</b> thresholds that will result in correct drop rates for various AF precedence levels under any combination of offered loads...|$|E
30|$|For a {{low rate}} of A_n= 0.5, the queue is empty {{most of the time}} with a {{decaying}} probability of having more packets in the queue. The probabilities for <b>queue</b> <b>levels</b> larger than 3 are negligible, so the probability of accepting new packets is Paccept,n= 1.00 for both scenarios.|$|R
40|$|International audienceWe study {{a network}} of fluid queues in which {{exogenous}} arrivals are modulated by a continuous-time Markov chain. Service rates in each queue are proportional to the queue size, and the network {{is assumed to be}} irreducible. The <b>queue</b> <b>levels</b> satisfy a linear, vector-valued differential equation. We obtain joint moments of the queue sizes recursively, and deduce the Laplace transform of the queue sizes in the stationary regime...|$|R
5000|$|At {{the base}} <b>level</b> <b>queue</b> the {{processes}} circulate in round robin fashion until they complete {{and leave the}} system. Processes in the base <b>level</b> <b>queue</b> can also be scheduled on a first come first served basis.|$|R
40|$|Congestion {{control in}} the Available Bit Rate (ABR) class of Asynchronous Transfer Mode (ATM) {{networks}} poses interesting challenges due {{to the presence of}} delays, magnitude and rate constraints on the inputs and additive disturbances. In this paper, we consider a discrete-time fixed-structure controller for an ATM/ABR switch, also modeled in discrete-time, and solve a robust tracking control problem in which the target is a threshold on the <b>queue</b> <b>level.</b> ...|$|E
40|$|Digital Object Identifier : 10. 1109 /. 2001. 980605 Congestion {{control in}} the {{available}} bit rate (ABR) class of asynchronous transfer mode (ATM) networks poses interesting challenges due {{to the presence of}} multiple-delays, magnitude and rate constraints on the inputs and additive disturbances. We consider a fixed-structure controller for an ATM/ABR network, and solve a robust tracking control problem in which the target is a threshold on the <b>queue</b> <b>level.</b> IEE...|$|E
30|$|The results {{demonstrate}} the increased accuracy {{compared to the}} M/D/ 1 /K model and illustrate {{the effect of a}} finite queue by showing the <b>queue</b> <b>level</b> distribution. For evaluating the multi-hop model, a data-collection scenario is applied. The analytical model is compared to a simulation of the Orchestra schedule, showing good conformance. Finally, two distributed traffic-aware scheduling algorithms are presented. The higher throughput achieved by traffic-awareness is demonstrated and the influence of the maximum queue length is shown.|$|E
40|$|International audienceWe {{consider}} an N-dimensional reflected process, modeling an infinite capacity fluid queues network, of which service and input rates {{depend on the}} <b>queue</b> <b>levels</b> {{as well as on}} the state of an exterior ergodic stationary process. N is the number of queues in the network. We prove a monotonicity result for such a process, from which we deduce stability results for networks of queues. Particular attention is paid to the case N= 2. Next, we give some applications of those stability results...|$|R
40|$|We {{consider}} an N-dimensional reflected process, modeling an infinite capacity fluid queues network, of which service and input rates {{depend on the}} <b>queue</b> <b>levels</b> {{as well as on}} the state of an exterior ergodic stationary process. N is the number of queues in the network. We prove a monotonicity result for such a process, from which we deduce stability results for networks of queues. Particular attention is paid to the case N= 2. Next, we give some applications of those stability results. Fluid queues Stochastic networks Reflected stochastic differential equation...|$|R
40|$|This article {{considers}} Gaussian flows {{which are}} fed into a GPS (Generalized Processor Sharing) scheduler. The system is analyzed using a most probable path approach. This method gives quite good approximations for performance measures, like queue length distributions {{in the full}} range of <b>queue</b> <b>levels.</b> The approximations are based on the distinction whether it is more probable that an aggregated queue consists of traffic from one class only or whether it is a combination of several classes. The approximate queue length distribution for a specific flow is then calculated either using the Empty Buffer Approximation or the authors' Rough Full Link Approximation, respectively...|$|R
40|$|Communicated by Dr. Houdou Qi) Abstract. In this paper, a new {{neural network}} {{adaptive}} control strategy based on Host Gate Way Rate Control Protocol (HGRCP) is proposed for intranet congestion management. The control algorithm {{is based on}} the Elman recurrent neural net-work via using the ABR service of an ATM backbone network. Simulations confirm that the proposed algorithm will produce lower <b>queue</b> <b>level</b> variance at the gateway. Meanwhile, the learning capability can be improved significantly. 1. Introduction. Intrane...|$|E
40|$|This paper {{presents}} a rate-based controller for throttling available bit rate (ABR) input rates in high speed {{asynchronous transfer mode}} (ATM) networks with significant propagation delays. First, a Smith predictor based controller is analyzed in terms of performance and stability. Saturation issues are handled with anti-windup techniques. Performance is improved {{by means of the}} feedback of an estimate of the ABR disturbance. This reduces the average <b>queue</b> <b>level,</b> guaranteeing the shortest delays possible while keeping the channel fully occupied. Finally, sensitivity to delay estimation errors is analyzed, and the limitations of th...|$|E
40|$|Fast Congestion Notification (FN) {{one of the}} {{proactive}} queue management {{mechanisms that}} practices congestion avoidance to help avoid the beginning of congestion by marking/dropping packets before the router’s queue gets full; and exercises congestion control, when congestion avoidance fails, by increasing the rate of packet marking/dropping. Upon arrival of each packet, FN uses the instantaneous queue size and the average arrival rate to calculate the packet marking/dropping probability. This paper presents the Drop/Mark Activation Function, which is an internal (built in) function of FN marking/dropping probably function, and shows {{the conditions under which}} the FN will trigger a probabilistic packet marking/dropping. This paper shows that the FN’s drop activation function is given by L(Ri, Qcur) =(Ri −μ). T−(Qopt −Qcur) which compares the predicted and required/allowed changes in the <b>queue</b> <b>level,</b> over a time period, to decide whether to attempt or not to attempt packet dropping. L(Ri, Qcur) = 0 defines the set of the drop activation threshold, the set of (average rate, current queue size), (Ri, Qcur), points for which the required/allowed and predicted decrease/increase in the <b>queue</b> <b>level</b> exactly equal each other and that identify the boundary between the drop region (L(Ri, Qcur) > 0), the sets of points at which the packet dropping is attempted, and the no-drop region (L(Ri, Qcur) < 0), the set of points at which the packet dropping is not attempted...|$|E
40|$|The BMAP/G/ 1 <b>queue</b> with <b>level</b> {{dependent}} arrivals {{has been}} suggested as a generalization of the wellknown BMAP/G/ 1 queue. It can be applied for modelling nodes in telecommunication networks with dynamic routing. The input rate into such a node will then depend on its current load. The limiting distribution of the queue length of the BMAP/G/ 1 <b>queue</b> with <b>level</b> dependent arrivals was earlier derived under the assumption of stability. In the present note we will determine conditions for the stability of this queueing system. Additionally we consider the special case of a level independent phase proces...|$|R
40|$|In this paper, we use {{reinforcement}} learning (RL) {{as a tool}} to study price dynamics in an electronic retail market consisting of two competing sellers and price sensitive and lead time sensitive customers. Sellers, offering identical products, compete on price to satisfy stochastically arriving demands (customers) and follow standard inventory control and replenishment policies to manage their inventories. In such a generalized setting, RL techniques have not been applied before. We consider two representative cases: (1) no information case, where none of the sellers has any information about customer <b>queue</b> <b>levels,</b> inventory levels, or prices at the competitors; and (2) partial information case, where every seller has information about the customer <b>queue</b> <b>levels</b> and inventory levels of the competitors. Sellers employ automated pricing agents or pricebots, which use RLbased pricing algorithms to reset the prices at random intervals based on factors such as number of back orders, inventory levels, and replenishment lead times, with the objective of maximizing discounted cumulative proﬁt. In the no information case, we show that a seller who uses Q-learning outperforms a seller who uses derivative following (DF). In the partial information case, we model the problem as a Markovian game and use actor-critic based RL to learn dynamic prices. We believe our approach to solving these problems is a new promising way of setting dynamic prices in multi-seller environments with stochastic demands, price sensitive customers, and inventory replenishments...|$|R
40|$|Abstract — In this paper, we use {{reinforcement}} learning (RL) {{as a tool}} to study price dynamics in an electronic retail market consisting of two competing sellers and price sensitive and lead time sensitive customers. Sellers, offering identical products, compete on price to satisfy stochastically arriving demands (customers) and follow standard inventory control and replenishment policies to manage their inventories. In such a generalized setting, RL techniques have not been applied before. We consider two representative cases: (1) no information case, where none of the sellers has any information about customer <b>queue</b> <b>levels,</b> inventory levels, or prices at the competitors; and (2) partial information case, where every seller has information about the customer <b>queue</b> <b>levels</b> and inventory levels of the competitors. Sellers employ automated pricing agents or pricebots, which use RLbased pricing algorithms to reset the prices at random intervals based on factors such as number of back orders, inventory levels, and replenishment lead times, with the objective of maximizing discounted cumulative profit. In the no information case, we show that a seller who uses Q-learning outperforms a seller who uses derivative following (DF). In the partial information case, we model the problem as a Markovian game and use actor-critic based RL to learn dynamic prices. We believe our approach to solving these problems is a new promising way of setting dynamic prices in multi-seller environments with stochastic demands, price sensitive customers, and inventory replenishments. Index Terms — Retail markets, dynamic pricing, inventory replenishments, price sensitive customers, stochastic demands...|$|R
40|$|With {{the rapid}} {{development}} of the Internet, the end-to-end TCP congestion control becomes insufficient in a multiple service circumstance. Many schemes have been proposed {{to solve the problem}} from different aspects. In this paper we propose a completely different approach, the node-to-node control, as a unified solution. It avoids congestion, prevents packet loss, and manages unresponsive traffic simultaneously. Trivial overhead is consumed by using <b>queue</b> <b>level</b> congestion detection and light one-hop feedback control. No per-flow state information is maintained in routers. Response to congestion is greatly speeded up and buffer efficiency is much improved. As a network layer control scheme, it builds a scalable application-aware background congestion control architecture. We argue that it is an appropriate congestion control scheme for future Internet with multiple services. ...|$|E
40|$|The author studies a {{generalized}} single-server queueing system with bulk arrivals and batch service, where the server takes vacations {{each time the}} <b>queue</b> <b>level</b> falls below r(&# 8805; 1) {{in accordance with the}} multiple vacation discipline. The input to the system is assumed to be a compound Poisson process modulated by the system and the service is assumed to be state dependent. One of the essential part in the analysis of the system is the employment of new techniques related to the first excess level processes. A preliminary analysis of such processes and recent results of the author on modulated processes enabled the author to obtain all major characteristics for the queueing process explicitly. Various examples and applications are discussed...|$|E
40|$|The authors study a single-server {{queueing}} {{system with}} bulk arrivals and batch service {{in accordance to}} the general quorum discipline: a batch taken for service {{is not less than}} r and not greater than R (≥ r). The server takes vacations each time the <b>queue</b> <b>level</b> falls below r (≥ 1) in accordance with the multiple vacation discipline. The input to the system is assumed to be a compound Poisson process. The analysis of the system is based on the theory of first excess processes developed by the first author. A preliminary analysis of such processes enabled the authors to obtain all major characteristics for the queueing process in an analytically tractable form. Some examples and applications are given. </p...|$|E
40|$|Abstract—In this paper, we use {{reinforcement}} learning (RL) {{as a tool}} to study price dynamics in an electronic retail market con-sisting of two competing sellers, and price sensitive and lead time sensitive customers. Sellers, offering identical products, compete on price to satisfy stochastically arriving demands (customers), and follow standard inventory control and replenishment policies to manage their inventories. In such a generalized setting, RL tech-niques have not previously been applied. We consider two repre-sentative cases: 1) no information case, were none of the sellers has any information about customer <b>queue</b> <b>levels,</b> inventory levels, or prices at the competitors; and 2) partial information case, where every seller has information about the customer <b>queue</b> <b>levels</b> and inventory levels of the competitors. Sellers employ automated pric-ing agents, or pricebots, which use RL-based pricing algorithms to reset the prices at random intervals based on factors such as num-ber of back orders, inventory levels, and replenishment lead times, with the objective of maximizing discounted cumulative profit. In the no information case, we show that a seller who uses Q-learning outperforms a seller who uses derivative following (DF). In the par-tial information case, we model the problem as a Markovian game and use actor-critic based RL to learn dynamic prices. We believe our approach to solving these problems is a new and promising way of setting dynamic prices in multiseller environments with stochastic demands, price sensitive customers, and inventory re-plenishments. Index Terms—Dynamic pricing, inventory replenishments, markovian game, multi-agent learning, online retail markets, price sensitive customers, {{reinforcement learning}} (RL), stochastic de-mands. I...|$|R
50|$|This scheme will {{continue}} until the process completes or {{it reaches the}} base <b>level</b> <b>queue.</b>|$|R
40|$|A {{discrete}} event {{simulation model}} {{was developed and}} used to estimate the storage area required for a proposed overseas textile manufacturing facility. It {{was found that the}} simulation was able to achieve this because of its ability to both store attribute values and to show <b>queuing</b> <b>levels</b> at an individual product level. It was also found that the process of undertaking the simulation project initiated useful discussions regarding the operation of the facility. Discrete event simulation is shown to be much more than an exercise in quantitative analysis of results and an important task of the simulation project manager is to initiate a debate among decision makers regarding the assumptions of how the system operates...|$|R
40|$|Abstract:- This paper {{presents}} a new method {{of improving the}} flow control mechanism in 10 Gigabit Ethernet (10 GbE) WANs. The ON/OFF control method prescribed by the standard leads to fluctuations of flow rates and the queue levels of the switches. Apart from the ON/OFF control, {{there are a few}} recent flow control mechanisms developed for the 10 GbE networks in the literature. However, they do not comply with the present 10 GbE standard as they require other quantities such as <b>queue</b> <b>level</b> {{to be included in the}} control frame. Our approach converts the fair share calculated by the switch to an equivalent pause time. As a result, our algorithm complies with the standard. Performance of this scheme has been studied via simulations and compared with the performance of the ON/OFF control method...|$|E
40|$|In this paper, {{we study}} the {{transient}} {{behavior of a}} state dependent M/M/ 1 /K queue during the busy period. We derive in closed-form the joint transform {{of the length of}} the busy period, the number of customers served during the busy period, and the number of losses during the busy period. For two special cases called the threshold policy and the static policy we determine simple expressions for their joint transform. The performance metrics of the three random variables such as their expecta-tions, variances, and covariances follow directly from the joint transform. Finally, we give additional results that contain the distribution of the maximum <b>queue</b> <b>level</b> reached during the busy period, the transform of the c-congestion period and the total number of such periods during the busy period. ...|$|E
40|$|The dual-core {{environment}} {{is more and}} more popular in embedded system recently. The limited buffer and limited bandwidth are critical for parallel algorithm in embedded system. This paper proposes a novel parallel algorithm using functional partitioning with dynamic load balance for video decoder. The video decoding flow of each macroblock is dynamically separated for different cores according to the buffer <b>queue</b> <b>level.</b> The extra intercommunication buffer size requires only 1. 6 % buffer size of traditional data partitioning algorithm for 720 p decoder. The speed-up ratio is 1. 74 times in average compared to original single thread code. The experiment result shows the proposed algorithm can real-time decode H. 264 720 p high profile on ARM Cortex-A 9 400 MHz dual-core system. Index Terms — parallel algorithms, video codec, dynamic load balance, H. 264 decode...|$|E
40|$|IntelliSIM is a {{prototype}} {{for a new}} generation of knowledge-based simulation tool that has been developed by the Systems Simulation Laboratory at Arizona State University. This tool is a computer environment that allows non-simulation trained modelers to predict the performance of a manufacturing system for which the necessary data is available. The system provides predictive data on such items as throughput time, <b>queue</b> <b>levels,</b> equipment utilization, reactions to machine failures, etc. With IntelliSIM, the benefits of discrete-event simulation can be exploited without requiring the high level of expertise necessary to successfully conduct a sound simulation study. The approach offered with IntelliSIM is one which will offer substantial savings over currently available simulation tools. This document is Version 1 (1992) of the user manual for the IntelliSIM software...|$|R
40|$|ABSTRACT. This paper {{introduces}} a bulk queucing {{system with a}} single server processing groups of customers of a variable size. If upon completion of service the <b>queueing</b> <b>level</b> is at least r the server takes a batch of size r and processes it a random time arbitrarily distributed. If the qucueing level is less than r the server idles until the queue accumulates r customers in total. Then the server capacity is generated by a random number equals the batch size taken for ser-vice which lasts an arbitrarily distributed time dependent on the batch size. The objective of {{the paper is the}} stationary distribution of queueing process which is studied via semi-regenerative techniques. An ergodicity criterion for the process is established and an explicit formula for the generating function of the distribution is obtained...|$|R
40|$|ITC/USA 2012 Conference Proceedings / The Forty-Eighth Annual International Telemetering Conference and Technical Exhibition / October 22 - 25, 2012 / Town and Country Resort & Convention Center, San Diego, CaliforniaIn the Telemetry Network System (TmNS) the {{prioritization}} {{of mission}} traffic is performed by internal radio queuing disciplines and the Link Manager performing adjustments to each radio transmit {{window in the}} TDMA network. These processes combine to provide the QoS traffic handling across the range. The radios provide the transmit packet prioritization using queuing disciplines which can be assigned to mission traffic flows. The Link Manager on the ground receives periodic reports of <b>queue</b> <b>levels</b> from each radio and performs transmit capacity adjustments based on internal radio and network wide conditions. Presented in this paper is the design of this TmNS RF Link Management QoS process with OPNET modeling and simulation results...|$|R
