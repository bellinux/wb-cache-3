128|35|Public
5000|$|... class QuadTree { // Arbitrary {{constant}} {{to indicate}} how many elements {{can be stored in}} this <b>quad</b> <b>tree</b> node constant int QT_NODE_CAPACITY = 4; [...] // Axis-aligned bounding box stored as a center with half-dimensions // to represent the boundaries of this <b>quad</b> <b>tree</b> AABB boundary; [...] // Points in this <b>quad</b> <b>tree</b> node Array of XY = QT_NODE_CAPACITY points; [...] // Children QuadTree* northWest; QuadTree* northEast; QuadTree* southWest; QuadTree* southEast; [...] // Methods function __construct(AABB _boundary) {...} function insert(XY p) {...} function subdivide (...) {...} // create four children that fully divide this quad into four quads of equal area function queryRange(AABB range) {...} } ...|$|E
50|$|This class {{represents}} both one <b>quad</b> <b>tree</b> and the node {{where it}} is rooted.|$|E
5000|$|... class QuadTree { ... // Insert a point {{into the}} QuadTree {{function}} insert(XY p) { // Ignore objects {{that do not}} belong in this <b>quad</b> <b>tree</b> if (!boundary.containsPoint(p)) return false; // object cannot be added [...] // If there is space in this <b>quad</b> <b>tree,</b> add the object here if (points.size < QT_NODE_CAPACITY) { points.append(p); return true; } [...] // Otherwise, subdivide and then add the point to whichever node will accept it if (northWest == null) subdivide (...) [...] if (northWest->insert(p)) return true; if (northEast->insert(p)) return true; if (southWest->insert(p)) return true; if (southEast->insert(p)) return true; [...] // Otherwise, the point cannot be inserted {{for some unknown reason}} (this should never happen) return false; } } ...|$|E
40|$|Approaches to {{polygonal}} decomposition for hierarchical image representation are described. For planar decomposition, <b>quad</b> <b>trees</b> using {{square and}} triangular neighborhoods {{are found to}} be the only feasible methods, having the same computational complexity. For grid images the choice of the appropriate tree type is determined by the grid topology. Triangular and square <b>quad</b> <b>trees</b> are appropriate for the triangular and square grids, whereas trees of order 7 are necessary for the hexagonal grid. 1...|$|R
40|$|Abstract. In {{the plane}} {{coordinate}} system, x-coordinate and y-coordinate divide the plane into four quadrants. Combing {{the values of}} two-dimension data and the four quadrants, we can construct a general <b>quad</b> search <b>tree</b> easily. The <b>quad</b> search <b>tree</b> {{can be applied to}} all the two-dimension data. And, the height of the <b>quad</b> search <b>tree</b> can be reduced effectively, thus we can get a better search speed. The experiments have verified the validity and correctness of the <b>quad</b> search <b>tree...</b>|$|R
50|$|One-dimensional enfilades are {{intermediate}} between arrays' direct addressability {{and linked}} lists' ease of insertion, deletion and rearrangement. Multidimensional enfilades resemble loose, rearrangeable, versionable <b>Quad</b> <b>trees,</b> Oct trees or k-d trees.|$|R
5000|$|... 2005: Google Maps, The {{first version}} of Google Maps. Based on raster tiles {{organized}} in a <b>quad</b> <b>tree</b> scheme, data loading done with XMLHttpRequests. This mapping application became highly popular on the web, also because it allowed other people to integrate google map services into their own website.|$|E
40|$|Many {{researchers}} {{examined the}} need for the development of fault-free software and increase the efficiency of presented algorithms. An optimization of existing algorithms and software fault prediction are two important techniques. It is proven that this technique has to be useful in increasing effectiveness of software, software testing, examining progression costs and achieving results. This paper illustrates hyper <b>quad</b> <b>tree</b> based k-means algorithm for software fault prediction. This system overcomes the weaknesses in k-means algorithm using Hyper <b>Quad</b> <b>Tree</b> as compared to <b>Quad</b> <b>Tree.</b> Hyper <b>quad</b> <b>tree</b> works in n-dimensions hence it finds better initial cluster centers than former algorithms. This constraint of k-means algorithm is try to solve by hyper <b>quad</b> <b>tree.</b> Another crisis is that k-means is very susceptible to the noise, which is also removed by hyper <b>quad</b> <b>tree</b> algorithm...|$|E
40|$|In {{the past}} ten years, many {{researchers}} have focused attention on developing better data structures for storing graphical information. Among the proposed data structures, the <b>quad</b> <b>tree</b> data structure provides {{a good way to}} organize objects on a 2 -D plane. Region searches proceed at logarithmic speeds a desirable characteristic, but no previously proposed VLSI <b>quad</b> <b>tree</b> data structure distributed objects to subdivide the spatial area. This has been a major drawback for operations such as tree searching and window query. In this paper, we present a new division method to reconstruct those quad trees including the multiple storage <b>quad</b> <b>tree</b> (MSQT) and the quad list <b>quad</b> <b>tree</b> (QLQT) into nearly balanced <b>quad</b> <b>tree</b> data structures. Nearly balanced quad trees based on our new spatial division method are constructed by dynamically translating unbalanced multiple storage quad trees or unbalanced quad list quad trees into balanced structures. All benefits of the original <b>quad</b> <b>tree</b> data structures are completely retained. In addition, this method is simple and balanced quad trees memory require less than the original quad trees. Experimental results illustrate that the improvement in region queries of the presented nearly balanced quad trees to both of the QLQT and the MSQT is better than the improvement of the QLQT to the MSQT...|$|E
40|$|Unsupervised {{classification}} {{has emerged}} as a popular technique for pattern recognition, image processing and data mining. It has a crucial contribution in the resolution of the problems arising from content-based image retrieval. In this study, we present K_means clustering algorithm that partitions an image database in cluster of images similar. We adapt K_means method to a very special structure which is quadree. The goal is to minimize the search time of images similar to an image request. We associate to each image a quad-tree which represents the characteristics of the image and store a base of images in a data structure called generic quadtree. It minimizes the memory space of set of image by the sharing of common parts between <b>quad</b> <b>trees</b> and speeds up several operations applied to images. The image similarity is based on a distance computed from the differences between the <b>quad</b> <b>trees</b> encoding images...|$|R
40|$|Abstract: The {{main idea}} of graph based image {{modeling}} {{is that the}} regions of the image, which contain similar properties, are denoted by graph vertices, and the relations between different regions are denoted by graph edges. The vertex and edge attributes usually describe the characteristics of that region and the relation between regions respectively. A simple approach to keep the structural and topological information of an image is to use digital image representation techniques; for instance, <b>quad</b> <b>trees,</b> etc. By modeling images as graphs, the task of image classification becomes one of classifying graphs. <b>Quad</b> <b>trees</b> {{have been used for}} representing images in the form of trees. In this paper we propose an algorithm that discovers the subgraphs present in a graph represented by a stream of labeled nodes and edges. Our algorithm is efficient and is easily tuned by the user to produce interesting patterns from various kinds of graph data. Keywords:Graph,Vertex,Edge,Attribute,Digital image representation,Quad tree,Subgrap...|$|R
40|$|AbstractA point clouds {{filtering}} {{algorithm is}} presented based on Grid Partition using Dynamic Quad Tress and Moving Least Squares. First, points are partitioned reasonably and corresponding Dynamic <b>Quad</b> <b>Trees</b> indices are established. Second, points in grids are utilized {{to fit a}} DEM reference plane using moving least squares technology. Finally, ground points are separated from those non-ground ones if they are positioned above the reference plane and have a distance to the plane exceeding threshold value. Experiments show that this filtering algorithm is of high precision and identify ground points effectively without losing detailed topography information...|$|R
30|$|Wavelet method shows {{a better}} match with <b>quad</b> <b>tree</b> measure. This is {{concluded}} because of more regularity in its curve compared to curves related to Spatial and DCT {{as shown in}} Figure 4. This is a logical fact, because the complexity measure based on <b>Quad</b> <b>tree</b> uses similar concept of dividing an image into 4 blocks as used in multiscale watermarking methods such as wavelet.|$|E
40|$|A <b>quad</b> <b>tree</b> is a tree-like data {{structure}} with nodes and branches. Using a dynamic <b>quad</b> <b>tree</b> {{to represent a}} 3 D terrain mesh allows the software to vary the resolution of small sections of the terrain. By using deeper branching, the system can increase resolution where is it beneficial to the user and decreasing the resolution where higher resolution would not be beneficial to the user. This project examines {{the use of the}} VRML language and a <b>quad</b> <b>tree</b> {{data structure}} to provide interactive Virtual Reality high-resolution (10 Million+) polygon terrain visualization on mid range desktop computers. The paper concludes with an evaluation of the current and future suitability of using VRML to view high-resolution terrains such as the 20 Meter grid of Monterey Canyon...|$|E
40|$|Abstract. It {{is shown}} that {{the depth of the}} last node {{inserted}} in a random <b>quad</b> <b>tree</b> constructed from independent uniform [Q, 11 d random vectors is in probability asymptotic to (2 /d) log n, where log denotes the natural logarithm. In addition, for d = 2, exact values are obtained for all the moments of the depth of the last node. Key words. average time analysis, probability ineq ' alities, random <b>quad</b> <b>tree,</b> multidimensional data structures, search tree, expected behavior, analysis of a;orithm...|$|E
40|$|Abstract—We {{consider}} multi-resolution storage, {{a technique}} for providing scalable adaptive data fidelity, necessary for many applications of large {{wireless sensor networks}} (WSNs). Although the previously proposed design of multi-resolution storage, based on <b>quad</b> <b>trees</b> and geographic routing, is conceptually simple, it exhibits inherent problems if applied in real-world WSNs. To address these problems, we revisit some of the networking assumptions and propose an alternative design that employs an overlay combining area and landmark hierarchies. Simulations and initial experiments with a prototype embedded implementation indicate that our solution can be scalable and can work on real hardware, which motivates further research. I...|$|R
40|$|Abstract- The {{hypercube}} {{parallel architecture}} {{is one of}} the most popular interconnection networks due to many of its attractive properties and its suitability for general purpose parallel processing. An attractive version of the hypercube is the crossed cube. It preserves the important properties of the hypercube and most importantly reduces the diameter by a factor of two. In this paper, we show the ability of the crossed cube as a versatile architecture to simulate other interconnection networks efficiently. We present new schemes to embed complete binary <b>trees,</b> complete <b>quad</b> <b>trees,</b> and cycles into crossed cubes. Index Terms- binary trees, cycles, dilation, embedding, expansion, hypercubes, crossed cubes...|$|R
40|$|International audienceWe {{consider}} {{the model of}} random trees introduced by Devroye [SIAM J. Comput. 28 (1999) 409 - 432]. The model encompasses many important randomized algorithms and data structures. The pieces of data (items) are stored in a randomized fashion in the nodes of a tree. The total path length (sum of depths of the items) is a natural measure of {{the efficiency of the}} algorithm/data structure. Using renewal theory, we prove convergence in distribution of the total path length toward a distribution characterized uniquely by a fixed point equation. Our result covers, using a unified approach, many data structures such as binary search trees, m-ary search <b>trees,</b> <b>quad</b> <b>trees,</b> median-of-(2 k+ 1) trees, and simplex trees...|$|R
40|$|International audienceA {{particular}} {{data structure}} named a <b>Quad</b> <b>Tree</b> allows a better representation of solution space of binary continuous constraints C(x(1), x(2)), than classical continuous consistencies. The generation {{and integration of}} this data structure do not raise any particular problem for continuous constraints defined by only one mathematical formula [Sam, D., 1995. Constraint consistency techniques for continuous domains. Ph. D. Thesis, Ecole Polytechnique Federale de Lausanne]. In this paper, we propose to extend the method of generating Quad Trees {{in order to take}} into account, in CSPs, binary continuous constraints defined by a piecewise constraint, i. e. a set of functions defined on intervals. The first section presents the industrial requirements which led us to take into account this type of constraint in CSP. The second section recalls the principles of the <b>Quad</b> <b>Tree.</b> The last section describes our contributions relevant to <b>Quad</b> <b>Tree</b> extensions dealing with piecewise constraints. (C) 2009 Elsevier Ltd. All rights reserved...|$|E
40|$|Abstract—A {{combination}} of image fusion and <b>quad</b> <b>tree</b> decomposition method {{is used for}} detecting the sunspot trajectories in each month and computation of the latitudes of these trajectories in each solar hemisphere. Daily solar images taken with SOHO satellite are fused for each month {{and the result of}} fused image is decomposed with <b>Quad</b> <b>Tree</b> decomposition method in order to classifying the sunspot trajectories and then to achieve the precise information about latitudes of sunspot trajectories. Also with fusion we deduce some physical remarkable conclusions about sun magnetic fields behavior. Using <b>quad</b> <b>tree</b> decomposition we give information about the region on sun surface and the space angle that tremendous flares and hot plasma gases permeate interplanetary space and attack to satellites and human technical systems. Here sunspot images in June, July and August 2001 are used for studying and give a method to compute the latitude of sunspot trajectories in each month with sunspot images. Keywords—Quad Tree Decomposition, Sunspot. I...|$|E
40|$|Image {{segmentation}} is {{an essential}} processing step for much image application {{and there are a}} large number of segmentation techniques. A new algorithm for image segmentation called <b>Quad</b> <b>tree</b> fuzzy c-means (QFCM) is presented I this work. The key idea in our approach is a <b>Quad</b> <b>tree</b> function combined with fuzzy c-means algorithm. In this article we also discuss {{the advantages and disadvantages of}} other image segmenting methods like: k-means, c-means, and blocked fuzzy c-means. Different experimental results on several images in this article show that the proposed method significantly increases the accuracy and speed of image segmentatio...|$|E
50|$|Cartograms may be {{classified}} {{also by the}} properties of shape and topology preservation. Classical area cartograms (shown on this page) are typically distorting the shape of spatial units to some degree, but they are strict at preserving correct neighborhood relationships between them. Scaled-down cartograms (from the NY Times example) are strictly shape-preserving. Another branch of cartograms introduced by Dorling, replaces actual shapes with circles scaled according to the mapped feature. Circles are distributed to resemble the original topology. Demers cartogram is a variation of Dorling cartogram, but it uses rectangles instead of circles, and attempts to retain visual cues {{at the expense of}} minimum distance. Schematic maps based on <b>quad</b> <b>trees</b> can be seen as non shape-preserving cartograms with some degree of neighborhood preservation.|$|R
40|$|We {{introduce}} the quad-kd tree: a general purpose and hierarchical data {{structure for the}} storage of multidimensional points. Quad-kd <b>trees</b> include point <b>quad</b> <b>trees</b> and kd trees as particular cases and therefore they could constitute a general framework {{for the study of}} fundamental properties of trees similar to them. Besides, quad-kd trees can be tuned by means of insertion heuristics and bucketing techniques to obtain trade-offs between their costs in time and space. We propose three such heuristics and we show analytically and experimentally their competitive performance. Our analytical results back the experimental outcomes and suggest that the quad-kd tree is a flexible data structure that can be tailored to the resource requirements of a given application. Peer ReviewedPostprint (author's final draft...|$|R
40|$|Multi-dimensional range searching has {{important}} applications in several fields including spatial, image and text databases. Several data structures using linear and non-linear storage space {{have been proposed}} in database and computational geometry literature. Using O(n log d n) space for n d-dimensional points, range queries can be supported in poly-logarithmic time [3]. Using linear-space, query times of O(n ffl) for any ffl ? 0 {{can be achieved by}} replicating each data item at least (1 =ffl) d times. Such large storage-space structures may not be feasible for several databases. In this paper, we examine the complexity of range searching when data items are not replicated. Such non-replicating structures achieve low storage costs and fast update times due to lack of multiple copies. Examples of non-replicating structures include R-trees [1, 5, 13], Bang files [10, 11], <b>quad</b> <b>trees</b> [22] and k-d trees [2]. In this paper, we first obtain a lower bound for range searching in such non- [...] ...|$|R
40|$|In {{molecular}} biology, micro arrays {{are employed}} in monitoring the expression levels of genes simultaneously. Arrays {{are used in the}} domains of gene expression, genome mapping, toxicity, pathogen identification and other biological applications. Clustering is a useful technique for grouping gene expression data. In clustering, similar gene expression data will be grouped together for identifying relationships between the genes. Clustering of gene expression data is a useful tool for identifying co-expressed genes and biologically relevant grouping of genes, which is an important research area in Bioinformatics. In this paper, a <b>Quad</b> <b>Tree</b> based Expectation Maximization (EM) algorithm has been applied for clustering gene expression data. <b>Quad</b> <b>Tree</b> is used to initialize the cluster centroids. With these centroids, EM is used to group the data efficiently. Expectation Maximization is used to compute maximum likelihood estimates given incomplete samples. Silhouette refers to a method of interpretation and validation of clusters. This measure provides a representation of how well each object lies within its cluster. Experimental results have shown that <b>Quad</b> <b>Tree</b> based Expectation Maximization algorithm finds compact clusters when compared to K-Means algorithm...|$|E
40|$|The {{objective}} of the paper is to predict faults that tend to occur while classifying a dataset. There are various clustering algorithms that prevail to partition a dataset by some means of similarity. In this paper, a <b>Quad</b> <b>Tree</b> based Expectation Maximization (EM) algorithm has been applied for predicting faults in the classification of datasets. K-Means is a simple and popular approach that is widely used to cluster/classify data. However, K-Means does not always guarantee best clustering due to varied reasons. The proposed EM algorithm {{is known to be}} an appropriate optimization for finding compact clusters. EM guarantees elegant convergence. EM algorithm assigns an object to a cluster according to a weight representing the probability of membership. EM then iteratively rescores the objects and updates the estimates. The error-rate for K-Means algorithm and EM algorithm are computed, denoting the number of correctly and incorrectly classified samples by each algorithm. Result consists of charts showing on a comparative basis the effectiveness of EM algorithm with <b>quad</b> <b>tree</b> for fault prediction over the existing <b>Quad</b> <b>Tree</b> based K-Means (QDK) model...|$|E
40|$|A <b>quad</b> <b>tree</b> for {{representing}} a picture is {{a tree in}} which successively deeper levels represent successively finer subdivisions of picture area. An algorithm is given for superposing N quad trees in time proportional to {{the total number of}} nodes in the trees. Warnock-type algorithms are then presented for building the <b>quad</b> <b>tree</b> for the picture of the boundary of a polygon, and for coloring the interior of such a polygon. These algorithms take O(v + p + q) time, where v is the number of polygon vertices, p is the polygon perimeter, and q is a resolution parameter. When the resolution q is fixed, these algorithms are asymptotically optima...|$|E
40|$|Abstract—Cloud {{computing}} {{provides a}} way of determining dynamically scalable and virtualized resources as a service over the Internet. GIS is a technology, which could use Cloud Computing for distributed parallel processing of a large set of data, store and share the results with users around the world. GIS is beneficial and works well when it be available to everyone, everywhere, anytime and with downcast fee of minimal sized in terms of technology and outlay. Cloud Computing used to portray and help users to use GIS applications in an easy way. This paper will study some example of a data structure like a K-d <b>tree</b> and <b>Quad</b> <b>trees</b> of GIS application and compare between them when storing these data structures on Cloud computing, the paper also portrays {{the results of the}} study of data structure on cloud computing platforms to retrieve data from cloud computing. The paper provides an application for “finding neighborhood from existing data stored. Keywords—Cloud Computing; GIS; Kd-tree; Quadtree I...|$|R
40|$|Graphs {{are useful}} tools for {{modeling}} problems {{that occur in}} a variety of fields. In machine vision graphs based solutions have been successfully applied to many image processing problem e. g. <b>quad</b> <b>trees</b> for image compression and regional adjacency graphs for segmentation. The application of graphs to machine vision problems poses special problems due to the underlying size of the image e. g. a graph representing the base level of a 512 x 512 image has over 200. 000 nodes. The large size of the graphs make issues of both space and time complexity important when designing algorithms for machine vision problems. We present an implementation under LEDA (Library of Efficient Data structures and Algorithms) of DGC (dual graph contraction) for irregular pyramids. In the first section we present the theory behind DGC, in the second an algorithmic specification is derived, and in the third an implementation under LEDA is given followed by a short conclusion...|$|R
40|$|We {{consider}} {{the problem of}} recovering items matching a partially specified pattern in multidimensional <b>trees</b> (<b>quad</b> <b>trees</b> and k-d trees). We assume the traditional model where the data consist of independent and uniform points in the unit square. For this model, in a structure on n points, {{it is known that}} the number of nodes C_n(ξ) to visit in order to report the items matching an independent and uniformly on [0, 1] random query ξ satisfies C_n(ξ) ∼κ n^β, where κ and β are explicit constants. We develop an approach based on the analysis of the cost C_n(x) of any fixed query x∈ [0, 1], and give precise estimates for the variance and limit distribution of the cost C_n(x). Our results permit to describe a limit process for the costs C_n(x) as x varies in [0, 1]; one of the consequences is that E_x∈ [0, 1] C_n(x) ∼γ n^β. Comment: 12 pages, 2 figure...|$|R
40|$|Abstract—Out of {{different}} spatial indexing structures available for accessing spatial data, {{none of them}} is suitable for high dimensions. This is because {{the performance of the}} spatial indexing structures become poorer with the increase in dimension. Thus {{there is a need for}} a better spatial indexing structure for the same. Here we have proposed a hybrid indexing structure by combining the <b>Quad</b> <b>Tree</b> and X Tree. We have considered the X Tree over R Tree used in the previous hybrid indexing structure, QR Tree. This is due to the better performance of X Tree over the R Tree in case of highly overlapped data. Keywords-Spatial indexing, Hybrid spatial indexing, <b>Quad</b> <b>tree,</b> X tree, R Tree, QR Tree, QX Tree...|$|E
40|$|Abstract—Point <b>quad</b> <b>tree</b> is {{considered}} {{as one of the}} most common data organizations to deal with spatial data & can be used to increase the efficiency for searching the point features. As the efficiency of the searching technique depends on the height of the tree, arbitrary insertion of the point features may make the tree unbalanced and lead to higher time of searching. This paper attempts to design an algorithm to make a nearly balanced <b>quad</b> <b>tree.</b> Point pattern analysis technique has been applied for this purpose which shows a significant enhancement of the performance and the results are also included in the paper for the sake of completeness. Keywords—Algorithm, Height balanced tree, Point patter...|$|E
40|$|The <b>Quad</b> <b>Tree</b> (QT) is {{a simple}} but {{effective}} image compression method. This paper presents a novel variation of the QT called the Interpolating Leaf <b>Quad</b> <b>Tree</b> (ILQT). The ILQT stores multiple values in each quadrant {{in order to better}} approximate the image whilst using less memory. The ILQT is shown to outperform JPEG- 2000 and other QT variations in terms of Peak Signal To Noise Ratio (PSNR) vs. compression ratio, it is also shown to have competitive Rate- Distortion (RD) performance with other methods whilst reducing program complexity and efficiency. The ILQT is also shown to outperform other QT methods in terms of perceptual quality. Griffith Sciences, Griffith School of EngineeringFull Tex...|$|E
40|$|There are {{a variety}} of main-memory access structures, such as segment <b>trees,</b> and <b>quad</b> <b>trees,</b> whose properties, such as good worstcase behaviour, make them {{attractive}} for database applications. Unfortunately, the structures are typically `long and skinny', whereas disk data structures must be `shortand -fat' (that is, have a high fanout and low height) in order to minimize I/O. We consider how to cluster the nodes (that is, map the nodes to disk pages) of mainmemory access structures such that although a path may traverse many nodes, it only traverses a few disk pages. The number of disk pages traversed in a path is called the external path length. We address several versions of the clustering problem. We present a clustering algorithm for tree structures that generates optimal worst-case external path length mappings; we also show how to make it dynamic, to support updates. We extend the algorithm to generate mappings that minimize the average weighted external path lengths. We also sh [...] ...|$|R
40|$|Spatial {{databases}} {{support a}} variety of geometric queries on point data such as range searches, nearest neighbor searches, etc. Hierarchical space decomposition structures like k-d <b>trees</b> and <b>quad</b> <b>trees</b> are useful since they are general-purpose and space-efficient. But they have bad worst case time performance for both exact and approximate versions of the queries. We present a new general purpose data structure for 2 dimensional spaces, the Parameterized Balanced Aspect Ratio (PBAR) tree, that has a worst case performance poly-logarithmic {{in the number of}} points for approximate queries. These trees are an improvement on regular Balanced Aspect Ratio (BAR) trees that have the same asymptotic performance. Both PBAR and BAR trees maintain strict limits on their depth, {{as well as on the}} aspect ratio (intuitively, how skinny the regions can be). PBAR trees have been specialized for two dimensional spaces; they allow for complete freedom in the choice of partitioning planes, have tighter bounds on the aspect ratio of regions, and are faster in empirical tests...|$|R
50|$|Jenneke {{was born}} in Kenthurst, New South Wales, Australia. She {{attended}} The Hills Grammar School. In one interview, she described her hobbies as Australian rules football, soccer, <b>quad</b> biking, climbing <b>trees</b> and handball.|$|R
