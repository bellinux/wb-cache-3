2|6|Public
40|$|We {{consider}} {{the problem of}} analyzing social network data sets in which {{the edges of the}} network have timestamps, and we wish to analyze the subgraphs formed from edges in contiguous subintervals of these timestamps. We provide data structures for these problems that use near-linear preprocessing time, linear space, and sublogarithmic query time to handle queries that ask for the number of connected components, number of components that contain cycles, number of vertices whose degree equals or is at most some predetermined value, number of vertices that can be reached from a starting set of vertices by time-increasing paths, and related <b>queries.</b> <b>ar</b> X i...|$|E
40|$|For many years, {{users of}} {{commercial}} search engines h ave beenh earingh ow th e latest in information {{and computer science}} research is going to improve th e quality of th e engines th ey rely on for fulfilling th eir daily information needs. However, despite wh at ish eard, th ese promisesh ave not been fulfilled. Wh ile th e I nterneth as dramatically increased th e amount of information to wh ich users nowh ave acces s, th e key issue appears to be unresolved [...] th e results for substantive <b>queries</b> <b>ar</b> e not improving. However, th e past need not predict th e future because soph isticated a dvances in Natural Language Processing (NLP) h ave, in fact, accomplish ed signif icant improvements in engines th at can provide ease of access for users as well as imp roved quality of retrieved information...|$|E
40|$|This thesis {{investigates the}} {{practical}} aspects of implementing Query Containment algorithms for the query language XPath. Query Containment {{is the problem}} to decide if the results of one query are {{a subset of the}} results of another query for any database. Query Containment algorithms can be used for the purpose of optimising the querying process in database systems. Two algorithms have been implemented and compared, The Canonical Model and The Homomorphism Technique. The algorithms have been compared with respect to speed, ease of implementation, accuracy and usability in database systems. Benchmark tests were developed to measure the execution times of the algorithms on a specific set of queries. A simple database system was developed to investigate the performance gain of using the algorithms. It was concluded that The Homomorphism Technique outperforms The Canonical Model in every test case with respect to speed. The Canonical Model is however more accurate than The Homomorphism Technique. Both algorithms were easy to implement, but The Homomorphism Technique was easier. In the database system, there was performance to be gained by using Query Containment algorithms for a certain type of queries, but in most cases there was a performance loss. A database system that utilises Query Containment algorithms for optimisation would for every issued query have to evaluate if such an algorithm should be used. Denna rapport undersöker de praktiska aspekterna av att implementera Query Containment-algoritmer för queryspråket XPath. <b>Query</b> Containment <b>är</b> problemet att avgöra om resultaten av en <b>query</b> <b>är</b> en delmängd av resultaten av en annan query, oavsett databas. Query Containment-algoritmer kan användas för ändamålet att optimera queryingprocessen i databassystem. Två algoritmer har implementerats och jämförts, The Canonical Model och The Homomorphism Technique. Algoritmerna har jämförts med avseende på hastighet, lätthet att implementera, exakthet och användbarhet i riktiga databassystem. Prestandatester utvecklades för att mäta exekveringstider för algoritmerna på specifikt framtagna queries. Ett enkelt databassystem utvecklades för att undersöka prestandavinsten av att använda algoritmerna. Slutsatsen att The Homomorphism Technique presterar bättre än The Canonical Model i samtliga testfall med avseende på hastighet drogs. The Canonical Model är dock mer exakt än The Homomorphism Technique. Båda algoritmerna var lätta att implementera, men The Homomorphism Technique var lättare. I databassystemet fanns det en prestandavinst i att använda Query Containment-algoritmer för en viss typ av queries, men i de flesta fall var det en prestandaförlust. Ett databassystem som använder Query Containment-algoritmer för optimering bör för varje query avgöra om en sådan algoritm ska användas...|$|R
40|$|We {{introduce}} session automata, an automata {{model to}} process data words, i. e. words over an infinite alphabet. Session automata support the notion of fresh data values, which are well suited for modeling protocols in which sessions using fresh values are of major interest, like in security protocols or ad-hoc networks. Session automata have an expressiveness partly extending, partly reducing that of classical register automata. We show that, unlike register automata and their various extensions, session automata are robust: They (i) are closed under intersection, union, and (resource-sensitive) complementation, (ii) admit a symbolic regular representation, (iii) have a decidable inclusion problem (unlike register automata), and (iv) enjoy logical characterizations. Using these results, we establish a learning algorithm to infer session automata through membership and equivalence <b>queries.</b> SCOPUS: <b>ar.</b> jinfo:eu-repo/semantics/publishe...|$|R
40|$|Abstract. It is well-recognized {{that the}} main factor that hinders the {{applications}} of Association Rules (ARs) is the huge number of ARs re-turned by the mining process. In this paper, we propose an effective solution that presents concise mining results by eliminating the redun-dancy in the set of ARs. We adopt the concept of δ-Tolerance to define the set of δ-Tolerance ARs (δ-TARs), which is a concise representation for the set of ARs. δ-Tolerance is a relaxation on the closure defined on the support of frequent itemsets, thus allowing us to effectively prune the redundant ARs. We then devise a set of inference rules, with which we prove that the set of δ-TARs is a non-redundant representation of ARs. In addition, we prove that the set of ARs that {{is derived from the}} δ-TARs by the inference rules is sound and complete. We also develop a compact tree structure called the δ-TAR tree, which facilitates the efficient gener-ation of the δ-TARs and derivation of other ARs. Experimental results verify the efficiency of using the δ-TAR tree to generate the δ-TARs and to <b>query</b> the <b>ARs.</b> The set of δ-TARs is also shown to be drastically smaller than the state-of-the-art concise representations of ARs...|$|R
40|$|It is well-recognized {{that the}} main factor that hinders the {{applications}} of Association Rules (ARs) is the huge number of ARs returned by the mining process. In this paper, we propose an effective solution that presents concise mining results by eliminating the redundancy in the set of ARs. We adopt the concept of delta tolerance to define the set of delta-Tolerance ARs (delta-TARs), which is a concise representation for the set of ARs. The notion of delta-tolerance is a relaxation on the closure defined on the support of frequent itemsets, thus allowing us to effectively prune the redundant ARs. We devise a set of inference rules, with which we prove that the set of delta-TARs is a non-redundant representation of ARs. In addition, we prove that the set of ARs that {{is derived from the}} delta-TARs by the inference rules is sound and complete. We also develop a compact tree structure called the delta-TAR tree, which facilitates the efficient generation of the delta-TARs and derivation of other ARs. Experimental results verify the efficiency of using the delta-TAR tree to generate the delta-TARs and to <b>query</b> the <b>ARs.</b> The set of delta-TARs is shown to be significantly smaller than the state-of-the-art concise representations of ARs. In addition, the approximation on the support and confidence of the ARs derived from the delta-TARs are highly accurate...|$|R
40|$|Abstract—Opinion {{retrieval}} engines aim {{to retrieve}} documents containing user opinions towards a given search query. Different from traditional IR engines which rank documents by their topic {{relevance to the}} search query, opinion retrieval engines also consider opinion relevance. The result documents should contain user opinions which should be relevant to the search query. In previous opinion retrieval algorithms, opinion relevance scores are usually calculated by using very straightforward approaches, e. g., the distance between search query and opinion-carrying words. These approaches may cause two problems: 1) opinions in the returned result documents are irrelevant to the search query; 2) opinions related to the search query are not well identified. In this paper, we propose {{a new approach to}} deal with this topicopinion mismatch problem. We leverage the idea of Probabilistic Latent Semantic Analysis. Both <b>queries</b> and documents <b>ar...</b>|$|R
40|$|Within the EU {{research}} project titled INCEPTION, a Heritage-BIM Interoperable Platform {{will be developed}} and used to store all cultural heritage-related data. This platform will strongly depend on Semantic Web and Building Information Modelling (BIM) technologies that drive the ‘INCEPTION Time Machine’ where a time dimension will show how the cultural heritage evolves in association with its built and social environments. This paper describes the technical research challenges associated with this platform. An initial research activity is dedicated to review the state-of-the-art in BIM, H-BIM, HGIS, {{as well as the}} utilization of Semantic Web for enabling semantic search and enrichment of Cultural Heritage information by the end-users. The subsequent research activity will focus on the integration of 3 D point-clouds and sensor data with the H-BIM. Various data will be stored on the H-BIM platform and made available via APIs and web interfaces. The platform itself will contain services for geometric shape recognition and semantic <b>query.</b> Finally, the <b>AR</b> and VR applications as well as semantic searches, the Time Machine / 4 D Viewer component, and a semantic enrichment application will be made available for the end-users and third-party developers alike...|$|R

