193|1436|Public
25|$|The {{state does}} not control {{university}} syllabuses, but it does influence admission procedures through the Office for Fair Access (OFFA), which approves and monitors access agreements to safeguard and promote fair access to higher education. The independent Quality Assurance Agency for Higher Education inspects universities to assure standards, advises on the granting of degree awarding powers and University title, and maintains the <b>Quality</b> <b>Code</b> for Higher Education, which includes the Framework for Higher Education Qualification. Unlike most degrees, the state has control over teacher training courses, and standards are monitored by Ofsted inspectors.|$|E
500|$|Some {{observers}} {{credit the}} release of Perl 5.10 with {{the start of the}} Modern Perl movement. In particular, this phrase describes a style of development that embraces the use of the CPAN, takes advantage of recent developments in the language, and is rigorous about creating high <b>quality</b> <b>code.</b> While the book [...] "Modern Perl" [...] may be the most visible standard-bearer of this idea, other groups such as the Enlightened Perl Organization have taken up the cause.|$|E
50|$|Where coding {{conventions}} {{have been}} {{specifically designed to}} produce high-quality code, and have then been formally adopted, they then become coding standards. Specific styles, irrespective of whether they are commonly adopted, do not automatically produce good <b>quality</b> <b>code.</b> It is {{only if they are}} designed to produce good <b>quality</b> <b>code</b> that they actually result in good <b>quality</b> <b>code</b> being produced, i.e., they must be very logical in every aspect of their design - every aspect justified and resulting in <b>quality</b> <b>code</b> being produced.|$|E
5000|$|Result-specific metadata, such as {{time series}} qualifiers, {{interpolation}} types, comments, <b>quality</b> <b>codes</b> etc.|$|R
40|$|The coding {{method has}} a lower <b>quality</b> <b>coded</b> signal {{provided}} by coding the audio signals with a relatively low bit rate and low delay time and a higher <b>quality</b> <b>coded</b> signal provided by coding the audio signals with a relatively high bit rate and delay time, with either signal selectively transmitted to a decoder. Pref. the lower quality signal is decoded and the audio signal is delayed by the delay resulting from coding at the lower bit rate and the decoding time, to allow the signals to be compared, the obtained difference coded at the higher bit for transmission to the decoder after transmission of the lower <b>quality</b> <b>coded</b> signal. USE - For scalable audio coding...|$|R
40|$|Introduction: The {{review of}} medical records {{with the aim}} of {{assessing}} the <b>quality</b> of <b>codes</b> has long been conducted in different countries. Auditing medical coding, as an instructive approach, could help to review the <b>quality</b> of <b>codes</b> objectively using defined attributes, and this in turn would lead to improvement of the <b>quality</b> of <b>codes.</b> Method: The current study aimed to present a model for auditing the <b>quality</b> of clinical <b>codes.</b> The audit model was formed after reviewing other audit models, considering their strengths and weaknesses. A clear definition was presented for each quality attribute and more detailed criteria were then set for assessing the <b>quality</b> of <b>codes.</b> Results: The audit tool (based on the quality attributes included legibility, relevancy, completeness, accuracy, definition and timeliness); led to development of an audit model for assessing the <b>quality</b> of medical <b>coding.</b> Delphi technique was then used to reassure the validity of the model. Conclusion: The inclusive audit model designed could provide a reliable and valid basis for assessing the <b>quality</b> of <b>codes</b> considering more <b>quality</b> attributes and their clear definition. The inter-observer check suggested in the method of auditing is of particular importance to reassure the reliability of coding...|$|R
5000|$|The <b>Quality</b> <b>Code</b> (full name: UK <b>Quality</b> <b>Code</b> for Higher Education) {{sets out}} 19 {{expectations}} {{that must be}} met by UK higher education providers that receive any kind of public or student loan funding. The <b>Quality</b> <b>Code</b> replaced the 'Academic Infrastructure' (see below) in 2012 as the main reference point for checking {{on the quality of}} UK higher education, having been developed in close consultation with the UK higher education sector. Owned and maintained by QAA, it sets out 'what higher education providers expect of themselves', and 'what students may expect ...|$|E
5000|$|PAS 105 Recovered paper {{sourcing}} and <b>quality.</b> <b>Code</b> {{of practice}} ...|$|E
50|$|It {{has been}} {{observed}} 21 times over 4 oppositions and has an orbit <b>quality</b> <b>code</b> of 3.|$|E
3000|$|Intervention {{to support}} the {{development}} of template <b>quality</b> <b>codes</b> is appropriate {{to support the}} balancing of customer and supplier in sectors {{where there is a}} significant distortion or imbalance, e.g. provision of infrastructure or oligopolistic sectors such as railfreight; [...]...|$|R
40|$|At MITRE we are {{developing}} tools to aid analysts {{in assessing the}} operational usability and <b>quality</b> of object-oriented <b>code.</b> Our tools statically examine source code, automatically recognize the use of design patterns and relate pattern use to software <b>qualities,</b> <b>coding</b> goals, and system engineering expectations about the source code. Thus, {{through the use of}} automated design pattern analysis, we are working to reveal originating software design decisions. 1...|$|R
40|$|Problem statement: In modern speech {{communication}} at low bit rate, speech coding deteriorates {{the characteristics}} of the coded speech significantly. Considering the dialects in Thai, the <b>coding</b> <b>quality</b> of four main dialects spoken by Thai people residing in four core region including central, north, northeast and south regions has not been studied. Approach: This study presents a comparative study of the <b>coding</b> <b>quality</b> of four main Thai dialects by using different low-bit-rate speech coders including the Conjugate Structure Algebraic Code Excited Linear Predictive (CS-ACELP) coder and the Multi-Pulse based Code Excited Linear Predictive (MP-CELP) coder. The objective and subjective tests have been conducted to evaluate the <b>coding</b> <b>quality</b> of four main dialects. Results: From the experimental results, both tests show that the <b>coding</b> <b>quality</b> of North dialect is highest, meanwhile the <b>coding</b> <b>quality</b> of Northeast dialect is lowest. Moreover, the <b>coding</b> <b>quality</b> of male speech is mostly higher than that of female speech. Conclusion: From the study, it can be obviously seen that the <b>coding</b> <b>quality</b> of all Thai dialects are different...|$|R
50|$|It {{has been}} {{observed}} 29 times over 6 years and has an orbit <b>quality</b> <b>code</b> of 4.|$|E
50|$|It {{has been}} {{observed}} 76 times over 19 years and has an orbit <b>quality</b> <b>code</b> of 2.|$|E
50|$|It {{has been}} {{observed}} 48 times and has an orbit <b>quality</b> <b>code</b> of 4 (0 being best; 9 being worst).|$|E
40|$|Considerable {{research}} {{attention has}} been directed towards speech and audio coding algorithms capable of producing high <b>quality</b> <b>coded</b> speech and audio, however few of these use signal representations which account for temporal as well as spectral detail. This paper presents a new technique for 16 kHz wideband speech and audio coding, whereby analysis and synthesis are performed using a linear phase gammatone filter bank. The outputs of these critical band filters are processed to obtain a series of pulse trains that represent neural firing. Auditory masking is then applied {{to reduce the number}} of pulses, producing a more compact time-frequency parameterization. The critical band gains and pulse amplitudes and positions are then coded using a combination of non-uniform quantization, arithmetic coding and vector quantization. This coding paradigm produces high <b>quality</b> <b>coded</b> speech and audio, is based upon well-known models of the auditory system, is highly scalable, and has moderate complexity...|$|R
5000|$|Life Safety, ADA, <b>Code</b> Compliance, Air <b>Quality</b> (Fire <b>Codes,</b> Accessibility, Water intrusion, Mold) ...|$|R
40|$|Medical coding and {{dictionaries}} {{for clinical}} trials {{have seen a}} wave of change {{over the past decade}} where emphasis on more standardized tools for coding and reporting clinical data has taken precedence. Coding personifies the backbone of clinical reporting as safety data reports primarily depend on the coded data. Hence, maintaining an optimum <b>quality</b> of <b>coding</b> is quintessential to the accurate analysis and interpretation of critical clinical data. The perception that medical coding is merely a process of assigning numeric/alphanumeric codes to clinical data needs to be revisited. The significance of <b>quality</b> <b>coding</b> and its impact on clinical reporting has been highlighted in this article...|$|R
5000|$|... {{has been}} {{observed}} 70 times, with precovery images dating back to 2006, and has an orbital <b>quality</b> <b>code</b> of 4.|$|E
50|$|QAA {{provides}} other {{guidance to}} supplement the <b>Quality</b> <b>Code</b> (but which unlike the <b>Quality</b> <b>Code</b> is advisory rather than mandatory). The Higher Education Credit Framework for England (see previous note) enables providers to allocate a credit tariff to courses and modules. Other guidance documents help universities and colleges to address particular student needs, such as learning about sustainable practices or enterprise and entrepreneurship, or they inform the public and students about the higher education experience, for example the balance between self-directed and structured learning.|$|E
50|$|In {{cooperation}} with the UK higher education sector, QAA maintains the UK <b>Quality</b> <b>Code</b> for Higher Education (<b>Quality</b> <b>Code</b> - see below), the subject benchmark statements for bachelor's and master's degrees, and other guidance for helping higher education providers to meet agreed UK expectations. Where appropriate, QAA also works with professional, regulatory and statutory bodies, and employers, to ensure that its guidance is fit for purpose. Draft guidance is published on QAA's website (via a tab on the home page), where it is accessible for public consultation before being formally published.|$|E
40|$|Agile {{software}} development has interested researchers {{for the last}} decade. Agile {{software development}} teams develop iteration sessions that often last weeks. During development, teams work on technical code and its content. Intuitively, more effort is required to implement new features in poorly constructed <b>code</b> with low <b>quality.</b> This study investigates if and how developers consider the <b>quality</b> of their <b>code</b> during their agile effort estimations. Furthermore, we investigate whether the accuracy of their estimations could increase if developers considered the <b>quality</b> of the <b>code.</b> This study is conducted in a large software development department, {{that is part of}} Royal Dutch Shell. We take a mixed method approach, where we interview nine developers and quality experts and mine the repositories of six agile development teams. Initially, we reviewed the existing importance measures of <b>code</b> <b>quality</b> during effort estimations, including how <b>code</b> <b>quality</b> is maintained. We also evaluate the impact of <b>code</b> <b>quality</b> on estimation accuracy. Developers did not consider <b>code</b> <b>quality</b> high on the priority list during the estimation stage of development. Similarly, we did not find an empirical relationship between the quality metrics and effort estimations. Surprisingly, <b>code</b> <b>quality</b> only had minor effects on the accuracy of the effort estimations. Developers did often encounter quality issues in legacy code. However, overall our study shows that <b>code</b> <b>quality</b> is only of minor importance during agile effort estimations. Computer Scienc...|$|R
5000|$|The primary {{techniques}} used {{to ensure the}} <b>quality</b> of <b>code</b> as it is constructed include: ...|$|R
50|$|The {{association}} has developed the AMEC <b>Quality</b> Assurance <b>Code</b> to help standardise the media evaluation industry.|$|R
5000|$|Software metrics {{generated}} from automated testing and CI (such as metrics for code coverage, code complexity, and feature completeness) focus developers on developing functional, <b>quality</b> <b>code,</b> and help develop momentum {{in a team}} ...|$|E
50|$|Similarly, {{more complex}} scripts can {{run into the}} {{limitations}} of the shell scripting language itself; the limits make it difficult to write <b>quality</b> <b>code,</b> and extensions by various shells to ameliorate problems with the original shell language can make problems worse.|$|E
50|$|A key enabler {{to achieve}} {{sustainable}} pace is frequent code-merge and always executable & test covered high <b>quality</b> <b>code.</b> The constant refactoring {{way of working}} enforces team members with fresh and alert minds. The intense collaborative way of working within the team drivesa need to recharge over weekends.|$|E
5000|$|The AAC-LD {{coding scheme}} bridges {{the gap between}} speech coding schemes and high <b>quality</b> audio <b>coding</b> schemes.|$|R
40|$|Automated {{testing is}} a basic {{principle}} of agile development. Its benefits include early defect detection, defect cause localization and removal of fear to apply changes in the code. Therefore, maintaining high <b>quality</b> test <b>code</b> is essential. This study introduces a model that assesses test <b>code</b> <b>quality</b> by combining source code metrics that reflect three main aspects of test code quality: completeness, effectiveness and maintainability. The model is inspired by the SIG Software Quality model which aggregates source <b>code</b> metrics into <b>quality</b> ratings based on benchmarking. To validate the model we assess the relation between test <b>code</b> <b>quality,</b> {{as measured by the}} model, and issue handling performance. An experiment is conducted in which the test <b>code</b> <b>quality</b> model is applied on 18 open source systems. The correlation is tested between the ratings of test <b>code</b> <b>quality</b> and issue handling indicators, which are obtained by mining issue repositories. The results indicate a significant positive correlation between test <b>code</b> <b>quality</b> and issue handling performance. Furthermore, three case studies are performed on commercial systems and the model's outcome is compared to experts' evaluations. Computer ScienceSoftware TechnologyElectrical Engineering, Mathematics and Computer Scienc...|$|R
40|$|Abstract—Automated {{testing is}} a basic {{principle}} of agile development. Its benefits include early defect detection, defect cause localization and removal of fear to apply changes to the code. Therefore, maintaining high <b>quality</b> test <b>code</b> is essential. This study introduces a model that assesses test <b>code</b> <b>quality</b> by combining source code metrics that reflect three main aspects of test code quality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the Software Improvement Group which aggregates source <b>code</b> metrics into <b>quality</b> ratings based on benchmarking. To validate the model we assess the relation between test <b>code</b> <b>quality,</b> {{as measured by the}} model, and issue handling performance. An experiment is conducted in which the test <b>code</b> <b>quality</b> model is applied to 18 open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test <b>code</b> <b>quality</b> and two out of the three issue handling metrics (throughput and productivity), indicating that good test <b>code</b> <b>quality</b> positively influences issue handling performance...|$|R
50|$|Higher {{education}} providers use the <b>Quality</b> <b>Code,</b> {{in conjunction}} with their own internal policies and other guidance, to design the programmes of study that lead to their higher education awards (including academic degrees). QAA reviewers use it to check that expectations are met when they conduct a review.|$|E
50|$|Lions' Commentary on UNIX 6th Edition, with Source Code by John Lions (1976) {{contains}} the complete source {{code of the}} 6th Edition Unix kernel plus a commentary. It is {{commonly referred to as}} the Lions book. Despite its age, it is still considered an excellent commentary on simple but high <b>quality</b> <b>code.</b>|$|E
5000|$|The Asteroid Lightcurve Database (LCDB) of the Collaborative Asteroid Lightcurve Link (CALL) uses a {{numeric code}} {{to assess the}} quality of a period {{solution}} for minor planet light curves (it does not necessarily assess the actual underlying data). Its <b>quality</b> <b>code</b> parameter [...] "U" [...] ranges from 0 (incorrect) to 3 (well-defined): ...|$|E
40|$|Abstract — Software metrics {{is applied}} {{evaluating}} and assuring software <b>code</b> <b>quality,</b> {{it requires a}} model to convert internal <b>quality</b> attributes to <b>code</b> reliability. High degree of complexity in a component (function, subroutine, object, class etc.) is bad in comparison to a low degree of complexity in a component. Various internal codes attribute {{which can be used}} to indirectly assess <b>code</b> <b>quality.</b> In this paper, we analyze the software complexity measures for regression testing which enables the tester/developer to reduce software development cost and improve testing efficacy and software <b>code</b> <b>quality.</b> This analysis is based on a static analysis and different approaches presented in the software engineering literature...|$|R
3000|$|WZ {{video codec}} without <b>quality</b> control. <b>Coding</b> with the IST-TDWZ video codec {{introduced}} in Section 3; the RD points {{correspond to the}} eight [...]...|$|R
40|$|Physics {{applications}} such as reconstruction, visualisation, simulation and event viewing make wide use of geometrical information about the detector. Historically, these programmes have been written inside HEP because {{it was difficult to}} find products that met the necessary criteria. With the recent developments of geometrical modelling, very high <b>quality</b> <b>codes</b> are now available that can be efficiently used to transport particles in very complicated setups. This talk will review the results obtained with one of these codes on a typical HEP application...|$|R
