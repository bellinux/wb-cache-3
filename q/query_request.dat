69|271|Public
50|$|Federated {{search is}} an {{information}} retrieval technology {{that allows the}} simultaneous search of multiple searchable resources. A user makes a single <b>query</b> <b>request</b> which is distributed to the search engines, databases or other query engines participating in the federation. The federated search then aggregates the results that are received from the search engines for presentation to the user.|$|E
50|$|CIA, BND and the Federal Office for the Protection of the Constitution ran Projekt 6 (P6 for short) from 2005 to 2010. Its aim was {{to gather}} {{intelligence}} on suspected jihadists and terrorism supporters. An American <b>query</b> <b>request</b> for the internal database, code name PX contains the passport number, date of birth and name of German investigative journalist Peter Buchen.|$|E
50|$|The SQL {{precompiler}} allows current RPG {{developers to}} take advantage of IBM's cost-based SQE (SQL Query Engine). With the traditional F-Spec approach a developer had to identify a specific access path to a data set, now they can implement standard embedded SQL statements directly in the program. When compiled, the SQL precompiler transforms the invalid embedded SQL statements into valid RPG statements that call the database manager programs that ultimately implement the <b>query</b> <b>request.</b>|$|E
30|$|At this stage, {{the system}} can run some queries locally. For example, <b>query</b> <b>requesting</b> {{attributes}} “A” and “C” can be processed on Node 2 and <b>query</b> <b>requesting</b> attributes “B” and “E” can be processed on Node 1. The system can also run all kinds of queries employing both nodes.|$|R
3000|$|GIFT {{supports}} {{three basic}} logical operations, AND, OR, and XOR, for combining the filtering functions. <b>Query</b> <b>requests</b> are logical expressions of specified filtering functions, e.g., (f [...]...|$|R
40|$|In QueryPIE, the ti-reasoner {{algorithm}} {{is the one}} responsible to calculate the inferred results of a particular <b>query</b> <b>requested</b> from the user. Conceptually, {{the only difference between}} ti-reasoner (reported in Algorithm 1) and traditional backward-chaining is that ti-reasoner does not perform recursive inference o...|$|R
3000|$|This system {{supports}} queries from multiple users. In traditional multi-user system, a secret key {{is shared by}} multiple users. For a <b>query</b> <b>request,</b> both CDC and KDC could distinguish the request generated by one user from another. Therefore, non-repudiation of <b>query</b> <b>request</b> is supported. However, in the multi-user system designed in this paper, each user is distributed different private keys, so that the submitted <b>query</b> <b>request</b> T [...]...|$|E
30|$|The logical {{operation}} module (1) receives query requests from vision applications, where a <b>query</b> <b>request</b> {{is a logical}} combination {{of a set of}} filtering functions, (2) converts the specific <b>query</b> <b>request</b> to a set of query functions (e.g., filtering functions) to be executed in the filtering function module, (3) gets the FOV result sets of the filtering functions and combines the FOV result sets into a result set, and (4) sends the result set to the sorting module.|$|E
30|$|<b>Query</b> <b>Request</b> Time (TU): Is {{the amount}} of time taken to {{transform}} the range query window to the Hilbert cell set and send it to the CSP over the network.|$|E
5000|$|Data Management function: {{coordinates}} the Descriptive Information of the AIPs and {{the system}} information that supports the archive. It maintains the database that contains the archive's information by executing <b>query</b> <b>requests</b> and generating results; generates reports in support of other functions; and updates the database.|$|R
40|$|Database systems methodologies and {{technology}} {{can provide a}} significant support to data mining processes. In this chapter we explore approaches which address the integration between data mining activities and DBMSs from different perspectives. More specifically, we focus on (i) specialized query languages which allow to define complex data mining tasks through the submission of <b>query</b> <b>requests,</b> and (ii) indices, i. e., physical data structures designed to improve the performance of mining algorithms...|$|R
40|$|The Resource Description Framework (RDF) is a {{foundation}} for processing metadata, which provides interoperability between applications that exchange machine-understandable information on the World Wide Web (WWW). Because users of RDF can use any possible syntax to encode the data described in RDF and the highly flexible hierarchical structure and machine-independent characteristic that the XML can provide, these reasons make XML become the most popular way to store and transport RDF documents. The support in the storage and retrieval of XML documents (and RDF documents therefore) into persistent data storage efficiently is becoming a key issue in current computer technology. In this paper, we proposed a storage processing technique, including a set of OODB schema and a decomposing method, to store an incoming RDF/XML document to the underlying database {{by taking advantage of}} the object-attribute-value tripe structure of the RDF directly without the help of schema information. Furthermore, we propose a retrieval processing technique by choosing the SquishQL as our query language to construct the query statements and build the query engine for processing and executing the <b>query</b> <b>requests.</b> We will introduce how we implement the OODB schema and the decomposing method involved in our proposed storage processing technique, and briefly described how the SquishQL query language could be used to state the <b>query</b> <b>requests...</b>|$|R
3000|$|... {{contains}} the information of user’s private key. Any adversary or CSC can not forge the trapdoor information generated by authorized user. At the meanwhile, the user can not denied their request. Therefore the <b>query</b> <b>request</b> phase satisfies undeniability.|$|E
3000|$|... {{with each}} of the hops. The shared secrets are {{required}} by the hops involved to derive cryptographic keys for decryption and integrity validation of Alice’s <b>query</b> (<b>request</b> direction) and for encryption of the corresponding response, i.e., the requested certificate (response direction).|$|E
30|$|Discriminative: Binary {{representation}} of each user {{ought to be}} highly representative and distinctive {{so that it can}} be derived as reliably as possible upon every <b>query</b> <b>request</b> of a genuine user and will neither be misrecognized as others nor extractable by any non-genuine user.|$|E
40|$|A {{number of}} {{ontology}} reasoning {{systems have been}} developed for reasoning and querying the semantic web. Since they implement different reasoning algorithms and optimization techniques, they differ in a number of ways. Previous attempts at comparing performance of ontology reasoning systems have mainly considered performances of individual <b>query</b> <b>requests.</b> In this paper, we present the results of testing four of the most popular ontology reasoning systems on query sequences that reflect real world use cases. We believe that using query sequences is a more effective way to evaluate ontology reasoning systems...|$|R
40|$|Abstract — Content-based {{multimedia}} retrieval over wireless networks is {{a challenging}} research problem. In this paper {{we focus on}} a generic client-server framework designed to perform aural and visual multimedia retrievals over wireless networks. The client is developed for Java enabled mobile devices where a user can initiate a contentbased query process to retrieve similar multimedia items and the server is designed on a host computer to execute the <b>query</b> <b>requests</b> and stream back the retrieval results. Experiments show that the proposed scheme achieves efficiency in terms of adaptability and speed...|$|R
40|$|Abstract. In {{this paper}} we address the multi-clip query {{optimization}} problem where a multi-clip <b>query</b> <b>requests</b> multiple video clips. We propose a new heuristics called Restricted Search Interval that maximizes clip sharing between queries and consequently reduces the network bandwidth of a video server for a multicast system. An adaptation of our heuristics for optimizing the response time of the query is also presented. The experimental {{results show that the}} suggested heuristics reduces the server workload by about 28 % on the average in comparison to a classical heuristic approach...|$|R
30|$|In [18], Singh et al. {{proposed}} the EEGBDD algorithm. In this algorithm, every source node establishes its own virtual grid. Mobile sink moves randomly in the network, and sink initiates a <b>query</b> <b>request</b> when it needs {{data from the}} source node. The source node sends its data to the sink via the virtual grid. All <b>query</b> <b>request</b> and data are transferred through the dissemination nodes, and dissemination nodes are selected based on node residual energy and {{the distance from the}} node to the intersection of the grid. This algorithm reduces the length of the transmission path so that it reduces the energy consumption of nodes. However, some nodes may belong to more than one path so they could consume too much energy and die early.|$|E
30|$|Luo et al. [17] {{proposed}} a solution called DIstributed CerTification Authority with probabilisTic freshness (DICTATE). They tried {{to enhance the}} security of an ad hoc network under the responsibility of a mother certification authority (mCA). Since the nodes can frequently be isolated from the mCA {{there is still a}} need to access to a certification authority. The mCA preassigns a special role to several nodes called servers that constitute a distributed certification authority during the isolated period. This solution ensures that the DCA always processes a certificate update or <b>query</b> <b>request</b> in a finite amount of time and that an adversary cannot forge a certificate. Moreover, it guarantees that the DCA responds to a <b>query</b> <b>request</b> with the most recent version of the queried certificate in a certain probability; this probability can be made arbitrarily close to one, but at the expense of higher overhead.|$|E
3000|$|..., if x<y, then E_K_OPE(x) < E_K_OPE(y). OPE allows {{efficient}} {{access to}} the encrypted data by maintaining a set of indexes for simple comparisons, such as relational and logical operations between values in a spatial range <b>query</b> <b>request.</b> For OPE applied to integer values, the output set is bigger than the input set meaning that no two values {{will have the same}} encrypted value.|$|E
40|$|Content-based {{multimedia}} retrieval over wireless networks is {{a challenging}} research problem. In this paper {{we focus on}} a generic client-server framework designed to perform aural and visual multimedia retrievals over wireless networks. The client is developed for Java enabled mobile devices where a user can initiate a content-based query process to retrieve similar multimedia items and the server is designed on a host computer to execute the <b>query</b> <b>requests</b> and stream back the retrieval results. Experiments show that the proposed scheme achieves efficiency in terms of adaptability and speed. © 2005 IEEE...|$|R
40|$|We {{have built}} a multidatabase system to sup-port a {{financial}} application that stores histor-ical data used by traders to identify trends in the market. The application has an up-date rate (append-only) of 500 inserts per sec-ond and also has sub-second response require-ments for queries. A typical <b>query</b> <b>requests</b> between 100 - 1000 records. In this paper we define {{the characteristics of the}} application, the multidatabase system we used to support the applications and the extensions we made in t. he application to achieve the required func-tionality and performance. ...|$|R
40|$|Relevant {{information}} {{is required in}} all kinds of information-based systems. It is not a triv-ial task to locate the right piece of informa-tion since it may be difficult (or impossible) specify <b>query</b> <b>requests</b> precisely and completely. Thus, a flexible retrieval algorithm is required, allowing for an imprecise query specification. The document presents an approach to judging relevance of retrieved information based on a novel approach to similarity assessment. Con-trary to other systems, we define relevance mea-sures (context in similarity) at query time. This is necessary if since without a context in simi-larity one cannot guarantee that similar items will also be relevant. ...|$|R
40|$|Abstract. Wireless Sensor Networks (WSNs) {{have been}} widely used in {{motoring}} and collecting interests of en-vironment information. Packet flooding or broadcasting is an essential function for establishing a communication path from sink node to a region of sensor nodes. However, flooding operation consumes power and bandwidth resources and raises the packet collision and contention problems, which reduce the success rate of packet trans-missions and consume energy. This article proposes an efficient broadcasting protocol {{to reduce the number of}} sensor nodes that forward the <b>query</b> <b>request,</b> hence improves the packet delivery rate and saves bandwidth and power consumptions. Sensor node that received the <b>query</b> <b>request</b> will dynamically transfers the coordinate system according to the zone-ID of source node and determines whether it would forward the request or not in a distributed manner. Compared with the CBM and traditional flooding operation, experimental results show that the proposed zone-based broadcasting protocol decreases the bandwidth and power consumptions, reduces the packet collisions, and achieves high success rate of packet broadcasting...|$|E
30|$|The {{requestor}} then applies criminal {{social network}} analyses [35] to this single data file to produce actionable intelligence that can inform tactical responses directed at disrupting wildlife crimes. Investigators may automate {{parts of this}} process such as receiving the incoming <b>query</b> <b>request</b> email, running the query against the local database, and generating the outgoing email message containing the query’s results [36]. This approach removes exposure risks of any federation member’s local database, and does not need specialized software.|$|E
30|$|In {{order to}} utilize location-based services, mobile users must send their service {{provider}} accurate location information {{to fulfill the}} <b>query</b> <b>request.</b> Usually, the location service provider’s server is not credible, and the location information of the user is vulnerable to theft. After stealing the location information of a mobile user, the thief, via location tracking or links to other public information (such as geographic database, encoding the phone book), {{may be able to}} confirm the user’s identity and gain additional private information [1 – 3].|$|E
50|$|Fortunately, Trajan's replies to Pliny's <b>queries</b> and <b>requests</b> {{were also}} {{collected}} for publication, making the anthology even more valuable. The letters thus allow us {{a glimpse of}} the personalities of both Pliny and Trajan.|$|R
40|$|An {{efficient}} location-based query algorithm {{of protecting}} {{the privacy of the}} user in the distributed networks is given. This algorithm utilizes the location indexes of the users and multiple parallel threads to search and select quickly all the candidate anonymous sets with more users and their location information with more uniform distribution to accelerate the execution of the temporal-spatial anonymous operations, and it allows the users to configure their custom-made privacy-preserving location <b>query</b> <b>requests.</b> The simulated experiment results show that the proposed algorithm can offer simultaneously the location query services for more users and improve the performance of the anonymous server and satisfy the anonymous location requests of the users...|$|R
40|$|Research of {{pertinent}} {{information on the}} web is a recent concern of Information Society. Processing based on statistics is no longer enough to handle (i. e. to search, translate, summarize [...] .) relevant information from texts. The problem is how to extract knowledge taking into account document contents {{as well as the}} context of the <b>query.</b> <b>Requests</b> looking for events taking place during a certain time period (i. e. between 1990 and 2001) cannot provide yet the expected results. We propose a method to transform the query in order to "understand" its context and its temporal framework. Our method is validated by the SORTWEB System...|$|R
40|$|We {{consider}} {{the problem of}} finding one or more desired items out of an unsorted database. Patel has shown that if the database permits quantum queries, then mere digitization is sufficient for efficient search for one desired item. The algorithm, called factorized quantum search algorithm, presented by him can locate the desired item in an unsorted database using $O(log_{ 4 }N) $ queries to factorized oracles. But the algorithm requires that all the property values must be distinct from each other. In this paper, we discuss {{how to make a}} database satisfy the requirements, and present a quantum search engine based on the algorithm. Our goal is achieved by introducing auxiliary files for the property values that are not distinct, and converting every complex <b>query</b> <b>request</b> into a sequence of calls to factorized quantum search algorithm. The query complexity of our algorithm is $O(P*Q*M*log_{ 4 }N) $, where P is the number of the potential simple query requests in the complex <b>query</b> <b>request,</b> Q is the maximum number of calls to the factorized quantum search algorithm of the simple queries, M is the number of the auxiliary files for the property on which our algorithm are searching for desired items. This implies that to manage an unsorted database on an actual quantum computer is possible and efficient. Comment: 7 pages, 1 figur...|$|E
40|$|An {{important}} issue arising from Peer-to-Peer applications {{is how to}} accurately and efficiently retrieve a set of K best matching data objects from different sources while minimizing the number of objects {{that have to be}} accessed. This paper resolves this issue by organizing peers in a Semantic Link Network Overlay, where semantic links are established to denote the semantic relationship between peers ’ data schemas. A <b>query</b> <b>request</b> will be routed to appropriate peers according to the semantic link type and a lower bound of rank function. Optimization strategies are proposed to reduce the total amount of data transmitted...|$|E
30|$|Probability model [2] mainly {{relies on}} {{probabilistic}} operation and Bayes rule to match data information, {{in which the}} weight values of feature words are all multivalued. The probabilistic model uses the index word to represent the user’s interest, that is, the personalized <b>query</b> <b>request</b> submitted by the user. Meanwhile, there is no vocabulary set with a standard semantic feature and document label. Traditional weighted strategy lacks semantic information of the document, which is not representative for the document description. On the basis of semantic annotation results, weighted item frequency [3] and domain ontology of the semantic relation are used to express the semantics of the document [4].|$|E
40|$|Retrieving {{relevant}} information {{is a crucial}} component of cased-based reasoning systems for Internet applications such as search engines. The task is to use user-deﬁned queries to retrieve useful information according to certain measures. Even though techniques exist for locating exact matches, ﬁnding relevant partial matches might be a problem. It may not be also easy to specify <b>query</b> <b>requests</b> precisely and completely – resulting in a situation known as a fuzzy-querying. It is usually {{not a problem for}} small domains, but for large repositories such as World Wide Web, a request speciﬁcation becomes a bottleneck. Thus, a ﬂexible retrieval algorithm is required, allowing for imprecise or fuzzy query speciﬁcation or search...|$|R
5000|$|... iSNS Servers: iSNS servers {{respond to}} iSNS {{protocol}} <b>queries</b> and <b>requests</b> made by iSNS clients using the iSNSP. iSNS servers initiate iSNSP State Change Notifications and store properly authenticated {{information submitted by}} a registration request in an iSNS database.|$|R
30|$|Blockchain can {{facilitate}} the automatic recording of big data by credit agencies, while also storing and sharing encrypted {{forms of the}} customer’s credit status within institutions. This enables sharing credit data. The following blockchain credit solution has been proposed: during the “know your customer” (KYC) process, banks should store customer information in their own database, and then employ encryption technology to upload summary information for storage in the blockchain. When there are <b>query</b> <b>requests,</b> the original data provider can be notified using the blockchain and a query can be performed. Therefore, all parties can search external big data, while also not divulging their core business data (Blockchain 3.0 (12): Restructuring existing credit information system by blockchain credit [EB/OL]).|$|R
