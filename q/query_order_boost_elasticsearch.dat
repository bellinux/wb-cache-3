0|2098|Public
40|$|Hemaspaandra, Hempel, and Wechsung [cs. CC/ 9909020] {{raised the}} {{following}} questions: If one is allowed one question {{to each of}} two different information sources, does {{the order in which}} one asks the questions affect the class of problems that one can solve with the given access? If so, which order yields the greater computational power? The answers to these questions have been learned-inasfar as they can be learned without resolving whether or not the polynomial hierarchy collapses-for both the polynomial hierarchy and the boolean hierarchy. In the polynomial hierarchy, <b>query</b> <b>order</b> never matters. In the boolean hierarchy, <b>query</b> <b>order</b> sometimes does not matter and, unless the polynomial hierarchy collapses, sometimes does matter. Furthermore, the study of <b>query</b> <b>order</b> has yielded dividends in seemingly unrelated areas, such as bottleneck computations and downward translation of equality. In this article, we present some of the central results on <b>query</b> <b>order.</b> The article is written {{in such a way as}} to encourage the reader to try his or her own hand at proving some of these results. We also give literature pointers to the quickly growing set of related results and applications. Comment: 15 page...|$|R
40|$|Hemaspaandra, Hempel, and Wechsung [cs. CC/ 9909020] {{initiated}} {{the field of}} <b>query</b> <b>order,</b> which studies {{the ways in which}} computational power is affected by the order in which information sources are accessed. The present paper studies, for the first time, <b>query</b> <b>order</b> as it applies to the levels of the polynomial hierarchy. We prove that the levels of the polynomial hierarchy are order-oblivious. Yet, we also show that these <b>ordered</b> <b>query</b> classes form new levels in the polynomial hierarchy unless the polynomial hierarchy collapses. We prove that all leaf language classes - and thus essentially all standard complexity classes - inherit all order-obliviousness results that hold for P. Comment: 14 page...|$|R
5000|$|Term reordering: in {{information}} retrieval {{this is a}} standard technique to reduce the work involved in retrieving results. This transformation is invisible to the user, since the results ordering uses the original <b>query</b> <b>order</b> to determine relevance.|$|R
40|$|Abstract: Hemaspaandra, Hempel, and Wechsung [HHW] {{initiated}} the eld of <b>query</b> <b>order,</b> which studies {{the ways in}} which computational power is a ected by the order in which information sources are accessed. The present paper studies, for the rst time, <b>query</b> <b>order</b> as it applies to the levels of the polynomial hierarchy. P C:D denotes the class of languages computable by a polynomial-time machine that is allowed one query to C followed by one query to D [HHW]. We prove that the levels of the polynomial hierarchy are order-oblivious: P p j: p k = P p k: p j. Yet, we also show that these <b>ordered</b> <b>query</b> classes form new levels in the polynomial hierarchy unless the polynomial hierarchy collapses. We prove that all leaf language classes|and thus essentially all standard complexity classes|inherit all order-obliviousness results that hold for P...|$|R
40|$|In certain {{database}} {{applications such}} as deductive databases, batch query processing, and recursive query processing etc., a single query can {{be transformed into a}} set ofclosely related database queries. Great benefits can be obtained by executing a group of related queries all to-gether in a single unijied multi-plan instead of executing each <b>query</b> separately. In <b>order</b> to achieve this, Multiple Query Optimization (MQO) identifies common task(s) (e. g. common subezpressions, joins, etc.) among a set of query plans and creates a single unified plan (multi-plan) which can be executed to obtain the required out-puts forall queries at once. In this paper, anew heuris-tic function (f=), dynamic <b>query</b> <b>ordering</b> heuristics, and Depth-First Branch-and-Bound (DFBB) are de-jined and experimentally evaluated, and compared with existing methods which use A * and static query order-ing. Our experiments show that all three of f., DFBB, and dynamic <b>query</b> <b>ordering</b> help to improve the perfor-mance of our h 4 Q 0 algorithm. ...|$|R
40|$|We study <b>query</b> <b>order</b> {{within the}} {{polynomial}} hierarchy. P C:D denotes {{the class of}} languages computable by a polynomial-time machine that is allowed one query to C followed by one query to D [HHW]. We prove that the levels of the polynomial hierarchy are order-oblivious: P Σ p j :Σ p k = P Σ p k :Σ p j. Yet, we also show that these <b>ordered</b> <b>query</b> classes form new levels in the polynomial hierarchy unless the polynomial hierarchy collapses. We prove that all leaf language classes [...] -and thus essentially all standard complexity classes [...] -inherit all order-obliviousness results that hold for P. 1 Introduction <b>Query</b> <b>order</b> was introduced by Hemaspaandra, Hempel, and Wechsung [HHW] in order to study whether {{the order in which}} information sources are accessed has any effect on the class of problems that can be solved. In the everyday world, the order in which we access information is crucial, and the work of Hemaspaandra, Hempel, and Wechsung [HHW] shows that this [...] ...|$|R
5000|$|In <b>order</b> to <b>boost</b> Romanian coastal defenses, the Germans {{also built}} {{up their own}} batteries: ...|$|R
25|$|The {{potential}} queen {{seems to}} require this heightened aggression in <b>order</b> to <b>boost</b> her own development.|$|R
40|$|The {{exchange}} and storage of XML data {{is becoming increasingly}} important. In contrast to conventional semistructured data [4, 1], the labels in a document-oriented representation such as XML are ordered. Furthermore, regular expressions (DTDs) describe the horizontal (and vertical) structure of the data. Traditional query languages for semi-structured data ignore the horizontal order and are therefore limited in their expressiveness and optimizability. We describe a query language for <b>querying</b> <b>ordered</b> semistructured data. This query language provides primitives for specifying more powerful <b>queries</b> on <b>ordered</b> semistructured data. Furthermore, we describe how horizontal type information in DTDs is used to optimize queries based on finite automata...|$|R
40|$|Abstract—In {{the query}} model of multi-variate {{function}} compu-tation, {{the values of}} the variables are queried sequentially, in an order that may depend on previously revealed values, until the function’s value can be determined. The function’s computation query complexity is the lowest expected number of queries required by any <b>query</b> <b>order.</b> Instead of computation, it is often easier to consider verification, where the value of the function is given and the queries aim to verify it. The lowest expected number of queries necessary is the function’s verification query complexity. We show that for all symmetric functions of indepen-dent binary random variables, the computation and verification complexities coincide. This provides a simple method for finding the query complexity and the optimal <b>query</b> <b>order</b> for computing many functions. We also show that if the symmetry condition is removed, there are functions whose verification complexity is strictly lower than their computation complexity, and mention that the same holds when the independence or binary conditions are removed. I...|$|R
40|$|In {{the query}} model of multivariate {{function}} computation, {{the values of}} the inputs are queried se-quentially in an order that may depend on previously revealed values until the function’s value can be determined. The function’s computation query complexity is the lowest expected number of queries required by any <b>query</b> <b>order.</b> Instead of computation, it is often easier to consider verification, where the value of the function is given and the queries aim to verify it. The lowest expected number of queries necessary is the function’s verification query complexity. We show that for all symmetric func-tions of independent binary random variables, the computation and verification complexities coincide. This provides a simple method for finding the query complexity and optimal <b>query</b> <b>order</b> for computing many functions. We also show that after relaxing any of the symmetry, independence, or binary inputs restrictions, there are functions whose verification complexity is strictly lower than their computation complexity. ...|$|R
5000|$|Install an amplified {{splitter}} in <b>order</b> to <b>boost</b> {{the signal}} strength before feeding it to converter and TV.|$|R
5000|$|... 1995 - In <b>order</b> to <b>boost</b> record sales, Capital reduces all record {{prices to}} HKD 88 (USD 11).|$|R
50|$|Currently, a {{modernization}} {{of the canal}} is being considered in <b>order</b> to <b>boost</b> trade in the port of Cartagena.|$|R
5000|$|The mean {{reciprocal}} rank is {{a statistic}} measure for evaluating any process {{that produces a}} list of possible responses {{to a sample of}} <b>queries,</b> <b>ordered</b> by probability of correctness. The reciprocal rank of a query response is the multiplicative inverse of the rank of the first correct answer. The mean reciprocal rank is the average of the reciprocal ranks of results for a sample of queries Q: ...|$|R
40|$|We {{show that}} {{the order in which}} different-size-rounds of {{parallel}} queries to Σ p i, i 1, are made never matters. This solves a problem left open by previous papers in that area [HHH 98 a, BC]. Our results shed new light on the numberof -queries tradeoffs between parallel, a mixture of parallel and sequential, and pure sequential access to Σ p i oracles. 1 Introduction In this paper we solve an open question related to <b>query</b> <b>order</b> in the polynomial hierarchy. We show that when making two consecutive rounds of parallel queries to a Σ p i oracle, i 1, the order in which these rounds are made never matters. However, in contrast to cases that already have been considered in the literature, [HHH 98 a, BC], the query rounds can not be made simultaneously unless the polynomial hierarchy collapses. Our results extend to the case of more than two rounds of parallel queries. Such generalized <b>query</b> <b>order</b> classes can also be seen as complexity classes being based on a mix [...] ...|$|R
40|$|People are {{impatient}} and discount future rewards more {{when they are}} asked to delay consumption than when they are offered the chance to accelerate consumption. The three experiments reported here provide a process-level account for this asymmetry, with implications for designing decision environments that promote less impulsivity. In Experiment 1, a thought-listing procedure showed that people decompose discount valuation into two queries. Whether one considers delayed or accelerated receipt of a gift certificate influences the order in which memory is queried to support immediate versus delayed consumption, and the <b>order</b> of <b>queries</b> affects the relative number of patient versus impatient thoughts. Relative frequency and clustering of impatient thoughts predicts discounting and mediates the discounting asymmetry. Experiment 2 implicated <b>query</b> <b>order</b> causally: When participants listed reasons for immediate versus delayed consumption in the order used spontaneously in acceleration and delay decisions, the discounting asymmetry was replicated; reversing the order in which reasons were listed eliminated the asymmetry. The results of Experiment 3, which used an implicit-memory task, support a memory-interference account of the effect of <b>query</b> <b>order...</b>|$|R
50|$|In 2014 Russia forgave {{nearly all}} of the Uzbek debt to Russia in <b>order</b> to <b>boost</b> the {{relations}} between the two countries.|$|R
50|$|Method of pricing {{where an}} {{organization}} artificially sets one product price high, in <b>order</b> to <b>boost</b> sales {{of a lower}} priced product.|$|R
50|$|There is a {{proposal}} to include the SCE-200 in LVM-3 in <b>order</b> to <b>boost</b> its payload capacity to 6 tonnes to GTO.|$|R
50|$|Since 1984 {{the armed}} forces and Carabineros have restituted lands in the islands to civilians {{settlers}} in <b>order</b> to <b>boost</b> the economic use.|$|R
6000|$|... "Plenty {{good boy}} stop along Langa-Langa?" [...] Van Horn, unperturbed, politely <b>queried,</b> in <b>order</b> to make {{conversation}} and advertise nonchalance.|$|R
5000|$|In the {{television}} series Strike Back, a honey pot agent is ordered {{to sleep with}} Sgt. John Porter in <b>order</b> to <b>boost</b> his confidence.|$|R
25|$|In <b>order</b> to <b>boost</b> {{the economy}} in Kashgar region, the {{government}} classified the area as the sixth Special Economic Zone of China in May 2010.|$|R
50|$|In late June 2011, Google {{introduced}} a new look to the Google home page in <b>order</b> to <b>boost</b> {{the use of the}} Google+ social tools.|$|R
50|$|In <b>order</b> to <b>boost</b> {{the economy}} in Kashgar region, the {{government}} classified the area as the sixth Special Economic Zone of China in May 2010.|$|R
50|$|ILVA {{opened its}} first United Kingdom store in 2006. It planned to open stores close to {{existing}} IKEA stores in <b>order</b> to <b>boost</b> their customer base.|$|R
40|$|We {{study the}} {{computational}} power of machines that specify their own acceptance types, and {{we show that}} they accept exactly the languages in R #P m (NP). We study the effect of <b>query</b> <b>order</b> on computational power, and show that P BH j [1]:BH k [1] [...] -the languages computable via a polynomial-time machine given one query to the jth level of the boolean hierarchy followed by one query to the kth level of the boolean hierarchy [...] -equals R p j+ 2 kΓ 1 -tt (NP) if j is even and k is odd, and equals R p j+ 2 k-tt (NP) otherwise. Thus, unless the polynomial hierarchy collapses, it holds that for each 1 j k: P BH j [1]:BH k [1] = P BH k [1]:BH j [1] () (j = k) (j is even k = j + 1). We extend our analysis to apply to more general query classes. 1 Introduction This paper studies two related topics: the power of self-specifying acceptance types {{and the importance of}} <b>query</b> <b>order.</b> By acceptance type, we mean the set of numbers of accepting paths that cause a machine to accept. Many co [...] ...|$|R
50|$|Individuals {{with less}} than a full record of {{qualifying}} years, may elect to pay voluntary National Insurance contributions, in <b>order</b> to <b>boost</b> their record for pension purposes.|$|R
50|$|The {{event was}} last held in Irvine, California, {{but has been}} held in {{other regions of the}} US in <b>order</b> to <b>boost</b> the {{expansion}} of the sport.|$|R
50|$|SEO {{is not an}} {{appropriate}} strategy for every website, other marketing strategies can be more effective, {{but it is a}} factor to consider in <b>order</b> to <b>boost</b> visibility.|$|R
50|$|On March 1, 2014, the Idaho Department of Fish and Game {{announced}} that 23 wolves {{had been killed}} in the Lolo Pass area, in <b>order</b> to <b>boost</b> elk populations.|$|R
5000|$|... #Caption: Capitals of the {{classical}} <b>orders,</b> here <b>boosted</b> to six by adding a [...] "modern Ionic" [...] (middle row, right). A typical Composite capital is at bottom row, right.|$|R
50|$|In 2006, the {{administration}} was accused of grade tampering in <b>order</b> to <b>boost</b> graduation rates. Following an investigation, the state's Attorney General office concluded that no widespread tampering took place.|$|R
40|$|The growing {{access to}} {{large amounts of}} text data opens more {{opportunities}} in information processing. Given a list of complex questions {{and a set of}} relevant documents, the task of producing an informative and coherent summary of those documents in response to the questions has attracted {{a great deal of attention}} recently. However, the problem of organizing information for summarization so that the generated summary is coherent has received relatively little attention. Several approaches have been proposed for sentence ordering in single-document and generic multiple-document summarization, but no single method has been found to address sentence ordering in query-based summarization. In this thesis, we propose and implement an algorithm that combines constraints from <b>query</b> <b>order</b> and topical relatedness in human produced summaries of multiple documents in response to multiple questions. To test the effectiveness of the constraints, we construct a new query-based corpus from the human produced summaries for the Document Understanding Conference(DUC) 2006 evaluation. We then conduct experiments, using an automatic evaluation method based on Kendall 2 ̆ 7 s Tau, to evaluate and compare the effectiveness of our approaches to others. Our results show that both <b>query</b> <b>order</b> and topical relatedness improve the ordering performance when compared to a baseline method, and a combination of these two constraints achieves even better results...|$|R
5000|$|In Sri Lanka, the Supreme Court, on 27 April 2011 gave a {{landmark}} <b>order</b> to <b>boost</b> the inherent right of disabled persons to have unhindered {{access to public}} buildings and facilities.|$|R
