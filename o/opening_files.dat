31|195|Public
25|$|Short for Graphic User Interface, the GUI uses windows, icons, and menus {{to carry}} out {{commands}} such as <b>opening</b> <b>files,</b> deleting files, moving files, etc. and although many GUI Operating Systems are operated by using a mouse, the keyboard {{can also be used}} by using keyboard shortcuts or arrow keys. The GUI was co-invented at Xerox PARC by Alan Kay and Douglas Engelbart in 1981.|$|E
25|$|Because many {{encodings}} {{have only}} a limited repertoire of characters, they are often only usable to represent text in a limited subset of human languages. Unicode {{is an attempt to}} create a common standard for representing all known languages, and most known character sets are subsets of the very large Unicode character set. Although there are multiple character encodings available for Unicode, the most common is UTF-8, which has the advantage of being backwards-compatible with ASCII; that is, every ASCII text file is also a UTF-8 text file with identical meaning. UTF-8 also has the advantage that it is easily auto-detectable. Thus, a common operating mode of UTF-8 capable software, when <b>opening</b> <b>files</b> of unknown encoding, is to try UTF-8 first and fall back to a locale dependent legacy encoding when it definitely isn't UTF-8.|$|E
2500|$|... unusually slow network {{performance}} (<b>opening</b> <b>files</b> or accessing web sites) ...|$|E
5000|$|... Aircraft {{frame with}} large side <b>openings</b> (<b>filed</b> on Apr. 2, 1952, granted on Mar. 18, 1958) ...|$|R
5000|$|Failure {{to freeze}} the {{evidence}} prior to <b>opening</b> the <b>files,</b> coupled {{with the fact that}} merely <b>opening</b> the <b>files</b> changes them, can and has invalidated critical evidence.|$|R
5000|$|When <b>opening</b> a <b>file,</b> use the [...] ">>" [...] mode {{to append}} rather than over write.open(my $fh, '>>', [...] "/some/file.txt");print $fh [...] "Some new text\n";close $fh;Note that when <b>opening</b> and closing <b>file</b> handles, one should always check the return value.|$|R
50|$|The tab manage {{contains}} a file manager for navigating in the computers file system <b>opening</b> <b>files.</b>|$|E
5000|$|A flare {{protocol}} {{connection is}} used to operate on flares: <b>opening</b> <b>files</b> and directory, reading and writing, getting information and exchange flares during balancing operations. Flare protocol is a binary protocol.|$|E
50|$|You {{can control}} GOM Player with GOM Remote. This {{includes}} all basic functions, such as moving forward/back, play, and pause. This also includes advanced functions, such as <b>opening</b> <b>files,</b> searching, and PC power control.|$|E
5000|$|... {{symbolic}} {{file name}} (to match a JCL statement for <b>opening</b> the <b>file)</b> ...|$|R
25|$|The {{possibility}} of embedding executable objects inside otherwise non-executable file formats can make <b>opening</b> those <b>files</b> a risk.|$|R
50|$|The 1. P-7f P-3d, 2. P-7e {{sequence}} {{strongly suggests}} that Black will play an Ishida <b>opening</b> (Third <b>File</b> Ranging Rook).|$|R
50|$|Practicing safe surfing {{in order}} to avoid infection: being skeptical about {{clicking}} links, <b>opening</b> <b>files</b> that may be masquerading as harmless, visiting sites that may not be professionally managed or may be malicious, allowing scripts or apps to run locally, connecting USB disks to own PC, social engineering attempts, etc..|$|E
5000|$|Starting from Mac OS X 10.7 Lion, windows {{which contain}} a {{document}} or website open with an animation similar to Windows Aero. A similar zoom {{effect can be}} seen when <b>opening</b> <b>files</b> from the desktop, or within a Finder window. This also applies to the entire desktop when a user logs in.|$|E
50|$|The menu bar's {{purpose is}} to supply a common housing for window- or application-specific menus which provide access to such {{functions}} as <b>opening</b> <b>files,</b> interacting with an application, or displaying help documentation or manuals. Menu bars are typically present in graphical user interfaces that display documents and representations of files in windows and windowing systems but menus {{can be used as}} well in command line interface programs like text editors or filemanagers where drop-down menu is activated with shortcut key or combination.|$|E
5000|$|... #Caption: Editors like Leafpad, shown here, {{are often}} {{included}} with operating systems as a default helper application for <b>opening</b> text <b>files.</b>|$|R
5000|$|Python permits [...] "Universal Newline Support" [...] when <b>opening</b> a <b>file</b> for reading, when {{importing}} modules, {{and when}} executing a file.|$|R
5000|$|In the Perl {{programming}} language, graceful exits {{are generally}} implemented via the die operator. For example, the code for <b>opening</b> a <b>file</b> often reads like the following: ...|$|R
5000|$|The GUI {{was first}} {{developed}} at Xerox PARC by Alan Kay, Larry Tesler, Dan Ingalls, David Smith, Clarence Ellis {{and a number}} of other researchers. It used windows, icons, and menus (including the first fixed drop-down menu) to support commands such as <b>opening</b> <b>files,</b> deleting files, moving files, etc. In 1974, work began at PARC on Gypsy, the first bitmap What-You-See-Is-What-You-Get (WYSIWYG) cut & paste editor. In 1975, Xerox engineers demonstrated a Graphical User Interface [...] "including icons and the first use of pop-up menus".|$|E
50|$|An {{example of}} {{visually}} representing hierarchy {{is through the}} Nested clusters. The Nested clusters represents hierarchical relationships by using layers of information. The child element is within the parent element, such as in a Venn diagram. This structure of representing hierarchy is most effective in representing simple relationships. For example, when directing someone to open a file on a computer desktop, one may first direct them towards the main folder, then the subfolders within the main folder. They will keep <b>opening</b> <b>files</b> within the folders until the designated file is located.|$|E
50|$|A web IDE, {{like most}} websites, is usually {{composed}} of two pieces: a frontend and a backend. The frontend is usually written in Javascript, using AJAX methods {{to communicate with the}} backend using a HTTP API, although in some cases, a browser extension or desktop application serves as the frontend and communicates with the backend without the need for a browser. The backend takes care of creating, saving, and <b>opening</b> <b>files,</b> as well as running any terminal commands if the IDE supports it. This setup allows for portability and continuity. The state of the IDE can be saved and reopened on another machine. This also allows for compiling or running programs to continue while the user is away.|$|E
50|$|Also in some Unix-systems {{there is}} a special flag O_NOFOLLOW for open(2) to prevent <b>opening</b> a <b>file</b> via a symbolic-link (dangling or otherwise). It's become {{standardized}} in POSIX.1-2008.|$|R
25|$|Google {{offers an}} {{extension}} for the Google Chrome web browser called Office editing for Docs, Sheets and Slides that enables users to view and edit Microsoft Office documents on Google Chrome, via the Docs, Sheets and Slides apps. The extension {{can be used}} for <b>opening</b> Office <b>files</b> stored on the computer using Chrome, as well as for <b>opening</b> Office <b>files</b> encountered on the web (in the form of email attachments, web search results, etc.) without having to download them. The extension is installed on Chrome OS by default.|$|R
5000|$|Creating new client {{files and}} {{completing}} <b>file</b> <b>opening</b> procedures.|$|R
50|$|To {{be able to}} run (slightly modified) CP/M {{software}} Microsoft {{decided to}} implement functionality similar to major parts of the CP/M BIOS, routines that CP/M systems used to do specific disk operating tasks, such as <b>opening</b> <b>files,</b> etc. Instead of basing the command processor on CP/M's CCP, which was known for some user unfriendliness, a command line interpreter (COMMAND.COM) inspired on its MS-DOS counterpart was used. Microsoft also chose its own FAT12 file system over CP/M's filing methods. This ensured that MSX-DOS floppies could be used on an MS-DOS machine, and that only one single formatting and filing system would be used. This was an important decision, because CP/M disk were often not interchangeable between machines, incompatible disk formatting schemes being a factor in this.|$|E
50|$|John Siracusa, {{writing for}} Ars Technica, {{also pointed out}} some issues with the Dock around the {{releases}} of Mac OS X Public Beta in 2000. He noted that because the Dock is centered, adding and removing icons changes {{the location of the}} other icons. In a review of Mac OS X v10.0 the following year, he also noted that the Dock does far too many tasks than it should for optimum ease-of-use, including launching apps, switching apps, <b>opening</b> <b>files,</b> and holding minimized windows. Siracusa further criticised the Dock after the release of Mac OS X v10.5, noting that it was made less usable for the sake of eye-candy. Siracusa criticized the 3D look and reflections, the faint blue indicator for open applications, and less distinguishable files and folders.|$|E
50|$|WinZip 8.0's Wizard {{interface}} {{was extended}} to allow users to create and update Zip files from the Wizard, ability to extract and install from MIME and other encoded files, automatic installation of desktop themes and screensavers; addition of Explorer context menu when <b>opening</b> <b>files</b> within archives, inclusion of subfolders when adding or updating archives, “Explorer-style” toolbar buttons, displaying a tooltip when a Zip file is selected in Windows Explorer, WinZip context menus displays small icons that correspond to toolbar buttons in Windows 98 and Windows 2000; ability to install desktop themes and screensavers contained in Zip files; new ‘Zip’ and ‘E-Mail’ context menu commands, automatic display of Zip comments, context menu help in WinZip dialogs, viewing multiple files with one action. Windows extensions are now 32-bit Explorer Shell extensions only. WinZip Self-Extractor Personal Edition no longer supports creation of 16-bit self-extracted archive.|$|E
50|$|Despite its advantages, DjVu is {{not widely}} {{supported}} by scanning and viewing software. While viewers can be downloaded, <b>opening</b> DjVu <b>files</b> is not implemented in most operating systems by default.|$|R
5000|$|Direct files must be {{preformatted}} {{before use}} by <b>opening</b> the <b>file</b> as output and writing all the blocks sequentially. This can load all [...] "dummy" [...] records or load initial data.|$|R
5000|$|Load the {{specification}} {{of the selected}} test type by <b>opening</b> a <b>file</b> from the local file system or downloading it from a Server, depending on where the test repository is stored.|$|R
5000|$|The MCP {{provides}} a file system with hierarchical directory structures. In early MCP implementations, directory nodes were represented by separate files with directory entries, as other systems did. However, since about 1970, MCP internally uses a 'FLAT' directory listing all file paths on a volume. This is because <b>opening</b> <b>files</b> by visiting and opening each directory in a file path was inefficient {{and for a}} production environment it {{was found to be}} better to keep all files in a single directory, even though they retain the hierarchical naming scheme. Programmatically, this makes no difference. The only difference visible to users is that an entity file can have the same name as a directory. For example, [...] "A/B" [...] and [...] "A/B/C" [...] can both exist; [...] "B" [...] can be both a node in a file and a directory.|$|E
50|$|Within each {{directory}}, directory entries {{appear as}} directory items, whose right-hand key values are a CRC32C hash of their filename. Their data is a location key, or {{the key of}} the inode item it points to. Directory items together can thus act as an index for path-to-inode lookups, but are not used for iteration because they are sorted by their hash, effectively randomly permuting them. This means user applications iterating over and <b>opening</b> <b>files</b> in a large directory would thus generate many more disk seeks between non-adjacent files—a notable performance drain in other file systems with hash-ordered directories such as ReiserFS, ext3 (with Htree-indexes enabled) and ext4, {{all of which have}} TEA-hashed filenames. To avoid this, each directory entry has a directory index item, whose right-hand key value of the item is set to a per-directory counter that increments with each new directory entry. Iteration over these index items thus returns entries in roughly the same order as they are stored on disk.|$|E
30|$|It is {{apparent}} in both frameworks (and particularly apparent {{in the context of}} Spark) that, as the number of particles increases, the number of particle processed per second also increases. This is because with more particles, the overheads associated with setting up (and tearing down) the mappers and reducers are increasingly offset by the parallel operations that make use of the mappers and reducers. The limited extent to which this effect is observed in the context of Hadoop highlights that the overheads associated with <b>opening</b> <b>files</b> in HDFS are significant.|$|E
50|$|There {{have been}} {{instances}} of malware crafted to exploit vulnerabilities in some Windows applications which {{could cause a}} stack-based buffer overflow when <b>opening</b> a <b>file</b> with an overly long, unhandled filename extension.|$|R
5000|$|When <b>opening</b> CAD <b>file</b> formats not in {{its native}} [...]3dm file format, Rhinoceros will convert the {{geometry}} into its native format; when importing a CAD file the geometry {{is added to the}} current file.|$|R
50|$|A {{front-end}} for the GStreamer framework. It {{is developed}} by Ali Abdallah and {{is part of}} the Xfce Goodies. Originally only playlist based, it now includes an option to replace the entire playlist when <b>opening</b> a <b>file</b> for playing.|$|R
