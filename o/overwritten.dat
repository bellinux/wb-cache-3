907|1421|Public
5|$|Sounds can {{be stored}} as Programs, which include the {{instrument}} source, effects types, and settings. There are 400 storage locations – 4 banks with 100 programs in each – {{all of which can}} be <b>overwritten</b> with user programs. There are 300 independent storage locations for Synth patches.|$|E
5|$|The {{manuscript}} is dated palaeographically to the 6th {{century or}} 7th century. According to Tischendorf {{it was written}} in the 6th century. Probably {{it was written in}} Italy. Nothing is known about its early history. In the 12th or 13th century four of its leaves were used as material for another book and they were <b>overwritten</b> by Latin text. Its later story is linked with the codices Guelferbytanus A and B.|$|E
5|$|Codex Zacynthius (designated by siglum Ξ or 040 in the Gregory-Aland numbering; A1 in von Soden) is a Greek New Testament codex, dated paleographically to the 6th century. First {{thought to}} have been written in the 8th century, it is a palimpsest—the {{original}} (lower) text was washed off its vellum pages and <b>overwritten</b> in the 12th or 13th century. The upper text of the palimpsest contains weekday Gospel lessons; the lower text contains portions of the Gospel of Luke, deciphered by biblical scholar and palaeographer Tregelles in 1861. The lower text is of most interest to scholars.|$|E
5000|$|Baseline <b>overwriting</b> of data {{involves}} one pass, <b>overwriting</b> every {{sector of}} the storage medium once with randomly generated data.|$|R
5000|$|... == Type 1: <b>overwrite</b> == This {{methodology}} <b>overwrites</b> {{old with}} new data, and therefore does not track historical data.|$|R
5000|$|Work in insert or <b>overwrite</b> mode, {{typically}} switched using Insert key. In {{insert mode}} {{if there is}} a character {{to the right of the}} caret, the new character will be inserted before it, while in <b>overwrite</b> mode typing a new character will replace (<b>overwrite)</b> the character to the right of the caret position.|$|R
5|$|In {{order to}} prevent a second running of the program it corrupts itself when run. The program simply overwrites itself with a 6000 byte long DNA-like code at a certain position. Archival {{documents}} suggest that the original plan was to use a series of ASCII 1's to corrupt the binary, {{but at some point}} in development a change was made to use fake genetic code, in keeping with the visual motifs in the book. The genetic code has a codon entropy of 5.97 bits/codon, much higher than any natural DNA sequence known. However, the ciphertext was not <b>overwritten.</b>|$|E
5|$|Following Olivia's disappearance, Peter discovers a {{surveillance}} camera in her apartment. He takes its memory device, {{which has been}} <b>overwritten</b> numerous times like a palimpsest, to Walter Bishop's (John Noble) laboratory, using forensic tools to examine previous images on the disc. Lincoln Lee (Seth Gabel) and Phillip Broyles (Lance Reddick) take Nina into custody, learning that someone with Nina's bio-metric signature had accessed the Massive Dynamic supply of Cortexiphan {{over the last few}} months; Nina is surprised by this but refuses to talk. As they work, Walter accuses Peter of taking advantage of Olivia's state, even if unintentionally, imprinting his memories of Olivia of the original timeline onto her. They identify a face belonging to Leland Spivey (Monte Markham), a man with ties to Jones and Nina, and Peter suspects that they are dosing Olivia with Cortexiphan for nefarious purposes. Their work is disrupted by the sudden appearance of the Observer September (Michael Cerveris), bleeding from a chest wound.|$|E
25|$|The AIDS virus overwrites {{the first}} 13,952 bytes of an {{infected}} com file. <b>Overwritten</b> files must be deleted {{and replaced with}} clean copies in order to remove the virus. It {{is not possible to}} recover the <b>overwritten</b> portion of the program.|$|E
5000|$|Revision 2.60 (March 1, 2005). Added Pseudo <b>OverWrite</b> {{method for}} drives {{supporting}} pseudo <b>overwrite</b> capability on sequentially recordable media. (Some versions of Blu-ray discs use this format.) ...|$|R
50|$|One {{challenge}} with an <b>overwrite</b> {{is that some}} areas of the disk may be inaccessible, due to media degradation or other errors. Software <b>overwrite</b> may also be problematic in high-security environments which require stronger controls on data commingling than can be provided by the software in use. The use of advanced storage technologies may also make file-based <b>overwrite</b> ineffective (see the discussion below under Complications).|$|R
40|$|Abstract—The side writing {{asymmetry}} of {{a recording}} head was investigated using an <b>overwrite</b> configuration that enhances the edge effects. The track {{profiles of the}} <b>overwrite</b> patterns were mea-sured for analyzing the side writing performance of the head. Mag-netic force microscope (MFM) images of the <b>overwrite</b> patterns were studied using fast Fourier transforms (FFT), and they con-firmed the profiling results. We measured weak edge effects at good pole alignment. The experiments were performed with metal evap-orated (ME) and metal particle (MP) tapes having magnetic layers between 50 and 300 nm. Index Terms—Magnetic recording, <b>overwrite,</b> track profile, write asymmetry. I...|$|R
25|$|Microsoft's {{implementation}} of Data Execution Prevention (DEP) mode explicitly protects the pointer to the Structured Exception Handler (SEH) from being <b>overwritten.</b>|$|E
25|$|In March 1996, three {{different}} separately-sold 8M memory paks were produced already containing prerecorded data of this sort. These special 8M paks bore all new decals and contained EPROMs {{that could not}} be <b>overwritten</b> by new download data from the Satellaview.|$|E
25|$|Prior to IE7, {{clearing}} the cache used {{to clear the}} index but the files themselves were not reliably removed, posing a potential security and privacy risk. In IE7 and later, when the cache is cleared, the cache files are more reliably removed, and the index.dat file is <b>overwritten</b> with null bytes.|$|E
50|$|Software-based <b>overwriting</b> uses a {{software}} application {{to write a}} stream of zeros, ones or meaningless pseudorandom data onto all sectors of a hard disk drive. There are key differentiators between data erasure and other <b>overwriting</b> methods, which can leave data intact and raise the risk of data breach, identity theft or failure to achieve regulatory compliance. Many data eradication programs also provide multiple <b>overwrites</b> so that they support recognized government and industry standards, though a single-pass <b>overwrite</b> is widely considered to be sufficient for modern hard disk drives. Good software should provide verification of data removal, which is necessary for meeting certain standards.|$|R
40|$|Abstract—Most file systems <b>overwrite</b> {{modified}} {{file data}} and metadata {{in their original}} locations, while the Log-structured File System (LFS) dynamically relocates them to other locations. We design and implement the Evergreen file system that can select between <b>overwriting</b> or relocation for each block of a file or metadata. Therefore, the Evergreen file system can achieve superior write performance by sequentializing write requests (similar to LFS-style relocation) when space utilization is low and <b>overwriting</b> when utilization is high. Another challenging issue is identifying performance benefits of LFS-style relocation over <b>overwriting</b> on a newly introduced SSD (Solid State Drive) which has only Flash-memory chips and control circuits without mechanical parts. Our experimental results measured on a SSD show that relocation outperforms <b>overwriting</b> when space utilization is below 80 % and vice versa...|$|R
5000|$|Often {{this happens}} unintentionally, e.g., using the > {{redirection}} operator. To prevent unintentional clobbering, various means are used. For example, the setting shell parameter set -o noclobber (bash, ksh) or set noclobber (csh, tcsh) will prevent > from clobbering {{by making it}} issue an error message instead:$ echo [...] "Hello, world" [...] >file.txt$ cat file.txtHello, world$ echo [...] "This will <b>overwrite</b> the first greeting." [...] >file.txt$ cat file.txtThis will <b>overwrite</b> the first greeting.$ set -o noclobber$ echo [...] "Can we <b>overwrite</b> it again?" [...] >file.txt-bash: file.txt: cannot <b>overwrite</b> existing file$ echo [...] "But {{we can use the}} >| operator to ignore the noclobber." [...] >|file.txt$ cat file.txt # Successfully <b>overwrote</b> the contents of file.txt using the >| operatorBut we can use the >| operator to ignore the noclobber.$ set +o noclobber # Changes setting back ...|$|R
25|$|Reversible {{data hiding}} is a {{technique}} which enables images to be authenticated and then restored to their original form by removing the digital watermark and replacing the image data that had been <b>overwritten.</b> This would make the images acceptable for legal purposes. The US Army also is interested in this technique for authentication of reconnaissance images.|$|E
25|$|AGC {{software}} {{was written in}} AGC assembly language and stored on rope memory. The bulk of the {{software was}} on read-only rope memory and thus couldn't be changed in operation, but some key parts of the software were stored in standard read-write magnetic-core memory and could be <b>overwritten</b> by the astronauts using the DSKY interface, as was done on Apollo 14.|$|E
25|$|In general, chopped mode {{is better}} for slower sweeps. It is {{possible}} for the internal chopping rate to be a multiple of the sweep repetition rate, creating blanks in the traces, but in practice this is rarely a problem; the gaps in one trace are <b>overwritten</b> by traces of the following sweep. A few oscilloscopes had a modulated chopping rate to avoid this occasional problem. Alternate mode, however, {{is better for}} faster sweeps.|$|E
5000|$|Data erasure (sometimes {{referred}} to as data clearing or data wiping) is a software-based method of <b>overwriting</b> the data that aims to completely destroy all electronic data residing on a hard disk drive or other digital media by using zeros and ones to <b>overwrite</b> data onto all sectors of the device. By <b>overwriting</b> the data on the storage device, the data is rendered unrecoverable and achieves data sanitization.|$|R
50|$|Alcon {{contains}} no notable symptoms beyond one extremely damaging one, which is <b>overwriting</b> random information. Assuming that the <b>overwrites</b> are subtle, this {{may result in}} significant compounding data overtime, as Alcon is a slow damager.|$|R
30|$|Finally, Marimba [30] is a {{distributed}} framework {{designed for}} making MapReduce jobs incremental. It detects automatically the input changes and computes them using two strategies: <b>overwrite</b> and incremental installation. <b>Overwrite</b> installation reads deltas {{as well as}} the previous result as input and <b>overwrites</b> the old result with the calculated value. On the other hand, incremental installation reads only the deltas as input and increments the old result by adding the calculated value.|$|R
25|$|Blyth {{said that}} the flight {{recorders}} were to be analysed in the Canberra laboratories of the ATSB. However, because the plane had remained airborne and operational throughout the incident, the cockpit voice recorder does not contain records of the initial event itself; its two-hour memory had been <b>overwritten</b> with recordings taking place after this event, during the diversion and landing. The twenty-four-hour flight data recorder does contain data covering the entire incident.|$|E
25|$|The {{critical}} {{code of the}} kernel {{is usually}} loaded into a protected area of memory, which prevents it from being <b>overwritten</b> by applications or other, more minor parts of the operating system. The kernel performs its tasks, such as running processes and handling interrupts, in kernel space. In contrast, everything a user does is in user space: writing text in a text editor, running programs in a GUI, etc. This separation prevents user data and kernel data from interfering {{with each other and}} causing instability and slowness.|$|E
25|$|As {{outlined}} by the aforementioned Orange Book, software portions of the trusted computing base need to protect themselves against tampering to be of any effect. This {{is due to the}} von Neumann architecture implemented by virtually all modern computers: since machine code can be processed as just another kind of data, it can be read and <b>overwritten</b> by any program barring special memory management provisions that subsequently have to be treated as part of the TCB. Specifically, the trusted computing base must at least prevent its own software from being written to.|$|E
3000|$|... (Joukov and Zadok 2005) {{proposed}} a file system extension, purgefs, which uses block-based <b>overwriting</b> when blocks are {{returned to the}} file system’s free blocks list. It supports <b>overwriting</b> file data and metadata for all files or just files marked as sensitive. (Joukov and Zadok 2006) also proposed three secure deletion approaches for EXT 3. The first approach is called EXT 3 basic, which securely deletes data (but not metadata) once by <b>overwriting</b> it. The second approach is called EXT 3 comprehensive, which <b>overwrites</b> file data and metadata by a configurable <b>overwriting</b> scheme. Both the aforementioned two overwriting-based approaches can securely delete all the data or just files whose extended attributes include a sensitive flag. The third approach is based on intercepting files deletion events, i.e., unlinking and truncating a file. The file to be deleted is moved into a special secure deletion directory, and a background user-level tool shred (Plumb 2010) will delete the files in the secure deletion directory at regular intervals.|$|R
5000|$|According to the 2006 Center for Magnetic Recording Research Tutorial on Disk Drive Data Sanitization Document (p. 8): [...] "Secure erase does {{a single}} {{on-track}} erasure {{of the data}} on the disk drive. The U.S. National Security Agency published an Information Assurance Approval of single-pass <b>overwrite,</b> after technical testing at CMRR showed that multiple on-track <b>overwrite</b> passes gave no additional erasure." [...] "Secure erase" [...] is a utility built into modern ATA hard drives that <b>overwrites</b> all data on a disk, including remapped (error) sectors.|$|R
40|$|Direct <b>overwrite</b> in {{magneto-optical}} recording {{is necessary to}} overcome the latency incurred by conventional erase before write recording on magneto-optical disks. In this work we theoretically analyze the thermomagnetic recording process on optical disks using a domain wall motion model. The wall motion model developed in this work {{can be used to}} examine <b>overwrite</b> schemes on both bilayer and single layer disks, that either rotate beneath an optical head or remain stationary. The model is directly compared with experiment for a GdTbFe direct <b>overwrite</b> sample, and is shown to produce results that are in agreement with experimental observations. We show that variations in the domain wall saturation velocity {{can mean the difference between}} writing or erasing a bit on the disk, and hence is a critical parameter in the recording process. We also show that direct <b>overwrite</b> by means of interior nucleation is highly unlikely. Rather, we show that the recording process involves a dynamic balance between those pressures which act to move the domain wall and those which act to freeze it into place. Finally we analyze the Nikon bilayer direct <b>overwrite</b> scheme, and then demonstrate an alternative bilayer <b>overwrite</b> scheme which avoids a major problem with the Nikon scheme...|$|R
25|$|There remain {{some aspects}} of flash-based SSDs that make them unattractive. The cost per {{gigabyte}} of flash memory remains significantly {{higher than that of}} hard disks. Also flash memory has a finite number of P/Ecycles, but this seems to be currently under control since warranties on flash-based SSDs are approaching those of current hard drives. In addition, deleted files on SSDs can remain for an indefinite period of time before being <b>overwritten</b> by fresh data; erasure or shred techniques or software that work well on magnetic hard disk drives have no effect on SSDs, compromising security and forensic examination.|$|E
25|$|Cooperative memory management, {{used by many}} early {{operating}} systems, {{assumes that}} all programs make voluntary use of the kernel's memory manager, and do not exceed their allocated memory. This system of memory management is almost never seen any more, since programs often contain bugs which can cause them to exceed their allocated memory. If a program fails, it may cause memory used {{by one or more}} other programs to be affected or <b>overwritten.</b> Malicious programs or viruses may purposefully alter another program's memory, or may affect the operation of the operating system itself. With cooperative memory management, it takes only one misbehaved program to crash the system.|$|E
25|$|The {{name of the}} {{movement}} is {{the title of a}} painting that Kandinsky created in 1903, but it is unclear whether it is the origin of the name of {{the movement}}, as Professor Klaus Lankheit learned that the title of the painting had been <b>overwritten.</b> Kandinsky wrote 20 years later that the name is derived from Marc's enthusiasm for horses and Kandinsky's love of riders, combined with a shared love of the colour blue. For Kandinsky, blue is the colour of spirituality: the darker the blue, the more it awakens human desire for the eternal (see his 1911 book On the Spiritual in Art).|$|E
50|$|Specifies {{that new}} text <b>overwrites</b> old text.|$|R
5000|$|<b>Overwrite</b> / Nounai Survivor (オーバーライト／脳内Survivor) (2012.06.13) #5 ...|$|R
5000|$|In place <b>overwriting</b> of {{flash memory}} using MySensorsBootloaderRF24.|$|R
