0|46|Public
50|$|A Global <b>Offset</b> <b>Table,</b> or GOT, is a {{table of}} {{addresses}} stored in the data section.It is used by executed programs to find during runtime addresses of global variables, unknown in compile time.The global <b>offset</b> <b>table</b> is updated in process bootstrap by the dynamic linker.Offsets to global variables from dynamic libraries are not known during compile time, this is why they are read from the GOT table during runtime.|$|R
50|$|In certain ways, {{a literal}} pool resembles a TOC or a global <b>offset</b> <b>table</b> (GOT), {{except that the}} {{implementation}} is considerably simpler, {{and there may be}} multiple literal tables per object.|$|R
5000|$|The {{identification}} of a RDS message blocks and groups is done via a 10bit <b>offset</b> <b>table</b> containing <b>offset</b> word: A , B , C , C' , and D (In RBDS this also includes [...] "E" [...] ).|$|R
50|$|An <b>offset</b> <b>table</b> {{is used in}} the WHATWG and W3C {{version of}} GB 18030 to {{efficiently}} translate code points. ICU and glibc use similar range definitions to avoid wasting space on large sequential blocks.|$|R
40|$|Abstract: This paper {{presents}} {{influence of}} curve fitting techniques on hydrostatic characteristics of marine vessels. Three vessels having lengths of 32. 16 m, 70. 0 m and 25. 6 m are selected for this study. The hull geometries of these vessels {{are represented by}} three curve fitting techniques such as least square, cubic spline and B-spline methods. At first, hydrostatic characteristics of the vessels are calculated using data only available in <b>offset</b> <b>table</b> and then using more data generated by curve fitting techniques. Finally, results obtained by <b>offset</b> <b>table</b> data are compared to those by fitted data. It is seen {{that there are some}} influences of curve fitting technique on the hydrostatic characteristics of ship especially at lightly loaded condition...|$|R
50|$|The VHD format has a {{built-in}} limitation of just under 2 TiB (2040 GiB) for the size of any dynamic or differencing VHDs. This {{is due to a}} sector <b>offset</b> <b>table</b> that only allows for the maximum of a 32-bit quantity. It is calculated by multiplying 232 by 512 bytes for each sector.|$|R
50|$|Q address {{constants}} contain not actual addresses but {{a displacement}} in the External Dummy Section - {{similar to the}} Linux Global <b>Offset</b> <b>Table</b> (see Position-independent code). A J adcon is set by the linkage editor to hold the cumulative length of the External Dummy Section, and does not actually contain an address.|$|R
50|$|The {{computer}} programming portion of Hacking takes up {{over half of}} the book. This section goes into the development, design, construction, and testing of exploit code, and thus involves some basic assembly programming. The demonstrated attacks range from simple buffer overflows on the stack to complex techniques involving overwriting the global <b>offset</b> <b>table.</b>|$|R
5000|$|After the {{scenario}} P&Ls are determined {{for each group}} of securities with the same underlying, P&L offsets are applied across pairwise security groups. These offsets are set by The Options Clearing Corporation and are informed by the degree of correlation between pairwise securities. The offset percentages for different types of indexes and different levels of aggregation are defined in an <b>offset</b> <b>table.</b>|$|R
40|$|B-Spline hull surface {{representation}} is here considered for panel method applications. Approximate analytical surfaces are obtained by a least square deviations method from <b>offset</b> <b>table</b> data points. Some results for a Wigley hull {{and for a}} Series 60 hull are presented. The analytical sectional curves representation agrees well with the station points up to the design draft, but if lofting qualities are to be improved other optimization techniques may be needed...|$|R
40|$|This Operational Practice {{recommends}} {{the method of}} applying the Time Date Table (TDT) and Time <b>Offset</b> <b>Table</b> (TOT) sections for digital terrestrial television broadcasting in Australia. Important information for those involved in setting TDT and TOT in DVB-SI generation equipment {{can be found in}} the Annex. 2. APPLICATION Broadcast of the Time and Date Table (TDT) and Time <b>Offset</b> <b>Table</b> (TOT) provides a mechanism for broadcasters to signal the time of events in their broadcast stream and for receivers to display these times in a convenient manner for the viewer. The TDT carries UTC 1 time and date. This information is given in separate table sections due to the frequent updating of this information. The TOT also provides this information, but importantly also provides information for the local time offset. 3. AUSTRALIAN TIME ZONES Australia is divided into several timezones that span from + 8 hours to + 11 hours relative to UTC. From October to March, some Australian states change to daylight saving time creating both a north/south and east/west change in timezones. These are shown in Figure 1 below...|$|R
5000|$|When Randomized mmap (...) base is enabled, PaX {{randomly}} {{shifts the}} mmap (...) base, affecting the positioning of all libraries and other non-specific mmap (...) calls. This causes all dynamically linked code, i.e. shared objects, to be mapped at a different, randomly selected offset every time. Attackers requiring a {{function in a}} certain library must guess where that library is loaded in virtual memory space to call it. This makes return-to-libc attacks difficult; although shellcode injections can still look up the address of any function in the global <b>offset</b> <b>table.</b>|$|R
50|$|Data {{references}} from position-independent code {{are usually}} made indirectly, through global <b>offset</b> <b>tables</b> (GOTs), which store the addresses of all accessed global variables. There is one GOT per compilation unit or object module, {{and it is}} located at a fixed offset from the code (although this offset is not known until the library is linked). When a linker links modules to create a shared library, it merges the GOTs and sets the final offsets in code. It {{is not necessary to}} adjust the offsets when loading the shared library later.|$|R
40|$|Current OSes {{include many}} logical sharing {{techniques}} (shared library, symbolic link, etc.) on memory and storage. Unfortunately they cause security and management problems which {{come from the}} dynamic management of logical sharing; e. g., search path replacement attack, GOT (Global <b>Offset</b> <b>Table)</b> overwrite attack, Dependency Hell, etc. This paper proposes that self-contained binaries eliminate the problems caused by logical sharing. The memory and storage overheads caused by self-contained binaries are mitigated by physical sharing (memory and disk deduplication). The effect of deduplication was investigated on the KVM virtual machine with KS...|$|R
50|$|The {{belief that}} {{security}} should be ubiquitous and unintrusive like air {{is part of}} the core philosophy behind cjdns. The routing engine runs in user space and is compiled by default with stack-smashing protection, position-independent code, non-executable stack, and remapping of the global <b>offset</b> <b>table</b> as read-only (relro). The code also relies on an ad-hoc sandboxing feature based on setting the resource limit for open files to zero, on many systems this serves block access to any new file descriptors, severely limiting the code's ability to interact with the system around it.|$|R
5000|$|Vector <b>Table</b> <b>Offset</b> Register: Optional. Not {{available}} for Cortex-M0.|$|R
30|$|While {{shoulder}} arthroplasty {{was initially}} intended for elderly patients with low functional expectations, TSA is now performed in younger patients with greater functional demands, which renders reconstruction of native anatomy {{all the more}} essential. Modern TSA implants allow for some adjustments of humeral head offset (Irlenbusch et al., 2011; Wirth et al., 2007), but some default designs assume it to be directly proportional to stem diameter, such that larger stems are designed with greater head <b>offsets</b> (<b>Table</b> 1). Our multivariable analysis suggests that this assumption is incorrect, as global head offset {{was not associated with}} intramedullary canal width, even when considering the effects of age, gender, and head retroversion.|$|R
5000|$|One {{solution}} to the fragile binary interface problem is to write a language that knows the problem exists, and does not let it happen in the first place. Most custom-written OO languages, {{as opposed to those}} evolved from earlier languages, construct all of their <b>offset</b> <b>tables</b> at load time. Changes to the layout of the library will be [...] "noticed" [...] at that point. Other OO languages, like Self, construct everything at runtime by copying and modifying the objects found in the libraries, and therefore do not really have a base class that can be fragile. Some languages, like Java, have extensive documentation on what changes are safe to make without causing FBI problems.|$|R
50|$|For a given table, columns {{fall into}} one of two categories: those which either occur exactly once in each of the records, with {{possibly}} a few NULL values; and those which occur rarely, or which may have multiple occurrences in a single record. Fixed and variable columns belong to the former category, while tagged columns belong to the latter. The internal representation of the two column categories is different, and {{it is important to understand}} the trade offs between the column categories. Fixed and variable columns are typically represented in every record, even when the occurrence has a NULL value. These columns can be quickly addressed via an <b>offset</b> <b>table.</b> Tagged column occurrences are preceded by a column identifier and the column is located by binary searching the set of tagged columns.|$|R
40|$|The {{desire for}} wide {{bandwidth}} receivers is {{realized in the}} integrated cable tuner, a receiver capable of tuning signals ranging from 50 MHz to 850 MHz. This project implements a 1. 85 GHz voltage-controlled oscillator, the component that provides the reference tone that enables the mixers to upconvert, downconvert, or image reject the signal as required. Implemented monolithically in 0. 18 µm CMOS technology, MOS varactors were designed to achieve maximum tuning range. On-chip spiral inductors achieving a Q of 5. 22 were also created. Lastly, a 3 -stage polyphase filter was implemented to provide a 90 ˚ phase shift for the image reject mixers. The VCO can tunes between 1. 84 GHz and 1. 88 GHz and exhibits phase noise of- 109. 9 dBc/Hz at a 100 kHz offset and- 136 dBc/Hz at a 1 MHz <b>offset.</b> <b>Table</b> of Contents List of Figures [...] . ...|$|R
40|$|This paper {{describes}} an advanced sonar ring that employs a low receiver sample rate to achieve processing of 48 receiver channels at near real time repetition rates of 15 Hz. The sonar ring sensing covers 360 degrees around the robot with simultaneously firing of 24 transmitters. The receiver sampling frequency is 250 kHz, compared to previous work at 1 MHz, firstly {{to maximize the}} speed of processing and secondly to avoid memory limitations of the DSPs. The processing to produce accurate distance and bearing measurements is performed on 6 DSPs using template matching of echoes with short duration. This paper presents {{a summary of the}} hardware architecture, software architecture and sensing theory of the advanced sonar ring. The use of a reference point and <b>offset</b> <b>table</b> is introduced and experimentally verified to improve the sensor accuracy and robustness. The problem and solution to cycle hopping, caused by the low sampling rate, are described in the paper. ...|$|R
5000|$|Although quite compact - {{compared}} to the multiple equivalent [...] statements - the branch instructions still carry some redundancy, since the branch opcode and condition code mask are repeated alongside the branch <b>offsets.</b> Control <b>tables</b> containing only the offsets to the program labels can be constructed to overcome this redundancy (at least in assembly languages) and yet requiring only minor execution time overhead {{compared to}} a conventional branch table.|$|R
3000|$|Native Instrumentation Besides Java APIs, Android also {{provides}} native APIs for apps to access sensor data (see Section 2.2). Instrumentor employs the method in Aurasium [18] to hook native API calls, which examines the native shared libraries loaded by the app and replaces function pointers in their global <b>offset</b> <b>table</b> (GOT). Aurasium examines shared libraries {{only at the}} start of an app, but many third-party libraries using sensors, like libunity [25], may be loaded dynamically {{at any time during the}} app’s runtime. In Sensor Guardian, besides at an app’s start, we examine a library at any time the library is dynamically loaded. Android apps can load a native library by calling either System.loadLibrary (...) in Java or dlopen (...) in native code. We hook these loading functions. Once an app is loading a library at runtime, we know the library name and loaded address, and then, we examine the GOT of the loaded library and replace the function pointers of sensor-related APIs (in GOT) with their corresponding wrapper functions’ addresses.|$|R
40|$|Hybrid {{programming}} models, such as MPI {{combined with}} threads, {{are one of}} the most efficient ways to write parallel ap-plications for current machines comprising multi-socket/multi-core nodes and an interconnection network. Global variables in legacy MPI applications, however, present a challenge because they may be accessed by multiple MPI threads simultaneously. Thus, transforming legacy MPI applications to be thread-safe in order to exploit multi-core architectures requires proper handling of global variables. In this paper, we present three approaches to eliminate global variables to ensure thread-safety for an MPI program. These approaches include: (a) a compiler-based refactoring technique, using a Photran-based tool as an example, which automates the source-to-source transformation for programs written in Fortran; (b) a technique based on a global <b>offset</b> <b>table</b> (GOT); and (c) a technique based on thread local storage (TLS). The second and third methods automatically detect global variables and privatize them for each thread at runtime. We discuss the advantages and disadvantages of these approaches and compare their performance using both synthetic benchmarks, such as the NAS Benchmarks, and a real scientific application, the FLASH code. I...|$|R
40|$|To {{initialize}} ship design process, it is {{very important}} to be able to develop an initial estimate of ship parameters to satisfy designer required specifications. For new emerging designs, this estimate has to be made based on a limited available set of examples. Moreover, a practical estimate prediction strategy should be flexible enough having no distinction between input (specified constraints) and outputs (parameters required to be estimated), since these vary from one design case to another. Conventional regression-based techniques, which are usually employed to provide the required estimates, suffer from low accuracy in case of a small number of available examples. In addition to that, they fail to capture the interrelation between different design parameters. To overcome these limitations and others, the present paper proposes a new approach based on a system of artificial neural-networks (ANNs). The new approach not only overcomes regression limitations but is also capable of providing a reliable estimate of initial design <b>offset</b> <b>table</b> based on different ANN outputs. The paper uses a case study for demonstrating the merits of the proposed approach...|$|R
5000|$|... at <b>offset</b> 0x10. This <b>table</b> stores {{an array}} of {{pointers}} to other tables; {{you have to walk}} through them searching for [...] "MCFG" [...] signature. Finally, at offset 0x2C in the MCFG table is stored searched base physical address.|$|R
50|$|PE files {{normally}} {{do not contain}} position-independent code. Instead they are compiled to a preferred base address, and all addresses emitted by the compiler/linker are fixed ahead of time. If a PE file cannot be loaded at its preferred address (because it's already taken by something else), the operating system will rebase it. This involves recalculating every absolute address and modifying the code {{to use the new}} values. The loader does this by comparing the preferred and actual load addresses, and calculating a delta value. This is then added to the preferred address {{to come up with the}} new address of the memory location. Base relocations are stored in a list and added, as needed, to an existing memory location. The resulting code is now private to the process and no longer shareable, so many of the memory saving benefits of DLLs are lost in this scenario. It also slows down loading of the module significantly. For this reason rebasing is to be avoided wherever possible, and the DLLs shipped by Microsoft have base addresses pre-computed so as not to overlap. In the no rebase case PE therefore has the advantage of very efficient code, but in the presence of rebasing the memory usage hit can be expensive. This contrasts with ELF which uses fully position-independent code and a global <b>offset</b> <b>table,</b> which trades off execution time against memory usage in favor of the latter.|$|R
40|$|Code-reuse attacks {{continue}} to evolve and remain a severe threat to modern software. Recent research has proposed a variety of defenses with differing security, effciency, and practicality characteristics. Whereas {{the majority of these}} solutions focus on specific code-reuse attack variants such as return-oriented programming (ROP), other attack variants that reuse whole functions, such as the classic return-into-libc, have received much less attention. Mitigating function-level code reuse is highly challenging because one needs to distinguish a legitimate call to a function from an illegitimate one. In fact, the recent counterfeit object-oriented programming (COOP) attack demonstrated that the majority of code-reuse defenses can be bypassed by reusing dynamically bound functions, i. e., functions that are accessed through global <b>offset</b> <b>tables</b> and virtual function tables, respectively. In this paper, we first significantly improve and simplify the COOP attack. Based on a strong adversarial model, we then present the design and implementation of a comprehensive code-reuse defense which is resilient against reuse of dynamically-bound functions. In particular, we introduce two novel defense techniques: (i) a practical technique to randomize the layout of tables containing code pointers resilient to memory disclosure and (ii) booby trap insertion to mitigate the threat of brute-force attacks iterating over the randomized tables. Booby traps serve the dual purpose of preventing fault-analysis side channels and ensuring that each table has suffciently many possible permutations. Our detailed evaluation demonstrates that our approach is secure, effective, and practical. We prevent realistic, COOP-style attacks against the Chromium web browser and report an average overhead of 1. 1 % on the SPEC CPU 2006 benchmarks...|$|R
50|$|The North River is {{a popular}} river for kayakers {{as well as for}} small boats. There are several {{locations}} to load into the water. One at Bridge Street in Norwell, Union Street in Marshfield, Chittenden Lane in Norwell, Driftway Park in Scituate and upriver on the Indian Head River a tributary to the North River in Hanover off Indian Head Drive. The North and South Rivers Watershed Association has a kayak guide and map explaining more about using the rivers. Tide is a major factor in determining timing of putting in and taking out. The North and South Rivers Watershed Association has an <b>offset</b> tide <b>table</b> for different locations along the river. Public parking is available at these locations.|$|R
40|$|This thesis {{undertakes}} {{the study}} of digital signal processing in the purpose of an optimized and dynamic approach to the valve leakage detection problem. Several field tests were analyzed to evaluate the system properties in search for valuable assets for the development process. Numerous analyses were conducted both in the time-domain and the frequency-domain. The importance of the findings varied, but led {{to a better understanding}} of the system characteristics and breakthroughs in regards to possible approaches to the problem. The shaft execution sequence was identified with the commissioning video. This sequence had a vital role together with knowledge about phase behavior when determining the pump state, which is crucial when identifying the valve that causes the leak. The program language platform was predefined by National Oilwell Varco as LabVIEW, with belonging National Instruments devices for the developed system. The leakage detection system developed in this thesis consists of two compact reconfigurable I/O modules (cRIO) and a desktop computer. A simulator was created, because the Quintuplex Pumps are located in Huston, Texas. In order to perform a pilot test that was close to real, the simulator reproduces measurements from the previous gathered field tests. One cRIO has the role of a simulator and the other performs system and leak evaluation from the measurements provided, before sending the results with serial communication. The desktop leakage program reads data from the serial port, displays the values as number indicators and trends over time and store the results as text logs. The result is a stable and dynamic leakage detection system that uses envelope detection and root mean square, in combination with the phase <b>offset</b> <b>table,</b> which with minor modification can be applied to a pump system with a different set of valves. </p...|$|R
40|$|The {{purpose of}} this study was to {{evaluate}} the impact of selected configuration parameters that govern multileaf collimator (MLC) transmission and rounded leaf offset in a commercial treatment planning system (TPS) (Pinnacle 3, Philips Medical Systems, Andover, MA, USA) on the accuracy of intensity-modulated radiation therapy (IMRT) dose calculation. The MLC leaf transmission factor was modified based on measurements made with ionization chambers. The table of parameters containing rounded-leaf-end offset values was modified by measuring the radiation field edge as a function of leaf bank position with an ionization chamber in a scanning water-tank dosimetry system and comparing the locations to those predicted by the TPS. The modified parameter values were validated by performing IMRT quality assurance (QA) measurements on 19 gantry-static IMRT plans. Planar dose measurements were performed with radiographic film and a diode array (MapCHECK 2) and compared to TPS calculated dose distributions using default and modified configuration parameters. Based on measurements, the leaf transmission factor was changed from a default value of 0. 001 to 0. 005. Surprisingly, this modification resulted in a small but statistically significant worsening of IMRT QA gamma-index passing rate, which revealed that the overall dosimetric accuracy of the TPS depends on multiple configuration parameters in a manner that is coupled and not intuitive because of the commissioning protocol used in our clinic. The rounded leaf <b>offset</b> <b>table</b> had little room for improvement, with the average difference between the default and modified offset values being − 0. 2 ± 0. 7 mm. While our results depend on the current clinical protocols, treatment unit and TPS used, the methodology used in this study is generally applicable. Different clinics could potentially obtain different results and improve their dosimetric accuracy using our approach...|$|R
40|$|A {{special system}} was {{fabricated}} to properly calibrate the wireless inclinometer, a new device that will measure the Orbiter s hang angle. The wireless inclinometer {{has a unique}} design and method of attachment to the Orbiter that will improve {{the accuracy of the}} measurements, as well as the safety and ease of the operation. The system properly calibrates the four attached inclinometers, in both the horizontal and vertical axes, without needing to remove any of the component parts. The Wireless Inclinometer Calibration System combines (1) a calibration fixture that emulates the point of attachment to the Orbiter in both the horizontal and vertical axes and the measurement surfaces, (2) an application-specific software program that accepts calibration data such as dates, zero functions, or <b>offsets</b> and <b>tables,</b> and (3) a wireless interface module that enables the wireless inclinometer to communicate with a calibration PC...|$|R
40|$|Dynamic sliding gap multileaf {{collimator}} (MLC) {{fields are}} used to model MLC properties within the treatment planning system (TPS) for dynamic treatments. One of the key MLC properties in the Eclipse TPS is the dosimetric leaf gap (DLG) and precise determination of this parameter is paramount to ensuring accurate dose delivery. In this investigation, we report on how the spacing between control points (CPs) for sliding gap fields impacts the dose delivery, MLC positioning accuracy, and measurement of the DLG. The central axis dose was measured for sliding gap MLC fields with gap widths ranging from 2 to 40 mm. It was found that for deliveries containing two CPs, the central axis dose was underestimated by the TPS for all gap widths, with the maximum difference being 8 % for a 2 mm gap field. For the same sliding gap fields containing 50 CPs, the measured dose was always within ± 2 % of the TPS dose. By directly measuring the MLC trajectories we show that this dose difference {{is due to a}} systematic MLC gap error for fields containing two CPs, and that the cause of this error is due to the leaf position <b>offset</b> <b>table</b> which is incorrectly applied when the spacing between CPs is too large. This MLC gap error resulted in an increase in the measured DLG of 0. 5 mm for both 6 MV and 10 MV, when using fields with 2 CPs compared to 50 CPs. Furthermore, this change in DLG was shown to decrease the mean TPS-calculated dose to the target volume by 2. 6 % for a clinical IMRT test plan. This work has shown that systematic MLC positioning errors occur for sliding gap MLC fields containing two CPs and that using these fields to model critical TPS parameters, such as the DLG, may result in clinically significant systematic dose calculation errors during subsequent dynamic MLC treatments...|$|R
40|$|Abstract—Square and square-root {{are widely}} used in digital signal {{processing}} and digital communication algorithms, and their efficient realizations are commonly required to reduce the hardware complexity. In the implementation point of view, approximate realizations are often desired {{if they do not}} degrade performance significantly. In this paper, we propose new linear approximations for the square and square-root functions. The traditional linear approximations need multipliers to calculate slope <b>offsets</b> and <b>tables</b> to store initial offset values and slope values, whereas the proposed approximations exploit the inherent properties of square-related functions to linearly interpolate with only simple operations, such as shift, concatenation and addition, which are usually supported in modern VLSI systems. Regardless of the bit-width of the number system, more importantly, the maximum relative errors of the proposed approximations are bounded to 6. 25 % and 3. 13 % for square and square-root functions, respectively. I...|$|R
50|$|During dental/orthopedic imaging, the CBCT scanner rotates {{around the}} patient's head, obtaining up to nearly 600 {{distinct}} images. For interventional radiology, {{the patient is}} positioned <b>offset</b> to the <b>table</b> so that the region of interest is centered {{in the field of}} view for the cone beam. A single 200 degree rotation over the region of interest acquires a volumetric data set. The scanning software collects the data and reconstructs it, producing what is termed a digital volume composed of three-dimensional voxels of anatomical data that can then be manipulated and visualized with specialized software.|$|R
30|$|The {{modified}} two-point NUC algorithm enabling pixel offset correction coefficients update by {{the proper}} usage of temporally averaged IRFPA response determined with closed shutter is proposed. The use of pixel response change {{determined by the}} shutter at the actual IRFPA operating conditions {{in relation to the}} reference ones provides good detector offset temporal drift compensation and optics shading effect removing as well. The performed tests with microbolometer IRFPA confirm a high efficiency of the proposed NUC algorithm that is easy to implement by hardware too. In case of the thermal imager operating within wide ambient temperature range, the several fixed gain and <b>offset</b> correction coefficients <b>tables</b> are required.|$|R
