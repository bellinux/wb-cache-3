9|100|Public
5000|$|Filling uninitialized memory with {{signaling}} NaNs {{would produce}} the invalid <b>operation</b> <b>exception</b> if {{the data is}} used before it is initialized ...|$|E
50|$|Additionally, {{operations}} like quantize when either operand is infinite, or {{when the}} result does not fit the destination format, will also signal invalid <b>operation</b> <b>exception.</b>|$|E
50|$|IUCV {{methods are}} invoked {{by using the}} B2F0 {{instruction}}. This instruction must be invoked while in virtual supervisor state (for example a guest supervisor) or an <b>Operation</b> <b>Exception</b> program interrupt is generated. The instruction is then interpreted by CP as an IUCV request.|$|E
40|$|The article {{examines}} recent cases on laytime and demurrage. Notice of Readiness cases are analysed under the following headings: arrival, actual readiness, contractual preconditions, waiver/estoppel and miscellaneous. Issues arising from discharge <b>operations,</b> <b>exception</b> clauses and presentation of documents claims are then described. ...|$|R
5000|$|Offensive air <b>operations,</b> {{with the}} <b>exception</b> of {{suppression}} of enemy air defenses (SEAD); ...|$|R
5000|$|Initially {{the surface}} and {{elevated}} railroad lines ran on steam power. Between 1893 and 1900 the lines were converted to electricity <b>operation.</b> An <b>exception</b> was the service on the Brooklyn Bridge. Trains were operated by cables from 1883 to 1896, when they were converted to electric power ...|$|R
5000|$|An {{operation}} exceptionPoOps {{is recognized}} when a program attempts to execute an instruction with an opcode {{that the computer}} does not implement. In particular, an <b>operation</b> <b>exception</b> is recognized when a program is written for an optional feature, e.g., floating point, that is not installed.|$|E
50|$|Floating-point {{operations}} {{other than}} ordered comparisons normally propagate a quiet NaN (qNaN). Most floating-point operations on a signaling NaN (sNaN) signal the invalid <b>operation</b> <b>exception,</b> the default exception action is then {{the same as}} for qNaN operands and they produce a qNaN if producing a floating-point result.|$|E
5000|$|Signaling NaNs, or sNaNs, {{are special}} forms of a NaN that when {{consumed}} by most operations should raise the invalid <b>operation</b> <b>exception</b> and then, if appropriate, be [...] "quieted" [...] into a qNaN that may then propagate. They {{were introduced in}} IEEE 754. There have been several ideas for how these might be used: ...|$|E
5000|$|Quiet NaNs, or qNaNs, do {{not raise}} any {{additional}} exceptions as they propagate through most <b>operations.</b> The <b>exceptions</b> are where the NaN cannot simply be passed through unchanged to the output, {{such as in}} format conversions or certain comparison operations (which do not [...] "expect" [...] a NaN input).|$|R
50|$|During {{the spill}} {{response}} operations, {{at the request}} of the Coast Guard, the Federal Aviation Administration (FAA) implemented a 900 sq mi temporary flight restriction zone over the operations area. Restrictions were to prevent civilian air traffic from interfering with aircraft assisting the response effort. All flights in the operations' area were prohibited except flight authorized by air traffic control; routine flights supporting offshore oil operations; federal, state, local and military flight operations supporting spill response; and air ambulance and law enforcement <b>operations.</b> <b>Exceptions</b> for these restrictions were granted on a case-by-case basis dependent on safety issues, operational requirements, weather conditions, and traffic volume. No flights, except aircraft conducting aerial chemical dispersing operations, or for landing and takeoff, were allowed below 1000 m. Notwithstanding restrictions, there were 800 to 1,000 flights per day during the operations.|$|R
50|$|Following {{privatization}} of JNR, the entire fleet {{was transferred to}} JR East <b>operation</b> with the <b>exception</b> of EF63 1 and 14 operated by JR Freight.|$|R
50|$|The System/360 was {{designed}} to separate the system state from the problem state. This provided a basic level of security and recoverability from programming errors. Problem (user) programs could not modify data or program storage associated with the system state. Addressing, data, or <b>operation</b> <b>exception</b> errors made the machine enter the system state through a controlled routine so the operating system could try to correct or terminate the program in error. Similarly, it could recover certain processor hardware errors through the machine check routines.|$|E
50|$|A {{comparison}} with a NaN always returns an unordered result even when comparing with itself. The comparison predicates are either signaling or non-signaling; the signaling versions signal the invalid <b>operation</b> <b>exception</b> for such comparisons. The equality and inequality predicates are non-signaling so x = x returning false {{can be used}} to test if x is a quiet NaN. The other standard comparison predicates are all signaling if they receive a NaN operand, the standard also provides non-signaling versions of these other predicates. The predicate isNaN(x) determines if a value is a NaN and never signals an exception, even if x is a signaling NaN.|$|E
40|$|This chapter {{describes}} the Nios ® II programming model, covering processor features at the assembly language level. Fully understanding {{the contents of}} this chapter requires prior knowledge of computer architecture, operating systems, virtual memory and memory management, software processes and process management, exception handling, and instruction sets. This chapter assumes you have a detailed understanding of these concepts and focuses on how these concepts are specifically implemented in the Nios II processor. Where possible, this chapter uses industry-standard terminology. This chapter discusses the following topics from the system programmer’s perspective: Operating modes, page 3 – 1 —Defines the relationships between executable code and memory. Memory management unit (MMU), page 3 – 3 —Describes virtual memory support for full-featured operating systems. Memory protection unit (MPU), page 3 – 8 —Describes memory protection without virtual memory management. Registers, page 3 – 10 —Describes the Nios II register sets. Working With the MPU, page 3 – 29 —Provides an overview of MPU initialization and <b>operation.</b> <b>Exception</b> processing, page 3 – 30 —Describes how the Nios II processor responds to exceptions. Memory and Peripheral Access, page 3 – 53 —Describes Nios II addressing. Instruction set categories, page 3 – 55 —Introduces the Nios II instruction set. 1 Because of the flexibility and capability range of the Nios II processor, this chapter covers topics that support a variety of operating systems and runtime environments. While reading, be aware that all sections might not apply to you. For example, {{if you are using}} a minimal system runtime environment, you can ignore the sections covering operating modes, the MMU, the MPU, or the control registers exclusively used by the MMU and MPU. f High-level software development tools are not discussed here. Refer to the Nios I...|$|E
40|$|During a {{manufacturing}} <b>operation,</b> <b>exceptions</b> may occur dynamically and unpredictably. Their occurrence {{may lead to}} the degradation of system performance or, in the worst case scenario, may interrupt the production process. The research proposes a multi-agent architecture for the capacity reconfiguration problem in a reconfigurable manufacturing system (RMS). A policy to manage capacity exchange among manufacturing lines based on due date performance is proposed. The Multi-Agent architecture was built in a simulation environment developed in ARENA® package and it is compared with a dedicated manufacturing and flexible manufacturing systems. The simulations are conducted in several demand scenarios to test the approach in a static and dynamic context. The simulation environment developed can support the planner to decide among the different manufac- turing systems by the evaluation of the manufacturing performance. The simulation results, in dynamic environ- ment, showed that the proposed approach leads to similar performance to flexible manufacturing system...|$|R
3000|$|... where ∥ is the {{concatenation}} <b>operation.</b> An <b>exception</b> is {{that when}} ESSID of the target AP is unknown, a predetermined WID {{will be sent to}} activate all APs and this is actually a broadcast WID. WuTx of a STA transmits a proper WID according to its present state. WuRcv of an AP should store all three WIDs so as not to miss any wake-up requests.|$|R
5000|$|H.R. 4284, {{a bill to}} {{prohibit}} livestock packers from owning, controlling, or feeding livestock {{to the extent that}} the producer no longer materially participates in such <b>operations,</b> with certain <b>exceptions,</b> introduced March 28, 2012 ...|$|R
50|$|Division of a non-zero number by zero {{sets the}} divide by zero flag, and an {{operation}} producing a NaN sets the invalid <b>operation</b> flag. An <b>exception</b> handler is called if enabled for the corresponding flag.|$|R
5000|$|... 1n 1990, most of Lighthouse Island was {{reportedly}} {{added to the}} conservation park after {{the conversion of the}} lighthouse to automatic <b>operation</b> with the <b>exception</b> of some land around the lighthouse and an associated helicopter landing site.|$|R
5000|$|The most {{effective}} Anarchist unit in Catalonia was the Durruti Column, {{led by the}} militant Buenaventura Durruti, it fought mainly in the Aragon front. It was the only anarchist unit which managed to gain respect from otherwise fiercely hostile political opponents. In a section of her memoirs which otherwise lambasts the anarchists, Communist militant Dolores Ibárruri states, [...] "The Civil war developed with minimal participation from the anarchists in its fundamental <b>operations.</b> One <b>exception</b> was Durruti...." ...|$|R
40|$|During a {{manufacturing}} <b>operation,</b> <b>exceptions</b> may occur dynamically and unpredictably. Their occurrence {{may lead to}} the degradation of system performance or, in the worst case scenario may interrupt the production process by causing errors in the schedule plan. This paper classifies three families of exceptions: (1) out-of-order events such as machine breakdowns, (2) operational out-of-ordinary events such as rush orders and (3) deteriorations of manufacturing resource performance such as reductions of machines' utilization. In all cases, in order to maintain an adequate level of system performance, it is necessary to detect exceptions, to diagnose them quickly and to recover them by taking corrective actions to avoid fault propagations. Decisions concerning how to deal with exceptions, i. e. which strategy to implement, depend on the manufacturing environment (dedicated line, flexible system, reconfigurable system or a mix of them) and the advantages arising from using a certain exception handling policy vary from one production system to another. The activity of reconfiguring manufacturing resources has been demonstrated to be a powerful operation strategy to handle machine breakdowns. This paper extends the concept of 'reconfiguration for exception handling' to other families of exceptions and proposes reconfiguration for their recovery. The reconfiguration process is handled by an agent-based control system that implements four negotiation processes among manufacturing resource agents...|$|R
50|$|Under the CF structure, Canadian Expeditionary Forces Command (CEFCOM) was {{the unified}} command that was {{responsible}} for all Canadian Forces (CF) international <b>operations,</b> with the <b>exception</b> of <b>operations</b> conducted solely by Canadian Special Operations Forces Command elements. CEFCOM missions included combat operations, humanitarian assistance and peacekeeping.|$|R
5000|$|Hundreds of {{kilometers}} of track {{are ready for}} 250 km/h <b>operation,</b> with the <b>exception</b> of signaling systems, catenary, and the trains themselves. A modified Regina test train, called [...] "the Green Train", has attained a maximum speed of 303 km/h, with regular service at 250 km/h planned.|$|R
40|$|Abstract. In {{traditional}} robot applications {{the successful}} {{execution of the}} robot task is ensured by reducing the uncertainty in the environment to an absolute minimum. Extending the applications of robots into less controlled environments requires that the robot {{be able to recognize}} and respond to unforeseen and non-nominal situations. Mobile robots or manipulators designed for a partially structured environment provide a prime example of such an application. In this paper we describe a robot architecture suitable for robot applications in incompletely known environments. It is based on concepts of elementary <b>operations</b> and <b>exception</b> handling developed at our institutes 1...|$|R
50|$|From {{the middle}} of October until the Halloween weekend, Playland {{is home to the}} Fright Nights Halloween event. During this time, haunted houses are brought in and setup in Playland and {{employed}} monsters are roaming the park scaring patrons. All of the parks amusement rides are in <b>operation</b> with the <b>exception</b> of the children's attractions.|$|R
50|$|In 2007 it demerged its {{international}} business {{and a new}} separate public company was formed called International Personal Finance. This company now holds all of Provident Financial's ex-non-UK <b>operations,</b> with the <b>exception</b> of the Republic of Ireland. It also sold the motor insurance business leaving Provident Financial to concentrate on UK only financial products.|$|R
25|$|Initially, the {{remaining}} local public bus operators {{were allowed to}} resume their operations to complement Rapid Penang. However, since then, these local companies have ceased <b>operations.</b> With the <b>exception</b> of Cityliner, which still operates {{only a handful of}} routes within Seberang Perai (mainland halve of Penang), Rapid Penang has become the main public bus provider in the state.|$|R
50|$|On September 18, 2010, Cruise West {{announced}} that it will cease <b>operations</b> with the <b>exception</b> of the Sept 22 Danube Cruise. Six ships were sold off to other companies: Spirit of Oceanus, Spirit of Endeavour, Spirit of '98, Spirit of Discovery, Spirit of Alaska, Spirit of Columbia the others are most likely still waiting to be sold.|$|R
50|$|CrossCountry's Class 221s operate {{alongside}} 220s on {{the routes}} inherited from Virgin CrossCountry. Since these routes are not cleared for tilting <b>operation</b> (with the <b>exception</b> of Wolverhampton to Stockport), in 2008 the tilting equipment was {{locked out of}} use and shortly afterwards was isolated altogether, replacing the hydraulic rams with fixed tie-bars. This change was made to improve reliability and reduce maintenance costs.|$|R
40|$|The {{database}} {{community has}} developed numerous tools and techniques for data curation and exploration, from declarative languages, to specialized techniques for data repair, and more. Yet, {{there is currently}} no consensus on how to best expose these powerful tools to an analyst in a simple, intuitive, and above all, flexible way. Thus, analysts continue to rely on tools such as spreadsheets, imperative languages, and notebook style programming environments like Jupyter for data curation. In this work, we explore the integration of spreadsheets, notebooks, and relational databases. We focus on a key advantage that both spreadsheets and imperative notebook environments have over classical relational databases: ease of exception. By relying on set-at-a-time operations, relational databases sacrifice the ability to easily define singleton <b>operations,</b> <b>exceptions</b> to a normal data processing workflow that affect query processing for a fixed set of explicitly targeted records. In comparison, a spreadsheet user can easily change the formula for just one cell, while a notebook user can add an imperative operation to her notebook that alters an output 'view'. We believe that enabling such idiosyncratic manual transformations in a classical relational database is critical for curation, as curation operations {{that are easy to}} declare for individual values can often be extremely challenging to generalize. We explore the challenges of enabling singletons in relational databases, propose a hybrid spreadsheet/relational notebook environment for data curation, and present our vision of Vizier, a system that exposes data curation through such an interface. Comment: Authors in alphabetical order; Preprint for HILDA 201...|$|R
50|$|Currently, few South and Latin American {{countries}} have coltan mining operations. Those that do {{are relatively small}} and largely unregulated <b>operations.</b> The main <b>exception</b> is Brazil, one of the world’s largest coltan producers and home to a large refining industry as well. Though combined Africa produces more, Brazil alone is the world’s largest single coltan producer, having produced 23% of the world’s coltan in 2011.|$|R
40|$|ABSTRACT: When {{hardware}} intemrpt priorities don't {{match the}} needs of software, operating system designers often just suffer in silence. '!Ve describe an alternative here: simulating the hardware priority interrupt queueing mechanism in software, but assigning the (software) intemrpt priorities as we wish. This was done on an AMD 29200 microconffoller [Advanced Micro Devices 19941 which has effectively only two intemrpt levels: the clock and ever¡hing else. An interrupr is an asynchronous exception or processor trap, typically generated by a peripheral device to notify the CPU of the completion of some VO <b>operation.</b> This <b>exception</b> typically produces a trap to supervisor (or kernel) mode at an address reserved for interrupts, and leaves some indication of what caused th...|$|R
5000|$|CP-40 was {{the first}} {{operating}} system that implemented complete virtualization, i.e. it provided a virtual machine environment supporting all aspects of its target computer system (a S/360-40), such that other S/360 operating systems could be installed, tested, and used {{as if on a}} stand-alone machine. CP-40 supported fourteen simultaneous virtual machines. Each virtual machine ran in [...] "problem state" [...] - privileged instructions such as I/O <b>operations</b> caused <b>exceptions,</b> which were then caught by the control program and simulated. Similarly, references to virtual memory locations not present in main memory cause page faults, which again were handled by control program rather than reflected to the virtual machine. Further details on this implementation are found in CP/CMS (architecture).|$|R
5000|$|The former Clydeside <b>operations,</b> {{with the}} <b>exception</b> {{of those on}} Bute, passed to a new company, Clydeside 2000 plc, on the {{privatisation}} of Western Scottish in October 1991. Clydeside's new management and employees took a 76% stake in the new company, with Luton & District purchasing the remainder. The company scaled down its Glasgow operations, and the depots at Largs, Thornliebank and Paisley closed in the following three years.|$|R
40|$|In {{this paper}} we {{consider}} the two major computational effects of states and exceptions, {{from the point of}} view of diagrammatic logics. We get a surprising result: there exists a symmetry between these two effects, based on the well-known categorical duality between products and coproducts. More precisely, the lookup and update operations for states are respectively dual to the throw and catch <b>operations</b> for <b>exceptions.</b> This symmetry is deeply hidden in the programming languages; in order to unveil it, we start from the monoidal equational logic and we add progressively the logical features which are necessary for dealing with either effect. This approach gives rise to a new point of view on states and exceptions, which bypasses the problems due to the non-algebraicity of handling exceptions...|$|R
