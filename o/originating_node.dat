38|164|Public
5000|$|Each message {{contains}} a two-bit [...] "hops" [...] field that is initialized to 3 by the <b>originating</b> <b>node</b> and decremented {{each time a}} node in the network repeats the message. Individual Insteon messages can also carry up to 14 bytes of arbitrary user data for custom applications.|$|E
50|$|The SPBM Service Identifier and Unicast Address TLV {{is used to}} {{introduce}} service group membership on the <b>originating</b> <b>node</b> and/or to advertise an additional B-MAC Unicast Address present on, or reachable by the node. The SPBV MAC Address TLV is the IS-IS sub-TLV used for advertisement of Group MAC Addresses in SPBV mode.|$|E
50|$|Destination address: {{the final}} {{destination}}; if the IPv6 packet doesn't contain a Routing header, TCP uses the destination {{address in the}} IPv6 header, otherwise, at the <b>originating</b> <b>node,</b> it uses the address in the last element of the Routing header, and, at the receiving node, it uses the destination address in the IPv6 header.|$|E
40|$|In {{this paper}} we {{introduce}} {{a new class of}} queueing networks called arrival first networks. We characterise its transition rates and derive the relationship between arrival rules, linear partial balance equations, and product form stationary distributions. This model is motivated by production systems operating under a kanban protocol. In contrast with the conventional departure first networks, where a transition is initiated by service completion of items at the <b>originating</b> <b>nodes</b> that are subsequently routed to the destination nodes (push system), in an arrival first network a transition is initiated by the destination nodes of the items and subsequently those items are processed at and removed from the <b>originating</b> <b>nodes</b> (pull system). These are similar to the push and pull systems in manufacturing systems...|$|R
40|$|Abstract—In {{networks}} with unstable links {{fragmentation of}} a message into smaller pieces before transmission can reduce message blocking due to disrupted transmission and increase the utilization of contact durations; thus increasing the connectivity of the network for large messages. In this paper, we formalize message fragmentation in such networks, investigate the impact of fragmentation on message forwarding over a single link, and discuss fragmentation strategies for <b>originating</b> <b>nodes.</b> I...|$|R
40|$|In this paper, we {{introduce}} {{a new class of}} queueing networks called arrival first networks. We characterise its transition rates and derive the relationship between arrival rules, linear partial balance equations, and product form stationary distributions. This model is motivated by production systems operating under a kanban protocol. In contrast with the conventional departure first networks, where a transition is initiated by service completion of items at the <b>originating</b> <b>nodes</b> that are subsequently routed to the destination nodes (push system), in an arrival first network a transition is initiated by the destination nodes of the items and subsequently those items are processed at and removed from the <b>originating</b> <b>nodes</b> (pull system). These are similar to the push and pull systems in manufacturing systems. Our characterisation provides necessary and sufficient conditions for the network to possess linear traffic equations, and sufficient conditions for the network to have a product form stationary distribution. We apply our results to networks operating under a kanban mechanism and characterise the rate at which items are pulled as well as the routing and blocking protocols that give rise to a product form stationary distribution...|$|R
50|$|Unlike in IPv4, IPv6 routers never {{fragment}} IPv6 packets. Packets {{exceeding the}} size of the maximum transmission unit of the destination link are dropped and this condition is signaled by a Packet too Big ICMPv6 type 2 message to the <b>originating</b> <b>node,</b> similarly to the IPv4 method when the Don't Fragment bit is set.|$|E
50|$|In {{point-to-point}} situations {{confidentiality and}} data integrity {{can also be}} enforced on Web services {{through the use of}} Transport Layer Security (TLS), for example, by sending messages over HTTPS. WS-Security, however, addresses the wider problem of maintaining integrity and confidentiality of messages until after a message is sent from the <b>originating</b> <b>node,</b> providing so-called end to end security.|$|E
5000|$|If the OFF-internal search {{function}} is used, search terms are untraceable to its originator, because the search request is forwarded {{to the next}} node and its results back to that node instead of directly to the originator. It is thus not possible to decide whether a node is the <b>originating</b> <b>node</b> or a node doing a search request on behalf of another node.|$|E
30|$|The {{link between}} the nodes 0 and 1 {{represents}} the virtual bottleneck link when running the AQM algorithms. The virtual bottleneck represents an access router. Data <b>originating</b> at the <b>nodes</b> 2 – 5 are received by the nodes Wless- 1 to Wless- 4 (through the WiFi base station) and data <b>originating</b> at <b>nodes</b> 6 – 9 are received by the nodes Wless- 5 to Wless- 8 (through the WiMax base station) and data <b>originating</b> at the <b>nodes</b> 10 – 13 are received by the nodes (User Equipment) UE- 1 to UE- 4 (through the UMTS base station).|$|R
3000|$|... b. In other words, {{a packet}} of size between 546.6 and 1500 that <b>originated</b> from <b>node</b> S and is destined to node 2 must {{traverse}} node 1.|$|R
30|$|In {{the second}} step, we {{consider}} two neighboring nodes, say nodes u and v, and assume node v has a smaller observed infection eccentricity than node u. Based on Lemma 1, we will {{prove that the}} optimal sample path associated with node v occurs with a higher probability than that of node u. The key idea is to construct a sample path <b>originated</b> from <b>node</b> v based on the optimal sample path <b>originated</b> from <b>node</b> u and show that it occurs with a higher probability. This result will be proved in Lemma 2 in the ‘Proofs’ section.|$|R
50|$|If {{the central}} node is passive, the <b>originating</b> <b>node</b> {{must be able}} to {{tolerate}} the reception of an echo of its own transmission, delayed by the two-way round trip transmission time (i.e. to and from the central node) plus any delay generated in the central node. An active star network has an active central node that usually has the means to prevent echo-related problems.|$|E
50|$|The SCCP Class 0 {{protocol}} class {{is the most}} basic of the SCCP {{protocol class}}es. Network Service Data Units passed by higher layers to the SCCP in the <b>originating</b> <b>node</b> are delivered by the SCCP to higher layers in the destination node. They are transferred independently of each other. Therefore, they may be delivered to the SCCP user out-of-sequence. Thus, this protocol class corresponds to a pure connectionless network service. As a connectionless protocol, no network connection is established between the sender and the receiver.|$|E
50|$|Most {{peer-to-peer}} networks do {{not have}} distributed data stores in that the user's data is only available when their node is on the network. However, this distinction is somewhat blurred in a system such as BitTorrent, where {{it is possible for}} the <b>originating</b> <b>node</b> to go offline but the content to continue to be served. Still, this is only the case for individual files requested by the redistributors, as contrasted with a network such as Freenet where all computers are made available to serve all files.|$|E
3000|$|... {{since it}} {{forwards}} flows <b>originating</b> from <b>nodes</b> 1 to 4 {{and the flow}} generated by node 5 itself. Obviously, the bottleneck collision domain consists of links (6, 7), (7, 8), (8, 9), and (9, 10), and hence limits the throughput [...]...|$|R
5000|$|... #Caption: In this example, {{spreading}} activation <b>originated</b> at <b>node</b> 1 {{which has an}} initial activation value of 1.0 (100%). Each link has the same weight value of 0.9. The decay factor was 0.85. Four cycles of {{spreading activation}} have occurred. Color hue and saturation indicate different activation values.|$|R
40|$|One goal {{of locally}} {{distributed}} systems is to facilitate resource sharing. Most current locally distributed systems, however, share primarily data, data storage devices, and output devices; {{there is little}} sharing of computational resourees. Load shoring {{is the process of}} sharing computational resources by transparently distributing the system workload. System performance can be improved by transferring work from nodes that are heavily loaded to nodes that are lightly loaded. Load sharing policies may be either static or adaptive. Static policies use only information about the average behavior of the system; transfer decisions are independent of the actual current system state. Static policies may be either deterministic (e. g., “transfer all compilations <b>originating</b> at <b>node</b> A to server B”) or probabilistic (e. g., “transfer half of the compilations <b>originating</b> at <b>node</b> A to server B, and process the other half locally”). Numerou...|$|R
5000|$|The connection-oriented {{protocol}} classes (protocol classes 2 and 3) {{provide the}} means to set up signalling connections in order to exchange a number of related NSDUs. The connection-oriented protocol classes also provide a segmenting and reassembling capability. If an NSDU is longer than 255 octets, it is split into multiple segments at the <b>originating</b> <b>node,</b> prior to transfer in the [...] "data" [...] field of DT messages. Each segment is {{less than or equal}} to 255 octets. At the destination node, the NSDU is reassembled.|$|E
50|$|The {{source address}} {{is the one}} in the IPv6 header. The {{destination}} address is the final destination; if the IPv6 packet does not contain a Routing header, that will be the destination address in the IPv6 header; otherwise, at the <b>originating</b> <b>node,</b> it will be the address in the last element of the Routing header, and, at the receiving node, it will be the destination address in the IPv6 header. The value of the Next Header field is the protocol value for UDP: 17. The UDP length field is the length of the UDP header and data.|$|E
50|$|The star {{topology}} reduces {{the impact of}} a line failure by connecting all of the systems to a central node. When applied to a bus-based network, this central hub re-broadcasts all transmissions received from any peripheral node to all peripheral nodes on the network, sometimes including the <b>originating</b> <b>node.</b> All peripheral nodes may thus communicate with all others by transmitting to, and receiving from, the central node only. The failure of a transmission line linking any peripheral node to the central node will result in the isolation of that peripheral node from all others, {{but the rest of the}} systems will be unaffected.|$|E
3000|$|... {{that will}} {{eventually}} get infected when the epidemic is <b>originated</b> at the <b>node</b> i. Hence, the ground truth ranking, that is referring to the SIR model, is produced by the M [...]...|$|R
40|$|Abstract — A search {{algorithm}} {{for stopping}} sets in a Tanner graph is proposed for designing good low-density parity-check (LDPC) codes. By applying the belief-propagation algorithm with messages containing the information of <b>originated</b> variable <b>nodes</b> and their connected edges, the stopping sets can be detected. Furthermore, a code design method using the algorithm is presented and {{the performances of}} the designed code over several channels are shown. I...|$|R
3000|$|T levels where m {{branches}} <b>originate</b> {{from each}} <b>node.</b> The whole tree search {{can be realized}} in two stages: full expansion (FE) and single expansion (SE) search stages, which can be summarized as follows: [...]...|$|R
5000|$|The {{connectionless}} protocol classes {{provide the}} capabilities needed to transfer one Network Service Data Unit (NSDU) in the [...] "data" [...] field of an XUDT, LUDT or UDT message. When one connectionless message {{is not sufficient}} to convey the user data contained in one NSDU, a segmenting/reassembly function for protocol classes 0 and 1 is provided. In this case, the SCCP at the <b>originating</b> <b>node</b> or in a relay node provides segmentation of the information into multiple segments prior to transfer in the [...] "data" [...] field of XUDT (or as a network option LUDT) messages. At the destination node, the NSDU is reassembled.|$|E
5000|$|At {{the network}} layer EARN {{was based on}} a [...] "store-and-forward" [...] technology. In a [...] "store-and-forward" [...] network {{information}} is sent to an intermediate node where it is kept and sent as soon as possible to the next node on the path to its final destination. The intermediate node verifies the integrity of the message before forwarding it. Each time the intermediate node confirms the receipt of the data the <b>originating</b> <b>node</b> deletes it.The EARN [...] "store-and-forward" [...] system was originally based on IBM's technology and used the Remote Spooling Communications Subsystem (RSCS) and NJE/NJI protocols on the IBM Virtual Machine (VM) mainframe operating systems, and JES2 (and later JES3, Job Entry Subsystem) on IBM MVS mainframe operating systems.|$|E
50|$|The star {{topology}} reduces {{the probability of}} a network failure by connecting all of the peripheral nodes (computers, etc.) to a central node. When the physical {{star topology}} is applied to a logical bus network such as Ethernet, this central node (traditionally a hub) rebroadcasts all transmissions received from any peripheral node to all peripheral nodes on the network, sometimes including the <b>originating</b> <b>node.</b> All peripheral nodes may thus communicate with all others by transmitting to, and receiving from, the central node only. The failure of a transmission line linking any peripheral node to the central node will result in the isolation of that peripheral node from all others, but the remaining peripheral nodes will be unaffected. However, the disadvantage is that the failure of the central node will cause the failure of all of the peripheral nodes.|$|E
30|$|All the p/ 4 -oriented {{paths that}} <b>originate</b> from the <b>nodes</b> lying along the outer column of the {{quadrant}} and that reach the FC through either the central row or the central column (dashed arrows in Figure 5).|$|R
50|$|The Routing Label {{indicates}} the Point Codes of the <b>originating</b> and destination <b>nodes</b> in the network; {{it also includes}} the Signalling Link Selection field {{that is used to}} select between the multiple routes an MSU could take between two nodes.|$|R
40|$|Abstract—Surveillance using {{unmanned}} aerial vehicles (UAVs) is {{an important}} application in tactical networks. Such networks are challenged by frequent link and route breaks due to highly dynamic network topologies. This challenge can be addressed through robust routing algorithms and protocols. Depending on the surveillance area to be covered and the transmission range of the transmitters in the UAVs, several of them {{may have to be}} deployed, requiring solutions that are scalable. The use of directional antennas mitigates the challenges due to limited bandwidth, but requires a scheduling algorithm to provide conflict free schedules to transmitting nodes. In this article we introduce a new approach, which uses a single algorithm (i) that facilitates multi hop overlapped cluster formations to address scalability and data aggregation; (ii) provides robust multiple routes from data <b>originating</b> <b>nodes</b> to data aggregation node and (iii) aids in performing distributed scheduling using a Time Division Multiple Access (TDMA) protocol. The integrated solution was modeled in Opnet and evaluated for success rate in packet delivery and average end to end packet delivery latency. High success rates combined with low latencies in the proposed solution validates the use of the approach for surveillance applications...|$|R
30|$|Delay: It is {{the average}} amount of time taken by a packet to travel from the <b>originating</b> <b>node</b> until it is {{successfully}} received at the destination node.|$|E
40|$|Because of {{cost and}} {{physical}} limitations {{there is an}} interest in broadcast networks with a xed maximum number of communication links for each node, [BHLP,LP,DFF]. In this note we show that given an arbitrary bounded-degree network, determining the minimum broadcast time for any <b>originating</b> <b>node</b> is NP...|$|E
40|$|Broadcasting {{concerns}} {{the dissemination of}} a message originating at one node of a network to all other nodes. This task is accomplished by placing a series of calls over the communication lines of the network between neighboring nodes, where each call requires a unit of time and a call can involve only two nodes. We show that for bounded-degree networks determining the minimum broadcast time from an <b>originating</b> <b>node</b> remains NP-complete. Comment: 6 page...|$|E
40|$|IEEE 802. 11 based {{wireless}} mesh networks can exhibit severe fairness {{problem by}} distributing throughput among different flows <b>originated</b> from different <b>nodes.</b> Congestion control, Throughput, Fairness are the important factors {{to be considered}} in any wireless network. Flows <b>originating</b> from <b>nodes</b> that directly communicate with the gateway get higher throughput. On the other hand, flows originating from two or more hops away get very little throughput. For this reason a distributed fair scheduling is an ideal candidate for fair utilization of gateway’s resources (i. e., bandwidth, airtime) and thereby achieving fairness among contending flows in WMNs. There are numerous solution for aforementioned factors in wireless mesh network. We figured out some problems of few existing solutions and integrated to give the solution for those problems. We considered neighborhood phenomenon, airtime allocation and elastic rate control to design a novel technique to achieve fair rate control in wireless mesh network. And finally we introduce distributed fair scheduling to get fairness in mesh network...|$|R
30|$|Step 3. At this step, {{the core}} node has {{received}} the contribution of all the sensors. For each message, it verifies the integrity and {{the authenticity of the}} <b>originating</b> sensor <b>node</b> using the common public key π. When verifying the identity of the sensor nodes, only the trusted sensors will contribute to the elaboration of the group key. If an intruder tries to send a contribution, it will not be authenticated and then its contribution will not be considered and it will be rejected from the group.|$|R
40|$|The ObjectRank system applies authority-based ranking to keyword {{search in}} {{databases}} modeled as labeled graphs. Conceptually, authority <b>originates</b> at the <b>nodes</b> (objects) containing the keywords and flows to objects {{according to their}} semantic connections. Each node is ranked according to its authority {{with respect to the}} particula...|$|R
