1|3|Public
50|$|Also, {{under the}} Department for Transport’s Access for All scheme - a {{disabled}} access fund to create <b>obstacle-free</b> <b>routes</b> to, from and between trains - Worcester Park station was made accessible to wheelchair users {{and those with}} pushchairs etc. on both platforms, {{with the construction of}} a new footbridge containing a two lifts, one at each end.|$|E
5000|$|Although mostly diurnal [...] {{and very}} active, they are {{difficult}} to trap and very seldom seen; elephant shrews are wary, well camouflaged, and adept at dashing away from threats. Several species make a series of cleared pathways through the undergrowth and spend their day patrolling them for insect life. If disturbed, the pathway provides an <b>obstacle-free</b> escape <b>route.</b>|$|R
40|$|Ethnic {{violence}} {{killed at}} least a thousand Muslims in Gujarat (western India) in 2002. The role of political elites in orchestrating attacks against Muslims for electoral gains was a conspicuous characteristic of the violence. Yet, as this article demonstrates, the political thesis was insufficient in explaining why neighborhoods, often contiguous, experienced different levels of violence. Alternative explanations, such as interethnic contact, were also found wanting. A unique research design allowing the comparison of neighborhoods in the same electoral ward {{in the city of}} Ahmedabad demonstrates the critical role of ecology in explaining microspatial variation in the violence. Even when attacks were politically orchestrated, attackers still acted with some regard to self-preservation in selecting which location to attack. Observational and testimonial evidence based on 22 months of ethnographic fieldwork reveals the importance of two ecological factors: the built environment and the population distribution of potential targets. Together, the two factors heavily shaped crowds’ decisions to attack or escape, thus influencing the subsequent success or failure of the attack. Muslims were most vulnerable where they were concentrated in small numbers and on routes that afforded the attackers obstacle-free entry and retreat. Where the potential targets had an <b>obstacle-free</b> escape <b>route</b> to a large concentration of fellow Muslims, the outcome was looting and arson rather than killing. By implication, the course of politically orchestrated violence was complicated by the ecology of the targeted space...|$|R
40|$|Abstract The {{archipelago}} of Finland {{is especially}} {{difficult for a}} skipper. The huge amount of islands, islets, channels and shallow waters may be treacherous even for an experienced skipper. UpWind is a navigational software application intended especially for a sailboat skipper. It has been developed in the University of Oulu {{in a series of}} student projects, including the algorithms for the route planning. Long-term algorithm calculates the route along the major channel system on a chart. Short-term algorithm calculates the set of laylines, both for starboard and board side of the sailboat, that shows the optimal route to sail in the current wind conditions. The data used in the route calculation is stored in a separate database on a separate machine. The data is either read to random access memory (long-term planning) or it is queried on runtime (short-term planning). The algorithms have to run in a given time frame. They must not block the user interface nor cause delay in calculations that might lead to hazardous situations while sailing. Also, the resources on board are scarce, especially electricity. Even the smallest optimizations on electricity consumption have been considered important. A literature study of the current methodologies used in evaluating software performance was carried out in order to find out if those methodologies or a combination of them could be utilised in evaluating the algorithms. The focus of algorithm evaluation was in finding out their time-complexity properties. It turned out that most of the current performance engineering methods, like the methods based on queuing theory, do not serve very well to the evaluation of the algorithms. Those algorithms do not implement any queuing phenomena nor the current performance engineering methods scale down well to algorithm level. Most of the methods are aimed to aid in designing and evaluating of the performance in the early stage of the development. In UpWind application the algorithms have already been implemented. The algorithm analysis scales down very well to the implemented algorithms. Algorithm analysis together with running time measurements of the algorithms and their analysis were selected as the evaluation method. The algorithm analysis results revealed that the growth-rate is either n or n 2 for all algorithms and sub algorithms. The running times of the algorithms are thus fast and no bottlenecks were found in them. The measurements and the analysis of the measurement results revealed one severe bottleneck in the short-term route planning algorithm. A major portion of the total calculation time is consumed by database queries when checking for obstacles in between the sailboat and the destination checkpoint. The measurements result analysis combined with the results of algorithm analysis of the long-term route planning showed that the calculation speed is sufficient for current size map. If there is intention to use bigger maps, it is suggested that the algorithm is moved to its own thread, or otherwise indicate the ongoing route calculation to the user. The proposed improvement to the short-term planning is to fetch a larger amount of obstacle data on demand. This trapezoid area of obstacles is limited by the master turning points, boat position and destination checkpoint. An algorithm for checking the <b>obstacle-free</b> <b>route</b> calculation should be developed in future. It was suggested that the calculation should only be done when wind conditions change more than a given wind angle or the skipper gets too far from the selected short-term route. It was also suggested that only one of the sides of the short-term route should be calculated if the skipper starts to follow either route. A method and limits, for determing when the wind change or distance between boat and short-term route is enough to trigger a new calculation, should also be developed...|$|R

