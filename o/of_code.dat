10000|10000|Public
5|$|SAS macros are pieces <b>of</b> <b>code</b> or {{variables}} that are coded once and referenced to perform repetitive tasks.|$|E
5|$|The if statement, which conditionally executes a block <b>of</b> <b>code,</b> {{along with}} else and elif (a {{contraction}} of else-if).|$|E
5|$|The while statement, which executes a block <b>of</b> <b>code</b> {{as long as}} its {{condition}} is true.|$|E
40|$|International audienceA {{generalization}} <b>of</b> <b>codes</b> on regular bipartite graphs {{is given}} by a family <b>of</b> <b>codes</b> on hypergraphs. We derive the average weight distribution and estimate the minimum distance <b>of</b> <b>codes</b> in the random ensemble <b>of</b> hypergraph <b>codes.</b> We also propose an iterative decoding algorithm <b>of</b> hypergraph <b>codes</b> that corrects {{a larger proportion of}} errors than known previously for this code family...|$|R
5000|$|... <b>of</b> R-nary {{triangular}} <b>codes.</b> Multiplication <b>of</b> a <b>code</b> [...] by -digit <b>of</b> another <b>code</b> [...] {{consists in}} -shift <b>of</b> the <b>code</b> , i.e. its shift k columns left and m rows up. Multiplication <b>of</b> <b>codes</b> [...] and [...] consists in subsequent -shifts <b>of</b> the <b>code</b> [...] and addition <b>of</b> the shifted <b>code</b> [...] with the part-product (as in the positional <b>codes</b> <b>of</b> numbers).|$|R
40|$|A <b>code</b> <b>of</b> {{the natural}} numbers is a uniquely-decodable binary <b>code</b> <b>of</b> the natural numbers with non-decreasing {{codeword}} lengths, which satisfies Kraft’s inequality tightly. We define a natural partial {{order on the}} set <b>of</b> <b>codes,</b> and show how to construct effectively a code better than a given sequence <b>of</b> <b>codes,</b> in a certain precise sense. As an application, we prove {{that the existence of}} a scale <b>of</b> <b>codes</b> (a well-ordered set <b>of</b> <b>codes</b> which contains a code better than any given <b>code)</b> is independent <b>of</b> ZFC. ...|$|R
5|$|A C# {{namespace}} {{provides the}} same level <b>of</b> <b>code</b> isolation as a Java package or a C++ , with very similar rules and features to a package.|$|E
5|$|In 2007 DragonFly BSD {{received}} a new device file system (devfs), which dynamically adds and removes device nodes, allows accessing devices by connection paths, recognises drives by serial numbers and removes {{the need for}} pre-populated /dev file system hierarchy. It was implemented as a Google Summer <b>of</b> <b>Code</b> 2009 project.|$|E
5|$|In August 2012, she {{was part}} of the judging panel at the Festival <b>of</b> <b>Code,</b> held at the {{culmination}} of Young Rewired State 2012.|$|E
25|$|He {{also made}} use <b>of</b> the <b>Code</b> <b>of</b> Louisiana, {{in which he}} based for the {{creation}} of 52 articles, <b>of</b> the Albertine <b>Code</b> for the Sardonic States, of the legislative Russian consolidation, the <b>Code</b> <b>of</b> Parma, the <b>Code</b> <b>of</b> Two Sicilies, the General Prussian <b>Code</b> <b>of</b> 1874, the Austrian <b>Code</b> <b>of</b> 1811, the <b>Code</b> <b>of</b> New York State and the Italian <b>Code</b> <b>of</b> 1865.|$|R
40|$|AbstractThe {{main results}} of the {{combinatorial}} theory <b>of</b> maximal biprefix <b>codes</b> <b>of</b> words (Césari, Perrin, Schützenberger) are extended to the <b>codes</b> <b>of</b> paths in a graph in this paper: degree and decoding of double-infinite paths, finiteness <b>of</b> <b>codes</b> <b>of</b> a given degree, the Césari-Schützenberger algorithm, derivation and integration <b>of</b> <b>codes</b> will be discussed...|$|R
3000|$|... (14). When {{the coding}} {{opportunity}} q(m)[*]=[*] 0, the service rate <b>of</b> <b>coded</b> ALOHA {{is equal to}} that of ALOHA, μnc[*]=[*]μ. However, when the coding opportunity q(m)[*]=[*] 1, the service rate <b>of</b> <b>coded</b> ALOHA is μnc[*]=[*] 2 μ. Because 0 [*]≤[*]q(m)[*]≤[*] 1, the service rate <b>of</b> <b>coded</b> ALOHA exists in the interval of μ[*]≤[*]μnc[*]≤[*] 2 μ. The higher service rate <b>of</b> <b>coded</b> ALOHA can result in fewer queued packets in the center node, Enc[m][*]≤[*]E[m], and less delay, Dnc[*]≤[*]D. □ [...]...|$|R
5|$|Junkers Ju 87 R-2 Werk Nr. 0875709 {{is owned}} by Paul Allen's Flying Heritage Collection (FHC) and is {{believed}} to be under a long-term restoration to fly. It served bearing the Stammkennzeichen <b>of</b> <b>Code,</b> LI+KU, Werknummer 857509, from 1./St.G.5, and was recovered to the United Kingdom in 1998.|$|E
5|$|Other {{responses}} were detailed {{analyses of the}} effect COBOL-80 would have on their systems; conversion costs were predicted {{to be at least}} 50 cents per line <b>of</b> <b>code.</b> Fewer than a dozen of the {{responses were}} in favor of the proposed standard.|$|E
5|$|Starting in 2006 the ReactOS project {{participated in}} several Google Summers <b>of</b> <b>Code.</b> For example, in the GSoC 2011 ReactOS mentored a student project which {{integrated}} lwIP into the network stack. ReactOS has to date participated {{four times in}} GSoC: 2006, 2011, 2016, and 2017.|$|E
40|$|The aim of {{this thesis}} {{is to develop a}} general {{mechanism}} for the construction <b>of</b> <b>codes</b> and to extract general properties <b>of</b> classes <b>of</b> <b>codes.</b> This mechanism makes it unnecessary to study various classes <b>of</b> <b>codes</b> separately [...] at least to some extent [...] by different constructions and properties.;To achieve this goal, the mechanism of characterizing classes of languages by binary relations is studied. Some general properties related to binary relations and languages are obtained. Moreover, three new classes <b>of</b> <b>codes,</b> n-shuffle codes, solid codes, and intercodes are constructed. Solid codes and intercodes have the synchronous decoding property which is very useful in the design of circuits of coders and decoders.;The studies <b>of</b> <b>codes,</b> n-codes, and intercodes indicate that these three classes <b>of</b> <b>codes</b> cannot be characterized by binary relations. We introduce a more general mechanism, that is, to characterize classes of languages by finitary relations. This mechanism can be used to characterize more classes of languages, such as the classes of n-codes and intercodes. Sometimes, it is difficult to show inclusion relations between classes <b>of</b> <b>codes</b> and hierarchy properties <b>of</b> classes <b>of</b> <b>codes.</b> Results derived in this thesis provide a mechanism which can simplify this task...|$|R
40|$|Certain and {{analysed}} <b>of</b> ethics <b>code</b> {{in professional}} activity {{of social workers}} and feature of the phenomenon culture <b>of</b> <b>codes.</b> Basic koncepti, ethics values and principles culture <b>of</b> <b>codes,</b> is also indicated in social work of Ukraine. ?????????? ? ???????????????? ????? ?????????? ??????? ? ???????????????? ???????????? ?????????? ?????????? ? ??????????? ??????? ?????????? ????????. ????? ??????? ???????? ????????, ????????? ???????? ? ???????? ?????????? ????????, ? ?????????? ?????? ???????...|$|R
50|$|The term {{algebraic}} {{coding theory}} denotes the sub-field <b>of</b> <b>coding</b> theory where the properties <b>of</b> <b>codes</b> {{are expressed in}} algebraic terms and then further researched.|$|R
5|$|The class statement, which executes a block <b>of</b> <b>code</b> and {{attaches}} {{its local}} namespace to a class, {{for use in}} object-oriented programming.|$|E
5|$|The example {{at right}} shows a {{potential}} implementation of an aspect which logs the entry and exit of all methods. Without an aspect weaver, this feature would necessitate duplication <b>of</b> <b>code</b> {{in the class}} for every method. Instead, the entry and exit code is defined solely within the aspect.|$|E
5|$|The with {{statement}} (from Python 2.5), which encloses a {{code block}} within a context manager (for example, acquiring a lock before the block <b>of</b> <b>code</b> is run and releasing the lock afterwards, or opening a file and then closing it), allowing Resource Acquisition Is Initialization (RAII)-like behavior.|$|E
50|$|Tree <b>of</b> <b>Codes</b> - Jonathan Safran Foer did a book-length erasure of The Street of Crocodiles by Bruno Schulz {{which he}} {{entitled}} Tree <b>of</b> <b>Codes.</b>|$|R
3000|$|... c) Constant comparison: {{the pilot}} study {{generated}} an initial set <b>of</b> 39 <b>codes.</b> These were organised into a hierarchy <b>of</b> <b>codes</b> based on emerging relations between concepts. Thus structured, the start-up list <b>of</b> <b>codes</b> was used to <b>code</b> the rest <b>of</b> the interviews. Each interview transcript was analysed line by line with the list <b>of</b> <b>codes.</b> A code was applied if it reflected a concept in a paragraph, i.e., microanalysis [34].|$|R
40|$|The {{introduction}} <b>of</b> <b>codes</b> <b>of</b> conduct {{can be seen}} as {{an expression}} of corporate social responsibility, but also as rule-setting behaviour - attempts to help fill some of the existing international instutitional voids. To shed light on these aspects and the (potential) effectiveness <b>of</b> <b>codes,</b> this article examines trends in the adoption and contents <b>of</b> <b>codes</b> <b>of</b> conduct introduced to regulate the behaviour of international business. Using the evidence obtained over the years, it presents an overview of the state of current knowledge on international social responsibility codes, and indicates areas for further research, management and policy attention. It also deals with the definition and types <b>of</b> <b>codes,</b> the background and dynamics <b>of</b> the <b>code</b> 'movement', the contents <b>of</b> <b>codes</b> and their compliance likelihood, issues regarding implementation and effectiveness, and 'next steps' that can be taken to obtain further insight...|$|R
5|$|There {{are also}} many {{examples}} <b>of</b> <b>code</b> written purely for entertainment on the CPAN. Lingua::Romana::Perligata, for example, allows writing programs in Latin. Upon execution {{of such a}} program, the module translates its source code into regular Perl and runs it.|$|E
5|$|According to {{developer}} Matthew Dillon, {{progress is}} being made to provide both device input/output (I/O) and virtual file system (VFS) messaging capabilities that will enable the remainder of the project goals to be met. The new infrastructure will allow many parts of the kernel to be migrated out into userspace; here they will be more easily debugged as they will be smaller, isolated programs, instead of being small parts entwined in a larger chunk <b>of</b> <b>code.</b> Additionally, the migration of select kernel code into userspace has the benefit of making the system more robust; if a userspace driver crashes, it will not crash the kernel.|$|E
5|$|Aspect weavers take {{instructions}} {{known as}} advice specified {{through the use}} of pointcuts and join points, special segments <b>of</b> <b>code</b> that indicate what methods should be handled by aspect code. The implementation of the aspect then specifies whether the related code should be added before, after, or throughout the related methods. By doing this, aspect weavers improve modularity, keeping code in one place that would otherwise have been interspersed throughout various, unrelated classes.|$|E
5000|$|Partial {{omission}} (部分省略) [...] - [...] {{when the}} number <b>of</b> <b>codes</b> in a complete decomposition would exceed the permitted number <b>of</b> <b>codes,</b> the extra codes are ignored ...|$|R
40|$|This {{research}} explores {{methods to}} improve <b>code</b> <b>of</b> conduct effectiveness. Misconduct {{is a common}} phenomenon in the business environment, {{even in the face}} of increased regulation, and the adoption <b>of</b> <b>codes</b> <b>of</b> conduct by organisations. This impacts negatively on organisations’ reputations, results in financial loss, and has a negative impact on the sustainability of businesses. While researchers suggest that <b>codes</b> <b>of</b> conduct should reduce misconduct and improve the ethical culture of organisations, mixed research results suggest <b>codes</b> <b>of</b> conduct are not always effective. While research into <b>code</b> <b>of</b> conduct effectiveness proliferates, seldom does such research take a holistic approach to understanding effectiveness <b>of</b> <b>codes</b> <b>of</b> conduct. Models proposed to better research <b>code</b> <b>of</b> conduct effectiveness, such as Kaptein and Schwartz’ (2008) integrated research model, do not present guidelines for better developing and implementing <b>codes</b> <b>of</b> conduct. Therefore the primary research objective was to develop a benchmarking framework which could provide insight into factors that could influence <b>code</b> <b>of</b> conduct effectiveness, and provide guidelines on how these factors should be influenced and accounted for to improve <b>code</b> <b>of</b> conduct effectiveness. Content <b>of</b> <b>codes</b> <b>of</b> conduct can play an important part in <b>code</b> <b>of</b> conduct effectiveness, yet they vary enormously in terms of provisions, language, tone, style, design. Some are directional or rules based, others aspirational, or values based. Bettcher, Deshpandé, Margolis and Paine (2005) developed the Global Business Standards Codex that depicted the most commonly found provisions in organisations they surveyed. A secondary research objective was therefore to apply this codex to the evaluation <b>of</b> participating organisations <b>codes</b> <b>of</b> conduct, and in so doing, evaluate the suitability of the codex as a benchmarking framework for the content <b>of</b> the <b>code</b> <b>of</b> conduct. Adopting a grounded theory methodological approach and <b>code</b> <b>of</b> conduct content analysis, the researcher investigated nine of South Africa’s largest multinational organisations in order to understand the factors influencing their <b>code</b> <b>of</b> conduct effectiveness better. The research makes a significant contribution to the understanding <b>of</b> <b>codes</b> <b>of</b> conduct, their effectiveness, and provides practical guidelines on improving their effectiveness. This is achieved by 1) presenting nine formulae for an effective <b>code</b> <b>of</b> conduct; 2) detailing a multi-dimensional model that can facilitate the effectiveness <b>of</b> <b>codes</b> <b>of</b> conduct; and 3) improving the codex developed by Bettcher et al. (2005) on the content <b>of</b> <b>codes</b> <b>of</b> conduct with the proposed <b>code</b> <b>of</b> conduct architecture criterion...|$|R
40|$|We {{consider}} closure {{property of}} some classes <b>of</b> <b>codes</b> under composition and syntactic congruences <b>of</b> some <b>codes.</b> A code X is a strongly infix (outfix) code if X is an infix (outfix) code and any catenation of two words in X has no proper (infix) outfix in X, which {{is neither a}} left factor nor a right factor. We show that the class <b>of</b> strongly outfix <b>codes</b> is closed under composition, and as the dual result, that the property to be strongly outfix is inherited by a component of a decomposition. Finally, we show stronger properties for syntactic congruences <b>of</b> strongly infix <b>codes</b> than for those <b>of</b> infix <b>codes.</b> Keywords: prefix code, suffix code, infix <b>code,</b> composition <b>of</b> <b>codes,</b> syntactic congruence Composition and Syntactic Monoids <b>of</b> some <b>Codes</b> 3 1 Introduction The theory <b>of</b> <b>codes</b> has been studied in algebraic direction in connection to automata theory, combinatorics on words, formal languages, and semigroup theory. Many classes <b>of</b> <b>codes</b> have been defined and studied ([1, 2]). Amo [...] ...|$|R
5|$|Because {{of major}} {{internal}} changes in phpng, it must receive a new {{major version number}} of PHP, rather than a minor PHP 5 release, according to PHP's release process. Major versions of PHP are allowed to break backward-compatibility <b>of</b> <b>code</b> and therefore PHP 7 presented an opportunity for other improvements beyond phpng that require backward-compatibility breaks, including wider use of exceptions, reworking variable syntax to be more consistent and complete, and the deprecation or removal of various legacy features.|$|E
5|$|In compilers, {{straight}} line code (that is, sequences of statements without loops or conditional branches) may {{be represented by}} a DAG describing the inputs and outputs {{of each of the}} arithmetic operations performed within the code. This representation allows the compiler to perform common subexpression elimination efficiently. At a higher level <b>of</b> <b>code</b> organization, the acyclic dependencies principle states that the dependencies between modules or components of a large software system should form a directed acyclic graph.|$|E
5|$|Python is {{a widely}} used {{high-level}} programming language for general-purpose programming, created by Guido van Rossum and first released in 1991. An interpreted language, Python has a design philosophy that emphasizes code readability (notably using whitespace indentation to delimit code blocks rather than curly brackets or keywords), and a syntax that allows programmers to express concepts in fewer lines <b>of</b> <b>code</b> than might be used in languages such as C++ or Java. The language provides constructs intended to enable writing clear programs on both a small and large scale.|$|E
40|$|The {{channel coding}} theorem for DMCs is proved using random coding. The {{standard}} proofs [1],[2]. are strongly using {{the property of}} total randomness of the ensemble <b>of</b> <b>codes.</b> For a more restricted ensemble <b>of</b> <b>codes</b> a specific proof is needed. This was done, for example, for linear codes, time-varying convolutional codes, see [3, pages 189 and 301], and for constant composition (constant type) codes, see [4]. In this work we show that weaker demands on the ensembles <b>of</b> <b>codes,</b> than independency <b>of</b> the <b>code</b> words, are needed. As a result, we get simple proofs <b>of</b> the channel <b>coding</b> theorem for interesting restricted ensembles <b>of</b> <b>codes.</b> As an example we can prove the channel coding theorem for the ensembles <b>of</b> <b>codes</b> based on the output of an LFSR (linear feedback shift register). A particularly interesting application of our technique is a proof that fixed (time-invariant) convolutional codes attain capacity. ...|$|R
40|$|AbstractSeveral forms <b>of</b> decipherability <b>of</b> <b>codes,</b> like unique decipherability, multiset decipherability and set decipherability are subsumed under {{a general}} concept of decipherability using {{varieties}} of monoids. A Galois connection is established between classes <b>of</b> <b>codes</b> and varieties <b>of</b> monoids, establishing {{a measure of}} the decipherability of a class <b>of</b> <b>codes.</b> Several well-known classes <b>of</b> <b>codes</b> are shown to be varieties, and several varieties of monoids are shown to be codifiable. Examples are also given of non-codifiable varieties of monoids. The simplified domino graph <b>of</b> a <b>code</b> is constructed, and it is shown that the language it accepts forms a basis for the variety of monoids associated with the code...|$|R
40|$|Introduction: The {{review of}} medical records {{with the aim}} of {{assessing}} the quality <b>of</b> <b>codes</b> has long been conducted in different countries. Auditing medical coding, as an instructive approach, could help to review the quality <b>of</b> <b>codes</b> objectively using defined attributes, and this in turn would lead to improvement of the quality <b>of</b> <b>codes.</b> Method: The current study aimed to present a model for auditing the quality <b>of</b> clinical <b>codes.</b> The audit model was formed after reviewing other audit models, considering their strengths and weaknesses. A clear definition was presented for each quality attribute and more detailed criteria were then set for assessing the quality <b>of</b> <b>codes.</b> Results: The audit tool (based on the quality attributes included legibility, relevancy, completeness, accuracy, definition and timeliness); led to development of an audit model for assessing the quality <b>of</b> medical <b>coding.</b> Delphi technique was then used to reassure the validity of the model. Conclusion: The inclusive audit model designed could provide a reliable and valid basis for assessing the quality <b>of</b> <b>codes</b> considering more quality attributes and their clear definition. The inter-observer check suggested in the method of auditing is of particular importance to reassure the reliability <b>of</b> <b>coding...</b>|$|R
