0|10|Public
50|$|The Ishbel Group is disnconformably overlain by the Spray River Group and unconformably <b>overlays</b> the <b>Tunnel</b> Mountain Formation and the Kananaskis Formation in Kananaskis Country.|$|R
40|$|The {{emerging}} {{and growing}} deployment of IPv 6 networks will introduce cases where connectivity with IPv 4 networks crossing IPv 6 transit backbones is desired. This document describes {{a mechanism for}} automatic discovery and creation of IPv 4 -over-IPv 6 tunnels via extensions to multiprotocol BGP. It is targeted at connecting islands of IPv 4 networks across an IPv 6 -only backbone {{without the need for}} a manually configured <b>overlay</b> of <b>tunnels.</b> The mechanisms described in this document have been implemented, tested, and deployed on the large research IPv 6 network in China...|$|R
40|$|Augmented reality x-ray vision {{allows users}} to see through walls and view real {{occluded}} objects and locations. We present an augmented reality x-ray vision system that employs multiple view modes to support new visualizations that provide depth cues and spatial awareness to users. The edge overlay visualization provides depth cues to make hidden objects appear to be behind walls, rather than floating in front of them. Utilizing this edge <b>overlay,</b> the <b>tunnel</b> cut-out visualization provides details about occluding layers between the user and remote location. Inherent limitations of these visualizations are addressed by our addition of view modes allowing the user to obtain additional detail by zooming in, or {{an overview of the}} environment via an overhead exocentric view...|$|R
40|$|Demo Abstract at TridentCom 2012 We {{present the}} {{extensions}} made to NEPI, the Network Experimentation Programming Interface, to allow easy creation and cus-tomization of routing overlays {{on top of}} PlanetLab. We particularly focus on demonstrating the traffic shaping capabilities provided by NEPI, {{with the use of}} customizable stream filters on PlanetLab overlays to induce controllable packet prioritization. This demonstration is intended to supplement the paper[1] accepted at TRI-DENTCOM' 12. We focus on demonstrating the experiment use case presented in that paper, in which we make use of stream filters as a means to control the characteristics of an overlay deployed in PlanetLab, [2] providing a realistic yet controllable environment where to test the POPI[4] tool. NEPI [3] is an experiment management framework which provides support for design, deployment, control and gathering of results of network experiments. We added support for automating deployment and customization of routing overlays on PlanetLab, to alleviate the complexities of performing these tasks manually, and to more easily circumvent administrative limitations. NEPI automates resource discovery, node provisioning, application deployment, and creation of tunnels between the selected nodes to build the overlay network. It also provides the ability to customize traffic in the overlays by adding user defined stream filters, processing functions applied to packets traversing the <b>overlay</b> <b>tunnels.</b> They can be used to implement custom queues, packet filters or transformations, and tunnelling protocols. To demonstrate NEPI's ability to provide a solution to existing problems when using PlanetLab, we selected a previously published experiment case [4]. In this experiment, researchers developed the POPI tool to attempt to infer packet priorities in the intervening routers between two endpoints, by inducing bulk traffic and analyzing point-to-point loss rates. However, in order to verify the results obtained after running POPI on PlanetLab, it was necessary to ask ISPs about their routing policies, because no other means were available to verify that the priorities reported by the tool corresponded to actual prioritization policies...|$|R
5000|$|The {{character}} of the palace reliefs made excavation relatively straightforward, if the right site was chosen. Assyrian palaces were built on high mud-brick platforms. Test trenches were started in various directions, and once {{one of them had}} hit sculpture, the trenches had only to follow the lines of the wall, often through a whole suite of rooms. Most trenches could be open to the sky, but at Nimrud, where one palace <b>overlay</b> another, <b>tunnels</b> were necessary in places. [...] Layard estimated [...] "that he had exposed nearly two miles of sculptured walls in Sennacherib's palace alone", not to mention the Library of Ashurbanipal he found there. [...] His excavation practices left a lot to be desired by modern standards; the centres of rooms were not only not excavated, but the material removed from the trench in one room might be deposited in another, compromising later excavations. [...] Typically the slabs were sawn to roughly a third of their original depth, to save weight in carrying them back to Europe, which was typically more complicated and difficult than digging them up.|$|R
40|$|The {{emerging}} {{and growing}} deployment of IPv 6 networks will introduce cases where connectivity with IPv 4 networks crossing IPv 6 transit backbones is desired. This document describes {{a mechanism for}} automatic discovery and creation of IPv 4 -over-IPv 6 tunnels via extensions to multiprotocol BGP. It is targeted at connecting islands of IPv 4 networks across an IPv 6 -only backbone {{without the need for}} a manually configured <b>overlay</b> of <b>tunnels.</b> The mechanisms described in this document have been implemented, tested, and deployed on the large research IPv 6 network in China. Status of This Memo This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation. This document defines an Experimental Protocol for the Internet community. This is a contribution to the RFC Series, independently of any other RFC stream. The RFC Editor has chosen to publish this document at its discretion and makes no statement about its value for implementation or deployment. Documents approved for publication by the RFC Editor are not a candidate for any level of Internet Standard; see Section 2 of RFC 5741. Information about the current status of this document, any errata, and how to provide feedback on it may be obtained a...|$|R
40|$|Computer Networks 36 � 2001) 117 ± 135 The X-Bone {{dynamically}} deploys {{and manages}} Internet overlays to reduce con®guration e€ort and increase network component sharing. The X-Bone discovers,con®gures,and monitors network resources to create overlays over existing IP networks. Overlays {{are useful for}} deploying overlapping virtual networks on shared infrastructure and for simplifying topology. The X-Bone extends current overlay management by adding dynamic resource discovery,deployment, and monitoring,and allows network components �hosts,routers) to participate simultaneously in multiple overlays. Its two-layer IP in IP <b>tunneled</b> <b>overlays</b> support existing applications and unmodi®ed routing,multicast,and DNS services in unmodi®ed host operating systems. This two-layer scheme uniquely supports recursive overlays,useful for fault tolerance and dynamic relocation. The X-Bone uses multicast to simplify resource discovery,and provides secure deployment as well as secure overlays. This paper presents the X-Bone architecture,and discusses its components an...|$|R
40|$|Abstract 1 The X-Bone {{dynamically}} deploys {{and manages}} Internet overlays to reduce configuration effort and increase network component sharing. The X-Bone discovers, configures, and monitors network resources to create overlays over existing IP networks. Overlays {{are useful for}} deploying overlapping virtual networks on shared infrastructure and for simplifying topology. The X-Bone extends current overlay management by adding dynamic resource discovery, deployment, and monitoring, and allows network components (hosts, routers) to participate simultaneously in multiple overlays. Its two-layer IP in IP <b>tunneled</b> <b>overlays</b> support existing applications and unmodified routing, multicast, and DNS services in unmodified host operating systems. This two-layer scheme uniquely supports recursive overlays, useful for fault tolerance and dynamic relocation. The X-Bone uses multicast to simplify resource discovery, and provides secure deployment as well as secure overlays. This paper presents the X-Bone architecture, and discusses its components and features, and their performance impact. 1...|$|R
40|$|Abstract—IPv 6 is {{the future}} network layer {{protocol}} for the Internet. Since it is not compatible with its predecessor, some interoperability mechanisms were designed. An important category of these mechanisms is automatic tunnels, which enable IPv 6 communication over an IPv 4 network without prior configuration. This category includes ISATAP, 6 to 4 and Teredo. We present a novel class of attacks that exploit vulnerabilities in these tunnels. These attacks take advantage of inconsistencies between a <b>tunnel’s</b> <b>overlay</b> IPv 6 routing state and the native IPv 6 routing state. The attacks form routing loops which can be abused {{as a vehicle for}} traffic amplification to facilitate DoS attacks. We exhibit five attacks of this class. One of the presented attacks can DoS a Teredo server using a single packet. The exploited vulnerabilities are embedded {{in the design of the}} tunnels; hence any implementation of these tunnels may be vulnerable. In particular, the attacks were tested against the ISATAP, 6 to 4 and Teredo implementations of Windows Vista and Windows Server 2008 R 2...|$|R
40|$|Abstract — This paper {{describes}} WOW, a {{distributed system}} that combines virtual machine, overlay networking and peerto-peer techniques to create scalable wide-area networks of virtual workstations for high-throughput computing. The system is architected to: facilitate {{the addition of}} nodes to a pool of resources {{through the use of}} system virtual machines (VMs) and self-organizing virtual network links; to maintain IP connectivity even if VMs migrate across network domains; and to present to end-users and applications an environment that is functionally identical to a local-area network or cluster of workstations. We describe a novel, extensible user-level decentralized technique to discover, establish and maintain <b>overlay</b> links to <b>tunnel</b> IP packets over different transports (including UDP and TCP) and across firewalls. We also report on several experiments conducted on a testbed WOW deployment with 118 P 2 P router nodes over PlanetLab and 33 VMware-based VM nodes distributed across six firewalled domains. Experiments show that the latency in joining a WOW network is of the order of seconds: in a set of 300 trials, 90 % of the nodes self-configured P 2 P routes within 10 seconds, and more than 99 % established direct connections to other nodes within 200 seconds. Experiments also show that the testbed delivers good performance for two unmodified, representative benchmarks drawn from the life-sciences domain. The testbed WOW achieves an overall throughput of 53 jobs/minute for PBS-scheduled executions of the MEME application (with average single-job sequential running time of 24. 1 s) and a parallel speedup of 13. 5 for the PVM-based fastDNAml application. Experiments also demonstrate that the system is capable of seamlessly maintaining connectivity at the virtual IP layer for typical client/server applications (NFS, SSH, PBS) when VMs migrate across a WAN. I...|$|R

