10000|10000|Public
5|$|Allocators are {{required}} to supply a template class member template [CODE] which enables the possibility of obtaining a related allocator, parameterized {{in terms of a}} different type. For example, given an allocator type IntAllocator for objects <b>of</b> <b>type</b> int, a related allocator type for objects <b>of</b> <b>type</b> long could be obtained using IntAllocator::rebind::other.|$|E
5|$|Allocators {{should be}} copy-constructible. An {{allocator}} for objects <b>of</b> <b>type</b> T {{can be constructed}} from an allocator for objects <b>of</b> <b>type</b> U. If an allocator, A, allocates a region of memory, R, then R can only be deallocated by an allocator that compares equal to A.|$|E
5|$|There {{are four}} Mira {{variable}} stars in Auriga: R Aurigae, UV Aurigae, U Aurigae, and X Aurigae, {{all of which}} are type M stars. More specifically, R Aurigae is <b>of</b> <b>type</b> M7III, UV Aurigae is <b>of</b> <b>type</b> C6 (a carbon star), U Aurigae is <b>of</b> <b>type</b> M9, and X Aurigae is <b>of</b> <b>type</b> K2. R Aurigae, with a period of 457.5 days, ranges in magnitude from a minimum of 13.9 to a maximum of 6.7. UV Aurigae, with a period of 394.4 days, ranges in magnitude from a minimum of 10.6 to a maximum of 7.4. U Aurigae, with a period of 408.1 days, ranges in magnitude from a minimum of 13.5 to a maximum of 7.5. X Aurigae, with a particularly short period of 163.8 days, ranges in magnitude from a minimum of 13.6 to a maximum of 8.0.|$|E
25|$|There are 33 with 2 <b>types</b> <b>of</b> vertices, 12 {{with two}} pairs <b>of</b> <b>types,</b> and 21 with 3:1 ratio <b>of</b> <b>types.</b>|$|R
5000|$|Induction-induction allows {{definition}} <b>of</b> a <b>type</b> and {{a family}} <b>of</b> <b>types</b> at the same time. So, a type [...] {{and a family}} <b>of</b> <b>types</b> [...]|$|R
40|$|We {{introduce}} a theory <b>of</b> behavioural <b>types</b> as a semantic foundation <b>of</b> <b>typed</b> ß-calculi. In this theory, a type {{is a set}} of behaviours, represented by early name passing synchronisation trees, which conform to a certain behavioural constraint. Operations on typed processes are derived from <b>typed</b> variants <b>of</b> well-known process-theoretic operations for mobile processes, and each model <b>of</b> <b>typed</b> ß-calculi in a typed universe induces a compositional theory <b>of</b> <b>typed</b> bisimilarities. The construction is simple and intuitive, yet offers a rich class <b>of</b> <b>typed</b> universes <b>of</b> name passing interactive behaviours, which contain, among others, models <b>of</b> known <b>typed</b> ß-calculi and universes of game semantics. As a simple but non-trivial application, we show how the sorting by Milner can be given a sound model in a basic universe <b>of</b> <b>types.</b> The soundness states not only that the interpretation is sound in the standard sense, but also that the untyped interactive behaviour <b>of</b> <b>typed</b> terms is justifiable on t [...] ...|$|R
5|$|Toxins <b>of</b> <b>type</b> I {{systems are}} small, {{hydrophobic}} proteins that confer toxicity by damaging cell membranes. Few intracellular targets <b>of</b> <b>type</b> I toxins have been identified, possibly {{due to the}} difficult nature of analysing proteins that are poisonous to their bacterial hosts.|$|E
5|$|A small {{proportion}} <b>of</b> <b>type</b> Ic supernovae show highly broadened and blended emission lines which {{are taken to}} indicate very high expansion velocities for the ejecta. These have been classified as type Ic-BL or Ic-bl.|$|E
5|$|An allocator, A, for objects <b>of</b> <b>type</b> T {{must have}} a member {{function}} with the signature A::pointer A::allocate(size_type n, A::const_pointer hint = 0). This function returns a pointer to the first element of a newly allocated array large enough to contain n objects <b>of</b> <b>type</b> T; only the memory is allocated, and the objects are not constructed. Moreover, an optional pointer argument (that points to an object already allocated by A) {{can be used as}} a hint to the implementation about where the new memory should be allocated in order to improve locality. However, the implementation is free to ignore the argument.|$|E
40|$|In this note, in an {{independent}} private values auction framework, I discuss {{the relationship between the}} set <b>of</b> <b>types</b> and the distribution <b>of</b> <b>types.</b> I show that any set <b>of</b> <b>types,</b> finite dimensional or not, can be extended to a larger set <b>of</b> <b>types</b> preserving incentive compatibility constraints, expected revenue and bidder’s expected utilities. Thus for example we may convexify a set <b>of</b> <b>types</b> making our model amenable to the large body of theory in economics and mathematics that relies on convexity assumptions. An interesting application of this extension procedure is to show that although revenue equivalence is not valid in general if the set <b>of</b> <b>types</b> is not convex these mechanism have underlying distinct allocation mechanism in the extension. Thus we recover in these situations the revenue equivalence...|$|R
50|$|The need to {{distinguish}} tokens <b>of</b> <b>types</b> from occurrences <b>of</b> <b>types</b> arises, {{not just in}} linguistics, but whenever <b>types</b> <b>of</b> things have other <b>types</b> <b>of</b> things occurring in them. Reflection on the simple case of occurrences of numerals is often helpful.|$|R
5000|$|The Reflection Library {{provides}} {{the ability to}} examine the structure <b>of</b> <b>types,</b> create instances <b>of</b> <b>types</b> and invoke methods on types, all based on a description <b>of</b> the <b>type.</b> It defines types in the following namespaces: ...|$|R
5|$|Any {{class that}} {{fulfills}} the allocator requirements {{can be used}} as an allocator. In particular, a class A capable of allocating memory for an object <b>of</b> <b>type</b> T must provide the types A::pointer, A::const_pointer, A::reference, A::const_reference, and A::value_type for generically declaring objects and references (or pointers) to objects <b>of</b> <b>type</b> T. It should also provide type A::size_type, an unsigned type which can represent the largest size for an object in the allocation model defined by A, and similarly, a signed integral A::difference_type that can represent the difference between any two pointers in the allocation model.|$|E
5|$|Double {{degenerate}} scenarios {{raise questions}} about the applicability <b>of</b> <b>Type</b> Ia supernovae as standard candles, since total mass of the two merging white dwarfs varies significantly, meaning luminosity also varies.|$|E
5|$|In May 2015, NASA {{reported}} that the Kepler space observatory observed KSN 2011b, a Type Ia supernova {{in the process of}} exploding. Details of the pre-nova moments may help scientists better judge the quality <b>of</b> <b>Type</b> Ia supernovae as standard candles, which is an important link in the argument for dark energy.|$|E
50|$|The design offers {{combinations}} <b>of</b> three <b>types</b> <b>of</b> wings, three <b>types</b> <b>of</b> {{engines and}} four <b>types</b> <b>of</b> wheels.|$|R
40|$|AbstractA model-theoretic {{operation}} is characterized that preserves {{the property of}} being a model <b>of</b> <b>typed</b> λ-calculus (i. e., the result of applying it to a model <b>of</b> <b>typed</b> λ-calculus is another model <b>of</b> <b>typed</b> λ-calculus). An expression is well-typed iff the class of its models is closed under this operation...|$|R
5000|$|... #Subtitle level 2: Summary <b>of</b> <b>types</b> <b>of</b> disease {{associated}} with <b>types</b> <b>of</b> dipteran flies.|$|R
5|$|Nauru has the world's {{highest level}} <b>of</b> <b>type</b> 2 diabetes, {{with more than}} 40% of the {{population}} affected. Other significant dietary-related problems on Nauru include kidney disease and heart disease.|$|E
5|$|The Deseret {{alphabet}} was purposely {{designed so}} as to not have ascenders and descenders. This was envisioned as a practical benefit for the alphabet {{in an era of}} metal type: after many uses, the edges <b>of</b> <b>type</b> sorts become dull, and narrow ascenders and descenders are most prone to this effect.|$|E
5|$|There are {{a number}} of views on the {{potential}} uses <b>of</b> <b>Type</b> I and II fluids. The use <b>of</b> <b>Type</b> I fluid raises concern because its holdover time is shorter than the holdover time for Type II fluid under certain conditions. Both fluids are under scrutiny for their environmental impacts, and it is uncertain if Type II fluid diminishes the runway coefficient of friction since the fluid rolls off the airplane during the takeoff roll. Also, the use of either type fluid may result in a temporary degradation in the airplane's aerodynamic performance, a reduced stall margin, and an increase in drag.|$|E
5000|$|The {{reintroduction}} <b>of</b> older <b>types</b> <b>of</b> beer {{which have}} faded from popularity {{and the introduction}} <b>of</b> <b>types</b> <b>of</b> beer which have not previously been brewed in the Netherlands.|$|R
25|$|This list <b>of</b> <b>types</b> <b>of</b> colic is not {{exhaustive}} but details some <b>of</b> the <b>types</b> {{which may be}} encountered.|$|R
50|$|Type ontological {{reduction}}ism is {{the idea}} that every <b>type</b> <b>of</b> item is a sum <b>type</b> <b>of</b> item, and that every perceivable <b>type</b> <b>of</b> item is a sum <b>of</b> <b>types</b> <b>of</b> items with a lesser degree <b>of</b> complexity. <b>Type</b> ontological reduction <b>of</b> biological things to chemical things is often rejected.|$|R
5|$|Unboxing is the {{operation}} of converting a value of a reference type (previously boxed) into a value of a value type. Unboxing in C# requires an explicit type cast. A boxed object <b>of</b> <b>type</b> T can only be unboxed to a T (or a nullable T).|$|E
5|$|When Bi Sheng died, his fount <b>of</b> <b>type</b> {{passed into}} the {{possession}} of my followers (i.e. one of Shen's nephews), among whom it has been kept as a precious possession until now.|$|E
5|$|When {{purchased}} by Canada in 1937–38, the four C-class destroyers were refitted to meet Canadian specifications, including the installation <b>of</b> <b>Type</b> 124 ASDIC. It {{is not clear}} how much Kempenfelt had been modified when she was turned over in October 1939, other than steam heating had yet been fitted.|$|E
40|$|Identification and {{analysis}} <b>of</b> <b>types</b> <b>of</b> personality {{in a brief}} measure of the Big-Five personality domains ERWIN LAUTSCH 1 & ULF THÖLE 2 This article demonstrates a strategy <b>of</b> <b>typing</b> <b>of</b> respondents with data of a very brief Big Five measure for use in large scale surveys. The German National Election Study 2002 set of data is used. For the identification <b>of</b> <b>types,</b> the Configural Frequency Analysis (CFA) and the Configural Cluster Analysis (KCA) are applied. The identified types can be explained with the interaction effects of first and higher order found and statistically evaluated by log-linear modelling. With the agglutination <b>of</b> <b>types</b> the number <b>of</b> <b>types</b> can be reduced. With the contrast group analysis CHAID (Answer Tree) the types are specified socio-demographically. The influence <b>of</b> the <b>types</b> found on voting behaviour is demonstrated globally with chi square and based on locally corrected standardised residues (Prediction CFA) ...|$|R
50|$|For {{a fuller}} country-by-country listing <b>of</b> <b>types</b> <b>of</b> {{partnerships}} and companies, see <b>Types</b> <b>of</b> business entity.|$|R
40|$|We {{consider}} {{the problem of}} estimating the number <b>of</b> <b>types</b> in a corpus using the number <b>of</b> <b>types</b> observed {{in a sample of}} tokens from that corpus. We derive exact and asymptotic distri-butions for the number <b>of</b> observed <b>types,</b> conditioned upon the number of tokens and the latent type distribution. We use the asymptotic distributions to derive an estimator of the latent number 10 <b>of</b> <b>types</b> and we validate this estimator numerically...|$|R
5|$|Another {{model for}} the {{formation}} <b>of</b> <b>Type</b> Ia supernovae involves the merger of two white dwarf stars, with the combined mass momentarily exceeding the Chandrasekhar limit. There is much variation {{in this type of}} event, and in many cases there may be no supernova at all, but it is expected that they will have a broader and less luminous light curve than the more normal SN Type Ia.|$|E
5|$|Antlia {{contains}} many faint galaxies, the brightest {{of which is}} NGC 2997 at magnitude 10.6. It is a loosely wound face-on spiral galaxy <b>of</b> <b>type</b> Sc. Though nondescript in most amateur telescopes, it presents bright clusters of young stars and many dark dust lanes in photographs. Discovered in 1997, the Antlia Dwarf is a 14.8m dwarf spheroidal galaxy that belongs to the Local Group of galaxies.|$|E
5|$|Before version 3.0, Python had {{two kinds}} of classes: old-style and new-style. The syntax of both styles is the same, the {{difference}} being whether the class object is inherited from, directly or indirectly (all new-style classes inherit from object and are instances <b>of</b> <b>type).</b> In versions of Python 2 from Python 2.2 onwards, both kinds of classes can be used. Old-style classes were eliminated in Python 3.0.|$|E
50|$|This {{is a list}} <b>of</b> <b>types</b> <b>of</b> swords.|$|R
50|$|For a list <b>of</b> <b>types</b> <b>of</b> {{corporation}} and other business types by country, see <b>Types</b> <b>of</b> business entity.|$|R
5000|$|The {{following}} are examples <b>of</b> <b>types</b> <b>of</b> parenthetical phrases: ...|$|R
