455|834|Public
2500|$|Cellular automata {{have been}} {{proposed}} for public key cryptography. The <b>one-way</b> <b>function</b> is {{the evolution of a}} finite CA whose inverse is believed to be hard to find. Given the rule, anyone can easily calculate future states, but it appears {{to be very difficult to}} calculate previous states.|$|E
2500|$|In the {{original}} version, the RSA algorithm {{was used to}} encrypt session keys. RSA's security depends upon the [...] <b>one-way</b> <b>function</b> nature of mathematical integer factoring. Similarly, the symmetric key algorithm used in PGP version 2 was IDEA, which might {{at some point in}} the future be found to have previously undetected cryptanalytic flaws. Specific instances of current PGP or IDEA insecurities (if they exist) are not publicly known. As current versions of PGP have added additional encryption algorithms, their cryptographic vulnerability varies with the algorithm used. However, none of the algorithms in current use are publicly known to have cryptanalytic weaknesses.|$|E
50|$|A {{trapdoor}} <b>one-way</b> <b>function</b> or trapdoor permutation is {{a special}} kind of <b>one-way</b> <b>function.</b> Such a function is hard to invert unless some secret information, called the trapdoor, is known.|$|E
40|$|Abstract: We {{study the}} computability of <b>one-way</b> <b>functions</b> and {{pseudorandom}} generators by monotone circuits, showing a substantial {{gap between the}} two: On one hand, there exist <b>one-way</b> <b>functions</b> that are computable by (uniform) polynomial-size monotone functions, provided (of course) that <b>one-way</b> <b>functions</b> exist at all. On the other hand, no monotone function can be a pseudorandom generator...|$|R
5000|$|The {{existence}} of pseudorandom generators {{is related to}} the {{existence of}} <b>one-way</b> <b>functions</b> and hard-core predicates. Formally, pseudorandom generators exist if and only if <b>one-way</b> <b>functions</b> exist, or ...|$|R
40|$|AbstractRabi and Sherman {{presented}} novel {{digital signature}} and unauthenticated secret-key agreement protocols, developed by themselves and by Rivest and Sherman. These protocols use strong, total, commutative (in {{the case of}} multiparty secret-key agreement), associative <b>one-way</b> <b>functions</b> as their key building blocks. Although Rabi and Sherman did prove that associative <b>one-way</b> <b>functions</b> exist if P≠NP, they left as an open question whether any natural complexity-theoretic assumption is sufficient to ensure the existence of strong, total, commutative, associative <b>one-way</b> <b>functions.</b> In this paper, we prove that if P≠NP then strong, total, commutative, associative <b>one-way</b> <b>functions</b> exist...|$|R
50|$|A one-way {{permutation}} is a <b>one-way</b> <b>function</b> {{that is also}} a permutation—that is, a <b>one-way</b> <b>function</b> that is both injective and surjective. One-way permutations are {{an important}} cryptographic primitive, {{and it is not}} known if their existence is implied by the existence of one-way functions.|$|E
5000|$|It {{is clear}} that if a {{one-to-one}} function has a hard-core predicate, then it must be one way. Oded Goldreich and Leonid Levin (1989) showed how every <b>one-way</b> <b>function</b> can be trivially modified to obtain a <b>one-way</b> <b>function</b> that has a specific hard-core predicate. [...] Let f be a <b>one-way</b> <b>function.</b> Define g(x,r) = (f(x), r) where the length of r {{is the same as}} that of x. Let xj denote the jth bit of x and rj the jth bit of r. Then ...|$|E
50|$|While a <b>one-way</b> <b>function</b> {{is hard to}} invert, {{there are}} no {{guarantees}} about the feasibility of computing partial information about the preimage c from the image f(x). For instance, while RSA is conjectured to be a <b>one-way</b> <b>function,</b> the Jacobi symbol of the preimage can be easily computed from that of the image.|$|E
40|$|AbstractThe {{isomorphism}} conjecture is {{investigated for}} exponential-time and other complexity classes. If <b>one-way</b> <b>functions</b> exist, then {{we show that}} there are <b>one-way</b> <b>functions</b> such that A ≅pf(A), where A is a standard complete set for NP or E or NE. If <b>one-way</b> <b>functions</b> exist, we also show that there are k-completely creative sets in NP with <b>one-way</b> productive <b>functions</b> but which are p-isomorphic to standard complete sets. We then present a type of <b>one-way</b> <b>functions</b> whose existence {{is equivalent to the}} failure of the isomorphism conjecture for E. Finally, we show that the isomorphism conjecture holds for E (NE) if and only if it holds for EXP (NEXP) ...|$|R
40|$|Rabi and Sherman [RS 97] {{presented}} novel {{digital signature}} and unauthenticated secret-key agreement protocols, developed by themselves and by Rivest and Sherman. These protocols use "strong," total, commutative (in {{the case of}} multi-party secret-key agreement), associative <b>one-way</b> <b>functions</b> as their key building blocks. Though Rabi and Sherman did prove that associative <b>one-way</b> <b>functions</b> exist if ≠, they left as an open question whether any natural complexity-theoretic assumption is sufficient to ensure the existence of "strong," total, commutative, associative <b>one-way</b> <b>functions.</b> In this paper, we prove that if ≠ then "strong," total, commutative, associative <b>one-way</b> <b>functions</b> exist...|$|R
40|$|Rabi and Sherman [RS 97,RS 93] {{proved that}} the {{hardness}} of factoring is a sufficient condition for there to exist <b>one-way</b> <b>functions</b> (i. e., p-time computable, honest, p-time noninvertible functions) that are total, commutative, and associative but not strongly noninvertible. In this paper we improve the sufficient condition to P = NP. More generally, {{in this paper we}} completely characterize which types of <b>one-way</b> <b>functions</b> stand or fall together with (plain) one-way functions—equivalently, stand or fall together with P = NP. We look at the four attributes used in Rabi and Sherman’s seminal work on algebraic properties of <b>one-way</b> <b>functions</b> (see [RS 97,RS 93]) and subsequent papers—strongness (of noninvertibility), totality, commutativity, and associativity—and for each attribute, we allow it to be required to hold, required to fail, or “don’t care. ” In this categorization there are 3 4 = 81 potential types of <b>one-way</b> <b>functions.</b> We prove that each of these 81 feature-laden types stand or fall together with the existence of (plain) <b>one-way</b> <b>functions.</b> Key words: computational complexity, complexity-theoretic <b>one-way</b> <b>functions,</b> associativity, 1. ...|$|R
5000|$|A {{geometric}} identification protocol {{has been}} suggested based on the <b>one-way</b> <b>function</b> indicated above.|$|E
50|$|If f is a <b>one-way</b> <b>function,</b> {{then the}} {{inversion}} of f {{would be a}} problem whose output is hard to compute (by definition) but easy to check (just by computing f on it). Thus, the existence of a <b>one-way</b> <b>function</b> implies that FP≠FNP, which in turn implies that P≠NP. However, it is not known whether P≠NP implies the existence of one-way functions.|$|E
5000|$|The {{existence}} of a <b>one-way</b> <b>function</b> implies the {{existence of}} many other useful concepts, including: ...|$|E
40|$|AbstractThe One-way Conjecture {{states that}} the {{existence}} of nonisomorphic NP-complete sets implies the existence of <b>one-way</b> <b>functions.</b> This paper gives a relativized counterexample to the conjecture by constructing a relativized world that has nonisomorphic NP-complete sets, but lacks <b>one-way</b> <b>functions...</b>|$|R
40|$|It {{was known}} that if <b>one-way</b> <b>functions</b> exist, {{then there are}} {{zero-knowledge}} proofs for every language in PSPACE. We prove that unless very weak <b>one-way</b> <b>functions</b> exist, Zero-Knowledge proofs can be given only for languages in BPP. For average-case de nitions of BPP we prove an analogous result {{under the assumption that}} uniform <b>one-way</b> <b>functions</b> do not exist. Thus, very loosely speaking, zeroknowledge is either useless (exists only for &quot; languages), or universal (exists for every provable language). ...|$|R
40|$|We {{show that}} if NP � co−RP then the {{existence}} of efficient indistinguishability obfuscation (iO) implies {{the existence of}} <b>one-way</b> <b>functions.</b> Thus, if we live in “Pessiland”, where NP problems are hard on the average but <b>one-way</b> <b>functions</b> do not exist, or even in “Heuristica”, where NP problems are hard in the worst case but easy on average, then iO is impossible. Our result makes it redundant to explicitly assume the existence of <b>one-way</b> <b>functions</b> in most “cryptographically interesting ” applications of iO. ...|$|R
50|$|Most delay valves have a <b>one-way</b> <b>function,</b> {{where there}} is either no {{restriction}} or no movement in one direction.|$|E
5000|$|Let [...] be a {{positive}} integer and let [...] be the set of messages. Let [...] be a <b>one-way</b> <b>function.</b>|$|E
5000|$|... 2003 SIAM Outstanding Paper Prize for {{the seminal}} paper showing how to {{construct}} a cryptographically unbreakable pseudo-random generator from any <b>one-way</b> <b>function</b> ...|$|E
5000|$|... #Subtitle level 2: Theoretical {{implications}} of <b>one-way</b> <b>functions</b> ...|$|R
40|$|AbstractIn {{this paper}} we {{demonstrate}} an oracle relative to {{which there are}} <b>one-way</b> <b>functions</b> but every paddable 1 -li-degree collapses to an isomorphism type, thus yielding a relativized failure of the Joseph–Young Conjecture [JY 85]. We then use this result to construct an oracle relative to which the Isomorphism Conjecture is true but <b>one-way</b> <b>functions</b> exist, which answers an open question of Fenner, Fortnow, and Kurtz [FFK 96]. Thus, there are now relativizations realizing {{every one of the}} four possible states of affairs between the Isomorphism Conjecture and the existence of <b>one-way</b> <b>functions...</b>|$|R
5000|$|... #Subtitle level 3: Differences between {{classical}} and quantum <b>one-way</b> <b>functions</b> ...|$|R
50|$|If no {{algorithm}} {{is known to}} solve the conjugacy search problem, then the function x → ux {{can be considered as}} a <b>one-way</b> <b>function.</b>|$|E
5000|$|One {{can create}} a bit-commitment scheme from any <b>one-way</b> <b>function</b> that is injective. The scheme relies {{on the fact that}} every <b>one-way</b> <b>function</b> can be {{modified}} (via the Goldreich-Levin theorem) to possess a computationally hard-core predicate (while retaining the injective property). Let f be an injective <b>one-way</b> <b>function,</b> with h a hard-core predicate. Then to commit to a bit b Alice picks a random input x and sends the tripleto Bob, where [...] denotes XOR, i.e., addition modulo 2. To decommit, Alice simply sends x to Bob. Bob verifies by computing f(x) and comparing to the committed value. This scheme is concealing because for Bob to recover b he must recover h(x). Since h is a computationally hard-core predicate, recovering h(x) from f(x) with probability greater than one-half is as hard as inverting f. Perfect binding follows from the fact that f is injective and thus f(x) has exactly one preimage.|$|E
50|$|There is {{a generic}} {{complexity}} {{version of a}} <b>one-way</b> <b>function</b> which yields the same class of functions but allows one to consider different security assumptions than usual.|$|E
40|$|AbstractRabi and Sherman [M. Rabi, A. Sherman, An {{observation}} on associative <b>one-way</b> <b>functions</b> in complexity theory, Information Processing Letters 64 (5) (1997) 239 – 244; M. Rabi, A. Sherman, Associative one-way functions: A {{new paradigm}} for secret-key agreement and digital signatures, Tech. Rep. CS-TR- 3183 /UMIACS-TR- 93 - 124, Department of Computer Science, University of Maryland, College Park, MD, 1993] {{proved that the}} hardness of factoring is a sufficient condition for there to exist <b>one-way</b> <b>functions</b> (i. e., p-time computable, honest, p-time noninvertible functions; this paper is in the worst-case model, not the average-case model) that are total, commutative, and associative but not strongly noninvertible. In this paper we improve the sufficient condition to P≠NP. More generally, {{in this paper we}} completely characterize which types of <b>one-way</b> <b>functions</b> stand or fall together with (plain) one-way functions—equivalently, stand or fall together with P≠NP. We look at the four attributes used in Rabi and Sherman’s seminal work on algebraic properties of <b>one-way</b> <b>functions</b> (see [M. Rabi, A. Sherman, An observation on associative <b>one-way</b> <b>functions</b> in complexity theory, Information Processing Letters 64  (5) (1997) 239 – 244; M. Rabi, A. Sherman, Associative one-way functions: A new paradigm for secret-key agreement and digital signatures, Tech. Rep. CS-TR- 3183 /UMIACS-TR- 93 - 124, Department of Computer Science, University of Maryland, College Park, MD, 1993]) and subsequent papers–strongness (of noninvertibility), totality, commutativity, and associativity–and for each attribute, we allow it to be required to hold, required to fail, or “don’t care”. In this categorization there are 34 = 81 potential types of <b>one-way</b> <b>functions.</b> We prove that each of these 81 feature-laden types stands or falls together with the existence of (plain) <b>one-way</b> <b>functions...</b>|$|R
40|$|Rabi and Sherman {{presented}} novel {{digital signature}} and unauthenticated secret-key agreement protocols, developed by themselves and by Rivest and Sherman. These protocols use strong, total, commutative (in {{the case of}} multiparty secret-key agreement), associative <b>one-way</b> <b>functions</b> as their key building blocks. Although Rabi and Sherman did prove that associative oneway functions exist if P != NP, they left as an open question whether any natural complexity-theoretic assumption is sufficient to ensure the existence of strong, total, commutative, associative <b>one-way</b> <b>functions.</b> In this paper, we prove that if P != NP then strong, total, commutative, associative <b>one-way</b> <b>functions</b> exist...|$|R
5000|$|... 1993 Proved (with A. Wigderson) {{equivalence}} of <b>one-way</b> <b>functions</b> and zero-knowledge http://www.cs.ucla.edu/~rafail/PUBLIC/14.html.|$|R
5000|$|In {{order to}} forge a message Eve would have to invert the <b>one-way</b> <b>function</b> [...] This {{is assumed to be}} {{intractable}} for suitably sized inputs and outputs.|$|E
5000|$|To {{prove that}} ƒ {{is indeed a}} <b>one-way</b> <b>function</b> let's {{construct}} an argument by contradiction. Assume there exists a circuit C that inverts ƒ with advantage ε: ...|$|E
5000|$|A <b>one-way</b> <b>{{function}}</b> is {{a function}} that is easy to compute but hard to invert. A one-way compression function (also called hash function) should have the following properties: ...|$|E
40|$|Abstract. While 4 -round {{constructions of}} {{zero-knowledge}} arguments are known {{based on the}} existence of <b>one-way</b> <b>functions,</b> constuctions of resettably-sound zero-knowledge arguments require either stronger as-sumptions (the existence of a fully-homomorphic encryption scheme), or more communication rounds. We close this gap by demonstrating a 4 -round resettably-sound zero-knowledge argument for NP based {{on the existence of}} <b>one-way</b> <b>functions.</b> ...|$|R
40|$|Is {{it harder}} to solve many puzzles {{than it is to}} solve just one? This {{question}} has di#erent answers, depending on how you define puzzles. For the case of inverting <b>one-way</b> <b>functions</b> it was shown by Yao that solving many independent instances simultaneously is indeed harder than solving a single instance (cf. the transformation from weak to strong <b>one-way</b> <b>functions)</b> ...|$|R
40|$|Summary Since most {{interesting}} cryptographic tasks {{are impossible to}} achieve with absolute, informationtheoretic security, modern cryptography aims to design cryptographic primitives (i. e., algorithms/protocols) that are computationally infeasible to break (i. e., secure against computationally bounded adversaries). Proving lower bounds of the type needed, however, seems {{beyond the reach of}} current techniques in complexity theory. 1 Thus, research in the Foundations of Cryptography has aimed to design primitives based on complexity assumptions that are as weak as possible. It is well known that the assumption that <b>one-way</b> <b>functions</b> exist, is necessary for most cryptographic primitives. It is then natural to pose the opposite question. Namely, does the existence of <b>one-way</b> <b>functions</b> imply the existence of all cryptographic primitives? Here we consider some of the most fundamental primitives in cryptography and prove the following results about the power of <b>one-way</b> <b>functions</b> in implementing these primitives. Statistically hiding commitments. Statistically hiding commitments (ones where the hiding property holds against even computationally unbounded adversaries) are among the few fundamental primitives for which we have failed to find exact characterization. That is, until recently it was only known how to build these primitives from seemingly stronger assumptions than the existence of <b>one-way</b> <b>functions,</b> yet there was no black-box separation between these primitives and <b>one-way</b> <b>functions.</b> We resolve the complexity of statistically hiding commitments, giving a construction of statistically hiding commitment schemes under the minimal complexity assumption that <b>one-way</b> <b>functions</b> exist. By this we give a positive answer to an open question posed by Naor, Ostrovsky...|$|R
