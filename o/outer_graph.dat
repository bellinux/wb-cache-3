0|16|Public
40|$|We study straight-line {{drawings}} of graphs where the vertices {{are placed in}} convex position in the plane, i. e., convex drawings. We consider two families of graph classes with nice convex drawings: <b>outer</b> k-planar <b>graphs,</b> where each edge is crossed by at most k other edges; and, <b>outer</b> k-quasi-planar <b>graphs</b> where no k edges can mutually cross. We show that the <b>outer</b> k-planar <b>graphs</b> are (√(4 k+ 1) + 1) -degenerate, and consequently that every <b>outer</b> k-planar <b>graph</b> can be (√(4 k+ 1) + 2) -colored, and this bound is tight. We further show that every <b>outer</b> k-planar <b>graph</b> has a balanced separator of size O(k). This implies that every <b>outer</b> k-planar <b>graph</b> has treewidth O(k). For fixed k, these small balanced separators allow us to obtain a simple quasi-polynomial time algorithm to test whether a given <b>graph</b> is <b>outer</b> k-planar, i. e., none of these recognition problems are NP-complete unless ETH fails. For the <b>outer</b> k-quasi-planar <b>graphs</b> we prove that, unlike other beyond-planar graph classes, every edge-maximal n-vertex <b>outer</b> k-quasi planar <b>graph</b> has {{the same number of}} edges, namely 2 (k- 1) n - 2 k- 12. We also construct planar 3 -trees that are not outer 3 -quasi-planar. Finally, we restrict outer k-planar and outer k-quasi-planar drawings to closed drawings, where the vertex sequence on the boundary is a cycle in the graph. For each k, we express closed outer k-planarity and closed outer k-quasi-planarity in extended monadic second-order logic. Thus, closed outer k-planarity is linear-time testable by Courcelle's Theorem. Comment: Appears in the Proceedings of the 25 th International Symposium on Graph Drawing and Network Visualization (GD 2017...|$|R
50|$|Interval edge-colorings of outerplanar graphs were {{investigated}} by Giaro and Kubale and proved all the <b>outer</b> planar bipartite <b>graphs</b> are interval colorable.|$|R
40|$|Abstract. A set of planar graphs share a {{simultaneous}} embedding {{if they can}} be drawn on the same vertex set V in the Euclidean plane without crossings between edges of the same graph. Fixed edges are common edges between graphs that share the same simple curve in the simultaneous drawing. Determining in polynomial time which pairs of graphs share {{a simultaneous}} embedding with fixed edges (SEFE) has been open. We give a necessary and sufficient condition for when a pair of graphs whose union is homeomorphic to K 5 or K 3, 3 can have an SEFE. This allows us to determine which (<b>outer)</b> planar <b>graphs</b> always an SEFE with any other (<b>outer)</b> planar <b>graphs.</b> In both cases, we provide efficient algorithms to compute the simultaneous drawings. Finally, we provide an linear-time decision algorithm for deciding whether a pair of biconnected outerplanar graphs has an SEFE. ...|$|R
40|$|In {{this paper}} we present optimum {{interval}} routing algorithms for message passing networks that have topological structure defined by kcaterpillars and maximal <b>outer</b> planar <b>graphs</b> (MOPS). The routing algorithms are optimum {{in the sense}} that the route built between any sourcedestination pair is of minimum length and that the routing function executing at each node has time complexity which is linear in the size of the network...|$|R
40|$|A semi strong outer mod sum {{labeling}} of a graph G is an injective mapping f: V (G) → Z + {{with an additional}} property that for each vertex v of G, there exist vertices w 1, w 2 in V (G) such that f(w 1) = ∑ u∈N(v) f(u) and f(v) =∑u∈N(w 2) f(u), where both the sums are taken under addition modulo m for some positive integer m. A graph G which admits a semi strong outer mod sum labeling is called a semi strong <b>outer</b> mod sum <b>graph.</b> In this paper we show that the Paths Pn for all n = 3, the Cycle C 6, and the Complete graphs Kn for all n = 3 are semi strong <b>outer</b> mod sum <b>graphs...</b>|$|R
40|$|A <b>graph</b> is <b>outer</b> 1 -planar if it admits {{a drawing}} where each vertex {{is on the}} outer face and each edge is crossed by at most another edge. <b>Outer</b> 1 -planar <b>graphs</b> are a {{superclass}} of the outerplanar graphs and a subclass of the partial 3 -trees. We show that an <b>outer</b> 1 -planar <b>graph</b> G of bounded degree Δ admits an outer 1 -planar straight-line drawing that uses O(Δ) different slopes, which extends a previous result by Knauer et al. about the planar slope number of outerplanar graphs (CGTA, 2014). We also show that O(Δ 2) slopes suffice to construct a crossing-free straight-line drawing of G; the best known upper bound on the planar slope number of planar partial 3 -trees of bounded degree Δ is O(Δ 5) and is proved by Jelínek et al. (Graphs and Combinatorics, 2013) ...|$|R
40|$|Given a {{connected}} outerplanar graph G of pathwidth p, we give an algorithm to add {{edges to}} G {{to get a}} supergraph of G, which is 2 -vertex-connected, outerplanar and of pathwidth O(p). This settles an open problem raised by Biedl [1], {{in the context of}} computing minimum height planar straight line drawings of outerplanar graphs, with their vertices placed on a two dimensional grid. In conjunction with the result of this paper, the constant factor approximation algorithm for this problem obtained by Biedl [1] for 2 -vertex-connected outerplanar graphs will work for all <b>outer</b> planar <b>graphs...</b>|$|R
40|$|Abstract: Blade screw {{propeller}} {{is used as}} the pushing and squeezing machine which is often used in the liquid separator for software materials. The core part of blade screw is stainless steel material with wide tooth, thin wall and other characteristics, and its processing method {{is different from the}} cylindrical surface spiral groove processing. Usually, its machining process is based on a certain forming technology to produce spiral leaf firstly, then welding leaves on the shaft. The cylindrical blade screw in test equipment adopts triangle method to calculate the blank dimensions. Variable cross section of the <b>outer</b> ring <b>graph</b> is realized by using the polar radius equation drawing in the drawing software. 1...|$|R
40|$|This work {{proposes a}} visual grammar-based {{approach}} to support web designers during {{the analysis and}} design phases of complex hypermedia structures. The hypermedia is defined through a formal visual language at two abstraction levels: the hypermedia <b>graph</b> <b>outer</b> and inner structures. The model {{makes it possible to}} verify the correctness of hypermedia structures and to perform structural analysis for the description and the evaluation of their complexity. A visual environment for hypermedia structures is also presented...|$|R
40|$|In this paper, an {{automatic}} approach for the generation and regularization of 3 D roof boundaries in Airborne Laser scanner data is presented. The workflow is commenced by segmentation {{of the point}} clouds. A classification step and a rule based roof extraction step are followed the planar segmentation. Refinement on roof extraction is performed {{in order to minimize}} the effect due to urban vegetation. Boundary points of the connected roof planes are extracted and fitted series of straight line segments. Each line is then regularized with respect to the dominant building orientation. We introduce the usage of cycle graphs for the best use of topological information. Ridge-lines and step-edges are basically extracted to recognise correct topological relationships among the roof faces. Inner roof corners are geometrically fitted based on the closed cycle <b>graphs.</b> <b>Outer</b> boundary is reconstructed using the same concept but with the <b>outer</b> most cycle <b>graph.</b> In here, union of the sub cycles is taken. Intermediate line segments (outer bounds) are intersected to reconstruct the roof eave lines. Two test areas with two different point densities are tested with the developed approach. Performance analysis of the test results is provided to demonstrate the applicability of the method...|$|R
3000|$|The first step, the sequence-to-structure map [54], is well {{approximated}} by {{the usual}} RNA folding algorithms. RNA molecules form secondary structure by folding back onto themselves to form double helical regions interspersed with unpaired regions termed [...] "loops". The resulting secondary structure can be rep-resented by an <b>outer</b> planar <b>graph</b> with nucleotides as vertices and base pairs as edges. A well established energy model [55], with parameters derived from melting experiments, assigns a free energy to every possible secondary structure. The simplest approach to RNA folding consists then of selecting the structure with minimal free {{energy from the}} combinatorial set of all possible structures. Fortunately, this task can be solved efficiently by dynamic programming algorithms that run in time proportional to the cube of the sequence length. Here we use the folding routines as implemented in the Vienna RNA package[56 – 58].|$|R
40|$|We {{consider}} several {{classes of}} intersection graphs of line segments {{in the plane}} and prove new equality and separation results between those classes. In particular, we show that: (1) intersection graphs of grounded segments and intersection graphs of downward rays form the same graph class, (2) not every intersection graph of rays is an intersection graph of downward rays, and (3) not every intersection graph of rays is an <b>outer</b> segment <b>graph.</b> The first result answers an open problem posed by Cabello and Jejčič. The third result confirms a conjecture by Cabello. We thereby completely elucidate the remaining open questions on the containment relations between these classes of segment graphs. We further characterize {{the complexity of the}} recognition problems for the classes of outer segment, grounded segment, and ray intersection graphs. We prove that these recognition problems are complete for the existential theory of the reals. This holds even if a 1 -string realization is given as additional input. Comment: 16 pages 12 Figure...|$|R
40|$|A semi strong outer mod sum {{labeling}} of a graph $G$ is an injective mapping$f:V(G) rightarrow Z^+$ {{with an additional}} property that foreach vertex $v$ of $G$, there exist vertices $w_ 1 $, $w_ 2 $ in$V(G) $ such that $f(w_ 1) = sum_{uin N(v) }f(u) $ and $f(v) =sum_{uin N(w_ 2) }f(u) $, where both the sums are taken underaddition modulo $m$ for some positive integer $m$. A graph $G$which admits a semi strong outer mod sum labeling is called asemi strong <b>outer</b> mod sum <b>graph.</b> In this paper we show that thePaths $P_n$ for all $n neq 3 $, the Cycle $C_ 6 $, and theComplete graphs $K_n$ for all $nne 3 $ are semi strong outermod sum graphs...|$|R
40|$|AbstractAn axis-parallel b-dimensional box is a Cartesian product R 1 ×R 2 ×⋯×Rb {{where each}} Ri (for 1 ≤i≤b) is a closed {{interval}} {{of the form}} [ai,bi] on the real line. The boxicity of any graph G, box(G) is the minimum positive integer b such that G can be represented as the intersection graph of axis-parallel b-dimensional boxes. A b-dimensional cube is a Cartesian product R 1 ×R 2 ×⋯×Rb, where each Ri (for 1 ≤i≤b) is a closed interval of the form [ai,ai+ 1] on the real line. When the boxes are restricted to be axis-parallel cubes in b-dimension, the minimum dimension b required to represent the graph is called the cubicity of the graph (denoted by cub(G)). In this paper we prove that cub(G) ≤⌈log 2 n⌉box(G), where n {{is the number of}} vertices in the graph. We also show that this upper bound is tight. Some immediate consequences of the above result are listed below: 1. Planar graphs have cubicity at most 3 ⌈log 2 n⌉. 2. <b>Outer</b> planar <b>graphs</b> have cubicity at most 2 ⌈log 2 n⌉. 3. Any graph of treewidth tw has cubicity at most (tw+ 2) ⌈log 2 n⌉. Thus, chordal graphs have cubicity at most (ω+ 1) ⌈log 2 n⌉ and circular arc graphs have cubicity at most (2 ω+ 1) ⌈log 2 n⌉, where ω is the clique number. The above upper bounds are tight, but for small constant factors...|$|R
40|$|A bar 1 -visibility {{drawing of}} a graph $G$ is a drawing of $G$ where each vertex is drawn as a {{horizontal}} line segment called a bar, each edge is drawn as a vertical line segment where the vertical line segment representing an edge must connect the horizontal line segments representing the end vertices and a vertical line segment corresponding to an edge intersects at most one bar which is not an end point of the edge. A graph $G$ is bar 1 -visible if $G$ has a bar 1 -visibility drawing. A graph $G$ is 1 -planar if $G$ has a drawing in a 2 -dimensional plane such that an edge crosses at most one other edge. In this paper we give linear-time algorithms to find bar 1 -visibility drawings of diagonal grid <b>graphs</b> and maximal <b>outer</b> 1 -planar <b>graphs.</b> We also show that recursive quadrangle 1 -planar graphs and pseudo double wheel 1 -planar graphs are bar 1 -visible graphs. Comment: 15 pages, 9 figure...|$|R
40|$|An axis-parallel b-dimensional box is a Cartesian product R- 1 x R- 2 x [...] . x R-b {{where each}} R-i (for 1 <= i <= b) is a closed {{interval}} {{of the form}} [a(i), b(i) ] on the real line. The boxicity of any graph G, box(G) is the minimum positive integer b such that G can be represented as the intersection graph of axis-parallel b-dimensional boxes. A b-dimensional cube is a Cartesian product R- 1 x R- 2 x [...] . x R-b, where each R-i (for 1 <= i <= b) is a closed interval of the form [a(i), a(i) + 1] on the real line. When the boxes are restricted to be axis-parallel cubes in b-dimension, the minimum dimension b required to represent the graph is called the cubicity of the graph (denoted by cub(G)). In this paper we prove that cub(G) <= inverted right perpendicularlog(2) ninverted left perpendicular box(G), where n {{is the number of}} vertices in the graph. We also show that this upper bound is tight. Some immediate consequences of the above result are listed below: 1. Planar graphs have cubicity at most 3 inverted right perpendicularlog(2) ninvereted left perpendicular. 2. <b>Outer</b> planar <b>graphs</b> have cubicity at most 2 inverted right perpendicularlog(2) ninverted left perpendicular. 3. Any graph of treewidth tw has cubicity at most (tw + 2) inverted right perpendicularlog(2) ninverted left perpendicular. Thus, chordal graphs have cubicity at most (omega + 1) inverted right erpendicularlog(2) ninverted left perpendicular and circular arc graphs have cubicity at most (2 omega + 1) inverted right perpendicularlog(2) ninverted left perpendicular, where omega is the clique number. ...|$|R

