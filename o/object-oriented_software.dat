1524|339|Public
500|$|Escher's fame {{in popular}} culture grew when his work was {{featured}} by Martin Gardner in his April 1966 Mathematical Games column in Scientific American. [...] Escher's works have appeared on many album covers including The Scaffold's 1969 L the P with Ascending and Descending; Mott the Hoople's eponymous 1969 record with Reptiles, Beaver & Krause's 1970 In A Wild Sanctuary with Three Worlds; and Mandrake Memorial's 1970 Puzzle with House of Stairs and (inside) Curl Up. His works have similarly been used on many book covers, including some editions of Edwin Abbott's Flatland which used Three Spheres; E. H. Gombrich's Meditations on a Hobby Horse with Horseman; Pamela Hall's Heads You Lose with Plane Filling 1; Patrick A. Horton's Mastering the Power of Story with Drawing Hands; Erich Gamma et al.'s Design Patterns: Elements of Reusable <b>Object-oriented</b> <b>software</b> with Swans; and Arthur Markman's Knowledge Representation with Reptiles. The [...] "World of Escher" [...] markets posters, neckties, T-shirts, and jigsaw puzzles of Escher's artworks. Both Austria and the Netherlands have issued postage stamps commemorating the artist and his works.|$|E
2500|$|The [...] "Safe Exception Handling principle" [...] as {{introduced}} by Bertrand Meyer in <b>Object-Oriented</b> <b>Software</b> Construction then holds {{that there are}} only two meaningful ways a routine can react when an exception occurs: ...|$|E
2500|$|NeXT {{workstations}} {{were first}} released in 1990 and priced at [...] Like the Apple Lisa, the NeXT workstation was technologically advanced and {{designed for the}} education sector, but was largely dismissed as cost-prohibitive for educational institutions. The NeXT workstation was known for its technical strengths, chief among them its <b>object-oriented</b> <b>software</b> development system. Jobs marketed NeXT products to the financial, scientific, and academic community, highlighting its innovative, experimental new technologies, such as the Mach kernel, the digital signal processor chip, and the built-in Ethernet port. Making use of a NeXT computer, English computer scientist Tim Berners-Lee invented the World Wide Web in 1989 at CERN in Switzerland.|$|E
50|$|The company's main product, Simio, is <b>object-oriented</b> {{simulation}} <b>software.</b>|$|R
5000|$|Grady Booch, for {{contributions}} to <b>object-oriented</b> programming, <b>software</b> architecture, and modeling. Grady Booch, wrote Dr. Dobb's editor-at-large Michael Swaine, [...] "is someone {{whose work is}} familiar to every serious programmer." [...] Swaine noted that Booch had achieved international recognition for his contributions to the software development process and for significant achievements in <b>object-oriented</b> programming, <b>software</b> architecture, and modeling.|$|R
5000|$|First {{general-purpose}} <b>object-oriented</b> {{optimal control}} <b>software</b> ...|$|R
5000|$|Bertrand Meyer, <b>Object-Oriented</b> <b>Software</b> Construction (first edition only).|$|E
5000|$|... #Subtitle level 2: Gray-box testing {{assumptions}} for <b>object-oriented</b> <b>software</b> ...|$|E
50|$|Develop students' {{skill in}} <b>object-oriented</b> <b>software</b> design {{methods and data}} {{management}} systems.|$|E
40|$|It is {{well-known}} that uncontrolled change to software {{can lead to}} increasing evolution costs caused by deteriorating structure and compromised system qualities. For complex systems, the need to carefully manage system evolution is critical. In this paper we outline an approach to managing evolution of <b>object-oriented</b> (OO) <b>software.</b> The approach {{is based on a}} goal-directed, cyclic process, in which OO models are transformed and quantitatively evaluated in each cycle. Evaluation criteria guide developers in choosing between alternative transformations in each cycle. The process, transformations, and evaluation techniques can be used to develop systems from a set of baseline models. Keywords Design transformations, design evaluation, <b>object-oriented</b> design, <b>software</b> evolution 1...|$|R
40|$|This paper {{presents}} a Reuse based Software Development Environment that provides support to Component-Based software Development (CBD) within certain domains, named Odyssey. <b>Object-oriented</b> frameworks, <b>software</b> architectures, artificial intelligence techniques, domain engineering,, and mediators {{are some of}} the technologies used by Odyssey...|$|R
40|$|Object-Oriented {{technologies}} are becoming pervasive in many software development organizations. However, many methods, processes, tools, or notations {{are being used}} without thorough evaluation. Empirical studies aim at investigating the performance of such technologies {{and the quality of}} the resulting <b>object-oriented</b> (OO) <b>software</b> products. In othe...|$|R
5000|$|Bertrand Meyer: <b>Object-Oriented</b> <b>Software</b> Construction, Prentice Hall: first edition, 1988; second edition, 1997.|$|E
50|$|<b>Object-oriented</b> <b>software</b> {{engineering}} (commonly {{known by}} acronym OOSE) is an object-modeling language and methodology.|$|E
5000|$|It was {{documented}} in the 1992 book <b>Object-Oriented</b> <b>Software</b> Engineering: A Use Case Driven Approach, ...|$|E
40|$|This paper {{makes two}} {{contributions}} to the development and evaluation of <b>object-oriented</b> communication <b>software.</b> First, it reports performance results from benchmarking several network programming mechanisms (such as sockets and CORBA) on Ethernet and ATM networks. These results illustrate that developers of high-bandwidth, low-delay applications (such as interactive medical imaging or teleconferencing) must evaluate their performance requirements and the efficiency of their communication infrastructure carefully before adopting a distributed object solution. Second, the paper describes the software architecture and design principles of the ACE object-oriented network programming components. These components encapsulate UNIX and Windows NT network programming interfaces (such as sockets, TLI, and named pipes) with C++ wrappers. Developers of <b>object-oriented</b> communication <b>software</b> have traditionally {{had to choose between}} high-performance, lower-level interfaces provided by sockets or TLI [...] ...|$|R
40|$|A modular {{integrated}} {{probabilistic model}} of software reliability estimation and an algorithm of its application for estimation of software reliability with different architecture such as multilevel, multiversion, distributed and object-oriented ones {{are presented in}} the article. The modification of this model is given there for the <b>object-oriented</b> multiversion <b>software</b> with the distributed architecture. The procedure of its estimation is perfected {{to improve the quality}} of the reliability prediction. The description of the developed program system based on the modular integrated probabilistic model of reliability estimation of the <b>object-oriented</b> multiversion <b>software</b> with the distributed architecture is presented in the article. The analysis of relation of software reliability parameters to the component count, conditional and unconditional probability of the failure appearance in components and temporary components characteristics is done there as well...|$|R
50|$|Reich Technologies is an {{international}} group of companies, providing a coordinated suite of products and services to support <b>object-oriented</b> (OO) <b>software</b> development in large corporations. With a presence throughout Europe and North America, Reich Technologies occupies leading positions in the world markets for integrated OO CASE tools, fine-grained object repositories and OO team programming environments.|$|R
5000|$|The IDEF4 method multi-dimensional {{approach}} to <b>object-oriented</b> <b>software</b> system design {{consists of the}} following items: ...|$|E
5000|$|Ralph Johnson, Research Associate Professor and {{co-author}} of Design Patterns: Elements of Reusable <b>Object-Oriented</b> <b>Software</b> ...|$|E
5000|$|CORBA, {{an older}} component-based system for <b>object-oriented</b> <b>software</b> {{which is now}} rarely used, for various reasons ...|$|E
50|$|Alexander's Notes on the Synthesis of Form {{was said}} to be {{required}} reading for researchers in computer science throughout the 1960s. It had an influence in the 1960s and 1970s on programming language design, modular programming, <b>object-oriented</b> programming, <b>software</b> engineering and other design methodologies. Alexander's mathematical concepts and orientation were similar to Edsger Dijkstra's influential A Discipline of Programming.|$|R
40|$|Execution time {{analysis}} {{is an essential}} verification activity during real-time system development. This activity can be performed dynamically through optimization-based analysis techniques such as evolutionary testing, and it is already successfully used under the traditional procedural development paradigm. Our work represents an initial attempt in making evolutionary testing also applicable under the more recent <b>object-oriented,</b> component-based <b>software</b> development paradigm...|$|R
40|$|This <b>object-oriented</b> C++ <b>software</b> tool {{provides}} a simple demonstration {{of how to}} use the KMC_Lattice package to create a lattice kinetic Monte Carlo simulation. This example shows how to extend the base classes in the KMC_Lattice package to simulate exciton creation, diffusion, and decay in an organic semiconducting material. See the readme file for more information...|$|R
5000|$|Rocket {{propulsion}} and gasdynamics, {{high power}} microwaves and directed energy, <b>object-oriented</b> <b>software</b> engineering, space mission design ...|$|E
5000|$|Design Patterns: Elements of Reusable <b>Object-Oriented</b> <b>Software</b> by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides ...|$|E
50|$|Objectory is an {{object-oriented}} methodology mostly {{created by}} Ivar Jacobson, who has greatly contributed to <b>object-oriented</b> <b>software</b> engineering.|$|E
50|$|Object-oriented {{modeling}} is {{an approach}} to modeling an application that is used {{at the beginning of}} the software life cycle when using an <b>object-oriented</b> approach to <b>software</b> development.|$|R
50|$|Software Engineering: Mathematical Modeling & Optimization, Database Principles & Applications, <b>Object-oriented</b> Program Design, <b>Software</b> Procedure Management, Software System Structure, Linux Analysis, Database & Data Studies, Software Development Model.|$|R
5000|$|SCORE is a mixed-language set of {{integrated}} tools for safety-critical, <b>object-oriented,</b> real-time embedded <b>software</b> applications, supporting Ada, C, and Embedded C++ applications {{for a variety}} of embedded architectures.|$|R
5000|$|Bernd Bruegge, Allen Dutoit: [...] <b>Object-Oriented</b> <b>Software</b> Engineering: Using UML, Patterns and Java (Third Edition). Prentice Hall, 2009[...]|$|E
50|$|The {{application}} {{areas of}} his research include <b>object-oriented</b> <b>software,</b> services computing, pervasive computing, concurrent systems, imaging software, and numerical programs.|$|E
5000|$|... 1994. Booktwo of {{object-oriented}} knowledge : {{the working}} object : <b>object-oriented</b> <b>software</b> engineering : methods and management. With J.M. Edwards.|$|E
40|$|In <b>object-oriented</b> (OO) <b>software</b> engineering, objects, {{attributes}} and processes are often specified in natural language descriptions. Following a precise methodology, we here {{look at the}} analysis phase of OO software engineering and show that robust computational linguistic tools initially developed for knowledge extraction from text can provide useful support during this initial but crucial phase of any OO software development project. 1...|$|R
50|$|Festi {{is created}} {{with use of}} <b>object-oriented</b> {{technology}} of <b>software</b> development that strongly complicates researches by a method of the reverse engineering and does a bot easily ported for other operating systems.|$|R
40|$|<b>Object-oriented</b> (OO) <b>software</b> {{engineering}} {{techniques are}} often used with programming languages, but they also apply to relational databases. OO techniques are not only helpful for determining database structure, but also for designing stored procedure code. In fact, we were surprised by {{the magnitude of the}} stored procedure benefits. OO techniques boost development productivity as well as the quality, clarity, and maintainability of the resulting code. 1...|$|R
