9|14|Public
50|$|This {{follows the}} same rules as the {{parenthesis}} version, with <b>opening</b> <b>parenthesis</b> replaced with a Sheffer stroke and the (redundant) closing parenthesis removed.|$|E
50|$|The function-like macro {{declaration}} {{must not}} have any whitespace between the identifier and the first, <b>opening,</b> <b>parenthesis.</b> If whitespace is present, the macro will be interpreted as object-like with everything starting from the first parenthesis added to the token list.|$|E
50|$|When an infix {{expression}} is printed, an {{opening and closing}} parenthesis must be added {{at the beginning and}} ending of each expression. As every subtree represents a subexpression, an <b>opening</b> <b>parenthesis</b> is printed at its start and the closing parenthesis is printed after processing all of its children.|$|E
5000|$|... {{syntactically}} expressive - when UDC {{codes are}} combined, {{the sequence of}} digits is interrupted by a precise type of punctuation sign which indicates that the expression {{is a combination of}} classes rather than a simple class e.g. the colon in 34:32 indicates that there are two distinct notational elements: 34 Law. Jurisprudence and 32 Politics; the closing and <b>opening</b> <b>parentheses</b> and double quotes in the following code 913(574.22)"19"(084.3) indicate four separate notational elements: 913 Regional geography, (574.22) North Kazakhstan (Soltüstik Qazaqstan); [...] "19" [...] 20th century and (084.3) Maps (document form) ...|$|R
5000|$|Regular {{expressions}} and the finite-state machines they generate are not {{powerful enough to}} handle recursive patterns, such as [...] "n <b>opening</b> <b>parentheses,</b> followed by a statement, followed by n closing parentheses." [...] They are unable to keep count, and verify that n is the same on both sides, unless a finite set of permissible values exists for n. It takes a full parser to recognize such patterns in their full generality. A parser can push parentheses on a stack {{and then try to}} pop them off and see if the stack is empty at the end (see example in the Structure and Interpretation of Computer Programs book).|$|R
2500|$|... is {{used for}} both <b>opening</b> and closing <b>parentheses.</b> Its {{placement}} relative to spaces and other characters determines its interpretation.|$|R
5000|$|The song is {{an example}} of both the classic paulista samba, the variant of samba {{developed}} in São Paulo, and the use of a composition structure known as [...] "samba-de-breque" [...] (literally brake samba), where the instrumental accompaniment stops suddenly, giving room to a brief commentary in spoken word about the lyric subject by the lead singer, very much like <b>opening</b> <b>parenthesis.</b>|$|E
5000|$|VIQR uses [...] or [...] for the Vietnamese letter Đ, and [...] for the Vietnamese letter đ. To type certain {{punctuation}} marks (namely, the period, question mark, apostrophe, forward slash, <b>opening</b> <b>parenthesis,</b> or tilde) directly after most Vietnamese words, a backslash (...) must be typed directly before the punctuation mark, {{so that it}} will not be interpreted as a diacritical mark. For example: ...|$|E
50|$|If the parenthetical quotes {{one or more}} full sentences, {{it begins}} with a capital letter and end with punctuation: See Committee Note to Interim Rule 8001(f) ("Given the short time limit to file the {{petition}} with the circuit clerk, subdivision (f)(1) provides that entry of a certification on the docket does not occur until an effective appeal is taken under Rule 8003(a) or (b)."). Insert a space before the <b>opening</b> <b>parenthesis</b> of the explanatory parenthetical. If the parenthetical does not contain a complete sentence, the writer should not place final punctuation (such as a period) inside it.|$|E
2500|$|Punctuation: New <b>opening</b> {{and closing}} <b>parentheses</b> [...] and [...] (which {{previously}} were ambiguous). Various brackets, quotation marks, dashes, and other punctuation (including notably mathematical and arithmetical notations {{such as the}} equals sign) have been added, so that printed text can be reproduced less ambiguously.|$|R
50|$|Due to the {{potential}} accumulation of parentheses in only one code line, editing and error detecting (or debugging) can became somehow awkward. That is why modern programming environments -as well as spreadsheet programs- highlight in bold type the pair corresponding to the current editing position. The (automatic) balancing control of the <b>opening</b> and closing <b>parenthesis</b> known as brace match checking.|$|R
2500|$|Braille {{punctuation}} {{is somewhat}} variable, {{just as there}} is variation in printed English between curly and straight quotation marks. They fail to make some distinctions found in print. For example, both <b>opening</b> and closing <b>parentheses</b> are written , with spacing used to distinguish. On the other hand, braille makes several useful distinctions which print fails to make: The period [...] is different from the decimal point , and the apostrophe [...] and ditto mark [...] are distinct from the single and double quotation marks.|$|R
5000|$|SKILL programmers have {{a choice}} of {{expression}} syntaxes. Traditional Lisp syntax such as [...] can be mixed with C-like syntax such as [...] White space between the function name and the <b>opening</b> <b>parenthesis,</b> as in [...] is also allowed but has a different meaning. For example, [...] or equivalently [...] has the traditional lisp meaning of a call to the list function with two operands car and (mylist), the first of which is a variable reference, and the second a call to the mylist function. Usually this is not what the beginner programmer intended. Thus, SKILL novices usually incorrectly think of car (mylist) as a syntax error.|$|E
5000|$|A few notions from formal {{language}} theory are in order. A context-free language is regular, if {{can be described}} by a regular expression, or, equivalently, if it is accepted by a finite automaton. A homomorphism {{is based on a}} function [...] which maps symbols from an alphabet [...] to words over another alphabet If the domain of this function is extended to words over [...] in the natural way, by letting [...] for all words [...] and , this yields a homomorphism [...] A matched alphabet [...] is an alphabet with two equal-sized sets; it is convenient {{to think of it as}} a set of parentheses types, where [...] contains the <b>opening</b> <b>parenthesis</b> symbols, whereas the symbols in [...] contains the closing parenthesis symbols. For a matched alphabet , the Dyck language [...] is given bywords that are well-nested parentheses over [...]|$|E
40|$|About using {{functions}} to calculate values Functions are predefined formulas that perform calculations by using specific values, called arguments, {{in a particular}} order, or structure. For example, the SUM function adds values or ranges of cells, and the PMT function calculates the loan payments based on an interest rate, {{the length of the}} loan, and the principal amount of the loan. Arguments can be numbers, text, logical values such as TRUE or FALSE, arrays, error values such as #N/A, or cell references. The argument you designate must produce a valid value for that argument. Arguments can also be constants, formulas, or other functions. The structure of a function begins with the function name, followed by an <b>opening</b> <b>parenthesis,</b> the arguments for the function separated by commas, and a closing parenthesis. If the function starts a formula, type an equal sign (=) before the function name. Date and Time NOW() returns serial number of current date and time formats cell to display current date and time TODAY() returns serial number of current date formats cell to display current date YEAR(serial_number) returns year corresponding to date (serial number) MONTH(serial_number) returns month corresponding to date (serial number) DAY(serial_number) returns day corresponding to date (serial number) HOUR(serial_number) returns hour corresponding to date (serial number) MINUTE(serial_number) returns minute corresponding to date (serial number...|$|E
50|$|The x, y and z {{are local}} variables. The enter keyword {{specifies}} the input parameters to the pattern, while the exit keyword specifies {{the result of}} the function. Between the two, the do keyword prefixes the sequence of operations to be made. The conditional block is delimited by (if and if), that is the if keyword becomes part of the <b>opening</b> and closing <b>parenthesis.</b> Truth is checked through // True within an if block. Finally, the assignment operator -> assigns the value on its left hand side to the variable on its right hand side.|$|R
50|$|In mathematics, an associahedron Kn is an (n &minus; 2)-dimensional convex polytope {{in which}} each vertex {{corresponds}} to a way of correctly inserting <b>opening</b> and closing <b>parentheses</b> in a word of n letters and the edges correspond to single application of the associativity rule. Equivalently, the vertices of an associahedron correspond to the triangulations of a regular polygon with n + 1 sides and the edges correspond to edge flips in which a single diagonal is removed from a triangulation and replaced by a different diagonal. Associahedra are also called Stasheff polytopes after the work of Jim Stasheff, who rediscovered them in the early 1960s after earlier work on them by Dov Tamari.|$|R
40|$|Nested {{parentheses}} are {{forms in}} an algebra which define orders of evaluations. A class of well-formed sets of associated <b>opening</b> and closing <b>parentheses</b> is well studied {{in conjunction with}} Dyck paths and Catalan numbers. Nested parentheses also represent cuts through circles on a line. These become topologies of non-intersecting circles in the plane if the underlying algebra is commutative. This paper generalizes the concept and answers quantitatively - as recurrences and generating functions of matching rooted forests - the questions: how many different topologies of nested circles exist in the plane if (i) pairs of circles may intersect, or (ii) even triples of circles may intersect. That analysis is driven by examining the symmetry properties of the inner regions of the fundamental type(s) of the intersecting pairs and triples. Comment: Inserted section 2. 2 and three figures, and updated OEIS cross-references in version...|$|R
30|$|Before {{starting}} the technical discussion, {{it is worth}} <b>opening</b> a <b>parenthesis</b> to clarify {{the relationships between the}} decision-support methodology we propose in this paper and “standard” decision analytics methodologies. In this paper, we neither directly apply statistical methods, nor do we propose cost/risk – utility/benefit analysis techniques. Indeed, the input of our approach is not a (big) set of data, but two (or more) CPGs, and a medical ontology, i.e., three (or more) different sets of knowledge. Since guidelines and ontologies are usually quite large bodies of knowledge, a “flat” analysis of it would be difficult, if not totally unfeasible, to users. We thus propose a new decision support methodology, based on multiple levels of abstraction on medical knowledge, to deal with co-morbid patients. In particular, we focus on developing software tools and methodologies to support the analysis of interactions between CPGs, considering also ontological knowledge. Since CPGs and ontologies are pieces of knowledge, our methodology is necessarily knowledge-based (as opposed to statistical-based methodologies). Nevertheless, {{it is important to remember}} that statistical methods play a fundamental role in the CPG context. As a matter of fact, CPGs are grounded on the principles of evidence-based medicine, which dictates that statistical and decision analytics methods must be applied on clinical trials as a necessary preliminary step to the identification and representation of the evidence-based recommendations they contain. Indeed, CPGs could thus be seen, informally speaking, as the symbolic representation of best-practice patterns of clinical processes built on the basis of the outcome of statistical analytics on clinical trials.|$|R
5000|$|The Gregg Reference Manual is a style manual {{intended}} for business professionals. The 1985 edition simply indicated that two spaces {{were to be}} used following terminal punctuation. The most recent edition, published in 2005, provides detailed guidance for sentence spacing. Its general guidance indicates that, [...] "The standard for proportional fonts {{has always been the}} same: use only one space between the period and the start of the next sentence" [...] and [...] "now that the standards of desktop publishing predominate, the use of only one space after the period is quite acceptable with monospace fonts." [...] However, although the author states that one space is correct in draft manuscripts for typesetting and most other instances, certain specific cases might benefit from additional space between sentences. For example, [...] "As a general rule, use one space {{at the end of a}} sentence, but switch to two spaces whenever you feel a stronger visual break between sentences is needed." [...] The manual identifies specific instances when only one space is to be used between sentences such as [...] "If you are preparing manuscript on a computer and the file will be used for typesetting, use only one space and ignore the issue of visual appearance." [...] The manual indicates that writers should also [...] "Use only one space if the text will have justified margins," [...] and [...] "If the manuscript has already been typed with two spaces at the end of every sentence, use the Replace function to change two spaces to one space throughout." [...] The author adds the caveat that in certain instances a writer may want to use two spaces between sentences. The examples given are: when one space [...] "may not provide a clear visual break between sentences", if an abbreviation is used at the end of a sentence, or when some very small proportional fonts (such as 10-point Times New Roman) are used. The manual clearly places an emphasis on the use of white space to create a pleasing document by noting spacing rules that differ from current norms such as the use of two spaces before <b>opening</b> a <b>parenthesis,</b> after closing quotation marks, and after opening single quotation marks inside of sentences.|$|R

