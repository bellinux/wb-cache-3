0|84|Public
5000|$|A message {{queueing}} service aims {{to eliminate}} the traditional overhead associated with <b>operating</b> in-house <b>messaging</b> infrastructures. These <b>operating</b> overheads include: ...|$|R
5000|$|In 2006, {{the village}} {{installed}} a digital marquee in the Village Square to replace an aging and limited, manually <b>operated</b> <b>message</b> board. The LED (light emitting diode) marquee, operates 24 hours a day, remotely programmed {{from a computer}} in the village hall. As well as text it can provide interactive graphics, providing messages free of charge to any local organization or [...] "public good" [...] displays such as changes in trash pickup, public hearings and Amber Alerts.|$|R
50|$|For {{over five}} years, Fametracker also <b>operated</b> {{extensive}} <b>message</b> boards, which were frequented {{at one point}} by over 100 posters. The message boards closed in March 2005 when the moderators {{could no longer afford}} the excessive bandwidth.|$|R
5000|$|USM (User-based Security Model) {{provides}} authentication {{and privacy}} (encryption) functions and <b>operates</b> at the <b>message</b> level.|$|R
5000|$|A {{transmitter}} that <b>operates</b> on the <b>message</b> {{to create}} a signal which can be sent through a channel ...|$|R
50|$|Its {{subsidiaries}} in Japan <b>operate</b> the Line <b>messaging</b> application {{as well as}} the Japanese {{versions of}} Naver and Hangame.|$|R
50|$|The term {{multi-streaming}} {{refers to}} the capability of SCTP to transmit several independent streams of chunks in parallel, for example transmitting web page images together with the web page text. In essence, it involves bundling several connections into a single SCTP association, <b>operating</b> on <b>messages</b> (or chunks) rather than bytes.|$|R
50|$|The WS-I Basic Profile (official {{abbreviation}} is BP), a specification {{from the}} Web Services Interoperability industry consortium (WS-I), provides interoperability guidance for core Web Services specifications such as SOAP, WSDL, and UDDI. The profile uses Web Services Description Language (WSDL) {{to enable the}} description of services as sets of endpoints <b>operating</b> on <b>messages.</b>|$|R
50|$|The {{design for}} the next {{generation}} of Pocket FMs will include GSM to allow them to be remotely <b>operated</b> by text <b>message,</b> a precaution which further removes operators from the broadcast itself.|$|R
25|$|Once {{the first}} two or three digits of the call were registered, the sender called in a decoder, which took the digits as input, and {{returned}} the District and Office brush and group locations for the sender. The decoder also determined the proper rate at which to <b>operate</b> the <b>message</b> register and gave this information to the sender, which set this rate for the call.|$|R
40|$|Factor graphs are {{graphical}} {{models with}} origins in coding theory. The sum-product and the maxproduct algorithms, which <b>operate</b> by <b>message</b> passing on a factor graph, subsume {{a great variety}} of algorithms in coding, signal processing, and artificial intelligence. This paper aims at extending the field of possible applications to dynamical electrical networks. Interestingly, the resulting factor graphs have a structure very much akin to a Kalman filter...|$|R
50|$|Once {{the first}} two or three digits of the call were registered, the sender called in a decoder, which took the digits as input, and {{returned}} the District and Office brush and group locations for the sender. The decoder also determined the proper rate at which to <b>operate</b> the <b>message</b> register and gave this information to the sender, which set this rate for the call.|$|R
50|$|A trick banner is {{a banner}} ad where the ad copy imitates some screen element users {{commonly}} encounter, {{such as an}} <b>operating</b> system <b>message</b> or popular application message, to induce ad clicks. Trick banners typically do not mention the advertiser in the initial ad, and thus they are a form of bait-and-switch. Trick banners commonly attract a higher-than-average click-through rate, but tricked users may resent the advertiser for deceiving them.|$|R
40|$|Generation of WSDL from code. l Tools {{that support}} WSDL, and other resources. l References. 2 Definitions of WSDL (taken from the specification) l "A set of definitions". l "An XML format for {{describing}} network {{services as a}} set of endpoints <b>operating</b> on <b>messages</b> containing either document oriented or procedure oriented information". WSDL IS XML l However it is assumed that the audience know enough XML to follow along...|$|R
50|$|The {{operating}} system for Suprenum-1 was PEACE (Process Execution And Communication Environment), a new {{operating system}} developed {{specifically for the}} project. PEACE was designed from the start to support efficient low-latency message passing as weIl as multitasking. While PEACE {{appeared to be a}} satisfactory <b>operating</b> system, <b>message</b> latency never was as low as desired. Typical latency overheads are of order 1 millisecond. While asynchronous communication was a design goal for SUPRENUM, we were never able to overlap communication with computation on Suprenum-1 due to a mailbox conflict within PEACE.|$|R
5000|$|Shared Resources High Frequency Radio Program (SHARES) - The SHARES HF Radio Program brings {{together}} {{the assets of}} over 1,000 HF radio stations worldwide to voluntarily pass emergency messages when normal communications are destroyed or unavailable. SHARES uses common radio <b>operating</b> and <b>message</b> formatting procedures and more than 250 designated frequencies. Participation in SHARES {{is open to all}} Federal departments and agencies and their designated affiliates on a voluntary basis. More than 90 Federal, state, and industry organizations currently contribute resources throughout the United States and in 26 countries and U.S. possessions ...|$|R
40|$|This diploma thesis {{contains}} {{detailed design}} of high-performance cluster, primarely focused for parallel computing in Octave application. Each of component of this cluster is described along with {{instructions for installation}} and configuration. Cluster is based on GNU/Linux <b>operating</b> system and <b>Message</b> Parsing Interface. Design alllows implementation of this cluster in computers of schoolroom with active lessons...|$|R
50|$|On July 29, 2015, Torstar {{announced}} its {{acquisition of a}} 56% majority stake in VerticalScope, a Toronto-based operator of online communities, for $200 million. The company <b>operates</b> websites and <b>message</b> boards that focus on niche categories—particularly within the automotive industry. Torstar CEO David Holland explained that the purchase was designed to bolster the company's presence in digital media.|$|R
5000|$|Above all, p≡p - {{contrary}} to existing cryptographic solutions - shall {{be easy to}} install, use and understand. Furthermore, for their communications p≡p users don’t depend on any specific (web or <b>operating</b> system) platform, <b>message</b> transport system (SMS, E- Mail, XMPP etc.) or centrally provided client-server or [...] "cloud" [...] infrastructures: p≡p is 100% peer-to-peer by design.|$|R
50|$|System {{configuration}} {{and maintenance}} is done through a web interface, or through SSH or telnet {{access to a}} command line interpreter (CLI). Full access to the Unix-like <b>Messaging</b> <b>Operating</b> System (MOS) is not available. Depending on the model and configuration the appliances {{can be used as}} email routers, user mail servers, or as an all-in-one server.|$|R
40|$|The Extended Min-Sum (EMS) {{algorithm}} for non- binary low-density parity-check (LDPC) defined over an alphabet of size q <b>operates</b> on truncated <b>messages</b> {{of length}} q′ {{to achieve a}} complexity of the order q′ 2. In contrast, Walsh-Hadamard (WH) transform based iterative decoders achieve a complexity of the order q log q, which is much larger for q′ << q. In this paper, we demonstrate that considerable savings {{can be achieved by}} letting WH based decoders <b>operate</b> on truncated <b>messages</b> as well. We concentrate on the direct WH transform and compute the number of operations required if only q′ of the q inputs are non-zero. Our paper does not cover the inverse WH transform and hence {{further research is needed to}} construct WH based decoders that can compete with the EMS algorithm on complexity terms. This is the accepted manuscript. The final version is available from IEEE at [URL]...|$|R
40|$|One {{of the key}} aspects for many-core and cloud <b>operating</b> {{systems is}} <b>message</b> passing communication. The {{networking}} aspect of this mechanism requires {{a high degree of}} concurrency to handle communicating with thousands of cores simultaneously in an efficient and scalable manner. Non-blocking interfaces allows us to efficiently use a core and gives us concurrency without multiple threads, this also minimizes context switch...|$|R
30|$|A {{factor graph}} (FG) based {{technique}} provides a unifying strategy to a vast {{variety of the}} problems in communications, signal processing and general inference algorithms [1, 2]. FG-based algorithms (e.g., sum-product algorithm (SPA) typically in Bayesian based decision and estimation problems) <b>operate</b> with <b>messages</b> representing the stochastic description of the variable at a given node. A direct exact canonical form of SPA operates with probability density function (PDF) or probability mass function (PMF) for continuous or discrete variables respectively. The messages for finite cardinality discrete variables (most notably for binary variables) can be easily parameterized by a number of numerically convenient representations (e.g., log-likelihood ratio, etc.) [1, 2] which allow an easy implementation.|$|R
40|$|Factor graphs are {{graphical}} {{models with}} origins in coding theory. The sum-product and the max-product algorithms, which <b>operate</b> by <b>message</b> passing in a factor graph, subsume {{a great variety}} of algorithms in coding, signal processing, and artificial intelligence. In this paper, factor graphs are used to express a one-to-one correspondence (based on results by Dennis) between a class of static electrical circuits andmulti-variable probability distributions; these factor graphs may also be viewed as variational representations of the electrical networks. For the classical linear state space models, both the sum-product algorithm and the max-product algorithm coincide with Kalman filtering. By the mentioned correspondence, these algorithms have a circuit theory interpretation that was discovered by Carter...|$|R
50|$|In 1928, Congress passed Act No. 3495 {{granting}} the Robert Dollar Company (a corporation organized and existing {{under the laws}} of the State of California), a franchise to <b>operate</b> wireless long-distance <b>message</b> services in the Philippines. Subsequently, Congress passed Act No. 4150 in 1934 to transfer the franchise and privileges of the Robert Dollar Company to Globe Wireless Limited, which was incorporated in the Philippines on 15 January 1935.|$|R
40|$|Using {{commodity}} component {{personal computers}} based on Alpha processor and commodity network devices and a switch, we built an 8 -node parallel computer. GNU/Linux is chosen as an <b>operating</b> system and <b>message</b> passing libraries such as PVM, LAM, and MPICH {{have been tested}} as a parallel programming environment. We discuss our lattice QCD project for a heavy quark system on this computer. Comment: Lattice 99 (algorithms and machines), 3 pages, 3 figures, espcrc 2. st...|$|R
30|$|The logger {{application}} makes valuable use of {{a built-in}} Android mechanism called broadcast/receiver. The <b>operating</b> system broadcasts <b>messages</b> about events that are taking place, such as a battery status change, the Wi-Fi connection being turned on, or the screens being switched off. However, some relevant and power-impacting usage parameters have no broadcast actions or messages associated with them, and in this case, we use polling {{as a means of}} sampling changes in these parameters (examples, include “current” and “audio utilization”).|$|R
40|$|High {{performance}} computing on proprietary or commodity hardware is gaining wide acceptance. For {{this to be}} practicable, {{it is important that}} systems provide a single system image at any one (or more) of the following levels: Hardware, <b>Operating</b> System, <b>Message</b> Passing Interfaces, Language/Compiler, or Tools. Single-system image greatly enhances the program's portability {{and at the same time}} increases the availability of a wide range of software (tools or applications). An operating system can exhibit single-system image by supporting a parallel file system, parallel commands, multi-user and multithreaded kernel for single/multi-user machine. The operating system should incorporate all these features without additional primitives or commands but having the same existing formats. This paper presents the needs and approaches for building a single system image, and a survey of systems supporting single-system image. Keywords: Network, Parallel, Distributed, NOW,COW, Operating Systems, Sin [...] ...|$|R
40|$|Fine-grain {{parallelism}} {{is the key}} to {{high performance}} muticomputing. By partitioning problems into small sub-tasks [...] grain-sizes as small as 70 cycles have been found in common benchmark programs [...] fine-grain parallelization accelerates existing applications beyond current limits, and promises efficient exploitation of multicomputers consisting of thousands of processors. However, contemporary multiprocessor architectures are not equipped to exploit parallelism at this level, due to high communication and synchronization costs that must be amortized over a large grain size. <b>Operating</b> system-managed <b>message</b> interfaces account for most of the high inefficiency in traditional systems. Conversely, in contemporary user-level network interfaces, fast hardware is defeated by software layers that are needed to provide safeguards against starvation and protection violation. This thesis addresses both the efficiency and robustness issues in the message interface. I propose a design which featu [...] ...|$|R
40|$|If an {{organization}} {{depends on the}} service quality provided by another organization it often enters into a bilateral service level agreement (SLA), which mitigates outsourcing risks by associating penalty payments with poor service quality. Once these agreements are entered into, it becomes necessary to monitor their conditions, which will commonly relate to timeliness, reliability and request throughput, at runtime. We show how these conditions can be translated into timed automata. Acceptance of a timed word by a timed automaton can be decided in quadratic time and because the timed automata can <b>operate</b> while <b>messages</b> are exchanged at runtime there is effectively only a linear run-time overhead. We present an implementation to derive on-line monitors for web services automatically from SLAs using an Eclipse plugin. We evaluate the efficiency and scalability of this approach using a large-scale case study in a service-oriented computational grid...|$|R
50|$|Screen {{readers can}} query the {{operating}} system or application for what is currently being displayed and receive updates when the display changes. For example, a screen reader can be told that the current focus is on a button and the button caption to be communicated to the user. This approach is considerably easier for the developers of screen readers, but fails when applications do not comply with the accessibility API: for example, Microsoft Word does not comply with the MSAA API, so screen readers must still maintain an off-screen model for Word or find another way to access its contents. One approach is to use available <b>operating</b> system <b>messages</b> and application object models to supplement accessibility APIs. The Thunder screen reader operates without an off-screen model in this way; {{the latest version of}} Thunder also includes an off-screen model.|$|R
40|$|Abstract. Since their {{popularity}} {{began to rise}} in the mid- 2000 s there has been significant {{growth in the number}} of multi-core and multi-processor computers available. Knowledge representation systems using logical inference have been slow to embrace this new technology. We present the concept of inference graphs, a natural deduction inference system which scales well on multi-core and multi-processor machines. Inference graphs enhance propositional graphs by treating propositional nodes as tasks which can be scheduled to <b>operate</b> upon <b>messages</b> sent between nodes via the arcs that already exist as part of the propositional graph representation. The use of scheduling heuristics within a prioritized mes-sage passing architecture allows inference graphs to perform very well in forward, backward, bi-directional, and focused reasoning. Tests demonstrate the useful-ness of our scheduling heuristics, and show significant speedup in both best case and worst case inference scenarios as the number of processors increases. ...|$|R
40|$|Whereas a {{block cipher}} enciphers {{messages}} of some one particular length (the blocklength), a variable-input-length cipher takes messages of varying (and preferably arbitrary) lengths. Still, {{the length of}} the ciphertext must equal {{the length of the}} plaintext. This paper introduces the problem of constructing such objects, and provides a practical solution. Our VIL mode of operation makes a variable-input-length cipher from any block cipher. The method is demonstrably secure in the provable-security sense of modern cryptography: we give a quantitative security analysis relating the difficulty of breaking the constructed (variable-input-length) cipher to the difficulty of breaking the underlying block cipher. Keywords: Ciphers, Modes of Operation, Provable Security, Symmetric Encryption. 1 Introduction This paper introduces {{the question of how to}} construct ciphers which <b>operate</b> on <b>messages</b> of varying lengths. Such a cipher, F, maps a key K and a plaintext M in f 0; 1 g (or M in so [...] ...|$|R
5000|$|Wheaton {{runs his}} own blog, Wil Wheaton Dot Net. Between 2001 and late 2004, he <b>operated</b> a <b>message</b> board, known as [...] "The Soapbox" [...] or [...] "Paracosm," [...] {{as part of}} the blog site. Two {{collections}} of writings taken from postings to the message board have been published, titled Boxer Shorts (...) and Boxer Shorts Redux (...) [...] He contributes regularly to the Los Angeles-based Metroblogging site. In June 2005, he became that month's featured Tech writer for the SuicideGirls Newswire. He had a monthly column, entitled [...] "Wil Save," [...] in the Dungeons & Dragons-based magazine Dungeon, until May 2005. From January 2005 to October 2006, he wrote a column for The A.V. Club about early video games, called [...] "Games of Our Lives." [...] On December 12, 2008, he returned to his role as Geek in Review editor, with his editorials being published every second Wednesday of the month.|$|R
40|$|An {{acoustic}} ground {{sensor system}} for detection and classification of military vehicles {{is currently being}} developed at the Norwegian Defence Research Establishment (NDRE). The system consists {{of a number of}} autonomous microphone units classifying the received sound in real time. Each unit is battery <b>operated</b> and transmits <b>messages</b> about detected vehicles via radio to a central controller. The sensor units incorporate a commercial digital signal processor (DSP) for internal signal analysis, while only high–level information is transferred to the central unit. This paper presents the software and hardware realization of the system. 1...|$|R
40|$|The Open Scripting Architecture {{combines}} {{aspects of}} object-oriented programming, distributed computation, database queries, and dynamic languages into {{a powerful and}} practical system for automation, integration, and customization of applications and system services. Applications are integrated together with distributed <b>messaging.</b> The <b>messages</b> <b>operate</b> upon user-level application objects, like windows and spreadsheet cells that are identified by queries over properties and document containment structure. A general-purpose scripting language automates message sending and handling, and supports persistence and mobile objects. Applications call on scripting services to customize the behavior of their objects through a generic script management API...|$|R
