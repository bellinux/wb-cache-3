64|146|Public
50|$|It {{constructs}} an <b>overlay</b> <b>tree</b> from a redundantly meshed graph of nodes, source specific {{shortest path}} trees are then constructed from reverse paths. The group management is equally distributed on all nodes because each overlay node {{keeps track of}} all its group members through periodic heartbeats of all members. The discovery and tree building is similar to DVMRP.|$|E
50|$|ESM used a {{peer-to-peer}} network to distribute video data across all viewers {{of a video}} stream. It constructs an <b>overlay</b> <b>tree</b> to distribute data, and continuously optimizes this tree to minimize end-to-end latency. The root of the tree {{is the source of}} the broadcast. This is typically the machine that encodes the video data. This machine sends a stream of data packets to the nodes at the first level of the tree. Each of those nodes then forwards the data to the nodes connected to them, and so on, such that all nodes in the system receive the data stream.|$|E
40|$|International audienceApplication Level Multicast {{protocols}} {{construct an}} <b>overlay</b> <b>tree</b> between end-hosts {{participating in the}} multicast session. The efficiently of the constructed <b>overlay</b> <b>tree</b> depends entirely on the honesty and on the cooperation of all participating members. However such behavior can not be guaranteed and some selfish and non-cooperative nodes may take profit from the honesty of other members in the overlay. In this paper we investigate {{the negative impact of}} cheating nodes on the performances and on the stability of <b>overlay</b> <b>tree</b> constructed by our MDA-ALM protocol...|$|E
40|$|Abstract — We {{study the}} impact of {{cheating}} nodes in application-level multicast <b>overlay</b> <b>trees.</b> We focus on selfish nodes acting independently, cheating about their distance measurements during the control phase building or maintaining the tree. More precisely, we study, through simulations, {{the impact of}} simple cheating strategies in four protocols, representatives of different application-level multicast protocol “families”: HBM (a protocol based on a centralized approach), TBCP (a distributed, tree first protocol), NICE (a distributed, tree first protocol based on clustering) and NARADA (a mesh first protocol). We evaluate the impact of cheats {{on the performance of}} the <b>overlay</b> <b>trees</b> as perceived by their nodes and the underlying network. I...|$|R
40|$|<b>Overlay</b> {{multicast}} <b>tree</b> {{construction and}} maintenance {{is a major}} challenge in designing application layer multicast protocols. In this paper, we focus on improving the joining and maintenance procedures of an <b>overlay</b> multicast <b>tree.</b> Unlike the existing direct-tree protocols, our proposed <b>Overlay</b> Multicast <b>Tree</b> Protocol (OMTP) has the following characteristics. First, by leveraging on the IP hierarchical addressing locality, we can speed up the formation of <b>overlay</b> multicast <b>tree</b> and enhance {{the efficiency of the}} tree maintenance. Second, we take both bandwidth availability and round-trip-time (RTT) into consideration when a newcomer selects its parent node. Finally, an effective mechanism is designed to disperse the simultaneous rejoin crowds in the tree repair phase. Simulation results show that with our proposed protocol, the join latency can be reduced by as large as 50 % as compared with a popular direct-tree protocol HMTP. © 2005 IEEE. link_to_subscribed_fulltex...|$|R
40|$|To {{enhance the}} {{performance}} of overlay multicast networks, the <b>overlay</b> multicast <b>tree</b> should be optimized. This optimization problem is a minimum diameter, degree-limited spanning tree (MDDLST) problem which {{is known to be}} NP-Hard. We present a new scheme to optimize an <b>overlay</b> multicast <b>tree</b> dynamically. Our algorithm can adapt the tree structure to the dynamic membership and network situation...|$|R
40|$|International audienceThis paper {{presents}} Combine, a distributed directory {{protocol for}} shared objects, designed for large-scale distributed systems. Directory protocols support move requests, allowing {{to write the}} object locally, as well as lookup requests, providing a read-only copy of the object. They {{have been used in}} distributed shared memory implementations and in data-ﬂow implementations of distributed software transactional memory in large-scale systems. The protocol runs on an <b>overlay</b> <b>tree,</b> whose leaves are the nodes of the system; it ensures that the cost of serving a request is proportional to the cost of the shortest path between the requesting node and the serving node, in the <b>overlay</b> <b>tree.</b> The correctness of the protocol, including starvation freedom, is proved, despite asynchrony and concurrent requests. The protocol avoids race conditions by combining requests that overtake each other as they pass through the same node. Using an <b>overlay</b> <b>tree</b> with a good stretch factor yields an eﬃcient protocol, even when requests are concurrent...|$|E
40|$|This paper {{presents}} COMBINE, a directory-based consistency {{protocol for}} shared objects, designed for large-scale distributed systems with unreliable links. Directory-based consistency protocols support move requests, allowing {{to write the}} object locally, as well as lookup requests, providing a read-only copy of the object. They {{have been used in}} distributed shared memory implementations and are a key element of data-flow implementations of distributed software transactional memory in large-scale systems. The protocol runs on an <b>overlay</b> <b>tree,</b> whose leaves are the nodes of the system, and its main novelty is in combining requests that overtake each other as they pass through the same node. Combining requests on a simple tree structure allows the protocol to tolerate non-fifo links and handle concurrent requests. Combining also avoids race conditions and ensures that the cost of serving a request is proportional to the cost of the shortest path between the requesting node and the serving node, in the <b>overlay</b> <b>tree.</b> Using an <b>overlay</b> <b>tree</b> with a good stretch factor yields an efficient protocol...|$|E
40|$|In {{traditional}} overlay multicast network, all {{peers are}} treated as equal regardless of their importance and contribution to the network. In this paper, we consider that each user may have different cost function depending on his privilege, delay to source, available bandwidth, etc. We propose a fully distributed and scalable protocol to construct an <b>overlay</b> <b>tree</b> to minimize the overall cost of the users. It uses aggregation {{to account for the}} total cost of one’s descendants, and reduces tree cost by a continuous improvement process. Through simulation, we show that our protocol converges reasonably fast. By comparing with other schemes, our resultant <b>overlay</b> <b>tree</b> offers differentiated services to users by appropriately taking into account individual user cost functions. 1...|$|E
40|$|Multicasting of {{real-time}} streams (voice, video, etc.) for {{interactive communication}} in networked virtual environments (V. E.) {{is becoming an}} increasingly important service. Here as an example characteristics of interactive voice scenes for participants in a V. E. are presented. Proxy based overlay multicasting of real-time streams is a candidate architecture {{for this type of}} service. Here we propose a scheme for angular clustering of destination proxies in multi dimensional network geometric spaces as the core algorithm for construction of efficient <b>overlay</b> multicast <b>trees.</b> We show that using the proposed angular clustering scheme it is possible to construct source rooted <b>overlay</b> <b>trees</b> with acceptable delay and overhead traffic performances...|$|R
40|$|Abstract — Existing stream {{processing}} systems are optimized {{for a specific}} metric, which may limit their applicability to diverse applications and environments. This paper presents XFlow, a generic data stream collection, processing, and dissemination system that addresses this limitation efficiently. XFlow can express and optimize a variety of optimization metrics and constraints by distributing {{stream processing}} queries across a wide-area network. It uses metric-independent decentralized algorithms that work on localized, aggregated statistics, while avoiding local optima. To facilitate light-weight dynamic changes on the query deployment, XFlow relies on a loosely-coupled, flexible architecture consisting of multiple publish-subscribe <b>overlay</b> <b>trees</b> that can gracefully scale and adapt to changes to network and workload conditions. Based on the desired performance goals, the system progressively refines the query deployment, {{the structure of the}} <b>overlay</b> <b>trees,</b> as well as the statistics collection process. We provide an overview of XFlow’s architecture and discuss its decentralized optimization model. We demonstrate its flexibility and the effectiveness using real-world streams and experimental results obtained from XFlow’s deployment on PlanetLab. The experiments reveal that XFlow can effectively optimize various performance metrics in the presence of varying network and workload conditions. I...|$|R
40|$|Overlay {{networks}} {{have made it}} easy to implement multicast functionality in wireless ad hoc networks. Their flexibility to adapt to different environments has helped in their steady growth. In MANETs, the position of nodes constantly changes; as a result, <b>overlay</b> multicast <b>trees</b> that are built using location information to account for node movement would certainly have a low latency. However, the performance gains of such a tree are offset by the overhead involved in maintaining precise location information. As the degree of (location) accuracy increases, the performance improves but the overhead required to store and broadcast this information also increases. In this paper, we present SOLO-Net, a design to build a sub-optimal location aided <b>overlay</b> multicast <b>tree,</b> where location updates of each member node are event based. Our simulation results indicate that such a sub-optimal tree does not compromise the performance gains of a location aided <b>overlay</b> multicast <b>tree.</b> © 2004 IEEE...|$|R
40|$|Overlay {{multicast}} tree {{is widely}} used to support large-scale real-time multimedia applications. The scalability and the robustness are two key issues in the overlay structure design. In this paper, we propose a Degree pre-reserved hierarchical tree for multimedia multicast, called DTree. It organizes the <b>overlay</b> <b>tree</b> in two hierarchies, and combines applicationlevel multicast with IP multicast to achieve a low delay data delivery. A Degree pre-reserved mechanism is designed in DTree, which greatly shortens the time to resume the data flow, and achieve a fast recovery. Our simulation results show that DTree has a better delivery performance, compared with other <b>overlay</b> <b>tree.</b> It is quite responsive to {{the changes in the}} tree, and almost 3 times faster than other recovery strategies in some cases. 1...|$|E
40|$|Abstract — Overlay {{networks}} among cooperating hosts {{have recently}} {{emerged as a}} viable solution to several challenging problems, including multicasting, routing, content distribution, and peer-to-peer services. Application-level overlays, however, incur a performance penalty over router-level solutions. This paper quantifies and explains this performance penalty for overlay multicast trees via (i) Internet experimental data, (ii) simulations, and (iii) theoretical models. We compare a number of overlay multicast protocols with respect to <b>overlay</b> <b>tree</b> structure, and underlying network characteristics. Experimental data and simulations illustrate that {{the mean number of}} hops and mean per-hop delay between parent and child hosts in overlay trees generally decrease as the level of the host in the <b>overlay</b> <b>tree</b> increases. Overlay multicast routing strategies, overlay host distribution, and Internet topology characteristics, are identified as three primary causes of the observed phenomenon. We show that this phenomenon yields <b>overlay</b> <b>tree</b> cost savings: Our results reveal that the normalized cost L(n) U(n) is ∝ n 0. 9 for small n, where L(n) is the total number of hops in all overlay links, U(n) is the average number of hops on the source to receiver unicast paths, and n is the number of members in the overlay multicast session. This can be compared to an IP multicast cost proportional to n 0. 6 to n 0. 8. I...|$|E
40|$|Abstract—Overlay {{networks}} among cooperating hosts {{have recently}} {{emerged as a}} viable solution to several challenging problems, including multicasting, routing, content distribution, and peer-topeer services. Application-level overlays, however, incur a performance penalty over router-level solutions. This paper quantifies and explains this performance penalty for overlay multicast trees via: 1) Internet experimental data; 2) simulations; and 3) theoretical models. We compare a number of overlay multicast protocols with respect to <b>overlay</b> <b>tree</b> structure, and underlying network characteristics. Experimental data and simulations illustrate that {{the mean number of}} hops and mean per-hop delay between parent and child hosts in overlay trees generally decrease as the level of the host in the <b>overlay</b> <b>tree</b> increases. Overlay multicast routing strategies, overlay host distribution, and Internet topology characteristics are identified as three primary causes of the observed phenomenon. We show that this phenomenon yields <b>overlay</b> <b>tree</b> cost savings: Our results reveal that the normalized cost @ A @ A is H W for small, where @ A is the total number of hops in all overlay links, @ A is the average number of hops on the source to receiver unicast paths, and is the number of members in the overlay multicast session. This can be compared to an IP multicast cost proportional to H T to H V. Index Terms—Economies of scale, group communication, Internet multicast, overlay multicast, overlay networks...|$|E
40|$|Abstract Hierarchical {{structures}} are often deployed in large scale distributed sys-tems to structure communication. Building and maintaining such structures in dy-namic environments is challenging. Self-organisation is the approach taken in this chapter. AETOS, the Adaptive Epidemic <b>Tree</b> <b>Overlay</b> Service, provides <b>tree</b> over-lays on demand. AETOS uses three local agents to this purpose (i) to translate ap-plication requirements to self-organisation requirements, (ii) to self-organise nodes into optimised tree topologies {{based on these}} requirements, (iii) to control boot-strapping and termination of self-organisation. The evaluation of AETOS in dif-ferent simulation settings shows that it provides high connectivity in <b>tree</b> <b>overlays</b> optimised according to application requirements. ...|$|R
40|$|Group {{communication}} systems (e. g., multicast, DHTs) {{have emerged as}} basic primitives for several large-scale distributed systems. Most existing systems that imple-ment these primitives often assume a flat topology of overlay nodes. For instance, many DHTs assume that all overlay links are often homogeneous in their capac-ities, costs and other such characteristics. Similarly, multicast protocols create <b>overlay</b> <b>trees</b> without {{taking into account the}} physical location of nodes. While a few systems do consider latency between different over-lay nodes, the fact that metrics such as latency change continuously often translates into additional complexity in constantly measuring and reorganizing nodes. Mod-ern trends in hierarchical data center designs and globa...|$|R
40|$|Abstract. Search {{is until}} now a {{difficult}} problem in peer-to-peer (P 2 P) file-sharing systems. In this paper, we propose to use adaptive metadata spreading to make search in P 2 P networks efficient and scalable to large-scale systems. We model the search process in unstructured P 2 P networks obtain the opti-mized metadata populations for performance optimization. Based on the model, we propose adaptive metadata spreading approach which can adapt metadata populations to variational environment and achieve the optimized search per-formance. To implement our approach in fully decentralized P 2 P system, we employ self-organized fault-tolerant <b>overlay</b> <b>trees,</b> through which peers can eas-ily cooperate {{with each other}} to perform adaptive metadata spreading with mi-nor overhead. ...|$|R
40|$|To {{construct}} an efficient overlay network, the information of underlay is important. However, the inference of an underlay topology is not easy. We consider using end-to-end measurement {{tools such as}} traceroute to infer the underlay topology {{among a group of}} hosts. Since pair-wise traceroutes among hosts take a long time and generate much network traffic, Max-Delta has been proposed to infer a highly accurate topology with a low number of traceroutes. However, Max-Delta relies on a central server to collect traceroute results and to select paths for hosts to measure. It is hence not scalable to large groups. In this paper, we investigate a distributed version of Max-Delta scheme in order to support scalable inference. In our scheme, each host joins an <b>overlay</b> <b>tree</b> before conducting traceroutes. A host then independently selects paths to traceroute and exchanges traceroute results with others through the <b>overlay</b> <b>tree.</b> As a result, each host can maintain a partially discovered topology. We have studied two key issues in the scheme, i. e., how to construct a low-diameter <b>overlay</b> <b>tree</b> and how to reduce bandwidth consumption in measurements. As compared to Max-Delta, our scheme is fully distributed and scalable. In the scheme, each host computes its own traceroute targets, and the computational loads are distributed to all the hosts instead of a single server. Furthermore, each host only exchanges data with a few other hosts and does not need to set up connections with all the other hosts. Simulation results show that the constructed tree has a low diameter and can support quick data exchange among hosts, and that the use of a lookup table for routers can significantly reduce bandwidth consumption in data exchange. © 2007 IEEE...|$|E
40|$|To {{construct}} an efficient overlay network, the information of underlay is important. We consider using end-to-end measurement {{tools such as}} traceroute to infer the underlay topology {{among a group of}} hosts. Previously, Max-Delta has been proposed to infer a highly accurate topology with a low number of traceroutes. However, Max- Delta relies on a central server to collect traceroute results and to select paths for hosts to traceroute. It is not scalable to large groups. In this paper, we investigate a distributed inference scheme to support scalable inference. In our scheme, each host joins an <b>overlay</b> <b>tree</b> before conducting traceroute. A host then independently selects paths for tracerouting and exchanges traceroute results with others through the <b>overlay</b> <b>tree.</b> As a result, each host can maintain a partially discovered topology. We have studied the key issue in the scheme, that is, how a low-diameter <b>overlay</b> <b>tree</b> can be constructed. Furthermore, we propose several techniques to reduce the measurement cost for topology inference. They include 1) integrating the Doubletree algorithm into our scheme to reduce measurement redundancy, 2) setting up a lookup table for routers to reduce traceroute size, and 3) conducting topology abstraction and reducing the computational frequency to reduce the computational overhead. As compared to the naive Max- Delta, our scheme is fully distributed and scalable. The computational loads for target selection are distributed to all the hosts instead of a single server. In addition, each host only communicates with a few other hosts. The consumption of edge bandwidth at a host is hence limited. We have done simulations on Internet-like topologies and conducted measurements on PlanetLab. The results show that the constructed tree has a low diameter and can support quick data exchange between hosts. Furthermore, the proposed improvements can efficiently reduce measurement redundancy, bandwidth consumption, and computational overhead...|$|E
40|$|Abstract — Most of the application-layer {{multicast}} protocols use end-to-end delay {{as their}} primary metric. However, for applications such as stored video delivery, meeting a certain target bandwidth requirement is of primary importance. In this paper, we present a centralized approach on {{how to build a}} fast <b>overlay</b> <b>tree</b> based on efficient end-to-end measurements. We first investigate how to infer underlay topology (in terms of connectivity) with low measurement cost. Given N end-hosts, traditionally full N(N − 1) / 2 traceroutes are needed to accurately determine the underlay topology. We propose a much faster heuristic (Max-Delta) where a server selects appropriate hostpairs to probe in parallel so as to reveal the most information on the underlay in each round. Given an inferred network topology, we then present the algorithm of Fast Application-layer Tree (FAT), which builds an <b>overlay</b> <b>tree</b> of a certain target bandwidth by estimating possible load on each underlay link. Simulation results show that almost full measurements are needed to discover completely underlay topology. However, substantial reduction in measurements (by almost an order of magnitude) can be achieved if some accuracy, say 5 %, canbe sacrificed. As compared to traditional ALM protocols such as Narada and Overcast, FAT achieves high bandwidth, low link stress, and low RDP. I...|$|E
40|$|Abstract — In this paper, an {{efficient}} algorithm {{to look for}} backup parents in preparation of parent leaving is proposed for application layer multicasting whose topology is constituted {{in the shape of}} a tree from a single source node. In most conventional methods, each child node starts searching for its new parent after its parent node leaves from a multicasting tree. This reactive operation often causes long interruption period. In our proposal, each node holds its parent candidate proactively over redundant <b>overlay</b> <b>trees.</b> Proactive route maintenance leads to smooth switching to a new parent after node leaving and failure, and redundant structure of a multicasting tree avoids exhausting search of a backup parent. Computer simulations are also carried out and effectiveness of the proposed approach is verified...|$|R
40|$|Abstract—We {{propose a}} new {{application-level}} clustering algorithm capable of building an <b>overlay</b> spanning <b>tree</b> among participants of large multicast sessions, without any specific {{help from the}} network routers. The algorithm and associated protocol are shown to exhibit scalable properties. Index Terms—Clusters, hierarchy, IP, multicast, network. I...|$|R
40|$|Increasing {{application}} requirements have placed {{heavy emphasis on}} building overlay networks to efficiently de-liver data to multiple receivers. A key performance chal-lenge is simultaneously achieving adaptivity to changing network conditions and scalability to large numbers of users. In addition, most current algorithms focus on a sin-gle performance metric, such as delay or bandwidth, par-ticular to individual {{application requirements}}. In this pa-per, we introduce a two-fold approach for creating robust, high-performance overlays called Adaptive Multi-Metric Overlays (AMMO). First, AMMO uses an adaptive, highly-parallel, and metric-independent protocol, TreeMaint, to build and maintain <b>overlay</b> <b>trees.</b> Second, AMMO provides a mechanism for comparing overlay edges along specified application performance goals to guide TreeMaint transfor-mations. We have used AMMO to implement and evaluate a single-metric (bandwidth-optimized) tree similar to Over-cast and a two-metric (delay-constrained, cost-optimized) overlay. 1...|$|R
40|$|International audienceEven though Application Level Multicast (ALM) {{protocols}} {{are proposed}} as an efficient {{alternative to the}} classical IP multicast model, they still suffer from the same rearrangement overhead problem. Indeed, when a member joins or leaves the multicast session, {{a part of the}} <b>overlay</b> <b>tree</b> should be rearranged. This rearrangement overhead can significantly disturb the fluidity of the application data stream received by other members. In addition, the efficiently of the constructed <b>overlay</b> <b>tree</b> depends entirely on the honesty and the cooperation of all participating members. However such behavior cannot be guaranteed and some selfish and non-cooperative nodes may take profit from the honesty of other members in the overlay. In this paper we present a new technique, called Membership Duration Aware ALM (MDA technique), that takes advantage of the announced membership duration of each new joining member in order to construct a more stable and robust overlay trees. Our technique can be used together with any existing centralized or distributed ALM protocol to reduce the overall rearrangement overhead. Simulation results confirm the efficiency of our technique when applied to both centralized and distributed ALM protocol. Then, we analyze in depth the impact of cheating nodes on the performances and the stability of overlay trees constructed by our MDA-ALM protocol...|$|E
40|$|Abstract—In recent years, {{there has}} been an {{increasing}} interest in peer-to-peer (P 2 P) multimedia streaming. In this paper, we consider constructing a high-bandwidth <b>overlay</b> <b>tree</b> for streaming services. We observe that underlay information such as link connectivity and link bandwidth is important in tree construction, because two seemingly disjoint overlay paths may share common links on the underlay. We hence study how to construct a high-bandwidth <b>overlay</b> <b>tree</b> given the underlay topology. We formulate the problem as building a Maximum Bandwidth Multicast Tree (MBMT) or a Minimum Stress Multicast Tree (MSMT), depending on whether link bandwidth is available or not. We prove that both problems are NP-hard and are not approximable within a factor of @P QC A, for any H, unless ax€. We then present approximation algorithms to address them and analyze the algorithm performance. Furthermore, we discuss some practical issues (e. g., group dynamics, resilience and scalability) in system implementation. We evaluate our algorithms on Internet-like topologies. The results show that our algorithms can achieve high tree bandwidth and low link stress with low penalty in end-to-end delay. Measurement study based on PlanetLab further confirms this. Our study shows that the knowledge of underlay is important for constructing efficient overlay trees. Index Terms—Overlay tree, peer-to-peer streaming, topologyaware, tree bandwidth. I...|$|E
40|$|This paper {{explores the}} {{challenges}} associated with distributed application management in large-scale computing environments. In particular, we investigate several techniques for extending Plush, an existing distributed application management framework, to provide improved scalability and fault tolerance without sacrificing performance. One {{of the main}} limitations of Plush is {{the structure of the}} underlying communication fabric. We explain how we incorporated the use of an <b>overlay</b> <b>tree</b> provided by Mace, a toolkit that simplifies the implementation of overlay networks, in place of the existing communication subsystem in Plush to improve robustness and scalability. ...|$|E
40|$|Overlay {{networks}} {{have made it}} easy to implement mulricast functionality in wireless ad hoc networks. Theirflexibility to adapt to different environments has helped in their steady growth. In MANETs, the position of nodes constantly changes: as a result, <b>overlay</b> multicast <b>trees</b> that are built using location information to account for node movement would certainly have a low latency. However, the performance gains of such a tree are offset by the overhead involved in maintaining precise location information. As rhe degree of (location) accuracy increases, the performance improves but the overhead required to srore and broadcast this information also increases. In this paper, we present SOLO-Net, a design to build a sub-optimal location aided overlay multicast rree, where location updates of each member node are event based. Our simulation results indicate that such a sub-optimal tree does not compromise the performance gains of a location aided <b>overlay</b> multicast <b>tree...</b>|$|R
40|$|Abstract Overlay {{networks}} {{have made it}} easy to implement multicast functionality in MANETs. Their flexibility to adapt to different environments has helped in their steady growth. <b>Overlay</b> multicast <b>trees</b> that are built using location information account for node mobility and have a low latency. However, the performance gains of such trees are offset by the overhead involved in distributing and maintaining precise location information. As the degree of (location) accuracy increases, the performance improves but the overhead required to store and broadcast this information also increases. In this paper, we present SOLONet, a design to build a sub-optimal location aided <b>overlay</b> multicast <b>tree,</b> where location updates of each member node are event based. Unlike several other approaches, SOLONet doesn’t require every packet to carry location information or each node maintain location information of every other node or carrying out expensive location broadcast for each node. Our simulation results indicat...|$|R
40|$|Abstract—Wireless {{technology}} {{enables the}} sensors {{to gather data}} to the base station through a so-called multi-hop communi-cation. For data aggregation in wireless sensor networks, a <b>tree</b> <b>overlay</b> is necessary to guide the data transportation from one node to another in an efficient way. Here the data aggregation means that the data is merged while it is transported among the sensors. TinyDB and Cougar are typical data aggregation systems which make use of a <b>tree</b> <b>overlay</b> to do the data aggregation efficiently. However, the <b>tree</b> <b>overlay</b> used in those systems are not optimized for various kinds of data aggregation in response to various kinds of sensed data. Here the sensed data can be kinds of temperature, humidity, noise, etc. In this paper, we propose a new method, Tree-Adapting, to optimize the data aggregation by re-constructing adaptively a new aggregation tree in response to each series of sensed data. I...|$|R
40|$|On-demand {{and live}} {{multimedia}} streaming applications (such as Internet TV) {{are well known}} to utilize {{a significant amount of}} bandwidth from media streaming servers, especially as the number of participating peers in the streaming session scales up. To scale to higher bit rates of media streams and larger numbers of participating peers, <b>overlay</b> <b>tree</b> or mesh topologies are typically constructed, such that peers utilize their available upload capacities to alleviate the excessive bandwidth demands on stream servers. Previous works rely on random selections of upstream peers, without optimizing the topologies towards maximized utilization of peer upload bandwidth, and as a result, minimized bandwidth costs on streaming servers. We propos...|$|E
40|$|Abstract. To {{enhance the}} {{performance}} of overlay multicast networks, the overlay multicast tree should be optimized. This optimization problem is a minimum diameter, degree-limited spanning tree (MDDLST) problem which {{is known to be}} NP-Hard. We present a new scheme to optimize an overlay multicast tree dynamically. Our algorithm can adapt the tree structure to the dynamic membership and network situation. And each member reduces an <b>overlay</b> <b>tree</b> diameter using directional maximum overlay costs and an edge change. By this distributed operation, the tree diameter is converged to the sub-optimal. From graph theoretical analysis and simulation results, we show that the proposed scheme can reduce a tree diameter with low computation overhead. ...|$|E
40|$|Abstract — This paper studies {{multicast}} application overlay {{networks in}} a repeated-game framework. In these overlays, users have both the motivation {{and the means}} to alter their position in the <b>overlay</b> <b>tree.</b> We introduce a repeated-game model of user behavior that captures the practical tradeoff between a user’s short-term desire for quality and long-term desire for the network’s continued existence. We simulate overlay treeformation protocols with this model to study their robustness to selfish users. We show that this model can explain user cooperation and provide insight into how overlay systems scale in the absence of heavyweight mechanisms or identity systems. We also use the model to derive practical guidance on how to make multicast overlay protocols more robust to selfish users. I...|$|E
40|$|AbstractPresently, {{application}} layer multicast protocols (ALM) are proposed as substitute for IP multicast {{and have made}} extraordinary achievements. Integrated with Multi-data-stream mode such as Multiple Description Coding (MDC), ALM becomes more scalable and robust in high-dynamic Internet environment compared with single data stream. Although MDC can provide a flexible data transmission style, the synchronization of different descriptions encoded from one video source is proved to be difficult due to different delay on diverse transmission paths. In this paper, an ALM system called HMDC is proposed to improve accepted video quality of streaming media, hosts can join the separate <b>overlay</b> <b>trees</b> in different layers simultaneously, then the maximum synchronized descriptions of the same layer are worked out to acquire the best video quality. Simulations implemented on Internet-like topology indicate that HMDC achieves better video quality, lower link stress, higher robustness and comparable latency compared with traditional ALM protocols...|$|R
40|$|Tree-based overlay {{multicast}} is {{an effective}} group communication method for media streaming applications. However, a group member’s departure causes all of its descen-dants to be disconnected from the multicast tree for some time, which results in poor perfor-mance. The above problem is difficult to be addressed because <b>overlay</b> multicast <b>tree</b> is intrinsically instable. In this paper, we proposed a novel stability enhancing solution, VMCast, for tree-based overlay multicast. This solution uses two types of on-demand cloud virtual machines (VMs), i. e., multicast VMs (MVMs) and compensation VMs (CVMs). MVMs are used to disseminate the multicast data, whereas CVMs are used to offer streaming com-pensation. The used VMs in the same cloud datacenter constitute a VM cluster. Each VM cluster is responsible for a service domain (VMSD), and each group member belongs to a specific VMSD. The data source delivers the multicast data to MVMs through a reliable path, and MVMs further disseminate the data to group members along domain <b>overlay</b> mul-ticast <b>trees.</b> The above approach structurally improves {{the stability of the}} <b>overlay</b> multicast <b>tree.</b> We further utilized CVM-based streaming compensation to enhance the stability of the data distribution in the VMSDs. VMCast can be used as an extension to existing tree-based overlay multicast solutions, to provide better services for media streaming applications. We applied VMCast to two application instances (i. e., HMTP and HCcast). The results show that it can obviously enhance the stability of the data distribution...|$|R
40|$|This paper {{assesses the}} {{incorporating}} of candidate nodes into <b>overlay</b> multicast <b>trees.</b> <b>Overlay</b> networks attempt {{to compensate for}} the awkwardness and inefficiencies that can exist across the Internet for group communication. This work uses a network simulation application to assess the feasibility of overlay networks and presents the results found. Results show that there are persistent improvements using the metric of cost between the optimal KMB tree and the minimum path spanning tree and that there are significant improvements, again using the metric of cost, between n-way distribution without a centroid node and nway distribution with a centroid node of approximately twenty per cent in each instance. This is to provide an application layer active networking infrastructure for distributed virtual reality...|$|R
