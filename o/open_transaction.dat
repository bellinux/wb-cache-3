8|105|Public
50|$|The U.S. Supreme Court in Burnet v. Logan, 283 U.S. 404 {{held that}} taxpayers using the {{installment}} method can defer {{the recognition of}} gain according to the <b>open</b> <b>transaction</b> doctrine if an obligation’s fair market value cannot be determined.|$|E
5000|$|Finally, {{there may}} be neither a maximum selling price nor a finite duration. In this case, {{the first step is}} to {{consider}} whether there is a sale at all; the transaction may in fact be for rent or royalties, since beneficial ownership arguably remains with the seller. However, if there is in fact a sale, there are two possibilities. First, the transaction may be subject to the judicial [...] "open transaction doctrine" [...] of Burnet v. Logan. Almost no sales are subject to this doctrine because it is applicable only to unusual and rare sales that are wholly speculative and impossible to value. If the <b>open</b> <b>transaction</b> doctrine applies, the taxpayer may completely recover basis before reporting any gain. This is by far the best tax treatment for the transaction, but it is likely to be attacked by the IRS and in most circumstances would not be sustained.|$|E
5000|$|Can a {{taxpayer}} who elects {{out of the}} installment method of I.R.C. § 453 still defer the recognition (inclusion in gross income) of gain by using Burnet v. Logan’s <b>open</b> <b>transaction</b> doctrine? Legislative history seems to imply that Congress would say no. What if {{a taxpayer}} elects out of the installment method of accounting despite having the ability to reasonably determine the amount realized from a deferred payment sale? Can the taxpayer defer the recognition of gain in this instance? Presumably not, since “the entire amount realized {{must be taken into}} account in the year of sale.” [...] For taxpayers opting to use the cash method of accounting, Warren Jones answers then how amount realized is taken into account. Warren Jones holds that for taxpayers using the cash method accounting then, the entire amount realized “would be the fair market value of the installment obligation.” ...|$|E
50|$|As a {{programmer}} Chris is {{the creator of}} <b>Open</b> <b>Transactions</b> and co-founder of Monetas and the Stash transaction platform. He is also a renown Bitcoin-advocate often seen at conferences on cryptocurrencies.|$|R
40|$|Abstract. Transactional {{memory has}} arisen {{as a good}} way for solving {{many of the issues}} of lock-based programming. However, most implemen-tations admit {{isolated}} transactions only, which are not adequate when we have to coordinate communicating processes. To this end, in this paper we present OCTM, an Haskell-like language with <b>open</b> <b>transactions</b> over shared transactional memory: processes can join transactions at runtime just by accessing to shared variables. Thus a transaction can co-operate with the environment through shared variables, but if it is rolled-back, also all its effects on the environment are retracted. For proving the expressive power of OCTM we give an implementation of TCCSm, a CCS-like calculus with <b>open</b> <b>transactions.</b> ...|$|R
5000|$|... #Subtitle level 4: <b>Open</b> market <b>transactions</b> {{and other}} {{interventions}} by central banks ...|$|R
50|$|The {{alternative}} is to elect out of the installment method. In that case, the seller reports the fixed amounts (taking original issue discount into account for future fixed payments) plus the fair {{market value of the}} right to contingent payments. The taxpayer pays tax up front in the year of the sale on this total amount realized. The taxpayer then has a basis in the right to contingent payments equal to the amount reported as fair market value. The good news here is that the seller gets a little piece of the <b>open</b> <b>transaction</b> doctrine, and may fully recover basis in the contingent piece of the sale before reporting any additional contingent payments in future years. Where the profit ratio would have been high anyway and the fair market value of the contingent payments are low, the taxpayer may experience favorable consequences by effectively paying a little more tax up front and in return getting the first crop of contingent payments tax-free, while eliminating the risk of an unusable future capital loss.|$|E
40|$|Atomic {{transactions}} {{are now a}} familiar paradigm for distributed programming and have been provided {{in a number of}} object-oriented languages. Much e ort has also been expended on developing <b>open</b> <b>transaction</b> processing systems which support distributed transactions involving multivendor database systems. This paper addresses a number of issues that arise in combining objectoriented distributed programming with <b>open</b> <b>transaction</b> processing. We describe an approach to supporting transactions which can access objects and other resource types, such as les and records, consistently, and which is independent of the use of any particular object-oriented programming language. We discuss both the design of a generic runtime interface which provides language independent support for atomic objects and transactions and, following the X/Open model for <b>open</b> <b>transaction</b> processing, the desig...|$|E
40|$|People have intertemporal biases towards {{choices that}} result in {{immediate}} gratification versus delayed rewards. The social context can accentuate or downplay preferences towards virtues or vices when making choices in the moment. Especially in our modern world where social networks are virtually accessible at anytime, from anywhere, how our day-today decisions {{are affected by the}} "always-on" connection to our social networks via mobile devices is an open question. By understanding the dimensions of these social forces, we can utilize the just-in-time social cloud to nudge people towards decisions that have long term benefits for health and finances, while counterbalancing the forces of the marketers that trigger our impulses towards immediate temptations that we may regret later. This work presents an empirical inquiry into the effect of just-in-time social influences in human decision-making. In order to understand these effects and discover their parameters, I design and deploy real-world experiments with the just-in-time social cloud using mobile phones as platforms for just-in-time social influence. The <b>Open</b> <b>Transaction</b> Network forms the basis of generating just-in-time social networks based on the transactions shared by people in the context of commerce. The <b>Open</b> <b>Transaction</b> Network is extended to several systems to conduct real-world experiments involving real choices. By augmenting mobile commerce applications with just-in-time social networks, I design a mobile commerce environment that can socially influence our just-in-time choices. The Open Credit Card Application Framework augments existing methods of payment by using transactions as triggers to enable mobile applications that facilitate just-in-time decisions or reflections. Friends within communities show significant similarity in their hourly transaction behaviors. Varying manifestations of the just-in-time social cloud (individual friends, groups of friends and popularity information) can be used to nudge people's choices in the dimensions of taste, price and time as they decide. by Kwan Hong Lee. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, School of Architecture and Planning, Program in Media Arts and Sciences, 2012. Cataloged from PDF version of thesis. Includes bibliographical references (p. 209 - 224) ...|$|E
50|$|The banking {{industry}} usually processes financial <b>transactions</b> using <b>open</b> nested <b>transactions,</b> {{which is a}} looser variant of the nested transaction model that provides higher performance while accepting the accompanying trade-offs of inconsistency.|$|R
40|$|We {{present a}} formal {{operational}} semantics for LogTM, a hardware-based nested transactional memory system. We define the proper execution of programs {{written in a}} small assembly language that includes memory accesses, nested closed and <b>open</b> <b>transactions,</b> partial rollback, commit and abort handlers, thread spawning, and escape actions. This is a working document, intended to reflect and codify the current best understanding of LogTM's operation in both common and corner cases. This formal semantics serves as a reference companion to other published discussions of LogTM, and specifically corresponds to the system described in "Supporting Nested Transactional Memory in LogTM" by Moravan et al...|$|R
5000|$|IPSJ Online <b>Transactions</b> (<b>open</b> access republishing of English-language papers {{previously}} published in primarily-Japanese transactions) ...|$|R
40|$|In this article, Lee charts two {{alternative}} methods for implementing an aggregate {{solution to the}} problem of partnership profits share exchanged for services. The functional, or judicial, method, he explains, is to handle (1) the exchange of partner-capacity services for a profit share subject to the risk of the venture with the Culbertson 2 ̆ 2 common law relation of partnership, 2 ̆ 2 nonrealization event doctrine, implicitly contemplated by the 1984 legislative history to section 707 (a) (2); (2) the classic Diamond transitory partner with a substance-over-form rule or step-transaction rule; and (3) a sale of the partnership interest in circumstances that would result in ordinary income in a sale of a proprietorship by a proprietress with the P. S. Lake 2 ̆ 2 substitute for ordinary income 2 ̆ 2 doctrine, widely applied in analogous cases under the 1939 code. Lee believes that rather than just setting forth standards, regulations should implement structured discretionary justice. Therefore, he recommends that the Service and the Treasury use regulations to legislate a defined 2 ̆ 2 tainted freestanding intangible 2 ̆ 2 approach, inspired in part by United States v. Stafford and in part by Wolfsen Land 2 ̆ 6 Cattle, which would treat the value created by performance of partner-capacity services (or the promise of future partner-capacity services) as a built-in gain freestanding intangible. The transfer of such an intangible to the partnership in return for a profits interest subject to the risks of the venture, says Lee, would gall under section 7212 ̆ 7 s nonrecognition umbrella, as in Stafford. Lee explains that sales by the service partner of her five-year profits share would be tainted as follows. The transferred intangible would carry ordinary income status in the transferee partnership 2 ̆ 7 s 2 ̆ 2 hands 2 ̆ 2 for five years under section 724, with mandatory allocations of the built-in tainted gain under section 704 (c) to the service partner. Lee Also suggests two alternative tax accounting solutions to a year 2 sale of a profits share. His Alternative A would be to hold the transaction (receipt of the profits share) open for two years under the 2 ̆ 2 indeterminable character 2 ̆ 2 variant of the <b>open</b> <b>transaction</b> doctrine to see whether there will be (1) no sale within the two-year window and resultant nonrecognition and sale thereafter likely at capital gain (just like a proprietress); or (2) a sale in year 2 resulting in ordinary income because of a transitory partner. His Alternative B would be to apply year 2 balancing entry notions based on a reading of Hillsboro...|$|E
40|$|In this article, Professor Lee charts two {{alternative}} methods for implementing an aggregate {{solution to the}} problem of partnership profits share for services. The functional, or judicial, method is to handle (1) the exchange of partner-capacity services for a profit share subject to the risk f the venture with the Culbertson 2 ̆ 2 common law relation of partnership, 2 ̆ 2 nonrealization event doctrine, implicitly contemplated by the 1984 legislative history to section 707 (a) (2), (2) the classic Diamond transitory partner with a substance-over-form rule or step-transaction rule, and (3) a sale of the partnership interest in circumstances that would result in ordinary income in a sale of a proprietorship by a proprietress with the P. G. Lake 2 ̆ 2 substitution for ordinary income 2 ̆ 2 doctrine, widely applied in analogous cases under the 1939 code. Lee believes that rather than just setting forth standards, regulations should implement structured discretionary justice. Therefore, he recommends that the Service and the Treasury use regulations to legislate a defined 2 ̆ 2 tainted freestanding intangible 2 ̆ 2 approach, inspired in part by United States v. Stafford and in part by Wolfsen Land 2 ̆ 6 Cattle, which would treat the value created by performance of partner-capacity services (or the promise of future partner-capacity services) as a built-in gain freestanding intangible. The transfer of such an intangible to the partnership in return for a profits interest subject to the risks of the venture, says Lee, would fall under section 7212 ̆ 7 s nonrecognition umbrella, as in Stafford. Lee explains that sales by the service partner of her five-year profits share would be tainted as follows. The transferred intangible would carry ordinary income status in the transferee partnership 2 ̆ 7 s 2 ̆ 2 hands 2 ̆ 2 for five year under section 724, with mandatory allocations of the built-in tainted gain under section 704 c) to the service partner. Lee suggests two alternative tax accounting solutions to a year two sale of a profits share. His Alternative A would be to hold the transaction (receipt of the profits share) open for two years under the 2 ̆ 2 indeterminable character 2 ̆ 2 variant of the <b>open</b> <b>transaction</b> doctrine to see whether there will be (1) no sale with the two-year window and resultant nonrecognition and sale thereafter likely at capital gain (just like a proprietress), or (2) a sale in year two resulting in ordinary income because of a transitory partner. His Alternative B would be to apply year two balancing entry notions based upon a reading of Hillsboro. (The first part of this article appeared in Tax Notes, Mar. 28, 1994, at p. 1733. ...|$|E
40|$|Distributed Transactional Memory (DTM) is {{a recent}} but {{promising}} model for programming distributed systems. It aims to present programmers with a simple to use distributed concurrency control abstraction (transactions), while main-taining performance and scalability similar to distributed fine-grained locks. Any complications usually associated with such locks (e. g., distributed deadlocks) are avoided. Building upon the previously proposed Transactional For-warding Algorithm (TFA), we add support for <b>open</b> nested <b>transactions.</b> We discuss the mechanisms and performance implications of such nesting, and identify the cases where using open nesting is warranted and the relevant parameters for such a decision. To {{the best of our}} knowledge, our work contributes the first ever implementation of a DTM system with support for <b>open</b> nested <b>transactions...</b>|$|R
50|$|The {{basic concept}} for the TSU is a {{matching}} system for trade documents {{which is designed}} to allow banks to provide funding at various stages throughout the physical supply chain. This can be used for letter of credit business or <b>open</b> account <b>transactions.</b>|$|R
40|$|Reserves, money stock, liquid assets, {{and debt}} {{measures}} Reserves of depository institutions, Reserve Bank credit Reserves and borrowings—Depository institutions Selected borrowings in immediately available funds—Large member banks Policy Instruments Federal Reserve Bank interest rates Reserve requirements of depository institutions Federal Reserve <b>open</b> market <b>transaction...</b>|$|R
50|$|For example, say {{we look at}} Microsoft {{and open}} {{interest}} tells us {{that there have been}} 81,700 options opened for the March 27.5 call option. You may be wondering if that number refers to options bought or sold. The answer is that you have no way to know for sure how many transactions have taken place but you do know that there are 81,700 options contracts that remain open. Since there is 1 bought position and 1 sold position for each of these contracts, there are 81,700 positions that remain bought to 'open' and 81,700 positions that remain sold to 'open' for the March 27.5 call option. There are always the same number of positions {{on either side of the}} <b>open</b> <b>transactions.</b>|$|R
40|$|<b>Open</b> multithreaded <b>transactions</b> {{constitute}} {{building blocks}} that allow a developer {{to design and}} structure the execution of complex distributed systems featuring cooperative and competitive concurrency in a reliable way. In this paper we describe an optimization to the standard <b>open</b> multithreaded <b>transaction</b> model that does not impose any participant synchronization when committing a transaction, but still provides the same execution semantics. This optimization – letting participants “look ahead” and continue their execution {{on the outside of}} the transaction – makes it possible to speed up the execution of in individual transaction with multiple participants tremendously. The paper describes all technical issues that had to be solved, e. g. adapting concurrency control of transactional objects to be look-ahead aware, adapting joining rules for lookahead participants, and re-defining exception handling in the presence of look-ahead...|$|R
40|$|In {{an object}} [...] {{oriented}} database the objects are encapsulated, i. e., objects are only accessible by methods {{defined in the}} database system. Our definition of object-oriented serializability {{takes advantage of the}} semantics and of the nesting of the methods. Therefore, a lower rate of conflicting accesses than with the conventional definition of serializability is achieved. Transactions of an object-oriented database are defined as <b>open</b> nested <b>transactions.</b> Depending on the semantics of operations actions can be serialized independent from the calling transactions. The techniques already used in multi-layer transaction systems are extended to object-oriented systems. Object-oriented serializability includes multi-layer serializability but allows a non-layered, more general structure of the database system. Key words: object-oriented database system, <b>open</b> nested <b>transaction,</b> object-oriented serializability, semantic concurrency control. 1. Introduction Conventional database systems ar [...] ...|$|R
40|$|This paper {{describes}} {{a model for}} providing transaction support for object-oriented concurrent programming languages. In order to achieve seamless integration, {{the use of the}} concurrency features provided by the programming language should not be restricted inside a transaction. A transaction model that meets this requirement is presented. Threads inside such a transaction may spawn new threads, but also external threads are allowed to join an ongoing transaction. A blocking commit protocol ensures that no thread leaves the transaction before its outcome has been determined. Exceptions are used to inform all participants in case a transaction aborts. Keywords. Cooperative Concurrency, Competitive Concurrency, <b>Transactions,</b> <b>Open</b> Multithreaded <b>Transactions,</b> Exceptions, Fault Tolerance. ...|$|R
50|$|At the 2009 RSA Conference, the GSA {{sought to}} build a public/private {{partnership}} with the Open ID Foundation (OIDF) and the Information Card Foundation (ICF) in order to craft a workable identity information framework that would establish the legal and policy precedents needed to establish trust for <b>Open</b> ID <b>transactions.</b>|$|R
50|$|A casual look at OBB might liken it to a Repo. Though OBB and Repo/Reverse Repo {{involve the}} {{exchange}} of cash for security with an agreement to buy back, a Repo has a predetermined repurchase date while an OBB is an <b>open</b> ended <b>transaction</b> and securities traded might never be repurchased before maturity.|$|R
25|$|In most {{developed}} countries, {{central banks}} {{are not allowed}} to give loans without requiring suitable assets as collateral. Therefore, most central banks describe which assets are eligible for <b>open</b> market <b>transactions.</b> Technically, the central bank makes the loan and synchronously takes an equivalent amount of an eligible asset supplied by the borrowing commercial bank.|$|R
25|$|The London Gold Pool {{controls}} were followed {{with an effort}} to suppress the gold price with a two-tier system of official exchange and <b>open</b> market <b>transactions,</b> but this gold window collapsed in 1971 with the Nixon Shock, and resulted in {{the onset of the}} gold bull market which saw the price of gold appreciate rapidly to US$850 in 1980.|$|R
40|$|This paper {{presents}} a new locking protocol for object-oriented database systems (OODBSs). The protocol can exploit the semantics of methods invoked on encapsulated objects. Compared to conventional page-oriented or recordoriented concurrency control protocols, our protocol greatly improves the possible concurrency because commutative method executions {{on the same}} object are not considered as a conflict. data types (ADTs), the protocol {{takes care of the}} fact that ADTs can be implemented in terms of other ADTs. Therefore, methods on ADT objects can in turn invoke methods on other ADT objects or even the same object. To ensure that each method execution appears as an indivisible action, the dynamic method invocation hierarchies that result from transaction executions are treated as <b>open</b> nested <b>transactions.</b> In an <b>open</b> nested <b>transaction,</b> the locks of a subtransaction are released when the subtransaction completes and only a semantic lock is held further by the parent of the subtransaction...|$|R
40|$|Abstract — We {{describe}} semantics for serializable (safe) <b>open</b> nested <b>transactions.</b> Given these semantics, we then suggest hardware {{necessary to}} support them directly. We further consider some useful, but not serializable, applications for open nesting, and their hardware implications. We focus primarily on linear nesting, which we previously argued to be more amenable to hardware support than the general case. I...|$|R
50|$|Open Buy Back (OBB), are discountable {{securities}} {{traded in}} the Nigerian Inter-Bank financial market. An Open Buy Back is a {{money market instrument}} used to raise short term capital. It {{is a form of}} borrowing using Nigerian Government Securities as collateral. It is an <b>open</b> ended <b>transaction</b> with both parties maintaining the right of liquidation or a roll-over without prior notice within trading hours of the day.|$|R
40|$|Transactional Memory (TM) {{is on its}} way to {{becoming}} the programming API of choice for writing correct, concurrent, and scalable programs. Hardware TM (HTM) implementations are expected to be significantly faster than pure software TM (STM); however, full hardware support for true closed and <b>open</b> nested <b>transactions</b> is unlikely to be practical. This paper presents a novel mechanism, the split hardware transaction (SpHT), that uses minimal software support to combine multiple segments of an atomic block, each executed using a separate hardware transaction, into one atomic operation. The idea of segmenting transactions can be used for many purposes, including nesting, local retry, orElse, and user-level thread scheduling; in this paper we focus on how it allows linear closed and <b>open</b> nesting of <b>transactions.</b> SpHT overcomes the limited expressive power of best-effort HTM while imposing overheads dramatically lower than STM and preserving useful guarantees such as strong atomicity provided by the underlying HTM...|$|R
50|$|The New York Gold Exchange was an {{exchange}} formed {{shortly after the}} beginning of the American Civil War for the purpose of creating an <b>open</b> market for <b>transactions</b> involving gold and the government-created paper currency, the greenback. Established in 1862, it closed in 1897.|$|R
40|$|This {{position}} paper shows how Ada 95 exceptions {{have been used}} in a prototype implementation of a transaction support in order to provide more elaborate exception handling. The paper summarizes the <b>open</b> multithreaded <b>transaction</b> model, which is a transaction model suitable for concurrent programming languages, and analyzes the exception mechanism provided by the Ada 95 programming language. Different interfaces to the transaction support for the application programmer are presented, and the problems encountered during implementation of the prototype with respect to exception handling are discussed...|$|R
50|$|Unless {{the reply}} bit is clear, a primary message {{should always be}} responded to with the {{complementary}} secondary message. For most SECS-II messages, a secondary reply message is required. For example, if the host sends an S1,F1 (stream 1, function 1) message to request 'Are you there?', then equipment will send a reply S1,F2 message to indicate 'I am here'. Each SECS-II message exchange has a unique transaction ID number. The standards allow message interleaving where {{there is more than}} one <b>open,</b> concurrent <b>transaction.</b>|$|R
40|$|The {{purpose of}} this study was to investigate, analyze and finally develop the {{prototype}} of Centralized Automation System for <b>Open</b> Item <b>Transaction</b> (DPT) at PT Bank Negara Indonesia (Persero) Tbk. The system can minimize the <b>open</b> item <b>transaction</b> (DPT) that is expecfed to reduce the penally, expense and processing time. The data were collected from the Head Office and 2 branches in Jakarta. A descriptive method and a combined method System Development Life Cycle (SDLC) and protolyping development were used to analyze the collected data. The results of the study is in forms of logical model of the system (data flow diagram, dictionary and process descriptions), physical design of the system and the protorype of the system. To optimize th e overall system, some changes to the branch applications such as inter-branch online voucher journal a nd transaction process enhancement are made. Later, to focus on the organization effectiveness. two units in Head Office PGT and SAK, were merged to be one unit (unit PGT). I suggest that the management be more intensified on the evalualion and provide system recovery to avoid process failures at the Head Office. If it is to be implemented at all branches, it will be better to use the pilot project to reduce the risk rate. ...|$|R
25|$|The {{collapse}} of the gold pool forced an official policy of maintaining a two-tiered market system of stipulating an official exchange standard of US$35, while also allowing <b>open</b> market <b>transactions</b> for the metal. Although the gold pool members refused to trade gold with private persons, and the United States pledged to suspend gold sales to governments that traded in the private markets, this created an open opportunity for some market participants to exploit the gold window by converting currency reserves into gold and selling the metal in the gold markets at higher rates.|$|R
40|$|Federated {{enterprises}} {{are defined}} as interactive commercial entities that produce products and consume resources through a network of <b>open,</b> free-market <b>transactions.</b> Value production in such entities {{is defined as the}} real-time computation of enterprise value propositions. These computations are increasingly taking place in a grid-connected space – a space that must provide for secure, real-time, reliable end-to-end transactions governed by formal trading protocols. We present the concept of a value production unit (VPU) as a key element of federated trading systems, and a software architecture for automation and control of federations of such VPUs...|$|R
50|$|The {{collapse}} of the gold pool forced an official policy of maintaining a two-tiered market system of stipulating an official exchange standard of US$35, while also allowing <b>open</b> market <b>transactions</b> for the metal. Although the gold pool members refused to trade gold with private persons, and the United States pledged to suspend gold sales to governments that traded in the private markets, this created an open opportunity for some market participants to exploit the gold window by converting currency reserves into gold and selling the metal in the gold markets at higher rates.|$|R
