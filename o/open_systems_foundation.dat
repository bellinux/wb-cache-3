0|10000|Public
40|$|Non-Markovian {{stochastic}} Schrödinger equations (NMSSE) {{are important}} tools in quantum mechanics, from {{the theory of}} <b>open</b> <b>systems</b> to <b>foundations.</b> Yet, in general, they are but formal objects: their solution can be computed numerically only {{in some specific cases}} or perturbatively. This article is focused on the NMSSE themselves rather than on the open-system evolution they unravel and aims at making them less abstract. Namely, we propose to write the stochastic realizations of linear NMSSE as averages over the solutions of an auxiliary equation with an additional random field. Our method yields a non-perturbative numerical simulation algorithm for generic linear NMSSE that can be made arbitrarily accurate for reasonably short times. For isotropic complex noises, the method extends from linear to non-linear NMSSE and allows to sample the solutions of norm-preserving NMSSE directly. Comment: 7 page...|$|R
50|$|While the Saylor Foundation is not {{accredited}} {{within any}} traditional system, {{they have been}} featured as a prime candidate for launching a system of alternative accreditation {{through the use of}} badges. The Foundation has stated its intentions to tap into the soon to be released Open Badge Infrastructure from the Mozilla Foundation. This project by the Mozilla Foundation, in tandem with the HASTAC organization, will allow website operators to issue and display badges within a single inter-operable and <b>open</b> source <b>system.</b> The <b>Foundation</b> has said that their hope is that badges will give rise to an alternative source of credentialing for skills and knowledge separate from that used by traditional colleges and universities.|$|R
40|$|<b>Open</b> quantum <b>systems</b> exhibiting initial system-environment {{correlations}} {{are notoriously}} difficult to simulate. We {{point out that}} given a sufficiently long sample of the exact short-time evolution of the <b>open</b> <b>system</b> dynamics, one may employ transfer tensors for the further propagation of the reduced <b>open</b> <b>system</b> state. This approach is numerically advantageous and allows for the simulation of quantum correlation functions in hardly accessible regimes. We benchmark this approach against analytically exact solutions and exemplify it with the calculation of emission spectra of multichromophoric systems {{as well as for}} the reverse temperature estimation from simulated spectroscopic data. Finally, we employ our approach for the detection of spectral signatures of electromagnetically induced transparency in <b>open</b> three-level <b>systems.</b> National Science <b>Foundation</b> (U. S.) (Award CHE- 1112825...|$|R
50|$|Borders was {{formerly}} President of the Henry W. Grady Health <b>System</b> <b>Foundation.</b>|$|R
40|$|This paper {{provides}} {{an introduction to}} <b>open</b> <b>systems,</b> explains important <b>open</b> <b>system</b> standards, and discusses how to use <b>open</b> <b>system</b> products effectively in concurrent engineering. The paper should be of value to engineers whose products depend on embedded software. The focus is on standards for software products that will be embedded in larger systems and products. Software development and integration are often the "weak links" in product development because of incompatibilities among embedded software components. A principal objective of <b>open</b> <b>systems</b> standards is to make systems integration easier. 2 Why <b>Open</b> <b>Systems</b> in Concurrent Engineering...|$|R
5000|$|... 1972. Organization Structure: Cybernetic <b>Systems</b> <b>Foundation.</b> IFSR Int’l. Series on Systems Science and Engineering, Vol. 22. Kluwer, Academic Publishers.|$|R
5000|$|Wizards quickly {{followed}} up {{the release of}} TPO with several supplements to help build on the <b>system's</b> <b>foundation.</b> These supplements included: ...|$|R
40|$|The {{greater the}} degree of digital {{convergence}} the higher the potential for monopoly behavior. <b>Open</b> <b>systems</b> minimize the possibility of monopoly behavior. But what are <b>open</b> <b>systems?</b> This paper explores the different meanings and criteria suggested by the term <b>open</b> <b>systems</b> and the many ways openness is viewed. It specifically discusses <b>open</b> <b>systems,</b> <b>open</b> architectures, open source, open interfaces and open standards to better understand each. Identifying and agreeing upon what constitutes openness {{is an important step}} to avoid any disadvantages of digital convergence...|$|R
40|$|The {{adiabatic}} approximation in <b>open</b> <b>systems</b> is formulated through the effective Hamiltonian approach. By introducing an ancilla, we embed the <b>open</b> <b>system</b> dynamics into a non-Hermitian quantum dynamics of a composite system, the adiabatic {{evolution of the}} <b>open</b> <b>system</b> is then defined as the adiabatic dynamics of the composite system. Validity and invalidity conditions for this approximation are established and discussed. A High-order {{adiabatic approximation}} for <b>open</b> <b>systems</b> is introduced. As an example, the adiabatic condition for an open spin-$\frac 1 2 $ particle in time-dependent magnetic fields is analyzed. Comment: 6 pages, 2 figure...|$|R
40|$|Starting {{from the}} formal {{solution}} to the Heisenberg equation, we revisit an universal model for a quantum <b>open</b> <b>system</b> with a harmonic oscillator linearly coupled to a boson bath. The analysis of the decay process for a Fock state and a coherent state demonstrate that this method is very useful {{in dealing with the}} problems in decay process of the <b>open</b> <b>system.</b> For finite temperature, the calculations of the reduced density matrix and the mean excitation number for the <b>open</b> <b>system</b> show that an initial coherent state will evolve into a temperature-dependant coherent state after tracing over the bath variables. Also in short-time limit, a temperature-dependant effective Hamiltonian for the <b>open</b> <b>system</b> characterizes the decay process of the <b>open</b> <b>system...</b>|$|R
40|$|In {{computer}} system design, we distinguish between closed and <b>open</b> <b>systems.</b> A closed {{system is a}} system whose behavior is completely determined {{by the state of}} the <b>system.</b> An <b>open</b> <b>system</b> is a system that interacts with its environment and whose behavior depends on this interaction. The ability of temporal logics to describe an ongoing interaction of a reactive program with its environment makes them particularly appropriate for the specification of <b>open</b> <b>systems.</b> Nevertheless, model-checking algorithms used for the verification of closed systems are not appropriate for the verification of <b>open</b> <b>systems.</b> Correct model checking of <b>open</b> <b>systems</b> should check the system with respect to arbitrary environments and should take into account uncertainty regarding the environment. This is not the case with current model-checking algorithms and tools. In this paper we introduce and examine the problem of model checking of <b>open</b> <b>systems</b> (mod- ule checking, for short). We show that while module che [...] ...|$|R
40|$|In {{computer}} system design, we distinguish between closed and <b>open</b> <b>systems.</b> A closed {{system is a}} system whose behavior is completely determined {{by the state of}} the <b>system.</b> An <b>open</b> <b>system</b> is a system that interacts with its environment and whose behavior depends on this interaction. The ability of temporal logics to describe an ongoing interaction of a reactive program with its environment makes them particularly appropriate for the specification of <b>open</b> <b>systems.</b> Nevertheless, model-checking algorithms used for the verification of closed systems are not appropriate for the verification of <b>open</b> <b>systems.</b> Correct verification of <b>open</b> <b>systems</b> should check the system with respect to arbitrary environments and should take into account uncertainty regarding the environment. This is not the case with current model-checking algorithms and tools. Module checking is an algorithmic method that checks, given an <b>open</b> <b>system</b> (modeled as a finite structure) and a desired requirement (specified by a temporal-logic formula), whether the <b>open</b> <b>system</b> satisfies the requirement with respect to all environments. In this paper we describe and examine module checking problem, and study its computational complexity. Our results show that module checking is computationally harder than model checking...|$|R
50|$|Varian {{operates}} a corporate philanthropy and charitable giving organization through the Varian Medical <b>Systems</b> <b>Foundation.</b> It operates within the Community Foundation of Silicon Valley (CFSV).|$|R
2500|$|For <b>open</b> flow <b>system,</b> {{the list}} of {{equipment}} and parts is long compared to the components of a closed system, but the chief advantage of the <b>open</b> <b>system</b> is that it permits continuous recording of metabolic rate. The risk of hypoxia is also much less in an <b>open</b> <b>system.</b>|$|R
40|$|In <b>open</b> <b>systems,</b> firms give {{up their}} {{property}} rights to technologies and permit other companies to use these technologies. We ask how an incumbent's architecture choice affects social welfare by altering R&D competition among firms. More specifically, we ask whether an incumbent, by adopting an <b>open</b> <b>system,</b> can establish its socially inefficient technology as the market standard, while an entrant is developing a more efficient technology. It is shown that an incumbent has an incentive to preempt an entrant's competing technology by choosing an <b>open</b> <b>system,</b> but that the <b>open</b> <b>system</b> might result in a premature market standard. Copyright Blackwell Publishing Ltd. 2004. ...|$|R
50|$|Ludwig Bertalanaffy {{describes}} {{two types}} of systems: <b>open</b> <b>system</b> and closed <b>system.</b> The <b>open</b> <b>systems</b> are systems that allow interactions between its internal elements and the environment. An <b>open</b> <b>system</b> {{is defined as a}} “system in exchange of matter with its environment, presenting import and export, building-up and breaking-down of its material components.” For example, living organism. Closed systems, on the other hand, are considered to be isolated from their environment. For instance, thermodynamics that applies to closed systems.|$|R
40|$|AbstractThis work {{deals with}} a methodological {{development}} of the kinetic theory for <b>open</b> <b>systems</b> of active particles with discrete states. It essentially refers to the derivation of mathematical tools which provide the guidelines for modelling <b>open</b> <b>systems</b> in different fields of applied sciences. After a description of closed systems, mathematical frameworks suitable for depicting the evolution of <b>open</b> <b>systems</b> are proposed. Finally, some research perspectives towards modelling are outlined...|$|R
50|$|The {{opposite}} of a thermally isolated {{system is a}} thermally <b>open</b> <b>system,</b> which allows the transfer of heat energy and entropy. Thermally <b>open</b> <b>systems</b> may vary, however, in {{the rate at which}} they equilibrate, depending {{on the nature of the}} boundary of the <b>open</b> <b>system.</b> At equilibrium, the temperatures on both sides of a thermally open boundary are equal. At equilibrium, only a thermally isolating boundary can support a temperature difference.|$|R
40|$|The <b>open</b> <b>system</b> {{strategy}} {{is an effective}} business and technical approach for maintaining {{the superiority of the}} U. S. within growing constraints and an unprecedented rate of technological change. By following an <b>open</b> <b>system</b> strategy in the acquisition of systems, the government can better position itself to leverage private sector investments made in commercial products, practices, and technologies to field superior capability more quickly and affordably. This paper elaborates on distinctions between closed and <b>open</b> <b>systems</b> and will discuss strategies for implementing <b>open</b> <b>systems.</b> The paper also reviews and discusses the test and evaluation challenges associated with <b>open</b> <b>systems</b> and proposes a number of critical developmental issues as a checklist to supplement the information gathered by testers. The paper also emphasizes that the test of openness for the interfaces within a system must only be done when operational and developmental requirements either directly or indirectly require <b>open</b> <b>system</b> implementation and the use of open standards for selected interfaces within a system. The paper also underscores that the test of openness must only be initiated after careful review of testing issues an...|$|R
5000|$|Ludwig Bertalanffy {{describes}} {{two types}} of systems: <b>open</b> <b>systems</b> and closed <b>systems.</b> The <b>open</b> <b>systems</b> are systems that allow interactions between their internal elements and the environment. An <b>open</b> <b>system</b> {{is defined as a}} “system in exchange of matter with its environment, presenting import and export, building-up and breaking-down of its material components.” Closed systems, on the other hand, are held to be isolated from their environment. Equilibrium thermodynamics, for example, is a field of study that applies to closed systems.|$|R
40|$|In {{order to}} check whether an <b>open</b> <b>system</b> {{satisfies}} a desired property, {{we need to}} check {{the behavior of the}} system with respect to an arbitrary environment. In the most general setting, the environment is another <b>open</b> <b>system.</b> Given an <b>open</b> <b>system</b> M and a property #, we say that M robustly satisfies # i# for every <b>open</b> <b>system</b> M #, which serves as an environment to M, the composition M#M # satisfies #. The problem of robust model checking is then to decide, given M and #, whether M robustly satisfies #. In essence, robust model checking focuses on reasoning algorithmically about interaction. In thi...|$|R
40|$|The variational {{method is}} very {{important}} in mathematical and theoretical physics because it allows us to describe the natural systems by physical quantities independently from the frame of reference used. A global and statistical approach have been introduced starting from non-equilibrium thermodynamics, obtaining the principle of maximum entropy generation for the <b>open</b> <b>systems.</b> This principle is a consequence of the lagrangian approach to the <b>open</b> <b>systems.</b> Here it will be developed a general approach to obtain the thermodynamic hamiltonian for the dynamical study of the <b>open</b> <b>systems.</b> It follows that the irreversibility seems to be the fundamental phenomenon which drives the evolution of the states of the <b>open</b> <b>systems...</b>|$|R
40|$|Abstract- <b>Open</b> <b>systems</b> and <b>open</b> {{sources have}} made {{significant}} contributions to the information technology field. The importance of their implementation along with the number of IT shops using <b>open</b> <b>systems</b> and <b>open</b> software continue to increase. The growing number of open software challenges the traditional mainframe based enterprise systems which mainly host propriety applications. Mainframe engineers realized the inevitable trend of openness and started to accept open applications and implement <b>open</b> <b>systems</b> to host those applications. Moving toward the <b>open</b> <b>systems</b> and <b>open</b> sources not only reduces the cost of software development life cycle but also improves the quality of the service. However, there exists a gap between the mainframe system programmers and the <b>open</b> <b>system</b> programmers. To bridge the gap, we need to bring the openness to the mainframe computing field by educating both programmers the fundamental differences between the two systems. In this paper we present our efforts of bringing them together by integrating the open systems/sources courses into the mainframe computing education environment. Our initial attempts to bridge the gap include two <b>open</b> <b>systems</b> <b>open</b> sources course proposals and an internship plan for our Open-ECS development...|$|R
40|$|The work {{covers the}} {{portable}} compilers and <b>open</b> <b>systems.</b> The {{principles of the}} <b>open</b> portable <b>system</b> organization and also the new methods for realization of the translating small-language systems have been developed. The portable compiler family and <b>open</b> <b>system</b> have been realizedAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
50|$|An <b>open</b> <b>system</b> is {{a system}} that has {{external}} interactions. Such interactions can take the form of information, energy, or material transfers into or out of the system boundary, depending on the discipline which defines the concept. An <b>open</b> <b>system</b> is contrasted with the concept of an isolated system which exchanges neither energy, matter, nor information with its environment. An <b>open</b> <b>system</b> is also known as a constant volume system or a flow system.|$|R
40|$|Openness of {{software}} systems constitutes {{a new way}} of collaboration between software development organizations - on the one hand the <b>open</b> <b>system</b> producer {{and on the other hand}} the extension producer (i. e., the consumer of the <b>open</b> <b>system).</b> <b>Open</b> <b>system</b> producers share information on internal concepts and mechanisms and provide architectural documentation about them in order to enable third party producer to extend the <b>open</b> <b>system.</b> The extensions themselves are typically unknown at development time of the <b>open</b> <b>system.</b> The extension developed third party organizations utilize the mechanisms either at configuration time or at run time (without requiring the <b>open</b> <b>system</b> to be modified or recompiled). Such contributions are either system extensions (e. g., Eclipse plug-ins or Apps) or adapters to enable interoperation with other systems (e. g., machine 2 machine communication). In this report we define the term "open architecture" and present a conceptual model for openness within a software ecosystem (see Section 1). We characterize the organizational roles involved the software ecosystem and discuss the cooperation between <b>open</b> <b>system</b> producers and system extension producers (see Section 3). Furthermore, we elaborate on concepts for integration of <b>open</b> <b>systems</b> and extensions. Key contributions of this report is a classification schema (see Section 4), which helps organizations in characterizing the situation of their systems and gives guidance to development organizations on whether or not to invest into openness and what consequences to expect. Examples from the commercial vehicle domain characterize sample situations of development organizations (Section 2) and show how the schema to classify <b>open</b> <b>system</b> can be applied (see Section 4). The foundations of this report are basis for a follow-up report, which discuss engineering principles to achieve openness in software systems...|$|R
40|$|The article {{highlights}} the main {{results of the}} study using networking technologies of <b>open</b> <b>systems</b> in training bachelors of computer science. The process of informatization of educational policy in Ukraine as a basis for the introduction of network technologies of <b>open</b> <b>systems</b> in the educational process is considered; the historical background of their formation and development is analyzed; the basic concept for their use in educational theory and practice is uderlined. The possibility of using networking technologies of <b>open</b> <b>systems</b> in the learning process of the first (bachelor) level of higher education in the field of knowledge 0403 "System sciences and cybernetics" training direction 6. 040302 "Information *" is defined; the principles fundamentalization and modernization in training bachelors of computer science with the use of these technologies are analyzed. Pedagogical conditions for the learning process of bachelors of computer science in higher education are substantiated; procedural model using networking technologies of <b>open</b> <b>systems</b> in training bachelors of computer science is given; the criteria, indexes and levels of competence of bachelor of computer science in the use of networking technologies of <b>open</b> <b>systems</b> in future professional activity are given; the model of competence of bachelor of computer science in the use of networking technologies of <b>open</b> <b>systems</b> is developed and proved. The basic components of the method of using networking technologies of <b>open</b> <b>systems</b> in teaching bachelors of computer science based on improving the content of discipline "Organizational Informatics" using <b>open</b> networking <b>systems</b> are proved. Recommendations of implementation of networking technologies of <b>open</b> <b>systems</b> for students, teaching staff, university administration and teaching support staff are give...|$|R
40|$|The newest scientific-technical {{achievements}} in informatics, information technologies and main principles of information security <b>open</b> <b>systems,</b> which characterized intellectual management and active interaction with other systems, are analyzed. Define more precisely conception of information value in <b>open</b> <b>systems...</b>|$|R
40|$|We give an {{approach}} to <b>open</b> quantum <b>systems</b> based on formal deformation quantization. It is shown that classical <b>open</b> <b>systems</b> of a certain type can be systematically quantized into quantum <b>open</b> <b>systems</b> preserving the complete positivity of the open time evolution. The usual example of linearly coupled harmonic oscillators is discussed. Comment: Major update. Improved main statements. 21 page...|$|R
40|$|Coordination {{models for}} closed {{concurrent}} systems like Linda and Gamma {{have been well}} established {{during the last few}} years. Closed systems typically are planned ahead and consist only of active components the behaviour of which is known in advance. In contrast, <b>open</b> <b>systems</b> are inherently heterogeneous and dynamically change their configuration over time. Models for coordinating software agents in <b>open</b> <b>systems</b> must therefore be able to cope with constantly changing configurations and new, unknown kinds of agents. In this paper, we identify the requirements of <b>open</b> <b>systems</b> with respect to coordination models and develop a coordination model suitable for these purposes. 1 Introduction <b>Open</b> <b>systems</b> are systems in which new active entities (usually called "objects", "agents", or "actors") may dynamically join and later leave, i. e. evolving self [...] organizing systems of interacting intelligent agents [2, 10]. More precisely, <b>open</b> <b>systems</b> can be defined as being composed of software compo [...] ...|$|R
40|$|In view {{of burning}} and {{explosion}} dangerous source which exist in explosive and its manufacture, the security quantitative analysis {{model of the}} emergency <b>open</b> <b>system</b> based on the burning and explosion dangerous source evaluation method is proposed, and the system security of the emergency <b>open</b> <b>system</b> is analyzed by the burning and explosion dangerous source evaluation method. The analysis results basically show the regulation of the emergency <b>open</b> <b>system</b> security. The model and the proposed research method can provide reference for security study of other aero explosive device system. The feasibility and reliability of burning and explosion dangerous source evaluation of the emergency <b>open</b> <b>system</b> have been heightened. The security quantitative analysis model of emergency <b>open</b> <b>system</b> in virtue of burning and explosion dangerous source evaluation method {{can be a good}} method of the choice of the security design of the whole system. </p...|$|R
50|$|Carl Hewitt and Jeff Inman 1991 {{worked to}} develop {{semantics}} for <b>Open</b> <b>Systems</b> {{to address issues}} that had arisen in Distributed Artificial Intelligence. Carl Hewitt and Carl Manning 1994 reported {{on the development of}} Participatory Semantics for <b>Open</b> <b>Systems.</b>|$|R
40|$|La norma actual es de 1997. Se compone de: ISO 10160 Information and Documentation <b>Open</b> <b>Systems</b> Interconnection Interlibrary Loan Application Service Definition. ISO 10161 - 1 Information and Documentation <b>Open</b> <b>Systems</b> Interconnection Interlibrary Loan Application Protocol Specification Part 1 : Protocol Specifictation. ISO 10161 - 2 Information and Documentation <b>Open</b> <b>Systems</b> Interconnection Interlibrary Loan Application Protocol Specification Part 2 : Protocol {{implementation}} conformance statement (PICS) proforma. Incluye implementaciones (muy escasas), procesos de revisión de la norma etc...|$|R
40|$|There is {{considerable}} interest today in designing <b>open</b> <b>systems</b> that permit tools {{to be moved}} freely among various environments on different hardware platforms. In order to develop such <b>systems,</b> terms like <b>open</b> <b>systems,</b> and features for <b>open</b> <b>systems</b> like interoperability, and integration must all be precisely defined. This paper presents a model that {{is an extension of}} a service-based reference model for development environments which can be used to formally define these and other related concepts...|$|R
40|$|The <b>Open</b> <b>System</b> Architecture is an {{approach}} to meeting the needs for flexibility and evolution of the U. S. Space Exploration Initiative program of the manned exploration {{of the solar system}} and its permanent settlement. This paper investigates the issues that future activities of the planet exploration program must confront, defines the basic concepts that provide the basis for establishing an <b>Open</b> <b>System</b> Architecture, identifies the appropriate features of such an architecture, and discusses examples of <b>Open</b> <b>System</b> Architectures...|$|R
40|$|To many, {{economics}} {{is seen as}} increasingly divorced from reality. I shall argue {{that one of the}} causes of this divorce is the attachment to closed-system theorising, and advocate instead the method of <b>open</b> <b>systems</b> with partial and temporary closures. Definitions of closed and <b>open</b> <b>systems</b> are examined. It is evident that there are many different criteria which may define <b>open</b> <b>systems.</b> Theorists differ in their emphasis on one or other criterion. There are also different dimensions of openness: openness to non-economic factors; the openness of economic theories themselves; the interplay of micro- and macro-economics; and the treatment of time. These are explored, using Keynes’s General Theory as a case study of an <b>open</b> <b>system...</b>|$|R
