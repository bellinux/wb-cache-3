2185|3855|Public
5|$|Babangida saw {{even less}} playing {{time after the}} 1999 season, as he made a mere eight {{appearances}} the following year and didn't play a single game {{in the first half}} of the 2000–01 season. In an attempt to <b>offload</b> the player, Ajax came to an agreement with the Turkish Süper Lig side Gençlerbirliği, who signed Babangida on a half-year loan deal until the end of the season.|$|E
5|$|After {{a stop at}} Pearl Harbor for boiler {{repairs and}} to <b>offload</b> her Army passengers, Yancey sailed for Balboa, Panama Canal Zone, {{reaching}} there {{on the last day}} of the year; she was the last ship to transit the Panama Canal in 1945. On 6 January 1946, Yancey cleared Cristobal, Canal Zone, bound for Louisiana. After a brief stop at New Orleans, the attack cargo ship proceeded on, via Jacksonville, Florida, to Norfolk, where she arrived on 29 January. Less than a month later, on 27 February, Yancey sailed farther north and reached the Philadelphia Naval Shipyard the following day.|$|E
5|$|CAPS {{entreprise}} and Pathscale {{are also}} coordinating {{their effort to}} make hybrid multi-core parallel programming (HMPP) directives an open standard called OpenHMPP. The OpenHMPP directive-based programming model offers a syntax to efficiently <b>offload</b> computations on hardware accelerators and to optimize data movement to/from the hardware memory. OpenHMPP directives describe remote procedure call (RPC) on an accelerator device (e.g. GPU) or more generally a set of cores. The directives annotate C or Fortran codes to describe two sets of functionalities: the offloading of procedures (denoted codelets) onto a remote device and the optimization of data transfers between the CPU main memory and the accelerator memory.|$|E
30|$|So far, {{data traffic}} <b>offloading</b> in {{wireless}} networks {{has been researched}} a lot. In [12], a two-level <b>offloading</b> scheme that takes the network load and interference conditions into account in small cell networks was proposed. In [13], a learning mechanism-based fair auction scheme for data <b>offloading</b> in small cell networks was proposed. In [14], an optimal energy-efficient <b>offloading</b> scheme based on the auction theory was proposed. In [15], a network-assisted user-centric WiFi <b>offloading</b> scheme in a heterogeneous network was proposed. In [16], {{the efficiency of the}} opportunistic and the delayed WiFi <b>offloading</b> schemes was analyzed. In [17], the problem of joint BS switching, resource allocation, and data traffic <b>offloading</b> was investigated. Note that all the works in [12 – 17] on data traffic <b>offloading</b> did not consider CR and energy-harvesting capabilities for the target data traffic <b>offloading</b> networks.|$|R
30|$|Data {{computation}} <b>offloading</b> enables intelligent mobile {{devices to}} run greedy resource applications. However, {{in order to}} fully exploit computation <b>offloading</b> benefits, {{we have to deal}} with two key challenges. The first one is about <b>offloading</b> decision, and the second one is about <b>offloading</b> request scheduling among available cloud resources [18]. The main contribution of this paper is the development of a whole <b>offloading</b> strategy for H-CRAN composed of <b>offloading</b> decision and task scheduling in order to improve network performances and user QoE. Therefore, we jointly handle <b>offloading</b> decision and <b>offloading</b> request scheduling in Cloud-RRH. First, we proposed a dynamic multi-parameter <b>offloading</b> decision scheme in order to adapt <b>offloading</b> decision to the current network state and application characteristics. Then, scheduling mechanism was developed as linear programming optimization function that aims to reduce the total execution cost expressed as overload, network delay, and migration. Simulation results show that the proposed approach is able to improve QoS by reducing application response time and mobile device energy consumption while decreasing total execution cost in the Cloud-RRH.|$|R
40|$|Handheld smart {{devices are}} a trend nowadays. Such devices are shipped loaded with {{high-end}} processing cores yet a limited battery life. With the emerging of fast data connections, users {{tend to use}} these devices as a replacement of desktops and laptops. Since these devices are resources-constrained, {{there is a limit}} to how much computation that can be done locally. Computation <b>offloading</b> is the go-to solution for overcoming smart phones resources limitations. ^ A lot of research has been done on computation <b>offloading</b> in terms of program representation and <b>offloading</b> granularity. Most <b>offloading</b> granularities used in previous work are code-driven such as class-based and function-based <b>offloading.</b> Allocation-site-based <b>offloading</b> has been proposed as an approach for data-centric, rather than code-centric <b>offloading.</b> However, although it is a step in the right direction, purely allocation-sites-based <b>offloading</b> suffers from a crucial flaw: due to the prevalence of data structure libraries, different data structures often use the same allocation sites, forcing logically distinct data structures to share <b>offloading</b> decisions and hence to be co-located. ^ We present a novel two-steps program analysis that captures ownership relations between objects to identify which parts of the source code can be carefully cloned to achieve a better data-centric <b>offloading.</b> The second contribution is a code generation and rewriting strategy that transforms the program to deploy data-structures-based <b>offloading</b> on the fairly mature class-based <b>offloading</b> tools. ^ Running a partitioned version of the Java Grande Benchmarks Suite showed a reduction of the number of messages between servers compared to the pure allocation-sites-based <b>offloading</b> and class-based <b>offloading.</b> ...|$|R
5|$|Captain Waggett, the stuffy English {{commander}} of the local Home Guard, orders Odd to guard the cargo, but Macroon casually remarks that, by long-standing custom, a man cannot marry without hosting a party in which whisky must be served. Taking the hint, the sergeant allows himself to be overpowered, and the locals manage to <b>offload</b> {{a large number of}} cases before the ship goes down. Campbell had been sent to his room by his mother for a prior transgression, but is persuaded to leave and assist with the salvage by MacCodrun. This proves fortunate, as Campbell rescues the Biffer when he is trapped in the sinking freighter. The whisky also fortifies the teetotal Campbell's courage enough so he can stand up to his mother regarding Catriona.|$|E
5|$|Dickov {{opted to}} build a {{youthful}} side and made controversial decisions {{at the start of}} the season to <b>offload</b> 2009–10 player of the year and club captain Sean Gregan as well as top scorer Paweł Abbott amongst other first team players. The team went into the New Year in ninth position, with games in hand on the teams above them, and being unbeaten at home in the league. Results in the second half of the season were less consistent and the team finished the season in the bottom half of the table. On 6 May 2011 Dickov announced that he would make only his second appearance of the season for the first team in the final match of the season, and would then end his playing career to concentrate on management. He then came on as a 77th-minute substitute the following day against Milton Keynes Dons.|$|E
5|$|In 2014, Boeing {{conceptualized}} an Apache upgrade {{prior to}} the introduction of the U.S. Army's anticipated attack version of the Future Vertical Lift aircraft, forecast to replace the Apache by 2040. The conceptual AH-64F would have greater speed via a new 3,000 shp turboshaft engine from the improved turbine engine program, retractable landing gear, stub wings to <b>offload</b> lift from the main rotor during cruise, and a tail rotor that can articulate 90 degrees to provide forward thrust. In October 2016, the Army revealed they would not pursue another Apache upgrade to focus on funding the FVL; the Army will continue buying the Apache through the 2020s until Boeing's production line ends in 2026, then FVL is slated to come online in 2030.|$|E
40|$|This paper {{presents}} MAMoC, {{a framework}} which brings together a {{diverse range of}} infrastructure types including mobile devices, cloudlets, and remote cloud resources under one unified API. MAMoC allows mobile applications to leverage the power of multiple <b>offloading</b> destinations. MAMoC's intelligent <b>offloading</b> decision engine adapts to the contextual changes in this heterogeneous environment, {{in order to reduce}} the overall runtime for both single-site and multi-site <b>offloading</b> scenarios. MAMoC is evaluated through a set of <b>offloading</b> experiments, which evaluate the performance of our <b>offloading</b> decision engine. The results show that <b>offloading</b> computation using our framework can reduce the overall task completion time for both single-site and multi-site <b>offloading</b> scenarios. Comment: 8 pages, CloudCom 2017 Conferenc...|$|R
30|$|The <b>offloading</b> {{request is}} {{then sent to}} {{corresponding}} Cloud-RRH where the container’s manager (CM) will decide about <b>offloading</b> or not using the <b>offloading</b> decision algorithm which will be detailed in the next session. If the application will be <b>offloaded</b> in the Cloud-RRH, the CM sends a Resource Allocation Request packet to the serving container where it indicates the capacity required for processing. The <b>Offloading</b> Response will be routed up to the mobile device after execution.|$|R
30|$|In this paper, {{we propose}} a novel {{strategy}} for data <b>offloading</b> in cloud RAN-based mobile edge cloud computing. We aim to fully leverage {{the potential of}} such infrastructure throughout joint <b>offloading</b> decision and <b>offloading</b> requests scheduling in the edge cloud. One {{of the most critical}} issues impacting data <b>offloading</b> performances is task scheduling in cloud resources.|$|R
5|$|The {{costs of}} salvage, clean-up, and {{compensation}} {{are believed to}} have totalled around US$120 million. That included compensation paid by Total to Gulf. Most of the relevant costs were paid by insurance companies and all the various claims and counter-claims were eventually settled out of court. Gulf never reopened the terminal and a feasibility study in 1985 showed that it no longer had any potential use in international oil trade. In 1986, Gulf surrendered its lease on the site to the Irish government. The government used the terminal (after carrying out a limited refurbishment) to hold its strategic oil reserve. Initially, oil movement to and from the terminal was carried out by road. In 1990, {{at the time of the}} first Gulf war, an improvised repair was carried out to the jetty to allow an oil tanker to <b>offload</b> at the terminal on a one-off basis. In 1996, an unloading buoy was installed and this has been used since that time.|$|E
5|$|The jetty {{facilities}} used two cranes to <b>offload</b> coal, {{with the capacity}} of unloading two ships at one time, {{at a rate of}} 480 tonnes an hour. Coal was also delivered by rail to the east of the station using the Brighton Main Line which passes near the site. Coal was usually delivered to the jetty, rather than by rail. A conveyor belt system was then used to take coal to the coal storage area or directly to the station's boiler rooms. The conveyor belt system consisted of a series of bridges connected by towers. The coal storage area was a large concrete box capable of holding 75,000 tonnes of coal. This had an overhead gantry with a conveyor belt attached to the conveyor belt system, for taking coal from the coal store to the boiler rooms.|$|E
5|$|Although the two clubs {{claimed to}} have sold most of the 42,000 tickets {{allocated}} to them, only about 25,000 fans {{were said to have}} travelled to Moscow from the United Kingdom, with about 110 charter flights arriving ahead of the game. According {{to the head of the}} Russian national tourist office, Mikhail Ignatiev, many fans were put off by the cost of travel and accommodation. Additionally, most of Moscow's hotels were full on the night of the game. As some fans looked to <b>offload</b> tickets to the match, The Moscow Times reported that the black-market price dropped from a high of €2,000 (£1,600) to around €500 (£400), while Russian TV channel Sport-1 was reporting prices as low as £300 for tickets belonging to fans who had failed to make the trip to Moscow. Among the celebrities who did not travel were Chelsea supporter and chairman of the London Organising Committee of the Olympic and Paralympic Games (LOCOG) Sebastian Coe, who had to attend meetings ahead of the 2012 Summer Olympics, and Manchester United fan and Simply Red lead singer Mick Hucknall, who was due to perform at the BMW PGA Championship at Wentworth.|$|E
40|$|We {{analyze the}} {{conditions}} in which <b>offloading</b> computation reduces completion time. We extend the existing literature by deriving an inequality (Eq. 4) that relates computation <b>offloading</b> system parameters to the bits per instruction ratio of a computational job. This ratio is the inverse of the arithmetic intensity. We then discuss how this inequality can be used to determine the computations that can benefit from <b>offloading</b> as well as the computation <b>offloading</b> systems required to make <b>offloading</b> beneficial for particular computations...|$|R
30|$|Any <b>offloading</b> {{flow rate}} of each <b>offloading</b> station is {{constant}} within a time-window.|$|R
30|$|Parameters {{are taken}} into account, {{including}} pipeline information, oil input sequence, volume and flow rate of the initial station in {{a certain period of}} time, demand volumes of each <b>offloading</b> station, upper and lower limits of flow rate, and each station’s <b>offloading</b> flow rate limits. The decision variables are actual <b>offloading</b> volumes and the starting and ending time of <b>offloading</b> operation.|$|R
5|$|Bednar {{joined the}} theatre {{production}} company Live Entertainment Corporation of Canada, Inc. (Livent) in 1989, {{while it was}} still a division of motion picture exhibitor Cineplex Odeon. Garth Drabinsky and Myron Gottlieb purchased the division from their employers in December 1989, as Cineplex looked to <b>offload</b> assets. Originally the assistant general manager of The Pantages Theatre, he became its general manager. In 1993, he moved to North York Performing Arts Centre to prepare it for the stage revival of the musical Show Boat. Livent used Toronto as the test site for the original Broadway production of Ragtime; it made it world premiere at North York Centre in 1996, and Bednar was involved in production. As of 1997, Bednar was general manager of The Pantages Theatre. and general manager of theatre for its parent company, Livent. From 1997 to 1998, {{near the end of his}} time with the company, he spent a year in New York City preparing the Ford Center for the Performing Arts for its opening and that of Ragtime; he had worked on the production previously in Toronto. He was scheduled to oversee the remake of Chicago's Oriental Theatre into the Ford Center for the Performing Arts Oriental Theatre.|$|E
25|$|This {{has led to}} {{a surplus}} of cocaine which has {{resulted}} in local Mexican dealers attempting to <b>offload</b> extra narcotics along trafficking routes, especially in border areas popular among low income North American tourists.|$|E
25|$|The Intelligence Bureau of India {{allegedly}} leaked {{a report}} accusing Greenpeace of anti-development activities. The Delhi High Court overturned the governments decision to <b>offload</b> an Indian citizen from her travel to London - saying you cannot muzzle dissent.|$|E
30|$|To {{deal with}} the problem of {{cellular}} traffic overload, some methods have been studied to efficiently conduct <b>offloading.</b> Zhuo et al. considered the use of the VCG model for data <b>offloading</b> [8]. This model investigates the tradeoff between the amount of traffic being <b>offloaded</b> and the users’ satisfaction and provides a novel incentive framework to motivate users to leverage their delay tolerance for cellular traffic <b>offloading.</b> To minimize the incentive cost given an <b>offloading</b> target, users with high delay tolerance and large <b>offloading</b> potential should be prioritized for traffic <b>offloading.</b> To effectively capture the dynamic characteristics of users’ delay tolerance, the scheme in [8] lets users proactively express their delay tolerance based on the reverse auction. Gao et al. considered the use of the or Nash Bargaining Solution (NBS) in the data <b>offloading</b> system [20]. In this model, the MNO and APOs analyze the interaction among one MNO and multiple APOs based on the Nash bargaining theory.|$|R
40|$|AbstractDue to {{limitation}} of mobile device {{in terms of}} battery life and processing power, Mobile Cloud Computing (MCC) has become an attractive choice to leverage this shortcoming as the mobile computation could be <b>offloaded</b> to the cloud, which is so-called mobile computation <b>offloading.</b> Existing research on mobile computation <b>offloading</b> considers <b>offloading</b> a mobile computation to a single cloud. However, {{in the real world}} a computation service could be provided by multiple clouds and each computation service. Thus, a new and interesting research problem in mobile computation <b>offloading</b> is how to select a computation service for each of the computation tasks of a mobile computation such that the computation time of the mobile computation, the energy consumption of the mobile device and the cost of using the computation services are minimized. This is so called multi-site computation <b>offloading</b> in mobile cloud computing. In this paper we formulate the multi-site computation <b>offloading</b> problem, propose a heuristic algorithm for the multi-site computation <b>offloading</b> problem and evaluate the heuristic algorithm...|$|R
5000|$|Supports jumbo frames, {{hardware}} <b>offloading</b> (exact features <b>offloaded</b> vary by adapter), {{high bandwidth}} servicing (10G+) ...|$|R
25|$|In 1969–1970, extrajudicial {{administrative}} {{courts were}} created to <b>offload</b> a large volume of cases from the Criminal Court: the state DMV Traffic Violations Bureau (TVB), which adjudicates non-parking traffic violations, and the city DOF Parking Violations Bureau, which adjudicates parking violations.|$|E
25|$|On April 2, 2015, Cisco {{announced}} plans to buy Embrane, a software-defined networking startup. The deal will give Cisco Embrane's software platform, which provides layer 3–7 network services for things such as firewalls, VPN termination, server load balancers and SSL <b>offload.</b>|$|E
25|$|Repairs to the ship's broken {{fuel pump}} {{will be made}} at sea; the tugboat will then tow the ship to Port Arthur, Texas, to be {{anchored}} for additional repairs and eventually to <b>offload</b> more of its cargo: petroleum coke, a petroleum byproduct.|$|E
40|$|With {{the advent}} of {{wearable}} computing and the resulting growth in mobile application market, we investigate mobile opportunistic cloud computing where mobile devices leverage nearby computational resources {{in order to save}} execution time and consumed energy. Our goal is to enable generic computation <b>offloading</b> to heterogeneous devices forming a mobile-to-mobile opportunistic computing platform. In this paper, we adopt (1) an analytical approach and (2) an experimental approach to highlight the gain given by mobile-to-mobile opportunistic <b>offloading</b> compared to local execution. We also investigate multiple <b>offloading</b> strategies with regards to both computation time and energy consumption. We propose an auto-splitting and <b>offloading</b> algorithms that computes the optimal chunks sizes that could be <b>offloaded</b> remotely to neighboring mobile device. We show that our splitting and <b>offloading</b> algorithm succeeds in picking the optimal chunk sizes and distribution with up to 99. 7 % efficiency. In addition, the offloader device saves up to 80 % energy while <b>offloading</b> the task remotely. For instance if the offloader device is running out of battery, <b>offloading</b> is the ultimate solution to increase its lifetime...|$|R
40|$|Despite the {{evolution}} and enhancements that mobile devices have experienced, {{they are still}} considered as limited computing devices. Today, users become more demanding and expect to execute computational intensive applications on their smartphone devices. Therefore, Mobile Cloud Computing (MCC) integrates mobile computing and Cloud Computing (CC) in order to extend capabilities of mobile devices using <b>offloading</b> techniques. Computation <b>offloading</b> tackles limitations of Smart Mobile Devices (SMDs) such as limited battery lifetime, limited processing capabilities, and limited storage capacity by <b>offloading</b> the execution and workload to other rich systems with better performance and resources. This paper presents the current <b>offloading</b> frameworks, computation <b>offloading</b> techniques, and analyzes them along with their main critical issues. In addition, it explores different important parameters based on which the frameworks are implemented such as <b>offloading</b> method and level of partitioning. Finally, it summarizes the issues in <b>offloading</b> frameworks in the MCC domain that requires further research...|$|R
40|$|WiFi <b>offloading</b> is envisioned as a {{promising}} {{solution to the}} mobile data explosion problem in cellular networks. WiFi <b>offloading</b> for moving vehicles, however, poses unique characteristics and challenges, due to high mobility, fluctuating mobile channels, etc. In this paper, {{we focus on the}} problem of WiFi <b>offloading</b> in vehicular communication environments. Specifically, we discuss the challenges and identify the research issues related to drive-thru Internet access and effectiveness of vehicular WiFi <b>offloading.</b> Moreover, we review the state-of-the-art <b>offloading</b> solutions, in which advanced vehicular communications can be employed. We also shed some lights on the path for future research on this topic...|$|R
25|$|Historically, two supply ships, a {{freighter}} and a tanker, {{arrive at}} the ice pier each summer, after an icebreaker opens a ship channel through pack ice. The ice pier’s key function {{is to provide a}} platform for freight trucks to come alongside a supply ship to receive or <b>offload</b> cargo. Steel cables attached to shoreline hold the dock in a fixed position.|$|E
25|$|Commander Edward Grey Hulton took {{command in}} January 1884, and {{under his command}} some of her ship's company formed part of the Naval Brigade which {{accompanied}} the army under General Sir Gerald Graham. The Naval contingent consisted of 150 seamen and 400 Royal Marines. They came {{from a number of}} ships lying off Suakin which joined others at Trinkitat to <b>offload</b> the Expeditionary Force.|$|E
25|$|The main {{objective}} of the player being tackled is to keep possession of the ball. They will try to keep on their feet until teammates arrive in support. If brought to ground, they can immediately pass the ball (<b>offload)</b> or {{place it on the}} ground in a position advantageous to their team. The supporting teammates can continue running the ball or form a ruck or maul.|$|E
40|$|An {{economic}} user-centric WiFi <b>offloading</b> {{algorithm is}} proposed to satisfy the major concerns of wireless users, who wish to have better network performance with even less network expense. Thus in this paper both system throughput and network expense are considered, and {{the goal of the}} proposed <b>offloading</b> algorithm is to obtain an optimal <b>offloading</b> ratio, which can both maximize the system throughput and minimize the network expense. Firstly, a practical system model is set up {{on the basis of a}} typical scenario of heterogeneous network. In this model, the average throughput of both cellular network and WiFi network is analyzed carefully. Then an economic user-centric WiFi <b>offloading</b> {{algorithm is proposed}} with an evaluation function to evaluate the system, and the optimal <b>offloading</b> ratio can be obtained by minimizing the evaluation function. At last, numerical results represent a direct calculating process of the optimal <b>offloading</b> ratio. These results in return validate the efficiency of the proposed <b>offloading</b> algorithm as well...|$|R
40|$|<b>Offloading</b> the Transport Control Protocol/Internet Protocol (TCP/IP) is a {{task that}} {{relieves}} the main processor from having to service interrupts to the kernel for protocol handling. The first stage {{of this research was}} a frame carrier <b>offloading</b> simulation as an Alpha Test. The current stage is the development of a TCP/IP <b>offloading</b> framework using a bottom up approach. An Intelligent Network Interface Card (INIC) is also analyzed as a hardware candidate for a TCP/IP <b>offloading</b> implementation...|$|R
40|$|The {{emerging}} mobile cloud {{has expanded}} {{the horizon of}} application development and deployment with techniques such as code <b>offloading.</b> While <b>offloading</b> has been widely considered for saving energy and increasing responsiveness of mobile devices, the technique still faces many challenges pertaining to practical usage. In this article, we adopt a systemic approach for analyzing the components of a generic code <b>offloading</b> architecture. Based on theoretical and experimental analysis, we identify the key limitations for code <b>offloading</b> in practice and then propose solutions to mitigate these limitations. We develop a generic architecture to evaluate the proposed solutions. The results provide insights regarding the evolution and deployment of code <b>offloading...</b>|$|R
