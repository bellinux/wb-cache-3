12|7244|Public
5000|$|<b>Open</b> <b>Network</b> <b>Computing</b> Remote Procedure Call, by Sun Microsystems ...|$|E
50|$|The port mapper (rpc.portmap or just portmap, or rpcbind) is an <b>Open</b> <b>Network</b> <b>Computing</b> Remote Procedure Call (ONC RPC) {{service that}} runs on network nodes that provide other ONC RPC services.|$|E
50|$|<b>Open</b> <b>Network</b> <b>Computing</b> (ONC) Remote Procedure Call (RPC) is {{a remote}} {{procedure}} call system. ONC was originally developed by Sun Microsystems in the 1980s {{as part of their}} Network File System project, and is sometimes referred to as Sun RPC.|$|E
5000|$|... #Caption: Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> {{uninstaller}} icon.|$|R
5000|$|... #Subtitle level 3: Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> ...|$|R
50|$|Using the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) {{distributed}} computing platform.|$|R
5000|$|The first Unix CacheFS {{implementation}} {{was developed}} by Sun Microsystems and released in the Solaris 2.3 operating system release in 1993, {{as part of an}} expanded feature set for the NFS or Network File System suite known as <b>Open</b> <b>Network</b> <b>Computing</b> Plus (ONC+). [...] It was subsequently used in other UNIX operating systems such as Irix (starting with the 5.3 release in 1994).|$|E
50|$|On September 4, 1991, Sun {{announced}} that it would replace its existing BSD-derived Unix, SunOS 4, with one based on SVR4. This was identified internally as SunOS 5, but a new marketing name was introduced at the same time: Solaris 2. The justification for this new overbrand was that it encompassed not only SunOS, but also the OpenWindows graphical user interface and <b>Open</b> <b>Network</b> <b>Computing</b> (ONC) functionality.|$|E
5000|$|On September 4, 1991, Sun {{announced}} that its next major OS release would switch from its BSD-derived source base to {{one based on}} SVR4. Although the internal designation of this release would be SunOS 5, from this point Sun began using the marketing name Solaris. The justification for this new [...] "overbrand" [...] was that it encompassed not only SunOS, but also the OpenWindows desktop environment and <b>Open</b> <b>Network</b> <b>Computing</b> (ONC) functionality.|$|E
5000|$|Berkeley Open System for Skill Aggregation, {{by analogy}} with the {{distributed}} computing project Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> ...|$|R
5000|$|LHC@home is a {{distributed}} computing project for particle physics {{based on the}} Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) platform.|$|R
50|$|WinStars 2 {{features}} integrated {{support for}} the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) system for use with the SETI@home project.|$|R
5000|$|Network File System (NFS) is a {{distributed}} {{file system}} protocol originally developed by Sun Microsystems in 1984, [...] allowing a user on a client computer to access files over a computer network much like local storage is accessed. NFS, {{like many other}} protocols, builds on the <b>Open</b> <b>Network</b> <b>Computing</b> Remote Procedure Call (ONC RPC) system. The NFS is an open standard defined in Request for Comments (RFC), allowing anyone to implement the protocol.|$|E
40|$|This paper {{describes}} {{the design and}} implementation of a conversion tool. This tool, called Distributed Computing Environment (DCE) Porting Tool, converts an <b>Open</b> <b>Network</b> <b>Computing</b> (ONC) Remote Procedure Call (RPC) application to a DCE RPC application. The manual intervention needed during the conversion process in minimal. The paper briefly describes RPC programming and highlights the difference between ONC RPC and DCE RPC. The design decisions of the Porting Tool is explained. The implementation uses LEX and YACC (language processing tools supported by Unix) for conversion logic and OSF/MOTIF for Graphical User Interface (GUI). The paper concludes with current limitations of the Tool and the possible future work. Keywords: Remote Procedure Call (RPC), Distributed Computing Environment (DCE), <b>Open</b> <b>Network</b> <b>Computing</b> (ONC), Interface Definition Language (IDL), Porting Tool. 1 Introduction In simple terms, Distributed Processing means that, the (individual) components of an application [...] ...|$|E
40|$|Network File System is a {{distributed}} {{file system}} protocol, allowing a user on a client computer to access files over a network {{a lot like}} local storage is accessed. Network File System, similar to many other protocols, builds on the <b>Open</b> <b>Network</b> <b>Computing</b> Remote Procedure Call System. The Network File System is an open standard which is defined in RPCs, allowing anyone to implement the protocol. In this research paper {{we are going to}} study about its platform, implementation, designed goals and conclusion...|$|E
5000|$|SETI@home beta, {{using the}} Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) platform, {{is a test}} {{environment}} for the following future projects: ...|$|R
50|$|It {{used the}} Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) platform; however, it was {{initially}} launched using the United Devices Grid MP platform in 2002.|$|R
50|$|A major {{aspect of}} the project makes use of the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) platform. The Lattice Project {{maintains}} a separate BOINC web site.|$|R
40|$|Locally and {{functionally}} {{distributed applications}} realized on different system architectures demand a universal, portable and intuitive software utility for interprocess communication. Remote Procedure Calling (RPC) fulfills these requirements but suffers unnecessarily strict synchronization {{and the danger}} of deadlocks with complex client/server relations. Using message passing to avoid the inherent problems of RPC, however, requires additional knowledge and sometimes a complete structural redesign. This paper presents NoWait [...] RPC, an extended but fully compatible version of SUN's <b>Open</b> <b>Network</b> <b>Computing</b> Group's ONC RPC, which adds message passing capabilities to form an easy to use programming environment for robust system integration. NoWait [...] RPC was developed to resolve potentially arising deadlocks in an already RPC [...] based complex application. It {{is designed to be}} a plug-and-play substitute for ONC RPC and consists of the library and the extended protocol compiler nwrpcgen. Additio [...] ...|$|E
40|$|In an <b>open</b> <b>network</b> <b>computing</b> environment, a {{workstation}} {{cannot be}} trusted to identify its users correctly to network services. Kerberos provides an alternative approach whereby a trusted third-party authentication service is used to verify users' identities. This paper gives {{an overview of the}} Kerberos authentication model as implemented for MIT's Project Athena. It describes the protocols used by clients, servers, and Kerberos to achieve authentication. It also describes the management and replication of the database required. The views of Kerberos as seen by the user, programmer, and administrator are described. Finally, the role of Kerberos in the larger Athena picture is given, along with a list of applications that presently use Kerberos for user authentication. We describe the addition of Kerberos authentication to the Sun Network File System as a case study for integrating Kerberos with an existing application. Introduction This paper gives an overview of Kerberos, [...] ...|$|E
30|$|It is an <b>open</b> <b>network</b> <b>computing</b> platform. It {{provides}} {{the building blocks}} and services required to enable anything and anywhere application connectivity. JXTA's building blocks help in building applications in client-server or web-based computing or in distributed computing models. JXTA has {{a common set of}} open protocols backed with open source reference implementations for developing peer-to-peer applications. The JXTA protocols standardized in the manner, in which peers can do the following activities, i) discover each other, ii) self-organize into peer groups, iii) advertise and discover network resources, iv)communicate with each other and v) monitor. Addition to this, it consists of six protocols that support core P 2 P operations, such as peer discovery, organization, identification and messaging. It is also independent from the programming language, operating system, network topology and underlying communication protocol. The JXTA protocol implementations have tolerated a series of changes aimed at improving their performance, scalability, and reliability. JXTA has following advantages: i) interoperability, ii) platform independence and iii) ubiquity. It empowers end points (peers) by providing a unique addressing scheme (ID). Using this unique IDs peers can migrate across physical networks, changing transports and network address, even when they are temporarily disconnected and can be addressable by other end points [23].|$|E
50|$|PrimeGrid is a {{distributed}} computing project for searching for prime numbers of world-record size. It {{makes use of}} the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) platform.|$|R
5000|$|... #Caption: Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC), became {{useful as}} a {{platform}} for several distributed applications in areas as diverse as mathematics, medicine, molecular biology, climatology, and astrophysics.|$|R
5000|$|The Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) is {{the most}} widely used {{middleware}} system. It offers client software for Windows, Mac OS X, Linux, Android, and other Unix variants.|$|R
50|$|DENIS@Home is a {{distributed}} computing project hosted by San Jorge University and {{running on the}} Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) software platform. The primary goal of DENIS@Home is to compute large amounts of cardiac electrophysiological simulations.|$|R
5000|$|GPUGRID is a {{distributed}} computing project hosted by Pompeu Fabra University and {{running on the}} Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) software platform. It performs full-atom molecular biology simulations {{that are designed to}} run on Nvidia's CUDA-compatible graphics processing units.|$|R
50|$|Docking@Home was a {{distributed}} computing project {{hosted by the}} University of Delaware and running on the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) software platform. It models protein-ligand docking using the CHARMM program. The ultimate aim was {{the development of new}} pharmaceutical drugs.|$|R
30|$|GiGi-MR is {{compatible}} with BOINC (Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing),</b> the most successful and popular volunteer computing middleware to date. Consequently, our client can participate in GiGi-MR {{as well as in}} BOINC projects, and borrows many primitives and algorithms available to BOINC clients.|$|R
50|$|Using the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) {{distributed}} computing platform. In March 2011, {{there were more}} than 7,300 active participants from 114 countries with a total BOINC credit of more than 2.9 billion, reporting about 10 teraflops (10 trillion operations per second) of processing power.|$|R
50|$|TANPAKU was a {{distributed}} computing project aimed at researching the protein structure prediction problem. The project used the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) platform, and {{was developed in}} collaboration with the Yamato Lab (Department of Biological Science and Technology) and Takeda Lab (Department of Information Sciences) groups at the Tokyo University of Science.|$|R
500|$|Most grid {{computing}} applications use middleware (software {{that sits}} between {{the operating system}} and the application to manage network resources and standardize the software interface). The most common distributed computing middleware is the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC). Often, distributed computing software makes use of [...] "spare cycles", performing computations at times when a computer is idling.|$|R
50|$|POEM@Home was a {{distributed}} computing project {{hosted by the}} Karlsruhe Institute of Technology and running on the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) software platform. It modeled protein folding using Anfinsen's dogma. POEM@Home was started in 2007 and, due to advances using GPUs that rendered the BOINC program redundant, concluded in October 2016. The POEM@home applications were proprietary.|$|R
5000|$|Most grid {{computing}} applications use middleware (software {{that sits}} between {{the operating system}} and the application to manage network resources and standardize the software interface). The most common distributed computing middleware is the Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC). Often, distributed computing software makes use of [...] "spare cycles", performing computations at times when a computer is idling.|$|R
40|$|The Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) is an opensource {{middleware}} {{system for}} volunteer and desktop grid computing. In this {{paper we propose}} BNBTEST, a BOINC version of distributed branch and bound method. The crucial issues of distributed branch-and-bound method are traversing the search tree and loading balance. We developed subtaskspackaging method and three dierent subtasks' distribution strategies to solve these...|$|R
50|$|OProject@Home was a {{volunteer}} distributed computing project {{running on the}} Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) and {{was based on a}} dedicated library OLib. The project was directed by Lukasz Swierczewski, an IT student at the College of Computer Science and Business Administration in Lomza, Computer Science and Automation Institute. As of 2016 it seems to have been abandoned.|$|R
40|$|Abstract The Berkeley <b>Open</b> Infrastructure for <b>Network</b> <b>Computing</b> (BOINC) is an {{open-source}} middleware {{system for}} volunteer and desktop grid computing. In this paper, we propose BNBTEST, a BOINC {{version of the}} distributed branch-and-bound method. The crucial issues of the distributed branch-and-bound method are traversing the search tree and loading the balance. We developed a subtask packaging method and three different subtask distribution strategies to solve these...|$|R
