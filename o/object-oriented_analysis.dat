575|210|Public
25|$|Use {{cases are}} widely used system {{analysis}} modeling tools for identifying and expressing the functional requirements of a system. Each use case is a business scenario or event for which the system must provide a defined response. Use cases evolved from <b>object-oriented</b> <b>analysis.</b>|$|E
25|$|Following this {{fundamental}} choice, a second choice made by BDD relates {{to how the}} desired behavior should be specified. In this area BDD chooses to use a semi-formal format for behavioral specification which is borrowed from user story specifications {{from the field of}} <b>object-oriented</b> <b>analysis</b> and design. The scenario aspect of this format may be regarded as an application of Hoare logic to behavioral specification of software units using the Domain Language of the situation.|$|E
50|$|<b>Object-oriented</b> <b>analysis</b> {{and design}} methods are {{becoming}} {{the most widely}} used methods for computer systems design. The UML has become the standard language in <b>object-oriented</b> <b>analysis</b> and design. It is widely used for modeling software systems and is increasingly used for high designing non-software systems and organizations.|$|E
5000|$|... 1993. <b>Object-Oriented</b> Requirements <b>Analysis</b> and Logical Design: A Software Engineering Approach, John Wiley & Sons, ...|$|R
40|$|System analysts use {{numerous}} {{techniques to}} carry out phases of <b>object-oriented</b> systems <b>analysis.</b> Given the many tasks associated with systems analysis, {{a number of problems}} may arise throughout a project’s lifecycle related to honoring a customer’s needs and producing quality deliverables. In this paper, we propose a practical means for applying quality function deployment (QFD) in the <b>object-oriented</b> systems <b>analysis</b> domain to aid in preserving the customer’s voice throughout phases of systems analysis. Additionally, we set forth practical ways to leverage use of QFD in expediting logical model building and improving verification and validation of systems analysis deliverables...|$|R
40|$|We {{present a}} set-based control flow {{analysis}} for an imperative, concurrent object calculus extending the Fisher-Honsell-Mitchell functional object-oriented calculus described in [5]. The analysis {{is shown to}} be sound {{with respect to a}} transitionsystem semantics. Keywords: concurrent <b>object-oriented,</b> control-flow <b>analysis,</b> soundness, prototypebased...|$|R
5000|$|... 1996. Case Studies in <b>Object-Oriented</b> <b>Analysis</b> and Design. With Carl Argila. Prentice-Hall.|$|E
5000|$|... for Business process modeling, {{object-oriented}} programming (OOP) and <b>object-oriented</b> <b>analysis</b> and design (OOAD) ...|$|E
5000|$|Head First <b>Object-Oriented</b> <b>Analysis</b> and Design (...) by Brett McLaughlin, Gary Pollice and David West ...|$|E
40|$|<b>Object-oriented</b> (OO) <b>analysis,</b> design, and {{programming}} {{is a powerful}} paradigm for creating software that is easily understood, modified, and maintained. In this paper we demonstrate how the OO concepts of abstraction, inheritance, encapsulation, polymorphism, and dynamic binding have aided {{in the design of}} a graphical-programming tool...|$|R
5000|$|Prior {{to taking}} on the name [...] "OpenSees," [...] the {{framework}} was simply called [...] "G3" [...] {{in reference to the}} name of the PEER research group tasked with simulation development.The doctoral thesis of Frank McKenna on parallel <b>object-oriented</b> structural <b>analysis</b> formed the basis for [...] "G3." ...|$|R
40|$|This paper {{describes}} {{a method for}} developing object-oriented applications that involve concurrency. The method, called DO/CAD (<b>Object-Oriented</b> Concurrency <b>Analysis</b> and Design), is useful for systems which need to be structured as a network of sequential processes. This includes many types of applications, including real time software and firmwar...|$|R
5000|$|Ambiguous {{viewpoint}}: Presenting a model (usually <b>Object-oriented</b> <b>analysis</b> {{and design}} (OOAD)) without specifying its viewpoint ...|$|E
5000|$|... 2004 - Applying UML and Patterns: An Introduction to <b>Object-Oriented</b> <b>Analysis</b> and Design and Iterative Development - ...|$|E
5000|$|... 2001 - Applying UML and Patterns: An Introduction to <b>Object-Oriented</b> <b>Analysis</b> and Design and the Unified Process - ...|$|E
40|$|Abstract—Image-analysis {{algorithms}} are {{of great}} interest {{in the context of}} object-oriented coding schemes. With reference to the utilization of the cellular neural network (CNN) universal machine for <b>object-oriented</b> image <b>analysis,</b> this paper presents new analogic CNN algorithms for obtaining motion compensation, image synthesis, and consistency observation. Along with the already developed segmentation and object labeling technique, the proposed method represents a framework for implementing CNN-based real-time image analysis. Simulation results, carried out for different video sequences, confirm the validity of the approach developed herein. Index Terms—Analogic CNN algorithms, cellular neural net-works (CNNs), CNN based video coding, neural circuits for image processing, <b>object-oriented</b> image and <b>analysis,</b> spatiotemporal dynamics via cellular array. I...|$|R
40|$|Dissimilarity profile {{analysis}} (DPA) is introduced as an explorative tool for <b>object-oriented</b> data <b>analysis</b> techniques {{that address the}} problem of latent dimension extraction by using proximity measures. Potentialities of DPA are shown within a case study from Italian universities, where undergraduate courses are examined with respect to students’ enrolment, career, and degree attainment...|$|R
40|$|By {{integrating}} <b>object–oriented</b> requirements <b>analysis</b> with OO design, the Object–Oriented Software Development Method (OOSD) {{allows a}} practical {{focus on the}} objects of a problem throughout. OOSD requirements analysis clearly represents problem requirements and leads smoothly to design, creating a single consistent abstract model with strong validation and verification, which is easy to maintain, and closely follows the “real world”...|$|R
5000|$|... 1992. Book of {{object-oriented}} knowledge : <b>object-oriented</b> <b>analysis,</b> design, {{and implementation}} : {{a new approach}} to software engineering.|$|E
5000|$|The {{shift to}} the {{object-oriented}} (OO) paradigm for computer programming languages, which occurred in the 1980s and 1990s, {{was followed by the}} idea that programming should be preceded by <b>object-oriented</b> <b>analysis</b> and design of the programs, and, more generally, the systems those programs represent and serve. Thus, in the early 1990s, over 30 <b>object-oriented</b> <b>analysis</b> and design methods and notations flourished, leading to what was known as the [...] "methods war".|$|E
50|$|In {{software}} engineering, Business Object Notation (BON) is {{a method}} and graphical notation for high-level <b>object-oriented</b> <b>analysis</b> and design.|$|E
40|$|GeoViewer is an {{object-oriented}} GIS {{that easily}} attaches dynamic mapping capabilities to any <b>object-oriented</b> decision <b>analysis</b> application. GeoViewer provides transparent linkage to any object's data and behaviors {{as well as}} optimized spatial geometry representation. Tools are included for typical GIS functionality (e. g., zoom, pan, query), data ingestion, linkage to external models, and integration with other frameworks...|$|R
40|$|<b>Object-oriented</b> Systems <b>Analysis</b> (OSA) [EKW 92] is an {{analysis}} model whose {{purpose is to}} provide a way for analysts to capture and record real-world, system-application information. To produce software, OSA model instances must be mapped into code using some programming language. This paper shows how to map OSA model instances into production-quality Ada code. The technique uses templates that directly and efficiently support OSA concepts. We give basic templates, show how to map OSA concepts directly into the templates, and explain and discuss efficiency considerations. We illustrate our ideas with two sample applications. Implementing OSA Model Instances in Ada ABSTRACT <b>Object-oriented</b> Systems <b>Analysis</b> (OSA) [EKW 92] is {{an analysis}} model whose purpose {{is to provide a}} way for analysts to capture and record real-world, system-application information. To produce software, OSA model instances must be mapped into code using some programming language. This paper shows how to map OSA model [...] ...|$|R
40|$|In <b>object-oriented</b> image <b>analysis,</b> {{one needs}} to develop a set of tools to {{manipulate}} the detected objects, for example, to compress them, catalog them, analyze their characteristics, and filter their certain spatial frequency features in an individual manner. In this paper, we discuss the continuous extension and wavelet approximation of the detected object on a general domain Ω of R 2. We first extend continuously the image to a square T and such that it vanishes on boundary ∂T. On T Ω, the extension has a simple and clear representation which {{is determined by the}} equation of the boundary ∂Ω. We expand the extension into wavelet series on R 2. Since the extension tool is polynomials, by the moment theorem, we know that the sequence of wavelet coefficients obtained by us is sparse, so it can compress image efficiently. Moreover, using these wavelet coefficients, we can represent the object compactly for analysis, interpretation, discrimination, and so on. Key words: <b>object-oriented</b> image <b>analysis,</b> continuous extension, wavelet approximation...|$|R
50|$|His {{research}} interests are <b>object-oriented</b> <b>analysis</b> and design, object-oriented metrics, agent-oriented methodologies, and {{the migration of}} organizations to object technology.|$|E
50|$|A proper mapping between {{relational}} {{concepts and}} object-oriented concepts {{can be made}} if relational database tables are linked to associations found in <b>object-oriented</b> <b>analysis.</b>|$|E
5000|$|According to Booch, {{algorithmic}} decomposition is {{a necessary}} part of <b>object-oriented</b> <b>analysis</b> and design, but object-oriented systems start with and emphasize decomposition into classes.|$|E
40|$|Traditional pixel-based {{classification}} methods yield poor {{results when}} applied to SAR imagery {{because of the presence}} of speckle and limited information in backscatter coefficients. A novel classification method, integrating polarimetric target decomposition, <b>object-oriented</b> image <b>analysis,</b> and decision tree algorithms, is proposed for the classification of polarimetric SAR data (PolSAR). The polarimetric target decomposition is aimed at extracting physical information related to the scattering mechanism of targets for the classification of scattering data. The main purposes of the <b>object-oriented</b> image <b>analysis</b> are delineating objects and extracting various spatial and textural features. The decision tree algorithm provides an efficient way to select features and create a decision tree for the classification. A comparison between the proposed method and the Wishart supervised classification was made. The overall accuracies of these two methods were 89. 34 % and 79. 36 %, respectively. The results show that the proposed method is an effective method for the classification of PolSAR data. © 2010 IEEE. link_to_subscribed_fulltex...|$|R
40|$|Abstract. Hyper-{{heuristics}} are methodologies used {{to search}} the space of heuristics for solving computationally di cult problems. We describe an <b>object-oriented</b> domain <b>analysis</b> for hyper-heuristics that orthogonally decomposes the domain into generative policy components. The framework facilitates the recursive instantiation of hyper-heuristics over hyper-heuristics, allowing further exploration of the possibilities implied by the hyper-heuristic concept. We describe Hyperion, a JavaTM class library implementation of this domain analysis. ...|$|R
40|$|Keywords: <b>Object-oriented</b> system <b>analysis,</b> {{modelling}} formalisms and languages, UML Abstract: The {{importance of}} use cases {{has been growing}} {{for the last few}} years. We believe they are important to help developers capturing requirements. The work presented here formalises use cases using basic temporal logic to define history invariants within Object-Z class schemas. This is accomplished by proposing a set of formal frameworks integrated within a process. 1...|$|R
50|$|Grady Booch's {{object-oriented}} design (OOD), {{also known as}} <b>object-oriented</b> <b>analysis</b> and design (OOAD). The Booch model includes six diagrams: class, object, state transition, interaction, module, and process.|$|E
50|$|Popular {{modeling}} techniques include <b>Object-Oriented</b> <b>Analysis</b> and Design (OOAD) and Model-Driven Architecture (MDA). The Unified Modeling Language (UML) is a notation {{used for}} both the OOAD and MDA.|$|E
5000|$|The Shlaer-Mellor {{method is}} {{one of a number of}} {{software}} development methodologies which arrived in the late 1980s. Most familiar were <b>Object-Oriented</b> <b>Analysis</b> and Design (OOAD) by Grady Booch, Object Modeling Technique (OMT) by James Rumbaugh, Object-Oriented Software Engineering by Ivar Jacobson and <b>Object-Oriented</b> <b>Analysis</b> (OOA) by Shlaer and Mellor. These methods had adopted a new object-oriented paradigm to overcome the established weaknesses in the existing structured analysis and structured design (SASD) methods of the 1960s and 1970s. Of these well-known problems, Shlaer and Mellor chose to address: ...|$|E
40|$|The <b>Object-Oriented</b> Turbomachinery <b>Analysis</b> Code (OTAC) {{is a new}} meanline/streamline {{turbomachinery}} {{modeling tool}} being developed at NASA GRC. During the development process, a limitation of the code was discovered {{in relation to the}} analysis of choked flow in axial turbines. This paper describes the relevant physics for choked flow as well as the changes made to OTAC to enable analysis in this flow regime...|$|R
40|$|In this study, {{land cover}} types in Zonguldak test area were {{analysed}} {{on the basis}} of the classification results acquired using the pixelbased and <b>object-oriented</b> image <b>analysis</b> approaches. Landsat- 7 ETM with 6 spectral bands was used to carry out the image classification and ground truth data were collected from the available maps, aerial photographs, personal knowledge and communication with the local people. In pixel-based image analysis, firstly unsupervised classification based ISODATA algorithm was realised to provide priori knowledge on the possible candidate spectral classes exist in the experimental area. Then supervised classification was performed using the three different approaches of minimum-distance, paralellepiped and maximum-likelihood. On the other hand, <b>object-oriented</b> image <b>analysis</b> was evaluated through the eCognition software. During the implementation, several different sets of parameters were tested for image segmentation and nearest neigbour was used as the classifier. Outcome from the classification works show that the object-oriented approach gave more accurate results (including higher producer’s and user’s accuracy for most of the land cover classes) than those achieved by pixel-based classification algorithms. * Corresponding author. 1...|$|R
40|$|Urban {{green is}} {{recognized}} as an important functional element of the city, which affects directly the standard of living. The present paper {{is concerned with the}} study of urban green by means of <b>object-oriented</b> image <b>analysis</b> of high-resolution IKONOS data. More specifically, the potential for detecting urban green and quantitatively assessing it was explored. The analysis included two levels of segmentation and classification. On the first level, objects to which the image was segmented were subsequently classified according to a vegetation index (Scaled MSAVI) to areas with dense, thin or no vegetation. On the second level the image was classified in larger areas that simulated building blocks according to the relative area of vegetation, {{in order to create a}} thematic map of urban green density. The evaluation of the results indicated that detection and quantitative assessment of urban green was achieved with satisfactory accuracy. The use of additional data (DEM, hyperspectral, GIS) will allow a more detail study of the urban green from high resolution data by means of <b>object-oriented</b> image <b>analysis...</b>|$|R
