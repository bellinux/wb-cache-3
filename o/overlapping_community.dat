172|496|Public
2500|$|The {{religion}} and science community consists of those scholars who involve themselves {{with what has}} been called the [...] "religion-and-science dialogue" [...] or the [...] "religion-and-science field." [...] The community belongs to neither the scientific nor the religious community, but {{is said to be a}} third <b>overlapping</b> <b>community</b> of interested and involved scientists, priests, clergymen, theologians, and engaged non-professionals. Institutions interested in the intersection between science and religion include the Center for Theology and the Natural Sciences, the Institute on Religion in an Age of Science, the Ian Ramsey Centre, and the Faraday Institute. Journals addressing the relationship between science and religion include Theology and Science and [...] Eugenie Scott has written that the [...] "science and religion" [...] movement is, overall, composed mainly of theists who have a healthy respect for science and may be beneficial to the public understanding of science. She contends that the [...] "Christian scholarship" [...] movement is not a problem for science, but that the [...] "Theistic science" [...] movement, which proposes abandoning methodological materialism, does cause problems in understanding of the nature of science.|$|E
50|$|The clique {{percolation}} {{method is}} a popular approach for analyzing the <b>overlapping</b> <b>community</b> structure of networks. The term network community (also called a module, cluster or cohesive group)has no widely accepted unique definition and it is usually defined {{as a group of}} nodes that are more densely connected to each other than to other nodes in the network. There are numerous alternative methods for detecting communities in networks, for example, the Girvan-Newman algorithm, hierarchical clustering and modularity maximization.|$|E
50|$|Cliques are subgraphs {{in which}} every node is {{connected}} to every other node in the clique. As nodes can not be more tightly connected than this, {{it is not surprising}} that there are many approaches to community detection in networks based on the detection of cliques in a graph and the analysis of how these overlap. Note that as a node can be a member of more than one clique, a node can be a member of more than one community in these methods giving an <b>overlapping</b> <b>community</b> structure.|$|E
30|$|Providing a new {{efficient}} algorithm for computing (eventually <b>overlapping)</b> <b>communities.</b>|$|R
40|$|Many {{complex systems}} can be {{described}} as networks to comprehend both the structure and the function. Community structure {{is one of the most}} important properties of complex networks. Detecting <b>overlapping</b> <b>communities</b> in networks have been more attention in recent years, but the most of approaches to this problem have been applied to the undirected networks. This paper presents a novel approach based on link partition to detect <b>overlapping</b> <b>communities</b> structure in directed networks. In contrast to previous researches focused on grouping nodes, our algorithm defines communities as groups of directed links rather than nodes with the purpose of nodes naturally belong to more than one community. This approach can identify a suitable number of <b>overlapping</b> <b>communities</b> without any prior knowledge about the community in directed networks. We evaluate our algorithm on a simple artificial network and several real-networks. Experimental results demonstrate that the algorithm proposed is efficient for detecting <b>overlapping</b> <b>communities</b> in directed networks. Â  </p...|$|R
40|$|Community {{detection}} {{in complex}} networks {{is a fundamental}} data analysis task in various domains, and how to effectively find <b>overlapping</b> <b>communities</b> in real applications is still a challenge. In this work, we propose a new unified model and method for finding the best <b>overlapping</b> <b>communities</b> {{on the basis of}} the associated node and link partitions derived from the same framework. Specifically, we first describe a unified model that accommodates node and link communities (partitions) together, and then present a nonnegative matrix factorization method to learn the parameters of the model. Thereafter, we infer the <b>overlapping</b> <b>communities</b> based on the derived node and link communities, i. e., determine each <b>overlapped</b> <b>community</b> between the corresponding node and link community with a greedy optimization of a local community function conductance. Finally, we introduce a model selection method based on consensus clustering to determine the number of communities. We have evaluated our method on both synthetic and real-world networks with ground-truths, and compared it with seven state-of-the-art methods. The experimental results demonstrate the superior performance of our method over the competing ones in detecting <b>overlapping</b> <b>communities</b> for all analysed data sets. Improved performance is particularly pronounced in cases of more complicated networked community structures...|$|R
50|$|Communities {{are often}} {{defined in terms}} of the {{partition}} of the set of vertices, that is each node is put into one and only one community, just as in the figure. This is a useful simplification and most community detection methods find this type of community structure. However, in some cases a better representation could be one where vertices are in more than one community. This might happen in a social network where each vertex represents a person, and the communities represent the different groups of friends: one community for family, another community for co-workers, one for friends in the same sports club, and so on. The use of cliques for community detection discussed below is just one example of how such <b>overlapping</b> <b>community</b> structure can be found.|$|E
5000|$|The {{religion}} and science community consists of those scholars who involve themselves {{with what has}} been called the [...] "religion-and-science dialogue" [...] or the [...] "religion-and-science field." [...] The community belongs to neither the scientific nor the religious community, but {{is said to be a}} third <b>overlapping</b> <b>community</b> of interested and involved scientists, priests, clergymen, theologians, and engaged non-professionals. Institutions interested in the intersection between science and religion include the Center for Theology and the Natural Sciences, the Institute on Religion in an Age of Science, the Ian Ramsey Centre, and the Faraday Institute. Journals addressing the relationship between science and religion include Theology and Science and Zygon: Journal of Religion & Science. Eugenie Scott has written that the [...] "science and religion" [...] movement is, overall, composed mainly of theists who have a healthy respect for science and may be beneficial to the public understanding of science. She contends that the [...] "Christian scholarship" [...] movement is not a problem for science, but that the [...] "Theistic science" [...] movement, which proposes abandoning methodological materialism, does cause problems in understanding of the nature of science.|$|E
40|$|Community {{structure}} {{is the key}} aspect of complex network analysis and it has important practical significance. While in real networks, some nodes may belong to multiple communities, so <b>overlapping</b> <b>community</b> detection attracts more and more attention. But most of the existing <b>overlapping</b> <b>community</b> detection algorithms increase the time complexity in some extent. In order to detect <b>overlapping</b> <b>community</b> structures in complex network more effectively, we propose a novel <b>overlapping</b> <b>community</b> detection method by local community expansion called OCDLCE. The proposed algorithm firstly partitions the network into small local communities using the local structural information, and then merges these communities to the final <b>overlapping</b> <b>community</b> structures. We present the concept of community connectivity as the criterion of community combination in {{the second stage of}} the proposed algorithm. The experimental results on both synthetic and real networks demonstrate that our algorithm improves the community detection performance, and at the same time, its time efficiency is better than the state-of-the-art methods. Key words: complex network, <b>overlapping</b> <b>community,</b> community detection, local community, OCDLCE 1...|$|E
40|$|Usually the {{boundary}} of a community in a network is drawn between nodes and thus crosses its outgoing links. If we construct <b>overlapping</b> <b>communities</b> by applying the link-clustering approach nodes and links interchange their roles. Therefore, boundaries must drawn through the nodes shared by two or more communities. For the purpose of community evaluation we define a conductance of boundary nodes of <b>overlapping</b> <b>communities</b> analogously to the graph conductance of boundary-crossing links used to partition a graph into disjoint communities. We show that conductance of boundary nodes (or normalised node cut) can be deduced from ordinary graph conductance of disjoint clusters in the network's weighted line graph introduced by Evans and Lambiotte (2009) to get <b>overlapping</b> <b>communities</b> of nodes in the original network. We test whether our definition {{can be used to}} construct meaningful <b>overlapping</b> <b>communities</b> with a local greedy algorithm of link clustering. In this note we present encouraging results we obtained for Zachary's karate-club network. Comment: 9 pages, 7 figures, corrected version, two sections and some sentences deleted, footnote 7 (p. 7) adde...|$|R
40|$|Finding decompositions of a graph into {{a family}} of {{clusters}} is crucial to understanding its underlying structure. While most existing approaches focus on partitioning the nodes, real-world datasets suggest the presence of <b>overlapping</b> <b>communities.</b> We present OCA, a novel algorithm to detect <b>overlapped</b> <b>communities</b> in large data graphs. It outperforms previous proposals in terms of execution time, and efficiently handles large graphs containing more than 108 nodes and edges. Postprint (published version...|$|R
30|$|While weak {{ties and}} closure are {{building}} blocks of small world structures, forbidden triads are {{building blocks of}} fold networks. Fold networks {{have been identified as}} predictors of the generation of novelty, where <b>overlapping</b> cohesive <b>communities</b> contribute to both the recognition of a novel possibility, and the realization of the novel idea as a product (de Vaan et al., 2015). It was also demonstrated {{that it is not the}} agency at the <b>overlap</b> of <b>communities</b> that matters, but the successful mobilization of the non-intersecting unique part of <b>overlapping</b> <b>communities,</b> and <b>overlapping</b> <b>communities</b> have also been shown to be more unstable than non-overlapping communities (Vedres and Stark 2010). Fold networks operate by a generative tension: They provoke the generation of novelty, but also contribute to coordination and loyalty conflicts.|$|R
40|$|AbstractSocial networks, {{as well as}} {{many other}} {{real-world}} networks, exhibit <b>overlapping</b> <b>community</b> structure. In this paper, we present formulas which facilitate the computation for characterizing the <b>overlapping</b> <b>community</b> structure of networks. A hypergraph representation of networks with <b>overlapping</b> <b>community</b> structure is introduced. Using the hypergraph representation we setup a social network model which exhibits innate tunable <b>overlapping</b> <b>community</b> structure. By comparing simulation results of our model with results of the Hyves network and the SourceForge network, we show that our model captures most of the common features of large social networks. We analytically give the relation between the maximum membership number of a network and the adjacency eigenvalues of the simple graph representation of the network, which is the line graph of the hypergraph representation...|$|E
40|$|In {{this work}} we study {{diffusion}} in networks with community structure. We first replicate and extend work on networks with non-overlapping community structure. We then study diffusion on network models that have <b>overlapping</b> <b>community</b> structure. We study contagions {{in the standard}} SIR model, and complex contagions thought to be better models of some social diffusion processes. Finally, we investigate diffusion on empirical networks with known <b>overlapping</b> <b>community</b> structure, by analysing the structure of such networks, and by simulating contagion on them. We find that simple and complex contagions can spread fast in networks with <b>overlapping</b> <b>community</b> structure. We also find that short paths exist through <b>overlapping</b> <b>community</b> structure on empirical networks. Comment: 10 pages, 21 Figures. R 2, updated with extra figures, clearer explanatio...|$|E
40|$|Social networks, {{as well as}} {{many other}} {{real-world}} networks, exhibit <b>overlapping</b> <b>community</b> structure. In this paper, we present formulas which facilitate the computation for characterizing the <b>overlapping</b> <b>community</b> structure of networks. A hypergraph representation of networks with <b>overlapping</b> <b>community</b> structure is introduced. Using the hypergraph representation we setup a social network model which exhibits innate tunable <b>overlapping</b> <b>community</b> structure. By comparing simulation results of our model with results of the Hyves network and the SourceForge network, we show that our model captures most of the common features of large social networks. We analytically give the relation between the maximum membership number of a network and the adjacency eigenvalues of the simple graph representation of the network, which is the line graph of the hypergraph representation. Intelligent SystemsElectrical Engineering, Mathematics and Computer Scienc...|$|E
40|$|AbstractâSocial {{networks}} {{consist of}} various communities that host members sharing common characteristics. Often {{some members of}} one community are also members of other communities. Such shared membership of different <b>communities</b> leads to <b>overlapping</b> <b>communities.</b> Detecting such <b>overlapping</b> <b>communities</b> is a challenging and computationally intensive problem. In this paper, we investigate the usability of high performance computing {{in the area of}} social networks and community detection. We present highly scalable variants of a community detection algorithm called Speaker-listener Label Propagation Algorithm (SLPA). We show that despite of irregular data dependencies in the computation, parallel computing paradigms can significantly speed up the detection of <b>overlapping</b> <b>communities</b> of social networks which is computationally expensive. We show by experiments, how various parallel computing architectures can be utilized to analyze large social network data on both shared memory machines and distributed memory machines, such as IBM Blue Gene...|$|R
40|$|International audienceIn this paper, {{we propose}} a new {{approach}} to detect <b>overlapping</b> <b>communities</b> in large complex networks. We first introduce a parametrized notion of a community, called k-linked community, allowing us to characterize node/edge centered k-linked community with bounded diameter. Such community admits a node or an edge with a distance at most k 2 from any other node of that community. Next, we show how the problem of detecting node/edge centered k-linked <b>overlapping</b> <b>communities</b> can be expressed as a Partial Max-SAT optimization problem. Then, we propose a post-processing strategy to limit the <b>overlaps</b> between <b>communities.</b> An extensive experimental evaluation on real-world networks shows that our approach outperforms several popular algorithms in detecting relevant communitie...|$|R
40|$|We {{present a}} new online {{algorithm}} for detecting <b>overlapping</b> <b>communities.</b> The main ingredients are {{a modification of}} an online k-means algorithm and {{a new approach to}} modelling <b>overlap</b> in <b>communities.</b> An evaluation on large benchmark graphs shows that the quality of discovered communities compares favorably to several methods in the recent literature, while the running time is significantly improved...|$|R
40|$|Network {{communities}} represent mesoscopic {{structure for}} understanding the organization of real-world networks, where nodes often belong to multiple communities and form <b>overlapping</b> <b>community</b> structure in the network. Due to non-triviality in finding the exact boundary of such overlapping communities, this problem has become challenging, and therefore huge effort {{has been devoted to}} detect overlapping communities from the network. In this paper, we present PVOC (Permanence based Vertex-replication algorithm for <b>Overlapping</b> <b>Community</b> detection), a two-stage framework to detect <b>overlapping</b> <b>community</b> structure. We build on a novel observation that non-overlapping community structure detected by a standard disjoint community detection algorithm from a network has high resemblance with its actual <b>overlapping</b> <b>community</b> structure, except the overlapping part. Based on this observation, we posit that there is perhaps no need of building yet another <b>overlapping</b> <b>community</b> finding algorithm; but one can efficiently manipulate the output of any existing disjoint community finding algorithm to obtain the required overlapping structure. We propose a new post-processing technique that by combining with any existing disjoint community detection algorithm, can suitably process each vertex using a new vertex-based metric, called permanence, and thereby finds out overlapping candidates with their community memberships. Experimental results on both synthetic and large real-world networks show that PVOC significantly outperforms six state-of-the-art <b>overlapping</b> <b>community</b> detection algorithms in terms of high similarity of the output with the ground-truth structure. Thus our framework not only finds meaningful overlapping communities from the network, but also allows us {{to put an end to}} the constant effort of building yet another <b>overlapping</b> <b>community</b> detection algorithm. Comment: 19 pages, 8 figures, 4 tables in Journal of Statistical Mechanics: Theory and Experiment (JSTAT), 2015. arXiv admin note: text overlap with arXiv: 1110. 5813 by other author...|$|E
40|$|Community {{structure}} can {{be observed}} in many natural, biological and social networks. Studies suggest that these communities may have organized in a hierarchical manner while some communities overlap with others. This paper introduces an algorithm to detect such hierarchical and <b>overlapping</b> <b>community</b> structures in networks based on the concept of maximal cliques. It introduces an alternate modularity for evaluating <b>overlapping</b> <b>community</b> structures. Unlike existing algorithms for detecting hierarchical and <b>overlapping</b> <b>community</b> structures, the new algorithm is free of parameter tuning and random seeds. Experiments conducted on two real-world networks show that this algorithm is capable of providing satisfactory and consistent results. Department of Electronic and Information EngineeringRefereed conference pape...|$|E
40|$|International audienceOverlapping {{community}} {{structure has}} attracted {{much interest in}} recent years since Palla et al. proposed the k-clique percolation algorithm for community detection and {{pointed out that the}} <b>overlapping</b> <b>community</b> structure is more reasonable to capture the topology of networks. Despite many efforts to detect overlapping communities, the <b>overlapping</b> <b>community</b> problem is still a great challenge in complex networks. Here we introduce an approach to identify <b>overlapping</b> <b>community</b> structure based on an efficient partition algorithm. In our method, communities are formed by merging peripheral clusters with cores. Therefore, communities are allowed to overlap. We show experimental studies on synthetic networks and real networks to demonstrate that our method has excellent performances in community detection...|$|E
40|$|Folksonomies like Delicious and LastFm are {{modelled}} as tri-partite (user-resource-tag) hypergraphs {{for studying}} their network properties. Detecting communities of similar nodes from such networks is a challenging problem. Most exist-ing algorithms for community detection in folksonomies as-sign unique communities to nodes, whereas in reality, users have multiple topical {{interests and the}} same resource is often tagged with semantically different tags. The few attempts to detect <b>overlapping</b> <b>communities</b> work on projections of the hypergraph, which results in significant loss of informa-tion contained in the original tripartite structure. We pro-pose the first algorithm to detect <b>overlapping</b> <b>communities</b> in folksonomies using the complete hypergraph structure. Our algorithm converts a hypergraph into its corresponding line-graph, using measures of hyperedge similarity, whereby any community detection algorithm on unipartite graphs {{can be used to}} produce <b>overlapping</b> <b>communities</b> in the folksonomy. Through extensive experiments on synthetic as well as real folksonomy data, we demonstrate that the proposed algo-rithm can detect better community structures as compared to existing state-of-the-art algorithms for folksonomies. 1...|$|R
30|$|<b>Overlapping</b> <b>communities</b> detection: The goal is {{to compute}} soft {{clustering}} of the graph nodeâs set where a node can belongs to several communities at once [61, 64, 77, 87, 88].|$|R
30|$|Considering the {{importance}} of the community detection problem this work aim to identify hidden layer micro-community, <b>overlapping</b> <b>communities</b> and related functional dynamics by using concept of modified adjacency and modified Laplacian matrices.|$|R
40|$|AbstractâIn {{this work}} we study {{diffusion}} in networks with community structure. We first replicate and extend work on networks with non-overlapping community structure. We then study diffusion on network models that have overlapping com-munity structure. We study contagions {{in the standard}} SIR model, and complex contagions thought to be better models of some social diffusion processes. Finally, we investigate diffusion on empirical networks with known <b>overlapping</b> <b>community</b> structure, by analysing the structure of such networks, and by simulating contagion on them. We find that simple and complex contagions can spread fast in networks with <b>overlapping</b> <b>community</b> structure. We also find that short paths exist through <b>overlapping</b> <b>community</b> structure on empirical networks. I...|$|E
40|$|Abstract: <b>Overlapping</b> <b>community</b> {{detection}} is {{a popular}} topic in complex networks. As compared to disjoint community structure, <b>overlapping</b> <b>community</b> structure is more suitable to describe networks at a macroscopic level. Overlaps shared by communities {{play an important role}} in combining different communities. In this paper, two methods are proposed to detect <b>overlapping</b> <b>community</b> structure. One is called clique optimization, and the other is named fuzzy detection. Clique optimization aims at detecting granular overlaps. The clique optimization method is a fine grain scale approach. Each granular overlap is a node connected to distinct communities and it is highly connected to each community. Fuzzy detection is at a coarser grain scale and aims at identifying modular overlaps. Modular overlaps represent groups of nodes that have high community membership degrees with several communities. A modular overlap is itself a possible cluster/sub-community. Experimental studies in synthetic networks and real networks show that both methods provide good performances in detecting overlapping nodes but in different views. In addition, a new extension of modularity is introduced for measuring the quality of <b>overlapping</b> <b>community</b> structure...|$|E
3000|$|We {{describe}} the <b>overlapping</b> <b>community</b> mapping algorithm {{and the central}} nodes identification methods in a 4 -step procedure: [...]...|$|E
40|$|International audienceThis paper {{presents}} a novel spectral algorithm with additive clustering designed to identify <b>overlapping</b> <b>communities</b> in networks. The algorithm {{is based on}} geometric properties of the spectrum of the expected adjacency matrix in a random graph model that we call stochastic blockmodel with overlap (SBMO). An adaptive version of the algorithm, that {{does not require the}} knowledge of the number of hidden communities, is proved to be consistent under the SBMO when the degrees in the graph are (slightly more than) logarithmic. The algorithm is shown to perform well on simulated data and on real-world graphs with known <b>overlapping</b> <b>communities...</b>|$|R
40|$|Online folksonomies are modeled as {{tripartite}} hypergraphs, and detecting communities {{from such}} networks is a challenging and well-studied problem. However, almost every existing algorithm {{known to us}} for community detection in hypergraphs assign unique communities to nodes, whereas in reality, nodes in folksonomies belong to multiple <b>overlapping</b> <b>communities</b> e. g. users have multiple topical interests, and the same resource is often tagged with semantically different tags. In this paper, we propose an algorithm to detect <b>overlapping</b> <b>communities</b> in folksonomies by customizing a recently proposed edge-clustering algorithm (that is originally for traditional graphs) for use on hypergraphs...|$|R
40|$|LAGE is a {{systematic}} framework developed in Java. The motivation of LAGE {{is to provide}} a scalable and parallel solution to reconstruct Gene Regulatory Networks (GRNs) from continuous gene expression data for very large amount of genes. The basic idea of our framework is motivated by the philosophy of divideand-conquer. Specifically, LAGE recursively partitions genes into multiple <b>overlapping</b> <b>communities</b> with much smaller sizes, learns intra-community GRNs respectively before merge them altogether. Besides, the complete information of <b>overlapping</b> <b>communities</b> serves as the byproduct, which could be used to mine meaningful functional modules in biological networks. Comment: 2 page...|$|R
3000|$|... are {{the number}} of {{overlapping}} communities to which node i and node j belongs. High value of âQ_M^W indicates a significant <b>overlapping</b> <b>community</b> structure.|$|E
30|$|The early <b>overlapping</b> <b>community</b> {{detection}} algorithms [21, 22] {{were not}} effective on large graphs. Lancichinetti et al. [23] proposed a scalable <b>overlapping</b> <b>community</b> detection algorithmâorder statistics local optimization method (OSLOM), {{which was based}} on a measurement similar to modularity but was able to handle overlapping communities. Yang and Leskovec studied the properties of large-scale overlapping communities [4] and proposed the BigClam algorithm [1]. They provided some large-scale datasets with ground-truth communities available to researchers, which have become standard test datasets. The BigClam algorithm seeks to fit a probabilistic generative model that satisfies certain community properties discovered in their studies [1, 24]. Whang et al. [2] proposed another <b>overlapping</b> <b>community</b> detection algorithm called NISE, based on seed set expansion, which starts with a seed set generated by Graclus or other methods and uses random walk to obtain overlapping communities. These algorithms that are dedicated to community detection have demonstrated better performance in terms of discovering ground-truth communities compared with the traditional graph-partitioning algorithms.|$|E
40|$|K-clique {{percolation}} is an <b>overlapping</b> <b>community</b> finding algorithm which extracts particular structures, {{comprised of}} overlapping cliques, from complex networks. While it is conceptually straightforward, {{and can be}} elegantly expressed using clique graphs, certain aspects of k-clique percolation are computationally challenging in practice. In this paper we investigate aspects of empirical social networks, such as {{the large numbers of}} overlapping maximal cliques contained within them, that make clique percolation, and clique graph representations, computationally expensive. We motivate a simple algorithm to conduct clique percolation, and investigate its performance compared to current best-in-class algorithms. We present improvements to this algorithm, which allow us to perform k-clique percolation on much larger empirical datasets. Our approaches perform much better than existing algorithms on networks exhibiting pervasively <b>overlapping</b> <b>community</b> structure, especially for higher values of k. However, clique percolation remains a hard computational problem; current algorithms still scale worse than some other <b>overlapping</b> <b>community</b> finding algorithms. Comment: 12 pages, 8 figures. Supporting source code available: [URL]...|$|E
40|$|Detection of {{non-overlapping}} and <b>overlapping</b> <b>communities</b> {{are essentially}} the same problem. However, current algorithms focus either on finding <b>overlapping</b> or non-overlapping <b>communities.</b> We present a generalized framework that can identify both non-overlapping and <b>overlapping</b> <b>communities,</b> without any prior input about the network or its community distribution. To do so, we introduce a vertex-based metric, GenPerm, that quantifies by how much a vertex belongs to each of its constituent communities. Our community detection algorithm is based on maximizing the GenPerm over all the vertices in the network. We demonstrate, through experiments over synthetic and real-world networks, that GenPerm {{is more effective than}} other metrics in evaluating community structure. Further, we show that due to its vertex-centric property, GenPerm can be used to unfold several inferences beyond community detection, such as core-periphery analysis and message spreading. Our algorithm for maximizing GenPerm outperforms six state-of-the-art algorithms in accurately predicting the ground-truth labels. Finally, we discuss the problem of resolution limit in <b>overlapping</b> <b>communities</b> and demonstrate that maximizing GenPerm can mitigate this problem. Comment: This paper (final version) is accepted in IEEE Transactions on Knowledge and Data Engineering (TKDE). 13 Figures, 6 table...|$|R
40|$|The last years, {{there has}} been a great {{interest}} in detecting <b>overlapping</b> <b>communities</b> in complex networks, which is understood as dense groups of nodes featuring a low outbound density. To date, most methods used to uncover <b>overlapping</b> <b>communities</b> stem from the field of disjoint community detection by attempting to decompose the whole network into several possibly overlapping groups of nodes. In this article we take an orthogonal approach by introducing a novel point of view to the problem of <b>overlapping</b> <b>communities,</b> namely the concept of egomunities, which are subjective communities centered around a given node, more precisely inside its neighborhood. In order to construct those egomunities, we propose a general metric on graphs, the cohesion, inspired by sociological considerations. The cohesion quantifies the community-ness of one given set of nodes, based on the notions of weak ties and triangles â triplets of pairwise connected nodes, instead of the classical view using only edge density. A set of nodes has a high cohesion if it features a high density of triangles an...|$|R
40|$|This is code to {{implement}} our weighted line graphs, i. e. graphs whose nodes are {{the edges of}} the original graph which aslo capture the correct dynamical features of the original network. Weighted line graphs provide an alternative, valuable representation of the system's topology, and have important applications in community detection. The usual node partition of a line graph naturally leads to an edge partition of the original graph. This identification allows us to use traditional partitioning methods in order to address the long-standing problem of the detection of <b>overlapping</b> <b>communities.</b> Here we provide our simple C++ line graph code which takes in a graph as an edge list and outputs different types of line graph as another edge list. An executable suitable for most Windows machines is included as is basic documentation. This code been used successfully on a graph which produced 5. 5 e 8 stubs in its line graph, though a special machine was used for this as it needs more than 4 Gb of RAM memory. On a 4 Gb machine a line graph with 4. 5 e 7 stubs was created. We also have java based code which is part of a much bigger package. Discussions, papers and slides from talks:- Paper: Line Graphs, Link Partitions and <b>Overlapping</b> <b>Communities,</b> Phys. Rev. E 80 (2009) 016105 [arXiv: 0903. 2181]. Conference Paper: <b>Overlapping</b> <b>Communities,</b> Link Partitions and Line Graphs, a very slightly altered version forECCS 09. Slides from talk What am I? Finding Communities in Networks Using Line Graphs given at University of Warwick Complexity Forum, 28 thOctober 2009. Slides from talk <b>Overlapping</b> <b>Communities,</b> Edge Partitions and Line Graphs given at ECCS 09 (University of Warwick, 22 nd September 2009). Paper: Edge Partitions and <b>Overlapping</b> <b>Communities</b> in Complex Networks, Eur. Phys. J. B 2010, 77, 265 â 272 [arXiv: 0912. 4389]. This covers in more detail the case where one is interested in the different line graphs of a weighted graph. Input used for the Les Miserable network and the correpsonding outputs obtained using this code as described in the original paper are available asÂ [URL] is code {{to implement}} our weighted line graphs, i. e. graphs whose nodes are {{the edges of the}} original graph which aslo capture the correct dynamical features of the original network. Weighted line graphs provide an alternative, valuable representation of the system's topology, and have important applications in community detection. The usual node partition of a line graph naturally leads to an edge partition of the original graph. This identification allows us to use traditional partitioning methods in order to address the long-standing problem of the detection of <b>overlapping</b> <b>communities.</b> Here we provide our simple C++ line graph code which takes in a graph as an edge list and outputs different types of line graph as another edge list. An executable suitable for most Windows machines is included as is basic documentation. This code been used successfully on a graph which produced 5. 5 e 8 stubs in its line graph, though a special machine was used for this as it needs more than 4 Gb of RAM memory. On a 4 Gb machine a line graph with 4. 5 e 7 stubs was created. We also have java based code which is part of a much bigger package. Discussions, papers and slides from talks:- Paper: Line Graphs, Link Partitions and <b>Overlapping</b> <b>Communities,</b> Phys. Rev. E 80 (2009) 016105 [arXiv: 0903. 2181]. Conference Paper: <b>Overlapping</b> <b>Communities,</b> Link Partitions and Line Graphs, a very slightly altered version forECCS 09. Slides from talk What am I? Finding Communities in Networks Using Line Graphs given at University of Warwick Complexity Forum, 28 thOctober 2009. Slides from talk <b>Overlapping</b> <b>Communities,</b> Edge Partitions and Line Graphs given at ECCS 09 (University of Warwick, 22 nd September 2009). Paper: Edge Partitions and <b>Overlapping</b> <b>Communities</b> in Complex Networks, Eur. Phys. J. B 2010, 77, 265 â 272 [arXiv: 0912. 4389]. This covers in more detail the case where one is interested in the different line graphs of a weighted graph. Input used for the Les Miserable network and the correpsonding outputs obtained using this code as described in the original paper are available asÂ [URL] is code to implement our weighted line graphs, i. e. graphs whose nodes are the edges of the original graph which aslo capture the correct dynamical features of the original network. Weighted line graphs provide an alternative, valuable representation of the systems topology, and have important applications in community detection. The usual node partition of a line graph naturally leads to an edge partition of the original graph. This identification allows us to use traditional partitioning methods in order to address the long-standing problem of the detection of <b>overlapping</b> <b>communities.</b> Here we provide our simple C++ line graph code which takes in a graph as an edge list and outputs different types of line graph as another edge list. An executable suitable for most Windows machines is included as is basic documentation. This code been used successfully on a graph which produced 5. 5 e 8 stubs in its line graph, though a special machine was used for this as it needs more than 4 Gb of RAM memory. On a 4 Gb machine a line graph with 4. 5 e 7 stubs was created. We also have java based code which is part of a much bigger package. Discussions, papers and slides from talks:- Paper: Line Graphs, Link Partitions and <b>Overlapping</b> <b>Communities,</b> Phys. Rev. E 80 (2009) 016105 [arXiv: 0903. 2181]. Conference Paper: <b>Overlapping</b> <b>Communities,</b> Link Partitions and Line Graphs, a very slightly altered version forECCS 09. Slides from talk What am I? Finding Communities in Networks Using Line Graphs given at University of Warwick Complexity Forum, 28 thOctober 2009. Slides from talk <b>Overlapping</b> <b>Communities,</b> Edge Partitions and Line Graphs given at ECCS 09 (University of Warwick, 22 nd September 2009). Paper: Edge Partitions and <b>Overlapping</b> <b>Communities</b> in Complex Networks, Eur. Phys. J. B 2010, 77, 265 â 272 [arXiv: 0912. 4389]. This covers in more detail the case where one is interested in the different line graphs of a weighted graph. Input used for the Les Miserable network and the correpsonding outputs obtained using this code as described in the original paper are available asÂ [URL]...|$|R
