427|2003|Public
25|$|The {{appropriate}} computation method largely depends how {{the original}} mathematical function is represented and the desired {{form of the}} <b>output</b> <b>function.</b>|$|E
25|$|If {{the input}} {{function}} {{is a series}} of ordered pairs (for example, a time series from measuring an output variable repeatedly over a time interval) then the <b>output</b> <b>function</b> must also be a series of ordered pairs (for example, a complex number vs. frequency over a specified domain of frequencies), unless certain assumptions and approximations are made allowing the <b>output</b> <b>function</b> to be approximated by a closed-form expression. In the general case where the available input series of ordered pairs are assumed be samples representing a continuous function over an interval (amplitude vs. time, for example), the series of ordered pairs representing the desired <b>output</b> <b>function</b> can be obtained by numerical integration of the input data over the available interval at each value of the Fourier conjugate variable (frequency, for example) for which the value of the Fourier transform is desired.|$|E
25|$|If we {{disregard}} the first output {{symbol of a}} Moore machine, , then it can be readily converted to an output-equivalent Mealy machine by setting the <b>output</b> <b>function</b> of every Mealy transition (i.e. labeling every edge) with the output symbol given of the destination Moore state. The converse transformation is less straightforward because a Mealy machine state may have different output labels on its incoming transitions (edges). Every such state needs to be split in multiple Moore machine states, one for every incident output symbol.|$|E
40|$|Abstract: The {{usefulness}} of fuzzy input fuzzy <b>output</b> <b>functions</b> and their interpolation/approximation by different operators in fuzzy control motivate their deeper theoretical study. We obtain some properties of fuzzy B-spline series such as variation and uncertainty diminishing property. We also propose spline approximation of fuzzy input fuzzy <b>output</b> <b>functions...</b>|$|R
5000|$|The UK101 has a 16-row, 48-column memory-mapped video display. All {{scrolling}} {{and character}} <b>output</b> <b>functions</b> are handled by firmware. In the original ROMs, the <b>output</b> <b>functions</b> were rudimentary {{and did not}} include a clear-screen function. CPU access to video memory causes noticeable glitches (known as [...] "snow") on the screen.|$|R
5000|$|De-fuzzify {{the fuzzy}} <b>output</b> <b>functions</b> to get [...] "crisp" [...] output values.|$|R
25|$|Endogenous {{sulfur dioxide}} in low {{concentrations}} causes endothelium-dependent vasodilation. In higher concentrations it causes endothelium-independent vasodilation {{and has a}} negative inotropic effect on cardiac <b>output</b> <b>function,</b> thus effectively lowering blood pressure and myocardial oxygen consumption. The vasodilating and bronchodilating effects of sulfur dioxide are mediated via ATP-dependent calcium channels and L-type ("dihydropyridine") calcium channels. Endogenous sulfur dioxide is also a potent antiinflammatory, antioxidant and cytoprotective agent. It lowers blood pressure and slows hypertensive remodeling of blood vessels, especially thickening of their intima. It also regulates lipid metabolism.|$|E
25|$|Building binary {{classifiers}} which distinguish (i) {{between one}} of the labels and the rest (one-versus-all) or (ii) between every pair of classes (one-versus-one). Classification of new instances for the one-versus-all case is done by a winner-takes-all strategy, in which the classifier with the highest <b>output</b> <b>function</b> assigns the class (it {{is important that the}} output functions be calibrated to produce comparable scores). For the one-versus-one approach, classification is done by a max-wins voting strategy, in which every classifier assigns the instance to {{one of the}} two classes, then the vote for the assigned class is increased by one vote, and finally the class with the most votes determines the instance classification.|$|E
25|$|If {{the input}} {{function}} is in closed-form and the desired <b>output</b> <b>function</b> {{is a series}} of ordered pairs (for example a table of values from which a graph can be generated) over a specified domain, then the Fourier transform can be generated by numerical integration at each value of the Fourier conjugate variable (frequency, for example) for which a value of the output variable is desired. Note that this method requires computing a separate numerical integration for each value of frequency for which a value of the Fourier transform is desired. The numerical integration approach works on a much broader class of functions than the analytic approach, because it yields results for functions that do not have closed form Fourier transform integrals.|$|E
5000|$|Execute all {{applicable}} {{rules in the}} rulebase to compute the fuzzy <b>output</b> <b>functions.</b>|$|R
5000|$|In some formulations, the {{transition}} and <b>output</b> <b>functions</b> are coalesced {{into a single}} function [...]|$|R
3000|$|... <b>output</b> <b>functions</b> and {{components}} have interdependencies. The advantage of enabling a component {{to have more}} than one f [...]...|$|R
500|$|Because {{the output}} of [...] is a function, {{the output of}} [...] can be {{evaluated}} at a point. [...] For instance, when [...] {{is applied to the}} squaring function, , [...] outputs the doubling function , which we named [...] This <b>output</b> <b>function</b> can then be evaluated to get , , and so on.|$|E
2500|$|If the <b>output</b> <b>{{function}}</b> is {{a function}} of a state and input alphabet (...) that definition corresponds to the Mealy model, and can be modelled as a Mealy machine. If the <b>output</b> <b>function</b> depends only on a state (...) that definition corresponds to the Moore model, and can be modelled as a Moore machine. A finite-state machine with no <b>output</b> <b>function</b> at all is known as a semiautomaton or transition system.|$|E
2500|$|... and an <b>output</b> <b>function</b> [...] {{computing}} {{the output}} from the activation ...|$|E
40|$|In {{this paper}} we desribe the {{development}} of a digital circuit synthesis program. The program accpets the transition table of a state machine and returns equations for an implementation that assumes a sum-of-product next-state and <b>output</b> <b>functions.</b> From the equations for the next-state and <b>output</b> <b>functions,</b> an nMOS VLSI layout for Weinberger araay (WA) is generated. D flip-flops are assumed for memory calculations can be avoided and layout are generated automatically from state table descriptions...|$|R
3000|$|... <b>output</b> <b>functions.</b> As our {{proposal}} deal with stateful and stateless components, a component is {{also able to}} hold its internal state.|$|R
3000|$|... {{also include}} {{some kinds of}} typical {{functions}} widely used in circuit design, such as nondifferentiable piecewise linear <b>output</b> <b>functions</b> of the form [...]...|$|R
2500|$|... (mu, however, only 'corresponds to the masses' if {{the initial}} 'mass' of the output {{functions}} {{are all the}} same/equivalent. If {{they are not the}} same, i.e. some are narrow triangles, while others maybe wide trapizoids or shouldered triangles, then the mass or area of the <b>output</b> <b>function</b> must be known or calculated. It is this mass that is then scaled by mu and multiplied by its location X_i).|$|E
5000|$|Every Moore machine [...] is {{equivalent}} to the Mealy machine with the same states and transitions and the <b>output</b> <b>function</b> , which takes each state-input pair [...] and yields , where [...] is 's <b>output</b> <b>function.</b>|$|E
5000|$|If the <b>output</b> <b>{{function}}</b> is {{a function}} of a state and input alphabet (...) that definition corresponds to the Mealy model, and can be modelled as a Mealy machine. If the <b>output</b> <b>function</b> depends only on a state (...) that definition corresponds to the Moore model, and can be modelled as a Moore machine. A finite-state machine with no <b>output</b> <b>function</b> at all is known as a semiautomaton or transition system.|$|E
30|$|Number of <b>output</b> {{membership}} <b>function</b> must {{be equal}} {{to the number of}} rules, i.e., no two rules can share the same <b>output</b> membership <b>function.</b>|$|R
40|$|Abstract The {{development}} of a digital circuit synthesis program is described. The program accepts the transition table of a state machine and returns equations for an implementation that assumes a sum-of-product next-state and <b>output</b> <b>functions.</b> From the equations for the next-state and <b>output</b> <b>functions,</b> nMOS VLSI layout for a Weinberger array is generated. D flip-flops are assumed for memory elements. Using this tool, tedious manual calculations can be avoided and layouts can be generated automatically from state table descriptions. Keywords: desig...|$|R
50|$|The input for ESPRESSO is a {{function}} table of the desired functionality; {{the result is a}} minimized table, describing either the ON-cover or the OFF-cover of the function, depending on the selected options. By default, the product terms will be shared as much as possible by the several <b>output</b> <b>functions,</b> but the program can be instructed to handle each of the <b>output</b> <b>functions</b> separately. This allows for efficient implementation in two-level logic arrays such as a PLA (Programmable Logic Array) or a PAL (Programmable Array Logic).|$|R
50|$|Often the <b>output</b> <b>function</b> {{is simply}} the Identity function.|$|E
5000|$|... an <b>output</b> <b>function</b> [...] mapping {{each state}} to the output {{alphabet}} ...|$|E
5000|$|... and an <b>output</b> <b>function</b> [...] {{computing}} {{the output}} from the activation ...|$|E
50|$|Although this Quine - McCluskey {{algorithm}} {{is very well}} suited to be implemented in a computer program, the result is still far from efficient in terms of processing time and memory usage. Adding a variable to the function will roughly double both of them, because the truth table length increases exponentially {{with the number of}} variables. A similar problem occurs when increasing the number of <b>output</b> <b>functions</b> of a combinational function block. As a result the Quine - McCluskey method is practical only for functions with a limited number of input variables and <b>output</b> <b>functions.</b>|$|R
40|$|Abstract—This paper {{proposes a}} control {{strategy}} for an underactuated planar robot to achieve jumping motion by toe kicking. The model {{in this work}} consists of 4 links and is controlled by input-output linearization and output zeroing. One of the <b>output</b> <b>functions</b> is designed based on a virtual constraint on the unactuated joint. This makes the remaining zero dynamics unstable when output zeroing is achieved. Vertical jumping motion is then accomplished by designing the other <b>output</b> <b>functions</b> to synchronize the joint angles with the zero dynamics. The present scheme is verified through simulations. I...|$|R
40|$|Abstract. We {{investigate}} {{reinforcement learning}} methods, namely the temporal difference learning TD(λ) algorithm, on game-learning tasks. Small modifications in algorithm setup and parameter choice can have {{significant impact on}} success or failure to learn. We demonstrate that small differences in input features influence significantly the learning process. By selecting the right feature set we found good results within only 1 / 100 of the learning steps reported in the literature. Different metrics for measuring success in a reproducible manner are developed. We discuss why linear <b>output</b> <b>functions</b> are often preferable compared to sigmoid <b>output</b> <b>functions.</b> ...|$|R
5000|$|An <b>output</b> <b>function</b> {{for each}} unit, {{represented}} by a vector of functions on the activations.|$|E
5000|$|... τ : Σk → Δ is the <b>output</b> <b>function</b> mapping {{from the}} input {{alphabet}} to the output alphabet.|$|E
5000|$|... an <b>output</b> <b>function</b> [...] mapping {{pairs of}} a state and an input symbol to the {{corresponding}} output symbol.|$|E
40|$|This work investigates {{traveling}} waves for a {{class of}} delayed cellular neural networks with nonmonotonic <b>output</b> <b>functions</b> on the one-dimensional integer lattice Z. The dynamics of each given cell depends on itself and its nearest m left or l right neighborhood cells with distributed delay due to, for example, finite switching speed and finite velocity of signal transmission. Our technique is to construct two appropriate nondecreasing functions to squeeze the nonmonotonic <b>output</b> <b>functions.</b> Then we construct a suitable wave profiles set and derive the existence of traveling wave solutions by using Schauder's fixed point theorem...|$|R
30|$|Although {{symmetry}} detection {{is normally}} done on single-output functions, the principle {{can be extended}} easily to multiple-output functions. First {{it is necessary to}} define the function orbits of multiple <b>output</b> <b>functions.</b>|$|R
40|$|Minimization of {{multiple}} <b>output</b> <b>functions</b> of a digital logic circuit {{is a classic}} research problem. Minimalcircuit is obtained by using multiple Karnaugh Maps (K-map), one for each function. In this paper wepropose a novel technique that uses a single Karnaugh Map for minimizing multiple outputs of a singlecircuit. The algorithm basically accumulates multiple K-Maps into a single K-Map. Finding minimalnumbers of minterms are easier using our proposed clustering technique. Experimental results show thatminimization of digital circuits where more than one <b>output</b> <b>functions</b> are involved, our extended K-Mapapproach is more efficient as compare to multiple K-Map approach...|$|R
