0|29|Public
50|$|To get {{an analog}} trigger or clock from the DIN <b>syncs</b> <b>clock</b> signal {{one has to}} use digital {{frequency}} division or frequency multiplication. There are no dedicated industrial devices which provide a division. The Roland SBX10 can convert into a 48, 96, and 120 PPQN clock.|$|R
5000|$|The MPU-401 {{can work}} in two modes, normal mode and UART mode. [...] "Normal mode" [...] would provide the host system with an 8-track sequencer, MIDI <b>clock</b> <b>output,</b> <b>SYNC</b> 24 signal <b>output,</b> Tape <b>Sync</b> and a metronome; {{as a result of}} these features, it is often called [...] "intelligent mode". Compare this to UART mode, which reduces the MPU-401 to simply {{relaying}} in-/outcoming MIDI data bytes.|$|R
5000|$|... #Subtitle level 3: Combining DIN <b>sync</b> {{with other}} <b>clock</b> systems ...|$|R
50|$|B-Step Sequencer has a {{long list}} of features, {{including}} full MIDI and MIDI beat <b>clock</b> <b>sync</b> support, Sequencer Ratcheting, shuffle (swing), monophonic and polyphonic note playback modes.|$|R
50|$|The PlayStation 2 VGA {{cable carries}} RGBHV video via a VGA connector. It is only {{compatible}} with progressive scan games and PS2 Linux. Since the PS2 does not <b>output</b> separate <b>sync,</b> sync on green {{must be used}} instead, which may be incompatible with some monitors.|$|R
50|$|Though DIN <b>sync</b> and MIDI <b>clock</b> {{have the}} same clock rate, they require a {{conversion}} of the format within a microprocessor or similar. The conversion from MIDI <b>clock</b> to DIN <b>sync</b> is available in many industrial devices. For the conversion from DIN <b>sync</b> to MIDI <b>clock</b> there is at the moment only the device 'Sync-Split2' of the company Innerclock Systems. Also two no longer produced devices do this type of conversion: Roland SBX10, Korg KMS30. On September 1st 2014, Roland introduced the SBX-1 which provides MIDI to sync24 or sync48 conversion.|$|R
50|$|The ICE4000 {{connects to}} the engineer's PC via a USB 2.0 interface. PIC devices under debug with the ICE4000 ran at full speed, and the {{emulator}} supported unlimited breakpoints, and complex break/trigger logic. The emulator supported multiple external inputs and external <b>outputs</b> to <b>sync</b> with other instruments.|$|R
50|$|Some of {{the more}} {{desirable}} features of the XP-50's sound engine are frequency cross-modulation, tone delay variations, MIDI <b>clock</b> <b>sync,</b> high/low/band pass and peaking resonant filter options, and synchronizable LFOs.|$|R
50|$|Some {{devices have}} a DIN sync input {{as well as}} DIN <b>sync</b> <b>output,</b> other device have only a single DIN socket which {{sometimes}} can be switched between input and output.|$|R
50|$|DDC1 is a simple, low-speed, {{unidirectional}} {{serial link}} protocol. Pin 12, ID1 {{functions as a}} data line that continuously transmits the 128-byte EDID block, and the data clock is synchronised with vertical <b>sync,</b> providing typical <b>clock</b> rates of 60 to 100 Hz.|$|R
50|$|Emerging {{from the}} DIY kit {{movement}} was a modification by a California engineer named Brian Castro which {{led him to}} design secondary and replacement pcb kits. His x0xi0 kit adds a second tuneable oscillator, a noise source, a second ADSR, an AR for accent, FM and cross-modulation,momentary switches, extended range audio and extreme envelope ranges,sophisticated routing, distortion and overdrive. It locked together three types of synthesizers communication signals: modular cv & gate voltages, DIN <b>sync</b> timing <b>clocks</b> for TR-909 and TR-808 drum machines, and MIDI.|$|R
50|$|Typical devices {{which can}} act as a master clock and provide DIN sync include the Roland SBX-80, Roland SBX-10, Friendchip SRC, E-RM midiclock⁺ and Yamaha MSS1. Many drum {{machines}} which have DIN <b>sync</b> and MIDI <b>clock</b> <b>outputs</b> {{can act as}} master clock for those two formats.|$|R
5000|$|... "Analog clock" [...] {{signals are}} {{equivalent}} to the clock signal at pin 3 of DIN <b>sync</b> interface. The <b>clock</b> rate is usually higher than the DIN sync's rate. Typical values are 48, 96 or 192 pulses per quarter note (examples: Oberheim DMX, DX, DSX; Linndrum 1 and 2).|$|R
50|$|AppleTalk {{relied on}} {{clocking}} from the CPU that was divided down {{to produce an}} output at roughly 230.4 kbit/s. Nodes on the network remained in <b>sync</b> using <b>clock</b> recovery. This allowed the entire system to be run over a simple three-wire connection, or two-wires {{in the case of}} PhoneNet. As the ports also include the clock pins, it was possible to override the internal clock signal and run the system at much higher speeds, as was the case for Dayna and Centram products that ran between 750 and 850 kbit/s.|$|R
50|$|DJ digital {{controllers}} may be standalone units {{such as the}} Faderfox or the Allen & Heath Xone 3D, or may {{be integrated}} with a specific piece of software, such as Traktor or Scratch Live. These typically respond to MIDI <b>clock</b> <b>sync,</b> and provide control over mixing, looping, effects, and sample playback.|$|R
40|$|The FORTRAN 77 {{computer}} program SYNC for merging and time synchronizing data is described. The program SYNC reads {{one or more}} input files which contain either synchronous data frames or time-tagged data points, which can be compressed. The program decompresses and time synchronizes the data, correcting for any channel time skews. Interpolation and hold last value synchronization algorithms are available. The <b>output</b> from <b>SYNC</b> is a file of time synchronized data frames at any requested sample rate...|$|R
50|$|Procamp: Processing {{amplifier}} on {{the final}} <b>output.</b> New Composite <b>sync</b> insertion, level adjustment. Note: all quad VTRs have a procamp so as to obtain a standardized output from a recording. Ampex procamps were occasionally used to clean-up, hence to standardize network feeds.|$|R
50|$|Version 2.0 greatly {{enhanced}} stability; {{this version}} gained an improved MIDI editor with step entry; a software sampler virtual instrument; optional support for 64-bit math, to create greater digital headroom {{in the mix}} summing bus and thus avoid distortion; External MIDI <b>sync,</b> MIDI <b>clock</b> and MIDI Machine Control send and receive; per-track input auto-assignment; optional fullscreen input metering; a newly scalable window; {{and the ability to}} import files from Mackie hard disk recorders. Mackie has been drawing criticism in the support forums for its continued supply of version 2.0 with Tapco (a Mackie company) hardware, even though it is not supported with the Windows Vista operating system.|$|R
40|$|Military {{temperature}} range (− 55 °C to + 125 °C) Controlled manufacturing baseline Qualification data available on request Low power: 110 mW per channel at 125 MSPS SNR = 74 dB (to Nyquist) SFDR = 90 dBc (to Nyquist) DNL = ± 0. 8 LSB (typical); INL = ± 2. 0 LSB (typical) Serial LVDS (ANSI- 644, default) and low power, reduced signal option (similar to IEEE 1596. 3) 650 MHz full power analog bandwidth 2 V p-p input voltage range Serial port control Full chip and individual channel power-down modes Flexible bit orientation Built-in and custom digital {{test pattern generation}} Multichip <b>sync</b> and <b>clock</b> divider Programmable output clock and data alignment Programmable output resolution Standby mode APPLICATION...|$|R
50|$|A few new {{classes of}} plugins do not {{fall under the}} normal {{generator}} and effect types. These include peer machines (signal and event automated controllers), recorders, wavetable editors, scripting engines, etc. Buzz signal output also uses a plugin system; the most practical drivers include ASIO, DirectSound, and MME. Buzz supports MIDI both internally and through several enhancements. Some MIDI features are limited or hacked together such as MIDI <b>clock</b> <b>sync.</b>|$|R
40|$|This {{research}} investigates {{several problems}} associated with current multiprocessor interconnection networks, focusing primarily on general-purpose, shared-memory configurations. The project deals with {{all aspects of the}} interconnection, from the architectural level to the physical backplane. A multiple-bus based architecture is presented {{as an alternative to the}} limitations of current schemes. This dissertation will focus on the logical layer specification;The ActiveBus [...] a multiple, active bus [...] interconnection is proposed. Multiple buses increase the bandwidth as well as reliability of the interconnection while the active backplane shows a reduced and uniform capacitive load;A logical layer protocol was designed for each bus to work independently, to achieve fault tolerance. Each bus uses a word-serial approach to keep the total number of bus signal lines manageable. A dual clocking scheme is proposed. The faster clock is used for data transfer. The other clock, refered to as <b>sync</b> <b>clock,</b> is used for arbitration and handshaking;Absence of discontinuities on the bus coupled with a source-synchronous transfer protocol allows data to be streamed at a high rate, thus increasing the pin-efficiency of the bus. The data transmission rate is limited only by clock skew. In addition, the ActiveBus interface unit and the source synchronous protocol move the synchronization penalty from the shared bus to the private buffer in the unit;The protocol uses a new arbitration scheme, termed Previous Priority First. This hybrid control acquisition scheme combines collision detection and priority arbitration to minimize bus access time without requiring additional signal lines. Collision detection provides a quick access in an unsaturated system while priority arbitration guarantees the deterministic election of the master in a saturated system. The scheme also incorporates a fairness mode to minimize starvation and bus access delay in the system;The cache coherence scheme supports both copy-back and write-through policies to reduce the overhead. MOESI protocol with snoopy caches, being the most general, is followed. Message passing and synchronization primitives are provided within the bus protocol to support multiple processor systems. These primitives attempt to minimize the traffic generated by the spin locks or the memory hot spots...|$|R
40|$|International Telemetering Conference Proceedings / October 25 - 28, 1999 / Riviera Hotel and Convention Center, Las Vegas, NevadaThis paper {{describes}} the PTP EX, a 160 Mbps Telemetry and Command front-end system, which {{takes advantage of}} the state-of-the-art in networking and software technology, and the rapid development in PC components and FPGA design. Applications for the PTP EX include High-rate Remote Sensing Ground Stations, Satellite/Payload Integration and Testing, High-rate Bit Error Rate Test (BERT) System and High-rate Digital Recorder/Playback System. The PTP EX Interface Board, the MONARCH-EX PCI High Speed Frame Synchronizer/Telemetry Simulator with Reed-Solomon Encoder/Decoder, is designed with the following key capabilities: · 160 Mbps serial input for CCSDS Frame Processing (Frame Synchronization, Derandomization, CRC, Reed-Solomon decoding, time stamping, quality annotation, filtering, routing, and stripping); · 160 Mbps disk logging of Reed-Solomon corrected CCSDS frames with simultaneous real-time processing of spacecraft engineering data and ancillary payload data; · Onboard CCSDS Telemetry Simulation with 160 Mbps serial <b>output</b> (<b>Sync</b> Pattern, background pattern, ID counter, time stamp, CRC, Reed-Solomon encoding, Randomization, and Convolutional encoding); · Bit Error Rate Testing up to 160 Mbps (Pseudo-random transmitter and receiver with bit error counter). The innovative architecture of the MONARCH-EX allows for simultaneous logging of a high-rate data stream and real-time telemetry processing. The MONARCH-EX is also designed with the latest in field-programmable gate array (FPGA) technology. FPGAs allow the board to be reprogrammed quickly and easily to perform different functions. Thus, the same hardware can be used for both Telemetry processing and simulation, and BERT applications. The PTP EX also {{takes advantage of the}} latest advances in off-the-shelf PC computing and technology, including Windows NT, Pentium II, PCI, Gigabit Ethernet, and RAID subsystems. Avtec Systems, Inc. is leveraging the PTP EX {{to take advantage of the}} continuous improvement in high-end PC server components...|$|R
40|$|AbstractWithin a network, cells {{may fail}} in {{multiple}} ways. It {{is important that}} such cells be both identified and isolated from the network as a whole to both allow the failing cell's tasks to be reallocated and {{for the prevention of}} cascade failures where a malfunctioning cell causes other cells to fail. We present a novel, low-power approach using simple memristor-based electrical circuits that provides autonomic handling of <b>clock</b> <b>sync</b> issues as well as supporting cell isolation by either the cell or the network and cell resurrection by the network...|$|R
40|$|The ML 2037 is a {{precision}} programmable sine wave generator with a frequency range of DC to 500 kHz. The device {{is capable of}} generating a wide frequency range of low distortion sine waves with no external passive components. The frequency of the sine wave output is programmed by a 16 -bit word that is loaded through a serial input. The sine wave output frequency {{is determined by the}} programmed value and the clock frequency. The clock frequency is derived from either an external crystal connected to the device or an external clock input to provide a stable and accurate frequency reference. The sine wave output of the ML 2037 is filtered and has a programmable amplitude that is digitally programmed in 0. 5 V steps. The maximum amplitude is 2. 0 V P-P centered at a 2. 5 V level. The device functions from a single 5 V power supply and has a shutdown pin to put the device into a low power mode that disables the <b>output.</b> A <b>sync</b> input is provided to allow the synchronization of more than one device in a system. FEATURES ■ Programmable output frequency: DC to 400 kHz—using a crystal DC to 500 kHz—using an external digital clock ■ 3 -wire SPI compatible serial interface with double buffered latch for programming the frequency ■ Digital gain control for programming <b>output</b> amplitude ■ <b>SYNC</b> input for synchronization of multiple sine waves ■ Shutdown pin for sleep mode ■ Single 5 V power supply operatio...|$|R
40|$|Within a network, cells {{may fail}} in {{multiple}} ways. It {{is important that}} such cells be both identified and isolated from the network as a whole to both allow the failing cell's tasks to be reallocated and {{for the prevention of}} cascade failures where a malfunctioning cell causes other cells to fail. We present a novel, low-power approach using simple memristor-based electrical circuits that provides autonomic handling of <b>clock</b> <b>sync</b> issues as well as supporting cell isolation by either the cell or the network and cell resurrection by the network. © 2013 The Authors. Published by Elsevier B. V...|$|R
5000|$|While the RSA SecurID system adds a {{layer of}} {{security}} to a network, difficulty can occur if the authentication server's clock becomes out of <b>sync</b> with the <b>clock</b> built into the authentication tokens. Normal token clock drift is accounted for automatically by the server by adjusting a stored [...] "drift" [...] value over time. If the out of sync condition is not a result of normal hardware token clock drift, correcting the synchronization of the Authentication Manager server clock with the out of sync token (or tokens) can be accomplished in several different ways. If the server clock had drifted and the administrator made a change to the system clock, the tokens can either be resynchronized one-by-one, or the stored drift values adjusted manually. The drift can be done on individual tokens or in bulk using a command line utility.|$|R
40|$|At {{a time in}} {{the near}} future, many {{computers}} (including devices such as smart-phones) will have system clocks that are synchronized to a high degree (less than 1 ms of error). This will enable us to coordinate events across unconnected devices with a degree of accuracy that was previously impossible. In particular, high clock synchronization means that we can use these clocks to synchronize tempo between humans or sequencers with little-to-no communication between the devices. To facilitate this low-overhead tempo synchronization, we propose the Global Metronome, which is a simple, computationally cheap method to obtain absolute tempo synchronization. We present experimental results demonstrating the effectiveness of using the Global Metronome and compare the performance to MIDI <b>clock</b> <b>sync,</b> a common synchronization method. Finally, we present an open source implementation of a Global Metronome server using a GPS-connected Raspberry Pi that can be built for under $ 100...|$|R
5000|$|The major {{demonstrated}} {{problem of}} the ADS-B protocol integration is this added verbosity of the extra information transmitted, which is considered unnecessary for collision avoidance purposes. The more data transmitted from one aircraft {{in accordance with the}} system design, the lesser the number of aircraft that can participate in the system, due to the fixed and limited channel data bandwidth (1 megabit/second with the 26/64 data bits to packet length bit capacity of the Mode S downlink data format packet). For every Mode S message of 64 bits, the overhead demands 8 for <b>clock</b> <b>sync</b> at the receiver and Mode S packet discovery, 6 for type of Mode S packet, 24 for who it came from. Since that leaves only 26 for information, multiple packets must be used to convey a single message. The ADS-B [...] "fix" [...] proposal is to go to a 128 bit packet, which is not an accepted international standard. [...] Either approach increases channel traffic above the level sustainable for environments such as the Los Angeles Basin.|$|R
40|$|The {{development}} of new miniature devices with actuation and/or detection of motion of their components, such as found in micro and nano-electromechanical systems (MEMS and NEMS), requires the {{development of}} appropriate nanoscale resolution techniques for their characterization. While the dynamic behaviour of MEMS and NEMS based on suspended membranes could be studied by optical methods, such as interferometry and Laser Doppler Vibrometry (LDV), spatial resolution of these techniques is inevitably limited by the light wavelength to the micrometre length scale. In this work, we show that SPM techniques that offer much higher spatial resolution down to few nanometres, can be effectively used to analyse the vibrations of a nanoscale thin membranes over the frequency range from few kHz to tens of MHz using both linear and nonlinear mechanisms for the excitation and detection of such vibrations. As a model of MEMS system, we used a 200 nm thick Si N membrane (Agar Scientific) with 500 x 500 um size manufactured on the 400 um thick Si substrate. The Si substrate was glued to the ultrasonic transducers (Physik Instrumente, UK) capable of producing at up to 10 MHz vibrations normal to its surface. First SPM technique employed in this study, {{were based on the}} contact atomic force microscopy (AFM) (Nanoscope V with MultiMode scanner, Bruker) and used detection of the vibration on the excitation frequency f 1 – approach known as force modulation microscopy (FMM) [1]. Second SPM method we used provided membrane excitation via high frequency (HF) carrier with frequency f modulated at f with the detection at the modulation frequency – similar to the one used in the ultrasonic force microscopy (UFM) [2]. In order to effectively create high frequency modulation with f at few MHz range and above we used addition of two HF electrical signals at the adjacent frequencies f and f using a two-channel function generator (Rigol DG 1062 Z, frequency range up to 60 MHz). This effectively created an amplitude modulated waveform at f =(f +f) / 2 frequency modulated at f =f -f frequency applied to the sample. The <b>sync</b> <b>outputs</b> at the f, f frequencies were mixed by a separate doublebalanced mixer (Hewlett Packard, HP 10534 A) with output low-pass-filtered and amplified via wideband amplifier (TTi WA 301). This created a reference signal at the modulation frequency for the HF lock-in amplifier (SRS 844, 200 MHz range, Stanford Research). We call this mode HF Modulated UFM (M-UFM). The response of the AFM deflection was collected via in-house made signal access module and detected via oscilloscope or the lock-in amplifier. In order to interpret the FMM and M-UFM results, the vibration frequencies of the membrane and the AFM cantilevers, have been calculated using approach described elsewhere [3] with this calculation and AFM measurements compared with optical LDV measurements (deflection sensitivity of ± 50 fm Hz, 10 MHz frequency range, OFV‑ 2570, Polytech). Both LDV, FMM and UFM measurements were controlled by the in-house developed LabVIEW software allowing complete control of the excitation frequencies and amplitudes and data collection. LDV measurements allowed to clearly identify the cantilever flexural vibrational modes with their frequencies corresponding with the theoretical prediction within few percent accuracy. Furthermore, the obtained membrane frequencies of ca. 300 kHz (Fig. 1 a) using in-plane membrane stress reported in the literature [3], allowed to confirm that the model of a tensioned membrane to be used, with the plate vibrational modes resulting in the frequencies of 5 - 10 kHz, several orders below the observed vibrational modes. During SPM measurements, we used UFM to locate the boundary between the membrane and the substrate, as the Si N membrane topography was perfectly flat due to high in-plane tension, therefore not allowing to detect the edge between the free and supported membrane. We then performed a continuous scan along single line across the boundary of the membrane, while also simultaneously performing an excitation frequency sweep from 40 to 340 kHz. The 2 D image (Fig. 1 b) shows the amplitude of the resulting cantilever vibration (image brightness) as a function of position of the tip across the edge (x-axis) and the excitation frequency f (y-axis). We observe that some of the vibration modes attributed to the contact cantilever resonances change the frequency and amplitude as the SPM tip moves to the suspended area of the membrane (solid arrows), while some attributed to the membrane modes appear only in the suspended membrane area (dashed arrows). Finally, we tested the M-UFM mode that excites the membrane vibrations at the modulation frequency fm exclusively in the point of tip-membrane contact via nonlinear tip-surface excitation (as in UFM [2]). The resulting vibration is then obtained via linear detection of the probe – similar to the FMM. We have found that M-UFM excitation was indeed capable of exciting membrane resonances at frequency around f =f ‑f = 245 kHz. With electrical drive amplitude of 5 V the ultrasonic vibration at f, f ~ 4 MHz frequency was approximately 2 nm peakto- peak. In conclusion, we find {{that it is possible to}} reliably measure vibrations of the suspended nanoscale thin membranes using FMM and M-UFM approaches. The measured data were validated by the LDV measurements and theoretical analysis of the vibrational modes of the cantilever and the membrane. Both FMM and M-UFM potentially allow the spatial resolution of about 10 nm. With the emonstrated capability of UFM to work up to several 100 MHz frequencies, the M-UFM approach may be a useful addition for the exploration of the vibration of MEMS and NEMS structures of sub-um dimensions including ones based on the 2 D materials...|$|R

