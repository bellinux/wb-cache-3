636|9835|Public
25|$|<b>Open</b> <b>software</b> is {{most widely}} {{available}} {{in the form of}} a suite of Bioconductor packages, but is also available for web execution on the GenePattern platform.|$|E
25|$|In January 1997, the X Consortium passed {{stewardship}} of X to The Open Group, a vendor group formed in early 1996 by {{the merger of}} the <b>Open</b> <b>Software</b> Foundation and X/Open.|$|E
25|$|These {{movements}} share {{fundamental differences}} in the view on <b>open</b> <b>software.</b> The main, factionalizing difference between the groups {{is the relationship between}} open source and proprietary software. Often makers of proprietary software, such as Microsoft, may make efforts to support open source software to remain competitive. Members of the open source community are willing to coexist with the makers of proprietary software and feel that the issue of whether software is open source is a matter of practicality.|$|E
40|$|<b>Open</b> source <b>software</b> {{license is}} a {{contract}} under which any software released is called <b>open</b> source <b>software.</b> In 1980 ’s, R. Stallman formed free software foundation. It introduced GNU GPL license. Any software which is released under it is <b>open</b> source <b>software</b> and totally free of cost and has equally right to redistribute, inspect and modification of code. It attracted many contributors toward <b>open</b> source <b>software.</b> These also encouraged introducing {{different types of}} <b>open</b> source <b>software</b> license. These <b>open</b> source <b>software</b> license introduced different types of benefits for contributors. Therefore different contributors want to select different <b>open</b> source <b>software</b> license. In the end selecting <b>open</b> source <b>software</b> license became a research area. We gather motivation factors of <b>open</b> source <b>software</b> and also gather motivation factors on which individuals take decision about selecting <b>open</b> source <b>software</b> license. In this systematic mapping, we accumulate publications on the motivation factors of <b>open</b> source <b>software.</b> From the frequency of publications we found out the recent trends {{in this area of}} research. In this systematic mapping, we included evaluation research, review paper mostly. Systematic mapping is a method of gathering the research work of a particular area of knowledge. From the motivation factors of <b>open</b> source <b>software,</b> if we find out some other factors which can influence on choice of <b>open</b> source <b>software</b> license, this will become a fruitful increment in knowledge of selecting <b>open</b> source <b>software</b> license...|$|R
40|$|We {{examine the}} {{appearance}} of <b>open</b> source <b>software</b> in computer science education. We will undertake with a concise tutorial on <b>open</b> source <b>software</b> introduction, including a depiction of major popular open source licenses. Later we deliberate the use of <b>open</b> source <b>software</b> in education discipline. We Present some advantage of <b>open</b> source <b>software</b> {{in the field of}} education Finally, we focus on the use of <b>open</b> source <b>software</b> in computer science education...|$|R
40|$|Academic {{research}} on <b>open</b> source <b>software</b> has outlined the functionalities of <b>open</b> source <b>software</b> {{to a great}} extent, but a comprehensive theoretical framework comprising different aspects of <b>open</b> source <b>software</b> is still missing. A theoretical understanding of the <b>open</b> source <b>software</b> phenomenon {{will not only be}} a significant contribution to the academia but also to the businesses looking for more effective and innovative approaches for software development. To address this issue, first, the current research reviews and analyzes various theoretical frameworks, their applicability in the <b>open</b> source <b>software</b> context, their contributions, and their limitations. Secondly, the structure of <b>open</b> source <b>software</b> projects through complex adaptive systems is explored. The current research contributes to the existing literature by providing a detailed discussion of various theoretical perspectives on <b>open</b> source <b>software,</b> and offers a theorization of <b>open</b> source <b>software</b> based on complex adaptive systems...|$|R
25|$|As Microsoft {{turned its}} {{attention}} away from working directly on ODBC, the Unix field was increasingly embracing it. This was propelled by two changes within the market, the introduction of graphical user interfaces (GUIs) like GNOME that provided a need to access these sources in non-text form, {{and the emergence of}} <b>open</b> <b>software</b> database systems like PostgreSQL and MySQL, initially under Unix. The later adoption of ODBC by Apple for using the standard Unix-side iODBC package Mac OS X 10.2 (Jaguar) (which OpenLink Software had been independently providing for Mac OS X 10.0 and even Mac OS 9 since 2001) further cemented ODBC as the standard for cross-platform data access.|$|E
25|$|Beginning in {{the late}} 1980s, an open {{operating}} system standardization effort now known as POSIX provided a common baseline for all operating systems; IEEE based POSIX around the common structure of the major competing variants of the Unix system, publishing the first POSIX standard in 1988. In the early 1990s, a separate but very similar effort was started by an industry consortium, the Common <b>Open</b> <b>Software</b> Environment (COSE) initiative, which eventually became the Single UNIX Specification (SUS) administered by The Open Group. Starting in 1998, the Open Group and IEEE started the Austin Group, to provide a common definition of POSIX and the Single UNIX Specification, which, by 2008, had become the Open Group Base Specification.|$|E
2500|$|Other topics covered {{included}} software patents, DMCA, {{the actions}} of the RIAA against alleged illegal file sharers, and actions against free and <b>open</b> <b>software</b> such as Android and Linux. Almost every article also attracted an [...] "Off Topic" [...] thread, where a diverse range of topics was discussed.|$|E
40|$|Breaking {{with many}} {{established}} assumptions about how innovation ought to work, <b>open</b> source <b>software</b> projects offer eye-opening examples of novel innovation practices {{for students and}} practitioners in many fields. In this article we briefly review existing research on the open source phenomenon and discuss the utility of <b>open</b> source <b>software</b> research findings for many other fields. We categorize the research into three areas: motivations of <b>open</b> source <b>software</b> contributors; governance, organization, {{and the process of}} innovation in <b>open</b> source <b>software</b> projects; and competitive dynamics enforced by <b>open</b> source <b>software.</b> We introduce the articles in this special issue of Management Science on <b>open</b> source <b>software,</b> and show how each contributes insights to {{one or more of these}} areas. innovation, user-innovation, <b>open</b> source <b>software,</b> organization, motivation, competition...|$|R
40|$|We {{investigate}} {{the role of}} <b>open</b> source <b>software</b> in computer science education. We begin with a brief tutorial on <b>open</b> source <b>software</b> including a description of four popular open source licenses. Next we discuss the use of <b>open</b> source <b>software</b> in education. Finally, {{we focus on the}} use of <b>open</b> source <b>software</b> in computer science education...|$|R
40|$|<b>Open</b> source <b>{{software}}</b> is {{free software}} that provides user freedom to use, replicate, modify, and distribute for any purpose. The quality of well-known <b>open</b> source <b>software</b> {{is very high}} and they are used by big companies such as IBM, Google and Amazon. com. Recently the number of <b>open</b> source <b>software</b> project growing very fast, which indicates that adoption of <b>open</b> source <b>software</b> is growing although still limited. Businesses should consider <b>open</b> source <b>software</b> as alternative solutions to their business problems or opportunities. An example of a very good <b>open</b> source <b>software</b> for office suite is discussed and compared with the well-known proprietary counterpart. Comment: 15 pages, conference pape...|$|R
2500|$|In 2011, Lessig {{was named}} to the Fastcase 50, [...] "honoring the law's smartest, most courageous innovators, techies, visionaries, and leaders." [...] Lessig was awarded honorary doctorates by the Faculty of Social Sciences at Lund University, Sweden in 2013 and by l'Université Catholique de Louvain in 2014. Lessig {{received}} the 2014 Webby Lifetime Achievement award for co-founding Creative Commons and defending Net Neutrality and the free and <b>open</b> <b>software</b> movement.|$|E
2500|$|The {{kernel of}} Darwin is XNU, a hybrid kernel which uses OSFMK 7.3 (<b>Open</b> <b>Software</b> Foundation Mach Kernel) from the OSF. (Apple {{does not use}} Mach as a {{microkernel}} {{but as part of}} a hybrid kernel), various elements of BSD (including the process model, network stack, and virtual file system), and an object-oriented device driver API called I/O Kit. [...] The hybrid kernel design leverages the flexibility of a microkernel and the performance of a monolithic kernel.|$|E
2500|$|By 2002, major {{software}} developments also facilitated media management, hardware integration, {{and content}} presentation. [...] MythTV provided {{a free and}} open source solution using Linux. [...] The concept was to combine a digital tuner with digital video recording, program guides, and computer capabilities with a 10-foot (3 m) user interface. [...] XBMC was another free and <b>open</b> <b>software</b> project started with re-purposing the Xbox as a home theater PC but has since been ported to Windows and Macintosh operating systems in various forms including Boxee and Plex. Mainstream commercial software packages included Microsoft's XP Media Center Edition (2002) that was bundled with Windows XP and Apple's Front Row (2005) software bundled with Mac OS X. By early 2006, commercial examples of this integration included the Mac mini which had the Apple Remote, 5.1 digital audio, and an updated Front Row interface that would play shared media. [...] Because of these features and the Mini's small form factor, consumers began using the Mini as a Mac-based home theater PC.|$|E
40|$|<b>Open</b> source <b>software</b> was {{a revolutionary}} concept among {{computer}} programmers and users. To {{a certain extent}} open source solutions could provide an alternative solution to costly commercial <b>software.</b> <b>Open</b> source <b>software</b> is, software that users {{have the ability to}} run, copy, distribute, study, change, share and improve for any purpose. <b>Open</b> source library <b>software’s</b> does not need the initial cost of commercial software and enables libraries to have greater control over their working environment. Library professionals {{should be aware of the}} advantages of <b>open</b> source <b>software</b> and should involve in their development. They should have basic knowledge about the selection, installation and maintenance. <b>Open</b> source <b>software</b> requires a greater degree of computing responsibility than commercial software. Library professionals do not think seriously about the advantages of <b>open</b> source <b>software</b> for automation and hence are reluctant to use it. They do not have the expertise to support <b>open</b> source <b>software.</b> Paper highlights problems of selection, installation and maintenance of <b>open</b> source library <b>software...</b>|$|R
50|$|Open-sourcing is {{the act of}} {{propagating}} {{the open}} source movement, most often referring to releasing previously proprietary <b>software</b> under an <b>open</b> source/free <b>software</b> license, {{but it may also}} refer programing <b>Open</b> Source <b>software</b> or installing <b>Open</b> Source <b>software.</b>|$|R
5000|$|ADvantage Framework makes {{heavy use}} of <b>open</b> source <b>software</b> technology. <b>Open</b> source <b>software</b> {{components}} used include: ...|$|R
5000|$|... #Subtitle level 3: John Lions Award for Contribution to <b>Open</b> <b>Software</b> ...|$|E
5000|$|The <b>Open</b> <b>Software</b> Foundation DCE/RPC Distributed Computing Environment (also {{implemented}} by Microsoft).|$|E
5000|$|<b>Open</b> <b>Software</b> License - similar, but {{reciprocal}} license by {{the same}} author ...|$|E
40|$|In recent years, <b>open</b> source <b>software</b> {{which is}} a typical form of open {{innovation}} has become an important business mode in software industry. However, the innovation process of <b>open</b> innovation in <b>software</b> products {{is quite different from}} traditional manufacturing industries. Taking Linux operating system as the research sample, the innovation process of <b>open</b> source <b>software</b> is studied based on knowledge mapping which is made by Citespace. The study shows that technical standards are technology platforms of <b>open</b> source <b>software</b> innovation. User participation is an effective way to knowledge transfer of <b>open</b> source <b>software</b> innovation. Innovative society is an important intermediary of <b>open</b> source <b>software</b> innovation...|$|R
40|$|Abstract—The {{importance}} and popularity of <b>open</b> source <b>software</b> has increased rapidly {{over the last}} 20 years. This {{is due to a}} variety of advantages <b>open</b> source <b>software</b> has to offer and also the wide availability of the Internet in the early nineties. We identify and describe important <b>open</b> source <b>software</b> characteristics and then present a case study using <b>open</b> source <b>software</b> to teach three Computer Science and IT courses for one academic year. We compare fulfilling our educational requirements and goals with <b>open</b> source <b>software</b> and with proprietary software. We present some of the advantages of using <b>Open</b> Source <b>Software</b> (OSS). Finally we report on our experiences of using <b>open</b> source <b>software</b> in the classroom and describe the benefits and drawbacks of using this type of software over common proprietary software from both a financial and educational point of view...|$|R
50|$|Developers {{have used}} the {{alternative}} terms Free and <b>Open</b> Source <b>Software</b> (FOSS), or Free/Libre and <b>Open</b> Source <b>Software</b> (FLOSS), consequently, to describe <b>open</b> source <b>software</b> that is also free software. While the definition of <b>open</b> source <b>software</b> {{is very similar to}} the FSF's free software definition it was based on the Debian Free Software Guidelines, written and adapted primarily by Bruce Perens with input from Eric S. Raymond and others.|$|R
5000|$|FinisTerrae {{includes}} <b>open</b> <b>software</b> {{and standard}} like: Linux, Lustre, Grid Engine and Globus.|$|E
50|$|In February 1996 <b>Open</b> <b>Software</b> Foundation {{merged with}} X/Open to become The Open Group.|$|E
5000|$|The Sleuth Kit (free, <b>open</b> <b>software)</b> by Brian Carrier (HPA {{identification}} is currently Linux-only.) ...|$|E
40|$|<b>Open</b> source <b>{{software}}</b> is, {{software that}} users {{have the ability}} to run, copy, distribute, study, change, share and improve for any purpose. <b>Open</b> source library <b>software’s</b> does not need the initial cost of commercial software and enables libraries to have greater control over their working environment. Library professionals {{should be aware of the}} advantages of <b>open</b> source <b>software</b> and should involve in their development. They should have basic knowledge about the selection, installation and maintenance. <b>Open</b> source <b>software</b> requires a greater degree of computing responsibility than commercial software. Library professionals do not think seriously about the advantages of <b>open</b> source <b>software</b> for automation and hence are reluctant to use it. They do not have the expertise to support <b>open</b> source <b>software.</b> Paper highlights major <b>open</b> source library <b>software...</b>|$|R
40|$|Abstract. Commercial {{software}} {{firms are}} increasingly using {{and contributing to}} <b>open</b> source <b>software.</b> Thus, {{they need to understand}} and work with <b>open</b> source <b>software</b> development processes. This paper investigates whether the practice of continuous integration of agile software development methods has had an impact on <b>open</b> source <b>software</b> projects. Using fine-granular data from more than 5000 active <b>open</b> source <b>software</b> projects we analyze the size of code contributions over a project’s life-span. Code contribution size has stayed flat. We interpret this to mean that <b>open</b> source <b>software</b> development has not changed its code integration practices. In particular, within the limits of this study, we claim that the practice of continuous integration has not yet significantly influenced the behavior of <b>open</b> source <b>software</b> developers. ...|$|R
40|$|The Literature Review {{is part of}} my thesis: {{to survey}} the {{literature}} concerning the place of <b>open</b> source <b>software</b> in education: specifically High School use of <b>open</b> source <b>software.</b> A thorough search of literature has found {{that there is a}} shortage of research specifically on the topic of <b>open</b> source <b>software</b> and high schools, particularly in the developed countries. The key concepts will be discussed and the associated research papers evaluated in the context of <b>open</b> source <b>software</b> in education. The main questions and problems associated with the use of <b>open</b> source <b>software</b> will be discussed. The major issues and debates around the implementation of <b>open</b> source <b>software</b> in schools will also be discussed in light of the research available. The concept of “openness” in education will also be discussed in relation to resources and pedagogy. Finally, a statement regarding the use of <b>open</b> source <b>software</b> in schools is made and how this thesis will address the gap in the literature...|$|R
5000|$|SuperWaba - Free and <b>open</b> <b>software</b> {{development}} kit for Pocket PC and Linux iPAQs ...|$|E
5000|$|The kits {{come with}} an <b>open</b> <b>software</b> {{platform}} tailored {{to a range}} of common robotic functions.|$|E
5000|$|The OSI's {{original}} Legal Counsel Lawrence Rosen {{has written}} a copyleft license, the <b>Open</b> <b>Software</b> License.|$|E
40|$|Abstract—Free and <b>open</b> source <b>software</b> {{is gaining}} {{popularity}} at an unprecedented rate of growth. Organizations despite some {{concerns about the}} quality have been using them for various purposes. One of the biggest concerns about free and <b>open</b> source <b>software</b> is post release software defects and their fixing. Many {{believe that there is}} no appropriate support available to fix the bugs. On the contrary some believe that due to the active involvement of internet user in online forums, they become a major source of communicating the identification and fixing of defects in <b>open</b> source <b>software.</b> The research model of this empirical investigation establishes and studies the relationship between <b>open</b> source <b>software</b> defects and online public forums. The results of this empirical study provide evidence about the realities of software defects myths of <b>open</b> source <b>software.</b> We used a dataset consist of 616 <b>open</b> source <b>software</b> projects covering a broad range of categories to study the research model of this investigation. The results of this investigation show that online forums play a significant role identifying and fixing the defects in <b>open</b> source <b>software.</b> Keywords—About <b>Open</b> source <b>software,</b> software engineering, software defect management, empirical software engineering...|$|R
5000|$|Seasar2 {{support of}} other <b>open</b> source <b>{{software}}</b> are prefixed with S2.Like most <b>open</b> source <b>software,</b> Seasar2 software may {{be divided into}} 3 major categories: ...|$|R
50|$|Free and <b>open</b> source <b>software</b> is an {{umbrella}} term for software that {{is free and}} <b>open</b> source <b>software.</b> Free and <b>open</b> source <b>software</b> is provided free of charge, allows the user to inspect the source code, and provides a relatively high level of control of the software's functions compared to proprietary software.|$|R
