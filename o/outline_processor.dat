19|15|Public
2500|$|With {{products}} and services based on UserLand's Frontier system, Winer became a leader in blogging tools from 1999 onwards, {{as well as a}} [...] "leading evangelist of weblogs." [...] In 2000 Winer developed the <b>Outline</b> <b>Processor</b> Markup Language OPML, an XML format for outlines, which originally served as the native file format for Radio UserLand's outliner application and has since been adopted for other uses, the most common being to exchange lists of web feeds between web feed aggregators. UserLand was the first to add an [...] "enclosure" [...] tag in its RSS, modifying its blog software and its aggregator so that bloggers could easily link to an audio file (see [...] podcasting and history of podcasting).|$|E
2500|$|ThinkTank, {{which was}} based on VisiText, was {{released}} in 1983 for Apple II and was promoted as an [...] "idea processor." [...] It became the [...] "first popular <b>outline</b> <b>processor,</b> the one that made the term generic." [...] A ThinkTank release for the IBM PC followed in 1984, as well as releases for the Macintosh 128K and 512K. [...] Ready, a RAM resident outliner for the IBM PC released in 1985, was commercially successful but soon succumbed to the competing Sidekick product by Borland. [...] MORE, released for Apple's Macintosh in 1986, combined an outliner and a presentation program. It became [...] "uncontested in the marketplace" [...] and won the MacUser's Editor's Choice Award for [...] "Best Product" [...] in 1986.|$|E
2500|$|CP/M {{software}} {{often came}} with installers that adapted it {{to a wide}} variety of computers. Most forms of copy protection were ineffective on the operating system, and the source code for BASIC programs was easily accessible. The lack of standardized graphics support limited video games, but various character and text-based games were ported, such as Telengard, Gorillas (video game), Hamurabi, Lunar Lander, along with early interactive fiction including the Zork series and Colossal Cave Adventure. A text adventure specialist, Infocom was one of the few publishers to consistently release their games in CP/M format. Lifeboat Associates started collecting and distributing user-written [...] "free" [...] software. One of the first was XMODEM, which allowed reliable file transfers via modem and phone line. The last significant program native to CP/M was the <b>outline</b> <b>processor</b> KAMAS.|$|E
50|$|In 1990, Rulifson won the Association for Computing Machinery's Software System Award for {{implementing}} groundbreaking innovations such as hypertext, <b>outline</b> <b>processors,</b> and video conferencing.|$|R
50|$|The only output was print, or an {{untagged}} file {{image of}} the printed output, which required extensive editing to import into a word processing program. Except for a limited export in the MS-DOS version to other <b>outline</b> <b>processors</b> such as ThinkTank, there was no file export conserving the outline structure, nor did anyone external develop a conversion.|$|R
40|$|Abstract. This paper {{describes}} how custom computing machines {{can be used}} to implement a simple <b>outline</b> font <b>processor.</b> An FPGA based co-processor is used to accelerate the compute intensive portions of font rendering. The font processor builds on several PostScript components previously presented by the authors to produce a system that can rapidly render fonts. A prototype implementation is described followed by an explanation of how this could be extended to build a complete system...|$|R
5000|$|OPML (<b>Outline</b> <b>Processor</b> Markup Language), an XML {{format for}} outlines.|$|E
5000|$|Import / Export {{favorite}} newsfeeds using OPML (<b>Outline</b> <b>Processor</b> Markup Language) ...|$|E
5000|$|In {{addition}} to the <b>outline</b> <b>processor,</b> KAMAS was also released with a programming language, a threaded interpreter most similar to FORTH. It was found [...] "complex and not easily learned," [...] and most purchasers of KAMAS never used it.|$|E
50|$|Outline for iPad is {{compatible}} with iOS 9 and later. Outline for Mac requires OS X 10.9 and later, 64-bit <b>processor.</b> <b>Outline</b> for iPad and Outline for Mac are separate though compatible apps. They can be synced between each other via Box, Dropbox, iCloud or OneDrive.|$|R
25|$|In 1988, NEC {{released}} a kit called PS98-145-HMW for Unix enthusiasts. The kit contained a V60 processor board {{that could be}} plugged into select models of the PC-9800 computer series and a 15-floppy disk distribution of their PC-UX/V release 2.0. The suggested retail price for this kit was 450,000 Yen. NEC themselves included a V60 processor in their 1991 Bungo mini 5SX, 7SX, and 7SD word processor computers, where the V60 was used as fast <b>outline</b> font <b>processor,</b> while the main system processor was a 16MHz NEC V33.|$|R
40|$|We {{describe}} a Prolog-based {{approach to the}} development of language processors (such as preprocessors, frontends, evaluators, tools for software modification and analysis). The design of the corresponding environment Laptob for prological language processing is <b>outlined.</b> Language <b>processor</b> definitions in Laptob are basically Prolog programs. The programs might contain grammars, that is, we consider logic grammars. The programs can be typed, and they can be higher-order. The adaptation and composition of the logic programs themselves is supported by metaprogramming. The environment offers tool support for efficient scanning, testing, and application development based on a make-system. We report on recent and ongoing applications of the Prolog-based approach. ...|$|R
50|$|<b>Outline</b> <b>Processor</b> Markup Language (OPML) is an XML {{format for}} outlines. Originally {{developed}} in 2000 {{as a native}} file format for Radio UserLand's outliner application, it has since been adopted for other uses, the most common being to exchange lists of web feeds between web feed aggregators.|$|E
5000|$|In {{a survey}} of five Macintosh word {{processor}}s, Compute!'s Apple Applications in 1987 wrote that MindWrite's [...] "word processor is a pleasure in itself", and stated that the [...] "excellent <b>outline</b> <b>processor</b> fuses directly with" [...] it. The magazine criticized its slow speed, however, and suggested that customers might want to wait until bugs were fixed.|$|E
5000|$|MORE is an <b>outline</b> <b>processor</b> {{application}} {{that was created}} for the Apple Macintosh in 1986 by software developer Dave Winer {{and that was not}} ported to any other platforms. An earlier outliner, ThinkTank, was developed by Winer, his brother Peter, and Doug Baron. The outlines could be formatted with different layouts, colors, and shapes. Outline [...] "nodes" [...] could include pictures and graphics.|$|E
50|$|In the <b>outline</b> {{above the}} <b>processor</b> {{processes}} {{parts of a}} single instruction at a time. Computer programs could be executed faster if multiple instructions were processed simultaneously. This is what superscalar processors achieve, by replicating functional units such as ALUs. The replication of functional units was only made possible when the die area of a single-issue processor no longer stretched the limits {{of what could be}} reliably manufactured. By the late 1980s, superscalar designs started to enter the market place.|$|R
40|$|Recent work on key {{technological}} {{problems of}} self-cohering and high speed processing {{has led to}} a concept for distributed space based radar. Experimentally demonstrated self-cohering techniques allows a duster of small satellites to form a coherent aperture even though the position of each satellite in the cluster is not precisely known. The signal processing of the receive beams has been sized and the architecture of spaceborne VLSI <b>processor</b> <b>outlined</b> and shown to the practical in size, weight and power consumption. Clutter is reduced by the extremely narrow receive beams so that small targets can he detected and tracked. The goal is to achieve a low life cycle cost of this sensor system using light satellite technology...|$|R
40|$|We {{present an}} <b>outline</b> of {{reconfigurable}} <b>processor</b> technologies and design methods {{with emphasis on}} an objectoriented approach, and both full and partial dynamic reconfiguration. A specific broadly applicable architecture for implementing a software reconfigurable network processor for wireless communication applications is presented; a prototype of which is currently operating in the laboratory. This architecture, its associated object oriented design methods, and partial reconfiguration techniques enable rapid-prototyping and rapid implementations of communications and navigation signal processing functions; provide long-life communications infrastructure; and result in dynamic operation within networks with heterogeneous nodes, as well as compatibility with other networks. This work builds upon numerous advances in commercial industry as well as military software radio developments to space-based radios and network processing. The development of such radios and the network processor presented here require defining the correct combination of processing methods ("objects") and developing appropriate dynamic reconfiguration techniques {{as a function of}} system goals and operating parameters...|$|R
5000|$|OPML (<b>Outline</b> <b>Processor</b> Markup Language) is an XML {{format for}} {{outlines}} (defined as [...] "a tree, where each node contains {{a set of}} named attributes with string values"). Originally developed by UserLand as a native file format for the outliner application in its Radio UserLand product, it has since been adopted for other uses, the most common being to exchange lists of web feeds between web feed aggregators.|$|E
5000|$|An {{outliner}} (or <b>outline</b> <b>processor)</b> is {{a specialized}} type of word processor used to view, create, build, modify, and maintain outlines. It {{is a computer}} program, or part of one, used for displaying, organizing, and editing hierarchically arranged text in an outline's tree structure. Textual information is contained in discrete sections called [...] "nodes", which are arranged according to their topic-subtopic (parent-child) relationships, {{sort of like the}} members of a family tree. When loaded into an outliner, an outline may be collapsed or expanded to display as few or as many levels as desired.|$|E
5000|$|KAMAS, {{an acronym}} for Knowledge and Mind Amplification System, from Compusophic Systems, then Kamasoft (Aloha, Oregon), was in the 1980s the most {{influential}} outliner or <b>outline</b> <b>processor,</b> and the first for CP/M. It was a type of word processor that edited outline elements, enabling showing, hiding, promotion, demotion, and moving (cutting and pasting) of outline trees ("branches"). Each string of text occupied a [...] "leaf". While some modern word processing programs include limited outline capability, none has the features of KAMAS. A number of outline processors exist for MS-DOS, Windows, and the Mac platforms. None has achieved a significant market share, or the enthusiastic user base which supported KAMAS.|$|E
40|$|This report {{describes}} the parallel language ISETL-LINDA. The language {{is an extension}} of ISETL, an imperative language whose main data structure is the set. We extend ISETL by adding a new type of distributed bags, and operations to act on bags which correspond to the LINDA primitives. However, we use a variant of LINDA, created at the University of York, which contains a new primitive, collect. After describing the language, we give an example of its use with a simple case study. We then describe an implementation across a network of <b>processors,</b> <b>outlining</b> the implementation of distributed bags, and our process spawning mechanism. The language has been implemented on a Meiko Computing Surface. 1 Introduction This paper describes a new language, ISETL-LINDA, and its implementation over a network of transputers. The language itself is similar to another parallel language, ProSet [5]. Both are embeddings of Linda [4] into SETL. Linda is a model for communication and co-ordination of par [...] ...|$|R
40|$|The {{distributed}} system {{characterized by the}} {{distributed system}}s where server nodes can come up short forever with probability of nonzero, the framework execution can be evaluated by method for the administration quality, characterized as the likelihood of serving all the task lined in the distributed framework before all the failure of nodes. A Content delivery network or Content Distribution Network (CDN) is an expansive distributed systems of servers conveyed in various server farm crosswise over internet. The objective of CDN is to server with superior and accessibility. Complex component of CDN is request routing system i. e. demand for content to the suitable server focused around {{a particular set of}} parameters. Load-balancing issues emerge in numerous applications in any case; in particular, they assume an exceptional part in the operation of parallel and distributed registering systems. Load balancing manages parceling a project into littler assignments that can be executed simultaneously and mapping each of these assignments to computational sources such a processor or a machine. By creating methods that can <b>outline</b> tasks to <b>processors</b> in a manner that adjusts out the load, the aggregate handling time will be decreased with enhanced processor usage. The proposed framework will actualize the model focused around worldwide balancing that will similarly adjust the appeals in framework queue which additionally considers different delay modification plan and methods for backup with arbitrary crash of nodes or failure. This paper propose load balancing algorithm to improve stability, scalability, fault tolerance and delay adjustment...|$|R
5000|$|With {{products}} and services based on UserLand's Frontier system, Winer became a leader in blogging tools from 1999 onwards, {{as well as a}} [...] "leading evangelist of weblogs." [...] In 2000 Winer developed the <b>Outline</b> <b>Processor</b> Markup Language OPML, an XML format for outlines, which originally served as the native file format for Radio UserLand's outliner application and has since been adopted for other uses, the most common being to exchange lists of web feeds between web feed aggregators. UserLand was the first to add an [...] "enclosure" [...] tag in its RSS, modifying its blog software and its aggregator so that bloggers could easily link to an audio file (see podcasting and history of podcasting).|$|E
5000|$|ThinkTank, {{which was}} based on VisiText, was {{released}} in 1983 for Apple II and was promoted as an [...] "idea processor." [...] It became the [...] "first popular <b>outline</b> <b>processor,</b> the one that made the term generic." [...] A ThinkTank release for the IBM PC followed in 1984, as well as releases for the Macintosh 128K and 512K. [...] Ready, a RAM resident outliner for the IBM PC released in 1985, was commercially successful but soon succumbed to the competing Sidekick product by Borland. [...] MORE, released for Apple's Macintosh in 1986, combined an outliner and a presentation program. It became [...] "uncontested in the marketplace" [...] and won the MacUser's Editor's Choice Award for [...] "Best Product" [...] in 1986.|$|E
5000|$|CP/M {{software}} {{often came}} with installers that adapted it {{to a wide}} variety of computers. Most forms of copy protection were ineffective on the operating system, and the source code for BASIC programs was easily accessible. The lack of standardized graphics support limited video games, but various character and text-based games were ported, such as Telengard, Gorillas (video game), Hamurabi, Lunar Lander, along with early interactive fiction including the Zork series and Colossal Cave Adventure. A text adventure specialist, Infocom was one of the few publishers to consistently release their games in CP/M format. Lifeboat Associates started collecting and distributing user-written [...] "free" [...] software. One of the first was XMODEM, which allowed reliable file transfers via modem and phone line. The last significant program native to CP/M was the <b>outline</b> <b>processor</b> KAMAS.|$|E
40|$|You've put off {{figuring}} out what <b>Outline</b> <b>Processor</b> Markup Language(OPML) is all about and what it can do, right? We'll bring you into the picture quickly with 14 wide-ranging uses forthe OPML format including: Reading lists and RSS subscription listsBloggingA wholly new sort of intranetProcess documentationInstant outlining and collaborationDistributed directories Included in this Short Cut are step-by-step how-to examples with illustrations {{to get you started}} using and remixing OPML right now. Let's get going...|$|E
40|$|Abstract—With {{the rapid}} growth of weblogs (or “blogs”) over the past year, users require a way of rapidly {{accessing}} recent content from many different websites. Traditional websites are inadequate for this, as their content and presentation information are inseparably intertwined. This paper describes the development of the RSS (Really Simple Syndication) specifications as a solution for this problem. This paper also describes the RSS readers or aggregators used to process content in the RSS format, the growth in the use of <b>Outline</b> <b>Processor</b> Markup Language (OPML), and the development of environments for ranking the relative importance of blogs (commonly known as blog ecosystems) ...|$|E
40|$|Synthesis is a {{computer-controlled}} multimedia tool {{to enhance}} group communication {{during the early}} stages of collaborative work. Synthesis operates in two modes: one for recording collaborative sessions and one for playback and editing. A face-to-face meeting is recorded on video tape while one member of the group takes notes using Storyspace, an <b>outline</b> <b>processor.</b> Synthesis automatically associates the current video segment with that entry in the outline. Later {{one or more of the}} participants can review the notes and call up the appropriate video segment. Synthesis provides an external working memory for information that would otherwise go unrecorded and forgotten. Our early experiences using it for real writing projects suggests that the video record is used in a variety of ways to jog the writer's memory for discussion elements...|$|E
40|$|This paper {{describes}} an <b>outline</b> <b>processor</b> display of Web pages. We attach icons, called zippers, to the HTML heading tags (H 1, H 2, [...] .), and the user can dynamically include or elide {{the body of}} each section by clicking on the zipper. We have implemented zippers in three different ways: zippers that are inserted by a custom-built Web browser and that control the browser's display engine; zippers that are inserted into the HTML document by a Web proxy and that use the proxy to generate modified HTML reflecting the changed state of the zipper; and zippers that trigger a JavaScript program which redisplays an appropriately {{modified version of the}} page. A good way to experience the ideas presented here is to view the outline version of this paper. You will need to use Netscape Navigator 3 or higher...|$|E

