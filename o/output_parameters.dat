1347|1039|Public
25|$|As the {{oscillation}} {{takes some}} time to set up, and is inherently random at the start, subsequent startups will have different <b>output</b> <b>parameters.</b> Phase is almost never preserved, which makes the magnetron difficult to use in phased array systems. Frequency also drifts from pulse to pulse, a more difficult problem for a wider array of radar systems. Neither of these present a problem for continuous-wave radars, nor for microwave ovens.|$|E
25|$|The {{program also}} offers the {{possibility}} to follow historic records with annually changing input values (e.g. rainfall, irrigation, agricultural practices), the calculations must be made year by year. If this possibility is chosen, the program creates transfer files by which the final conditions {{of the previous year}} (e.g. water table and salinity) are automatically used as the initial conditions for the subsequent period. This facility makes it possible to use various generated rainfall sequences drawn randomly from a known rainfall probability distribution and obtain a stochastic prediction of the resulting <b>output</b> <b>parameters.</b>|$|E
25|$|SQL Server {{also allows}} stored {{procedures}} to be defined. Stored procedures are parameterized T-SQL queries, that {{are stored in}} the server itself (and not issued by the client application {{as is the case}} with general queries). Stored procedures can accept values sent by the client as input parameters, and send back results as <b>output</b> <b>parameters.</b> They can call defined functions, and other stored procedures, including the same stored procedure (up to a set number of times). They can be selectively provided access to. Unlike other queries, stored procedures have an associated name, which is used at runtime to resolve into the actual queries. Also because the code need not be sent from the client every time (as it can be accessed by name), it reduces network traffic and somewhat improves performance. Execution plans for stored procedures are also cached as necessary.|$|E
3000|$|... [...]), executes {{the update}} {{statements}} of t; produces the (parameterized) <b>output</b> where <b>parameter</b> values {{are provided by}} the <b>output</b> <b>parameter</b> function op, and moves to configuration (s′, v′), where v′[*]=[*]up(p [...]...|$|R
40|$|In a {{multiple}} sampling process, a noisy signal parameter and a noise parameter are each sampled N times and processed into an <b>output</b> <b>parameter.</b> To enhance signal and noise transmission response, the invention foresees that a concatenated {{sampling of the}} signal parameter and the noise parameter is performed, whereupon, either an aggregate value is reduced from the signal sampling value and a noise sampling value {{in the case of}} a triple sampling in order to form a further double noise sampling value and the <b>output</b> <b>parameter</b> is generated from the sum of the aggregate values or a difference value is formed from the difference of the signal sampling value and the noise sampling value and the <b>output</b> <b>parameter</b> is formed from the sum of the differential values...|$|R
40|$|Abstract: Through {{establishing}} {{fuzzy control}} system model, designing on fuzzy controller, controlling sunlight greenhouse {{temperature and humidity}}, we designed temperature and humidity fuzzy control system, and then studied on input and <b>output</b> <b>parameter</b> in fuzzy controller, analyzed membership function of inputting and <b>outputting</b> <b>parameter,</b> then designed fuzzy control operation. The greenhouse has the best entironment for crop growing. [Nature and Science. 2005; 3 (1) : 45 - 48]. Key words: greenhouse; fuzzy control; temperature; humidit...|$|R
2500|$|Any {{system under}} test can be {{described}} {{by a set of}} classifications, holding both input and <b>output</b> <b>parameters.</b>|$|E
50|$|<b>Output</b> <b>parameters</b> {{are often}} {{discouraged}} in modern programming, essentially as being awkward, confusing, and too low-level - commonplace return values are considerably {{easier to understand}} and work with. Notably, <b>output</b> <b>parameters</b> involve functions with side effects (modifying the output parameter) and are semantically similar to references, which are more confusing than pure functions and values, and the distinction between <b>output</b> <b>parameters</b> and input/output parameters can be subtle. Further, since in common programming styles most parameters are simply input parameters, <b>output</b> <b>parameters</b> and input/output parameters are unusual and hence susceptible to misunderstanding.|$|E
50|$|There {{are various}} {{alternatives}} to the use cases of <b>output</b> <b>parameters.</b>|$|E
40|$|The {{analysis}} of a ternary mixture {{can be done by}} using analytical instruments like TLC, GLC, HPLC, GC etc. which is time consuming & expensive. In the present work Artificial neural network modeling has been applied to estimate composition of a ternary liquid mixture with its physical properties such as refractive index, pH & conductivity. The work is extended in developing ANN model for estimation of composition of a known ternary mixture for the experimentally determined physical properties, refractive index, pH & conductivity. Samples having known compositions of a ternary liquid mixture, acetic acid-waterethanol have been prepared & analysed for the physical properties, refractive index, pH & conductivity. ANN models 1 & 2 with different topologies have been developed based on the generated data. The predicted & the actual values using ANN models 1 & 2 have been compared based on the % relative error. The novel feature of this work has been the development of ANN model 1 with the accuracy of prediction between 0 - 3 % for <b>output</b> <b>parameter,</b> mole % water & 0 - 5 % for <b>output</b> <b>parameter,</b> mole % acetic acid for training data set & ANN model 1 having accuracy level of 0 - 10 % for <b>output</b> <b>parameter,</b> mole % water & 0 - 3 % for <b>output</b> <b>parameter,</b> mole % acetic acid for test data set...|$|R
30|$|The {{input data}} files for this {{software}} are classified into three semi-equal groups, “training data”, “validation data” and “applied data”. These input files include measured inputs and <b>outputs</b> <b>parameters</b> for our correlation.|$|R
5000|$|<b>Output</b> and input/output <b>parameters</b> prevent {{function}} composition, {{since the}} output {{is stored in}} variables, {{rather than in the}} value of an expression. Thus one must initially declare a variable, and then each step of a chain of functions must be a separate statement. For example, in C++ the following function composition:Object obj = g(y, f(x));when written with <b>output</b> and input/output <b>parameters</b> instead becomes (for [...] it is an <b>output</b> <b>parameter,</b> for [...] an input/output parameter):Object obj;f(x, &obj);g(y, &obj);In the special case of a function with a single <b>output</b> or input/output <b>parameter</b> and no return value, function composition is possible if the <b>output</b> or input/output <b>parameter</b> (or in C/C++, its address) is also returned by the function, in which case the above becomes:Object obj;g(y, f(x, &obj)); ...|$|R
5000|$|An output {{parameter}}, {{also known}} as an out parameter or return parameter, is a parameter used for output, rather than the more usual use for input. Using call by reference parameters, or call by value parameters where the value is a reference, as <b>output</b> <b>parameters</b> is an idiom in some languages, notably C and C++, while other languages have built-in support for <b>output</b> <b>parameters.</b> Languages with built-in support for <b>output</b> <b>parameters</b> include Ada (see Ada subprograms), Fortran (since Fortran 90; see Fortran [...] "intent"), various procedural extensions to SQL, such as PL/SQL (see PL/SQL functions) and Transact-SQL, C# and the [...]NET Framework, and the scripting language TScript (see TScript function declarations).|$|E
50|$|Neural {{networks}} {{show the}} connection between input and <b>output</b> <b>parameters</b> {{and can be used}} for forecasting.|$|E
5000|$|Execution: Trigger/drive the UUT {{to perform}} the target {{behavior}} and capture all output, such as return values and <b>output</b> <b>parameters.</b> This step is usually very simple.|$|E
50|$|Processes {{described}} in SensorML are discoverable and executable. All processes define their inputs, <b>outputs,</b> <b>parameters,</b> and method, {{as well as}} provide relevant metadata. SensorML models detectors and sensors as processes that convert real phenomena to data.|$|R
30|$|This {{service is}} to {{recommend}} input parameter values {{to obtain the}} <b>output</b> <b>parameter</b> values that we desire to know for a given simulation. The service can assist a user {{to figure out which}} input parameters can be specified for the very first simulation or for the simulation with a specific goal. In the service, we should find input parameter values associated with specified <b>output</b> <b>parameter</b> values as opposed to predicting the output values for the input values. Hence, this problem is totally different from regression analysis. To implement the service, we should develop a new mining algorithm, which may be more challenging than any other service.|$|R
40|$|Micro-Electro-Mechanical Systems (MEMS) {{have played}} an {{important}} role in modern microelectronics, thermal, mechanical and hybrid systems. MEMS technology is a very promising means that might have a great impact on almost every corner of the society. Although many design methodology of MEMS already exists, not as much attention was given to the synthesis and optimization of MEMS devices. This thesis focuses on the optimization of MEMS actuators and MEMS tunable comb drive capacitors. The optimization is based on changing device geometry to achieve desired <b>output</b> <b>parameter</b> profile. For example in the design of MEMS tunable comb drive capacitors, the <b>output</b> <b>parameter</b> is the capacitance tuning range. Numerical experiments were performed to show the successful implementation of the optimization method...|$|R
5000|$|Syntactically, {{parameter}} mode {{is generally}} indicated with a keyword in the function declaration, such as [...] in C#. Conventionally <b>output</b> <b>parameters</b> are often put {{at the end}} of the parameter list to clearly distinguish them, though this is not always followed. TScript uses a different approach, where in the function declaration input parameters are listed, then <b>output</b> <b>parameters,</b> separated by a colon (:) and there is no return type to the function itself, as in this function, which computes the size of a text fragment: TextExtent(WString text, Font font : Integer width, Integer height) ...|$|E
50|$|This {{provides}} {{an alternative to}} the use of <b>output</b> <b>parameters</b> for returning multiple values from a function. This dates to CLU (1974), and CLU helped popularize parallel assignment generally.|$|E
5000|$|IAL {{procedure}} declarations provide {{separate declaration}} lists for input and <b>output</b> <b>parameters,</b> a procedure can return multiple values; this mechanism was replaced in ALGOL 60 with the value declaration.|$|E
40|$|DE 202010001277 U 1 UPAB: 20100712 NOVELTY - The device (1) has a fuzzifier (10) for {{receiving}} and fuzzifying two input parameters, and for supplying the input parameters {{to a decision}} circuit (11) having an output for providing an <b>output</b> <b>parameter.</b> A defuzzifier (12) receives the <b>output</b> <b>parameter</b> and has an output for providing an actuating variable. The input parameters represent carbon dioxide content of air in a room (20) and an internal temperature of the room. The <b>output</b> <b>parameter</b> represents an opening angle of a window, and the actuating variable is input as an actuating signal to an actuator for moving the window. DETAILED DESCRIPTION - An INDEPENDENT CLAIM is also included for a data carrier comprising data for execution on a microprocessor for controlling air quality and internal temperature of a room by free ventilation via a window. USE - Control device for controlling air quality and internal temperature of a room e. g. lecture room, classroom and conference room, by free ventilation via a window. ADVANTAGE - The device improves air quality and maintains comfortable internal temperature of the room, even when the room has high dwelling density...|$|R
40|$|Mathematical {{analysis}} of power spectrum of outputs from high-reliability communication system {{is used to}} determine system bandwidth. Analysis provides mathematical relationships of signal power spectrum at output of hard limiter for any type of baseband pulse input subjected only to <b>output</b> <b>parameter</b> constraints...|$|R
40|$|Paper compares {{several types}} of power supply {{from the point of}} view of <b>output</b> <b>parameter,</b> {{engineering}} solution and applied potentiality. Analysis of methods used in power supplies are followed with multipurpose power supply design. Last part includes example of measuring performed with designed power supply...|$|R
5000|$|Logic {{programming}} languages such as Prolog don't {{even have}} return values. Instead, unbound logical variables {{are used as}} <b>output</b> <b>parameters,</b> to be unified with values constructed in a predicate call.|$|E
5000|$|A {{variant of}} <b>output</b> <b>parameters</b> {{is used in}} {{object-oriented}} languages that use call by sharing, where a mutable object is passed to a function, and the object is mutated to return values.|$|E
5000|$|For example, {{to return}} two {{variables}} from a function in C, one may write:int width, height;f(x, &width, &height);where [...] is an input parameter and [...] and [...] are <b>output</b> <b>parameters,</b> passed by reference.|$|E
40|$|Existing {{prediction}} {{techniques are}} compiled and described. The descriptions include input and <b>output</b> <b>parameter</b> lists, required equations and graphs, {{and the range}} of validity for each part of the prediction procedures. Examples are provided illustrating the analysis procedure and the degree of agreement with experimental results...|$|R
40|$|Boundary {{testing of}} {{electric}} circuits includes preliminary and limiting tests. Preliminary tests permit {{determination of the}} critical parameters causing the greatest deviation of the <b>output</b> <b>parameter</b> of the system. The boundary tests offer the possibility of determining {{the limits of the}} fitness of the system with simultaneous variation of its critical parameters...|$|R
40|$|Laser {{engraving}} {{process is}} non conventional machining process used for marking/engraving of almost each material which cannot be mark by conventional machining processes. In laser engraving process {{the surface of}} material is heat up and subsequently vaporize the material. With the use of laser engraving machine the marking/engraving is possible by using different input parameter as spot diameter, laser power, laser frequency, different wave length etc, and get the changes in <b>output</b> <b>parameter</b> like material removal rate, surface finish and indentation. To optimization of all these parameters with multiple performance characteristic based on the Grey relational analysis. Taguchi method of orthogonal array will be performed {{to determine the best}} factor level condition. By analyzing Grey relational grade, it will be observed that which parameter has more effect on responses of input <b>parameter</b> to the <b>output</b> <b>parameter...</b>|$|R
5000|$|Another {{striking}} {{feature of}} TScript is the function declarations, which use <b>output</b> <b>parameters</b> rather than return values, and provide syntactic support for these. The standard function in many procedural languages, following Algol, {{is of the}} form: ...|$|E
5000|$|The usual {{alternative}} to <b>output</b> <b>parameters</b> in C and related languages is {{to return a}} single data structure containing all return values. For example, given a structure encapsulating width and height, one can write:WidthHeight width_and_height = f(x); ...|$|E
50|$|Modeler, as {{the name}} implies, {{includes}} all of the modeling features used to create the 3D models, while Layout includes features to arrange the 3D models, animate, and render them. Layout offers ray tracing, global illumination, and render <b>output</b> <b>parameters.</b>|$|E
50|$|The {{notion of}} l-values and r-values was {{introduced}} by CPL. The notions in an expression of r-value, l-value, and r-value/l-value are analogous to the parameter modes of input parameter (has a value), <b>output</b> <b>parameter</b> (can be assigned), and input/output parameter (has a value and can be assigned), though the technical details differ between contexts and languages.|$|R
5000|$|For example, if {{a module}} {{has only a}} single input and <b>output</b> data <b>parameter</b> ...|$|R
50|$|In essence, the {{important}} <b>output</b> <b>parameter</b> when treating hair (and other skin conditions) is power density - {{this is a}} combination of energy, spot diameter and pulse duration. These three parameters determine what actually happens when the light energy is absorbed by the tissue chromophore be it melanin, hemoglobin or water, with the amount of tissue damaged being determined by the temperature/time combination.|$|R
