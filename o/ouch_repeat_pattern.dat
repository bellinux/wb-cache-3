0|2759|Public
30|$|To {{accelerate}} the retrieval of <b>repeating</b> <b>patterns,</b> in this paper, we propose an algorithm named Fast Mining of <b>Repeating</b> <b>Patterns</b> (FMRP) to achieve high performance of mining <b>repeating</b> <b>patterns</b> by the proposed Quick-Pattern Index (QPI). With this index, the occurrences and {{positions of the}} patterns are kept {{to reduce the cost}} of searching the <b>repeating</b> <b>patterns.</b> Hence, without scanning the sequence iteratively, the <b>repeating</b> <b>patterns</b> can be discovered by only one scan of the input sequence. The experimental results reveal our proposed algorithm performs better than the compared methods in terms of execution time.|$|R
40|$|Abstract This paper {{introduces}} {{the problem of}} discovering maximum-length <b>repeating</b> <b>patterns</b> in music objects. A novel algorithm is presented for the extraction {{of this kind of}} patterns from a melody music object. The proposed algorithm discovers all maximum-length <b>repeating</b> <b>patterns</b> using an “aggressive ” accession during searching, by avoiding costly repetition frequency calculation and by examining as few as possible <b>repeating</b> <b>patterns</b> in order to reach the maximum-length <b>repeating</b> <b>pattern(s).</b> Detailed experimental results illustrate the significant performance gains due to the proposed algorithm, compared to an existing baseline algorithm. Keywords Maximum-length <b>repeating</b> <b>patterns</b> · Data mining · Theme discovery · Music databases...|$|R
30|$|In the {{previous}} section, {{the efficiency of}} algorithm for mining the <b>repeating</b> <b>patterns</b> has been shown. Another issue in {{this paper is to}} convince the readers of usage of <b>repeating</b> <b>patterns.</b> Therefore, our intent for the following evaluations is to reveal how useful the <b>repeating</b> <b>patterns</b> are.|$|R
40|$|Abstract. <b>Repeating</b> <b>patterns</b> {{represent}} temporal {{relations among}} data items, {{which could be}} used for data summarization and data prediction. More and more data of various applications is generated as a data stream. Based on time sensitive concern, mining <b>repeating</b> <b>patterns</b> from the whole history data sequence of a data stream does not extract the current trend of patterns in the stream. Therefore, the traditional strategies for mining <b>repeating</b> <b>patterns</b> on static database are not applicable to data streams. For this reason, an algorithm, named appearing-bit-sequence-based incremental mining algorithm, for efficiently discovering recently <b>repeating</b> <b>patterns</b> from a data stream is proposed in this paper. The appearing bit sequences are used to monitor the occurrences of patterns within a sliding window. Two versions of algorithms are proposed by maintaining the appearing bit sequences of maximum <b>repeating</b> <b>patterns</b> and closed <b>repeating</b> <b>patterns,</b> respectively. Accordingly, the cost of re-mining <b>repeating</b> <b>patterns</b> over a sliding window is reduced to that of monitoring frequency changes of the maintained patterns. The experimental results show that the incremental mining methods perform much better than the re-miming approach...|$|R
40|$|This paper {{presents}} a simple algorithm that efficiently discovers and extracts <b>repeating</b> <b>patterns</b> in music. The algorithm can detect not only exact <b>repeating</b> <b>patterns,</b> but also partial and approximate patterns. The method {{is based on}} the time distance of two interval pairs that are similar and uses the accumulation of the distance for evidence of <b>repeating</b> <b>patterns.</b> Users can recognize <b>repeating</b> <b>patterns</b> as a volume of the accumulation of distance and choose them to summarize music. Our algorithm also can be used to analyze the structure of any arbitrary music because of its flexibility. 1...|$|R
40|$|This study {{explored}} the patterning abilities of eight {{children between the}} ages of four and five-and-a-half. Task-based interviews were conducted where children were required to produce their own <b>repeat</b> <b>pattern,</b> to copy and extend a given <b>repeat</b> <b>pattern,</b> and complete missing parts of a <b>repeat</b> <b>pattern.</b> The findings show that most children were able to copy and extend a pattern, but few could produce their own <b>repeat</b> <b>pattern.</b> While most children tended to focus on “what comes next”, some children paid attention to pattern structure, but were not able to isolate the pattern element...|$|R
30|$|Frankly speaking, it is {{not easy}} to {{discover}} the valuable knowledge from our real life. For this issue, the past studies made on knowledge discovery can be categorized two classifications, namely, algorithm-driven and application-driven studies. Algorithm-driven studies focused on how to increase the efficiency, while the application-driven ones focused on how to successfully apply the mining algorithms to applications. In this paper, on one hand, we propose an efficient mining algorithm to discover the <b>repeating</b> <b>patterns.</b> On the other hand, an application for music recommendation is lifted to justify the motivation of pattern mining. In terms of mining algorithm, first, we construct an informative index called QPI containing positions and occurrences of patterns. It can effectively reduce the cost of mining of <b>repeating</b> <b>patterns.</b> By QPI, a prefix-search-based algorithm named FMRP performs efficiently on mining the <b>repeating</b> <b>patterns.</b> In terms of application, a music recommender system based on the <b>repeating</b> <b>patterns</b> is proposed to cope with problems in traditional recommender systems. The main intent is to link the user preferences and the <b>repeating</b> <b>patterns</b> on music. The experimental results reveal that our proposed mining algorithm is more efficient than the compared methods on different data. Moreover, the proposed recommender system based on the <b>repeating</b> <b>patterns</b> performs more effective in facing very sparse data. This is just the beginning of applying the <b>repeating</b> <b>patterns.</b> In the future, the <b>repeating</b> <b>patterns</b> will further be used as representative features in recognizing objects in other real applications.|$|R
30|$|Mining the {{valuable}} knowledge from real data {{has been a}} hot topic for a long time. <b>Repeating</b> <b>pattern</b> {{is one of the}} important knowledge, occurring in many real applications such as musical data and medical data. In this paper, our purposes are to contribute an efficient mining algorithm for <b>repeating</b> <b>patterns</b> and to conduct a real application using the <b>repeating</b> <b>patterns</b> mined. In terms of mining the <b>repeating</b> <b>patterns,</b> although a number of past studies were made on this issue, the performance cannot still earn the users’ satisfactions especially for large data sets. For this issue, in this paper, we propose an efficient algorithm named Fast Mining of <b>Repeating</b> <b>Patterns,</b> which achieves high performance of discovering the <b>repeating</b> <b>patterns</b> by a novel index called Quick-Pattern Index. In terms of applications, a music recommender system named repeating-pattern-based music recommender system is proposed to deal with problems in music recommendation. Even facing a very sparse rating matrix, the recommendation can still be completed. The experimental results show that our proposed mining algorithm and recommender system outperform the previous works in terms of efficiency and effectiveness, respectively.|$|R
30|$|The great {{progress}} {{of information technology}} makes the real data grow rapidly. Actually, {{there is a large}} amount of knowledge in these data such as graph data, sequence data, transaction data, and so on. Therefore, data mining on pattern discovery has been studied for many decades. To discover the valuable patterns hidden in the real data, a number of mining algorithms are proposed nowadays. In recent studies, the patterns are categorized into several categories, including association patterns, sequential <b>patterns,</b> cyclic <b>patterns,</b> <b>repeating</b> <b>patterns,</b> and so on. Different patterns are useful to different fields of data engineering. For association patterns, they are motivated by applications of market basket analysis to discover relations between products purchased. For sequential patterns, they are somewhat different from the association patterns, because the sequential patterns are with temporal continuities. For cyclic patterns, the starting pattern is also the ending pattern in a sequence, which can be viewed as the extension of sequential <b>patterns.</b> For <b>repeating</b> <b>patterns,</b> a <b>repeating</b> <b>pattern</b> contains a set of sequential elements, which can also be viewed as a sequence repeats in a regular form. For example, a string { 1, 2, 3, 1, 2, 4, 1, 2 } contains a repeating substring { 1, 2 }, which is identified as a <b>repeating</b> <b>pattern.</b> The major difference between the cyclic <b>patterns</b> and <b>repeating</b> <b>patterns</b> is that a <b>repeating</b> <b>pattern</b> does not need to consider the start and end of a sequence must be the same. In fact, <b>repeating</b> <b>patterns</b> are popular, because they can be regarded as a set of representative patterns facilitating object recognition. Lots of <b>repeating</b> <b>patterns</b> appear in our life, such as musical data and medical data.|$|R
30|$|Note that, {{for music}} recommendation, the <b>repeating</b> <b>pattern</b> is {{somewhat}} {{different from that}} in Definition  1. In formal, assume {{that there are two}} repeating substrings A and C in a string B, where A contains C. Here, even if A contains C, A and C are both kept as our <b>repeating</b> <b>patterns</b> for music recommendation. For example, the <b>repeating</b> <b>patterns</b> of a string { 1, 2, 3, 1, 2, 3 } include { 1, 2, 3 }, { 1, 2 } and { 2, 3 }.|$|R
30|$|Hsu et al. [9] {{proposed}} {{a method to}} generate the <b>repeating</b> <b>patterns.</b> In this method, a string-join operation and a data structure called RP tree were proposed to achieve high performance of mining of <b>repeating</b> <b>patterns.</b> The basic idea {{of this approach is}} to iteratively join two short <b>repeating</b> <b>patterns</b> into a long one. To speed up the join procedure, a tree structure named RP tree was proposed. Although the tree structure can reduce the time complexity of join operations, the checking cost is so high that the generation of <b>repeating</b> <b>patterns</b> is inefficient. In addition to RP tree, another tree structure for generating the <b>repeating</b> <b>patterns</b> is suffix tree. Basically, the suffix tree is the compressed tree for the nonempty suffixes of a string. Since a suffix tree is a compressed tree, it consists of an important idea that the procedure of mining of <b>repeating</b> <b>patterns</b> highly refers to its sub-trees. Once constructed, several operations can be performed quickly, for instance, locating a substring, locating matches for a regular expression pattern, etc. Suffix trees also provide the linear-time solution for the longest common substring problem [16, 20]. Unfortunately, the construction of such a tree for a string takes much time and space.|$|R
30|$|This {{operation}} is {{to generate the}} <b>repeating</b> <b>patterns</b> of each pattern string by our proposed mining algorithm. Here, the mining procedure is not described again. Finally, the Term Frequencies (called TF in this paper) of the <b>repeating</b> <b>patterns</b> are calculated, which {{can be defined as}} Definition  2.|$|R
40|$|This paper {{discusses}} <b>repeating</b> <b>patterns</b> on infinite skew polyhedra, {{which are}} triply periodic polyhedra. We exhibit patterns {{on each of}} the three regular skew polyhedra. These patterns are each related to corresponding <b>repeating</b> <b>patterns</b> in the hyperbolic plane. This correspondence will be explained in the paper. 1...|$|R
40|$|Music {{pieces are}} {{typically}} repetitive. The automatic extraction of <b>repeating</b> <b>patterns</b> {{is useful for}} music summary, indexing and retrieval. In this paper, an effective approach of <b>repeating</b> <b>pattern</b> discovery is proposed. In order to represent the melody similarity more accurately, in our approach, Constant Q transform is used for feature extraction and a novel similarity measure between musical features is proposed. From the selfsimilarity matrix of the music, an adaptive method is used to extract all the significant <b>repeating</b> <b>patterns.</b> Experiments on pop music indicate the approach is promising. * 1...|$|R
30|$|In {{the field}} of medical biology, repeating subsequences {{are a kind of}} <b>repeating</b> <b>patterns.</b> Actually, the <b>repeating</b> <b>patterns</b> in {{biological}} cell DNA occur in multiple copies throughout a genome. The functions and descriptions of these subsequences are currently being characterized by scientists. Tandem repeat is a kind of <b>repeating</b> <b>patterns</b> occurring in DNA when a <b>pattern</b> of nucleotides <b>repeats</b> and the repetitions are directly adjacent to each other. Several protein domains also form tandem repeats within their amino acid primary structures. In practical, tandem repeats are very helpful in {{the field of}} bioinformatics. In addition to bioinformatics, <b>repeating</b> <b>patterns</b> are usually supported for the matching of local image features. They can be modeled as a set of sparse repeated features in which the crystallographic group theory. Muller et al. [5] proposed an approach to detect symmetric structures and to reconstruct a 3 D geometric model. Liu et al. [10, 24] proposed a new method for detection of <b>repeated</b> <b>patterns</b> following a Kronecker Product formulation. They handled problems of pose variation and varying brightness by employing the low-rank part of the rearranged input facade image. Automatic video summarization [11, 23] was proposed as an effective way to accelerate the video browsing and retrieval. The video structure is first analyzed by spatial–temporal analysis. Then, the video non-trivial <b>repeating</b> <b>patterns</b> are extracted to remove the visual-content redundancy among videos.|$|R
5000|$|... #Caption: Cloth of Saint Gereon {{tapestry}} showing its <b>repeat</b> <b>pattern</b> ...|$|R
5000|$|The parity of {{tetrahedral}} numbers {{follows the}} <b>repeating</b> <b>pattern</b> odd-even-even-even.|$|R
5000|$|Mingei - geometrics, <b>repeating</b> <b>patterns,</b> {{seasonal}} images such as harvests ...|$|R
40|$|<b>Repeated</b> <b>patterns</b> (such as windows, tiles, {{balconies}} and doors) {{are prominent}} and significant features in urban scenes. Therefore, detection of these <b>repeated</b> <b>patterns</b> be-comes {{very important for}} city scene analysis. This paper attacks the problem of <b>repeated</b> <b>patterns</b> detection in a pre-cise, efficient and automatic way, by combining traditional feature extraction followed by a Kronecker product low-rank modeling approach. Our method is tailored for 2 D im-ages of building façades. We have developed algorithms for automatic selection of a representative texture within façade images using vanishing points and Harris corners. After rectifying the input images, we describe novel algorithms that extract <b>repeated</b> <b>patterns</b> by using Kronecker product based modeling {{that is based on}} a solid theoretical founda-tion. Our approach is unique and has not ever been used for façade analysis. We have tested our algorithms in a large set of images. 1...|$|R
40|$|Music {{and songs}} usually have <b>repeating</b> <b>patterns</b> and {{prominent}} structure. The automatic extraction of such <b>repeating</b> <b>patterns</b> and structure {{is useful for}} further music summarization, indexing and retrieval. In this paper, an effective approach of <b>repeating</b> <b>pattern</b> discovery and structure analysis of acoustic music data is proposed. In order to represent the melody similarity more accurately, in our approach, Constant Q transform is utilized in feature extraction and a novel similarity measure between musical features is proposed. From the self-similarity matrix of the music, an adaptive method is then presented to extract all significant <b>repeating</b> <b>patterns.</b> Based on the obtained repetitions, musical structure is further analyzed using a few heuristic rules. Finally, an optimization-based approach is proposed to determine the accurate boundary of each musical section. Evaluations on various music pieces indicate our approach is promising...|$|R
500|$|A {{periodic}} tiling has a <b>repeating</b> <b>pattern.</b> Some special kinds include regular tilings {{with regular}} polygonal tiles {{all of the}} same shape, and Semiregular tilings with regular tiles {{of more than one}} shape and with every corner identically arranged. The patterns formed by periodic tilings can be categorized into 17 wallpaper groups. A tiling that lacks a <b>repeating</b> <b>pattern</b> is called [...] "non-periodic". An aperiodic tiling uses a small set of tile shapes that cannot form a <b>repeating</b> <b>pattern.</b> In the geometry of higher dimensions, a space-filling or honeycomb is also called a tessellation of space.|$|R
40|$|Abstract: <b>Repeating</b> <b>Pattern</b> Extraction Technique (REPET), a {{novel and}} simple {{approach}} for separating the repeating “background ” from the non-repeating “foreground ” in a mixture. The basic {{idea is to}} identify periodically <b>repeating</b> <b>patterns</b> in the audio (e. g., a guitar riff or a drum loop), and then separate the repeating “background ” from the non-repeating “foreground” (typically the vocal line). This is embodied in an algorithm called <b>REpeating</b> <b>Pattern</b> Extraction Technique (REPET). In this project {{the performance of the}} repeating algorithm using the Mel Frequency Cepstral Coefficients (MFCC) with the help of MATLAB will be implemented...|$|R
40|$|In this paper, {{we propose}} an {{approach}} for {{the extraction of}} the <b>repeating</b> <b>patterns</b> in music objects. A <b>repeating</b> <b>pattern</b> is a sequence of notes which appears {{more than once in}} a music object. It {{is one of the most}} important music features which can be used for both content-based retrieval of music data and music data analysis. We propose a data structure called correlative matrix and its associated algorithms for extracting all <b>repeating</b> <b>patterns</b> in a music object. Experiments are also performed and the results are analyzed to show the efficiency and the effectiveness of our approach...|$|R
5000|$|A {{periodic}} tiling has a <b>repeating</b> <b>pattern.</b> Some special kinds include regular tilings {{with regular}} polygonal tiles {{all of the}} same shape, and Semiregular tilings with regular tiles {{of more than one}} shape and with every corner identically arranged. The patterns formed by periodic tilings can be categorized into 17 wallpaper groups. A tiling that lacks a <b>repeating</b> <b>pattern</b> is called [...] "non-periodic". An aperiodic tiling uses a small set of tile shapes that cannot form a <b>repeating</b> <b>pattern.</b> In the geometry of higher dimensions, a space-filling or honeycomb is also called a tessellation of space.|$|R
30|$|In this section, we {{describe}} the overall procedure of the proposed resource sharing scheduling scheme. The authority adaptation is executed every <b>repeated</b> <b>pattern</b> period. Also, the user pairing can be also adjusted several times of <b>repeated</b> <b>pattern</b> periods. The overall procedure can be described on the eNB-site and user-site, which is summarized as follow.|$|R
30|$|Step 2 : Repeat Step 1 {{until all}} <b>repeating</b> <b>patterns</b> are generated.|$|R
50|$|As {{a result}} of this <b>repeated</b> <b>pattern,</b> Sherlock Holmes {{preserves}} Victorian morality.|$|R
2500|$|The {{preferred}} way {{to indicate}} a repeating decimal is to place a bar over the digits that repeat, for example 0. = 0.789789789… For <b>repeating</b> <b>patterns</b> where the <b>repeating</b> <b>pattern</b> begins immediately after the decimal point, a simple division of the pattern by {{the same number of}} nines as numbers it has will suffice. For example: ...|$|R
30|$|Before {{describing}} our proposed method, the <b>repeating</b> <b>pattern</b> {{is defined}} as Definition  1.|$|R
50|$|Harlequin {{print is}} a <b>repeating</b> <b>pattern</b> of {{contrasting}} diamonds or elongated squares standing on end.|$|R
3000|$|... b) Participate in choral {{speaking}} and recite short poems, rhymes, songs, and stories with <b>repeated</b> <b>patterns.</b>|$|R
50|$|Requiem {{attempts}} {{to look at}} a troubled global world, continually <b>repeating</b> <b>patterns</b> of destruction and terror.|$|R
2500|$|The {{smallest}} {{group of}} {{particles in the}} material that constitutes the <b>repeating</b> <b>pattern</b> is the unit cell of the structure. The unit cell completely defines the symmetry {{and structure of the}} entire crystal lattice, which is built up by repetitive translation of the unit cell along its principal axes. [...] The <b>repeating</b> <b>patterns</b> are said to be located at the points of the Bravais lattice.|$|R
50|$|Although {{definitions}} of bullying vary, {{it involves a}} <b>repeated</b> <b>pattern</b> of harmful behaviors directed towards an individual.|$|R
5000|$|Ramanujan {{stated the}} {{following}} infinite radical denesting in his lost notebook:The <b>repeating</b> <b>pattern</b> {{of the signs}} is ...|$|R
40|$|We have {{analyzed}} the human involucrin gene in 41 British African-Caribbeans and 37 British white Caucasians by tandem-repeat internal mapping and DNA sequencing. A point mutation (i. e., Bc) {{in the last}} B repeat unit was found in 98. 6 % of British white Caucasians and in 52. 4 % of British African-Caribbeans. The distribution of <b>repeat</b> <b>patterns</b> was also different between the two populations. Nine previously unreported <b>repeat</b> <b>pattern</b> alleles, 4 with and 5 without the Bc repeat, have been found, increasing the range of variation in humans to 15 reported <b>repeat</b> <b>patterns,</b> 6 with and 9 without the Caucasian mutation. Three further sequence variations, each occurring in a single individual, were found. The evolutionary significance of variation in the human involucrin gene is discussed...|$|R
