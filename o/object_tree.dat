45|571|Public
50|$|All {{the useful}} {{features}} are made available through plugins. The plugins are small programs {{working with the}} <b>object</b> <b>tree.</b> After the core has transformed a CSS string into an <b>object</b> <b>tree,</b> the plugins, by turn, analyze and change the tree. Then the PostCSS core generates a new CSS string for the plugin-changed tree.|$|E
5000|$|CSS parser {{that generates}} an <b>object</b> <b>tree</b> (AST) for {{a line of}} CSS-code; ...|$|E
5000|$|<b>Object</b> <b>Tree</b> {{allows for}} {{browsing}} database {{objects such as}} catalogs, schemas, tables, triggers, views, sequences, [...] procedures, [...] UDTs, etc.|$|E
30|$|In [10], we {{proposed}} a tree adaptation procedure (TAP) to improve the update cost of the <b>object</b> tracking <b>tree.</b> The bottom-up approach {{was introduced in the}} TAP. The TAP selects a candidate node based on the bottom-up rule and computes the update cost using the edge connected to the target node, but {{was not included in the}} <b>object</b> tracking <b>tree.</b> If the update cost of the modified <b>object</b> tracking <b>tree</b> is lower than that of the original <b>object</b> tracking <b>tree,</b> the modified <b>object</b> tracking <b>tree</b> will be set as the new <b>object</b> tracking <b>tree.</b> The TAP will compute the update cost for the modified <b>object</b> tracking <b>tree</b> until all nodes except the sink in the <b>object</b> tracking <b>tree</b> have been considered. The simulation results show that the TAP application achieves good performance.|$|R
50|$|MyBatis {{provides}} a mapping engine that maps SQL results to <b>object</b> <b>trees</b> in a declarative way.|$|R
3000|$|In this paper, the <b>object</b> {{tracking}} <b>tree</b> {{is constructed}} and reconstructed using the DAT algorithm. We compare {{the performance of}} the <b>object</b> tracking <b>tree</b> when the MTA procedure is performed with that of the <b>object</b> tracking <b>tree</b> when the MTA procedure is not performed. The range of the threshold value [...]...|$|R
5000|$|Sequential processing. With the <b>object</b> <b>tree</b> {{being able}} to respond to only one plugin at a time, having a number of plugins might result in lower performance. Besides, there are {{functions}} no plugin can process. The PostCSS team is going to fix this in future versions.|$|E
5000|$|Unification. PostCSS plugins cover most CSS {{building}} tasks from {{checking the}} code for mistakes to minification. As a result, all CSS tools can {{share the same}} parser, architecture, and development tools. PostCSS allows for better performance by making all the plugins use the same <b>object</b> <b>tree</b> — {{in contrast to the}} common practice of each tool creating one of its own.|$|E
50|$|These {{ideas for}} multi-scale image {{segmentation}} by linking image structures over scales {{have also been}} picked up by Florack and Kuijper. Bijaoui and Rué associate structures detected in scale-space above a minimum noise threshold into an <b>object</b> <b>tree</b> which spans multiple scales and corresponds {{to a kind of}} feature in the original signal. Extracted features are accurately reconstructed using an iterative conjugate gradient matrix method.|$|E
3000|$|The second paper, [...] "Dynamic <b>object</b> {{tracking}} <b>tree</b> in wireless sensor network" [...] by Chen et al., investigates how to dynamically {{update the}} <b>object</b> tracking <b>tree</b> when the predefined mobility profiles {{do not match}} the real object movement behaviors. The authors propose a dynamic adaptation mechanism to improve and refine the <b>object</b> tracking <b>tree</b> with certain adaptation cost.|$|R
30|$|When {{the sink}} has the actual event {{rates in the}} {{wireless}} sensor network, the sink will reconstruct the <b>object</b> tracking <b>tree</b> based on the actual event rates. The <b>object</b> tracking <b>tree</b> can be reconstructed by DAT [5] or TAP [10]. Finally, the sink should announce the nodes which are changed in the new <b>object</b> tracking <b>tree.</b> As shown in Figure 3 (d), the sink should send the announced messages to the nodes A, B, H, I, and J. The reconstructed <b>object</b> tracking <b>tree</b> {{is shown in the}} Figure 2 (b).|$|R
25|$|A commit <b>object</b> links <b>tree</b> <b>objects</b> {{together}} into a history. It contains {{the name of a}} <b>tree</b> <b>object</b> (of the top-level source directory), a time stamp, a log message, and the names of zero or more parent commit objects.|$|R
5000|$|... #Caption: The table {{has been}} resized to show only the used area, {{moved into the}} center of the canvas, and styled. A chart has been added above the table. The pane in the upper left shows an <b>object</b> <b>tree,</b> with the [...] "canvas" [...] objects being shown in a {{hierarchy}} of each sheet, every sheet can be collapsed or expanded to show the canvas object contained within that sheet.|$|E
50|$|SCNScenes {{also contain}} {{a number of}} {{built-in}} user interface controls and input/output libraries to greatly ease implementing simple viewers and similar tasks. For instance, setting the Scene's autoenablesDefaultLighting and allowsCameraControl to true, and then adding an <b>object</b> <b>tree</b> read from a COLLADA file will produce viewable content of arbitrary complexity with a few lines of code. The integration with Xcode allows the Scene itself {{to be placed in}} a window in Interface Builder, without any code at all.|$|E
50|$|DSSSL {{consists}} of two parts: a tree transformation process {{that can be used}} to manipulate the tree structure of documents prior to presentation, and a formatting process that associates the elements in the source document with specific nodes in the target representation—the flow <b>object</b> <b>tree.</b> DSSSL specifications are device-independent pieces of information that can be interchanged between different platforms. The back-end formatters needed to generate the final form of the document (e.g. PostScript or Rich Text Format, or a presentation on a computer display) are not standardized by DSSSL.|$|E
5000|$|... "Tree {{branches}} {{serve as}} the basis for this new style of wood carving which seeks to create art from such <b>objects.</b> <b>Tree</b> stumps, damaged branches and dead tree trunks are also used as material.|$|R
3000|$|Recent {{advances}} in embedded microsensing technologies and low-energy cost sensors have made {{wireless sensor networks}} possible. Object tracking is an important research of wireless sensor networks. However, most <b>object</b> tracking <b>tree</b> is constructed based on a predefined mobility profile. When the real object movement behaviors are very different to the predefined mobility profile, the <b>object</b> tracking <b>tree</b> performance will become worse. In the paper, we will propose a dynamic adaptation mechanism, referred to as [...] "Message-Tree Adaptive (MTA)" [...] procedure, to improve the <b>object</b> tracking <b>tree</b> when the predefined mobility profiles do not match. From the simulation results, {{the performance of the}} <b>object</b> tracking <b>tree</b> can be significantly improved, when the MTA procedure is performed.|$|R
40|$|This paper {{presents}} MAGE 2 system. It implements a {{computational model}} OOAG (ObjectOriented Attribute Grammars) and creates its attributed <b>object</b> <b>trees</b> in object-oriented database (ODB) using persistent object allocation mechanism of object-oriented database management systems (ODBMS). The MAGE 2 is a programming support and execution environment for OOAG...|$|R
5000|$|QML (Qt Meta Language or Qt Modeling Language) is a user {{interface}} markup language. It is a JSON-like declarative language for designing {{user interface}}-centric applications. Inline JavaScript code handles imperative aspects. It {{is part of}} Qt Quick, the UI creation kit developed by Nokia within the Qt framework. QML is mainly used for mobile applications where touch input, fluid animations (60 [...] ) and user experience are crucial.QML documents describe an <b>object</b> <b>tree</b> of elements. QML Modules [...] shipped with Qt are a sophisticated set of building blocks, graphical (e.g., rectangle, image) and behavioral (e.g., state, transition, animation). These elements can be combined to build components ranging in complexity from simple buttons and sliders, to complete internet-enabled programs.|$|E
5000|$|The Inform {{programming}} language is object-oriented and procedural. A {{key element of}} the language is objects. Objects are maintained in an <b>object</b> <b>tree</b> which lists the parent-child relationships between objects. Since the parent-child relationship {{is often used to}} represent location, an object which is the parent of another object is often said to [...] "hold" [...] it. Objects can be moved throughout the tree. Typically, top level objects represent rooms and other locations within the game, which may hold objects representing the room's contents, be they physical items, non-player characters, the player's character, or background effects. All objects can hold other objects, so a [...] object might hold an [...] object which is holding a [...] object which contains the [...] object.|$|E
5000|$|Kite {{lines of}} a flying kite moored to a {{non-moving}} <b>object</b> (<b>tree</b> stump, ground soil anchor, kite anchor, rock, fence, pole, non-moving car, resting person, ...or any non-moving object, then the kite is statically moored. People are still responsible for kites that they moor to static objects under moral responsibility and under regulations of some governing body. Mooring kites to static objects occurs for various reasons. The tension in a kite line may be {{so great that the}} kite line pulls off its mooring or breaks the mooring; injury to property and people may result when a kite or kite system is improperly moored; a kite may drag its mooring inadvertently so that unintended consequences occur---in such instances the mooring is no longer holding the kite fast as might have been intended.|$|E
40|$|This {{paper is}} of a {{research}} – cognitive feature. It presents a methodology for the identifi cation of point <b>objects</b> (<b>trees)</b> in a wooded area, having an average degree of terrain details condensation and small denivelation of the terrain. The applied methodology {{was based on the}} use of hand-held GPS receivers with navigation ap...|$|R
40|$|Processing markup in {{object-oriented}} languages {{often requires}} the programmer {{to focus on}} the objects generating the markup rather than the more pertinent domain objects. The BetterXML framework aims to improve this situation by allowing the programmer to develop a domain-specific object model as usual and later bind this model to preexisting or newly generated markup. To this end, the framework provides two types of <b>object</b> <b>trees,</b> XElement and NaturalXML, for representing XML documents. XElement goes beyond DOM-like automatic parsing of XML by supporting the custom mapping of elements to domain objects; NaturalXML allows the mapping of existing domain objects to XML elements using class metadata. Both types of <b>object</b> <b>trees</b> can be inflated and deflated by means of a common intermediate representation {{in the form of an}} event stream. Finally, the framework includes the XML Intermediate Representation (XIR), a lossless record-oriented representation of XMLdocuments for efficient streaming and other types of data exchange...|$|R
5000|$|... large <b>objects,</b> fallen <b>trees</b> or collapses through passageways, paths, roads, railroads, {{waterways}} or airfields, preventing mobility; ...|$|R
50|$|The Scanner and Camera Wizard {{based on}} Windows Image Acquisition and other common dialogs for WIA devices have been {{improved}} in Windows XP {{to show the}} media information and metadata, rotate images as necessary, categorize them into subfolders, capture images and video {{in case of a}} still or video camera, crop and scan images to a single or multi-page TIFF in case of a scanner. The Picture Transfer Protocol (PTP) implementation has been updated to support all mandatory and optional commands in the PTP standard, and <b>object</b> <b>tree</b> support which allows secondary files associated with a parent file to be grouped and transferred concurrently. Windows Media Player 10 also adds the Media Transfer Protocol for transferring media content from portable devices. Thus, for digital cameras, Windows XP supports acquiring photos using any of either WIA, PTP, USB Mass Storage Class or MTP protocols depending on what the camera manufacturer supports.|$|E
5000|$|Horizontal {{clearance}} {{is measured}} {{from the edge}} of the traveled way to the bottom of the nearest <b>object,</b> <b>tree</b> trunk or shrub foliage mass face, plant setback, or mature growth. Horizontal sight distance is not to be confused with the clear recovery zone which provides hazardous vegetation set-back to allow errant vehicles to regain control, and is exclusive to a mowed and limbed-up forest which can allow adequate sight distance, but unsafe recovery. The height and lateral distance of plants restrict the horizontal sight distance, at times obscuring wildlife which may be spooked by an approaching vehicle and run across the road to escape with their herd. This principle also applies to approaching vehicles and pedestrians at uncontrolled intersections and to a lesser degree by un-signalized intersections controlled by a yield sign. Horizontal sight distance [...] "" [...] affects the ACDA because the time [...] it takes for an intercepting object, animal, pedestrian, or vehicle with speed [...] "" [...] to transverse this distance after emerging from the proximate edge of lateral visibility affords a vehicle with speed [...] "" [...] a clear distance of [...] "." [...] Thus, the assured clear intercept distance [...] "" [...] is: ...|$|E
40|$|This paper {{presents}} an approach which tries {{to combine the}} sound ideas of Product Data Technology and STEP with a strong bottom up development strategy. The approach is based on Neutral Object Trees: hierarchical structures in which the objects that must be designed and built, are structured in a simple decomposition tree. The Neutral <b>Object</b> <b>Tree</b> approach {{has been used for}} the development of an <b>Object</b> <b>Tree</b> at the Dutch High Speed Railroad project, which is implemented in a PDM-system that is currently in us...|$|E
30|$|Most object {{tracking}} {{is constructed}} {{based on a}} predefined mobility profile. When the actual object movement behaviors do not match the predefined mobility profiles, the <b>object</b> tracking <b>tree</b> performance will become worse. This paper proposed a Message-Tree Adaptive (MTA) procedure to improve the <b>object</b> tracking <b>tree</b> structure when the predefined mobility profiles do not match the actual object movement behaviors. From the simulation results, {{the performance of the}} <b>object</b> tracking <b>tree</b> can be significantly improved using the MTA procedure. Moreover, the adaptation cost is also considered in the paper. From the simulation results, the adaptation cost is high when the MTA procedure is performed. In the near future, we will propose new strategy to improve the adaptation cost.|$|R
5000|$|The Git {{version control}} system uses zlib to store the {{contents}} of its data <b>objects</b> (blobs, <b>trees,</b> commits and tags).|$|R
40|$|The article {{explains}} {{what you need}} to do to incorporate XML directly into your computational science application. The exploration involves the use of a standard parser to automatically build <b>object</b> <b>trees</b> entirely from application-specific classes. This discussion very much focuses on object-oriented programming languages such as Java and Python, but it can work for non-object-oriented languages as well. The ideas in the article provide a glimpse into the Natural XML research project...|$|R
30|$|The model-based {{approach}} {{was presented in}} [9], {{which is used to}} predict the geometric structure of an object using its visual hull. The task-dependent codebook compression framework was proposed to learn a compression function and adapt the codebook compression [10]. Ji et.al [11] proposed a novel compact bag-of-patterns descriptor with an application to low bit rate mobile landmark search. The blocks were flagged by lying in the object regions flagging compression blocks and an <b>object</b> <b>tree</b> would be added in each coding tree unit to describe the object’s shape in its additional <b>object</b> <b>tree</b> [12].|$|E
40|$|Abstract. LED {{lighting}} products play a {{very important}} role in energy conservation and environmental protection. For the multidisciplinary design problem of LED lighting products, we establish the information model of LED lighting products based on the <b>object</b> <b>tree,</b> that is, a process and two trees. First we build a multidisciplinary design process of LED lighting products, clearing tasks and indicators of product design. Then we discuss the LED product modeling which is based on the design <b>object</b> <b>tree</b> and construct two trees of LED products, providing a necessary theoretical support for the design of LED lighting products. Finally, through the example of application, verify the feasibility of multidisciplinary design modeling...|$|E
40|$|Zawilinski is our Java library {{that helps}} {{undergraduates}} conduct research on Wikipedia and Wiktionary. It simplifies the loading and filtering MediaWiki XML dumps {{so that the}} resulting <b>object</b> <b>tree</b> will fit into {{the memory of a}} typical PC, thereby eliminating the need for advanced programming techniques to access Wikipedia and Wiktionary data...|$|E
40|$|The libjson class (library) is {{designed}} to be called from the Mata environment to perform tasks related to obtaining a JavaScript Object Notation (JSON) formatted response from the file or website URL (via a REST API). Most users will want to write an ado file that employs the libjson object to do all the heavy lifting, with the final tailoring of the output to be handled by the ado file. Mata, JSON, JavaScript, <b>object</b> <b>trees...</b>|$|R
40|$|Most <b>object</b> {{tracking}} <b>trees</b> {{are established}} using the predefined mobility profile. However, {{when the real}} object's movement behaviors and query rates {{are different from the}} predefined mobility profile and query rates, the update cost and query cost of <b>object</b> tracking <b>tree</b> may increase. To upgrade the <b>object</b> tracking <b>tree,</b> the sink needs to send very large messages to collect the real movement information from the network, introducing a very large message overhead, which is referred to as adaptation cost. The Sub Root Message-Tree Adaptive procedure was proposed to dynamically collect the real movement information under the sub-tree and reconstruct the sub-tree to provide good performance based on the collected information. The simulation results indicates that the Sub Root Message-Tree Adaptive procedure is sufficient to achieve good total cost and lower adaptation cost...|$|R
2500|$|Some {{traditional}} English Christmas carols {{have been}} revised {{to fit the}} Australian context, notably [...] "The Twelve Days of Christmas", where the traditional <b>objects,</b> <b>trees,</b> and birds are replaced by Australian examples. For instance: On the twelfth day of Christmas, my true love sent to me: 12 parrots prattling, 11 numbats nagging, 10 lizards leaping, 9 wombats working, 8 dingoes digging, 7 possums playing, 6 brolgas dancing, 5 kangaroos, 4 koalas cuddling, 3 kookaburras laughing, 2 pink galahs, and an emu up a gum tree. (Other variants exist.) ...|$|R
