10000|10000|Public
5|$|Rankings use no {{objective}} measures <b>of</b> <b>program</b> quality.|$|E
5|$|The FNS also {{requires}} the Puerto Rican government to submit financial and performance {{reports on a}} regular basis, including quarterly Federal Cash Transactions Reports, quarterly and annual Financial Status Reports, and monthly Program Participation and Benefits Reports. These reports provide details on the program's obligations and actual expenditures, and help the FNS monitor the use <b>of</b> <b>program</b> funds and reconcile the program’s budget with actual expenditures.|$|E
5|$|After {{determining}} which eligibility requirements {{participation in a}} program requires, the recipient must also assure that individual program participant or group eligibility was correctly determined by keeping evidence of such compliance, such as maintaining documentation in participant files (e.g., copies of HIV/Aids diagnosis, copies of federal income tax returns, etc.). Furthermore, the recipient must assure that only eligible individuals or groups participated in the program by establishing strict controls <b>of</b> <b>program</b> funds to avoid non-eligible persons from receiving the specific assistance.|$|E
50|$|In 2006, Mintz joined Azteca America as {{director}} <b>of</b> <b>Programming</b> and shortly thereafter {{was promoted to}} director <b>of</b> <b>Programming,</b> Production and Operations.|$|R
40|$|The {{work to be}} {{described}} here is {{an investigation into the}} means whereby the learning <b>of</b> <b>programming</b> languages may be made easier. The role of formal definitions <b>of</b> <b>programming</b> languages is studied and a system is described which utilises production systems as the basis for generating an environment in which students may test their understanding <b>of</b> <b>programming</b> languages. This system for automating the teaching <b>of</b> <b>programming</b> languages provides an experimental testbed for carrying out further investigations into programming behaviour...|$|R
40|$|This book {{presents}} {{revised and}} extended versions of lectures given {{at an international}} summer school on applied semantics {{that took place in}} Caminha, Portugal in September. The nine lectures included present recent developments in programming language research in a coherent and systematic way. Among the topics addressed are - description <b>of</b> existing <b>programming</b> languages features - design <b>of</b> new <b>programming</b> languages features - implementation and analysis <b>of</b> <b>programming</b> languages - transformation and generation <b>of</b> <b>programs</b> - verification <b>of</b> <b>programs...</b>|$|R
5|$|Exercise {{therapy is}} {{effective}} in decreasing pain and improving function for those with chronic low back pain. It also appears to reduce recurrence rates {{for as long as}} six months after the completion <b>of</b> <b>program</b> and improves long-term function. There is no evidence that one particular type of exercise therapy is more effective than another. The Alexander technique appears useful for chronic back pain, and there is tentative evidence to support the use of yoga. Transcutaneous electrical nerve stimulation (TENS) has not been found to be effective in chronic low back pain. Evidence for the use of shoe insoles as a treatment is inconclusive. Peripheral nerve stimulation, a minimally-invasive procedure, may be useful in cases of chronic low back pain that do not respond to other measures, although the evidence supporting it is not conclusive, and it is not effective for pain that radiates into the leg.|$|E
5|$|Locking {{multiple}} variables using non-atomic locks {{introduces the}} possibility <b>of</b> <b>program</b> deadlock. An atomic lock locks multiple variables all at once. If it cannot lock all of them, {{it does not}} lock any of them. If two threads each need to lock the same two variables using non-atomic locks, {{it is possible that}} one thread will lock one of them and the second thread will lock the second variable. In such a case, neither thread can complete, and deadlock results.|$|E
5|$|On a computer, if {{the result}} of an {{addition}} is too large to store, an arithmetic overflow occurs, resulting in an incorrect answer. Unanticipated arithmetic overflow is a fairly common cause <b>of</b> <b>program</b> errors. Such overflow bugs may be hard to discover and diagnose because they may manifest themselves only for very large input data sets, which {{are less likely to be}} used in validation tests. One especially notable such error was the Y2K bug, where overflow errors due to using a 2-digit format for years caused significant computer problems in 2000.|$|E
40|$| or {{inefficiency}} <b>of</b> <b>programs</b> <b>of</b> perfectioning,|$|R
40|$|As you know, {{programming}} {{languages are}} {{a means of}} knowledge representation for computer systems. The article presents an overview <b>of</b> <b>programming</b> languages, conceptual ideas which have left their mark on the development <b>of</b> <b>programming</b> and used in modern languages at the moment. The main characteristics and properties <b>of</b> <b>programming</b> languages. Conceptual ideas <b>of</b> <b>programming</b> languages, described how to implement them in the semantic structures, as well as properties that characterize the language contribute to {{the choice of the}} best in terms of solving a particular problem...|$|R
40|$|AbstractThe {{procedure}} <b>of</b> systematization <b>programming</b> languages on the TRIZ-evolution base {{is considered}} in the report. The procedure <b>of</b> systematization <b>programming</b> languages is illustrated on the example <b>of</b> the <b>programming</b> languages paradigms development. The algorithm of presentation TRIZ-evolution map [1] <b>of</b> the <b>programming</b> languages paradigms is described. The complete analysis <b>of</b> <b>programming</b> paradigms as specified in the evolution <b>of</b> <b>programming</b> languages allowed to determinate the progressing and inheritance paradigms <b>of</b> <b>programming</b> languages. The major contradictions had been arisen in the modern programming languages is established [2]. With the using of TRIZ tools it is derived solutions of contradictions and defined set of the properties, which will be included to the new programming paradigm. The Imperative Paradigm, the Object-Oriented Paradigm, the Functional Paradigm, and the Logic Programming Paradigm are {{considered in the}} report. It is determined the principal contradictions which became the “moving force” of each new paradigm, solution of this contradictions {{on the base of}} TRIZ tools [3]. The evolution <b>of</b> <b>programming</b> languages by the criterion “from contradiction to contradiction” is formed. The TRIZ-evolutionary map on the base of TRIZ-tools which is used for transition on development programming paradigm is formed. The present approach usage allows forecast the appearance <b>of</b> new <b>programming</b> paradigms, new programming languages and new methods <b>of</b> <b>programming.</b> It becomes possible to determine the tendency <b>of</b> <b>programming</b> languages development and prediction of the next languages generations...|$|R
5|$|Once General Tire {{sold the}} network in 1957, Mutual's {{ownership}} was largely {{disconnected from the}} stations it served, leading to a more conventional, top-down model <b>of</b> <b>program</b> production and distribution. Not long after the sale, one of the network's new executive teams was charged with accepting money to use Mutual {{as a vehicle for}} foreign propaganda. The network's reputation was severely damaged, but soon rebounded. Mutual changed hands frequently in succeeding years—even leaving aside larger-scale acquisitions and mergers, its final direct corporate parent, Westwood One, which purchased Mutual in 1985, was the seventh in a string of new owners that followed General Tire.|$|E
5|$|The {{amount of}} a family’s monthly benefit payment depends on that family's {{specific}} characteristics and financial circumstances, {{as well as}} the overall amount <b>of</b> <b>program</b> funds available for distribution. The latest statistics show that benefits average $103 each month (2003, see table below right). It is the Puerto Rico government's responsibility to establish the eligibility requirements and benefit levels for participation in the program. The benefits are revised annually every October 1 to consider the nutritional needs of Puerto Rico's impoverished population, analyze the impact of inflation in Puerto Rico, and plan the distribution of available funds accordingly.|$|E
25|$|Rankings use no {{objective}} measures <b>of</b> <b>program</b> quality.|$|E
50|$|As a result, the function-level {{approach}} to <b>programming</b> invites study <b>of</b> the space <b>of</b> <b>programs</b> under program-forming operations, looking to derive useful algebraic properties of these program-forming operations. The function-level approach offers {{the possibility of}} making the set <b>of</b> <b>programs</b> a mathematical space by emphasizing the algebraic properties of the program-forming operations over the space <b>of</b> <b>programs.</b>|$|R
40|$|The λ-calculus is {{considered}} an useful mathematical tool in the study <b>of</b> <b>programming</b> languages. However, if one uses βη-conversion to prove equivalence <b>of</b> <b>programs,</b> then a gross simplification 1 is introduced. We give a calculus based on a categorical semantics for computations, which provides a correct basis for proving equivalence <b>of</b> <b>programs,</b> independent from any specific computational model...|$|R
500|$|AMI-tv {{carries a}} general {{entertainment}} lineup <b>of</b> <b>programming</b> including sitcoms, television dramas, films, talk shows, and documentaries. Although AMI-tv is primarily aimed at adults, formerly {{a limited amount}} <b>of</b> <b>programming</b> broadcast during morning hours was aimed at children, including such programs as Little Bear and Franklin. The majority <b>of</b> <b>programming</b> on AMI-tv are Canadian productions supplied {{in conjunction with other}} major Canadian broadcasters such as the CBC and CTV; a smaller portion <b>of</b> <b>programming</b> is also sourced from foreign broadcasters and studios, but in any case, no more than 33% <b>of</b> its <b>programming</b> can be supplied by a single broadcaster, and at least 50% <b>of</b> its <b>programming</b> must contain audio descriptions produced by companies other than AMI. The network also airs four hours a week <b>of</b> <b>programming</b> in French. Like the English programming, the French programming is closed captioned and contains audio descriptions in French.|$|R
25|$|An {{alternative}} to Greek-letter organizations are the program houses organized by themes. As with Greek houses, the residents <b>of</b> <b>program</b> houses select their new members, usually {{at the start}} of the spring semester. Examples <b>of</b> <b>program</b> houses are St. Anthony Hall (located in King House), Buxton International House, the Machado French/Hispanic/Latinx House, Technology House, Harambee (African culture) House, Social Action House and Interfaith House.|$|E
25|$|Brendan Suhr (born 1951), Director <b>of</b> <b>Program</b> Development for the UCF Knights men's {{basketball}} team and former NBA scout and assistant coach.|$|E
25|$|Dijkstra, Edsger W. (1968). A Constructive Approach to the Problem <b>of</b> <b>Program</b> Correctness. BIT Numerical Mathematics 8(1968): pp.174–186.|$|E
40|$|In {{this paper}} we {{describe}} {{a method for}} verifying secure information flow <b>of</b> <b>programs,</b> where apart from direct and indirect flows a secret information can be leaked through covert timing channels. That is, no two computations <b>of</b> a <b>program</b> that differ only on high-security inputs can be distinguished by low-security outputs and timing differences. We attack this problem by using slot-game semantics for a quantitative analysis <b>of</b> <b>programs.</b> We show how slot-games model {{can be used for}} performing a precise security analysis <b>of</b> <b>programs,</b> that takes into account both extensional and intensional properties <b>of</b> <b>programs.</b> The practicality <b>of</b> this approach for automated verification is also shown. ...|$|R
40|$|Activities of a {{programmer}} {{will be more}} effective and the software will be more understandable when within the process <b>of</b> software development, <b>programming</b> styles (standards) are used, providing clarity of software texts. Purpose: In this research, we present the tool for the realization of new ontology-based methodology automated reasoning techniques for utilizing programming styles. In particular, we focus on representing programming styles {{in the form of}} formal ontologies, and study how description logic reasoner can assist programmers in utilizing programming standards. Our research hypothesis is as follows: ontological representation <b>of</b> <b>programming</b> styles can provide additional benefits over existing approaches in utilizing programmer <b>of</b> <b>programming</b> standards. Our research goal is to develop a tool to support the ontology-based utilizing programming styles. Methods: ontological representation <b>of</b> <b>programming</b> styles; object-oriented programming; ontology-driven utilizing <b>of</b> <b>programming</b> styles. Results: the architecture was obtained and the tool was developed in the Java language, which provide tool support <b>of</b> ontology-driven <b>programming</b> styles application method. On the example of naming <b>of</b> the Java <b>programming</b> language standard, features of implementation and application of the tool are provided. Discussion: application <b>of</b> <b>programming</b> styles in coding of program; lack of automated tools for the processes <b>of</b> <b>programming</b> standards application; tool based on new method of ontology-driven application <b>of</b> <b>programming</b> styles; an example of the implementation of tool architecture for naming rules of the Java language standard. </p...|$|R
5000|$|Afterwards, {{he served}} as the Eastern program manager and vice {{president}} in charge <b>of</b> <b>programs</b> for NBC and later {{vice president in charge}} <b>of</b> <b>programs</b> for Mutual Broadcasting Corporation.|$|R
25|$|U8TV co-creator and {{executive}} producer Zev Shalev is the creator and senior executive producer of Entertainment Tonight Canada, and was director <b>of</b> <b>program</b> strategy for E! Canada.|$|E
25|$|In 2010, the BVC {{started the}} Aboriginal Youth Cycling program under the {{direction}} <b>of</b> <b>program</b> coordinator Kelyn Akuna. This program, {{the first of its}} kind, is a way for aboriginal youth to learn about track cycling.|$|E
25|$|Shortly {{before his}} death in 2002, Dijkstra {{received}} the ACM PODC Influential-Paper Award in distributed computing for his work on self-stabilization <b>of</b> <b>program</b> computation. This annual award was renamed the Dijkstra Prize (Edsger W. Dijkstra Prize in Distributed Computing) the following year, in his honor.|$|E
40|$|It {{is argued}} that the {{teaching}} <b>of</b> <b>programming</b> {{is central to the}} education of skilled computer professionals, that the teaching <b>of</b> <b>programming</b> languages is central to the teaching <b>of</b> <b>programming.</b> that these topics must include the speciﬁcation, structuring, and veriﬁcation of software, and that they should be taught with the same regard to rigor and precision as in traditional mathematics...|$|R
40|$|In article the {{international}} experience in area {{of development and}} implementation <b>of</b> <b>programs</b> <b>of</b> informatization {{in the field of}} financial literacy of children and youth is analyzed. Substantial and technological features <b>of</b> <b>programs</b> <b>of</b> increase of financial literacy of both traditional, and informal formation of the different countries of the world are considered...|$|R
50|$|Programmed {{learning}} ideas {{influenced the}} Children's Television Workshop, which did the R&D for Sesame Street. The use of developmental testing was absolutely characteristic <b>of</b> <b>programmed</b> learning. The division <b>of</b> the individual <b>programs</b> into small chunks {{is also a}} feature <b>of</b> <b>programmed</b> learning.|$|R
25|$|After {{the test}} case is {{sufficiently}} simplified, a programmer {{can use a}} debugger tool to examine program states (values of variables, plus the call stack) and track down {{the origin of the}} problem(s). Alternatively, tracing can be used. In simple cases, tracing is just a few print statements, which output the values of variables at certain points <b>of</b> <b>program</b> execution.|$|E
25|$|Another {{limitation}} is that flash memory has {{a finite number}} <b>of</b> <b>program</b> erase cycles (typically written as P/Ecycles). Most commercially available flash products are guaranteed to withstand around 100,000 P/Ecycles before the wear begins to deteriorate {{the integrity of the}} storage. Micron Technology and Sun Microsystems announced an SLCNAND flash memory chip rated for 1,000,000P/Ecycles on 17 December 2008.|$|E
25|$|Static type {{checking}} can {{be considered}} a limited form <b>of</b> <b>program</b> verification (see type safety), and in a type-safe language, {{can be considered}} also an optimization. If a compiler can prove that a program is well-typed, then it does not need to emit dynamic safety checks, allowing the resulting compiled binary to run faster and to be smaller.|$|E
25|$|In 2017, it was {{announced}} that Stephen Hill, President <b>of</b> <b>Programming</b> and Zola Mashariki, EVP Head <b>of</b> Original <b>Programming</b> stepped down. In the wake of this news, Connie Orlando, SVP Specials, Music Programming, and News, served as the interim Head <b>of</b> <b>Programming,</b> according to chairman and CEO Debra Lee.|$|R
40|$|The five {{chapters}} of this dissertation cover {{various aspects of}} the evaluation <b>of</b> training <b>programs</b> for the unemployed like effect heterogeneity, comparison <b>of</b> different <b>program</b> types, data quality, dynamic selection into <b>programs</b> and out <b>of</b> <b>programs,</b> occurrence and employment perspectives of dropouts, and the effect <b>of</b> different <b>program</b> lengths...|$|R
50|$|In 2017, it was {{announced}} that Stephen Hill, President <b>of</b> <b>Programming</b> and Zola Mashariki, EVP Head <b>of</b> Original <b>Programming</b> stepped down. In the wake of this news, Connie Orlando, SVP Specials, Music Programming, and News, served as the interim Head <b>of</b> <b>Programming,</b> according to chairman and CEO Debra Lee.|$|R
