40|95|Public
5000|$|An <b>output</b> <b>timing</b> {{distribution}} {{component that}} utilizes the timing {{signals from the}} timing-generation component to create multiple DS1 and CC output signals.|$|E
5000|$|A TSG is clock {{equipment}} that accepts input timing reference signals and generates <b>output</b> <b>timing</b> reference signals. The input reference signals {{can be either}} DS1 or composite-clock (CC) signals, and the output signals can also be DS1 or CC signals (or both). A TSG {{is made up of}} the six components listed below: ...|$|E
50|$|It is {{important}} to note that the current picture being decoded is not included in the computation of DPB fullness (unless the encoder has indicated for it to be stored for use as a reference for decoding other pictures or for delayed <b>output</b> <b>timing).</b> Thus, a decoder needs to actually have sufficient memory to handle (at least) one frame more than the maximum capacity of the DPB as calculated above.|$|E
40|$|This paper {{describes}} steganographic timing {{channels that}} use cryptographic primitives {{to hide the}} presence of covert channels in the timing of network traffic. We have identified two key properties for steganographic timing channels: (1) {{the parameters of the}} scheme should be cryptographically keyed, and (2) the distribution of input timings should be indistinguishable from <b>output</b> <b>timings.</b> These properties are necessary (although we make no claim they are sufficient) for the undetectability of a steganographic timing channel. Without them, the contents of the channel can be read and observed by unauthorized persons, and the presence of the channel is trivially exposed by noticing large changes in timing distributions – a previously proposed methodology for covert channel detection. Our steganographic timing scheme meets the secrecy requirement by employing cryptographic keys, and we achieve a restricted form of input/output distribution parity. Under certain distributions, our schemes conforms to a uniformness property; input timings that are uniformly distributed modulo a timing window are indistinguishable from <b>output</b> <b>timings,</b> measured under the same modulo. We also demonstrate that our scheme is practical under real network conditions, and finally present an empirical study of its covertness using the firstorder entropy metric, as suggested by Gianvecchi...|$|R
40|$|We {{report on}} the position-dependent {{variation}} in <b>output</b> pulse <b>timing</b> across a superconducting single-photon detector. Our device consists of a single niobium nitride nanowire meander (100 nm width, 4 nm film thickness, 2 mm length). We use a confocal microscope configuration (full width at half maximum-spot size 1. 3  μm at 1550 nm wavelength) and a femtosecond laser to study local variations in detection efficiency and <b>output</b> pulse <b>timing.</b> Pulse delays of up to 50 ps across the device correlate to local detection efficiency and resistance variations. This study indicates an underlying mechanism for timing jitter in superconducting nanowire devices...|$|R
30|$|For a {{description}} of the FPM’s working principals, let us consider the general case of multiple detected and hence active driving errors. The logics of the FPM can best be understood by starting with the functionalities of the <b>output</b> and <b>timing</b> module.|$|R
30|$|The {{proposed}} method {{involves the}} use of matched cameras or image sensors, which are driven by a common clock as well as operate under identical operating conditions thereby guaranteeing an identical internal state and synchronised <b>output</b> <b>timing</b> behaviour. Compared with other synchronisation techniques, this significantly reduces latency and again keeps the costs to a minimum while lending itself for a complete solution.|$|E
40|$|This paper {{investigates the}} effects of group (or inter-destination) {{synchronization}} control over haptic media in a networked game where two players move objects competitively by manipulating haptic interface devices. The group synchronization control adjusts the <b>output</b> <b>timing</b> of haptic media among multiple players. By experiment, we demonstrate {{the effectiveness of the}} control. We also discuss the fairness between the two players quantitatively...|$|E
30|$|This paper {{addresses}} the synchronisation problem which arises in high speed multivision camera applications. In this paper, a novel precision synchronisation method is presented which exploits {{the similarity of}} behaviour and performance of matched cameras (or image sensors) by subjecting them to a common clock. By managing their operating conditions, it can guarantee an identical internal state and synchronised <b>output</b> <b>timing</b> behaviour, which will in turn permit the combined transmission over great lengths over a single high performance vision interface.|$|E
40|$|We use {{unsupervised}} probabilistic {{machine learning}} ideas {{to try to}} explain the kinds of learning observed in real neurons, the goal being to connect abstract principles of self-organisation to known biophysical processes. For example, we would like to explain Spike TimingDependent Plasticity (see [5, 6] and Figure 3 A), in terms of information theory. Starting out, we explore the optimisation of a network sensitivity measure related to maximising the mutual information between input spike <b>timings</b> and <b>output</b> spike <b>timings.</b> Our derivations are analogous to those in ICA, except that the sensitivity of <b>output</b> <b>timings</b> to input timings is maximised, rather than the sensitivity of output `firing rates' to inputs. ICA and related approaches have been successful in explaining the learning of many properties of early visual receptive fields in rate coding models, and we are hoping for similar gains in understanding of spike coding in networks, and how this is supported, in principled probabilistic ways, by cellular biophysical processes. For now, in our initial simulations, we show that our derived rule can learn synaptic weights which can unmix, or demultiplex, mixed spike trains. That is, it can recover independent point processes embedded in distributed correlated input spike trains, using an adaptive single-layer feedforward spiking network...|$|R
30|$|Even if {{multiple}} driving {{errors are}} detected, the <b>output</b> and <b>timing</b> module issues a single message {{exclusively to the}} output unit. On the transmission of a newly detected driving error, a synthesized voice message informs the driver and an advisory message is displayed for a minimum period of time.|$|R
40|$|This paper {{presents}} {{measurement results}} of on-chip noise on power and ground rings for I/O (input/output) cells {{in a simple}} test structure fabricated in 90 nm process. We also show measured <b>timings</b> of an <b>output</b> signal from chip to PCB board, and examine {{the relation between the}} magnitude of I/O power supply noise and the <b>output</b> transition <b>timings...</b>|$|R
40|$|Abstract Recently various {{real-time}} {{communication protocols}} have been proposed. In this paper, first, we propose a timed I/O automaton model {{so that we}} can simply specify such real-time protocols. The proposed model can handle not only time but also data values. Then, we propose a conformance testing method for the model. In order to trace a test sequence (I/O sequence) on the timed I/O automaton model, we need to execute each I/O action in the test sequence at an adequate execution timing which satisfies all timing constraints in the test sequence. However, since outputs are given from IUTs and uncontrollable, we cannot designate their <b>output</b> <b>timing</b> in advance. Also their <b>output</b> <b>timing</b> affects the executable timing for the succeeding I/O actions in the test sequence. Therefore, in general, the executable timing of each input action in a test sequence can be specified by a function of the execution time of the preceding I/O actions. In this paper, we propose an algorithm to decide efficiently whether a given test sequence is executable. We also give an algorithm to derive such a function from an executable test sequence automatically using a technique for solving linear programming problems, and propose a conformance testing method using those algorithms...|$|E
40|$|In this paper, the {{low price}} signal {{generator}} with capability of frequency high-resolution and variable sync pulse has implemented. It fulfils well {{the requirements for}} SS-OCT of the frequency resolution less than 1 Hz, frequency stability of ≤± 0. 5 Hz / 10 min and variable sync pulse <b>output</b> <b>timing.</b> Through its performance test applied to wavelength swept laser, 120 nm sweeping range and 10 mW average optical power were obtained. This shows that the realized sine-wave generator can replace the commercial high cost and high performance signal generators employed by current SS-OCT systems...|$|E
40|$|International audienceThis paper {{introduces}} a technique for balancing input and <b>output</b> <b>timing</b> of factorial ring owing to achieving higher accuracy {{as well as}} reduction of counter delay and reference spurs. Besides, this design offers an 8 -bit programmable counter for a more flexible frequency synthesizer. The initial objective was for generating a 2. 5 GHz signal. However, thanks to the wide tuning range of the Voltage Controlled Delay Elements (VCDEs), the system has output performance spreads from 1 to 3. 5 GHz. On full system simulation, the power consumption is approximately 150 uW with power supply of 1 V. The system was implemented on 28 nm FD-SOI with verifications by full-system simulations at transistor level...|$|E
40|$|The {{inertial}} navigation systems (INS) /wireless sensor network (WSN) integration system for mobile robot is proposed for navigation information indoors accurately and continuously. The Kalman filter (KF) is widely used for real-time applications {{with the aim of}} gaining optimal data fusion. In order to improve the accuracy of the navigation information, this work proposed an adaptive extended Kalman smoothing (AEKS) which utilizes inertial measuring units (IMUs) and ultrasonic positioning system. In this mode, the adaptive extended Kalman filter (AEKF) is used to improve the accuracy of forward Kalman filtering (FKF) and backward Kalman filtering (BKF), and then the AEKS and the average filter are used between two <b>output</b> <b>timings</b> for the online smoothing. Several real indoor tests are done to assess the performance of the proposed method. The results show that the proposed method can reduce the error compared with the INS-only, least squares (LS) solution, and AEKF...|$|R
40|$|A {{real-time}} music {{system is}} responsible for deciding what happens when, when each task runs and each message takes effect. This question becomes acute when there are several classes of tasks running and intercommunicating: user interface, control processing, and audio, for example. We briefly examine and classify past approaches and their applicability to distributed systems, then propose and discuss an alternative. The shared access to a sample clock that it requires is not trivial to achieve in a distributed system, so we describe and assess {{a way to do}} so. 1 Existing approaches The goal of a real-time music system is to produce certain time-structured data. Ideally, this <b>output's</b> <b>timing</b> would be exactly as specified by the musician. In practice, the timing is imprecise: the system's tasks can't all run when they ought to, nor can they communicate with perfect timing. The music system's job is to minimize the consequent harm to its output, through its control over how tasks ar [...] ...|$|R
50|$|A DLL {{can be used}} {{to change}} the phase of a clock signal (a signal with a {{periodic}} waveform), usually to enhance the clock rise-to-data <b>output</b> valid <b>timing</b> characteristics of integrated circuits (such as DRAM devices). DLLs can also be used for clock recovery (CDR). From the outside, a DLL {{can be seen as a}} negative-delay gate placed in the clock path of a digital circuit.|$|R
40|$|Timing jitter {{measurements}} {{have been}} conducted on the ORION photoinjector laser oscillator pulse train output {{with respect to a}} ultra low noise crystal rf oscillator running at 79 1 / 3 MHz, the 36 th harmonic of S-Band. The ORION laser oscillator subsystem consists of a Spectra-Physics Tsunami ultra-fast tunable (750 – 850 nm) laser pumped by a Diode pumped Spectra-Physics Millennia VsP 5 W. Overall laser oscillator subsystem performance will be presented. These measurements consist of the laser oscillator generated noise and transfer function from the RF reference input of the laser to an external photodiode RF <b>output.</b> <b>Timing</b> jitter measurements of less than 500 fsec have been attained with the laser oscillator tuned to 800 nm. ...|$|E
40|$|The paper {{describes}} {{a new technique}} for extracting clock level finite state machines (FSMs) from transistor netlists using symbolic simulation. The transistor netlist is preprocessed to produce a gate level representation of the netlist. Given specifications of the circuit clocking and input and <b>output</b> <b>timing,</b> simulation patterns are derived for a symbolic simulator. The result of the symbolic simulation and extraction process is the next state and output function of the equivalent FSM, represented as Ordered Binary Decision Diagrams. Compared to previous techniques, our extraction process yields {{an order of magnitude}} improvement in both space and time, is fully automated and can handle static storage structures and time multiplexed inputs and output...|$|E
40|$|Abstract — In this paper, a {{thorough}} {{analysis of the}} jitter behavior of a Delay Locked Loop (DLL) based clock multi-plying architecture is presented. The noise sources that {{are included in the}} analysis are the noise of the delay elements, the reference jitter and the noise of the Phase Frequency Detector and Charge Pump combination. It is shown that the effect of all noise sources on the <b>output</b> <b>timing</b> jitter can be minimized by minimizing the loop gain of the DLL. This means that the loop is merely used to tune the delay of the Delay Line to a nominal value of exactly one reference input period; the loop is ineffective in filtering jitter. The analysis results are verified using high-level simulations, with good agreement. I...|$|E
50|$|The new three stage i-VTEC {{valvetrain}} has low-rpm, high-rpm and cylinder idle mode. High <b>output</b> valve <b>timing</b> {{help the}} engine to increase its output by 9 percent. During deceleration, the engine is kept idle. There are no combustion in all four cylinders and the cylinders are sealed shut, reducing pumping losses by engine. As a result, recovery of energy wasted during braking is improved by 10 percent.|$|R
40|$|This paper {{describes}} {{the investigation of}} the possibility to build a compact anti-Compton spectrometer consisting of a Ge detector and a cooled BGO suppressor. Monte Carlo calculations were carried out to obtain information about the performance of two different detector configurations. Light <b>output</b> and <b>timing</b> properties of a BGO-photodiode detector have been measured as a function of temperature and will be compared with computer simulations of light output...|$|R
40|$|Spike Timing Dependent Plasticity (STDP) is a Hebbian like {{synaptic}} learning rule. The {{basis of}} STDP has strong experimental evidences and {{it depends on}} precise input and <b>output</b> spike <b>timings.</b> In this paper we show that under biologically plausible spiking regime, slight variability in the spike timing leads to drastically different evolution of synaptic weights when its dynamics are governed by the additive STDP rule. Comment: On Computational Neuroscience/ 11 page...|$|R
40|$|Abstract In {{hierarchical}} reliable multicast schemes, {{the number}} of repair proxies and their locations influence interdestination synchronization. The inter-destination synchronization in multicast environments means the adjustment of the <b>output</b> <b>timing</b> among destinations over the Internet. Improving the inter-destination synchronization is beneficial to collaborative applications such as multi-conference system and multi-playing online game. In this paper, we propose a scheme to find the optimal locations of repair proxies that can improve inter-destination synchronization maximally in heterogeneous network environments. The simulation results show that if repair proxies are placed by the proposed scheme, delivery delay fairness of inter-destination can be improved by 0. 05 maximally. In addition, we perform t-Test on the simulation results in order to verify that our optimal placement improves synchronization...|$|E
40|$|In this paper, a {{thorough}} {{analysis of the}} jitter behavior of a Delay Locked Loop (DLL) based clock multiplying architecture is presented. The noise sources that {{are included in the}} analysis are the noise of the delay elements, the reference jitter and the noise of the Phase Frequency Detector and Charge Pump combination. It is shown that the effect of all noise sources on the <b>output</b> <b>timing</b> jitter can be minimized by minimizing the loop gain of the DLL. This means that the loop is merely used to tune the delay of the Delay Line to a nominal value of exactly one reference input period; the loop is ineffective in filtering jitter. The analysis results are verified using high-level simulations, with good agreement...|$|E
40|$|This paper {{proposes a}} group {{synchronization}} control scheme with prediction in work using haptic media. The scheme adjusts the <b>output</b> <b>timing</b> among multiple terminals {{and keeps the}} interactivity high. It outputs position information by predicting the future position later than the position included in the last-received information by a fixed amount of time. It also advances the output time of position information at each local terminal by {{the same amount of}} time. We deal with two different types of work using haptic media so as to demonstrate the effectiveness of the scheme. We assess the output quality of haptic media for the two types of work subjectively and objectively by Quality of Experience (QoE) assessment. We further clarify the relationship between subjective and objective assessment results...|$|E
40|$|Beam energy spread, {{and related}} beam motion, {{increase}} {{the difficulty in}} tuning for multipulse radiographic experiments at the dual-axis radiographic hydrodynamic test facility’s axis-II linear induction accelerator (LIA). In this article, we describe an optimization method to reduce the energy spread by adjusting {{the timing of the}} cell voltages (both unloaded and loaded), either advancing or retarding, such that the injector voltage and summed cell voltages in the LIA result in a flatter energy profile. We developed a nonlinear optimization routine which accepts as inputs the 74 cell-voltage, injector voltage, and beam current waveforms. It optimizes cell timing per user-selected groups of cells and <b>outputs</b> <b>timing</b> adjustments, one for each of the selected groups. To verify the theory, we acquired and present data for both unloaded and loaded cell-timing optimizations. For the unloaded cells, the preoptimization baseline energy spread was reduced by 34 % and 31 % for two shots as compared to baseline. For the loaded-cell case, the measured energy spread was reduced by 49 % compared to baseline...|$|R
30|$|Additionally, the <b>output</b> and <b>timing</b> module will {{initiate}} the repeated {{transmission of the}} synthesized voice message if a single strategic driving error is detected continually. This is meant to regain the driver’s attention and to draw {{it back to the}} display unit. In order to retain a high level of user acceptance, intervals between repeated transmissions are expanded. In the context of learning this strategy is called expanded retrieval [33] and is thus also implemented to support the driver’s process of learning.|$|R
40|$|Electronic circuit {{processes}} {{arterial blood}} pressure waveform to produce discrete signals that coincide with {{beginning and end}} of left ventricular ejection. <b>Output</b> signals provide <b>timing</b> signals for computers that monitor cardiovascular systems. Circuit operates reliably for heart rates between 50 and 200 beats per minute...|$|R
40|$|This paper {{describes}} {{the work in}} the FP 7 STEER project on augmenting a live broadcast with live user generated content. This user generated content consists of both video content, captured with mobile devices, and social network content, such as Facebook or Twitter messages. To enable multi-source synchronization, all content sources need to time stamp the content using synchronized clocks. For synchronized play out we use a synchronization server to control the <b>output</b> <b>timing</b> of the various content. Using social analytics, we determine the most relevant social network messages to present synchronously with the broadcast. A main part of our future research in the project will focus on determining the optimal timing of such social content with a live broadcast...|$|E
40|$|This paper {{presents}} an application-level QoS comparison of three inter-destination synchronization schemes: the master-slave destination scheme, the synchronization maestro scheme, and the distributed control scheme. The inter-destination synchronization adjusts the <b>output</b> <b>timing</b> among destinations in a multicast group for live {{audio and video}} streaming over the Internet/intranets. We compare the application-level QoS of these schemes by simulation with the Tiers model, which is a sophisticated network topology model and reflects hierarchical structure of the Internet. The comparison clarifies their features and finds the best scheme in the environment. The simulation result shows that the distributed control scheme provides the highest quality of inter-destination synchronization among the three schemes in heavily loaded networks, while in lightly loaded networks the other schemes can have almost the same quality {{as that of the}} distributed control scheme...|$|E
40|$|A common {{model for}} {{multimedia}} systems is the stream, an abstraction representing {{the flow of}} continuous time-dependent data such as audio samples and video frames. The primary feature of streams {{is the ability to}} compose processes by making stream connections between them. An alternative time-advance model is related to discrete-event simulations. Data is computed in presentation order, but in advance of the actual presentation time. Timestamped, buffered data is subsequently output with low latency. The primary feature of time-advance systems is accurate <b>output</b> <b>timing.</b> Stream-based and time-advance systems are compared in terms of the programming model, flow control, buffering, support for interaction, synchronization, modularity issues, and real-time requirements. This research was performed by the Carnegie Mellon Information Technology Center and supported by the IBM Corporation. Keywords: Multimedia, Streams, Time Advance, Synchronization, Audio, Video, Real Time, Operating Syste [...] ...|$|E
40|$|The non-pressure {{response}} of a PCB Model 113 A transducer {{to a far}} infrared radiation impulse from a carbon dioxide laser was investigated. Incident radiation was applied both to the bare transducer diaphragm and to coated diaphragms. Coatings included two common ablative materials and a reflective gold coating. High-flux radiation impulses induced an immediate brief negative output followed by a longer-duration positive <b>output.</b> Both <b>timing</b> and amplitude of the responses will be discussed, {{and the effects of}} coatings will be compared. Bursts of blackbody radiation from a 1500 K source produced qualitatively similar responses...|$|R
40|$|Attention-Deficit/Hyperactivity Disorder (ADHD) {{shares a}} genetic basis with motor {{coordination}} problems and probably motor timing problems. In line with this, comparable problems in motor timing should {{be observed in}} first degree relatives and might, therefore, form a suitable endophenotypic candidate. This hypothesis was investigated in 238 ADHD-families (545 children) and 147 control-families (271 children). A motor timing task was administered, in which children had to produce a 1, 000  ms interval. In addition to this task, two basic motor tasks were administered to examine speed and variability of motor <b>output,</b> when no <b>timing</b> component was required. Results indicated that variability in motor timing is a useful endophenotypic candidate: It was clearly associated with ADHD, it was also present in non-affected siblings, and it correlated within families. Accuracy (under- versus over-production) in motor timing appeared less useful: Even though accuracy was associated with ADHD (probands and affected siblings {{had a tendency to}} under-produce the 1, 000  ms interval compared to controls), non-affected siblings did not differ from controls and sibling correlations were only marginally significant. Slow and variable motor <b>output</b> without <b>timing</b> component also appears present in ADHD, but not in non-affected siblings, suggesting these deficits not to be related to a familial vulnerability for ADHD. Deficits in motor timing could not be explained by deficits already present in basic motor <b>output</b> without a <b>timing</b> component. This suggests abnormalities in motor timing were predominantly related to deficient motor timing processes and not to general deficient motor functioning. The finding that deficits in motor timing run in ADHD-families suggests this to be a fruitful domain for further exploration in relation to the genetic underpinnings of ADHD...|$|R
30|$|The {{filter module}} ensures {{only a single}} driving error is {{forwarded}} to the <b>output</b> and <b>timing</b> module. The filter blocks driving errors regardless of the priority assigned by the prioritization module. In general, blocked errors are saved in the data memory. The data memory thus enables the FPM to issue advisory messages even though the error was committed {{in the past and}} is not active anymore. However, a delayed submission makes only sense within a restricted time period after the detection. The filtering therefore also eliminates errors which are considered inactive for too long without writing these to the data memory.|$|R
