114|123|Public
5|$|SAS {{data can}} be {{published}} in HTML, PDF, Excel and other formats using the <b>Output</b> <b>Delivery</b> System, which was first introduced in 2007. The SAS Enterprise Guide is SAS's point-and-click interface. It generates code to manipulate data or perform analysis automatically and does not require SAS programming experience to use.|$|E
500|$|SAS version 6 {{was used}} {{throughout}} the 1990s and was available on {{a wider range of}} operating systems, including Macintosh, OS/2, Silicon Graphics, and Primos. SAS introduced new features through dot-releases. From 6.06 to 6.09, a user interface based on the windows paradigm was introduced and support for SQL [...] was added. Version 7 introduced the <b>Output</b> <b>Delivery</b> System (ODS) and an improved text editor. ODS was improved upon in successive releases. For example, more output options were added in version 8. The number of operating systems that were supported was reduced to UNIX, Windows and z/OS, and Linux was added. SAS version 8 and SAS Enterprise Miner were released in 1999.|$|E
50|$|SAS {{data can}} be {{published}} in HTML, PDF, Excel and other formats using the <b>Output</b> <b>Delivery</b> System, which was first introduced in 2007. The SAS Enterprise Guide is SAS' point-and-click interface. It generates code to manipulate data or perform analysis automatically and does not require SAS programming experience to use.|$|E
40|$|A {{production}} planning and control system {{was designed for}} a rolling mill consisting of moduls for <b>output,</b> <b>deliveries</b> and capacity planning, ivnentory management, shop floor control, production data capturing and administration of basic data. In this contribution the integrated planning of <b>output,</b> <b>deliveries</b> and capacity will be described which {{is the core of}} the complete system...|$|R
50|$|Monitoring is a {{continuous}} assessment that aims at providing all stakeholders with early {{detailed information on}} the progress or delay of the ongoing assessed activities. It is an oversight of the activity's implementation stage. Its purpose is {{to determine if the}} <b>outputs,</b> <b>deliveries</b> and schedules planned have been reached so that action can be taken to correct the deficiencies as quickly as possible.|$|R
25|$|There {{are five}} {{important}} {{characteristics of a}} project. (i) It should always have a specific start and end dates. (ii) They are performed and completed {{by a group of}} people. (iii) The <b>output</b> is <b>delivery</b> on unique product or service. (iv) They are temporary in nature. (v) It is progressively elaborated. example: Designing a new car, writing a book.|$|R
50|$|The PostProcessor was a Java API, so {{additional}} programming {{was needed}} to implement it. Also, {{there was a need}} for better pluggability and a need to cover the entire document process. And since Scriptura wanted to offer the opportunity to be used by non-IT users, a graphical interface was needed. In 2008, the Scriptura DocumentFlow was released, a graphical interface that enabled users to design the whole document process, from data retrieval to <b>output</b> <b>delivery.</b>|$|E
5000|$|Hence, {{traditional}} companies {{involved in}} the print-oriented activities of prepress, repro and creative have adapted in order to utilize the various <b>output</b> <b>delivery</b> channels required by clients. These companies are increasingly servicing all of these channels with existing and new client work; {{a whole new world}} of file creation, preparation, management and transition has been developed. The term [...] "premedia" [...] has arisen in an attempt to encompass the entirety of this new world of multichannel media delivery.|$|E
5000|$|SAS version 6 {{was used}} {{throughout}} the 1990s and was available on {{a wider range of}} operating systems, including Macintosh, OS/2, Silicon Graphics, and Primos. SAS introduced new features through dot-releases. From 6.06 to 6.09, a user interface based on the windows paradigm was introduced and support for SQL [...] was added. Version 7 introduced the <b>Output</b> <b>Delivery</b> System (ODS) and an improved text editor. ODS was improved upon in successive releases. For example, more output options were added in version 8. The number of operating systems that were supported was reduced to UNIX, Windows and z/OS, and Linux was added. SAS version 8 and SAS Enterprise Miner were released in 1999.|$|E
5000|$|In United States {{agricultural}} policy, under {{a marketing}} contract, prices (or pricing mechanisms) are established for a commodity before harvest or before the commodity {{is ready for}} marketing. Most management decisions remain with the grower, who retains ownership of both production inputs and <b>output</b> until <b>delivery.</b> The farmer assumes the risks of production but shares price risks with the contractor.|$|R
40|$|This report (RE- 349) {{presents}} {{an evaluation of}} the Bank's country program for Belize in the period 2004 - 2008. It is based on a review of documentary evidence provided by the Bank and other sources, as well as information gleaned from interviews with Bank staff in Headquarters and the Country Office, Government officials, local entrepreneurs and other persons during the missions of OVE to the country. The scope of this report is the IDB programming and operational cycle 2004 - 2008. The evaluation is organized in the following chapters: Chapter 1 offers an overview {{of the structure of the}} Belizean economy and of the developments taking place during the period 2004 - 2008. Chapter 2 describes and evaluates the programming intent for the country based on two evaluative criteria: relevance and coherence. Chapter 3 reviews the program <b>output's</b> <b>delivery</b> efficiency and the qualitative dimension of the Bank's portfolio. Chapter 4 examines the effectiveness of the Bank's operations in Belize...|$|R
40|$|In the {{peri-operative}} period physiological changes {{take place}} in cardiac function {{and the amount of}} oxygen delivered to the tissues. Reductions in cardiac <b>output,</b> oxygen <b>delivery</b> and tissue perfusion are more pronounced in the non-survivors of surgery, usually occurring in elderly patients with comorbidity and reduced physiological reserve. Furthermore patients who do not survive surgery ultimately die from multiple organ dysfunction syndrome (MODS), triggered in part by an overwhelming inflammatory reaction to various stimuli including reduced tissue perfusion. Because normalization of physiology, as indicated by achieving goals obtained by survivors, is established treatment in anaesthesia and critical care, and because tissue hypoperfusion and hypoxia are underlying factors in the development of MODS, it was hypothesized that all higher risk surgical patients should be treated preemptively to achieve physiological goals defined by survivors. Patients are monitored with a pulmonary artery catheter or oesophageal Doppler, treatment being instituted to predefined goals for cardiac <b>output,</b> oxygen <b>delivery</b> or stroke volume using fluids, vasodilators and inotropes. Other goals for treatment have also been suggested. 21 randomized controlled clinical studies have been undertaken to test this hypothesis; 4258 patients have been studied. The combined odds ratio for reduction in mortality in the treatment groups is 0. 67 (95 % confidence interval 0. 54 - 0. 83). Randomised, controlled studies have been undertaken following the same approach in non-surgical patients, these failed to show any improvement. Despite identifying a number of problems with the published studies such as details of patient enrolment, adherence to trial protocols, and the effect on statistical analysis of the crossover affect (whereby some patients in the control limbs of the studies can be expected to achieve the goals of treatment spontaneously), it is concluded that the treatment of higher risk surgical patients to goals for cardiac <b>output,</b> oxygen <b>delivery</b> or stroke volume reduces postoperative mortality...|$|R
40|$|In {{the setting}} of secure multiparty computation, a set of parties wish to compute a joint {{function}} of their private inputs. The computation should preserve security properties such as privacy, correctness, independence of inputs, fairness and guaranteed <b>output</b> <b>delivery.</b> In the case of no honest majority, fairness and guaranteed <b>output</b> <b>delivery</b> cannot always be obtained. Thus, protocols for secure multiparty computation are typically of two disparate types: protocols that assume an honest majority (and achieve all properties including fairness and guaranteed <b>output</b> <b>delivery),</b> and protocols that do not assume an honest majority (and achieve all properties except for fairness and guaranteed <b>output</b> <b>delivery).</b> In addition, in the two-party case, fairness and guaranteed <b>output</b> <b>delivery</b> are equivalent. As a result, the properties of fairness (which means that if corrupted parties receive output then so do the honest parties) and guaranteed <b>output</b> <b>delivery</b> (which means that corrupted parties cannot prevent the honest parties from receiving output in any case) have typically been {{considered to be the}} same. In this paper, we initiate a study of the relation between fairness and guaranteed <b>output</b> <b>delivery</b> in secure multiparty computation. We show that in the multiparty setting these proper-ties are distinct and proceed to study under what conditions fairness implies guaranteed <b>output</b> <b>delivery</b> (the opposite direction always holds). We also show the existence of non-trivial func-tions for which complete fairness is achievable (without an honest majority) but guaranteed <b>output</b> <b>delivery</b> is not, and the existence of non-trivial functions for which complete fairness and guaranteed <b>output</b> <b>delivery</b> are achievable. Our study sheds light on the role of broadcast in fairness and guaranteed <b>output</b> <b>delivery,</b> and shows that these properties should sometimes be considered separately...|$|E
40|$|Are {{you looking}} for ways to improve the way your SAS output appears? The SAS ® <b>Output</b> <b>Delivery</b> System (ODS) can help turn tired-looking output into great looking {{information}} with a purpose. <b>Output</b> <b>delivery</b> has entered a new age with ODS by taking advantage of font characteristics, color, a number of output layouts, and other features. This paper will illustrate coding techniques associated with creating HTML output using ODS...|$|E
40|$|In {{the setting}} of multiparty computation, a set of parties wish to jointly compute a {{function}} of their inputs, while preserving security in the case that some subset of them are corrupted. The typical security properties considered are privacy, correctness, independence of inputs, guaranteed <b>output</b> <b>delivery</b> and fairness. Until now, all works in this area either considered {{the case that the}} corrupted subset of parties constitutes a strict minority, or the case that a half or more of the parties are corrupted. Secure protocols for the case of an honest majority achieve full security and thus <b>output</b> <b>delivery</b> and fairness are guaranteed. However, the security of these protocols is completely compromised if there is no honest majority. In contrast, protocols for the case of no honest majority do not guarantee <b>output</b> <b>delivery,</b> but do provide privacy, correctness and independence of inputs for any number of corrupted parties. Unfortunately, an adversary controlling only a single party can disrupt the computation of these protocols and prevent <b>output</b> <b>delivery.</b> In this paper, we study the possibility of obtaining general protocols for multiparty computation that simultaneously guarantee security (allowing abort) in the case that an arbitrary number of parties are corrupted and full security (including guaranteed <b>output</b> <b>delivery)</b> in the case that only a minority of the parties are corrupted. That is, we wish to obtain {{the best of both worlds}} in a single protocol, depending on the corruption case. We obtain both positive and negative results on this question, depending on the type of the functionality to be computed (standard or reactive) and the type of dishonest majority (semi-honest or malicious) ...|$|E
2500|$|They were {{involved}} {{in the development of the}} design for the Simmons Hardware Company's Sioux City Warehouse. The architects had specified that hundreds of [...] hardened concrete piles were to be driven in to allow the soft ground to take the weight of two million bricks required to construct the building. The [...] "Time and Motion" [...] approach could be applied to the bricklaying and the transportation. The building was also required to support efficient input and <b>output</b> of <b>deliveries</b> via its own railroad switching facilities.|$|R
40|$|High-performance power-converters in {{the form}} of single-tone class-D {{amplifiers}} are required to drive power-ultrasonic transducers in industrial applications. These must produce low-distortion, variable-frequency, and variable-amplitude sinusoidal currents to efficiently drive the piezoelectric cell and horn of transducers, and thereby vibrate materialprocessing stages. A resonant-tracking control strategy is generally used to efficiently couple and regulate <b>output</b> power <b>delivery</b> at a high-Q probe-system resonant mode. This paper reviews a number of power-converter control options suitable for such probe drivers, including quasi-squarewave (QS), naturally sampling pulse width modulation (PWM) and programmed PWM (PPWM). Typical output-waveform quality and the PSPICE models of the power-converter and piezoelectric transducer developed to assess and compare methods are presented...|$|R
50|$|The {{headline}} manufacturing PMI is {{a composite}} of five of the survey indices. These are New orders, <b>Output,</b> Employment, Suppliers' <b>delivery</b> times (inverted) and Stocks of purchases. The ISM attributes each of these variables the same weighting when calculating the overall PMI, whereas Markit uses the following weights: New orders (0.3), Output (0.25), Employment (0.2), Suppliers' Delivery Times (0.15), Stocks of purchases (0.1).|$|R
40|$|This paper {{displays}} an e-mailed {{tape management}} report with “Traffic Lighting ” using the BASE SAS ® <b>Output</b> <b>Delivery</b> System (ODS). The report is created and e-mailed via a z/OS ® batch job using the BASE SAS ® JCL procedure. E-mail reports with ODS traffic lighting {{can be generated}} from your choice of input data. The input data for this example is from the daily SAS/MXG® Performance Database PDB. TAPES, The tape management e-mail report with ODS Traffic Lighting in red, yellow and green colors is generated as an HTML file using the BASE SAS ® <b>Output</b> <b>Delivery</b> System (ODS) and PROC PRINT. Reports can also be generated via other procedures such as PROC REPORT...|$|E
40|$|The {{availability}} of {{vast amounts of}} data is changing how we can make medical discoveries, predict global market trends, save energy, improve our infrastructures, and develop new educational strategies. One obstacle to this revolution is the willingness of different entities to share their data with others. The theory of secure multiparty computation (MPC) allows parties to compute a function on their joint data while learning the minimum necessary information: {{the value of the}} function computed on their joint data (and nothing else). However, the theory of MPC does not address an important aspect: when do the players receive their outputs? In time-sensitive applications, the timing and order of outputs may be a crucial deciding factor in whether parties choose to share their data via the MPC. In this thesis, we incorporate time and order of <b>output</b> <b>delivery</b> into the theory of MPC. We first extend classical MPC to ordered MPC where different players receive their outputs according to an order which in itself is computed on the inputs to the protocol, and to refine the classical notions of guaranteed <b>output</b> <b>delivery</b> and fairness to require instead ordered <b>output</b> <b>delivery</b> and prefix-fairness. We then define timed-delay MPCs where explicit time delays are introduced into the <b>output</b> <b>delivery</b> schedule. We show general completeness theorems for ordered MPCs and timed-delay MPCs. We also introduce a new primitive called time-line puzzles, a natural extension of classical timed-release crypto in which multiple events can be serialized in time. Next, we show how ordered MPC can give rise to MPCs which are provably "worth" joining, in a range of collaborative situations. We formalize a model of collaboration and design a mechanism in which n self-interested parties can decide, based on their inputs, on an ordering of <b>output</b> <b>delivery</b> and a distribution of outputs to be delivered in the mandated order. The mechanism guarantees a higher reward for all participants by joining the ordered MPC, or declares that such a guarantee is impossible to achieve. We characterize the conditions under which this mechanism can be computed efficiently, and give a polynomial-time algorithm for such cases. by Sunoo Park. Thesis: S. M., Massachusetts Institute of Technology, Department of Electrical Engineering and Computer Science, 2015. Cataloged from PDF version of thesis. Includes bibliographical references (pages 65 - 66) ...|$|E
40|$|Multiple {{frequency}} and statistics tables are exported to HTML files using SAS ® ODS (<b>Output</b> <b>Delivery</b> System) and are {{integrated into a}} single portable HTML document. Active links and embedded JavaScript menus facilitate easy access to over 100 tables while a single cascading style sheet ensures a common display format...|$|E
30|$|Strikingly, the {{majority}} of respondents evaluate the effects of their initial resuscitation efforts based on their effects on blood pressure, whereas only 7 % used cardiac output for this purpose. This is in line with previous studies [27, 28] but in contrast to the rational of fluid resuscitation which is to increase blood flow, i.e., cardiac <b>output</b> and oxygen <b>delivery</b> to ultimately improve tissue perfusion and oxygenation.|$|R
40|$|Vasodilators {{are used}} with caution in {{patients}} with {{chronic obstructive pulmonary disease}} (COPD). We have developed a device for percutaneous arteriovenous shunt creation in the iliac region to increase cardiac <b>output</b> and oxygen <b>delivery</b> for patients with COPD. Although this device does not cause significant blood pressure changes in normotensive patients with COPD, we hypothesized that arteriovenous shunt creation might cause vasodilator effects in hypertensive patients because of a reduction in vascular resistance...|$|R
40|$|If nonprotein colloid plasma {{expanders}} {{could be}} demonstrated {{to be safe}} and efficacious in burn resuscitation, a significant cost benefit would result. This study was a randomized cross-over comparison of 500 ml of 5 % albumin and 500 ml of 10 % pentastarch, a new hydroxyethyl starch, in acute burn resuscitation. Pentastarch was an effective plasma expander, resulting in increases of preload, cardiac <b>output,</b> oxygen <b>delivery,</b> and oxygen consumption; the hemodynamic effects of pentastarch infusion were equal or superior to those of albumin. Both albumin and pentastarch infusions resulted in increased bleeding and clotting times; these effects were most likely dilutional. Pentastarch is a promising plasma substitute for burn resuscitation; the effects of a 500 ml infusion are equal or superior to those of albumin. Further study is necessary to assess the safety of larger infusion volumes...|$|R
40|$|This {{paper will}} {{demonstrate}} techniques {{on how to}} effectively generate files that can be read with Microsoft Excel using the <b>Output</b> <b>Delivery</b> System. This paper will further discuss {{a variety of methods}} that will allow customization of the every part of the Excel file from ODS. Some of the tips provided wil...|$|E
40|$|Two {{settings}} are traditionally considered for secure multiparty computation, {{depending on whether}} or not a majority of the parties are assumed to be honest. Existing protocols that assume an honest majority provide “full security ” (and, in particular, guarantee <b>output</b> <b>delivery</b> and fairness) when this assumption holds, but are completely insecure if this assumption is violated. On the other hand, known protocols tolerating an arbitrary number of corruptions do not guarantee fairness or <b>output</b> <b>delivery</b> even if only a single party is dishonest. It is natural to wonder whether it is possible to achieve the “best of both worlds”: namely, a single protocol that simultaneously achieves the best possible security in both the above settings. Here, we rule out this possibility (at least for general functionalities) and show some positive results regarding what can be achieved...|$|E
3000|$|... [...]. These {{measure the}} degrees of sectoral {{skewness}} in input procurement and <b>output</b> <b>delivery,</b> respectively; the lower these coefficients {{are for a}} specific sector, the more evenly that sector’s input purchases and output sales are dispersed among the different sectors of the economy. We can normalize these coefficients by dividing by the economy-wide averages and calculating [...]...|$|E
40|$|Health care in {{a system}} which is {{influenced}} by other interacting subsystems. In order to maximize the <b>output</b> in the <b>delivery</b> of health care {{it is essential to}} understand these interrelations. Systems analysis is a tool in this direction being used in health care management recently. Some of the concepts and recent applications of the methodology in health care management are reviewed in the article to help administrators for wider use of the techniques so that health care management be better oriented for an optimum output...|$|R
40|$|This report {{examines}} {{the development and}} delivery of government services in specified remote Indigenous communities. The report focuses on: delivery of the 12 national agreement <b>outputs</b> for remote <b>delivery</b> services progress with accounting for the identified gaps in key services and infrastructure determined from baseline mapping through local implementation plans community indicators which look at the availability of services, investment and outcomes at a community level. The report concludes with a brief look at key jurisdictional issues {{for a number of}} state and territories...|$|R
40|$|In {{this paper}} a method is {{described}} for evaluating and diagnosing {{the performance of}} shop floors with respect to production control aspects such as <b>output</b> and <b>delivery</b> reliability. The focus is directed at the short term performance. On the short term, {{the state of the}} production system to a large extent determines the possible performance of the system. For the performance evaluation, short term predictions of the performance are made that are being used as short term performance norms. The prediction model deviates from existing prediction models in that it takes into account actual available information instead of average values; the prediction rules are state-dependent. Implementation of the model in a turnery shop resulted in low prediction errors as well as low standard deviations of the prediction errors as compared to the use of either the predictions of a long term model (steady-state) or the use of external output requirements. 1...|$|R
40|$|Abstract. Existing {{communication}} {{models for}} multiparty computation (MPC) either {{assume that all}} messages are delivered eventually or any message can be lost. Under the former assumption, MPC protocols guaranteeing <b>output</b> <b>delivery</b> are known. However, this assumption may not hold in some network settings like the Internet where messages can be lost due to denial of service attack or heavy network congestion. On the other hand, the latter assumption may be too conservative. Known MPC protocols developed under this assumption have an undesirable feature: <b>output</b> <b>delivery</b> is not guaranteed even only one party suffers message loss. In this work, we propose a communication model which makes an intermediate assumption on message delivery. In our model, {{there is a common}} global clock and three types of parties: (i) Corrupted parties (ii) Honest parties with connection problems (where message delivery is never guaranteed) (iii) Honest parties that can normally communicate but may lose a small fraction of messages at each round due to transient network problems. We define secure MPC under this model. <b>Output</b> <b>delivery</b> is guaranteed to type (ii) parties that do not abort and type (iii) parties. Let n be the total number of parties, ef and ec be upper bounds on the number of corrupted parties and type (ii) parties respectively. We construct a secure MPC protocol for n> 4 ef + 3 ec. Protocols for broadcast and verifiable secret sharing are constructed along the way. ...|$|E
40|$|In {{the setting}} of secure multiparty computation, a set of {{mutually}} distrustful parties wish to securely compute some joint function of their private inputs. The computation should be carried out in a secure way, meaning that the properties privacy, correctness, independence of inputs, fairness and guaranteed <b>output</b> <b>delivery</b> should all be preserved. Unfortunately, {{in the case of}} no honest majority – and specifically in the important two-party case – it is impossible to achieve fairness and guaranteed <b>output</b> <b>delivery.</b> In this paper, we show how a legal infrastructure that respects digital signatures can be used to enforce fairness in two-party computation. Our protocol has the property that if one party obtains output while the other does not (meaning that fairness is breached), then the party not obtaining output has a digitally signed cheque from the other party. Thus, fairness can be “enforced ” in the sense that any breach results in a loss of money by the adversarial party. ...|$|E
40|$|We {{study the}} round {{complexity}} of multiparty computation with fairness and guaranteed <b>output</b> <b>delivery,</b> assuming {{existence of an}} honest majority. We demonstrate a new lower bound and a matching upper bound. Our lower bound rules out any two-round fair protocols in the standalone model, even when the parties are given access to a common reference string (CRS). The lower bound follows by a reduction to the impossibility result of virtual black box obfuscation of arbitrary circuits. Then we demonstrate a three-round protocol with guarantee of <b>output</b> <b>delivery,</b> which in general is harder than achieving fairness (since the latter allows the adversary to force a fair abort). We develop a new construction of a threshold fully homomorphic encryption scheme, with a new property that we call “flexible ” ciphertexts. Roughly, our threshold encryption scheme allows parties to adapt flexible ciphertexts to the public keys of the non-aborting parties, which provides a way of handling aborts without adding any communication. ...|$|E
40|$|The {{purpose of}} this paper is to define the concept of {{expected}} minimum cost function and to present the methodology for a non parametric estimation of it. Generally, in cost enonometric analysis, inference is made on the cost function, namely the conditional expectation of cost given some level of output. Here, we consider the conditional distribution on the cost, given that the output level is greater than a fixed level. Our methodology is applied to a data set concerning cost and <b>outputs</b> of the <b>delivery</b> activity for french post offices. COSTS; MATHEMATICAL ANALYSIS; ECONOMETRICS; STATISTICAL ANALYSIS...|$|R
40|$|Many large {{organizations}} own and occupy extensive, {{complex and}} varied property estates, which {{are essential to}} their business. Continued reliance on these resources often requires considerable annual expenditure on maintenance, alterations, refurbishment and small-scale new building works. Such activities form the category small building works, a sub-sector of the UK construction industry which currently approximates to � 11 billion, or 20 % of annual total <b>output.</b> The <b>delivery</b> of best value {{in the management of}} small building works, {{in the context of an}} organization with a large property portfolio, is important to the business. Studies into small building works conducted over the past 15 years have been synthesized and augmented to highlight the key considerations for ensuring best value in small building works. The delivery of best value requires a comprehensive understanding of the proposed works themselves and then the potential impact of those works upon the property portfolio, and all within the context of the organization's business activities. Clients need to establish first, an effective procurement approach and second, an effective operational approach. Procurement, property estates, operations, small building works, workload management,...|$|R
40|$|Purpose of {{the review}} An {{adequate}} cardiac preload is essential {{in the treatment of}} critically ill patients. During anesthesia for thoracic surgery, volume and vasoactive therapy to optimize cardiac <b>output,</b> oxygen <b>delivery</b> (tissue perfusion) and to avoid pulmonary edema is a central therapeutic aspect. Cardiac preload has been estimated with different techniques in clinical practice, even though studies performed on thoracic anesthesia are lacking. Recent findings We analyze the conventional pulmonary artery catheter, transesophageal echocardiography and the transpulmonary indicator dilution technique as preload monitoring devices with their indications and limits in thoracic anesthesia. Summary The pulmonary artery catheter is confirmed as a fundamental device particularly in patients with pulmonary hypertension. For transesophageal echocardiography monitoring, the dependency on operator experience, the low repeatability and the high costs limit its interpretation and diffusion in clinical practice. During lung transplantation, Swan Ganz catheter monitoring is recommended. The optimization of fluid balance and vasoactive drug administration based on volumetric monitoring makes the transpulmonary indicator dilution technique a new option as an effective monitoring system during anesthesia for thoracic surgery when intravascular volume management is a primary objective...|$|R
