13|3087|Public
50|$|The Zen of Python is a {{collection}} of 20 software principles that influences the design <b>of</b> <b>Python</b> <b>Programming</b> Language, — only 19 of which were written down — around June 1999 by Tim Peters. The principal text is released into public domain.|$|E
5000|$|Taiwan Python Conference {{also known}} as Annual Taiwan Python Conference {{abbreviated}} PyCon TW has been held by Python communities in Taiwan since 2012 [...] at Academia Sinica's human and social study research institute, aimed to discuss the improvement and versatile application <b>of</b> <b>Python</b> <b>programming</b> language and promote the use of it.|$|E
5000|$|RUR - Python Learning Environment (RUR-PLE) is an {{educational}} tool {{to help students}} learn the Python programming language. Made by André Roberge. RUR-PLE uses the idea behind Karel the Robot, making the learning <b>of</b> <b>Python</b> <b>programming</b> more interesting. A student writes a program that controls a 'robot' that moves through a city consisting of a rectangular grid of streets (left-right) and avenues (up-down).|$|E
5000|$|Mark Lutz author <b>of</b> several <b>Python</b> <b>programming</b> {{language}} books, {{worked at}} Convex.|$|R
50|$|CLPython is an {{implementation}} <b>of</b> the <b>Python</b> <b>programming</b> language {{written in}} Common Lisp.|$|R
5000|$|Guido van Rossum (b. 1956), Dutch programmer, creator <b>of</b> the <b>Python</b> <b>programming</b> {{language}} ...|$|R
40|$|If {{you are a}} Python {{programmer}} or {{a security}} researcher who has basic knowledge <b>of</b> <b>Python</b> <b>programming</b> and want to learn about penetration testing {{with the help of}} Python, this book is ideal for you. Even if you are new to the field of ethical hacking, this book can help you find the vulnerabilities in your system so that you are ready to tackle any kind of attack or intrusion...|$|E
40|$|This book takes a tutorial-based and {{user-friendly}} {{approach to}} covering Python design patterns. Its concise presentation {{means that in}} a short space of time, {{you will get a}} good introduction to various design patterns. If you are an intermediate level Python user, this book is for you. Prior knowledge <b>of</b> <b>Python</b> <b>programming</b> is essential. Some knowledge of UML is also required to understand the UML diagrams which are used to describe some design patterns...|$|E
40|$|The thesis {{researches}} {{the ability}} of use <b>of</b> <b>Python</b> <b>programming</b> language {{in the field of}} high school education and uses qualitative and quantitative methods of research and finds Python suitable. The thesis also brings theoretical analysis of the Python language, including practical exams in the form of sample programs. It researchs even other programming languages used in education and their suitability for this purpose and compares them with Python programming language. It also finds two most common used programming languages at high schools, which are Pascal / Object Pascal and Java...|$|E
5000|$|The default, most-widely used {{implementation}} <b>of</b> the <b>Python</b> <b>programming</b> language uses libffi in {{the standard}} ctypes library.|$|R
5000|$|Kasurinen, Jussi. <b>Python</b> 3 <b>programming</b> (e-book), 180 pages, 2010. Published by Viope Oy {{as a part}} <b>of</b> <b>Python</b> 3 <b>programming</b> course. Available at Viope web store.|$|R
50|$|Cython is a superset <b>of</b> the <b>Python</b> <b>programming</b> language, {{designed}} to give C-like performance with code which is mostly written in Python.|$|R
40|$|Even though {{creation}} of cloud computing technology has provided opportunities to increase {{effectiveness of the}} companies, it has also generated new problems where {{one of them is}} digital forensics in the remote environments. It is generally agreed that if the service of a cloud doesn't record appropriate logs, identification of evidence becomes hard if not possible. Unfortunately, the existing functionality for this purpose is limited or absent all together. In this Master's thesis a new method-tool, Žurnalizavimo Paramos Sistema (ŽPS), has been proposed which combines open source digital forensic software The Sleuth Kit and The Volatility Framework with the help <b>of</b> <b>Python</b> <b>programming</b> language and helps to record and restore user activities in cloud storage environments. ŽPS implements unified logging format for such types of settings proposed by other authors and creates a data-centric effect which is thought to be an important step towards proper crime investigations in cloud storage environments. During experimental evaluation the method proved to be highly effective managing to reconstruct more than 65 % of user actions depending on their activeness when the copies of virtual machines have been created and analized not rarer than 5 minutes period...|$|E
40|$|No {{journey of}} {{scientific}} discovery is ever truly taken alone. Every step along the way, we encounter {{people who are}} {{a great source of}} encouragement, guidance, inspiration, joy, and support to us. The journey I have embarked upon {{during the course of this}} project is no exception. I would like to extend my gratitude to my project partner on many occasion during the past 5 years, Ng Tien Tjeun. His humorous take on various matters ensures that there is never a dull moment in any late night lab work. A resounding shout-out to the ‘elite ’ mem-bers of 0205 (our office), Tan Peng Kian, Shi Yicheng, and Victor Javier Huarcaya Azanon for their numerous discourses into everything under the sun, some which are possibly work related. Thank for tolerating my borderline hoarding behavior and the frequently malfunc-tioning door? I would like to thank Alessandro Ceré for his invaluable inputs on the many pesky problems that I had with data processing. Thanks for introducing me to world <b>of</b> <b>Python</b> <b>programming.</b> Now there is something better than Matlab? A big thanks also goes out to all of my other fellow researchers and colleagues both in the Quantum Optics group and in CQT. They are a source of great inspiration, support, and joy during my time in th...|$|E
40|$|Voltage {{stability}} improvement methods {{following a}} disturbance and Fault Induced Delayed Voltage Recovery (FIDVR) event are studied {{with the aim}} of satisfying a voltage recovery criterion and saving as much load as possible. These methods are temporary load interruption and the use of Static Var Compensators (SVCs). The loads are temporarily tripped and then reconnected. The locations and sizes of SVCs are also determined. The criterion to be met is the recovery of voltages at all buses in the network to 0. 9 pu within 1 s following a disturbance. Simulations are done on a typical distribution system with a large number of motor loads using Power System Simulator for Engineering (PSS/E) software with the help <b>of</b> <b>Python</b> <b>programming</b> language for automation and control and the results are analyzed. The results show that load interruption aids and significantly improves the voltage recovery following a disturbance in the network. It is also observed from the results that the use of SVCs also enables the voltage to recover faster with the criterion for voltage recovery at all buses fulfilled. However, the best results are obtained when load interruption is combined with the use of SVCs. The two methods complement each other. When the two methods are combined the amount of load that has to be interrupted is less and the number of SVCs required is also reduced. This results in fewer loads being interrupted. Moreover, the investment cost on SVCs is also reduced...|$|E
50|$|Jython is an {{implementation}} <b>of</b> the <b>Python</b> <b>programming</b> language {{designed to}} run on the Java platform. It is the successor of JPython.|$|R
50|$|The syntax <b>of</b> the <b>Python</b> <b>programming</b> {{language}} is {{the set of}} rules that defines how a <b>Python</b> <b>program</b> will be written and interpreted (by both the runtime system and by human readers).|$|R
50|$|CPython is the {{reference}} implementation <b>of</b> the <b>Python</b> <b>programming</b> language. Written in C, CPython is the default and {{most widely used}} implementation of the language.|$|R
40|$|In the diploma {{work the}} system for rapid {{development}} of web applications is presented and compared to the standard development of web applications. It consists of two parts. In the first part Django is described. This is a high-level Python Web framework that encourages rapid development of web applications. Basic structure and function of this framework are investigated. The so called Model-View-Controler (MVC) architecture used by Django is also described. Only basic and not advanced features of Django are presented here. The presentation of this framework is important due to easier understanding of web application rapid progress through MVC framework. Django was chosen for its wide range, good documentation and our knowledge <b>of</b> <b>Python</b> <b>programming</b> language. In the second part the development of web applications with MVC framework, including Django, is compared with the standard programming. The basic and main aim of using frameworks is to intensify their quality and development speed through the usage of built-in tools and methodologies {{which are based on}} the existent language. There are many built-in functions and tools already integrated into the frameworks, which make work easier for programmers. These are for instance authentication, authorization and registration of users, administration of web application, safety and users' rights, web application safety, work with web forms, data work and data validation. There are many MVC frameworks in the market. However, the aim of this diploma is not to compare different MVC frameworks to one another, but to present {{the advantages and disadvantages of}} using them. ...|$|E
40|$|The primary aim of {{the thesis}} was to {{investigate}} aluminum as building material for high speed craft, study the hull structure design processes of aluminum high speed craft and develop a parametric model to reduce the modeling time during nite element analysis. An additional {{aim of the}} thesis was to study the degree of validity of the idealizations and the assumptions of the semi-empirical design methods by using the parametric model. For the aluminum survey, {{a large amount of}} scientic papers and books related to the application of aluminum in shipbuilding industry were re-viewed while for the investigation of hull structure design, several designs of similar craft as well as all the classication rules for high speed craft were examined. The parametric model was developed on Abaqus nite ele-ment analysis software with the help <b>of</b> <b>Python</b> <b>programming</b> language. The study of the idealizations and the assumptions of the semi-empirical design methods was performed on a model derived by the parametric model with scanltings determined by the high speed craft classication rules of ABS. The review on aluminum showed that only specic alloys can be applied on marine applications. It also showed that the eect of reduced mechanical properties due to welding could be decreased by introducing new welding and manufacturing techniques. The study regarding the hull structure de-sign processes indicated that high speed craft are still designed according to semi-empirical classication rules but it also showed that there is ten- dency of transiting on direct calculation methods. The developed paramet-ric model does decrease the modeling time since it is capable of modeling numerous structural arrangements. The analysis related to the idealizations and the assumptions of the semi-empirical design methods revealed that the structural hierarchy idealization and the method of dening boundary by handbook type formulas are applicable for the particular structure while the interaction eect among the structural members is only possible to be studied by detailed modeling techniques...|$|E
40|$|The game Sorceress of Seasons was {{developed}} to teach fundamental concepts <b>of</b> <b>python</b> <b>programming</b> to middle school students {{with the goal of}} increasing enthusiasm in the Science, Technology, Engineering, and Mathematics (STEM) fields, especially for middle school female students. Currently there is a significant lack of professionals in STEM fields in the United States. Specifically, women are underrepresented in STEM fields, despite making up half of the workforce. Career interests are often developed in the middle school years; thus increase the pool of STEM professionals,, it is necessary to spark interest in STEM at an early age. A Game based learning (GBL) approach was used to increase interest in STEM for middle school females. GBL is an effective approach as it utilizes gameplay with educational content to create and engaging environment where students can practice concepts in a real world context. However, computer and video games have historically portrayed females in stereotypical and unhelpful ways. As a result many of female gamers are hesitant from playing certain games, experience negative gaming experiences when they do play certain games, and detracts from the number of female gamers. Thus before any game could be developed, first developed game design requirements that would result in games that are welcoming to girls as well as effective in its learning goals. Based on these requirements, the game Sorceress of Seasons (SOS) {{was developed}} to teach the concepts of variables, lists (arrays), and if statements. The game was then assessed with a group of middle school children in an evaluation. The goal of the evaluation was to verify that the requirements created a game that was welcoming to girls, that the game was effective in teaching some basic programming concepts, that exposure to the game increased interest in STEM, and that the gains endured. Students took surveys immediately before and after playing the game. From this, several of the requirements were supported based on feedback from students. Overall, student comprehension in programming concepts increased from the Pre-Experimental Assessment to the Post-Game Survey. Specifically, findings suggest that students comprehend the concept for variables better than the other two concepts...|$|E
50|$|The {{first part}} <b>of</b> Core <b>Python</b> <b>Programming,</b> Core <b>Python,</b> {{deals with the}} basic aspects <b>of</b> the <b>Python</b> <b>programming</b> language. Chapters One and Two, named What is Python? and Getting Started respectively, give {{instructions}} on how to install and configure Python, as well as detailing the basic operators and simple statements. Part One continues to cover Sequences (Lists, Strings and Tuples), Built-in Functions and creating functions, Loops (for-loop, while loop and if-statement being the most common); Modules, a full explanation on what Object Oriented Programming is; and syntax.|$|R
50|$|In 2013, a {{re-examination}} of Gould's algorithm and the utilisation <b>of</b> advanced <b>Python</b> <b>programming</b> modules (i.e., numpy and scipy) {{has made}} it possible to calculate the squared-error threshold values for identifying outliers.|$|R
50|$|PyObjC's origins {{date back}} to 1996, when Lele Gaifax built the {{original}} module in September of that year. Among the credited contributors were Guido van Rossum, creator <b>of</b> the <b>Python</b> <b>programming</b> language.|$|R
40|$|Computational {{methods used}} and {{developed}} {{in this thesis}} contribute {{to the analysis of}} complex biological data. The aim was {{to bridge the gap between}} genotype and phenotype present in different experimental outcomes. The impact of variations in individual proteins and pathways can change the phenotypes. Currently, the understanding of the mechanisms with precise details about compromised phenotypes is far from complete. In this regard, an experimental study to address a stress/disease condition can provide the insights of causal molecules and mechanisms. In fact, the complementarity of computational methods and experimental setups can further enhance the understanding. Over the years, the integration of experimental and computational setups has contributed in explaining the grey areas of phenotypes. To this end, with advancements in technology providing wealth to new data, it is almost impossible to make sense of data without in silico input. Based on this idea several computational methods have been developed to contribute towards “omics” studies. However, functional analyses of many phenotypes need more creative and effectives computational protocols. Therefore, in order to assess the impact of variations on phenotypes more robust tools are required. Motivated about this notion, we analyzed disparate data sets coming from different experiments. The aim of these experiments was to understand the molecular phenotypes by assessing the impact of variations on protein networks, pathways and conserved functional regions. For this, we tailored different computational pipelines. These frameworks specifically map the variations onto the functional regions like modified residues or protein domains. The resulting data with mutations mapped to the functional regions can provide a refined glimpse of pathways that are operating a phenotype. This method can facilitate the understanding of complex phenotypes. The projects conducted during this thesis work can be separated into two parts. In the first part, we performed three projects about yeast computational systems biology. In addition to that, in the second part, we performed a project about viral disease and therapeutic targets prediction. For the first project, we generated new experimental data from yeast under ethanol stress. At one instance, we analyzed the genomic variation data from whole genome sequencing. These variations were mapped onto the functional regions, for further analyses and interpretation. The resulting data suggested that the modified residues suffered the least mutational burden. Whereas the presence of multi-protein domains and pathways show these functional units can contribute to the stress-tolerating behavior of yeast. The second project of this thesis work was to develop a computational protocol. The aim of this project was to facilitate researchers who are working on big data from yeast experiments. Budding yeast as a model organism is very popular in the research community, to understand fundamental biological questions. Yet, researchers lacked a tool facilitating the analysis of mutational data from yeast. We thus created a python based tool, yMap, which can take big data containing the mutations at genetic/proteomic level. This tool maps the mutated residues to several evolutionary conserved and functionally important regions. In the end of a typical analysis, an output contains the information regarding mutated protein regions, mutation-types, pathway enrichment and network visualization. We believe that, in the areas of systems biology, this automated protocol can contribute to and facilitate yeast research. Our third project was based on the data integration of two different types of yeast data. The theme was to understand and explain the protein regulation in yeast under ethanol stress. For this reason we created a data integration computational framework based on the yeast protein-protein interactions. The strategy helped in the probing of causal regulatory proteins for their possible role in protein regulation of stress orientated yeast clones. We could also establish potential involvement of mutations in protein regulation along side with regulatory proteins. Altogether, this project contributed in understanding the mechanisms of protein regulation in ethanol stress via regulatory proteins and mutations. The second part of this thesis was dedicated to human disease. The aim was to create a new computational protocol to contribute to bringing further the present understanding of Ebola virus disease (EVD). Moreover, based on our strategy, we suggested possible therapeutic targets of EVD. In this regard, we mapped the most conserved regions of Ebola virus proteins, and predicted modified residues present on these conserved regions. The phosphorylation was the most abundant type of modification predicted in our analysis. To target Ebola virus proteins, we predicted that the phosphorylation contributing kinases from host genome. These kinases are potentially involved in the protein modifying events of Ebola virus. This project opens a new area of research to analyze the conserved modified residues in order to target possible modifying enzymes. To sum it up, we conducted four different projects to contribute to understanding the gap present between the genotype and phenotype. Each of the projects on yeast genome brought unique insights of the molecular mechanisms present underneath a phenotype. Moreover, the evolutionary insights of Ebola virus proteins can facilitate drug development based on our analysis. Additionally, the methodologies developed in each project can facilitate larger research community to perform their research. /* Font Definitions */@font-face	{font-family:Arial;	panose- 1 : 2 116 4 2 2 2 2 2 4;	mso-font-charset: 0;	mso-generic-font-family:auto;	mso-font-pitch:variable;	mso-font-signature: 3 0 0 0   1 0;}@font-face	{font-family:'ＭＳ 明朝';	panose- 1 : 0 0 0 0 0 0 0   0 0 0;	mso-font-charset: 128;	mso-generic-font-family:roman;	mso-font-format:other;	mso-font-pitch:fixed;	mso-font-signature: 1 134676480 16 0 131072 0;}@font-face	{font-family:'ＭＳ 明朝';	panose- 1 : 0   0 0 0 0 0 0 0 0 0;	mso-font-charset: 128;	mso-generic-font-family:roman;	mso-font-format:other;	mso-font-pitch:fixed;	mso-font-signature: 1 134676480 16 0 131072 0;}@font-face	{font-family:Cambria;	panose- 1 : 2 4 5 3   5 4 6   3 2 4;	mso-font-charset: 0;	mso-generic-font-family:auto;	mso-font-pitch:variable;	mso-font-signature: 3 0 0 0 1 0;} /* Style Definitions */p. MsoNormal, li. MsoNormal, div. MsoNormal	{mso-style-unhide:no;	mso-style-qformat:yes;	mso-style-parent:'';	margin: 0 cm;	margin-bottom:. 0001 pt;	mso-pagination:widow-orphan;	font-size: 12. 0 pt;	font-family:Cambria;	mso-ascii-font-family:Cambria;	mso-ascii-theme-font:minor-latin;	mso-fareast-font-family:'ＭＳ 明朝';	mso-fareast-theme-font:minor-fareast;	mso-hansi-font-family:Cambria;	mso-hansi-theme-font:minor-latin;	mso-bidi-font-family:'Times New Roman';	mso-bidi-theme-font:minor-bidi;}. MsoChpDefault	{mso-style-type:export-only;	mso-default-props:yes;	font-family:Cambria;	mso-ascii-font-family:Cambria;	mso-ascii-theme-font:minor-latin;	mso-fareast-font-family:'ＭＳ 明朝';	mso-fareast-theme-font:minor-fareast;	mso-hansi-font-family:Cambria;	mso-hansi-theme-font:minor-latin;	mso-bidi-font-family:'Times NewRoman';	mso-bidi-theme-font:minor-bidi;}@page WordSection 1 	{size: 595. 0 pt 842. 0 pt;	margin: 72. 0 pt 90. 0 pt 72. 0 pt  90. 0 pt;	mso-header-margin: 35. 4 pt;	mso-footer-margin: 35. 4 pt;	mso-paper-source: 0;}div. WordSection 1 	{page:WordSection 1;} [...] > Three months progress report Student: Ahmed Arslan Topic of PhD: Computational systems biology of complex phenotypes Supervisor: Vera van Noort Start date: 09 November 2013 Reporting period: 09 November 2013 to 09 February 2014 Background The phenotype ofan organism is the product of the environment and its genotype [1]. The environment includes everything that influences an individual from outside, for example, temperature, nutrient intake and water availability. These factors can also affect the genotype of an organism by selective pressure and result in phenotypic variations, accordingly. Under laboratory conditions, the genetic make-up can be manipulated through genetic engineering. In nature, on the other hand, the environment controls the genetic behavior of a species but in a much broader way hence affects the genome of its inhabitants in a number of ways. Introduction to the Project Our aim is to access the quantitative effect of the environment on the genome of model organism (yeast). And to create new yeast strains to meet with the challenges of the changing environment. To analyze the effect of different alcohol concentrations (environment) on the model genome, a project was carried out within the laboratory of our collaborator prof. Verstrepen. In six chemostats, populations of yeast strains were grown in in the growth media and let them to reproduce for a certain number ofgenerations, while the concentration of alcohol was increased over time. The experiment is aimed at letting the genome of yeast adapt to higher alcohol levels to create a ‘superior strain’ that could survive even under higher then usual alcohol concentration. To evaluate the genetic changes taken place in the course of the experiments, the DNA was extracted from the surviving cells and subjected to the whole genome sequencing to access the effects. So far, the sequencing DNA data has been analyzed for the presence of single nucleotide polymorphism and insertion/deletion (indel) mutations. The yeast is quite useful as a model organism to conduct this evaluation, because it is very important organism for the pharmaceutical, chemical and beer industry. Moreover, this unicellular organism and has an ideal (relatively small) genome that makes it possible to perform systems levelanalysis [2]. Progress The further downstream data analysis in this project involves the computational analysis of DNA sequencing data followed by statistical evaluation of the given data. These analyses include post-translational modifications, pathway level analyses for individual SNP and protein domain analysis. For this reason I have been learning in-silico data analysis and interpretation approaches, including a computer language (Bio) Python and statistical analysis software R. Python is a very famous programming language among Bioinformaticans all around the world and BioPython is a derived version of it to further accelerate biological data analysis. I have gained experience in this given period <b>of</b> <b>python</b> <b>programming</b> andam now able to perform initial analyses such as protein domain analysis. Using BioPython scripts, I have extracted surrounding protein sequences of SNPs and indels, which will be used in downstream analyses. To enable myself to learn quickly more about python I have registered myself in the coming python course in ICT department of KU Leuven. This training gives me further understanding of python and hopefully helps me to perform my work efficiently. To excel in using R software Ihave recently taken part in a course in Maastricht University, The Netherlands. This course was very helpful for me to understand the basic knowledge about the work environment of R as well as advanced level data handling with it. Future direction In the coming months, I am going to pursue with my training, both in scientific areas that are directly linked to the theme of my thesis and also in the non-scientific areas. For this reason I will take a few courses in this semester and also learn more about computer programing, online databases, biological analysis softwares and statistical analysis tools. More precisely, the next steps in data analysis include extracting Post Translational Modification sites and their locations from UniProt for yeast proteins that contain SNPs. Theprotein sequences and PTMs will be combined together to identify changes that could affect the modification status of yeast proteins thathave undergone adaptation to high alcohol concentrations. At the same time, phosphorylation motifs from databases like phospho. ELM will be extracted and the sequences surrounding SNPs and indels will be searched for these motifs. This will add more information on SNPs that could affect PTMs. References: 1 - Bradshaw, A. D. (1965) Evolutionary signiﬁcance of phenotypic plasticity in plants. Adv. Genet. 13, 115 – 155. 2 - (URL:[URL] R, (URL:[URL] S, (URL:[URL] J. (2006) Yeast systems biology to unravel the network of life. (URL:[URL] 23, 227 - 238. status: publishe...|$|E
50|$|The {{language}} had a {{major influence}} on the design <b>of</b> the <b>Python</b> <b>programming</b> language; Guido van Rossum, who developed Python, previously worked for several years on the ABC system in the early 1980s.|$|R
40|$|Levels {{densities of}} independent-particle Hamiltonians can be {{calculated}} easily by using the real-time representation of the evolution operator together with the fast Fourier transform. We describe the method and implement it with a set <b>of</b> <b>Python</b> <b>programs.</b> Examples are provided for the total and partial levels densities of a heavy deformed nucleus (Dy- 164). The partial level densities that may be calculated are the projected ones on neutron number, proton number, azimuthal angular momentum, and parity. Comment: 12 pages with 2 figure...|$|R
50|$|The Python License is a {{deprecated}} {{computer software}} license {{created by the}} Corporation for National Research Initiatives (CNRI). It was used for versions 1.6 and 2.0 <b>of</b> the <b>Python</b> <b>programming</b> language, both released in the year 2000.|$|R
50|$|The Python Conference (PyCon) is {{an annual}} {{convention}} for the discussion and promotion <b>of</b> the <b>Python</b> <b>programming</b> language. It {{originated in the}} United States but is also held in many other countries that have active Python developer communities.|$|R
40|$|Conduit is a {{multi-platform}} {{distribution and}} deployment system originally created by Arve Knudsen. Conduit {{sets out to}} streamline the installation process of software, and assist in the installation of software {{that might otherwise be}} quite complex to install manually. The system is written in the <b>Python</b> <b>programming</b> language and consists of a generic design which is implemented on multiple operating through several Python modules. The Conduit software suit consists <b>of</b> <b>Python</b> <b>programs</b> that handle the creation, distribution and installation of software packages. These programs provide facilities for the software provider to distribute their software, and for the user to deploy the software. Together their purpose is to o er the user an seamless operation of deployment...|$|R
40|$|International audienceSUMMARY: ANGES is a suite <b>of</b> <b>Python</b> <b>programs</b> {{that allows}} reconstructing ancestral genome maps from the {{comparison}} {{of the organization of}} extant-related genomes. ANGES can reconstruct ancestral genome maps for multichromosomal linear genomes and unichromosomal circular genomes. It implements methods inspired from techniques developed to compute physical maps of extant genomes. Examples of cereal, amniote, yeast or bacteria ancestral genomes are provided, computed with ANGES. Availability: ANGES is freely available for download at [URL] Documentation and examples are available together with the package. CONTACT: cedric. chauve@sfu. ca...|$|R
5000|$|He is a {{director}} of the Apache Software Foundation, and served as chairman from 21 August 2002 to 20 June 2007. [...] He is also a member <b>of</b> the <b>Python</b> Software Foundation, was {{a director}} there from 2001 to 2002, and a maintainer <b>of</b> the <b>Python</b> <b>programming</b> language and libraries (active from 1999 to 2002).|$|R
40|$|Dynamic languages, like Python, are {{attractive}} because they guarantee that no correct program is rejected prematurely. However, this {{comes at a}} price of losing early error detection, and making both code optimization and certification harder tasks when compared with static typed languages. Having the static certification <b>of</b> <b>Python</b> <b>programs</b> as a goal, we developed a static type inference system for a subset <b>of</b> <b>Python,</b> known as RPython. Some dynamic features are absent from RPython, nevertheless it is powerful enough as a Python dialect and exhibits most of its main features. Our type inference system tackles with almost all language constructions, such as object inheritance and subtyping, polymorphic and recursive functions, exceptions, generators, modules, etc., and is itself written in Python...|$|R
5000|$|... "Python pros, {{or those}} {{looking for answers}} and {{examples}} to specific problems may not enjoy this book. The book is also not a complete reference <b>of</b> the <b>Python</b> language, but does {{do a very good}} job of explaining it."Michael Baxter, in a review of the first edition <b>of</b> Core <b>Python</b> <b>Programming</b> on Linux Journal, was also very positive about the book.|$|R
40|$|Abstract: In {{power system}} planning, the general {{concern is the}} ability of a power system to supply {{increasing}} loads without undervoltages. Nonetheless, decrease in loads can also occur in power systems, e. g., when mines are decommissioned leading to shrinkage in load. Depending on the scale of the load reduction, problem of steady overvoltages can arise. This study proposes an investigation of using of step-down transformers to reduce steady state overvoltages in a lightly loaded network comprising of long corridors. The investigation evaluates the proposal of installing transformers {{at both ends of the}} length network, forming a ring of transformers to derate the operating voltage of the derated network. The load flow simulation studies are initially carried out manually by scaling the load down using the Power System Software for Engineers (PSS/E). The load flow studies for the lowest load served without violations are carried out for the case without transformers and the derated case with transformers. The study further proposed the use <b>of</b> <b>Python</b> <b>program</b> to automate the studies through scaling the load down until the voltage limits are reached by sending commands to PSS/E using Python syntax. In addition to this, the use of Tabu Search (TS) algorithm is proposed for optimally selecting a combination of lines to accommodate the least load within the voltage limits. The load is scaled down automatically in PSS/E using <b>Python</b> <b>program</b> with the least load served as an objective function and the constraints being the voltage limits. The study found that the use of step-down transformers can successfully reduce the steady state overvoltages in a lightly loaded network. The introduction <b>of</b> <b>Python</b> <b>program</b> to automate the studies was successful. Lastly, intelligence of Tabu Search algorithm can successfully select the optimal combination of lines to serve the least load without voltage violations. M. Phil. (Electrical and Electronic Engineering...|$|R
40|$|An exciting, easy-to-follow guide {{illustrating}} the techniques {{to boost the}} performance <b>of</b> <b>Python</b> code, and their applications with plenty of hands-on examples. If you are a programmer who likes the power and simplicity <b>of</b> <b>Python</b> {{and would like to}} use this language for performance-critical applications, this book is ideal for you. All that is required is a basic knowledge <b>of</b> the <b>Python</b> <b>programming</b> language. The book will cover basic and advanced topics so will be great for you whether you are a new or a seasoned Python developer...|$|R
