2346|2643|Public
5000|$|Java Agent Development Framework — <b>Mobile</b> <b>agent</b> framework, Java ...|$|E
5000|$|Mobility-RPC — <b>Mobile</b> <b>agent,</b> remote evaluation, code on demand, RPC, Java ...|$|E
50|$|In {{computer}} science, a <b>mobile</b> <b>agent</b> is {{a composition}} of computer software and data which {{is able to}} migrate (move) from one computer to another autonomously and continue its execution on the destination computer. In reality, the <b>mobile</b> <b>agent</b> is the code/object on move which travels in its itinerary within the network of connected nodes.|$|E
40|$|Abstract. This paper {{focuses on}} {{behavior}} analysis on <b>mobile</b> <b>agents</b> used in network routing. We describe a general agent-based routing model and classify it into two cases {{based on the}} reaction of <b>mobile</b> <b>agents</b> to a system failure, namely MWRC (<b>mobile</b> <b>agents</b> with weak reaction capability) and MSRC (<b>mobile</b> <b>agents</b> with strong reaction capability). For each case, we analyze the population distribution (the number of <b>mobile</b> <b>agents)</b> of <b>mobile</b> <b>agents</b> which as an important measure for monitoring the computational resource consumption and network performance. Our analysis reveal theoretical insights into the statistical behaviors of <b>mobile</b> <b>agents</b> and provide useful tools for effectively managing <b>mobile</b> <b>agents</b> in large networks...|$|R
40|$|The {{original}} publication {{is available}} at www. springerlink. comThis paper focuses on behavior analysis on <b>mobile</b> <b>agents</b> used in network routing. We describe a general agent-based routing model and classify it into two cases based on the reaction of <b>mobile</b> <b>agents</b> to a system failure, namely MWRC (<b>mobile</b> <b>agents</b> with weak reaction capability) and MSRC (<b>mobile</b> <b>agents</b> with strong reaction capability). For each case, we analyze the population distribution (the number of <b>mobile</b> <b>agents)</b> of <b>mobile</b> <b>agents</b> which as an important measure for monitoring the computational resource consumption and network performance. Our analysis reveal theoretical insights into the statistical behaviors of <b>mobile</b> <b>agents</b> and provide useful tools for effectively managing <b>mobile</b> <b>agents</b> in large networks. Wenyu Qu, Hong Shen and Yingwei Ji...|$|R
40|$|This paper {{focuses on}} {{behavior}} analysis on <b>mobile</b> <b>agents</b> used in network routing. We describe a general agent-based routing model and classify it into two cases {{based on the}} reaction of <b>mobile</b> <b>agents</b> to a system failure, namely <b>mobile</b> <b>agents</b> with weak reaction capability (MWRC) and <b>mobile</b> <b>agents</b> with strong reaction capability (MSRC). For each case, we analyze the probability of success (the probability that an agent can find the destination) and the population distribution (the number of <b>mobile</b> <b>agents)</b> of <b>mobile</b> <b>agents.</b> The probability of success serves as an important measure for monitoring network performance, and the analysis of population distribution provides {{a useful tool for}} reducing the computational resource consumption. Our analysis reveals theoretical insights into the statistical behaviors of <b>mobile</b> <b>agents</b> and provides useful tools for effectively managing <b>mobile</b> <b>agents</b> in large networks. Wenyu Qu, Hong Shen and John Sum[URL]...|$|R
50|$|There are {{two types}} of <b>mobile</b> <b>agent.</b> The {{classification}} is based on their migration path.|$|E
5000|$|More specifically, a <b>mobile</b> <b>agent</b> is {{a process}} that can {{transport}} its state from one environment to another, with its data intact, and be capable of performing appropriately in the new environment. Mobile agents decide when and where to move. Movement is often evolved from RPC methods. Just as a user directs an Internet browser to [...] "visit" [...] a website (the browser merely downloads a copy of the site or one version of it in the case of dynamic web sites), similarly, a <b>mobile</b> <b>agent</b> accomplishes a move through data duplication. When a <b>mobile</b> <b>agent</b> decides to move, it saves its own state (process image), transports this saved state to the new host, and resumes execution from the saved state.|$|E
5000|$|Present and Future Trends of <b>Mobile</b> <b>Agent</b> Technology. Second International Workshop on Mobile Agents '98 (MA '98), Stuttgart, Germany, September 1998.|$|E
40|$|Interoperability is {{a central}} issue for both the <b>mobile</b> <b>agents</b> {{community}} and the wider agents community. Unfortunately, the interoperability concerns are different between the two communities. As a result, inter-agent communication {{is an issue that}} has been addressed in a limited manner by the <b>mobile</b> <b>agents</b> community. Supplementing <b>mobile</b> <b>agents</b> with the ability to interact a a higher level with other <b>mobile</b> or static <b>agents,</b> or agentified information sources is a necessity in the vastly heterogeneous arena where <b>mobile</b> <b>agents</b> are called to compete. An agent communication language (ACL) has been interpreted by the agents community as a tool with the capacity to integrate disparate sources of information. Such a perspective {{does not seem to be}} shared by the <b>mobile</b> <b>agents</b> community. We investigate the origins of the differences of perspective on agent to agent communication and examine the reasons for the relative lack of interest on ACLs by <b>mobile</b> <b>agents</b> researchers and explore the integration of ACLs into <b>mobile</b> <b>agents</b> frameworks...|$|R
40|$|In {{distributed}} applications based on <b>mobile</b> <b>agents,</b> coordination and synchronization {{of the actions}} executed {{by a team of}} <b>mobile</b> <b>agents</b> are dicult tasks. The main diculty {{comes from the fact that}} coordination requires the agents to interact with each other in spite of their dynamically changing locations. In this paper we present a mechanism for coordinating <b>mobile</b> <b>agents</b> which handles the problem of locating and addressing members in a group of <b>mobile</b> <b>agents.</b> This mechanism, which we called Broadcast Channel, implements reliable broadcasts of messages to a group of <b>mobile</b> <b>agents,</b> independently of their current locations...|$|R
40|$|We {{study the}} {{capacity}} of sensor networks with <b>mobile</b> <b>agents.</b> We look at the problem from information theory perspective, and optimize various network parameters such as coverage area, flying altitude, and the trajectory of <b>mobile</b> <b>agents.</b> Multiple <b>mobile</b> <b>agents</b> {{and the possibility of}} cooperation among them are also considered...|$|R
50|$|A <b>Mobile</b> <b>Agent,</b> namely, {{is a type}} of {{software}} agent, with the feature of autonomy, social ability, learning, and most significantly, mobility.|$|E
5000|$|... (2) Free roaming mobile agent: Have dynamic {{migration}} path. Depending up on {{the present}} network condition the <b>mobile</b> <b>agent</b> chooses its path.|$|E
50|$|Within code mobility, the <b>Mobile</b> <b>Agent</b> {{paradigm}} has conventionally {{attracted the}} most interest and research, however some recent work has produced general purpose implementations.|$|E
40|$|<b>Mobile</b> <b>agents</b> {{are a new}} {{paradigm}} for communication and cooperation in distributed computing. To combine the {{new paradigm}} with the promising World Wide Web platfrom, we integrated <b>mobile</b> <b>agents</b> into Web Servers. In this way, <b>mobile</b> <b>agents</b> may travel from Web server to Web server to access their local data. The paper describes how we integrated <b>mobile</b> <b>agents</b> support into a Web server. We present the state of implementation, and we give an outlook on our future work...|$|R
40|$|Intelligent <b>mobile</b> <b>agents</b> {{are sent}} between routers {{to carry out}} a set of {{required}} tasks. <b>Mobile</b> <b>agents</b> can carry algorithms and information to various routers that they visit, such as: timer, navigation algorithm, network information, stability of the network, and load traffic of the network. By clustering intelligent <b>mobile</b> <b>agents,</b> it is possible to minimize the cost of time for each agent to travel to its required routers and the number of intelligent <b>mobile</b> <b>agents.</b> Each router has certain capabilities and hence can only process certain requests of each intelligent agent. The problem is to group the intelligent <b>mobile</b> <b>agents</b> into a number of clusters such that each cluster has similarity in responding to a group of routers. This can significantly decrease the demand imposed upon a network for a set of required tasks to be performed. In this paper, we present the problem of multiple criteria clustering of intelligent <b>mobile</b> <b>agents</b> where the decision is to cluster <b>mobile</b> <b>agents</b> such that a group of similar intelligent <b>mobile</b> <b>agents</b> will visit a group of similar routers. This grouping will decrease the total number of visits and the total number of agents, decreasing demand on the network...|$|R
40|$|In {{the last}} years, <b>mobile</b> <b>agents</b> are gaining great {{attention}} {{as a new}} concept for developing and implementing mobile and distributed applications. However, very little work {{has taken place in}} defining concepts and notations to model <b>mobile</b> <b>agents.</b> In this paper, we present an approach to model and to implement <b>mobile</b> <b>agents.</b> This approach is materialized by a UML notation, called MA-UML for modeling <b>mobile</b> <b>agents,</b> and a software CASE Tool, called MAMT for mapping conceptual diagrams into Java implementation. Key words...|$|R
50|$|Another use is code mobility: a <b>mobile</b> <b>agent</b> can migrate between {{machines}} {{by having}} its state saved, then copying {{the data to}} another machine and restarting there.|$|E
5000|$|Reflections on Java Aglets: Seven Issues for {{the next}} Generation of <b>Mobile</b> <b>Agent</b> Systems. Second International ACTS Workshop in Singapore on Advanced Services in Fixed and Mobile Telecommunications Networks, Singapore, September 1999.|$|E
50|$|A <b>mobile</b> <b>agent</b> is an {{autonomous}} software agent {{with a certain}} social ability and most importantly, mobility. It is composed of computer software and data which can move between different computers automatically while continuing their executions.|$|E
40|$|Recent {{research}} has provided {{means by which}} Wireless Sensor Networks (WSN) with dynamic deadlines can make use of <b>mobile</b> <b>agents</b> for data aggregation. Lot of {{research has}} already been done with respect to using <b>mobile</b> <b>agents</b> in case of static wireless sensor networks. This paper proposes, along with brief explanation of research issues associated with applying <b>mobile</b> <b>agents,</b> two new techniques to improve the performance of data aggregation using <b>mobile</b> <b>agents.</b> First technique proposed in this paper makes <b>mobile</b> <b>agents</b> „intelligent ‟ enough to support dynamic wireless sensor networks also. Second technique proposed shows that how multiple <b>mobile</b> <b>agents</b> can also be used, in partitions of the original given wireless sensor which are generated based on some chosen criteria, to reduce overall number of buffer overflows. Paper will be concluded with mentioning of future directions of research...|$|R
40|$|Future {{areas of}} {{application}} for <b>mobile</b> <b>agents</b> technology are open, distributed and decentralized networks, where <b>Mobile</b> <b>Agents</b> autonomously perform tasks {{on behalf of}} their principals. In this paper, we address the conceptual design of payments for and between <b>Mobile</b> <b>Agents,</b> particularly against the background of the Malicious Host Problem. We analyze the requirements on payment systems for <b>Mobile</b> <b>Agents</b> and give a survey on existing technical solutions partially matching these requirements. We then discuss a new concept that does not require <b>Mobile</b> <b>Agents</b> to hold secrets and that allows allocations of digital coins and agents even in an environment that contains Malicious Hosts. The concept is based on the principles of accounting systems. ...|$|R
40|$|Abstract. This paper aims to {{investigate}} the use of <b>mobile</b> <b>agents</b> for service provision in mobile computing environments. A quantitative model and experimental measurements are performed to compare Java RMI and <b>mobile</b> <b>agents</b> in the special context of software downloading. The results show that significant performance improvements can be obtained using <b>mobile</b> <b>agents.</b> In addition, two agent-based services, namely Service Download and Service Discovery, are proposed to illustrate the benefits of using <b>mobile</b> <b>agents</b> for service provision and their potential impacts on mobile computing environments. 1...|$|R
50|$|Scenario: Host A, has an {{algorithm}} which computes function f. A {{wants to}} send its <b>mobile</b> <b>agent</b> to B which holds input x, to compute f(x). But A doesn't want B to learn anything about f.|$|E
50|$|Classical {{topics in}} philosophy, namely, mind, consciousness, experience, reasoning, knowledge, truth, {{morality}} and creativity are rapidly becoming common concerns and foci of investigation in computer science, e.g., {{in areas such}} as agent computing, software agents, and intelligent <b>mobile</b> <b>agent</b> technologies.|$|E
5000|$|MASIF, The OMG <b>Mobile</b> <b>Agent</b> System Interoperability Facility. D. Milojicic, M. Breugst, I. Busse, J. Campbell, S. Covaci, B. Friedman, K. Kosaka, D. Lange, K. Ono, M. Oshima, C. Tham, S. Virdhagriswaran, J. White. In Proceedings of Mobile Agents '98, 1998.|$|E
40|$|Abstract: Viruses, bots, worms, etc. {{are nothing}} else but <b>mobile</b> <b>agents.</b> <b>Mobile</b> <b>agents</b> in turn {{have been the}} scope of {{research}} in computer sciences for quite some years. Recently research on the security side of <b>mobile</b> <b>agents</b> has received increased attention, too. Perfectly securing <b>mobile</b> <b>agents</b> is generally impossible. While this is cumbersome for legitimate scenarios {{this is good news}} when trying to protect IT infrastructure. On the other hand, there are quite powerful protection methods for <b>mobile</b> <b>agents</b> so securing computers is far from trivial. In order to explain this simple truth the paper relates current as well as well established findings from (theoretical) computer sciences to the IT security world of practitioners. It is shown what methods are available to protect <b>mobile</b> <b>agents,</b> i. e. viruses, bots, and worms, from their environments, i. e. the computers they are running on. The limits of these protection methods are also explored...|$|R
40|$|<b>Mobile</b> <b>agents</b> {{represent}} {{a new model}} for network computing. Many different languages {{have been used to}} implement <b>mobile</b> <b>agents.</b> The characteristics that make a language useful for writing <b>mobile</b> <b>agents</b> are: (1) their support of agent migration, (2) their support for agent-to-agent communication, (3) how they allow agents to interact with local resources, (4) security mechanisms, (5) execution efficiency, (6) language implementation across multiple platforms, and (7) the language's ease of programming of the tasks <b>mobile</b> <b>agents</b> perform. Comment: Honours Thesis. Department of Computer Science and Sofware Engineering, University of Melbourne. 199...|$|R
40|$|An {{architecture}} {{for large}} scale low power sensor network is pro-posed. Referred to as sensor networh with <b>mobile</b> <b>agents</b> (SENMA). SENMA exploit node redundancies by introducing <b>mobile</b> <b>agents</b> that communicate opportunistically with a largefreld of sensors. The addition of <b>mobile</b> <b>agents</b> shifIs computationally intensive task awayfrom primitive sensors to more powerful <b>mobile</b> <b>agents,</b> which enables energy effcient operations under severely limited power constraints. An opportunistic ALOHA random access cou-pled with a direct sequence spread spectrum physical layer is pro-posed. A comparison ofSENMA with apor ad hocsensor network shows a substantial gain in energy efficiency...|$|R
50|$|Aglets is {{completely}} written in Java, thus allowing a high portability {{of both the}} agents and the platform. Aglets includes both a complete Java <b>mobile</b> <b>agent</b> platform, with a stand-alone server called Tahiti, and a library that allows developers to build mobile agents and to embed the Aglets technology in their applications.|$|E
50|$|A <b>mobile</b> <b>agent</b> is a {{specific}} form of mobile code, {{within the field of}} code mobility. However, in contrast to the Remote evaluation and Code on demand programming paradigms, mobile agents are active in that they can choose to migrate between computers at any time during their execution. This makes them a powerful tool for implementing distributed applications in a computer network.|$|E
50|$|Min Chen (陈敏), is a {{professor}} in the School of Computer Science and Technology at Huazhong University of Science and Technology (HUST). His research focuses on Internet of Things, Machine to Machine Communications, Body Area Networks, Body Sensor Networks, E-healthcare, Mobile Cloud Computing, Cloud-Assisted Mobile Computing, Ubiquitous Network and Services, <b>Mobile</b> <b>Agent,</b> and Multimedia Transmission over Wireless Network, etc. He is an IEEE Senior Member since 2009.|$|E
40|$|<b>Mobile</b> <b>agents</b> are {{a form of}} {{software}} agents that migrate from device to device, performing their job in an unobtrusive manner. <b>Mobile</b> <b>agents</b> are particularly useful for pervasive computing as they are lightweight processes that allow for the delegation of tasks, have migratory characteristics, and operate {{regardless of whether the}} device they are on is connected to the network. However, in order to facilitate the full potential of <b>mobile</b> <b>agents</b> in pervasive environments, it is evident {{that there is a need}} for <b>mobile</b> <b>agents</b> to be resource-aware. To this end, we propose a model for a Resource Aware Middleware for <b>Mobile</b> <b>Agents</b> (RAMMA). We present the conceptual architecture of RAMMA, its implementation and an evaluation of the resource utilisation patterns of the monitor itself. 1...|$|R
40|$|<b>Mobile</b> <b>agents</b> {{often have}} a task to collect data from several {{predefined}} sites. This {{should be done in}} an efficient way by minimising the elapsed time. Usually these agents only know the list of sites but not the distances between them. This paper proposes a method to minimise a network routing time taken by the <b>mobile</b> <b>agents</b> to collect information from different sites using genetic algorithm (GA). The <b>mobile</b> <b>agents</b> repeat travelling over short routes and avoid longer ones. <b>Mobile</b> <b>agents</b> for query retrieval have used the GA to select the best routes that minimise the query retrieval time. The result shows that the proposed method provides good time minimisation in retrieving the query results by the <b>mobile</b> <b>agents</b> based on different GA parameters...|$|R
40|$|On {{the road}} for the future success of <b>mobile</b> <b>agents,</b> we believe that inter-agent {{communication}} {{is an issue that}} has not been adequately addressed by the <b>mobile</b> <b>agents</b> community. Supplementing <b>mobile</b> <b>agents</b> with the ability to interact with other <b>mobile</b> or static <b>agents,</b> or agentified information sources is a necessity in the vastly heterogeneous arena where <b>mobile</b> <b>agents</b> are called to compete. Thus, an agent communication language should be interpreted as a tool with the capacity to integrate disparate sources of information. In the first segment, we argue that <b>mobile</b> <b>agents</b> can benefit from current standards efforts on agent communication since the focus of such work is to address heterogeneity by defining a "common language" for communicating agents. In the second part, we discuss ongoing research on agent to agent communication and we present current standards efforts relevant to agent communication...|$|R
