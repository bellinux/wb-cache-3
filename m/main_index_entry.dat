0|1369|Public
40|$|An {{introduction}} to the {{theory and practice of}} cataloguing in Malayalam meant for the librarians and mangers of village libraries and community information centres. The paper covers objectives of the library catalogue, its physical forms, types of catalogues, kinds of catalogue entries, etc. A comparison of alphabetic catalogue and classified catalogue is provided. Cataloguing according to S. R. Ranganathan’s Classified Catalogue Code (CCC) is discussed in detail with examples. Preparing <b>main</b> <b>entry,</b> book <b>index</b> <b>entries</b> for authors, collaborators and series, class <b>index</b> <b>entries,</b> cross reference <b>index</b> <b>entries</b> etc according to CCC are explained in detail with examples of popular Malayalam books. The structure of personal names of Kerala has also been discussed in detail. It is intended as a course material for cataloguing in short library science courses to be conducted for rural developments activists...|$|R
5000|$|Against the <b>index</b> <b>entry</b> [...] a [...] in Table 8 {{copy the}} {{corresponding}} row in Table 1, against the <b>index</b> <b>entry</b> [...] b [...] copy the corresponding row in Table 1, etc., and construct Table 9.|$|R
30|$|In [36], a {{mechanism}} to update propagation mechanism on peer-to-peer networks (P 2 P) is proposed. In this model, intermediate client caches the <b>index</b> <b>entries</b> to locate the node where the contents are cached or stored {{in order to reduce}} the access latency and to balance the workload. Intermediate clients' <b>index</b> <b>entries</b> are maintained by propagating the updated <b>index</b> <b>entries.</b> However, cached <b>index</b> <b>entries</b> may become obsolete due to mobility of MTs (mobile terminals) that incurs changes in the network topology in mobile environments. In [53], a system for stateless server is proposed. Serversperiodically broadcast an invalidation report (IR), in which the updated data items are marked. On the other hand, {{in order to reduce the}} latency, a new type of packet is introduced between IR packets, the updated invalidation report (UIR).|$|R
30|$|Let I_U be an set of <b>index</b> <b>entries</b> over a {{sequence}} of periods of time U. We partition {{a period of time}} over which the workloads supposed to be found in to {{a sequence}} of time units F with the length of each time unit and distances between time units the same as in U. A sequence of time units F obtains a set of <b>index</b> <b>entries</b> I_F. Finally, U is mapped onto F in a way that maximizes the total number of identical <b>index</b> <b>entries</b> in I_U and I_F. For example, let I_F contains the <b>index</b> <b>entries</b> 〈 Monday, {F[5], F[12], F[19], F[26]}〉 and 〈 The first day of a month, {F[11]}〉 and let I_U contains the <b>index</b> <b>entries</b> listed above. Then the best mappings of U are at position F[12] and later on at position F[26] because a location F[11] is closer to F[12] and F[5]. The mappings of U onto F and a set of periodic patterns over U determine the future workloads in F.|$|R
40|$|Abstract — We study new {{hierarchical}} indexing {{approach to}} process XPATH queries. Here, a hierarchical index consists of <b>index</b> <b>entries</b> that are pairs of queries and their (full/partial) answers (called extents). With such an index, XPATH queries can be processed {{to extract the}} results if they match the queries maintained in those <b>index</b> <b>entries.</b> Existing XML path indexing approaches support either child-axis (/) only, or additional descendant-or-self-axis (/) {{but only in the}} query root. Different from them, we propose a novel indexing approach to process a large fragment of XPATH queries, which may use /, /, and wildcards (∗). The key issues are how {{to reduce the number of}} <b>index</b> <b>entries</b> and how to maintain non-overlapping extents among <b>index</b> <b>entries.</b> We show how to compress such index and how to evaluate XPATH queries on it. Experiments show the efficiency of our approaches...|$|R
50|$|Note (5): InnoDB {{automatically}} generates adaptive hash <b>index</b> <b>entries</b> as needed.|$|R
5000|$|However, the {{following}} ICD-10-CM <b>Index</b> <b>entries</b> contain back-references to ICD-10-CM F55.3: ...|$|R
5000|$|<b>Index</b> <b>Entries</b> {{are only}} to 'direct traffic', thus we can {{compress}} them.|$|R
5000|$|Understanding the {{audience}} and understand what kind of <b>index</b> <b>entries</b> they're likely to look for ...|$|R
5000|$|The <b>index</b> <b>entries</b> in {{the first}} column of Table 9 are now deleted to get Table 10: ...|$|R
40|$|Basic functionality: Takes {{an export}} of a PDF file's {{comments}} as a tab-delimited file with page numbers and comments Converts this into an <b>index</b> with <b>index</b> <b>entries</b> and a sorted list of page numbers Support for note referencing with manual entry using syntax (page*n*[number]), e. g., (135 n 3). Note number is optional {{in case of}} sole note on page. Note numbers output using the style 135 n 4 Page ranges supported with manual entry using the syntax (startPage-endPage) Elision of page numbers {{in accordance with the}} Chicago manual of style (enabled by -e/ [...] elide flag) Subheadings supported with manual entry using the syntax entry | subHeading, and exported as left-indented list of <b>index</b> <b>entries</b> Support for multiple index sorting styles including: letter or word sorting ignoring conjunctions such as and, of, and so forth ignoring the Support for grouping <b>index</b> <b>entries</b> by alphabetic order using -g/ [...] group flag Support for custom separator between <b>index</b> <b>entry</b> and locator using -s/ [...] separator flag Support for setting an offset to account for book frontmatter to ensure page numbers render properly, using -o/ [...] offset fla...|$|R
5000|$|See the <b>index</b> <b>entries</b> under [...] "spelling pronunciation" [...] from Leonard Bloomfield, Language (originally {{published}} 1933; current edition 1984, University of Chicago Press, Chicago; [...] ).|$|R
50|$|Unusually, his {{experimental}} scientific {{career is}} well documented. The extensive records and effects have been bequeathed to the National Library of Australia. The NLA <b>index</b> <b>entry</b> is http://catalogue.nla.gov.au/Record/5714531.|$|R
2500|$|Stanton, Jeffrey. (2005) Venice California: Coney Island of the Pacific California: Donahue Publishing[...] [...] De Lay {{has many}} book <b>index</b> <b>entry</b> pages: 114, 129, *140, *141, 148, 150 *=illustrated ...|$|R
5000|$|Goulart, Ron. Ron Goulart's Great History of Comic Books: The Definitive Illustrated History {{from the}} 1890s to the 1980s. NY: McGraw-Hill/Contemporary, 1986. [...] "Draza Mihajlovic", <b>index</b> <b>entry,</b> p. 202.|$|R
40|$|The alphabetization is character-by-character, {{including}} spaces. Numbers {{and symbols}} come first, {{with the exception}} of $. All fonts are treated equally. The <b>index</b> <b>entries</b> refer to the sections or subsections and are hyperlinked. The <b>index</b> <b>entry</b> for a subject from within the exercises and solutions are hyperlinked mostly to the exercises and not to the corresponding solutions. V. i stands for chapter i of the volume V (V œ 8 P, G, N, S<; P=Programming, G=Graphics, N=Numerics, and S=Symbolics), V. i. j stands for section j of chapter i of volume V. V. i. j. k stands for subsection j. k of chapter i of volume V. V. i. Ex. j stands for the jth Exercise from Chapter i of volume V and V. i. Sol. j stands for the jth Solution of Chapter i of volume V. Ov stands for Overview, A stands for Appendix, Pr stands for Preface, and In stands for Introduction. “subject in action ” refers to examples or solutions of exercises making very heavy use of subject, or could be considered archetypical use of subject. <b>Index</b> <b>entries</b> are grouped at most one level deep. <b>Index</b> <b>entries</b> containing compound names, such as Riemann–Siegel, are mentioned on their own and not as a subentry under the first name. Built-in functions are referenced to the section in which they are first discussed. Built-in functions and functions defined i...|$|R
40|$|Subject indexes were an {{important}} step forward for books because they enabled the comparison and correlations of information without extensive reading, re-reading and memorization. In this short paper, {{we focus on the}} user interaction and usage scenario of a new system called ScentIndex that enhances the subject index of an eBook by conceptually reorganizing it to suit particular information needs. Users first enter information needs via keywords describing the concepts they are trying to retrieve and comprehend. ScentIndex then computes what <b>index</b> <b>entries</b> are conceptually related, and reorganizes and displays these <b>index</b> <b>entries</b> on a single page...|$|R
40|$|Recently {{the problem}} of {{indexing}} and locating content in peer-to-peer networks has received much attention. Previous work suggests {{it is useful to}} cache <b>index</b> <b>entries</b> at intermediate nodes that lie on the paths taken by search queries, but until now there has been little focus on how to maintain these intermediate caches. This paper proposes CUP, a protocol for performing Controlled Update Propagation to maintain caches of <b>index</b> <b>entries</b> in peer-to-peer networks. CUP asynchronously builds and maintains caches while answering search queries. CUP is independent of the underlying search mechanism and therefore can be used in the context of any peer-to-peer network...|$|R
5000|$|... #Caption: Simplified {{illustration}} of hard links on typical UN*X filesystem. Note that files [...] "A" [...] and [...] "D" [...] both point to same <b>index</b> <b>entry</b> in filesystem's inode table, making its reference count 2.|$|R
5000|$|The History of Ireland, by Geoffrey Keating, D.D. (1580-1644), {{written in}} the years prior to 1640, and known in the {{original}} Gaelic as , published by the Irish Texts Society, London, 1914. Volume IV. See <b>index</b> <b>entry</b> for Tír Chonaill ...|$|R
5000|$|... "From {{many points}} of view an index is synonymous with a catalogue, the {{principles}} of analysis used being identical, but whereas an <b>index</b> <b>entry</b> merely locates a subject, a catalogue entry includes descriptive specification of a document concerned with the subject".|$|R
40|$|A {{great deal}} of {{analytical}} work {{is done in the}} context of reading, in digesting the semantics of the material, the identification of important entities, and capturing the relationship between entities. Visual analytic environments, therefore, must encompass reading tools that enable the rapid digestion of large amount of reading material. Other than plain text search, subject indexes, and basic highlighting, tools are needed for rapid foraging of text. In this paper, we describe a technique that presents an enhanced subject index for a book by conceptually reorganizing it to suit particular expressed user information needs. Users first enter information needs via keywords describing the concepts they are trying to retrieve and comprehend. Then our system, called ScentIndex, computes what <b>index</b> <b>entries</b> are conceptually related, and reorganizes and displays these <b>index</b> <b>entries</b> on a single page. We also provide a number of navigational cues to help users peruse over this list of <b>index</b> <b>entries</b> and find relevant passages quickly. Compared to regular reading of a paper book, our study showed that users are more efficient and more accurate in finding, comparing, and comprehending material in our system...|$|R
50|$|FreeUndelete takes {{advantage}} of the fact that file deletion is just a minor state change in the system file index. It finds the area(s) where the file contents are located on the disk, then re-creates the <b>index</b> <b>entry</b> to undelete the file.|$|R
50|$|Historically, the full-text {{records were}} kept in large bound volumes, and each volume held <b>indexed</b> <b>entries</b> for a single year, group of years, or partial year. More recently, in many United States offices, the records have been stored on {{microform}} or on computer.|$|R
50|$|Specific {{information}} is provided on fonts, line length, margins, page numbering, style, units and numbers, formulas and equations, paper (format and type), printing equipment, ink.The ANSI/NISO Z39.18 also includes specifications on <b>index</b> <b>entries</b> and errata, {{which are not}} present in the “Nancy style”.|$|R
5000|$|Second-generation {{cognitive}} science {{emerged in the}} 1970s, after LoF was written. On {{cognitive science}} and its relevance to Boolean algebra, logic, and set theory, see Lakoff (1987) (see <b>index</b> <b>entries</b> under [...] "Image schema examples: container") and Lakoff and Núñez (2001). Neither book cites LoF.|$|R
5000|$|... #Caption: TEPIX: Tehran Stock Exchange's <b>main</b> <b>index</b> (2000-2014).|$|R
40|$|Recently {{the problem}} of {{indexing}} and locating content in peer-to-peer networks has received much attention. Previous work suggests caching <b>index</b> <b>entries</b> at intermediate nodes that lie on the paths taken by search queries, but until now {{there has been little}} focus on how to maintain these intermediate caches. This paper proposes CUP, a new comprehensive architecture for Controlled Update Propagation in peer-to-peer networks. CUP asynchronously builds caches of <b>index</b> <b>entries</b> while answering search queries. It then propagates updates of <b>index</b> <b>entries</b> to maintain these caches. Under unfavorable conditions, when compared with standard caching based on expiration times, CUP reduces the average miss latency by as much as a factor of three. Under favorable conditions, CUP can reduce the average miss latency by more than a factor of ten. CUP refreshes intermediate caches, reduces query latency, and reduces network load by coalescing bursts of queries for the same item. CUP controls and confines propagation to updates whose cost is likely to be recovered by subsequent queries. CUP gives peer-to-peer nodes the flexibility to use their own incentive-based policies to determine when to receive and when to propagate updates. Finally, the small propagation overhead incurred by CUP is more than compensated for by its savings in cache misses. ...|$|R
50|$|<b>Index</b> <b>entries</b> {{contain the}} surname and Christian name(s) {{of the bride}} and groom, the year, county and parish where the {{marriage}} took place, and source of the record. The original Index is held at the Society of Genealogists {{and it may be}} searched online through the subscription website FindMyPast.|$|R
25|$|Book <b>indexing,</b> {{dictionary}} <b>entry</b> sorting, and cataloguing in general.|$|R
40|$|In {{response}} to regulatory focus on secure retention of electronic records, businesses are using magnetic disks configured as write-once read-many (WORM) compliance storage devices to store business documents such as electronic mail for their mandated retention periods. A document {{committed to a}} compliance storage device cannot be altered or deleted even by a superuser until its retention period is over, and hence is secure from attacks originating from company insiders. Secure retention, however, is {{only a part of}} a document’s lifecycle: it is often crucial to properly delete documents once their retention period ends. It is relatively simple to delete a document, but much harder to remove its <b>index</b> <b>entries</b> from WORM. Yet if these entries are not obliterated, the contents of the deleted document can often be reconstructed. In this paper, we formally define secure deletion of document entries from an inverted index on compliance storage. We show that previously proposed deletion schemes for compliance storage <b>index</b> <b>entries</b> do not meet the objectives of secure deletion. On the other hand, the naive approach is secure but results in very poor query performance. To provide secure deletion of <b>index</b> <b>entries</b> without compromising lookup efficiency, we propose a novel indexing technique that employs noise terms, merged posting lists, and deletion epochs. Experiments with real-life data show that lookups in our scheme are 5 times faster than the naive approach. 1...|$|R
50|$|Graña y Montero {{is listed}} on the IGBVL, the <b>main</b> <b>index</b> of Lima Stock Exchange.|$|R
40|$|Title {{devised by}} {{cataloguer}} based on Hurley <b>index</b> <b>entry</b> for no. 219.; In box labelled "WA Series 212 - 235, Hurley Collection".; Part of the Hurley negative collection.; Not listed by Hurley, but similar to Hurley no. 219.; Condition: emulsion surface - silvering, edges : nonemulsion surface - scratches, dirty/oily.; Hurley series: [Western Australia]...|$|R
3000|$|All subindices were {{associated}} with a weight of 1 / 3 within the <b>main</b> <b>index.</b> In this case, increasing the weight for subindex II would decrease the index value. In another point of view when considering additional data with missing values, this would wrongly increase the index value. Therefore, a cautious weighting was applied. When using another weight for subindex II such as 5 / 6, the value of <b>main</b> <b>index</b> is marginally modified to 99.9953193006. 5 / 6 would be a too high value for a subindex, {{but in this case}} the result of the <b>main</b> <b>index</b> is not really affected because the associated value of the subindex was rather high ([...] 1 - 28 / 498501) [...].|$|R
40|$|The article {{deals with}} the issue of forming the {{dictionary}} of classification symbols in the electronic catalog VNLU. We have observed the working process of the <b>indexes</b> <b>entry</b> into the bibliographic records. There are examples of errors that violate the dictionary structure and prevent the complex usage of the search elements of electronic databases ASS IRBIS- 64...|$|R
40|$|The 292 {{entries in}} this bibhography are {{arranged}} alphabetically by author or institutional source, and numbered sequentially. The subiect <b>index</b> <b>entries</b> are followedby numbers that refer {{the reader to}} the entry or entnes in the alphabetical hsting. Each alphabetic listing is foHowed by its appropriate sublect entries. An explanation of source and availabihty is given. The 1...|$|R
