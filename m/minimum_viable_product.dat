63|607|Public
2500|$|Startup {{companies}} {{can come in}} all forms and sizes. Some of the critical tasks are to build a co-founder team to secure key skills, know-how, financial resources, and other elements to conduct research on the target market. Typically, a startup will begin by building a first <b>minimum</b> <b>viable</b> <b>product</b> (MVP), a prototype, to validate, assess and develop the new ideas or business concepts. [...] In addition, startups founders do research to deepen {{their understanding of the}} ideas, technologies or business concepts and their commercial potential. A Shareholders' agreement (SHA) is often agreed early on to confirm the commitment, ownership and contributions of the founders and investors and to deal with the intellectual properties and assets that may be generated by the startup. Business models for startups are generally found via a [...] "bottom-up" [...] or [...] "top-down" [...] approach. A company may cease to be a startup as it passes various milestones, such as becoming publicly traded on the stock market in an Initial Public Offering (IPO), or ceasing to exist as an independent entity via a merger or acquisition. Companies may also fail and cease to operate altogether, an outcome that is very likely for startups, given that they are developing disruptive innovations which may not function as expected and for which there may not be market demand, even when the product or service is finally developed. Given that startups operate in high-risk sectors, it can also be hard to attract investors to support the product/service development or attract buyers.|$|E
50|$|Steve Blank {{typically}} {{refers to}} <b>minimum</b> <b>viable</b> <b>product</b> as minimum feature set.|$|E
50|$|Concepts from <b>minimum</b> <b>viable</b> <b>product</b> {{are applied}} in {{other aspects of}} {{startups}} and organizations.|$|E
50|$|CPVT {{equipment}} offerings {{ranging from}} low (LCPVT) to high (HCPVT) concentration {{are now being}} deployed by several startup ventures. As such, longer-term viability of the technical and/or business approach being pursued by any individual system provider is typically speculative. Notably, the <b>minimum</b> <b>viable</b> <b>products</b> of startups can vary widely in their attention to reliability engineering. Nevertheless, the following incomplete compilation is offered {{to assist with the}} identification of some early industry trends.|$|R
50|$|MD5’s Acceleration {{portfolio}} provides funding, prototyping, {{and infrastructure}} {{resources needed to}} translate high potential concepts into <b>minimum</b> <b>viable</b> <b>products</b> or prototypes. The MD5 Proof of Concept Center (PoCC) at the University of Southern Mississippi provides digital design and manufacturing resources in support of distributed prototyping. The PoCC supports the Commandant of the Marine Corps Innovation Challenges by building hardware prototypes of concepts crowdsourced from the active duty Marine community. Other Acceleration portfolio programs include the Defense Innovation Proving Ground, an effort led by the West Virginia University that furnishes DoD research and development infrastructure to startups developing technologies relevant to national security, and the Deep Tech Studio, an Innovator-in-Residence program at New York University that applies technology from DoD laboratories to real-world defense and commercial applications.|$|R
50|$|Criticism: NITB's {{roll out}} of the e-Office suite across almost all federal {{agencies}} is not only overly ambitious but also likely to fail. It seems {{to put together a}} lot of lofty organizational efficiency goals with a set of delivery or citizen-facing targets. In fact, most of the services NITB has provided have been largely conceptual and not sufficient concrete. The process outlines in the adoption process diagram seems devoid of any user-centric design or value proposition formulation. Instead of creating lots of MVPs (<b>Minimum</b> <b>Viable</b> <b>Products)</b> and taking advantage of an iterative and validated learning the process, the e-Office Suite seems to incorporate all the features and functions that various ministries and divisions may need or use. It seems to focus more on the needs of the bureaucrats and government agencies rather than the needs of the end user (citizens of Pakistan) and what services would they need that a ministry or division can provide.|$|R
50|$|A {{secondary}} {{definition of}} Content design {{is the creation}} of any aspect of the game that is not required for the game to function properly and meet the <b>minimum</b> <b>viable</b> <b>product</b> standard. In essence, content is the complexity added to a <b>minimum</b> <b>viable</b> <b>product</b> to increase its value. An example of this is the item list from Final Fantasy. None of the items are necessary for the game to function, but they add value and complexity to the game as a whole.|$|E
5000|$|Finding {{other people}} to create a <b>minimum</b> <b>viable</b> <b>product</b> is a common {{challenge}} for new companies and startups. The concept of minimum viable co-founder is based on looking for a co-founder with the following attributes: ...|$|E
5000|$|The Business Model Canvas {{is used to}} map in {{the major}} {{components}} and activities for a company starting out. The <b>minimum</b> <b>viable</b> <b>product</b> can be designed by using selected components of the Business Model Canvas: ...|$|E
40|$|Context:Development of software-intensive {{products}} and services increasingly occurs by continuously deploying product or service increments, such as new features and enhancements, to customers. Product and service developers must continuously find out what customers want by direct customer feedback and usage behaviour observation. Objective: This paper examines the preconditions for setting up an experimentation system for continuous customer experiments. It describes the RIGHT Model for Continuous Experimentation (Rapid Iterative value creation Gained through High-frequency Testing), illustrating the building blocks required for such a system. Method: An initial model for continuous experimentation is analytically derived from prior work. The model is matched against empirical case study findings from two startup companies and further developed. Results: Building blocks for a continuous experimentation system and infrastructure are presented. Conclusions: A suitable experimentation system requires at least the ability to release <b>minimum</b> <b>viable</b> <b>products</b> or features with suitable instrumentation, design and manage experiment plans, link experiment results with a product roadmap, and manage a flexible business strategy. The main challenges are proper, rapid design of experiments, advanced instrumentation of software to collect, analyse, and store relevant data, and the integration of experiment results in both the product development cycle and the software development process...|$|R
40|$|International audienceNowadays, lots of {{software}} companies rely on web technologies to test market hypothesis and develop viable businesses. They often need to quickly build web {{services that are}} at the core of their <b>Minimum</b> <b>Viable</b> <b>Products</b> (MVPs). MVPs must be reliable and are based on specifications and hypothesis that are likely to change. Model Driven Engineering approaches have been proposed and used to develop and evolve web services. However, these approaches lack the ability to be suitable for both (i) rapid prototyping, (ii) model verification and (iii) compatibility with common programming languages. Here we propose a meta-model to express web services and the related tool to verify models consistency. We adopt a shallow verification process to allow rapid prototyping by developers who are not formal methods experts, while still offering design-time guarantees that improve product quality and development efficiency. Web services are defined using parametric components which enable to express and formally verify web service patterns and to safely reuse them in other contexts. We built a tool to check consistency of models and associated components implementations in order to generate corresponding web services. This allows us to give flexibility to developers, as well as verification support and an easier onboarding for new developers...|$|R
40|$|Context: Development of software-intensive {{products}} and services increasingly occurs by continuously deploying product or service increments, such as new features and enhancements, to customers. Product and service developers must continuously find out what customers want by direct customer feedback and usage behaviour observation. Objective: This paper examines the preconditions for setting up an experimentation system for continuous customer experiments. It describes the RIGHT model for Continuous Experimentation (Rapid Iterative value creation Gained through High-frequency Testing), illustrating the building blocks required for such a system. Method: An initial model for continuous experimentation is analytically derived from prior work. The model is matched against empirical case study findings from two startup companies and further developed. Results: Building blocks for a continuous experimentation system and infrastructure are presented. Conclusions: A suitable experimentation system requires at least the ability to release <b>minimum</b> <b>viable</b> <b>products</b> or features with suitable instrumentation, design and manage experiment plans, link experiment results with a product roadmap, and manage a flexible business strategy. The main challenges are proper, rapid design of experiments, advanced instrumentation of software to collect, analyse, and store relevant data, and the integration of experiment results in both the product development cycle and the software development process...|$|R
5000|$|Product validation: {{particularly}} for internet companies, teams often use marketing as a channel to test and validate product ideas (the <b>minimum</b> <b>viable</b> <b>product</b> or rapid prototyping), before engineering resources {{are committed to}} develop the product ...|$|E
50|$|IMVU {{aimed to}} {{integrate}} instant messaging {{with the high}} revenue per customer of traditional video games. Ries and Harvey did not seek {{a large amount of}} initial funding and released a <b>minimum</b> <b>viable</b> <b>product</b> within six months.|$|E
5000|$|Results from a <b>minimum</b> <b>viable</b> <b>product</b> test aim to {{indicate}} if the product should be built to begin with. Testing evaluates if the initial problem or goal is solved {{in a manner}} that makes it reasonable to move forward.|$|E
40|$|A Startup {{is a human}} {{institution}} {{designed to}} deliver a new product or service under conditions of extreme uncertainty. It does not matter if this institution is formed by two students on a garage or it {{is a group of}} experimented professionals on a successful company of the fortune ranking: Both are entrepreneurs, as they don't even know who their client is or what is what he or she wants. This definition is a complex way to say that a Startup is an experiment. Not just an experiment of "Can we build this product?" but an experiment of "Should we build or not this product?" The objective of this document is to study how a Startup working for the air transport industry (Wayna Ltd) can build a product using the scientific methodology, overpassing the uncertainty {{in order to create a}} sustainable institution. The approach to the management that will be studied, the Lean Startup Methodology (LSM), makes business more efficient, avoiding wasting people's time successfully building something that nobody wants. We will try to focus on the human creativity applying different practices like short circle development, learning accountabilities, real performance indicators, <b>minimum</b> <b>viable</b> <b>products,</b> split tests and more to figure out what is what consumers (airlines) really want...|$|R
40|$|Lean UX {{is a novel}} {{framework}} for bringing lean philosophy to User Experience design. Traditional approach to design often becomes the bottle-neck in agile software devel-opment, requiring heavy up-front work. Lean UX attempts to solve this by applying lean principles to the design work. The framework was originally developed by Jeff Gothelf and Joshua Seiden. Style Guides are a collection of guidelines, rules, standards and best practices. Their aim is to facilitate work by speeding up the design and implementation processes and making the products consistent at all levels throughout the processes. This Master of Science thesis examines how Lean UX framework can be applied in producing a style guide. The thesis focuses mainly on the practical application of Lean UX, with the style guide serving as the vehicle for applying the framework. The con-tributions of this thesis are the practical application of the Lean UX framework and the synthesis {{of some of the}} best practices such as a canvas approach to the design strategy and application of the Google HEART framework together with Lean UX. The thesis was written {{as a part of the}} UX team in the product development of Insta Response. Insta Response is a product family of mission critical emergency center ap-plications. Some of the selling points for the product family are the ease of use and a seamless experience throughout the products. To better achieve this, a style guide was needed. The Lean UX applied together with a UX Canvas and the HEART framework provided a solid foundation for taking the style guide from an idea to building and releasing the style guide. The canvas made the principles of Lean UX visible and concrete and al-lowed to perceive the relationships between the principles. The canvas also lent itself for integrating the HEART framework to the Lean UX process. During this work, two iterations of the Lean UX Build–Measure–Learn loops were run producing two different <b>Minimum</b> <b>Viable</b> <b>Products.</b> The hypotheses and metrics were adjusted between the iterations based on what was learned. The measured metrics indicated that the style guide was fairly successful in achieving its goals. However, some of the results indicate that another format for the style guide might be more efficient. In a wider perspective, the work conducted on the style guide formed a base for the UX team to adopt the Lean UX more widely with its practices...|$|R
5000|$|In {{conservation}} biology, <b>minimum</b> <b>viable</b> population (MVP) size {{helps to}} determine the effective population size when a population is at risk for extinction. [...] The magnitude of a population bottleneck often depends {{on the number of}} individuals remaining after the bottleneck and how that compares to the <b>minimum</b> <b>viable</b> population size. There is considerable debate about the usefulness of the MVP.|$|R
50|$|Releasing and {{assessing}} {{the impact of}} a <b>minimum</b> <b>viable</b> <b>product</b> is a market testing strategy that is used to screen product ideas soon after their generation. It is facilitated by rapid application development tools and languages common to web application development.|$|E
50|$|Marc Andreessen {{defined the}} term as follows: “Product/market fit means {{being in a}} good market with a product that can satisfy that market.”. Many people {{interpret}} product/market fit as creating a so called <b>minimum</b> <b>viable</b> <b>product</b> that addresses and solves a problem or need that exists.|$|E
5000|$|A <b>minimum</b> <b>viable</b> <b>product</b> {{has just}} those core {{features}} sufficient to deploy the product, and no more. Developers typically deploy {{the product to}} a subset of possible customers—such as early adopters thought to be more forgiving, more likely to give feedback, and able to grasp a product vision from an early prototype or marketing information. This strategy targets avoiding building products that customers do not want and seeks to maximize information about the customer per dollar spent. [...] "The <b>minimum</b> <b>viable</b> <b>product</b> is that version of a new product a team uses to collect {{the maximum amount of}} validated learning about customers with the least effort." [...] The definition's use of the words maximum and minimum means it is decidedly not formulaic. It requires judgement to figure out, for any given context, what MVP makes sense.|$|E
50|$|Population {{bottlenecks}} play {{an important}} role in conservation biology (see <b>minimum</b> <b>viable</b> population size) and in the context of agriculture (biological and pest control).|$|R
5000|$|Establish a <b>viable</b> <b>product</b> {{method that}} will endure {{the test of}} a true {{manufacturing}} operation.|$|R
50|$|He {{developed}} the idea into a <b>viable</b> <b>product</b> {{with the help}} of a small leather-goods business his family owned.|$|R
5000|$|Hypotheses can {{be tested}} in several ways. Creating a <b>Minimum</b> <b>Viable</b> <b>Product</b> {{is one way to}} quickly test mockups and ideas in the real world, {{especially}} with Web and mobile startups. Hypotheses change as a result of testing and customer feedback. The changed hypotheses are incorporated into new iterations of the startup business model.|$|E
5000|$|In product development, the <b>minimum</b> <b>viable</b> <b>product</b> (MVP) is {{a product}} with just enough {{features}} to satisfy early customers, and to provide feedback for future development. Some experts suggest that in business to business transactions an MVP also means saleable: [...] "it’s not an MVP until you sell it. Viable means you can sell it".|$|E
50|$|Because {{startups}} typically cannot {{afford to}} have their entire investment depend upon the success of one single product launch, the lean startup methodology proposes that by releasing a <b>minimum</b> <b>viable</b> <b>product</b> that is not yet finalized, the company can then make use of customer feedback to help further tailor their product to {{the specific needs of}} its customers.|$|E
50|$|Any {{conception}} of an optimum population level must lie between a <b>minimum</b> <b>viable</b> {{population of the}} human species and the maximum level of population that can be sustained by the carrying capacity of the planet Earth.|$|R
5000|$|Incentives for Commercialization Activities: early-stage {{technology}} investment funds {{designed to}} assist companies in transforming ideas, concepts, and prototypes into commercial <b>viable</b> <b>products.</b>|$|R
40|$|The {{requirements}} engineering process is typically executed, {{irrespective of the}} process model chosen, for the final commercially viable system. The system requirements generated are for a system deployed and used in its final form and function. However, the first prototype that is generated is typically representative of a <b>minimum</b> <b>viable</b> technology, and represents a degraded set of the initial system requirements specification. Typically, a first prototype {{is used as a}} technology demonstrator, and its failure or success will determine the continuation of the project, with success triggering the allocation of additional financial and personal resources. This paper explores techniques for requirements degradation {{that can be used to}} form the system requirements specification for the first prototype. A requirements Engineering methodology is proposed based upon a survey of literature. It takes into consideration the characteristics of the project, i. e. a market driven, technology implementation research project with limited budget and a flexible timeline executed in an academic environment. The techniques must take into cognizance the main risk items, and core requirements, that need to be demonstrated in the <b>minimum</b> <b>viable</b> technology to secure the future of the project. The degradation cannot undermine or jeopardize the future success of the commercially viable system in determining the subset of requirements for the <b>minimum</b> <b>viable</b> technology...|$|R
50|$|The initial {{implementation}} of WebAssembly support in browsers {{will be based}} on the featureset of asm.js. After the <b>minimum</b> <b>viable</b> <b>product</b> (MVP) release, there are plans to support garbage collection which would make WebAssembly a compilation target for garbage collected programming languages like Java and C#. The team working on WebAssembly includes people from Mozilla, Microsoft, Google and Apple.|$|E
5000|$|Technology {{discovery}} and development - includes locating early-stage technologies, external or internal and testing potential <b>minimum</b> <b>viable</b> <b>product</b> concepts. This step {{can be achieved}} via early customer feedback, individually, or from focus groups. Early product trials as well as process concept testing can be completed through test runs on current equipment or equipment owned by others.|$|E
5000|$|The {{idea for}} a {{consumer}} facing customer service portal was initially created by GripeO co-founder Michael Klanac Jr., after a personal experience with a knife that broke while cutting a pizza. [...] Co-founders Nicholas Campanile and Mark Taylor joined the company to assist with building a <b>minimum</b> <b>viable</b> <b>product,</b> later three other technical co-founders joined to take the product to completion.|$|E
40|$|Most {{contingent}} valuation studies focus on total {{willingness to pay}} (WTP) {{as a measure of}} welfare change. For policy involving species preservation, however, it is important to distinguish between the benefits of preventing a species from going extinct and the benefits of preserving numbers above the <b>minimum</b> <b>viable</b> population (MVP) level. Once MVP is exceeded, marginal WTP becomes relevant. These propositions are illustrated for the case of one charismatic species whose management is much debated, minke whales in the Northeast Atlantic Ocean. It is shown that, for a given estimate of total preservation value, strict conservation and extinction can both be optimal. This finding highlights the importance of collecting marginal values in {{contingent valuation}} surveys. Copyright Kluwer Academic Publishers 1999 preservation of minke whales, marginal willingness to pay, value of <b>minimum</b> <b>viable</b> population,...|$|R
40|$|Theoretical and {{empirical}} work {{has shown that}} once reduced in size and geographical range, species face a considerably elevated risk of extinction. We predict <b>minimum</b> <b>viable</b> population sizes (MVP) for 1198 species based on long-term time-series data and model-averaged population dynamics simulations. The median MVP estimate was 1377 individuals (90...|$|R
40|$|The {{inclusion}} of a <b>minimum</b> <b>viable</b> population in bioeconomic modeling creates at least two complications that are not resolved by using a modified logistic growth function. The first complication {{can be dealt with}} by choosing a different depensational growth function. The second complication relates to the {{inclusion of}} the in situ benefits of wildlife into the analysis. Knowledge about the magnitude of the in situ benefits provides no guide for policy about conservation management. Simply knowing that people are willing to pay a large amount each year to protect a species says nothing about whether one should manage habitat to protect or enhance the species' numbers, unless the species is in imminent danger of extinction. If willingness to pay is to be a guide, it needs to be better tied to population numbers, especially the <b>minimum</b> <b>viable</b> populatio...|$|R
