505|442|Public
5|$|The device uses a 65nm process, {{includes}} {{two to four}} cores, up to 24MB on-die caches, Hyper-Threading technology and integrated memory controllers. It implements double-device data correction, which helps to fix <b>memory</b> <b>errors.</b> Tukwila also implements Intel QuickPath Interconnect (QPI) to replace the Itanium bus-based architecture. It has a peak interprocessor bandwidth of 96GB/s and a peak memory bandwidth of 34GB/s. With QuickPath, the processor has integrated memory controllers and interfaces the memory directly, using QPI interfaces to directly connect to other processors and I/O hubs. QuickPath is also used on Intel processors using the Nehalem microarchitecture, making it probable that Tukwila and Nehalem {{will be able to}} use the same chipsets.|$|E
25|$|Visual {{memory is}} not always {{accurate}} and can be misled by outside conditions. This {{can be seen in}} studies carried out by Elizabeth Loftus and Gary Wells. In one study by Wells, individuals were exposed to misleading information after witnessing an event; they were then tested on their ability to remember details from this event. Their findings included: when given misinformation that contradicts the witnessed event they were less able to recall those details; and whether misinformation was given before or after the witnessed event did not seem to matter. Furthermore, visual memory can be subjected to various <b>memory</b> <b>errors</b> which will affect accuracy.|$|E
25|$|A type system {{associates}} a type {{with each}} computed value and, {{by examining the}} flow of these values, attempts to ensure or prove that no type errors can occur. The given type system in question determines exactly what constitutes a type error, but in general {{the aim is to}} prevent operations expecting a certain kind of value from being used with values for which that operation does not make sense (logic errors); <b>memory</b> <b>errors</b> will also be prevented. Type systems are often specified as part of programming languages, and built into the interpreters and compilers for them; although the type system of a language can be extended by optional tools that perform added kinds of checks using the language's original type syntax and grammar.|$|E
40|$|<b>Memory</b> <b>error</b> {{exploits}} {{rank among}} the most serious security threats. Of the plethora of <b>memory</b> <b>error</b> containment solutions proposed over the years, most {{have proven to be}} too weak in practice. Multi-Variant eXecution (MVX) solutions can potentially detect arbitrary <b>memory</b> <b>error</b> exploits via divergent behavior observed in diversified program variants running in parallel. However, none have found practical applicability in security due to their non-trivial performance limitations. In this paper, we present MvArmor, an MVX system that uses hardware-assisted process virtualization to monitor variants for divergent behavior in an efficient yet secure way. To provide comprehensive protection against <b>memory</b> <b>error</b> exploits, MvArmor relies on a new MVX-aware variant generation strategy. The system supports user-configurable security policies to tune the performance-security trade-off. Our analysis shows that MvArmor can counter many classes of modern attacks at the cost of modest performance overhead, even with conservative detection policies...|$|R
5000|$|AddressSanitizer: <b>Memory</b> <b>error</b> {{detection}} for Linux, OSX, Windows, and more. Part of LLVM.|$|R
5000|$|BoundsChecker: <b>Memory</b> <b>error</b> {{detection}} for Windows based applications. Part of Micro Focus DevPartner.|$|R
500|$|As {{a result}} of storing data bits using {{capacitors}} that have a natural discharge rate, DRAM memory cells lose their state over time and require periodic rewriting of all memory cells, which is {{a process known as}} refreshing. [...] As another result of the design, DRAM memory is susceptible to random changes in stored data, which are known as soft <b>memory</b> <b>errors</b> and attributed to cosmic rays and other causes. [...] There are different techniques that counteract soft <b>memory</b> <b>errors</b> and improve the reliability of DRAM, of which error-correcting code (ECC) memory and its advanced variants (such as lockstep memory) are most commonly used.|$|E
2500|$|NCRP Report No. 153 [...] notes that: “Denisova et al. exposed rats to 1.5 Gy of 1 GeV/u56Feions {{and tested}} their spatial memory in an eight-arm radial maze. Radiation {{exposure}} impaired the rats’ cognitive behavior, since they committed more errors than control rats in the radial maze and {{were unable to}} adopt a spatial strategy to solve the maze. To determine whether these findings related to brain-region specific alterations in sensitivity to oxidative stress, inflammation or neuronal plasticity, three regions of the brain, the striatum, hippocampus and frontal cortex that are linked to behavior, were isolated and compared to controls. Those that were irradiated were adversely affected as reflected through the levels of dichlorofluorescein, heat shock, and synaptic proteins (for example, synaptobrevin and synaptophysin). Changes in these factors consequently altered cellular signaling (for example, calciumdependent protein kinase C and protein kinase A). These changes in brain responses significantly correlated with working <b>memory</b> <b>errors</b> in the radial maze. The results show differential brain-region-specific sensitivity induced by 56Fe irradiation (...) [...] These findings {{are similar to those}} seen in aged rats, suggesting that increased oxidative stress and inflammation may be responsible for the induction of both radiation and age-related cognitive deficits.” ...|$|E
50|$|There {{are several}} {{different}} types <b>memory</b> <b>errors,</b> {{in which people}} may inaccurately recall details of events that did not occur, or they may simply misattribute {{the source of a}} memory. In other instances, imagination of a certain event can create confidence that such an event actually occurred. Causes of such <b>memory</b> <b>errors</b> may be due to certain cognitive factors, such as spreading activation, or to physiological factors, including brain damage, age or emotional factors. Furthermore, <b>memory</b> <b>errors</b> have been reported in individuals with schizophrenia and depression. The consequences of <b>memory</b> <b>errors</b> can have significant implications. Two main areas of concern regarding <b>memory</b> <b>errors</b> are in eyewitness testimony and cases of child abuse.|$|E
5000|$|Intel Parallel Inspector {{performs}} {{run time}} threading and <b>memory</b> <b>error</b> analysis in Windows.|$|R
5000|$|... {{supports}} fast <b>memory</b> <b>error</b> detecting. it {{can detect}} the following types of bugs for the debug mode: ...|$|R
50|$|Two {{types of}} memory that are {{assessed}} during the performance {{in this task}} are reference memory and working memory. Reference memory is assessed when the rats only visit {{the arms of the}} maze which contains the reward. The failure to do so will result in reference <b>memory</b> <b>error.</b> Working <b>memory</b> is assessed when the rats enter each arm a single time. Re-entry into the arms would result in a working <b>memory</b> <b>error.</b>|$|R
50|$|The {{consequence}} of a memory error is system-dependent. In systems without ECC, an error can lead either to a crash or to corruption of data; in large-scale production sites, <b>memory</b> <b>errors</b> {{are one of the}} most common hardware causes of machine crashes. <b>Memory</b> <b>errors</b> can cause security vulnerabilities. A memory error can have no consequences if it changes a bit which neither causes observable malfunctioning nor affects data used in calculations or saved. A 2010 simulation study showed that, for a web browser, only a small fraction of <b>memory</b> <b>errors</b> caused data corruption, although, as many <b>memory</b> <b>errors</b> are intermittent and correlated, the effects of <b>memory</b> <b>errors</b> were greater than would be expected for independent soft errors.|$|E
50|$|However, as {{discussed}} in the article on ECC <b>memory,</b> <b>errors,</b> while not everyday events, are not negligibly infrequent. Even {{in the absence of}} manufacturing defects, naturally occurring radiation causes random errors; tests on Google's many servers found that <b>memory</b> <b>errors</b> were not rare events, and that the incidence of <b>memory</b> <b>errors</b> and the range of error rates across different DIMMs were much higher than previously reported.|$|E
5000|$|Intel Inspector {{improves}} reliability {{by identifying}} <b>memory</b> <b>errors</b> and threading errors.|$|E
5000|$|New Horizons entered {{safe mode}} March 19, 2007 {{due to an}} uncorrectable <b>memory</b> <b>error</b> in the primary Command and Data Handling (C&DH) computer.|$|R
50|$|Parasoft also {{develops}} <b>memory</b> <b>error</b> detection {{technology that}} finds run-time errors in C and C++ programs.Patents were submitted for this technology in 1995 and 1996.|$|R
30|$|Programmers {{enjoy the}} {{flexibility}} provided by memory unsafe languages like C and C++ to address arbitrary virtual memory locations via pointers, while taking {{the risk that}} <b>memory</b> <b>error</b> bugs, such as buffer overflow, would be exploited by malicious users to corrupt security-sensitive data. Attackers can construct a series of <b>memory</b> <b>error</b> exploits {{to be capable of}} writing any data to arbitrary location (Hu et al. 2015). Defense mechanisms like Data Execution Prevention (DEP) (Microsoft 2018) and control flow integrity (CFI) enforcement (Zhang et al. 2013; Ding et al. 2017) prevent the attacker from inserting code and corrupting control data, like return addresses and function pointers, and further controlling the execution.|$|R
5000|$|Reliability: Find {{deadlocks}} and <b>memory</b> <b>errors</b> {{that cause}} lockups & crashes ...|$|E
50|$|Allows {{deterministic}} {{behavior on}} real-time systems avoiding the out of <b>memory</b> <b>errors.</b>|$|E
5000|$|In <b>memory</b> <b>errors,</b> the {{faulting}} program accesses {{memory that}} it should not access. Examples include: ...|$|E
40|$|The {{purpose of}} this study was to develop and {{evaluate}} the effectiveness of a technique to help pilots prioritize tasks. A part-task simulator experiment was conducted in which three groups of general aviation pilot participants flew pre- and post-training flights. Participants in two groups received task prioritization training between the flights while those in a control group did not. Task prioritization error rates and prospective <b>memory</b> <b>error</b> rates from pre- and post-training flights were compared. Task prioritization and <b>memory</b> <b>error</b> rates improved in the training groups and did not improve in the control group. However, these findings must be considered preliminary, as several issues remain to be resolved by follow-on studies...|$|R
50|$|MATLAB {{implements}} copy on edit, where arrays {{which are}} copied have their actual memory storage replicated only when their content is changed, possibly {{leading to an}} out of <b>memory</b> <b>error</b> when updating an element afterwards instead of during the copy operation.|$|R
25|$|On March 19, 2007 the Command and Data Handling {{computer}} {{experienced an}} uncorrectable <b>memory</b> <b>error</b> and rebooted itself, causing the spacecraft {{to go into}} safe mode. The craft fully recovered within two days, with some data loss on Jupiter's magnetotail. No impact on the subsequent mission was expected.|$|R
50|$|<b>Memory</b> <b>errors</b> {{often lead}} to the belief of new memories, which are problematic. In the case of {{eyewitness}} testimony new false memories can {{often lead to}} wrong information and lack of conviction or wrongful conviction of individuals. Also {{in the case of}} child abuse, <b>memory</b> <b>errors</b> can lead to the creation of false traumatic childhood memories, which can lead to false accusations and loss of trust.|$|E
50|$|In {{systems such}} as Unix and Linux, the errors are {{reported}} separately (e.g. segmentation fault for <b>memory</b> <b>errors).</b>|$|E
5000|$|Valgrind runs {{programs}} on a virtual processor and can detect <b>memory</b> <b>errors</b> (e.g., misuse of malloc and free) and race conditions in multithread programs.|$|E
5000|$|<b>Memory</b> {{corruption}} <b>errors</b> can be broadly {{classified into}} four categories: ...|$|R
40|$|Abstract. An “out of <b>memory</b> ” <b>error</b> can be catastrophic for a program, {{especially}} one {{written in a}} language such as Java that uses memory allocation frequently. Handling such an error can easily lead to its reoccurrence. A handler will often need memory while it is freeing resources (by persisting data to secondary storage, or clearing caches). A simple technique involves pre-allocating {{a large chunk of}} memory that is then freed {{at the start of the}} handler. I report some experience using this technique and discuss some of the problems that arise when reasoning about the behavior of <b>memory</b> <b>error</b> handlers. ...|$|R
5000|$|Kolawa {{was granted}} 20 patents for {{software}} technologies he has invented. His patents include runtime <b>memory</b> <b>error</b> detection technology (Patent [...] and [...] - granted in 1998), statically analyzing source code quality using rules (Patent [...] - granted in 1999), and automated unit test case generation technology (Patent [...] and [...] - granted in 1998).|$|R
5000|$|Memory errors: parity {{checking}} detects when a memory error has occurred. Error correction code (ECC) can correct limited <b>memory</b> <b>errors</b> so that processing can continue.|$|E
50|$|Illusory conjunctions {{can also}} occur in memory. In vision, {{images can be}} {{combined}} through a lapse in memory of an image that is filled by physical stimuli Illusory conjunctions often occur through <b>memory</b> <b>errors</b> because the situations in which illusory conjunctions happen involve multiple tasks or tasks that commonly divide a person's attention. While <b>memory</b> <b>errors</b> can aid {{in the formation of}} illusory conjunctions their formation is not dependent on <b>memory</b> <b>errors.</b> These <b>memory</b> <b>errors</b> can be caused by a multitude of objects in a space increases the amount of things to be processed and stored to memory increases. This increase in objects creates a prime situation for memory to lapse and form an illusory conjunction. Illusory conjunctions in short term auditory memory occur also. When a set of tones is played in a sequence, illusory conjunctions of 'what' and 'when' can occur. For example, if a sequence of tones begins with the note C, and later includes the note C#, and the note C# is repeated {{at the end of the}} sequence, there is a tendency for listeners to assume erroneously that this last note had also been the first note in the sequence. Illusory conjunctions of pitch and duration in tone sequences also occur.|$|E
5000|$|As {{a result}} of storing data bits using {{capacitors}} that have a natural discharge rate, DRAM memory cells lose their state over time and require periodic rewriting of all memory cells, which is {{a process known as}} refreshing. [...] As another result of the design, DRAM memory is susceptible to random changes in stored data, which are known as soft <b>memory</b> <b>errors</b> and attributed to cosmic rays and other causes. There are different techniques that counteract soft <b>memory</b> <b>errors</b> and improve the reliability of DRAM, of which error-correcting code (ECC) memory and its advanced variants (such as lockstep memory) are most commonly used.|$|E
50|$|Electric Fence (or eFence) is {{a memory}} {{debugger}} written by Bruce Perens. It {{consists of a}} library which programmers can link into their code to override the C standard library memory management functions. eFence triggers a program crash when the <b>memory</b> <b>error</b> occurs, so a debugger {{can be used to}} inspect the code that caused the error.|$|R
5000|$|The other {{physical}} characteristics, determined by physical examination, are {{the number of}} memory chips, and whether {{both sides of the}} memory [...] "stick" [...] are populated. Modules with the number of RAM chips equal to some power of two do not support <b>memory</b> <b>error</b> detection or correction. If there are extra RAM chips (between powers of two), these are used for ECC.|$|R
5000|$|False memories, {{sometimes}} referred to as confabulation, refer to the recollection of inaccurate details of an event, or recollection of a whole event that never occurred. Studies investigating this <b>memory</b> <b>error</b> have been able to successfully implant memories among participants that never existed, such as being lost in a mall as a child (termed the lost in the mall technique) or spilling a bowl of punch at a wedding reception. In this case, false memories were implanted among participants by their family members who claimed that the event had happened. This evidence demonstrates the possibility of implanting false memories on individuals by leading them to remember such events that never occurred. This <b>memory</b> <b>error</b> can be particularly worrisome in judicial settings, in which witnesses may have false recollections of a crime after it has happened, especially when told by others that particular things may have happened which did not. [...] Another area of concern regarding false memories is in cases of child abuse.|$|R
