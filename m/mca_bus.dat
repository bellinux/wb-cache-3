11|2|Public
50|$|The first Number Nine {{graphics}} {{cards were}} ISA bus, pre-VGA standard cards {{that had no}} graphics accelerator chips. In the latter 1980s to early 1990s, Number Nine made ISA and <b>MCA</b> <b>bus</b> graphics cards based on Texas Instruments' TIGA coprocessors.|$|E
50|$|RM {{released}} PCs {{based on}} Intel 286 and 386 processors under the RM Nimbus name. The PC-286 and early PC-386 versions were termed the M Series {{due to the}} <b>MCA</b> <b>bus</b> used, and had a similar case design to that used by later models of the PC-186.|$|E
50|$|Although the <b>MCA</b> <b>bus</b> had {{a slight}} {{performance}} advantage over EISA (bus speed of 10 MHz, compared to 8.33 MHz), EISA contained {{almost all of the}} technological benefits that MCA boasted, including bus mastering, burst mode, software configurable resources, and 32-bit data/address buses. These brought EISA nearly to par with MCA from a performance standpoint, and EISA easily defeated MCA in industry support.|$|E
5000|$|IBM's 1987 {{introduction}} of the incompatible and proprietary MicroChannel Architecture (<b>MCA)</b> computer <b>bus,</b> for its Personal System/2 (PS/2) line.|$|R
50|$|The first ATTO {{product was}} the SiliconDisk, a SCSI-based {{solid-state}} disk, released in 1989. ATTO received its first OEM contract with Kodak shortly thereafter, in 1990. In 1992, ATTO introduced the ISA, EISA and MicroChannel (<b>MCA)</b> host <b>bus</b> adapters for the PC market at the Comdex trade show. By 1995, ATTO added to its product line yet {{again with the}} introduction of the ExpressPCI SCSI-3 Accelerator, which received the MacUsers Editorâ€™s Choice award that year.|$|R
50|$|These systems {{used the}} Intel Pentium {{processor}} with clock frequencies of 75, 90, 100, 133 and 166 MHz. Initial systems had selectable bus architecture (SelectaBus) through a replaceable riser-card. Options were either PCI/ISA or PCI/MCA. The ISA or <b>MCA</b> <b>bus</b> would {{be connected to}} the PCI bus using a PCI to ISA/MCA bridge. The advantage of this is that even operating systems without MCA support worked on the system, as long as the MCA portion was not required.|$|E
50|$|Meanwhile, IBM {{began to}} worry that it was losing control of the {{industry}} it had created. In 1987, IBM released the PS/2 line of computers, which included the <b>MCA</b> <b>bus.</b> MCA included numerous enhancements over the 16-bit AT bus, including bus mastering, burst mode, software configurable resources, and 32-bit capabilities. However, {{in an effort to}} reassert its dominant role, IBM patented the bus, and placed stringent licensing and royalty policies on its use. A few manufacturers did produce licensed MCA machines (most notably NCR), but overall the industry balked at IBM's restrictions.|$|E
50|$|Server {{licensing}} {{on early}} versions of NetWare 286 {{was accomplished by}} using a key card. The key card was designed for an 8-bit ISA bus, and had a serial number encoded on a ROM chip. The serial number had to match the serial number of the NetWare software running on the server. To broaden the hardware base, particularly to machines using the IBM <b>MCA</b> <b>bus,</b> later versions of NetWare 2.x did not require the key card; serialised license floppy disks were used {{in place of the}} key cards.|$|E
5000|$|IBM's <b>MCA</b> <b>bus,</b> {{developed}} for the PS/2 in 1987, was a competitor to ISA, also their design, but fell out of favor due to the ISA's industry-wide acceptance and IBM's licensing of MCA. EISA, the 32-bit extended version of ISA championed by Compaq, was used on some PC motherboards until 1997, when Microsoft declared it a [...] "legacy" [...] subsystem in the PC 97 industry white-paper. Proprietary local buses (q.v. Compaq) and then the VESA Local Bus Standard, were late 1980s expansion buses that were tied but not exclusive to the 80386 and 80486 CPU bus. The PC/104 bus is an [...] bus that copies the ISA bus.|$|E
5000|$|The ET4000AX {{was a major}} {{advancement}} over Tseng Labs' earlier ET3000 SVGA chipset, {{featuring a}} new 16-bit host interface controller with deep FIFO buffering and caching capabilities, along with support for higher resolutions with up to 1MB of DRAM or VRAM memory. The FIFO buffers and cache functions {{had the effect of}} greatly improving host interface throughput, and therefore offering substantially improved redraw performance compared to the ET3000 and most of its contemporaries. The interface controller also offered support for IBM's <b>MCA</b> <b>bus,</b> in addition to an 8 or 16-bit ISA bus. [...] The ET4000AX could also support the emerging VESA Local Bus standard with some additional external logic, albeit with a 16-bit bus width.|$|E
50|$|The bus {{used in the}} {{original}} PC became very popular, and it was subsequently named ISA. While it was popular, it was more {{commonly known as the}} PC-bus or XT-bus; the term ISA arose later when industry leaders chose to continue manufacturing machines based on the IBM PC AT architecture rather than license the PS/2 architecture and its <b>MCA</b> <b>bus</b> from IBM. The XT-bus was then retroactively named 8-bit ISA or XT ISA, while the unqualified term ISA usually refers to the 16-bit AT-bus (as better defined in the ISA specifications.) The AT-bus is an extension of the PC-/XT-bus and is in use to this day in computers for industrial use, where its relatively low speed, 5 volt signals, and relatively simple, straightforward design (all by year 2011 standards) give it technical advantages (e.g. noise immunity for reliability).|$|E
40|$|Version 3 The {{purpose of}} this paper is to {{introduce}} the reader to the concepts and techniques required to write a device driver for a character class device on the Micro Channel Architecture (<b>MCA)</b> <b>bus</b> in Version 3. xx of IBM's AIX operating system (denoted by just AIX in this document). It attempts to tie together the major pieces of development information dispersed throughout the AIX manuals. It also includes some information not found in the manuals which is crucial to the development of a working device driver. This document by no means provides complete coverage of the topic, and references for further information will be made liberally throughout. It may best be regarded as a road map to AIX device driver development. The reader is assumed to be proficient in UNIX/AIX applications programming and the C programming language. Comment...|$|E

