249|299|Public
25|$|A Macro is a rule {{of pattern}} that {{specifies}} how a certain input sequence (often a sequence of characters) should be mapped to an output sequence according to defined process. Frequently used or repetitive sequences of keystrokes and <b>mouse</b> <b>movements</b> can be automated.|$|E
500|$|The disk {{loading time}} was the most criticised aspect from reviewers. Houghton found the loading times [...] "hefty" [...] and {{recommended}} that the player use two disk drives instead of one, as constant disk swapping was required in the game. Ricketts similarly found the swapping of [...] "half a dozen" [...] floppy disks a [...] "nightmare" [...] on the Atari ST. Keating found the [...] "huge" [...] amount of disk swapping to be the game's largest drawback, {{as well as the}} long loading times that accompanied it. Davies stated that scrolling times were [...] "painfully slow" [...] due to the excessive disk accessing. White stated that the game had a disk access routine [...] "so bad" [...] that it was almost impossible to access icons during gameplay, as the cursor movement was always a second behind actual <b>mouse</b> <b>movements.</b>|$|E
500|$|A new utility called MacroMaker was {{included}} with System 6. When enabled, it allowed users to record mouse and keyboard input as [...] "macros." [...] MacroMaker had a unique user interface, which aimed {{to look and}} act like a tape recorder. MacroMaker was criticized for its lack of features when compared to Microsoft's AutoMac III, which was already available commercially. As MacroMaker only recorded the locations of mouse-clicks inside windows and not what was being clicked or exactly when, users soon found {{that it could not}} be used to automate more sophisticated programs. The pre-recorded clicks would miss buttons if they had moved or failed to appear upon playback. In addition, MacroMaker had limitations wherein it recorded the start and end locations of <b>mouse</b> <b>movements</b> but not the precise path of the movements, and its macros did not handle situations that required the macro to wait {{for a period of time}} before or after an action. MacroMaker was not compatible with System 7, which marked the introduction of AppleScript as an alternative.|$|E
50|$|PC {{versions}} of the game support <b>mouse</b> <b>movement</b> and a new, heavily improved text parser. <b>Mouse</b> <b>movement</b> was still in a primitive state {{at the time of}} the game's release, so Roger is unable to automatically find his way around obstacles in the game world, instead stopping if he encounters a barrier. Computer mice were relatively new at the time, and Sierra's <b>mouse</b> <b>movement</b> would greatly improve in subsequent games.|$|R
50|$|<b>Mouse</b> <b>movement</b> correction: To re-record mouse actions into smooth, ‘straight-line’, flowing movements.|$|R
5000|$|Instantaneous mode: {{different}} {{users can}} immediately access the computer {{after the last}} keystroke or <b>mouse</b> <b>movement</b> by the active user.|$|R
500|$|For example, the {{original}} window system, called 8½, exploited these possibilities as follows. Plan 9 represents the user interface on a terminal {{by means of}} three pseudo-files: , which can be read by a program to get notification of <b>mouse</b> <b>movements</b> and button clicks, , {{which can be used}} to perform textual input/output, and , writing to which enacts graphics operations (see bit blit). The window system multiplexes these devices: when creating a new window to run some program in, it first sets up a new namespace in which , [...] and [...] are connected to itself, hiding the actual device files to which it itself has access. The window system thus receives all input and output commands from the program and handles these appropriately, by sending output to the actual screen device and giving the currently focused program the keyboard and mouse input. The program does not need to know if it is communicating directly with the operating system's device drivers, or with the window system; it only has to assume that its namespace is set up so that these special files provide the kind of input and accept the kind of messages that it expects.|$|E
2500|$|In March 2016 a {{security}} researcher based in Barcelona, Spain, demonstrated that laboratory techniques using time measurement via JavaScript at the 1-millisecond level could potentially identify and correlate a user's unique <b>mouse</b> <b>movements</b> {{provided that the}} user has visited the same [...] "fingerprinting" [...] website with both the Tor browser and a regular browser. This proof of concept exploits the [...] "time measurement via JavaScript" [...] issue which has been an open ticket on the Tor Project for ten months.|$|E
2500|$|Because the IBM PC did {{not have}} a {{quadrature}} decoder built in, early PC mice used the RS-232C serial port to communicate encoded <b>mouse</b> <b>movements,</b> as well as provide power to the mouse's circuits. The Mouse Systems Corporation version used a five-byte protocol and supported three buttons. The Microsoft version used a three-byte protocol and supported two buttons. Due to the incompatibility between the two protocols, some manufacturers sold serial mice with a mode switch: [...] "PC" [...] for MSC mode, [...] "MS" [...] for Microsoft mode.|$|E
25|$|KeePass {{features}} a built-in password generator that generates random passwords. Random seeding {{can be done}} through user input (<b>mouse</b> <b>movement</b> and random keyboard input).|$|R
40|$|Abstract — Voice-enabled {{applications}} {{have caught}} considerable research interest in recent years. It is generally believed that voice based interactions {{can improve the}} working efficiencies and the overall productivities. Quantitative evaluations on the performance boost by using such Human-Computer interactions (HCI) are therefore necessary to justify the claimed efficacies and {{the usefulness of the}} HCI system. In this paper, a quadtree based approach is proposed to analyze the <b>mouse</b> <b>movement</b> distributions in the proposed Voice-enabled Computer-Aided Design (VeCAD) system. The mouse tracker keeps a record of all the <b>mouse</b> <b>movement</b> during the solid modeling process, and a quadtree based approach is applied to analyze the mouse trajectory distributions in both the traditional CAD and the VeCAD system. Our experiments show that the <b>mouse</b> <b>movement</b> is significantly reduced when voice is used to activate CAD modeling commands. Quadtree; Voice; CAD; Mouse trajectory; HCI; Solid modelling I...|$|R
5000|$|Delay mode: a {{selectable}} delay, e.g. 5 seconds, occurs {{before another}} user can access the computer {{after the last}} keystroke or <b>mouse</b> <b>movement</b> by the active user.|$|R
2500|$|... reCAPTCHA's slogan was [...] "Stop Spam, Read Books.", {{until the}} {{introduction}} of {{a new version of the}} reCAPTCHA plugin in 2014; the slogan has now disappeared from the website and from the classic version of the reCAPTCHA plugin. A new system featuring image verification was also introduced. In this system, users are asked to just click on a checkbox (the system will verify whether the user is a human or not, for example, with some clues such as already-known cookies or <b>mouse</b> <b>movements</b> within the ReCAPTCHA frame) or, if it fails, select one or more images from a selection of nine images.|$|E
5000|$|... 3DMM Animation Pro: (2002) Binds <b>mouse</b> <b>movements</b> to the keyboard, {{allowing}} {{directors to}} create more fluid movements on screen.|$|E
50|$|<b>Mouse</b> <b>movements</b> {{can be used}} {{to infer}} a user's intent and focus while {{browsing}} a website. By using <b>mouse</b> <b>movements</b> in usability testing, researchers can determine if users are confused, if their expectations are met, where their attention is focused, and much additional information. This tool can be especially beneficial in conjunction with other techniques used in usability testing, such as think aloud procedures, as this information can lead to a better mouse movement model.|$|E
40|$|Course woody debris {{may be an}} {{important}} resource for many small mammals by providing protection and food sources. The author tracked cotton <b>mice</b> <b>movements</b> via radiotelemetry and powder in managed loblolly pine forests. Most day refuges for mice were associated with debris, including rotting stumps (69 %), upturned root boles (14 %) and under fallen logs (9 %). Stumps used were more larger and more highly decomposed. Night time telemetry indicated that <b>mice</b> <b>movements</b> were more closely associated with the logs. Rooting stumps are {{an important}} resource for cotton mice...|$|R
40|$|Abstract. We present PressureMove a {{pressure}} based interaction technique that enables simultaneous control of pressure input and <b>mouse</b> <b>movement.</b> Simultaneous control of pressure and <b>mouse</b> <b>movement</b> can support tasks that require control of multiple parameters, like rotation and translation of an object, or panand-zoom. We implemented four variations of PressureMove techniques for a 2 D position and orientation matching task where pressure manipulations mapped to object orientation and <b>mouse</b> <b>movement</b> to object translation. The Naive technique mapped raw pressure-sensor values {{to the object}} rotation; the Rate-based technique mapped discrete pressure values to speed of rotation and Hierarchical and Hybrid techniques that use a two-step approach to control orientation using pressure. In user study that compared the four techniques with the default mouse-only technique we found that Rate-based PressureMove was the fastest technique with the least number of crossings and as preferred as the default mouse in terms of user-preference. We discuss the implications of our user study and present several design guidelines...|$|R
40|$|Voice-enabled {{applications}} {{have caught}} considerable research interest in recent years. It is generally believed that voice based interactions {{can improve the}} working efficiencies and the overall productivities. Quantitative evaluations on the performance boost by using such Human-Computer interactions (HCI) are therefore necessary to justify the claimed efficacies and {{the usefulness of the}} HCI system. In this paper, a quadtree based approach is proposed to analyze the <b>mouse</b> <b>movement</b> distributions in the proposed Voice-enabled Computer-Aided Design (VeCAD) system. The mouse tracker keeps a record of all the <b>mouse</b> <b>movement</b> during the solid modeling process, and a quadtree based approach is applied to analyze the mouse trajectory distributions in both the traditional CAD and the VeCAD system. Our experiments show that the <b>mouse</b> <b>movement</b> is significantly reduced when voice is used to activate CAD modeling commands. © 2009 IEEE. published_or_final_versionThe IEEE International Conference on Virtual Environments, Human-Computer Interfaces, and Measurements Systems (VECIMS) 2009, Hong Kong, 11 - 13 May 2009. In Conference Proceedings, 2009, p. 196 - 20...|$|R
50|$|Communications are not encrypted, {{with key}} presses, <b>mouse</b> <b>movements</b> and {{clipboard}} contents sent to Synergy clients easily {{able to be}} sniffed on network traffic.|$|E
50|$|Between version 1.4.11 and 1.6.3, {{communications}} {{could be}} encrypted and key presses, <b>mouse</b> <b>movements</b> and clipboard contents could be encrypted {{prior to being}} sent to Synergy clients.|$|E
5000|$|HyperTalk also {{provided}} script {{control over the}} built-in drawing tools, simply by scripting the needed changes in paint tools and simulating <b>mouse</b> <b>movements</b> using the [...] and the [...] commands.|$|E
50|$|The {{direction}} signals {{connected to}} two more general-purpose I/O inputs of the 6522. When {{the operating system}} detected the <b>mouse</b> <b>movement,</b> these inputs differentiated left from right, and up from down.|$|R
5000|$|... #Caption: Mouse cursor in Impulse Tracker. A {{more precise}} cursor (per-pixel resolution) was {{achieved}} by regenerating the glyphs of characters used where the cursor was visible, at each <b>mouse</b> <b>movement</b> in real-time.|$|R
50|$|Though not {{commonly}} referred to as optical mice, nearly all mechanical <b>mice</b> tracked <b>movement</b> using LEDs and photodiodes to detect when beams of infrared light did and didn't pass through holes in an incremental rotary encoder wheel. Thus the primary distinction of “optical mice” is not their use of optics, but their complete lack of moving parts to track <b>mouse</b> <b>movement,</b> in lieu of an entirely solid-state system.|$|R
50|$|Homeworld 2 {{shares the}} {{movement}} system and three-dimensional play area of its predecessor. Units are moved three-dimensionally {{using a combination}} of <b>mouse</b> <b>movements</b> and key presses to modify the z-axis of the destination position.|$|E
50|$|Silk Test {{supports}} both {{recording and}} descriptive programming methods {{to identify and}} verify the elements in the AUT. It also identifies any <b>mouse</b> <b>movements</b> and keystrokes, enabling testing against custom objects in the AUT.|$|E
5000|$|USB {{version is}} not specified, but if supported, {{it would have}} been {{intended}} for contemporary USB standards. The USB connector is intended for passing <b>mouse</b> <b>movements</b> from a projector's wireless remote into the computer's presentation software.http://www.infocus.com/~/media/library/how_to_guide/computers/infocus_PCLaptop_how_toguide_computers_en%20pdf.ashx ...|$|E
40|$|In current radiologists’ workstations, a {{scroll mouse}} is {{typically}} {{used as the}} primary input device for navigating image slices and conducting operations on an image. Radiological analysis and diagnosis rely on careful observation and annotation of medical images. During analysis of 3 D MRI and CT volumes, thousands of mouse clicks are performed everyday, which can cause wrist fatigue. This paper presents a dynamic control-to-display (C-D) gain <b>mouse</b> <b>movement</b> method, controlled by an eyegaze tracker as the target predictor. By adjusting the C-D gain according to {{the distance to the}} target, the mouse click targeting time is reduced. Our theoretical and experimental studies show that the <b>mouse</b> <b>movement</b> time to a known target can be reduced by up to 15 %. We also present an experiment with 12 participants to evaluate the role of eyegaze targeting in the realistic situation of unknown target positions. These results indicate that using eyegaze to predict the target position, the dynamic C-D gain method can improve pointing performance by 8 % and reduce the error rate over traditional <b>mouse</b> <b>movement...</b>|$|R
40|$|This study {{focuses on}} the further {{development}} and testing of an existing <b>Mouse</b> <b>Movement</b> Biometric Identification system. Building on the research and work from a previous implementation of a mouse biometric system, the study focuses on enhancing the data capture program to enrich the data with more features to identify the user, collecting more samples of data, normalization of the data into the required format and comparing the results to previous conclusions. A total of 205 data files were collected from users to further develop and test the software. All features of the <b>Mouse</b> <b>Movement</b> system are discussed as well as final recommendations for future research and improvement has been included...|$|R
5000|$|Real time {{strategy}} games often use the mouse wheel {{to change the}} altitude of the camera; many also allow the view to either tilt or pan with <b>mouse</b> <b>movement</b> when the scroll wheel button is held down.|$|R
5000|$|The {{problem with}} using eye {{tracking}} in usability testing is the required hardware and then expense. Additionally, eye tracking {{is limited to}} small sample sizes and abnormal browsing environments. Mouse tracking, on the other hand, is inexpensive and the data can be collected from any computer. It is in this capacity that mouse tracking was re-invented in HCI research. Eye tracking researchers in the late 1990s noticed patterns between the eye and <b>mouse</b> <b>movements.</b> [...] Based on these findings, researchers who had been tracking click data realized {{there might be more}} to learn from the mouse. In 2001 Mon-Chu Chen, John Anderson, and Myeong-Ho Sohn at Carnegie Mellon University, began explicitly investigating whether tracking <b>mouse</b> <b>movements</b> {{could be used as a}} proxy for tracking eye movements. This research has continued through the 2000s and to the present. [...] The general findings in the research are that the correlation is not one to one, but there is a relationship between eye and <b>mouse</b> <b>movements,</b> which, in turn suggests <b>mouse</b> <b>movements</b> can in fact be used to determine a user's focus of attention. More recent research has shown that the correlation depends strongly on the user behavior at that time, such as whether the user is reading with the mouse, moving it to perform a click, or leaving it idle. Furthermore, the mouse position actually correlates better with past eye-gaze positions, meaning that people will typically look somewhere before moving their mouse there about 700ms later. Generally, tracking mouse positions can lead to a vast improvement to understanding the user compared with relying on mouse clicks only. In other words, click data informed researchers of a users' primary focus of attention, or their end choice. However, looking at all of the <b>mouse</b> <b>movements</b> can inform the researcher to other options that were of interest to the user but were not selected by clicking, which can lead to better overall understanding of the user's thought process.|$|E
50|$|The visor is {{equipped}} with a NEC TOKIN combined accelerometer/magnetometer/rate gyroscope 3-degrees of freedom motion sensor used to emulate <b>mouse</b> <b>movements</b> (typically to look around in first person shooters), a pair of ear buds and an integrated microphone.|$|E
50|$|The Linux kernel generates entropy from {{keyboard}} timings, <b>mouse</b> <b>movements,</b> and IDE timings {{and makes}} the random character data available to other operating system processes through the special files /dev/random and /dev/urandom. This capability was introduced in Linux version 1.3.30.|$|E
50|$|Keylogger and Mouse Logger: the malware agent {{can capture}} each keystroke, <b>mouse</b> <b>movement</b> and click that the target user makes. Combined with screen grabs, {{this can be}} used to obtain {{passwords}} that are entered using a virtual on-screen keyboard.|$|R
40|$|We {{propose a}} novel true random number {{generator}} using <b>mouse</b> <b>movement</b> and a one-dimensional chaotic map. We utilize the x-coordinate of the <b>mouse</b> <b>movement</b> to be the length of an iteration segment of our TRNs and the y-coordinate to be the initial value of this iteration segment. And, when it iterates, we perturb the parameter with the real value produced by the TRNG itself. And {{we find that the}} TRNG we proposed conquers several flaws of some former mouse-based TRNGs. At last we take experiments and test the randomness of our algorithm with the NIST statistical test suite; results illustrate that our TRNG is suitable to produce true random numbers (TRNs) on universal personal computers (PCs) ...|$|R
40|$|Determining a user’s affective {{state can}} be an {{important}} element when trying to understand human-computer interactions. Accurately assessing affect during system use, however, can be very difficult, especially in a non-laboratory setting. Extensive previous research in neuroscience has shown that arousal and valence influence motor control. In this research, the prior relevant neuroscience findings inform the investigation of <b>mouse</b> <b>movement</b> behavior under conditions of low and high arousal as well as positive and negative valence. A controlled laboratory experiment was conducted, providing support for hypotheses predicting that arousal and valence may be inferred by monitoring for differences in the distance, speed, and trajectory of <b>mouse</b> <b>movement.</b> Implications of these results for future research and practice are explored...|$|R
