0|8203|Public
40|$|Abstract—Building {{software}} from source is {{often viewed as}} a “solved problem ” by software engineers, as there are many mature, well known tools and techniques. However, anecdotal evidence suggests that these tools often do not effectively address the complexities of building <b>multilanguage</b> <b>software.</b> To investigate this apparent problem, we have performed a qualitative study {{on a set of}} five <b>multilanguage</b> open source <b>software</b> packages. Surprisingly, we found build system problems that prevented us from building many of these packages out-of-thebox. In this paper, we describe the results of this exploratory study, identify a set of common build patterns and anti-patterns, and outline research directions for improving the build process. One such finding is that multilanguage packages avoid certain build problems by supporting compilation-free extension. As well, we find evidence that concerns from the application and implementation domains may “leak ” into the build model, with both positive and negative effects on the resulting build systems. Index Terms—build systems, <b>multilanguage</b> <b>software,</b> programming languages I...|$|R
40|$|Abstract. Today, {{documents}} of different programming languages can {{be involved in}} the implementation of a single software application. These applications are called multi-language software applications. Source code of one programming language may interact with code of a different programming language. By refactoring a document of one programming language the interaction of this document with {{documents of}} another programming language may break. We present a study on refactoring <b>multilanguage</b> <b>software</b> applications. After that, we automated object-oriented refactorings on a multi-language software application. We evaluate our findings with different case studies and report our results. ...|$|R
40|$|Abstract—ERP {{systems are}} often {{supposed}} to be implemented and deployed in multi-national companies. On the other hand, an ERP developer may plan to market and sale its product in various countries. Therefore, an EPR system should {{have the ability to}} communicate with its users, who usually have different languages and cultures, in a suitable way. EPR support of Multilanguage capability is a solution to achieve this objective. In this paper, an agent oriented architecture including several independent but cooperative agents has been suggested that helps to implement Multilanguage EPR systems. Keywords—enterprise resource planning, <b>Multilanguage,</b> <b>software</b> architecture, agent oriented architecture, intelligence, learning, translation. A I...|$|R
40|$|Synergia 2 is a beam {{dynamics}} {{modeling and}} simulation application for high-energy accelerators such as the Tevatron at Fermilab and the International Linear Collider, which is now under planning and development. Synergia 2 is a hybrid, <b>multilanguage</b> <b>software</b> package comprised of two separate accelerator physics packages (Synergia and MaryLie/Impact) and one high-performance computer science package (PETSc). We describe our approach to producing a set of beam dynamics-specific software components based on the Common Component Architecture specification. Among other topics, we describe particular experiences with the following tasks: using Python steering to guide the creation of interfaces and to prototype components; working with legacy Fortran codes; and an example component-based, beam dynamics simulation...|$|R
40|$|Abstract. The component-based {{software}} engineering approach {{based on the}} Scientific Interface Definition Language(SIDL), Babel, and the Common Component Architecture have been employed successfully in high-performance <b>multilanguage</b> <b>software</b> projects dominated {{by the development of}} new code. Large scientific projects that rely on existing object-oriented (non-component) code, however, have additional automation requirements, including: (1) fully automated component wrapper generation from non-component code; (2) single expression of interfaces so that maintainers and users have no development lag or code mismatch between changes to the wrapped code and changes to the wrappers; and (3) extensible source code markup for directing the wrapping process of ambiguous cases. These issues are not currently addressed by the highperformance software development tool community. We describe a combination of extensions to the SIDL syntax, the Babel code generation processes, and the bocca tool to address these issues, providing dramati...|$|R
40|$|This paper {{discusses}} some of {{the relevant}} decisions taken {{in the design of}} an object oriented platform which provides transparent access to remote and persistent objects, developed at INESC in the framework of the Esprit project Comandos. Introduction In spite of the growing interest in distributed systems and the widespread use of computer networks, the development of distributed applications is still a difficult task {{due to the lack of}} adequate support. The development of platforms able of handling transparently distribution, heterogeneity and <b>multilanguage</b> <b>software</b> in the framework of an object model has been perceived as a promising direction in several research projects[2, 1, 9]. During the last years, we have implemented the IK [6, 10] platform providing support for execution of volatile, persistent and distributed objects under the same programming paradigm. In our model an object has an interface defined exclusively by operations. Objects are manipulated through untyped reference [...] ...|$|R
40|$|The {{development}} of platforms able of handling transparently distribution, heterogeneity and <b>multilanguage</b> <b>software</b> {{in the framework}} of an object model has been perceived as a promising direction This paper presents an object oriented platform which provides transparent access to remote and persistent objects defined within the Esprit project Comandos. We start by describing our object and computational model together with the basic architecture. The structure of objects and references which tries to provide acceptable efficiency is explained. This paper main focus is the description of the basic operations provided by the platform: object invocation, dynamic linking and garbage collection. Some performance measurements try to highlight the points which deserved particular attention on our implementation. A special effort was dedicated to support transparent sharing of objects. We provide a general mechanism which allows the programmer to define the policy she wants to enforce. For effi [...] ...|$|R
40|$|Abstract. The {{meaning of}} <b>software</b> <b>support</b> and its all actions are expounded in this paper. And <b>software</b> <b>support</b> is {{classified}} to three classes. The model of <b>software</b> <b>support</b> is built. The Software Supportability and its affected factors are discussed. The <b>software</b> <b>support</b> problem and its solution methods {{of command and}} control system are discussed in this paper. SUMMARY OF <b>SOFTWARE</b> <b>SUPPORT</b> As {{an important part of}} information equipments, <b>software</b> <b>support</b> {{is very different from the}} traditional hardware support. Here, we give the definition of <b>software</b> support: <b>software</b> <b>support</b> is activities which ensure the software in using continuously and completely support performing tasks. All activities include the technical and management activities, the technical activities mainly include fault diagnosis, software modification, software testing, installation and other activities. The management activities mainly include support planning, personnel exercitation and training, establishment of security system, setting support agency and other activities. <b>SOFTWARE</b> <b>SUPPORT</b> CLASSIFICATIO...|$|R
30|$|Finally, <b>software</b> <b>support</b> for ADE {{has been}} overviewed as well (Section Overview of <b>software</b> <b>support</b> for ADE).|$|R
25|$|Metadata must {{currently}} {{be included}} in the codec. There is fairly good <b>software</b> <b>support</b> for Vorbis metadata—often referred to as comments. But <b>software</b> <b>support</b> for Theora and FLAC comments in Ogg containers is very limited.|$|R
50|$|Vivisimo <b>software</b> <b>supported</b> both {{structured}} and unstructured information.|$|R
5000|$|The {{investigation}} of <b>software</b> <b>support</b> for program derivation.|$|R
5000|$|... #Subtitle level 3: <b>Software</b> <b>supporting</b> the Bethe-Salpeter {{equation}} ...|$|R
5000|$|Chief Architect <b>Software</b> <b>supports</b> import {{and export}} [...]dae files.|$|R
5000|$|Some of the <b>software</b> <b>supporting</b> Rawzor {{compressed}} [...]rwz images: ...|$|R
5000|$|Most {{contemporary}} multi-platform backup <b>software</b> <b>support</b> this protocol, including: ...|$|R
25|$|Quantum {{chemistry}} and {{solid state physics}} <b>software</b> <b>supporting</b> several methods.|$|R
2500|$|Amiketo is a <b>software</b> <b>supporting</b> the Esperanto {{alphabet}} for , , and ...|$|R
5000|$|Quantum {{chemistry}} and {{solid state physics}} <b>software</b> <b>supporting</b> several methods.|$|R
5000|$|The {{following}} notable <b>software</b> <b>support</b> JPEG XR {{through a}} Plug-in: ...|$|R
5000|$|X-Fi <b>software</b> <b>support</b> (not yet {{implemented}} in the ZiiLABS SDKs) ...|$|R
50|$|B.A., B.D., Th.M., <b>Software</b> <b>Support</b> Representative, Sperry Univac, Blue Bell, Pennsylvania.|$|R
5000|$|As a media player, the Zune <b>software</b> <b>supports</b> the {{following}} formats: ...|$|R
5000|$|Davao Technical Expert for Computer Hardware & <b>Software</b> <b>Support,</b> Inc (TechSupport) ...|$|R
5000|$|Comparison of {{reference}} management <b>software</b> for <b>software</b> <b>supporting</b> the MODS format ...|$|R
5000|$|The <b>software</b> <b>supports</b> the {{creation}} of a variety of media formats: ...|$|R
5000|$|Mathematical and <b>software</b> <b>support</b> for {{computing}} machinery, complexes, {{systems and}} networks ...|$|R
5000|$|... 2012 Selected CGI Group Inc. {{to provide}} IT {{infrastructure}} and <b>software</b> <b>support</b> ...|$|R
50|$|The MythTV <b>software</b> <b>supports</b> TV tuner cards fully {{compatible}} with V4L-DVB kernel drivers.|$|R
5000|$|Free (Free as in Freedom) <b>Software</b> <b>Support</b> for Start-ups, other {{organizations}} and Individuals ...|$|R
5000|$|The <b>software</b> <b>supports</b> an {{unlimited}} number of members, forums, posts, threads and attachments.|$|R
40|$|Manufacturing {{companies}} face a {{big challenge}} {{to bridge the gap}} between their business and manufacturing processes. The urge to increase efficiency makes it necessary to align the business and manufacturing processes. Small and Medium-sized Enterprises (SMEs) experience several barriers to adopt <b>software</b> <b>support</b> for manufacturing operations. This paper gives an overview of a research study conducted in Belgian SMEs. The research studied the current adoption of <b>software</b> <b>support</b> for manufacturing operations and the barriers that SMEs experience to invest in this type of software. The study is concluded with a number of considerations to enable the adoption of <b>software</b> <b>support</b> for manufacturing operations by SMEs...|$|R
50|$|<b>Software</b> <b>support</b> {{included}} Lotus 1-2-3 v2, Symphony 1.1, Framework II and Microsoft Word 3.|$|R
50|$|Some <b>software</b> <b>support</b> for SBGN {{is already}} available, mostly for the Process Description language.|$|R
50|$|If {{you want}} to acquire a JTAG adapter, you first need to decide what systems it must support. Everything else follows from that, {{including}} your software options. Low-end adapters may cost less than $US 50 and have limited hardware and <b>software</b> <b>support.</b> High-end adapters can cost a hundred times as much, including <b>software</b> <b>support,</b> and have corresponding improvements in capability.|$|R
5000|$|Much {{security}} and cryptography <b>software</b> <b>supports</b> the AES instruction set, including the following core infrastructure: ...|$|R
