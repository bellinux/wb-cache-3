6|1|Public
50|$|Network Monitor {{has been}} {{replaced}} by Microsoft <b>Message</b> <b>Analyzer.</b>|$|E
5000|$|Microsoft Network Monitor {{has been}} {{superseded}} by Microsoft <b>Message</b> <b>Analyzer</b> ...|$|E
50|$|Microsoft {{gradually}} implemented ribbons {{in other}} software. The fourth wave of Windows Live Essentials applications, including Mail, Photo Gallery, Movie Maker and Writer, featured a ribbon. On Windows 7, Paint and WordPad feature ribbons. On Windows 8, File Explorer followed suit. Ribbons {{also appeared in}} SQL Server Report Builder, Dynamics CRM 2011, Microsoft WebMatrix, Microsoft Mathematics v4.0, Microsoft EMET 4.0 and Microsoft <b>Message</b> <b>Analyzer.</b> Internet Explorer, Notepad and Visual Studio, however, {{do not have a}} ribbon.|$|E
40|$|A {{statistical}} {{mathematical model}} of the discharge in a single optic nerve fiber is proposed, based on a discharge with intervals between impulses distributed independently according to a gamma distribution ("gamma discharge"). A light stimulus distorts the time axis of this discharge according to a "frequency function" which is characteristic of the stimulus. A linear filter is described which calculates {{the likelihood of a}} certain stimulus when the nerve fiber message is fed into it. This filter forms the basis of theoretical nerve <b>message</b> <b>analyzers</b> for three visual experiments: (a) The detection of the occurrence of a flash of light of known intensity and time of occurrence, (b) the detection of the time of occurrence of a flash of known intensity, and (c) The estimation of the intensity of a flash occurring at a known time. Possible neural mechanisms in the brain for analyzing optic nerve messages, based on the above mathematical models, are suggested. Changes of excitability or discharge frequency correspond to the output of the likelihood filter. Any such mechanism must be sufficiently plastic to have a response matched to each expected stimuus for most efficient vision near threshold...|$|R
40|$|A complex running system, {{such as the}} NOvA online data acquisition, {{consists}} {{of a large number}} of distributed but closely interacting components. This paper describes a generic realtime correlation analysis and event identification engine, named <b>Message</b> <b>Analyzer.</b> Its purpose is to capture run time abnormalities and recognize system failures based on log messages from participating components. The initial design of analysis engine is driven by the DAQ of the NOvA experiment. The <b>Message</b> <b>Analyzer</b> performs filtering and pattern recognition on the log messages and reacts to system failures identified by associated triggering rules. The tool helps the system maintain a healthy running state and to minimize data corruption. This paper also describes a domain specific language that allows the recognition patterns and correlation rules to be specified in a clear and flexible way. In addition, the engine provides a plugin mechanism for users to implement specialized patterns or rules in generic languages such as C++...|$|E
40|$|In this paper, a data {{aggregation}} gateway framework (DA-GW) for constrained application protocol (CoAP) group communications is proposed. The DA-GW framework {{is designed to}} improve the throughput performance and energy efficiency of group communication to monitor and control multiple sensor devices collectively with a single user terminal. The DA-GW consists of four function blocks—the <b>message</b> <b>analyzer,</b> group manager, message scheduler and data handler—and three informative databases—the client database, resource database and information database. The DA-GW performs group management and group communication through each functional block and stores resources in the informative databases. The DA-GW employs international standard-based data structures and provides the interoperability of heterogeneous devices used in various applications. The DA-GW is implemented using a Java-based open source framework called jCoAP to evaluate the functions and performance of the DA-GW. The experiment {{results showed that the}} DA-GW framework revealed better performance than existing group communication methods in terms of throughput and energy consumption...|$|E
40|$|Linnaeus University {{is aiming}} at {{implementing}} a Data Stream Centre to provide streaming of accumulated {{data from the}} websites’ newspapers and articles {{in order to help}} its scientists of University to have faster and easier access to the mentioned data. This mentioned project consists of multiple parts and the part we are responsible to research about is first nominating some text streaming protocols based on the criteria that are important for Linnaeus University and then evaluating them. Those protocols are responsible to transfer text stream from the robots (that read articles from the websites) to the data stream center and from them to the scientists. Some KPIs (Key Performance Indicators) are defined and the protocols are evaluated based on those KPIs. In this study we address evaluation of network streaming protocol by starting to read about the protocol’s specifications and nominating four protocols including TCP, HTTP 1. 1, Server-Sent Events and Websocket. Then, fake robot and server are implemented by each protocol to simulate the functionality of real robots, servers and scientists in LNU data stream center project. Later, the evaluation is done in the mentioned simulated environment using RawCAP, Wireshark and <b>Message</b> <b>Analyzer.</b> The results of this study indicated that the best suited protocols for transferring text stream data from robot to data stream center and from data stream center to scientist are TCP and Server-Sent Events, respectively. In the concluding part, other protocols are also suggested in the order of priority...|$|E

