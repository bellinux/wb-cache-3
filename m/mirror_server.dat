13|65|Public
50|$|Even though Active Virus Shield is {{no longer}} {{available}} officially, {{the latest version of}} the program can still be obtained from the <b>mirror</b> <b>server</b> that it is hosted on. Help is also still offered for those already using the application.|$|E
5000|$|Unmetered content: Internode {{also runs}} content servers {{such as a}} cluster of Steam content servers. Further 'unmetered' content {{available}} via the national Agile backbone network includes relays of popular streaming audio sources and a 10 terabyte <b>mirror</b> <b>server.</b> includes a file mirror and radio streams ...|$|E
5000|$|MirrorBrain (GPL, Apache License) is a {{real-time}} Metalink generator {{and download}} redirector. It can either return Metalinks, or automatically redirect non-Metalink clients (per HTTP redirection) to a <b>mirror</b> <b>server</b> near them. Transparent negotiation of Metalinks, embedding PGP signatures, Metalink/HTTP and other advanced features are supported. It {{is used for}} instance by openSUSE and OpenOffice.org.|$|E
40|$|A common {{method used}} to reduce {{document}} retrieval times {{is the use of}} content replication i. e., <b>mirror</b> <b>servers.</b> The <b>mirror</b> <b>servers</b> provide several alternate sites to download a specific document and were traditionally used to increase the availability of content. Recently, several studies focused on using multiple mirror sites to concurrently download portions of a document from a set of mirror sites. Following are some of the issues involved in using multiple mirror sites concurrently: (a) selection of the "best" <b>mirror</b> <b>servers</b> from the client, (b) coping with dynamic overloading of the network and servers, and (c) coping with faults. This paper briefly examines two existing schemes for concurrent downloading or parallel-access downloading, or paraloading as it is called. It proposes a third paraloading scheme called the Dynamic Parallel Access. The performance of this scheme is experimentally evaluated. Recommendations for further improvements are also discussed. 1...|$|R
40|$|The <b>Mirrored</b> <b>Server</b> (MS) {{architecture}} {{for network}} games uses multiple <b>mirrored</b> <b>servers</b> across multiple locations {{to alleviate the}} bandwidth bottleneck and to reduce the client-to-server delay time. Response time in MS can be reduced by optimally assigning clients to their mirrors. The goal of optimal client-to-mirror-assignment (CMA) is to achieve the minimum average client-to-mirror delay considering player joins (CMA-J) and leaves (CMA-L), and mirrors with limited capacity. The existing heuristic solution considers only CMA-J, and thus the average delay of the remaining players may increase when one or more players leave. Furthermore, the solution ignores mirror capacity, which may overload mirrors. In this paper we present a resource usage model for the MS architecture, and formally state the CMA problem. For both CMA-J and CMA-L we propose a polynomial time optimal solution and a faster heuristic algorithm that obtains near optimal CMA. Our simulations on randomly generated MS topologies show that our algorithms significantly reduce the average delay of the existing solution. We also compare {{the merits of the}} solutions in terms of their optimality and running time efficiency. Keywords: Client/server, distributed <b>servers,</b> game delay, <b>mirrored</b> <b>servers,</b> MMOG, network game, peer-to-peer. 1...|$|R
40|$|The <b>Mirrored</b> <b>Server</b> (MS) {{architecture}} uses multiple <b>mirrored</b> <b>servers</b> {{across multiple}} locations {{to alleviate the}} bandwidth bottleneck in the Client/Server (C/S) architecture. Each mirror receives and multicasts player updates to the others, simulates the game, and disseminates the new game state to players. However, keeping the game state consistent between mirrors {{in the presence of}} network delay, and maintaining game responsiveness requires each server in MS to simulate the game multiple times for each game update, and additional times in the event of costly rollbacks. In this paper we propose the Enhanced <b>Mirrored</b> <b>Server</b> (EMS) architecture. Like in the Peer-to-Peer architecture, EMS allows peers to exchange updates directly, resulting in a higher tolerance to delay at the mirrors. We propose using bucket synchronization in the mirrors so that each server in EMS simulates the game only once for each update and does not require rollbacks. The server disseminates updates to clients only in the event of inconsistency, and thus its outgoing bandwidth is lower than in MS. Our EMS uses cryptographic techniques to provide security equivalent to C/S, and prevents the timestamp cheat possible in MS. Our analytical analysis and simulations show the advantages of EMS over MS...|$|R
50|$|Special Agent Jennifer Marsh (Diane Lane) is a widowed {{single parent}} {{living in a}} {{suburban}} Portland home with her daughter, Annie Haskins (Perla Haney-Jardine), and her mother, Stella Marsh (Mary Beth Hurt). At night, she works in the FBI's cybercrime division with Griffin Dowd (Colin Hanks), fighting identity theft and similar crimes. One night, an anonymous tip leads them to a website called KillWithMe.com. The site features a streaming video of a cat being tortured and killed. The website cannot be shut down, as the creator knew that someone would try and built into it a fail-safe; every time the server is closed, a <b>mirror</b> <b>server</b> immediately replaces it.|$|E
5000|$|ENPS {{integrates}} scripts, wire feeds, device control, {{and production}} {{information in a}} server/client environment. On the server side, ENPS runs an identical backup server (called a [...] "buddy") at all times as a fail-safe. If the primary server fails, all users are redirected to the buddy server {{until such time as}} the primary comes back on-line. All document changes are queued on the buddy and copied back to the primary automatically when it returns to production. Note {{that this is not a}} <b>mirror</b> <b>server</b> as the changed data is copied to the buddy, but there is no direct replication inherent within the intercommunications between the servers, so if the data is corrupted due to hardware failure on one server, this corruption will not be replicated to the [...] "buddy".|$|E
40|$|The parallelized FTP (P-FTP) approach, {{attempts}} {{to solve the}} problem of slow downloads of large multimedia files while optimizing the utilization of mirror servers. The approach presented in this paper downloads a single file from multiple mirror servers simultaneously, where each <b>mirror</b> <b>server</b> transfers a portion of the file. The P-FTP server calculates the optimum division of the file for efficient transfer. The dynamic monitoring ability of P-FTP maintains the file transfer process at the optimized level no matter how abruptly network and <b>mirror</b> <b>server</b> characteristics change...|$|E
50|$|Re-insert {{at random}} or Move to back {{might be used}} to organise a list of <b>mirror</b> <b>servers,</b> so that once a server has been used for downloading, it goes {{to the back of the}} queue, to {{discourage}} the user from selecting it again.|$|R
50|$|Methods {{exist to}} {{overcome}} such limitations. For example, modified DNS servers (such as lbnamed) can routinely poll <b>mirrored</b> <b>servers</b> for availability and load factor. If a server does not reply as required, the server can be temporarily {{removed from the}} DNS pool, until it reports that it is once again operating within specs.|$|R
40|$|As {{a growing}} number of web sites {{introduce}} mirrors to increase throughput, the challenge for clients becomes choosing which mirror will offer the best performance when a document is to be retrieved. In this paper we present findings from measuring 9 clients scattered throughout the United States retrieving over 490, 000 documents from 45 production web <b>servers</b> which <b>mirror</b> three different sites. Our findings are intended as an aid in the design of protocols for choosing among <b>mirrored</b> <b>servers.</b> Though server performance varies widely, we have observed only small, time independent variations in the relative performance of <b>mirror</b> <b>servers.</b> Further, a change in an individual server's transfer time is not a strong indicator that its performance relative to other servers has changed. We have also found that clients wishing to achieve near-optimal performance may only need to consider a small number of servers, rather than all mirrors of a particular site. Finally, we noticed that the choice of [...] ...|$|R
40|$|IPv 6 {{addresses}} {{are longer}} than IPv 4 addresses, and are so capable of greater expression. Given an IPv 6 address, conventions and standards {{allow us to}} draw conclusions about how IPv 6 is being used on the node with that address. We show a technique for analysing IPv 6 addresses {{and apply it to}} a number of datasets. The datasets include addresses seen at a busy <b>mirror</b> <b>server,</b> at an IPv 6 -enabled TLD DNS server and when running traceroute across the production IPv 6 network. The technique quantifies differences in these datasets that we intuitively expect, and shows that IPv 6 is being used in different ways by different groups...|$|E
40|$|Graph/network theory {{results are}} {{applicable}} to problems in communications. As a representative example, the node coloring problem in graph theory is {{applicable to the}} channel assignment problem in cellular mobile communication systems. The node coloring problem is NP-complete, meaning that optimally solving it is very difficult. Therefore, we use heuristic algorithms for the channel assignment problem. In this case, the graph theory results show the legitimacy of using heuristic techniques. On the other hand, we can directly apply graph theory to communication problems. For example, on contents delivery services in the Internet, we place mirror servers that provide the same contents on the network. Location problems on flow networks are applicable to <b>mirror</b> <b>server</b> allocation problems. In a simple case, we can efficiently solve the problem. In this paper, we concentrate on multi-hop wireless networks and consider the relationship between their problems {{and the results of}} graph/network theory...|$|E
40|$|Server {{replication}} {{is commonly}} used to improve the performance experienced by a large, globally-distributed client base. Based on traces from 193 real mirror servers, {{we find that the}} servers with the lowest transfer times for a file maintain very good performance over long periods of time; the average <b>mirror</b> <b>server</b> does not. Servers o ering top service comprised {{only a small fraction of}} the total number of servers hosting the file. We offer a server selection technique that identifies the best performing server from a large collection of servers; Without further testing, the server selected achieves performance that is very close to selecting the best possible server for at least a month of downloads. Such a technique yields lower average file transfer times in almost all cases than policies that perform tests on a per-download basis and select servers with the lowest network hop count or lowest roundtrip time...|$|E
40|$|This paper {{investigates the}} {{placement}} problem of <b>mirrored</b> web <b>servers</b> in ring networks, where each client accesses the closest <b>mirrored</b> <b>server.</b> Without budget constraint, we propose an efficient algorithm that computes the optimal placement with time complexity 2 O(| C | � | V |). With budget constraint, if all candidate servers charge the same fee, we propose an algorithm {{to compute the}} optimal placement in time 2 3 O(k | C | | V |) by using dynamic programming; if candidates charge different fees, we prove the problem is NP-hard, and further propose two heuristic algorithms. The performance of the proposed placement schemes is evaluated with the traffic-reduction ratio and the budget-usage ratio {{over a wide range}} of system parameters. Key words: web server; web proxy; mirrored servers; ring networks. 1...|$|R
40|$|Abstract — The IDMaps project aims {{to provide}} a {{distance}} map of the Internet from which relative distances between hosts on the Internet can be gauged [1]. Many distributed systems and applications can benefit from such a distance map service, for example, a common method to improve user perceived performance of the Internet is to place data and <b>server</b> <b>mirrors</b> closer to clients. When a client tries to access a <b>mirrored</b> <b>server,</b> which <b>mirror</b> should it access? With IDMaps, the closest mirror can be determined based on distance estimates between the client and the mirrors. In this paper we investigate both graph theoretic methods and ad hoc heuristics for instrumenting the Internet to obtain distance maps. We evaluate {{the efficacy of the}} resulting distance maps by comparing the determinations of closest replica using known topologies against those obtained using the distance maps. I...|$|R
40|$|The {{purpose of}} this paper is to present {{protocols}} for efficient load balancing across replicated multimedia servers in a Metropolitan Area Network. Current multimedia infrastructures, even when they use <b>mirrored</b> <b>servers,</b> do not have standardized load balancing schemes. Existing schemes frequently require participation from the clients in balancing the load across the servers efficiently. We propose two protocols in this paper for fair load balancing without any client-side processing being required. Neither protocol requires any change to the network-level infrastructure. Using network packet loss and packet transmission delay as the chief metrics, we show the effectiveness of the protocols through extensive simulations...|$|R
40|$|Mobile IPv 6 enables mobile {{clients to}} retain its network {{connections}} while roaming into foreign networks. However, in a multi-server environment whereby multiple mirror servers are located at different IP networks providing the same service, a mobile client consuming a service from a particular server continues consuming the service from the same server after roaming into foreign network, ignoring the existence of other mirror servers that may give higher throughput based on mobile client's latest network location. In this paper, we propose an active anycast-based server selection model that enables roaming mobile client to detect and access a <b>mirror</b> <b>server</b> that gives better performance based on the mobile client's latest network location. Two schemes are proposed for such performance enhancement, namely: Best Performance Scheme (BPS), and Acceptable Performance Scheme (APS). In BPS, mobile client re-initiates the server selection process whenever it roams into a foreign network. In APS, mobile client re-initiates the server selection process only if the throughput of the current server drops to a dissatisfactory level. Simulation is performed to evaluate the proposed schemes and its results are presented and discussed...|$|E
40|$|This work {{presents}} HSTCP-LP (High-Speed TCP Low Priority), {{a high-speed}} TCP stack whose {{goal is to}} utilize only the excess network bitrate (bandwidth) {{as compared to the}} “fair-share ” of bitrate as targeted by other TCP variants. By giving a strict priority to all non-HSTCP-LP cross-traffic flows, HSTCP-LP enables a simple two-class prioritization without any support from the network. It enables large file backups to proceed without impeding ongoing traffic, a functionality that would otherwise require a multi-priority or separate network. One class of applications for HSTCP-LP is low-priority background file transfer over high-speed networks. Examples are bulk data transfers of huge scientific data across the Internet, database replication, or Internet content distribution. A second class of applications is available bitrate optimization (e. g., to select a <b>mirror</b> <b>server</b> with the highest available bitrate). Current techniques first estimate the available bitrate and then download data via a transport protocol. HSTCP-LP, since it only uses excess/available bitrate, is able to estimate available bitrate while doing a useful data transfer. We develop HSTCP-LP by merging two existing protocols: the first is High Speed TCP [1]; and the second is TCP-LP [2]. The goal is for HSTCP-LP to inherit the desired functionality of both, TCP-LP’s ability to give strict priority to the cross-traffic, and HSTCP’s efficiency in utilizing the exces...|$|E
40|$|The {{modern age}} of {{information}} explosion poses stiff challenges in providing right information to right user in right time. In {{such a situation}} Information Technology (IT) comes to rescue of libraries and information centers. Today’s changing scenario in publishing and IT fields has forced the library and informational professionals to accept the changing demands placed on the profession today. In view of this changing scenario an attempt is made by Sardar Vallabhbhai National Institute of Technology (SVNIT) Library, Surat to introduce the application of recent advanced technology in their library. The computerization of SVNIT library including all modules i. e acquisition, cataloguing, serial control, circulation and OPAC was introduced in 1998 using LIBSYS Software and the software is upgraded {{from time to time}} depending on the situation. An attempt was made to create digital library by digitized question papers and other reports, procuring CD-ROM databases along with e-resources subscribed under INDEST. In addition INDEST e-resources the library is also subscribing other e-resources like Taylor & Francis Journals online, ASTM Standards, ESDU. The library has also procured 6, 034 e-books, 174 volumes of e-handbooks, 230 volumes of e-encyclopedia and 407 e-reference books with perpetual access against onetime payment. The library has introduced online video library by converting videocassettes in to CD and keeping the same in <b>Mirror</b> <b>server,</b> which is accessible from any system in the campus. E-prints server is established recently. In addition to the digital library a Virtual Library is created at URL [URL] {{for the benefit of the}} students and faculties. Most recently RFID (Radio Frequency Identification) technology is introduced with Library Security gate (2 EAS pedestal), self-checkout and check in facility to save the time of transaction and to minimize the manpower in the circulation counter...|$|E
40|$|Many service {{providers}} on the Internet use multiple <b>mirror</b> <b>servers</b> {{to cope with}} request congestion. Here, the problem is how to select the best server out of them. We propose a DNS-based mechanism for server selection with preferred policies. DNS (Domain Name System) is used in almost all services and implementations. Therefore, our approach is generally applicable. The mechanism consists of two components. One is query preprocessor. The other is network status observer. The network status observer probes the status of network periodically. The query preprocessor traps queries to the DNS, and selects the optimal server automatically under a given policy. Some practical experiments substantiated the effectiveness of our mechanism...|$|R
40|$|The IDMaps project aims at {{providing}} a distance {{map of the}} Internet from which the relative distances between points on the Internet can be gauged [1]. Distance map is a service which many distributed systems and applications can benefit from; for example, a common method to improve user perceived performance of the Internet is to place data and <b>server</b> <b>mirrors</b> closer to the clients. When a client tries to access a <b>mirrored</b> <b>server,</b> which <b>mirror</b> should it access? With IDMaps, the closest mirror can be determined based on distance estimates between the client and the mirrors. In this paper we investigate both graph theoretic methods and ad hoc heuristics for instrumenting the Internet to obtain distance maps. We evaluate {{the efficacy of the}} resulting distance maps by comparing the determinations of closest replica using known topology against those obtained from the distance maps. I. INTRODUCTION The IDMaps project [1] aims at {{providing a}} distance 1 map of the Internet from which the r [...] ...|$|R
40|$|In {{the current}} {{internet}} scenario more virtual <b>servers</b> and <b>mirror</b> <b>servers</b> are utilized to maintain load {{balance of the}} heterogeneous peer to peer networks. One of the most current existing works developed a state balancing system based on probability distribution of peer abilities, loads of virtual servers, and incomplete data of global peers. On the other hand state balancing method recognizing peer node capacities are difficult a) as the demand and weight of the peer differ time to time which requires to be addressed b) In account of this, the peer node persistence needs to be managed with its CPU cycles for processing the client demands c) Load diversion of peer neighbors supply {{to the difficulty of}} corresponding peer nodes on serving their vital demand d) At the lower dimension of load balancing, various data forma...|$|R
40|$|Abstract – Earth System Science Server (ES 3) is a {{suite of}} {{technologies}} for managing end-to-end science data product creation, maintenance, updating, and dissemination. ES 3 has four main components: Metadata management keeps track of external data objects imported, processes run, data objects created, data products delivered, and lineage (ancestordescendent relationships between processes and data streams. Process management uses a generic Linux cluster to perform both science and production processing. Data management keeps all data online in <b>mirrored</b> <b>server</b> pairs, acquired “just-in-time” to leverage plummeting hardware costs. Data product dissemination exposes products via three mechanisms: wellknow URIs that follow community-standard naming schemes and support OpenDAP services; seamless layers in a precomputed hierarchy of resolutions, via the Microsoft TerraServer; and library-style searches using the Alexandria Digital Library web services. The ES 3 prototype will manage the creation, updating and distribution of snow-covered area, snow albedo, and snow water equivalence data products. I...|$|R
40|$|Clusters of PC's are {{increasingly}} being used to build high-capacity web sites. We develop and evaluate a method of building a Single System Image (SSI) cluster that {{does not require a}} central dispatcher. In our Clone Cluster method, which builds on the existing ONE-IP method, a group of <b>mirrored</b> <b>server</b> machines with identical MAC and IP addresses are configured on a shared-medium LAN. Each machine filters incoming IP packets based on a hash of IP source addresses. Unlike ONE-IP, our method does not require router configuration changes. We build and evaluate a Linuxbased, two-PC cluster that uses an odd/even filter. Simulation results show that the effect of server selection method on mean response time is less significant for heavy-tailed interarrival times than for exponential interarrival times. Simulation results show that response time performance from a Clone Cluster can be very close to that of a centrally dispatched least-loaded cluster...|$|R
40|$|This paper {{presents}} {{a framework of}} Mirroring Mobile Phone in the Clouds (MMPC) to speed up data/computing intensive applications on a mobile phone by taking {{full advantage of the}} super computing power of the clouds. An application on the mobile phone is dynamically partitioned {{in such a way that}} the heavy-weighted part is always running on a <b>mirrored</b> <b>server</b> in the clouds while the light-weighted part remains on the mobile phone. A performance improvement (an energy consumption reduction of 70 % and a speed-up of 15 x) is achieved at the cost of the communication overhead between the mobile phone and the clouds (to transfer the application codes and intermediate results) of a desired application. Our original contributions include a dynamic profiler and a dynamic partitioning algorithm compared with traditional approaches of either statically partitioning a mobile application or modifying a mobile application to support the required partitioning...|$|R
5000|$|The {{success of}} the TSA {{accounted}} for {{a significant portion of}} the Internet traffic of its non-profit server in Vienna, run by hosting service public netbase/t0. A shift to the right in Austrian politics worked against the site and its host, however. Austrian Freedom Party (FPÖ) leader Jörg Haider selected [...] "degenerate art" [...] as one target for his party's political capital. By July 1998, this included accusations of the acceptance and facilitation of child pornography against public netbase/t0. Initially, the FPÖ explicitly alleged links between public netbase/t0 and a separate hosting service from the British Virgin Islands, but the sexual content of the TSA and its age-alteration themes was implicitly included when allegations continued after that connection was refuted. When the results of these attacks stripped its host of public funding and free access, the TSA hastily relocated to an American server, assisted by several <b>mirror</b> <b>servers.</b>|$|R
50|$|Capsule <b>Servers</b> <b>mirror</b> {{content from}} the Satellite Server to {{establish}} content sources in different geographical locations, they are {{analogous to the}} Red Hat Satellite 5 Proxy Server.|$|R
40|$|Abstract — As {{a growing}} number of web sites {{introduce}} mirrors to increase throughput, the challenge for clients becomes determining which mirror will offer the best performance when a document is to be retrieved. In this paper we present findings from measuring 9 clients scattered throughout the United States retrieving over 490, 000 documents from 47 production web <b>servers</b> which <b>mirror</b> three different web sites. We have severalinteresting findings that may aid in the design of protocols for choosing among <b>mirror</b> <b>servers.</b> Though server performance varies widely, we have observed that a server’s performance relative to other servers is more stable and is independent of time scale. In addition, a change in an individual server’s transfer time is not a strong indicator that its performance relative to other servers has changed. Finally, we have found that clients wishing to achieve near-optimal performance may only need to consider a small number of servers rather than all mirrors of a particular site. I...|$|R
40|$|ABSTRACT [...] -The World Wide Web {{is a vast}} {{network of}} {{documents}} that are linked together a set of protocols defining how the system work and transfer data. The explosion of data traffic on the World Wide Web (WWW), web servers are often experiencing overload from {{an increasing number of}} users accessing the servers at the same time. With increased popularity of web, {{there are a number of}} problems such as Servers overloaded, Internet Backbone congestion and Slow web services access, etc.,. To address the performance and scalability problems of web servers, more virtual <b>servers</b> and <b>mirror</b> <b>servers</b> were developed with many load balancing approaches. Among the many other approaches for efficient load balancing in distributed heterogeneous P 2 P networks, Dynamic Time Warping (DTW) approach and Arbitrary Selection Load Balancing (ASLB) approaches plays a vital role. This paper mainly focuses on comparative study of Dynamic Time Warping (DTW) and Arbitrary Selection Load Balancing (ASLB) approaches to Heterogeneous P 2 P Networks...|$|R
40|$|File {{downloading}} {{process on}} Internet is generally slow. Here {{we will discuss}} about design and simulation of a distributed and synchronized file transfer protocol meant for the internet applications. The approach consists of centralized server which distributes the downloading process across multiple file servers and {{this is based on}} QoS parameter as available bandwidth. The client continuously monitors the FTP flows to detect slow servers and accordingly adjusts the file distribution. This parallelized FTP approach, stabs for the solution of the problem of slow downloads of bulky multimedia files {{while at the same time}} optimizing the utilization of <b>mirror</b> <b>servers.</b> This approach proposes simultaneous downloads of file from multiple file servers, and is combination of DAP and P-FTP. The performance can be increased by usage of slow server detection and link failure algorithms. In this paper, simulation is presented; which shows at least 50 % reduction in download time, when compared to the traditional filetransfer approach...|$|R
3000|$|The {{database}} {{is maintained}} in <b>mirror</b> versions on <b>servers</b> at the German Research Centre for Geosciences GFZ in Potsdam, Germany ([URL] {{and at the}} University of California at San Diego, USA ([URL] [...]...|$|R
25|$|IST {{is taken}} as the {{standard}} time as it passes through almost the centre of India. To communicate the exact time to the people, the exact time is broadcast over the national All India Radio and Doordarshan television network. Telephone companies have dedicated phone numbers connected to <b>mirror</b> time <b>servers</b> that also relay the precise time. Another increasingly popular means of obtaining the time is through Global Positioning System (GPS) receivers.|$|R
40|$|Parallel {{download}} protocols {{have the}} potential to reduce file download time and to achieve a server-side load balancing in replica systems, such as peer-to-peer networks, content distribution networks and <b>mirrored</b> <b>servers,</b> by simultaneously establishing connections to multiple replicas and downloading disjoint file parts in parallel. This paper presents TCP-PARIS, a novel parallel download protocol from multiple replicas to one receiver. Because the ideal partitioning of the transfer volume from each server is a dynamic and a difficult-to-predict function of network conditions, server load and data size, TCP-PARIS uses the stream segmentation of TCP and congestion window information to continuously adapt the assigned volume to each server in proportion to the bandwidth-delay product to best approximate the optimal data partitioning. Analytical results, simulation and Internet experiments with a transport-layer implementation characterize the performance and the resource requirements of TCP-PARIS and allow a comparison with related protocols. Extensive simulations with varying network and application parameters show download time reductions of up to 52 % compared to single-flow downloads and up to 52 % compared to related protocols. ...|$|R
40|$|Fast Synchronization of Mirrored Game Servers: Outcomes from a Testbed Evaluation The {{deployment}} of online games over the Internet encompasses {{the use of}} novel, smart strategies able to guarantee, on one side, {{a high level of}} responsiveness in the game system and, one the other side, the consistency of the computed game state. The use of <b>mirrored</b> game <b>servers</b> has been recognized as a scalable, fault tolerant architectural solution for the support of Multiplayer Online Games (MOGs). We developed a new optimistic synchronization scheme devised for MOGs. The intelligence behind our scheme is based on the idea of exploiting two new notions of obsolescence and correlation among game events. These notions allow one to speed up the synchronization among replicated servers, while maintaining the consistency of the game state. In this work, we report on an experimental assessment based on a real implementation of a <b>mirrored</b> game <b>server</b> architecture, deployed over the Internet, that exploits our synchronization algorithm. Specific attention is devoted to the experimental assessment. Results show the viability and the efficacy of our approach...|$|R
