0|10000|Public
50|$|<b>Managed</b> <b>Network</b> <b>Systems</b> Inc. (doing {{business}} as MNSi Telecom) is a Canadian Internet service provider (ISP) and phone provider located in Windsor, Ontario. Opened in 1995, {{it is the}} oldest ISP in the Windsor-London area, having started in September of that year as a provider of Dial-up Internet access.|$|R
40|$|Information Visualization {{technics}} {{has been}} widely used in exploring complex data space. In the area of network visualization, the extreme complexity and professional requirements of IT engineers {{make it hard to}} design visualization strategies facilitating their daily works. This paper introduces an interactive visualization tool kit for <b>managing</b> <b>network</b> <b>systems.</b> It starts with the research of different visualization technics and existing visualization systems, follows with the concept development process, including user research and the evolution of mockups. A final prototype is proposed, evaluated by discussion with users...|$|R
5000|$|FISMA (Federal Information Security Management Act of 2002). Stipulates federal {{requirements}} for <b>managing</b> government <b>network</b> <b>systems</b> and data. Log management guidelines include the generation, review, protection {{and retention of}} audit records, {{as well as the}} actions to be taken because of audit failure.|$|R
40|$|Open Charge Point Protocol (OCPP) is {{a widely}} used open {{communication}} protocol between a charging station and its <b>managing</b> <b>network</b> <b>system.</b> The central promising idea of the OCPP {{is that it is}} an open standard, which provides a standardized communication language with the flexibility of giving charging station owners right to switch network providers at their own will. This paper investigates the open standard concept with various aspects in the context of OCPP. By investigating the openness of OCPP across multiple dimensions, this paper represents, to our knowledge, the first attempt to unbox what an OCPP looks from an open standard perspective within the electric vehicle charging infrastructure...|$|R
40|$|International audienceThe {{aim of the}} SASO conference {{series is}} to provide a forum for the {{foundations}} of a principled approach to engineering <b>systems,</b> <b>networks</b> and services based on self-adaptation and self-organization. To this end, the meeting aims to attract participants with different backgrounds, to foster cross-pollination between research fields, and to expose and discuss innovative theories, frameworks, methodologies, tools, and applications. The complexity of current and emerging computing systems has led the software engineering, distributed systems and management communities to look for inspiration in diverse fields (e. g., complex systems, control theory, artificial intelligence, sociology, and biology) to find new ways of designing and <b>managing</b> <b>networks,</b> <b>systems</b> and services. In this endeavor, self-organization and self-adaptation have emerged as two promising interrelated facets of a paradigm shift...|$|R
40|$|This work {{deals with}} {{programs}} designed to <b>manage</b> data <b>networks</b> and to their use in managerial practice. The purpose is to explain how these programs contribute to a systemic understanding of <b>managed</b> <b>network</b> and <b>system</b> thinking. All these methods are applied on example of two largest wireless ISP companies in South Bohemia. The dissertation explains the issue of making mental models of the <b>managed</b> <b>network,</b> which concerns specially managers of ISP companies. The work is not an administrator view at programs for network management, but rather a management view and instructions {{how to use these}} programs in management decisions to solve complex problems and future development of <b>managed</b> <b>network...</b>|$|R
40|$|As {{distributed}} systems tend {{to grow in}} the number of components and in their geograph-ical dispersion, deployment and management are increasingly becoming problematic. For long, there has been a tradition of developing architectures for <b>managing</b> <b>networked</b> and distributed <b>systems</b> [2]. These architectures tend to be complex, unwieldy, and in...|$|R
40|$|International audienceTiny devices, smart objects, home gateways, sensor networks, {{have become}} an {{integral}} part of our everyday life and of our socio-economic ecosystem. However their large number, their distribution and their volatility and heterogeneity make their management fiendishly complex. Traditional management systems, that are mainly ad-hoc or centralized, reach their limits in such complex management contexts. This paper introduces our response to overcome these difficulties by proposing a flexible management middleware for multi-scale contexts. This middleware named DASIMA, implements a new approach combining domain-based and architecture-based management. DASIMA is a fully component-based management middleware intended to scale-up and down according to the number and the distribution of managed resources. This proposal breaks with current management paradigms mainly related to quite rigid and monolithic systems. DASIMA has been experimented in a real industrial application in the Machine to Machine (M 2 M) context. These experiments confirm the interest of developing adaptable middleware to <b>manage</b> <b>networked</b> <b>systems</b> in multi-scale contexts...|$|R
40|$|As {{evidenced}} by discussions in standards organizations, vendors and the user community have recently showed a {{growing interest in}} using XML technologies for management purposes. To investigate the relevance of this approach, we have added support for Web services to JAMAP—a research prototype of a management platform—and managed a gigabit transoceanic testbed. In this paper, we present the lessons learned during this process and attempt to draw conclusions of general interest as to the applicability of Web Services for <b>managing</b> Internet <b>networks</b> and <b>systems.</b> Our main conclusions are that XML, WSDL and SOAP are useful, especially for configuration management, whereas UDDI is not adequate. To date, we still lack a standard way of publishing, discovering and subscribing to Web services {{for the purpose of}} <b>managing</b> <b>network</b> devices and <b>systems...</b>|$|R
40|$|Abstract. As {{evidenced}} by discussions in standards organizations, vendors and the user community have recently showed a {{growing interest in}} using XML technologies for management purposes. To investigate the relevance of this approach, we have added support for Web Services to JAMAP (a Java-based research prototype of a management platform) and managed a gigabit transoceanic testbed. In this paper, we present the main lessons learned during this process and attempt to draw conclusions of general interest as to the applica-bility of Web Services for <b>managing</b> IP <b>networks</b> and <b>systems.</b> Our main conclusions are that XML, WSDL and SOAP are useful, especially for configu-ration management, whereas UDDI is not adequate. To date, we still lack a standard way of publishing, discovering and subscribing to Web Services {{for the purpose of}} <b>managing</b> <b>network</b> devices and <b>systems...</b>|$|R
50|$|Telecommunications Network Engineer: {{recognize}} the true value of innovations {{in the field}} of new information and communications technology; instrumental, cognitive, and attitudinal skills for the design and installation of networks and communications systems; the foundations to design, implement, operate, <b>manage,</b> and support <b>networked</b> <b>systems</b> and wired and wireless communications.|$|R
40|$|This paper {{describes}} a decentralized peer-to-peer model {{for building a}} Web crawler. Most of the current systems use a centralized client-server model, in which the crawl is done {{by one or more}} tightly coupled machines, but the distribution of the crawling jobs and the collection of crawled results are managed in a centralized system using a centralized URL repository. Centralized solutions are known to have problems like link congestion, being a single point of failure, and expensive administration. It requires both horizontal and vertical scalability solutions to <b>manage</b> <b>Network</b> File <b>Systems</b> (NFS) and load balancing DNS and HTTP requests...|$|R
40|$|Since {{the turn}} of the millennium, Web {{services}} have pervaded the middleware industry, despite their technical limitations, their ongoing standardization, the resulting lack of stable standards, the different meanings of the term service to different people, and the fact that marketing forces have blurred the technical reality that hides behind this term. What is so special about Web services and their underlying Service-Oriented Architecture (SOA) ? As a major technology on the software market, Web services deserve to be investigated from an integrated management perspective. What does this middleware technology bring to management applications? Is it yet another way of doing exactly the same thing? Or does it enable management software architects to open up uncharted territories for building a new generation of management solutions? Can it help us <b>manage</b> <b>networks,</b> <b>systems</b> and services with unprecedented flexibility, robustness and/or scalability? In this chapter, we first present the technical motivation for shifting toward Web services. In Sections 2, 3 and 4, we describe different facets of this middleware technology: its architecture, its protocols, and the main standards that make up the so-called Web services stack. In Sections 5 and 6, we show that Web services can be used in integrated managemen...|$|R
40|$|The article {{presents}} the practical {{conditions of the}} implementation of the taxonomic method for assessing the exploita-tion policy, developed by the author and described in the article entitled Methodology of variant assessment of exploita-tion policy using numerical taxonomy tools (Management Systems in Production Engineering no 2 (18) / 2015) [19]. In {{the first part of the}} article, the elaborated (by the author) methodology has been verified on the basis of maintenance data of three companies, that <b>manage</b> technical <b>network</b> <b>systems</b> (water supply system, sewage system, heating system). The second part of the article includes interpretation of the findings of assessment of exploitation policy of analyzed tech-nical <b>network</b> <b>systems,</b> as well as indications of possible proceedings into studied companies, in the field of maintenance works realization...|$|R
40|$|Abstract. The {{effort to}} <b>manage</b> <b>network</b> {{security}} <b>systems</b> {{has increased in}} complexity over the past years. Network security for a company, university, or government agency {{can no longer be}} provided using a single Internet firewall or Intrusion Prevention <b>System</b> (IPS). Today, <b>network</b> administrators must deploy multiple intrusion detection and prevention nodes, traffic shapers, and firewalls in order to effectively protect their network. As the number of devices increases, maintaining a secure environment becomes difficult. This paper presents an infrastructure for control, configuration, and communication between heterogeneous network devices. The approach presented uses a Publish/Subscribe model built on top of a peer-to-peer overlay network in order to distribute information between network intrusion detection and prevention devices. ...|$|R
40|$|The role of TIS {{concerning}} environmental {{matters in}} view of the SAPOCO 42 document will be tackled. Interactions between TIS and ST, as the Division <b>managing</b> water <b>networks,</b> ventilation <b>systems</b> and various potentially polluting installations, will be discussed both for the planning {{as well as for the}} operational phase. A systematic approach to the problem within the foreseen CERN-wide Environmental Management System will be described...|$|R
40|$|Abstract- A <b>network</b> <b>system</b> {{could be}} better {{protected}} by physically dividing it into administrative management groups according to different access rights. However, to effectively <b>manage</b> a <b>network</b> <b>system,</b> security information sharing is necessary. Since a system could suffer from the same security threats as another system, how to share the security information to prevent a system from the same security flaw is urgently requested. In this paper, we first propose a concept of management domain by differentiating the access rights of network hosts. We then present a global secure management platform by constructing a three-layered security architecture: agent layer, server layer, and manager layer. Through the security information collected by intrusion detection agents, vulnerability assessment agents, and service guard agents, and exchanged among domain servers, mutually trusted network domains can be cooperated to provide a better and effective management system...|$|R
40|$|The rapid {{advances}} in hardware, software, and networks {{have made the}} management of enterprise <b>network</b> <b>systems</b> an increasingly challenging task. Due to the tight coupling between hardware, software, and data, {{every one of the}} hundreds or thousands of PCs that are connected in an enterprise environment has to be administered individually, leading to high Total Cost of Ownership (TCO). We argue that centralized management with distributed, diskless clients, yet centralized repositories of all software and data can reduce the management complexity with reduced software maintenance time, improved system availability, and enhanced security. We instantiate such paradigm with a diskless, thick client based system that supports heterogeneous OSes including Windows—the dominant commodity OS in the current market. The prototype requires no or minimum OS modification, nor application modification. Our initial deployment and experiment results demonstrate that our approach is a feasible and efficient solution for <b>managing</b> enterprise <b>network</b> <b>systems...</b>|$|R
40|$|International collaborations {{represent}} a growing share {{of scientific and}} technical activities. In contrast with national programmes and projects, connections {{at the international level}} are systems of communication, facilitated by ICTs, that are often difficult to identify. Policy makers are faced with {{the question of how to}} support, benefit from and exploit them. The networks created by international collaboration in science and technology (ICST) offer opportunities for developing countries to acquire knowledge for local development, but there are few guidelines on how to <b>manage</b> such <b>networked</b> <b>systems.</b> The potential for missteps and the obstacles to joining networks are significant. This chapter describes the dynamics of ICST, and offers a framework for decision making about how to use the opportunities they offer to provide the demand for development. ...|$|R
40|$|Abstract — Today’s <b>networked</b> <b>systems</b> are {{extensively}} instrumented {{for collecting}} {{a wealth of}} monitoring data. In this paper, we propose a framework called System-wide Similarity Query (S 2 Q) to support {{a new type of}} similarity queries on monitoring data for <b>managing</b> complex <b>networked</b> <b>systems.</b> The similarity queries are defined on a novel data model that captures system states, and the implementation includes a streaming algorithm for online state-modeling computation and a companion graphbased indexing technique for fast retrieval of historical system states. S 2 Q simplifies many systems management tasks through a simple and intuitive query interface available to operators, and two applications are evaluated in the paper: (i) fast diagnosis of repeated failures in enterprise IT systems, and (ii) automated application traffic profiling on computer networks. For the first application, the diagnosis accuracy can reach 95 % on a multi-tier web service testbed. For the second application, major network applications were automatically identified in the traffic logs from a large campus wireless network...|$|R
40|$|Effectively {{integrating}} {{theory and}} hands-on practice, Networking Systems Design and Development provides students and IT professionals {{with the knowledge}} and skills needed to design, implement, and <b>manage</b> fully functioning <b>network</b> <b>systems</b> using readily available Linux networking tools. Recognizing that most students are beginners in the field of networking, the text provides step-by-step instruction for setting up a virtual lab environment at home. Grounded in real-world applications, this book provides the ideal blend of conceptual instruction and lab work to give students and IT professiona...|$|R
40|$|One of {{the most}} {{challenging}} problems in <b>managing</b> large <b>networked</b> <b>systems</b> is the complexity of security administration. This is particularly true for organizations that are attempting to manage security in distributed multimedia environments such as those using world Wide Web (WWW) servers. Today, security administration is costly and prone to error because administrators usually specify access control lists for each user on the system individually. Role based access control (RBAC) is a technology that is attracting increasing attention, particularly for commercial applications, because of its potential for reducing the complexity and cost of security administration in large networked applications. This paper describes software components that provide RBAC for networked servers using WWW protocols. The RBAC components can be linked with commercially available web servers, and require no modi cation of the server software. ...|$|R
40|$|Self-management {{can reduce}} {{administration}} complexity in distributed systems. We introduce a method based on task automation: formally encode best practices {{so that they}} can be reasoned about and adapted at runtime. A key advantage of the chosen approach is its support for existing hard- and software. We present the methodology and an architecture. The method’s applicability is tested by applying a preliminary implementation to a handful of practical problems. 1 introduction Distributed systems are growing, both in size and in heterogeneity. As changes in the infrastructure can have ever more widespread and unforeseen consequences, stability is at risk. Because of this, <b>managing</b> <b>networked</b> <b>systems</b> is becoming increasingly complicated. Network resilience can be strengthened by decreasing dependence on human intervention. Not only is manual labor costly, it is the main cause of security related issues in enterprise networks [1] and a performance bottleneck, for instance when dealing with worm containment. We propose to reduce perceived administration complexity by automating management tasks. Applicable tasks range from the very simple (e. g., copying files) to the slightly more complex (periodically backing up files) to the very complex (controlling a widearea grid). The ultimate goal is to make manual management disappear completely, but we take a bottomup approach: automate tasks one-by-one, from simpler to more complex. Automation is introduced by supplying a decision-making process with blueprints for task-handling, or templates. Templates either encode a single action (e. g., copy X to Y), or are 1 A shorter version of this paper will be presented at the firs...|$|R
40|$|<b>Managing</b> {{heterogeneous}} <b>network</b> <b>systems</b> is {{a difficult}} task because each of these networks has its own curious management <b>system.</b> These <b>networks</b> usually are constructed on independent management protocols which are not compatible with each other. This results in the coexistence of many management systems with different managing functions and services across enterprises. Incompatibility of different management systems makes management of whole system a very complex and often complicated job. Ideally, {{it is necessary to}} implement centralized metalevel management across distributed heterogeneous systems and their underlying supporting <b>network</b> <b>systems</b> where the information flow and guidance is provided via a single console or single operating panels which integrates all the management functions in spite of their individual protocols and structures. This paper attempts to provide a novel network management tool architecture which supports heterogeneous managements across many different architectural platforms. Furthermore, an architectural approach to integrate heterogeneous network is proposed. This architecture takes into account both wireless fixed and mobile nodes. Comment: 10 pages IEEE format, International Journal of Computer Science and Information Security, IJCSIS December 2009, ISSN 1947 5500, [URL]...|$|R
50|$|Policy-based {{management}} is {{a technology that}} can simplify the complex task of <b>managing</b> <b>networks</b> and distributed <b>systems.</b> Under this paradigm, an administrator can manage different aspects of a <b>network</b> or distributed <b>system</b> in a flexible and simplified manner by deploying a set of policies that govern its behaviour. Policies are technology independent rules aiming to enhance the hard-coded functionality of managed devices by introducing interpreted logic that can be dynamically changed without modifying the underlying implementation. This allows for {{a certain degree of}} programmability without the need to interrupt the operation of either the managed system or of the management system itself. Policy-based management can increase significantly the self-managing aspects of any distributed <b>system</b> or <b>network,</b> leading to more autonomic behaviour demonstrated by Autonomic computing systems.|$|R
40|$|Abstract. 1 This paper {{describes}} a decentralized peer-to-peer model {{for building a}} Web crawler. Most of the current systems use a centralized client-server model, in which the crawl is done {{by one or more}} tightly coupled machines, but the distribution of the crawling jobs and the collection of crawled results are managed in a centralized system using a centralized URL repository. Centralized solutions are known to have problems like link congestion, being a single point of failure, and expensive administration. It requires both horizontal and vertical scalability solutions to <b>manage</b> <b>Network</b> File <b>Systems</b> (NFS) and load balancing DNS and HTTP requests. In this paper, we present an architecture of a completely distributed and decentralized Peer-to-Peer (P 2 P) crawler called Apoidea, which is self-managing and uses geographical proximity of the web resources to the peers for a better and faster crawl. We use Distributed Hash Table (DHT) based protocols to perform the critical URL-duplicate and content-duplicate tests. ...|$|R
40|$|Abstract. With {{the rapid}} {{development}} of computer network, the network architecture is increasingly complicated; {{the scale of}} network extends continuously. Therefore, the functions and positions of the network management are also more and more important. The Web-Based network management, making users <b>manage</b> the <b>network</b> and <b>system</b> expediently and simply, combining Web technology and modern distributed network management technology, which can also be updated and customized easily to meet the different needs, is an important direction {{of the development of}} the network management technology in the future. This paper proposes an a SNMP-based Web <b>network</b> management <b>system</b> using B/S structure, which has features of flexible structure, easily extensible, user-friendly features and so on...|$|R
40|$|Modern {{information}} networks are so integral to everyday business and society that even {{short period of}} downtime can adversely affect many thousands of users. Because of the inherently heterogeneous nature of network devices and protocols, these networks are typically administered using a range of command-line interface (CLI) tools and graphical user interface (GUI) tools from many different vendors. Mastering all these different tools takes time and experience and it is often hard to get an integrated, high-level view of the network. This means network administrators may inadve 1 iently misconfigure their systems or overlook a potential threat. To explore some of these issues, this project evaluated State Model Diagrams (SMDs) as both a network administration tool and {{as a way of}} teaching administrators about fundamental networking concepts. SMDs are an abstract modelling tool that allows experienced practitioners and novices to grasp the complexities of network administration by identifying essential networking objects, processes, and concepts without getting bogged down in too many distracting details. In 2007 and 2008, ECU post-graduate students doing networking courses were given a comprehensive demonstration of SMDs. The students then completed a questionnaire on how they thought SMDs compared to other network tools and how they thought SMDs could be practically applied. A result of twenty (48. 8 %) of positive responses from among 41 participating students have clearly demonstrated that SMDs were potentially useful as a NM tool for <b>managing</b> <b>network</b> <b>systems</b> and provided a richer conceptual understanding aligned with that of an expert. In this research study, the results showed that SMDs would help most of the participants understand and administer their networks, and a majority believed that SMDs would help reduce the fundamental complexity of their multi-tool work environment. Lastly, fu 1 iher research is required with a larger and more varied population but the results so far indicate that SMDs are a valuable tool for network administrators...|$|R
5000|$|<b>Network</b> Information <b>System</b> (abbreviation: NIS) is an {{information}} <b>system</b> for <b>managing</b> <b>networks,</b> such as electricity network, water supply network, gas supply network, telecommunications network., or street light network ...|$|R
40|$|Information-centric {{networks}} have distinct advantages {{with regard to}} securing sensitive content {{as a result of}} their new approaches to managing data in potential future internet architectures. These kinds of systems, because of their data-centric perspective, provide the opportunity to embed policy-centric content management components that can address looming problems in information distribution that both companies and federal agencies are beginning to face with respect to sensitive content. This information-centricity facilitates the application of security techniques that are very difficult and in some cases impossible to apply in traditional packetized networks. This work addresses the current state of the art in both these kinds of cross-domain systems and information-centric networking in general. It then covers other related work, outlining why information-centric networks are more powerful than traditional packetized networks with regard to usage management. Then, it introduces a taxonomy of types of policy-centric usage <b>managed</b> information <b>network</b> <b>systems</b> and an associated methodology for evaluating the individual taxonomic elements. It finally delves into experimental evaluation of the various defined architectural options and presents results of comparing experimental evaluation with anticipated outcomes. Computer EngineeringDoctoralUniversity of New Mexico. Dept. of Electrical and Computer EngineeringHeileman, GregoryGhani, NasirBridges, PatrickShu, WennieHeileman, Gregor...|$|R
40|$|Introduction As {{distributed}} systems tend {{to grow in}} the number of components and in their geographical dispersion, deployment and management are increasingly becoming problematic. For long, there has been a tradition of developing architectures for <b>managing</b> <b>networked</b> and distributed <b>systems</b> [2]. These architectures tend to be complex, unwieldy, and indeed, difficult to manage. We need to explore alternative avenues if we want to construct a next generation of {{distributed systems}}. Recently, solutions have been sought to develop self-managing systems. The basic idea here, is that a distributed system can continuously monitor its own behavior and take corrective action when needed. As with many new, or newly introduced, concepts, {{it is often difficult to}} separate hype from real content. In the case of self-management (or other forms of self- * -ness), the low signal-to-noise ratio can be partly explained by our poor understanding of what self-management actually means...|$|R
40|$|Abstract. A {{particularly}} {{demanding and}} important challenge {{that we face}} as we attempt to construct the distributed computing machinery required to support SciDAC goals is the efficient, high-performance, reliable, secure, and policy-aware management of large-scale data movement. This problem is fundamental to diverse application domains including experimental physics (high energy physics, nuclear physics, light sources), simulation science (climate, computational chemistry, fusion, astrophysics), and large-scale collaboration. In each case, highly distributed user communities require high-speed access to valuable data, whether for visualization or analysis. The quantities of data involved (terabytes to petabytes), {{the scale of the}} demand (hundreds or thousands of users, data-intensive analyses, real-time constraints), and the complexity of the infrastructure that must be <b>managed</b> (<b>networks,</b> tertiary storage <b>systems,</b> <b>network</b> caches, computers, visualization systems) make the problem extremely challenging. Data management tools developed {{under the auspices of the}} SciDAC Data Grid Middleware project have become the de facto standard for data management in projects worldwide. Day in and day out, these tools provide the “plumbing ” that allows scientists to do more science on an unprecedented scale in production environments. 1...|$|R
50|$|Dhyan <b>network</b> {{management}} <b>system</b> (DNMS) is carrier grade <b>network</b> management <b>system</b> providing generic topology, fault, configuration, performance, {{and security}} (FCAPS) functions. It provides the major functions for deploying, monitoring, configuring and <b>managing</b> a <b>network.</b>|$|R
40|$|Mobile agent {{technology}} {{is emerging as}} a new paradigm {{in the area of}} distributed and mobile computing. Mobile agents {{play an important role in}} the development of active and dynamically <b>managed</b> <b>networks</b> and distributed <b>systems.</b> Mobile agents are the intelligent programs that act autonomously on behalf of a user and can migrate from one host to another host in a network in order to satisfy the requests made by their clients. In any mobile agent system, the ability to communicate with agents in real-time, as agents move from one node to another, is essential for retrieving any data or information that they have collected, and for supporting coordination and cooperation among them. So the critical problem in managing a mobile agent system is to track the location of the agents. Communication with a mobile agent incorporates the ability to locate it. Thus locating agents efficiently is the issue central to any mobile agent system. This paper surveys various mobile agent location monitoring techniques, proposed by various authors...|$|R
40|$|Software {{agents have}} been already {{introduced}} {{successfully in the}} scope of embedded technology as smart controllers of intelligent systems. This paper presents a further application that deals with the interoperability problem between different fieldbus networks. Overcoming the lack of space in the embedded nodes that compose the fieldbus network, standardised agent platforms may enable programs standing {{on top of them}} to avoid such incompatibility and work as if they were interoperable. Moreover, we show a work case that illustrates the potential applications of using such interoperable model: it describes how does a device of a general-purpose <b>network</b> <b>manage</b> remote <b>system</b> variables of an automation network...|$|R
40|$|As future internet, Software Defined Network (SDN) {{has brought}} special {{benefits}} which are hard for legacy <b>network</b> <b>system</b> by separating control plane from data plane. A SDN controller <b>manages</b> <b>network</b> flows in centralized manner by applying proper rules dynamically on each flow. However, this distinct feature of SDN has brought several security issues. One {{of these issues}} is related to middleboxes which are commonly used to secure or <b>manage</b> the <b>networks</b> in legacy <b>network</b> <b>systems.</b> Middleboxes modify the information of packet dynamically {{based on their own}} policies, but the modification is hidden from outside network components because of the closed structure of middleboxes. According to this, a SDN controller does not recognize the modification of packets and may apply wrong rules to a flow. In this paper, we explore possible security problems caused by middleboxes and possible solutions for the problems. Keywords-Software Defined Network; middlebox; security I...|$|R
