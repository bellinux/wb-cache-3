5|0|Public
2500|$|In the 60s and 70s {{a simple}} creationist model {{proposed}} that, [...] "The Flood split the land mass {{into the present}} continents." [...] Steve Austin and other creationists proposed a preliminary model of catastrophic plate tectonics (CPT) in 1994. Their work built on earlier papers by John Baumgardner and Russell Humphreys in 1986. Baumgardner proposed a model of <b>mantel</b> <b>convection</b> that allows for runaway subduction and Humphrey associated mantle convection with rapid magnetic reversals in earth history. Baumgardner's proposal holds that the rapid plunge of former oceanic plates into the mantle (caused by an unknown trigger-mechanism) increased local mantle pressures {{to the point that}} its viscosity dropped several magnitudes according to known properties of mantle silicates. [...] Once initiated, sinking plates caused the spread of low viscosity throughout the mantle resulting in runaway mantle-convection and catastrophic tectonic motion which dragged continents {{across the surface of the}} earth. Once the former ocean plates, which are thought to be denser than the mantle, reached the bottom of the mantle an equilibrium resulted. [...] Pressures dropped, viscosity increased, runaway mantle-convection stopped, leaving the surface of the earth rearranged. [...] Proponents point to subducted slabs in the mantle which are still relatively cool, which they regard as evidence that they have not been there for millions of years which would result in temperature equilibration.|$|E
40|$|The thermal {{evolution}} of Mars {{is governed by}} subsolidus mantle convection beneath a thick lithosphere. Models of the interior evolution are developed by parameterizing mantle convective heat transport in terms of mantle viscosity, the superadiabatic temperature rise across the mantle, and mantle heat production. Geological, geophysical, and geochemical observations of the composition {{and structure of the}} interior and of the timing of major events in Martian evolution are used to constrain the model computations. Such evolutionary events include global differentiation, atmospheric outgassing, and the formation of the hemispherical dichotomy and Tharsis. Numerical calculations of fully three-dimensional, spherical convection in a shell the size of the Martian mantle are performed to explore plausible patterns of Martian <b>mantel</b> <b>convection</b> and to relate convective features, such as plumes, to surface features, such as Tharsis. The results from the model calculations are presented...|$|E
40|$|Saddle point {{problems}} involving large {{systems of}} linear equations arise {{in a wide}} variety of applications in computational science and engineering. A variety of solvers have been developed for these type of problems typically with specific applications in mind. In this paper we will focus on saddle point problems as they arise from incompressible ﬂuid ﬂow problems in applications in geosciences. They are characterized through a spatially variable viscosity when modeling temperature dependencies (e. g. in Earth <b>mantel</b> <b>convection</b> models) or moving material interfaces (e. g. in subduction zones simulation and numerical volcano models). In this paper we will give an overview on some of the iterative techniques that can be used and discuss suitable preconditioning techniques. We will discuss the implementation of the schemes using the python module Escript and compare the efficiency of these schemes when applied to convection models on a parallel computer...|$|E
40|$|The {{developments}} of models in Earth Sciences, e. g. for earthquake prediction {{and for the}} simulation of <b>mantel</b> <b>convection,</b> are fare from being finalized. Therefore {{there is a need}} for a modelling environment that allows scientist to implement and test new models in an easy but flexible way. After been verified, the models should be easy to apply within its scope, typically by setting input parameters through a GUI or web services. It should be possible to link certain parameters to external data sources, such as databases and other simulation codes. Moreover, as typically large-scale meshes have to be used to achieve appropriate resolutions, the computational efficiency of the underlying numerical methods is important. Conceptional this leads to a software system with three major layers: the application layer, the mathematical layer, and the numerical algorithm layer. The latter is implemented as a C/C++ library to solve a basic, computational intensive linear problem, such as a linear partial differential equation. The mathematical layer allows the model developer to define his model and to implement high level solution algorithms (e. g. Newton-Raphson scheme, Crank-Nicholson scheme) or choose these algorithms form an algorithm library. The kernels of the model are generic, typically linear, solvers provided through the numerical algorithm layer. Finally, to provide an easy-to-use application environment, a web interface is (semi-automatically) built to edit the XML input file for the modelling code. In the talk, we will discuss the advantages and disadvantages of this concept in more details. We will also present the modelling environment escript which is a prototype implementation toward such a software system in Python (see www. python. org). Key components of escript are the Data class and the PDE class. Objects of the Data class allow generating, holding, accessing, and manipulating data, in such a way that the actual, in the particular context best, representation is transparent to the user. They are also the key to establish connections with external data sources. PDE class objects are describing (linear) partial differential equation objects to be solved by a numerical library. The current implementation of escript has been linked to the finite element code Finley to solve general linear partial differential equations. We will give a few simple examples which will illustrate the usage escript. Moreover, we show the usage of escript together with Finley for the modelling of interacting fault systems and for the simulation of <b>mantel</b> <b>convection...</b>|$|E

