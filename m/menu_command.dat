23|236|Public
25|$|Windows Vista {{introduces}} a new Add to Quick Launch context <b>menu</b> <b>command</b> for application shortcuts.|$|E
5000|$|The macro {{language}} {{consisted of}} two [...] "dialects." [...] The <b>Menu</b> <b>Command</b> Dialect and the Programming Dialect. The <b>Menu</b> <b>Command</b> dialect was not based on anything, because nothing like it was known, used each <b>menu</b> <b>command</b> of the application to execute the respective command. Extensions to {{that were used to}} specify details of how the command was to be executed. The programming dialect was not based on any other programming language. This was back-ported from Nisus Writer version 4.x when a similar programming dialect was added to that program's macro capability.|$|E
5000|$|Windows Vista {{introduces}} a new Add to Quick Launch context <b>menu</b> <b>command</b> for application shortcuts.|$|E
40|$|Part 2 of the Design/CPN Reference Manual {{lists and}} {{describes}} each Design/CPN menu and its individual commands. This chapter contains {{an overview of}} the Design/CPN menus. The rest of Part 2 contains a chapter for each menu. File <b>Menu</b> File <b>menu</b> <b>commands</b> affect entire diagrams. They create new diagrams, open existing ones, as well as saving closing, previewing, and printing diagrams. The current page can also be saved as a subdiagram which can then be loaded and opened from within a diagram. Edit <b>Menu</b> Edit <b>menu</b> <b>commands</b> cut, copy, and paste graphical objects and text, and provide undoing and redoing of some graphical operations. CPN Menu The CPN menu is available only in the editor. In the simulator, it is replaced by the Sim <b>menu.</b> CPN <b>menu</b> <b>commands</b> create CPN objects — places, transitions, arcs, CPN regions, declaration nodes, and charts. Other <b>commands</b> in the <b>menu</b> form hierarchies by creating or relating pages. The <b>menu</b> also contains <b>commands</b> for syntax checking the diagram and removing the simulation regions that participate in simulation. Design/CPN Reference Manual for the Macintosh 18 - 1 Design/CPN Menu Reference Sim Menu Sim menu is available only in the simulator. In the editor, it is replaced by the CPN <b>menu.</b> Sim <b>menu</b> <b>commands</b> prepare the diagram for simulation. They also regulate the simulation cycle, switch between page instances, or return the diagram to its initial state. Aux <b>Menu</b> Aux <b>menu</b> <b>commands</b> draw graphic objects (nodes and connectors) that have no significance as CP net components. They also start and stop the ML interpreter, and allow evaluation of individual ML statements. Set <b>Menu</b> Set <b>menu</b> <b>commands</b> specify object attributes, diagram options, and simulation options. Makeup <b>Menu</b> Makeup <b>menu</b> <b>commands</b> manipulate and alter graphic objects. Page <b>Menu</b> Page <b>menu</b> <b>commands</b> affect the appearance, labeling, and page numbering of the diagram. Other commands move around the pages and hierarchies of the diagram via the page hierarchy window. Group <b>Menu</b> Group <b>menu</b> <b>commands</b> group objects according to their object types. The objects within the group can be changed or manipulated as a single unit. A group is indicated by a gray outline around all its member nodes that are not regions. 18 - 2 Design/CPN Reference Manual for the MacintoshMenu Overvie...|$|R
5000|$|<b>Menu</b> <b>commands</b> {{that require}} {{parameters}} to proceed are suffixed with an ellipsis ("…"); ...|$|R
50|$|The court made {{an analogy}} between the menu {{hierarchy}} and {{the arrangement of}} buttons on a VCR. The buttons are used to control the playback of a video tape, just as the <b>menu</b> <b>commands</b> are used to control the operations of Lotus 1-2-3. Since the buttons are essential to operating the VCR, their layout cannot be copyrighted. Likewise, the <b>menu</b> <b>commands,</b> including the textual labels and the hierarchical layout, are essential to operating Lotus 1-2-3.|$|R
50|$|At any point, {{the user}} can create {{partially}} translated {{versions of the}} source files. Note that OmegaT copies source segments verbatim if {{they have yet to}} be translated. Before doing so, however, the user is advised to use the Validate <b>menu</b> <b>command</b> to check for tag and other errors. Version 3.1 added a <b>menu</b> <b>command</b> (and keyboard shortcut) for limiting operation to the current file—for partial delivery or quick update, for example.|$|E
5000|$|... 4. Borland Sprint Alternative User Interfaces 1988 (Jan 8, 2013)textsFrom the bitsavers.org collection, a scanned-in computer-related document. Topics: sprint, user, <b>menu,</b> <b>command,</b> interface, wordstar, commands, msword, file, alternative, useBitsavers ...|$|E
50|$|In {{the unusual}} case of {{software}} that doesn't {{work with the}} Fast Load, the cartridge can be disabled via a <b>menu</b> <b>command,</b> thus avoiding the need to physically remove and reinsert it.|$|E
2500|$|An {{example of}} the {{software}} control chart (taken from Flower And Snake disc 1 of 3) including <b>menu</b> <b>commands</b> found in the configuration volume as [...] "CDI_VCD.CFG" ...|$|R
5000|$|A {{good example}} of this was the {{creation}} of new cards, which was part of the application, not directly accessible from the HyperTalk language itself. A new card could only be created using the New Card menu item, which could be simulated in code using. While HyperTalk called into <b>menu</b> <b>commands,</b> <b>menu</b> <b>commands</b> also invoked handlers in HyperTalk. To run custom code when the Copy menu item was selected, one would place a script in the stack using the [...] handler, and then examine [...] {{to see if it was}} [...] "Copy".|$|R
50|$|You {{can create}} spread sheet windows in AWE to display rank 2 arrays. Subroutines are {{provided}} to open, close, read, write, and label spread sheets. <b>Menu</b> <b>commands,</b> described above, {{can be added}} to an AWE program to manipulate the data in the spread sheet.|$|R
50|$|Copyright {{does not}} exist in a work that is a method of {{operation}}. According to Lotus v. Borland, a method of operation refers to the means by which a person operates something, whether it is a car, food processor, or computer. In that case, Lotus claimed copyright in its computer <b>menu</b> <b>command</b> hierarchy. The court held that even though the menu developer made some expressive choices in choosing and arranging the Lotus command terms, the menu was a method of operation. The menu did not just explain and present the functional capabilities; it also served as the method by which the program was operated and controlled. In fact, Lotus wrote its <b>menu</b> <b>command</b> hierarchy so that people could learn it and use it.|$|E
5000|$|Defines the <b>menu</b> <b>command</b> {{referred}} to by [...] as the default command in the shortcut menu. The default command is the command executed when the drive icon is double-clicked. If missing, the default menu item will be [...] "AutoPlay", which launches the application specified by the [...] entry.|$|E
5000|$|Word {{processing}} document creation may ordinarily (although not necessarily) {{begin with}} selecting a template with a <b>menu</b> <b>command</b> such as: [...] (and select the template {{you wish to}} use), where the user is given the option of selecting a pre-existing template. Similar commands are provided for creating and editing templates.|$|E
25|$|Windows Vista {{includes}} context <b>menu</b> <b>commands</b> for folders to open {{a command}} prompt at the selected folder and to copy their path. Shortcut items have a context menu to open their target location. A sound event and shell overlay icon are also present for User Account Control.|$|R
5000|$|FrameMaker (2017 release): Released January 2017. FrameMaker (2017 release) new {{features}} included 32-bit and 64-bit versions, support for high-resolution displays (up to 4K), {{bigger and better}} welcome screen, search for <b>menu</b> <b>commands,</b> new Project Manager, next-generation responsive HTML5 layouts, search faster with autocomplete, customizable basic HTML5 output, effortlessly publish to Adobe Experience Manager.|$|R
5000|$|MENU, {{to display}} a user-created <b>menu</b> of <b>commands,</b> procedures, or OCL.|$|R
50|$|BibDesk permits {{articles}} {{residing on}} a user's computer {{to be linked}} to BibDesk database entries via drag and drop or a <b>menu</b> <b>command</b> or scripting, and BibDesk can optionally auto-file linked PDFs or other external files into a user-specifiable folder. There is a graphical interface for managing custom database fields, as well as a variety of ways to annotate citations.|$|E
50|$|In {{addition}} to MS-Windows-style indexed help articles NewWave introduced a context-sensitive help facility. This allowed a user to click on a ‘Help’ menu option which added a query symbol to the mouse arrow; once switched into this ‘help mode’ the user could click on {{any part of}} the NewWave environment or any <b>menu</b> <b>command</b> to have the help for that item displayed in a pop-up window.|$|E
5000|$|Developers were {{encouraged}} to not just name an object, but to describe its function and explain its state. For instance, for the Copy <b>menu</b> <b>command</b> Apple suggested the detailed [...] "Copies the selected text onto the clipboard", {{as well as a}} second version that added [...] "Not available now because there is no selection". This feature explained to users why a particular menu item was disabled.|$|E
50|$|DTJ-BBS was {{loosely based}} on the Citadel family of general {{discussion}} systems. Its primary function was a public message board, although it did support other features such as email and file transfers. Like Citadel, it used the metaphor of rooms to contain messages, and the system responded {{to many of the}} same <b>menu</b> <b>commands.</b>|$|R
5000|$|On other platforms, {{for example}} Ubuntu, the [...] key pressed by itself may invoke another {{application}} {{and not be}} delivered to the application having keyboard focus. In Ubuntu, pressing the key opens the HUD, which is an input field that lets you do <b>menu</b> <b>commands</b> such as opening a file, or creating a new file.|$|R
5000|$|... #Caption: Expanded Firefox button {{showing the}} new {{arrangement}} of <b>menus</b> and <b>commands</b> ...|$|R
50|$|A {{consideration}} of potential lock-in consequences was {{relevant to the}} decision of Lotus v. Borland. The court noted that if Lotus was granted a monopoly on its <b>menu</b> <b>command</b> hierarchy pattern, users who had learned Lotus’ command structure would have been locked into Lotus. According to the court, {{this is similar to}} the way a typist who has learned the QWERTY keyboard would be the captive of anyone who had a monopoly on the production of such a keyboard.|$|E
50|$|The {{architectural}} design for Ubiquity 0.1.3 {{was focused on}} separating functions into well-defined objects, an idea borrowed from the design of commands in the Archy project. The browser window functionality was separated into per-window and global objects. The per-window command manager object mediated between the context <b>menu,</b> <b>command</b> entry and natural-language parser objects and the commands themselves. The global objects marshall application-wide services such as built-in command feeds. Efforts to localize Ubiquity into different languages have also been made.|$|E
50|$|References can be {{exported}} via a <b>menu</b> <b>command,</b> cut and paste, {{drag and}} drop, or a macOS service. Although {{it was created}} to import and export in BibTeX format for use in LaTeX documents, BibDesk has a built-in graphical editor for creating custom export templates using Apple's key-value coding, which the user can program to export selected references in any citation style or in any structured text format. Sample templates are included for plain text, RTF, HTML, RSS, and some other XML formats, and other templates {{are available on the}} BibDesk wiki.|$|E
5000|$|... 1. Borland Sprint Reference Guide 1988 (Jan 8, 2013)From the bitsavers.org collection, a scanned-in computer-related document. Topics: sprint, <b>command,</b> <b>menu,</b> text, file, <b>commands,</b> choose, formatter, chapter, format, {{reference}} guide,...Bitsavers ...|$|R
5|$|Blue Wing Blitz is a {{traditional}} turn-based tactical role-playing game, although it has the particularity of involving mostly aerial warfare units. These are moved on a grid map, and an encounter with an enemy unit opens a separate, close-up combat screen in which up to two ally units and two enemy units engage in a short dogfight; the player using <b>menu</b> <b>commands</b> to attack, change altitude or take evasive maneuvers.|$|R
50|$|Through a macro facility, {{developers}} can add custom dialog boxes, <b>menu</b> <b>commands,</b> toolbar buttons, forms, and behaviors, using languages {{supported by}} the Microsoft scripting environment such as JScript and VBScript. It also includes interfaces for COM and Java. XMetaL includes features to import content from a database into an XML document, and can be integrated with other systems via APIs. XMetaL works {{with a variety of}} content management systems.|$|R
50|$|When {{following}} the (Stream) X-Machine methodology, {{the first stage}} is to identify {{the various types of}} data to be processed. For example, a word processor will use basic types Character (keyboard input), Position (mouse cursor position) and Command (mouse or <b>menu</b> <b>command).</b> There may be other constructed types, such as Text ::= Character* (a sequence of characters), Selection ::= Position × Position (the start and end of the selection) and Document ::= Text × Selection × Boolean (the text, a possible selection, and a flag to signal if the document has been modified).|$|E
50|$|Suppose {{that the}} input type for the machine is: In ::= Command × Character × Position. This {{recognises}} that every interaction {{could be a}} simple character insertion, a <b>menu</b> <b>command</b> or a cursor placement. Any given interaction is a 3-tuple, but some places may be empty. For example, (Insert, 'a', ε) would represent typing the character 'a'; while (Position, ε, 32) would mean placing the cursor between characters 32 and 33; and (Select, ε, 32) would mean selecting the text between the current cursor position and the place between characters 32 and 33.|$|E
5000|$|In computing, a {{keyboard}} shortcut {{is a series}} of one or several keys that invoke a software or operating system operation (in other words, cause an event) when triggered by the user. The meaning of term [...] "keyboard shortcut" [...] can vary depending on software manufacturer. For instance, Microsoft differentiates keyboard shortcuts from hotkeys ("mnemonics" [...] on Windows) whereby the former consists of a specific key combination used to trigger an action, and the latter represents a designated letter in a <b>menu</b> <b>command</b> or toolbar button that when pressed together with the Alt key, activates such command—whereas a [...] "hotkey" [...] on Windows is a system wide shortcut that is always available in all contexts as long as the program responsible for it is running and not suspended.|$|E
5000|$|<b>Menu</b> and <b>command</b> {{structure}} refactored both {{to integrate}} new features {{and to make}} Freeplane more intuitive and easier to learn ...|$|R
50|$|The player {{proceeds}} {{through the}} game by choosing from a selection of text <b>menu</b> <b>commands.</b> Like any traditional digital comic/text adventure games, a large view shows the surroundings. The {{bottom of the screen}} proposes simple action commands, like see, take or push; however, the game is entirely in Japanese (although it uses katakana exclusively). One of the original features of the game is to use real sampled sound in some places, which is very unusual for the time.|$|R
50|$|Developed in {{collaboration}} with JPL, OnSight integrates data from the Curiosity rover into a 3D simulation of the Martian environment, which scientists around the world can visualize, interact with, and collaborate in together using HoloLens devices. OnSight {{can be used in}} mission planning, with users able to program rover activities by looking at a target within the simulation, and using gestures to pull up and select <b>menu</b> <b>commands.</b> JPL plans to deploy OnSight in Curiosity mission operations, using it to control rover activities by July 2015.|$|R
