2|1|Public
40|$|Unlike image {{blending}} algorithms, video blending algorithms {{have been}} little studied. In this paper, we investigate 6 popular blending algorithms [...] -feather blending, multi-band blending, modified Poisson blending, mean value coordinate blending, <b>multi-spline</b> blending and convolution pyramid blending. We consider in particular realtime panoramic video blending, a key problem in various virtual reality tasks. To evaluate {{the performance of}} the 6 algorithms on this problem, we have created a video benchmark of several videos captured under various conditions. We analyze the time and memory needed by the above 6 algorithms, for both CPU and GPU implementations (where readily parallelizable). The visual quality provided by these algorithms is also evaluated both objectively and subjectively. The video benchmark and algorithm implementations are publicly available. Comment: 13 page...|$|E
30|$|The {{registration}} of RGB and range {{images of a}} same scene aims at matching color images and surfaces which lack color [1]. This problem remains largely unexplored in computer vision. Nonetheless, its applicability is fairly well defined. As examples it is worth to mention the following: 3 D-laser extrinsic parameters estimation [2], color improvement in depth-color camera pairs [3], and joint-depth and color calibration [4]. Particularly, extrinsic calibration of colorless ToF (time-of-flight) cameras or 3 D lasers is a relentless challenge that is usually approached in more refined ways: Hirzinger et al. [5] describe a <b>multi-spline</b> model that requires a robotic arm to know the exact pose of the intended sensor. Zhu et al. [6] describe a high-cost algorithm for fusing stereo-based depth and ToF cameras via triangulation. Unfortunately, a method that is easy-to-use, accurate, and applicable {{to a wide range}} of sensor has largely been missing.|$|E
40|$|A new dynamic {{programming}} based parallel algorithm adapted to on-board heterogeneous computers for simulation based trajectory optimization is {{studied in the}} context of “high-performance sailing”. The algorithm uses a new discrete space of continuously differentiable functions called the <b>multi-splines</b> as its search space representation. A basic version of the algorithm is presented in detail (pseudo-code, time and space complexity, search space auto-adaptation properties). Possible extensions of the basic algorithm are also described. The presented experimental results show that contemporary heterogeneous on-board computers can be effectively used for solving simulation based trajectory optimization problems. These computers can be considered micro high performance computing (HPC) platforms-they offer high performance while remaining energy and cost efficient. The simulation based approach can potentially give highly accurate results since the mathematical model that the simulator is built upon may be as complex as required. The approach described is applicable to many trajectory optimization problems due to its black-box represented performance measure and use of OpenCL...|$|R

