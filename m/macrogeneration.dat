4|0|Public
40|$|To {{develop the}} ideas of evolutionists - {{followers}} of Schumpeterian tradition, an attempt {{is made in the}} paper to describe the economy at large as a set of specific subsystems, namely macrogenerations. Those subsystems possess the following features: first, each <b>macrogeneration</b> is born, lives and eventually dies like a living creature; second, each <b>macrogeneration</b> produces a part of the GNP and the totality of simultaneously living macrogenerations produces the whole GNP. Correspondingly, the dynamics of the sum of the products of all macrogenerations is identical to that of the GNP. The economic meaning of the concept of <b>macrogeneration</b> is elucidated, and a model is constructed that imitates the behavior of macrogenerations. Using this model (on the basis of the information about the behavior of the GNP of the USA during the period of 1870 - 1994) a representation of the American economy is obtained as a system consisting of the set of macrogenerations. Evolution, <b>macrogeneration,</b> GNP...|$|E
40|$|In his 1967 lecture notes, Christopher Strachey {{states that}} macrogenerators are useful {{as the only}} {{alternative}} to rewriting the compiler when language extensions are needed. He also states, however, that they deal inappropriately with programs as strings of symbols, ignoring their semantic content, and that they lead to inconvenient syntax and often less transparent code. He concludes that a goal of language designers should be to {{eliminate the need for}} <b>macrogeneration.</b> This article attempts to reconcile the contemporary view of syntactic abstraction, which deals with programs at a higher level, with Stracheyâ€™s views on <b>macrogeneration.</b> Syntactic abstraction has evolved to address the deficiencies of <b>macrogeneration</b> and has, to a large extent, eliminated them. Syntactic abstractions are conveniently expressed, conveniently used, and usually lead to more rather than less transparent code. While a worthwhile goal for language designers is to reduce the need for <b>macrogeneration</b> through the inclusion of an appropriate set of built-in syntactic forms, this article concludes that syntactic abstraction is a valuable tool for programmers to define language extensions that are not anticipated by the language designer or are domain-specific and therefore not of sufficiently general use {{to be included in the}} language core...|$|E
40|$|In ICS, WUT a COSMA design {{environment}} is being developed. COSMA {{is based on}} Concurrent State Machines (CSM) formalism of system specification. It contains a graphical tool for system design, various tools for the analysis (including a temporal model checker), simulator and code generator. In many projects, some common susbsystems take place. This concerns both complicated modules and simple counters. In the report, a concept of <b>macrogeneration</b> technique for building of libraries of automata is presented. The new technique will support a compactness of projects and reusability of modules. Comment: 26 pages, 14 figure...|$|E
40|$|The {{problems}} of long-run macroeconomic development are considered from {{items of the}} evolutionary economics. The definition of essence of nonequilibrium processes of change of technologies, occurring on macrolevel of economic system under influence of a casually arising backlog demand, is indicated. The author characterizes them as the basic method of evolutionary development of economic systems. The dynamic model of <b>macrogeneration</b> evolution, which takes into account laws of course of nonequilibrium processes in developing stationary systems in conditions of limitation of space and resources, is offered. The ecologically-oriented development is understood as constant evolutionary process of improvement of technologies by innovations. When you are citing the document, use the following link [URL]...|$|E

