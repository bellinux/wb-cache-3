67|322|Public
5000|$|... package subroutines into a <b>module,</b> <b>library,</b> object, class, etc.|$|E
50|$|The OLA {{programming}} interface <b>module</b> <b>library</b> {{data set}} must be concatenated to the CICS region's DFHRPL DD statement.|$|E
5000|$|Comprehensive module library: The MeVisLab <b>module</b> <b>library</b> {{comprises}} a {{total of}} 2600 modules, including 800 standard modules and 1800 ITK/VTK modules.|$|E
40|$|The paper {{describes}} the method and procedure {{for developing the}} shareable image library within the BEPC control system. 1 Introduction There are many application processes and object <b>module</b> <b>libraries</b> of the BEPC control system in the VAX/VMS environment. Each process must be linked to these object <b>module</b> <b>libraries</b> to create an executable image (see figure 1). When processing object modules, the linker has to resolve symbolic references, sort program sections into image sections and initialize the image section contents, total link processing time will increase, each process needs {{to have its own}} copy of these modules, so each process takes up more space in physical memory and more disk storage. If these object modules can be linked into one shareable image(see figure 2), the above mentioned problems can be avoided. object <b>module</b> <b>libraries</b> Linker application programs application object modules Figure 1. The executable images linked to the object <b>module</b> <b>libraries.</b> 2 A shar [...] ...|$|R
50|$|The {{majority}} of the basic thermal hydraulic solvers and <b>module</b> <b>libraries</b> are shared by all versions.|$|R
50|$|The JBOL <b>modules</b> <b>library</b> for the jq {{language}} {{contains a}} full implementation for the SNOBOL pattern matching sublanguage.|$|R
50|$|The {{software}} {{features the}} same functionality as Ecolego, {{with the exception}} that the integral structure of the model cannot be changed. However, with a <b>module</b> <b>library</b> created in Ecolego, the user can assemble models by combining components from the library.|$|E
50|$|After the Integra Project ended, the {{development}} of the Integra Live software continued at Birmingham Conservatoire, with Leighton Hargreaves developing the GUI and Jamie Bullock developing the libIntegra library, Integra <b>module</b> <b>library</b> and module host. Hargreaves also developed a Windows-specific build system and installer.|$|E
50|$|Efforts include {{securing}} the Federal Information Processing Standards (FIPS) 140-2 validation for the OpenSSL cryptographic <b>module</b> <b>library,</b> participation in {{development of the}} U.S. Navy's Open Source Guidance Document, {{securing the}} Open Source Corporate Management Information System (OSCMIS) with the Defense Information Systems Agency, {{and working with the}} Department of Homeland Security's Science and Technology Directorate to establish and implement the Homeland Open Security Technology (HOST) program, which promotes open security.|$|E
5000|$|Tool frameworks: Modular {{class and}} <b>module</b> <b>libraries</b> for markers, curves, histograms, Winged-Edged Meshes (WEM) and Contour Segmentation Objects (CSO) are available.|$|R
50|$|Within the {{acquisition}} <b>module</b> <b>libraries</b> can manage their funds and suppliers, place orders for books and periodicals {{and manage the}} subscriptions (predict the arrival of individual volumes and issues based on prediction and frequency patterns).|$|R
50|$|SAGA GIS is {{intended}} to give scientists an effective but easily learnable platform for implementing geoscientific methods. This is achieved by the application programming interface (API). SAGA has a fast-growing set of geoscientific methods, bundled in exchangeable <b>module</b> <b>libraries.</b>|$|R
50|$|TCG {{continues}} {{to revise the}} TPM specification. It published revision 116 of the version 1.2 of TPM specification on March 3, 2011, while the draft revision 1.07 of the version 2.0 of TPM specification was published for public review on March 13, 2014 as a library specification that provides updates to the previously published main TPM specifications. Trusted Platform <b>Module</b> <b>Library</b> Specification Revision 01.16 was released in October 2014 as the latest TPM 2.0 release.|$|E
50|$|A {{stand-alone}} {{program is}} a computer program that does not load any external <b>module,</b> <b>library</b> function or program and {{that is designed to}} boot with the bootstrap procedure of the target processor - it runs on bare metal. In early computers like the ENIAC without the concept of an operating system, standalone programs were the only way to run a computer. Standalone programs are usually written in or complied to the assembly language for the specific hardware.|$|E
5000|$|In {{the final}} year of the Integra 1 project, several GUI prototypes were {{developed}} for the Integra Environment by the Integra Canadian partner CIRMMT. One of these the Integra GUI was developed in the Max/MSP environment by Sean Fergusson, Marlon Schumacher and Geof Holbrook and contained a number of features that were later incorporated into the Integra Live design such as the inclusion of a separate [...] "Performance Pane", a high level <b>module</b> <b>library,</b> single-level containers for modules (Events), a module [...] "Routing Pane", and the association of breakpoint control curves for module parameters with Events.|$|E
40|$|Abstract: Portal Crane {{with its}} large parts is {{inconvenient}} to achieve physical prototype assembly in design process {{because of its}} large span and high precision space assembly needs. Considering virtual assembly system can provide designers with specific <b>modules</b> <b>library,</b> person interactive experience and reliable assembly simulation, this paper modularized the MQ 4025 Portal crane based on analysis of assembly needs, and accomplished corresponding modules modeling by Solidworks, developed a virtual assembly platform by Virtools, realized collision simulation between components and parts by Collision Detection Building Blocks in Virtools, performed a virtual assembly experiment on the platform. Result shows that the platform completes Portal Crane assembly in a shorter time than physical prototype assembly, and it completes the assembly simulation faster than other CAD software by invoking compositive <b>modules</b> <b>library</b> of Portal crane...|$|R
40|$|A new, {{dataflow}} driven, modular visual {{data analysis}} platform with extensive data processing and visualization capabilities is presented. VisNow {{is written in}} Java, easily extendable to incorporate new <b>modules</b> and <b>module</b> <b>libraries.</b> Dataflow networks built {{with the help of}} interactive network editor can be wrapped into stand-alone application for the end users...|$|R
50|$|The {{development}} was initiated {{by a group}} of active system dynamics modellers who had needs and ideas for an open toolset. The new needs for features like hierarchical <b>modules,</b> <b>module</b> <b>libraries,</b> collaborative model development and efficient model communication in system dynamics together with the development of open source modelling framework Simantics and simulation environment OpenModelica drove the developers to start developing an open source modelling and simulation software for system dynamics.|$|R
50|$|The {{first product}} {{developed}} was a GPIB controller (computing) plug-in {{board for the}} IBM PC. The founders eventually {{came up with the}} idea of creating one or more software development tools for the PC which they could sell to provide working capital. The first such product was PolyLibrarian, an object <b>module</b> <b>library</b> utility, which was introduced in late 1982 and written by Kinzer. At the time, there were few, if any, object module librarians available to PC programmers. In 1983, Polytron introduced PolyMake, an MS-DOS version of the well known Unix make utility, initially written by Perkins. The PolyMake product was followed in 1985 by the Polytron Version Control System (PVCS) (also written by Kinzer), that was loosely based on the RCS change control system authored by Walt Tichy while at Purdue University.|$|E
40|$|In this work, VASP [...] Power Simulator is {{presented}} which estimates the total power consumed by a design represented at RT Level (Architectural) in VHDL. Power simulation {{consists of the}} following tasks: (a) characterization of the <b>module</b> <b>library,</b> (b) simulation of the VHDL structural description. The <b>module</b> <b>library</b> consists of register level modules such as adders, registers, multiplexors. In the VHDL Libary, for each module two architectures exists namely, onebit and n-bit. The one-bit architecture has capacitance measuring code embedded in it. The n-bit architecture is an instantiation of 1 -bit architecture using generate statement. Thus the <b>module</b> <b>library</b> characterization is very fast as it is done only for 1 -bit architecture. For a given VHDL structural description, it is simulated using a VHDL simulator and a power profile is obtained. Section 1. Introduction Power consumption is {{becoming one of the}} key constraints that the designer has to address as early as possible in the des [...] ...|$|E
40|$|ODIN/RLV is {{a digital}} {{computing}} {{system for the}} synthesis and optimization of reusable launch vehicle preliminary designs. The system consists of a library of technology modules {{in the form of}} independent computer programs and an executive program, ODINEX, which operates on the technology modules. The technology <b>module</b> <b>library</b> contains programs for estimating all major military flight vehicle system characteristics, for example, geometry, aerodynamics, economics, propulsion, inertia and volumetric properties, trajectories and missions, steady state aeroelasticity and flutter, and stability and control. A general system optimization module, a computer graphics module, and a program precompiler are available as user aids in the ODIN/RLV program technology <b>module</b> <b>library...</b>|$|E
40|$|DRAGONFLOW code {{has been}} {{developed}} to solve three-dimensional Navier-Stokes equations over a complex geometry whose flow domain is discretized with the DRAGON grid-a combination of Chimera grid {{and a collection of}} unstructured grids. In the DRAGONFLOW suite, both OVERFLOW and USM 3 D are presented in form of <b>module</b> <b>libraries,</b> and a master module controls the invoking of these individual modules. This report includes essential aspects, programming structures, benchmark tests and numerical simulations...|$|R
40|$|Large {{programs}} are typically built from separate modules. Traditional whole-program analysis {{cannot be used}} in the context of such modular development. In this paper we consider analysis for programs that combine client <b>modules</b> with precompiled <b>library</b> <b>modules.</b> We define separate analyses that allow <b>library</b> <b>modules</b> and client modules to be analyzed separately from each other. Our target analyses are Andersen's points-to analysis [2] and a side-effect analysis based on it. We perform separate points-to and side-effect analyses of a <b>library</b> <b>module</b> by using worst-case assumptions {{about the rest of the}} program. We also show how to construct summary information about a <b>library</b> <b>module</b> and how to use it for separate analysis of client modules. We present empirical results showing that the separate points-to analyses are practical even for large modules, and that the cost of constructing and storing library summaries is low. Our work is a step toward incorporating practical points-to and side-eff [...] ...|$|R
40|$|Python Forensics {{provides}} many never-before-published proven forensic <b>modules,</b> <b>libraries,</b> {{and solutions}} {{that can be}} used right out of the box. In addition, detailed instruction and documentation provided with the code samples will allow even novice Python programmers to add their own unique twists or use the models presented to build new solutions. Rapid development of new cybercrime investigation tools is an essential ingredient in virtually every case and environment. Whether you are performing post-mortem investigation, executing live triage, extracting evidence from mobile devices or c...|$|R
40|$|Recently, {{there are}} dynamic {{changes in the}} {{activities}} of university libraries. It requires an appropriate response in the university library professionals. The study «Competencies <b>module</b> <b>library</b> and information professional future» was conducted by specialists of Library Marketing, innovation and technical work Objective: Updating and visualization of data on «Competencies <b>module</b> <b>library</b> and information professional future». Objectives: To conduct the survey and analyze the knowledge, skills of Mykolaiv university libraries experts in the modernization of research and information activities of modern libraries. Members: 100 professionals of six Mykolaiv university libraries of methodical association. Methodology – closed questionnaire. Question was formed capable of meeting requirements for the competence of information professionals (librarians, scientists, teachers of library science, information science) and presented by global Special Libraries Association (SLA), the document «Competencies for information Professionals», which was adopted in April 2016. Conclusions: The results of complex sociological research «Competences <b>module</b> <b>library</b> and information professional future» allow: • get an objective picture of the attitude of library professionals to changes in the university libraries • determine the level of information culture of Mykolaiv university libraries specialists; • to adjust plan of in-plant training in university libraries of the city...|$|E
40|$|In the {{previous}} checkpoint, we illustrated the system overview of our fault fault-tolerant design for biochips (see Figure 1). Figure 1 : System overview of fault-tolerant biochip. We are addressing the highlighted components in this checkpoint. In particular, {{we have developed}} a placement algorithm for inserting microfluidic modules onto the biochip. After that, we inject runtime defects to simulate on on-line line behavior of the biochip. Finally, we perform module reconfiguration to relocate defective modules to unused defect-free cells. 2. Module Placement 2. 1 Microfluidic <b>Module</b> <b>Library</b> Performing any analysis using the biochip requires a sequence of different operations. Many of the surveyed research paper define this sequence in a digital microfluidic <b>module</b> <b>library.</b> It would be ideal to implement an actual biomedical process in ou...|$|E
40|$|We {{present a}} {{profiling}} based technique for power estimation. This technique is {{implemented in the}} pdss (Profile Driven Synthesis System) for the synthesis of low power designs. Initially, each module in the <b>module</b> <b>library</b> is characterized for the average switching capacitance per input vector. The input description is simulated using user-specified set of input vectors to collect the profile data for various operators and carriers. The profile data, {{in conjunction with the}} pre-characterized <b>module</b> <b>library</b> is used to estimate the total capacitance switched by each of the valid schedules produced by the pdss scheduler. A valid schedule is one which satisfies other constaints such as area and delay. The schedule with the least switching capacitance estimate is further synthesized to the layout level. Results show an average deviation of 12 % compared with the actual switching capacitance values at the layout level...|$|E
40|$|This thesis {{deals with}} design and {{implementation}} of analytical <b>modules</b> <b>library</b> for administration of buildings in ArcGIS geographic information system. Individual modules are implemented in Python and solve sub-problems when working with geographical data. They can be also connected to the larger units and then solve problems with greater complexity. Central concept of project and journaling systems makes library extensible with new modules. Implemented set of modules process input data from supplier and converts them {{to the structure of}} geographical data in ArcGIS. This conversion is illustrated in this thesis...|$|R
40|$|Euro MET {{has been}} created to address the {{education}} and training needs of professional meteorologists and students in tertiary education throughout Europe and beyond Two <b>module</b> <b>libraries</b> {{have been developed for}} the WWW which are available in English, French, Spanish and German. The modules have been evaluated during their development and after completion. All the project partners used them in courses and training programmes within their institutions. This paper describes the formative and sum‐mative evaluation strategies used and some of the results obtained The efficacy of the evaluation approach adopted with respect {{to the size of the}} project is also discusse...|$|R
2500|$|For Python, in the SciPy <b>library</b> (<b>module</b> [...] ) or NetworkX library ...|$|R
40|$|The {{capabilities}} of the specified scheduling language and the program <b>module</b> <b>library</b> are outlined. The summary is written with the potential user in mind and, therefore, provides maximum insight on how the capabilities will be helpful in writing scheduling programs. Simple examples and illustrations are provided to assist the potential user in applying the {{capabilities of}} his problem...|$|E
40|$|Presented in {{this paper}} is a method {{for the design of}} modular {{reconfigurable}} machine tools (MRMTs). An MRMT is capable of using a minimal number of modules through reconfiguration to perform the required machining tasks for a family of parts. The proposed method consists of three steps: module identification, module determination, and layout synthesis. In the first step, the module components are collected from a family of general-purpose machines to establish a <b>module</b> <b>library.</b> In the second step, for a given family of parts to be machined, a set of needed modules are selected from the <b>module</b> <b>library</b> to construct a desired reconfigurable machine tool. In the third step, a final machine layout is decided though evaluation by considering a number of performance indices. Based on this method, a software package has been developed that can design an MRMT for a given part family...|$|E
40|$|In this paper, a {{preliminary}} design support system for mechanical products is proposed. The preliminary design stage, in which rough design plans are generated, can {{be supported by}} a mechanism for automatic translation from functional requirements to modules and by optimization of arrangements in a module combination set. A <b>module</b> <b>library</b> is proposed as a mechanism for automatic translation. In this library, relationships among functional requirements, primitive functions and modules are represented in a hierarchical class description. The module combination sets that satisfy the functional requirements are generated from selected modules by referencing the <b>module</b> <b>library.</b> A genetic algorithm is applied to optimization of module arrangements in each combination set. Several module arrangements which satisfy functional requirements are obtained. These arrangements offer a rough design plan for the product. A trial implementation of the above procedure is applied to “Lego Mindstorms ” a building block kit for toy robots...|$|E
5000|$|For Python, in the SciPy <b>library</b> (<b>module</b> scipy.sparse.csgraph) or NetworkX library ...|$|R
40|$|In the {{previous}} two checkpoints, we illustrated the effectiveness of our proposed approaches for error detection. There are two main goals for this checkpoint. One is to investigate and brainstorm the method for a fault-tolerant design; the other being to reduce the time complexity of our binary search. Concurrent alternatives primarily focused on two concepts: module placement and module reconfiguration [1]-[4]. When formulating our approach for fault tolerance, we encountered three challenges. First, existing microfluidic <b>module</b> <b>libraries</b> are inadequate for large arrays. Another difficulty is that the calculation for Defect-Tolerance Index is vague. Last is the formulation of module placement algorithm. Despite these difficulties, we propose a method to fuse fault detection and fault tolerance. 2. Problem Formulation...|$|R
40|$|This code {{supplements}} the author's thesis: [URL] archive contains 5 Verilog files {{developed as}} part of the thesis "A Computer Scientist’s Evaluation of Publically Available Hardware Trojan Benchmarks. " These files are a provided as an aid to researchers who wish to verify conclusions drawn {{as part of}} this thesis or conduct additional research into the RS 232 benchmarks found at trust-hub. org. The first two files are <b>module</b> <b>libraries</b> which are required for the synthesis of RS 232 -T 1000 through RS 232 -T 2000. The remaining files are test benches which can be used to conduct experiments on any of the benchmarks in the RS 232 set. The author's thesis may be found at [URL]...|$|R
