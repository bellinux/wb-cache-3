22|8|Public
5000|$|... #Subtitle level 3: Ensure the <b>Magic</b> <b>Packet</b> travels from {{source to}} {{destination}} ...|$|E
5000|$|... #Subtitle level 3: Respond to the <b>Magic</b> <b>Packet</b> {{and restore}} full power ...|$|E
50|$|To {{create a}} <b>Magic</b> <b>Packet</b> {{you need to}} know the MAC address of the {{specific}} computer that will be turned on.Software to send WoL magic packets is available for all modern platforms, including Windows, Macintosh and Linux, plus many smart phones. Examples include: Wake On Lan Gui, Lan Helper, <b>Magic</b> <b>Packet</b> Utility, NetWaker for Windows, Nirsoft WakeMeOnLAN, WakeOnLANx, EMCO WOL, Aquila Tech Wake on Lan, ManageEngine WOL utility, FusionFenix and SolarWinds WOL Tool. There are also web sites that allow a <b>Magic</b> <b>Packet</b> to be sent online without charge. Example source code for a developer to add Wake-on-LAN to a program is readily available in many computer languages.|$|E
5000|$|Wake on LAN can be {{configured}} {{to limit}} wake up <b>packets</b> to just <b>magic</b> <b>packets</b> from the Power management tab of the NIC property page in Device Manager.|$|R
50|$|Most home routers {{are able}} to send <b>magic</b> <b>packets</b> to LAN, for example routers with the DD-WRT, Tomato or PfSense {{firmware}} have a built-in Wake On Lan client. The 3rd party FOSS project OpenWrt supports both Linux implementations for WoL etherwake and WoLs.|$|R
50|$|<b>Magic</b> <b>packets</b> {{are sent}} via the data link or OSI-2 layer, {{which can be}} used or abused by anyone on the same LAN, unless the L2 LAN {{equipment}} is capable of (and configured for) filtering such traffic to match site-wide security requirements.|$|R
5000|$|Most 802.11 {{wireless}} interfaces do {{not maintain}} a link in low power states and cannot receive a <b>magic</b> <b>packet</b> ...|$|E
5000|$|Ethernet connections, {{including}} {{home and}} work networks, wireless data networks and the Internet itself, are based on frames sent between computers. Wake-on-LAN ("WOL") is implemented using a specially designed frame called a <b>magic</b> <b>packet,</b> which is sent to all computers in a network, among them the computer to be awakened. The <b>magic</b> <b>packet</b> contains the MAC address of the destination computer, an identifying number built into each network interface card ("NIC") or other ethernet device in a computer, that enables it to be uniquely recognized and addressed on a network. Powered-down or turned off computers capable of Wake-on-LAN will contain network devices able to [...] "listen" [...] to incoming packets in low-power mode while the system is powered down. If a <b>magic</b> <b>packet</b> is received that is directed to the device's MAC address, the NIC signals the computer's power supply or motherboard to initiate system wake-up, much {{in the same way}} as pressing the power button would do.|$|E
50|$|In that case, {{software}} tools like a packet analyzer {{can help with}} Wake-on-LAN troubleshooting as they allow confirming (while the PC is still on) that the <b>magic</b> <b>packet</b> is indeed visible to a particular computer's NIC. The same <b>magic</b> <b>packet</b> can then be used {{to find out if}} the computer powers up from an offline state. This allows networking issues to be isolated from other hardware issues. In some cases they also confirm that the packet was destined for a specific PC or sent to a broadcast address and they can additionally show the packet's internals.|$|E
50|$|On various routers, this TCP or UDP port 9 for the Discard Protocol (or port 7 for the Echo Protocol {{relaying}} ICMP datagrams) is {{also used}} by default as a proxy to relay Wake-on-LAN (WOL) <b>magic</b> <b>packets</b> from the Internet to hosts on the local network in order to wake up them remotely (these hosts must also have their network adapter configured to accept WOL datagrams and the router must have this proxy setting enabled, and possibly also a configuration of forwarding rules in its embedded firewall to open these ports on the Internet side).|$|R
50|$|On routers {{that have}} this capability, the default TCP or UDP ports {{preconfigured}} to relay WOL requests are usually ports 7 (Echo Protocol) and/or 9 (Discard Protocol). However this proxy setting must be enabled in the router, and port forwarding rules may {{needed to be}} configured in its embedded firewall in order to accept <b>magic</b> <b>packets</b> coming from the Internet side to these restricted port numbers, and to allow rebroadcasting them on the local network (normally to the same ports and the same TCP or UDP protocol). Such routers may also be configurable to use different port numbers for this proxying service.|$|R
50|$|On various routers, this TCP or UDP port 7 for the Echo Protocol for {{relaying}} ICMP datagrams (or port 9 for the Discard Protocol) is also configured {{by default}} {{as a proxy}} to relay Wake-on-LAN (WOL) <b>magic</b> <b>packets</b> from the Internet to hosts on the local network in order to wake them up remotely (these hosts must also have their network adapter configured to accept WOL datagrams and the router must have this proxy setting enabled, and possibly also a configuration of forwarding rules in its embedded firewall to open these ports on the Internet side).|$|R
50|$|The <b>magic</b> <b>packet</b> is a {{broadcast}} frame containing anywhere within its payload 6 bytes of all 255 (FF FF FF FF FF FF in hexadecimal), followed by sixteen repetitions {{of the target}} computer's 48-bit MAC address, {{for a total of}} 102 bytes.|$|E
50|$|The <b>magic</b> <b>packet</b> is sent on {{the data}} link layer (layer 2 in the OSI model) and when sent, is {{broadcast}} to all attached devices on a given network, using the network broadcast address; the IP-address (layer 3 in the OSI model) is not used.|$|E
50|$|Since the <b>magic</b> <b>packet</b> is only scanned for {{the string}} above, and not {{actually}} parsed by a full protocol stack, {{it may be}} sent as any network- and transport-layer protocol, although it is typically sent as a UDP datagram to port 0, 7 or 9, or directly over Ethernet as EtherType 0x0842.|$|E
50|$|When the <b>magic</b> wake <b>packet</b> is {{received}} by the LAN device, the encapsulated data is passed to the ME, {{which has its own}} TCP/IP stack and can decapsulate the packet. The ME then asserts its request line (REQ#), the host acknowledges by asserting grant (GNT#), and the message is passed to the host to initiate a wake event.|$|R
40|$|Networked end-systems such as {{desktops}} and {{set-top boxes}} are often left powered-on, but idle, leading to wasted energy consumption. An alternative {{would be for}} these idle systems to enter low-power sleep modes. Un-fortunately, today, a sleeping system sees degraded func-tionality: first, a sleeping device loses its network “pres-ence ” which is problematic to users and applications that expect to maintain access to a remote machine and, sec-ond, sleeping can prevent running tasks scheduled dur-ing times of low utilization (e. g., network backups). Var-ious solutions to these problems have been proposed over the years including wake-on-lan (WoL) mechanisms that wake hosts when specific packets arrive, {{and the use of}} a proxy that handles idle-time traffic on behalf of a sleep-ing host. As of yet, however, an in-depth evaluation of the potential for energy savings, and the effectiveness of proposed solutions has not been carried out. To remedy this, in this paper, we collect data directly from 250 en-terprise users on their end-host machines capturing net-work traffic patterns and user presence indicators. With this data, we answer several questions: what is the po-tential value of proxying or using <b>magic</b> <b>packets?</b> which protocols and applications require proxying? how com-prehensive does proxying need to be for energy benefits to be compelling? and so on. We find that, although there is indeed much potential for energy savings, trivial approaches are not effective. We also find that achieving substantial savings requires a careful consideration of the tradeoffs between the proxy complexity and the idle-time functionality available to users, and that these tradeoffs vary with user environ-ment. Based on our findings, we propose and evaluate a proxy architecture that exposes a minimal set of APIs to support different forms of idle-time behavior...|$|R
50|$|With this technology, the <b>magic</b> <b>packet</b> may be {{encapsulated}} in TCP packets {{thus allowing}} the packet to traverse network infrastructures via routers and thereby increasing the attack surface, something which traditional Wake-on-LAN does not enable. An advantage in Intel-centric deployments {{is that the}} solution does not require non-Intel drivers. If no host/ME interaction is needed, HECI and other ME technologies are OS independent.|$|E
5000|$|Further, the WoL {{protocol}} {{operates on}} a [...] "deeper level" [...] in the multi-layer networking architecture. To ensure the <b>Magic</b> <b>Packet</b> gets from source to destination, while the destination is sleeping, the ARP Binding (aka IP & MAC binding) must typically {{be set in}} a NAT Router. This allows the Router to forward the <b>Magic</b> <b>Packet</b> to the sleeping computer's MAC adapter at a networking layer below typical IP usage. In the NAT router ARP (aka MAC & IP) binding requires just a dedicated IP number and the MAC address of the destination computer. There are some security implications associated with ARP binding (see ARP spoofing) however as long as none of the computers connected to the LAN are compromised, an attacker must use a computer that is connected directly to the target LAN (plugged into the LAN via cable, or gains free access to the LAN by breaking through the WiFi connection security).|$|E
50|$|The {{computer}} being awakened {{does not}} know whether the wakeup signal comes from another machine on the same network or from anywhere else. If the <b>magic</b> <b>packet</b> {{can be made to}} reach a computer, it can originate anywhere (e.g., from the Internet). This can be achieved by a virtual private network (VPN), which makes the remote computer appear {{to be a member of}} the local area network (LAN). In the absence of a VPN, a computer connected to a router can be awakened if a <b>magic</b> <b>packet</b> sent over the Internet is routed to it. This requires any firewall to be set up to allow entry of the Wake-on-LAN signal to a specified port. The port can be forwarded to the computer to be awakened; or some routers permit the packet to be broadcast to the entire LAN. However, some routers do not support this as they will not forward broadcast packets.|$|E
5000|$|The machine's BIOS must be set {{to allow}} Wake-on-LAN. To allow wakeup from powered-down state S5, wakeup on PME (Power Management Event) is also required. The Intel adapter allows [...] "Wake on Directed Packet", [...] "Wake on Magic Packet", [...] "Wake on <b>Magic</b> <b>Packet</b> from power off state", and [...] "Wake on Link". Wake on Directed Packet is {{particularly}} useful as the machine will automatically come out of standby or hibernation when it is referenced, without the user or application needing to explicitly send a <b>magic</b> <b>packet.</b> Unfortunately in many networks waking on directed packet (any packet with the adapter's MAC address or IP address) or on link is likely to cause wakeup immediately after going to a low-power state. Details for any particular motherboard and network adapter {{are to be found}} in the relevant manuals; there is no general method. Knowledge of signals on the network may also be needed to prevent spurious wakening.|$|E
5000|$|Packet Two, Desert <b>Magic</b> <b>Packet</b> (cover cartoon by Bob Dell) - Singing Sands of Fort Oliver; Hermit Business; Telling About When a Man's Wealth Was Measured by the Size of His Bedroll; Pageant of Death Valley; The Magic of Desert Air, by George A. Stingle; Mirage; Desert Weather, Unusual as Usual; Whisky Joe, A Story With a Moral; More About Pegleg Smith, by W.T. Russell ...|$|E
5000|$|The use of Wake-on-LAN {{technology}} on enterprise networks can sometimes conflict with {{network access control}} solutions such as 802.1x or MAC-based authentication, which may prevent <b>magic</b> <b>packet</b> delivery if a machine's WoL hardware has not been designed to maintain a live authentication session while in a sleep state. [...] Configuration of these two features in tandem often requires tuning of timing parameters and thorough testing.|$|E
5000|$|Wake-on-LAN {{can be a}} {{difficult}} technology to implement, because it requires appropriate BIOS, network card and, sometimes, operating system and router support to function reliably. In some cases, hardware may wake from one low power state but not from others. This means that due to hardware issues the computer may be waking up from the [...] "fully off state" [...] (S5) but doesn't wake from sleep or hibernation or vice versa. Also, {{it is not always}} clear what kind of <b>magic</b> <b>packet</b> a NIC expects to see.|$|E
5000|$|Certain NICs {{support a}} {{security}} feature called [...] "SecureOn". It {{allows users to}} store within the NIC a hexadecimal password of 6 bytes. Clients have to append this password to the <b>magic</b> <b>packet.</b> The NIC wakes the system only if the MAC address and password are correct. This security measure significantly decreases the risk of successful brute force attacks, by increasing the search space by 48 bits (6 bytes), up to 296 combinations if the MAC address is entirely unknown. However any network eavesdropping will expose the cleartext password.|$|E
50|$|AMT uses TLS {{encryption}} {{to secure}} an out-of-band communication tunnel to an AMT-based PC for remote management commands such as Wake-on-LAN. AMT secures the communication tunnel with Advanced Encryption Standard (AES) 128-bit encryption and RSA keys with modulus lengths of 2,048 bits. Because the encrypted communication is out-of-band, the PC’s hardware and firmware receive the <b>magic</b> <b>packet</b> before network traffic reaches the software stack for {{the operating system}} (OS). Since the encrypted communication occurs “below” the OS level, it is less vulnerable to attacks by viruses, worms, and other threats that typically target the OS level.|$|E
5000|$|Software which sends a WoL <b>magic</b> <b>packet</b> is {{referred}} to in different circles as both a [...] "client" [...] and a [...] "server", {{which can be a}} source of confusion. While WoL hardware/firmware is arguably performing the role of a [...] "server", web based interfaces which act as a gateway through which users can issue WoL packets without downloading a local client often become known as [...] "The Wake On LAN Server" [...] to users. Additionally, software that administers WoL capabilities from the host OS side may be carelessly referred to as a [...] "client" [...] on occasion, and of course, machines running WoL generally tend to be end-user desktops, and as such, are [...] "clients" [...] in modern IT parlance.|$|E
50|$|The payload {{may also}} include a <b>magic</b> <b>packet</b> for the Wake-on-LAN protocol, but the minimum payload in that case is longer than shown. The Echo Request {{typically}} does not receive any reply if the host was sleeping in hibernation state, but the host still wakes up from sleep state if its interface is configured to accept wakeup requests. If the host is already active and configured to allow replies to incoming ICMP Echo Request packets, the returned reply should include the same payload. This {{may be used to}} detect that the remote host was effectively woken up, by repeating a new request after some delay to allow the host to resume its network services. If the host was just sleeping in low power active state, a single request wakes up that host just enough to allow its Echo Reply service to reply instantly if that service was enabled. The host does not need to completely wake up all devices, and may return to low power mode after a short delay. Such configuration may be used to avoid a host to enter in hibernation state, with much longer wake up delay, after some time passed in low power active mode.|$|E
40|$|In {{this paper}} we present EnergySave, a smart {{energy-saving}} system that, by leveraging the consolidated WoL (Wake on LAN) technology, allows the remote wake-up of PCs from a centralized management server, providing easy and secure power management capabilities for local or remote IP-based networks of personal computers (PCs). We also present a lightweight web-based platform implementing the remote management interface as less intrusively as possible. Finally, we model the mathematical saving functions {{to be used}} in order to evaluate through simulation the amount of potential energy savings, and hence the whole framework effectiveness, both in the general case and in a real case scenario. Results show that significant savings are achievable provided that the hardware supports the Wake-on-LAN specifications and that proper configuration of the Web server is set-up, allowing the WoL <b>magic</b> <b>packet</b> to travel to the destination hosts and wake them up only when they are really needed. Peer ReviewedPostprint (published version...|$|E
40|$|Includes bibliographical {{references}} (pages 49 - 51) LiteSwitch is {{a remote}} power management tool {{that controls the}} power states of machines via a web interface, relying on an agent that runs on the host machines and the Wake-on-LAN protocol. The aim is to reduce wasteful power consumption, thus lowering costs and carbon dioxide emissions. This paper details the project life-cycle in developing a first iteration of LiteSwitch including all core functionality. There are numerous additional features that could be added in future iterations. Some unexpected limitations to Wake-on-LAN were discovered. The reliable routing of magic packets across subnets is not possible given the default configuration of most routers. This is because magic packets are most readily addressed as subnet directed broadcasts, and due to a security threat known as a smurf attack, routers in their default configuration do not route subnet directed broadcasts. Various potential remedies and work-arounds are suggested, including a configuration strategy for routers that would allow for the routing of magic packets while still preventing harmful subnet directed broadcasts from being routed. Options {{that do not require}} any configuration of the network are also explored. It was also discovered that Apple iMac's network interface cards do not support the ability to wake the machine from a shutdown state. As this is a hardware issue there is little {{that can be done to}} circumvent the problem. OS X does allow for an iMac to be woken from a sleeping state by <b>magic</b> <b>packet.</b> Therefore LiteSwitch is able to send iMacs to sleep and still be able to wake them, or it can shut them down remotely but then it will lose control of that machine until it is turned on manually...|$|E

