4|1|Public
50|$|When {{compared}} to normal application programs, the elements composing a microprogram exist on a lower conceptual level. To avoid confusion, each microprogram-related element is differentiated by the micro prefix: microinstruction, microassembler, <b>microprogrammer,</b> microarchitecture, etc.|$|E
50|$|Born in 1952 in Taiwan, Mr. Chu {{moved to}} the United States in 1976.Professionally, Kansen has a Master's in Electrical Engineering from Cal State Northridge, {{and worked as a}} Microdiagnostics <b>Microprogrammer</b> at IBM for 18 years. Kansen and Daisy have been married for 30 years and they have two children, Ann and Walt.|$|E
40|$|Some {{differences}} in skill and techniques required for conversion from programmer to <b>microprogrammer</b> are discussed. The primary things {{with which the}} programmer should work are hardware architecture, hardware/software trade off, and interfacing. The biggest differences, however, will stem from the {{differences in}} applications than from differences in machine size. The change to real-time programming {{is the most important}} of these differences, particularly on dedicated microprocessors. Another primary change is programming with a more computer-naive user in mind, and dealing with his limitations and expectations...|$|E
50|$|Computer {{architecture}} is a specialized engineering activity {{that tries to}} arrange the registers, calculation logic, buses {{and other parts of}} the computer in the best way for some purpose. Computer architects have applied large amounts of ingenuity to computer design to reduce the cost and increase the speed and immunity to programming errors of computers. An increasingly common goal is to reduce the power used in a battery-powered computer system, such as a cell-phone. Many computer architects serve an extended apprenticeship as <b>microprogrammers.</b>|$|R
40|$|This Paper {{describes}} the characteristics and the optimization techniques {{of a high}} level microprogramming language. MPL 200, designed and developed for FACOM U- 200 L. U- 200 L has two microinstruction registers and asynchronous poliphase parallel architecture, which enables parallel execution of microinstructions. Making these features work effectively, {{it is necessary for}} <b>microprogrammer</b> to know about microparallelism, resource conflict, hardware timing and optimization technique. This makes user-microprogramming diffiult and troublesome. MPL 200 releases microprogrammers from these problems, and is characterized by (1) it 2 ̆ 7 s employing structured programming concerned with the control flow, (2) it 2 ̆ 7 s implementing several automatic optimization techniques by means of checking resource conflict and information flow...|$|E

