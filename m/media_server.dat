547|278|Public
25|$|This {{synchronization}} feature {{allows the}} Plex <b>Media</b> <b>Server</b> {{to be shut}} down completely when the synchronization has finished. The client's apps will be automatically aware of that and stream content from these online accounts instead when the file is available and stored there. When the <b>media</b> <b>server</b> is online again, the progression in episode views will be synced back to the server from the viewer apps.|$|E
25|$|Introduced in 2009, Plex <b>Media</b> <b>Server</b> was {{originally}} called Plex Media Center and {{was based on}} Kodi formerly known as XBMC. Plex Media Center's source code was initially forked from XBMC on May 21, 2008. This fork continued {{to be used as}} a front-end media player on Linux for Plex's <b>media</b> <b>server</b> back-end until Plex fully replaced it with a proprietary version in October 2015.|$|E
25|$|Plex <b>Media</b> <b>Server</b> (sometimes called PMS or PMS Software) is the {{back-end}} <b>media</b> <b>server</b> {{component of}} Plex. It organizes audio (music) and visual (photos and videos) content from personal media libraries and streams {{it to their}} player counterparts, either on the same machine, the same local area network, or over the Internet. It can run on Windows, macOS, Linux, FreeBSD, a plethora of NAS devices or on Nvidia Shield TV.|$|E
50|$|UPnP <b>media</b> <b>servers</b> are {{available}} for most operating systems and many hardware platforms. UPnP AV <b>media</b> <b>servers</b> can either be categorized as software-based or hardware-based. Software-based UPnP AV <b>media</b> <b>servers</b> can be run on a PC. Hardware-based UPnP AV <b>media</b> <b>servers</b> may run on any NAS devices or any specific hardware for delivering media, such as a DVR. As of May 2008, there were more software-based UPnP AV <b>media</b> <b>servers</b> than there were hardware-based servers.|$|R
40|$|Distributing backup clients load {{among the}} {{existing}} backup <b>media</b> <b>servers</b> {{can be considered}} {{as a part of the}} general Load Balancing Problem. Each backup client is connected to specific backup <b>media</b> <b>servers</b> via so called policies and has specific amount of data to be backed up. Our goal is to distribute approximately evenly all the backup clients loads among the existing <b>media</b> <b>servers</b> which handle backup operations. We suggest a heuristic load balancing algorithm with linear execution time on the number of loads...|$|R
5000|$|MSML, MSCML: markup {{languages}} {{to control}} telephony <b>media</b> <b>servers.</b>|$|R
25|$|Facilitating the {{connection}} between a Plex Player App and a Plex <b>Media</b> <b>Server</b> without the hassle need to play with NAT, port redirection, etc. The user simply needs to sign in on his/her Plex <b>Media</b> <b>Server</b> with his/her Plex Account, {{and do the same}} on the Plex client apps (e.g. iOS, Android,...), and {{the connection}} is done. This is even working with multiple Plex Media Servers in multiple locations.|$|E
25|$|While Plex was {{initially}} a Mac OS X-only application, Plex <b>Media</b> <b>Server</b> became available for Windows and Linux too.|$|E
25|$|The {{reverse side}} is also {{supported}} with the feature allowing to sync videos, photos and music from a mobile device to the Plex <b>Media</b> <b>Server.</b>|$|E
50|$|Two {{comparable}} <b>media</b> <b>servers</b> are Plex and Windows Media Center.|$|R
5000|$|The {{following}} streaming <b>media</b> <b>servers</b> {{are capable}} of streaming Theora video: ...|$|R
50|$|The {{following}} table {{compares the}} operating system support and basic features of various UPnP AV <b>media</b> <b>servers.</b>|$|R
25|$|Camera Upload is {{a feature}} {{allowing}} to wireless sync photos only from phones or tablets to Plex <b>Media</b> <b>Server</b> {{in order to}} access them from other devices.|$|E
25|$|Unlike {{the initial}} free {{front-end}} {{that was based}} on XBMC open source software, Plex <b>Media</b> <b>Server</b> is now a combination of 10% proprietary software and 90% open-source code.|$|E
25|$|Player apps are Plex's {{front-end}} {{allowing the}} user to manage and play music, photos, videos and online content from a local or remote computer running Plex <b>Media</b> <b>Server.</b>|$|E
50|$|While early {{digital media}} players used {{proprietary}} communication protocols {{to interface with}} <b>media</b> <b>servers,</b> today most digital media players either use standard-based protocols such SMB/CIFS/SAMBA or NFS, or rely on some version of UPnP (Universal Plug and Play) and DLNA (Digital Living Network Alliance) standards. DLNA-compliant digital media players and <b>Media</b> <b>Servers</b> is meant to guarantee a minimum set of functionality and proper interoperability among digital <b>media</b> players and <b>servers</b> regardless of the manufacturer, but unfortunately not every manufacturer follows the standards perfectly {{which can lead to}} incompatibility.|$|R
5000|$|... #Caption: The Roku XD/S player {{supports}} streaming internet {{media and}} local media through a USB port or home <b>media</b> <b>servers</b> like Plex ...|$|R
50|$|The Real Time Streaming Protocol (RTSP) is {{a network}} control {{protocol}} {{designed for use}} in entertainment and communications systems to control streaming <b>media</b> <b>servers.</b> The protocol is used for establishing and controlling media sessions between end points. Clients of <b>media</b> <b>servers</b> issue VCR-style commands, such as play, record and pause, to facilitate real-time control of the media streaming from the server to a client (Video On Demand) or from a client to the server (Voice Recording).|$|R
25|$|An iOS {{application}} {{was released on}} August 30, 2010 and provided {{a way to use}} iOS devices to remote control a Plex <b>Media</b> <b>Server</b> and view media on the iOS device.|$|E
25|$|Previously {{known as}} Plex Media Center, Plex Home Theater is the {{software}} component {{used for a}} long time as the front-end media player for Plex's back-end server component Plex <b>Media</b> <b>Server.</b>|$|E
25|$|On October 5, 2014, Plex {{added support}} for {{translating}} the <b>media</b> <b>server</b> interface to languages others than English. The localization is hosted at Get Localization and anyone applying {{either as a}} volunteer or professional translator can begin to translate the app.|$|E
5000|$|MSML covers some of {{the same}} ground as the earlier MSCML markup {{language}} (originally from Snowshore), and both languages are important references for the IETF MediaCTRL (media control) working group, that aims to stardardize control of <b>media</b> <b>servers.</b> MSML creator Garland Sharratt acknowledged the MSCML had [...] "shown the way" [...] for driving <b>media</b> <b>servers</b> via scripting, and so a family line can be seen from MSCML through MSML to today's MediaCTRL working group at the IETF.|$|R
40|$|This paper {{presents}} the definition {{as well as}} a number of methods for the solution of a new combinatorial optimiza-tion problem, called S-MAMP that has to be solved for the efficient management of a network of <b>media</b> <b>servers.</b> This network of servers can be implemented on top of a closely connected network of workstations as well as on a wide area network of <b>media</b> <b>servers.</b> The problem studied here addresses the management of media assets on such a net-work, i. e. the placement/replication of media assets on a net- work of <b>media</b> <b>servers</b> taking the user requests, storage capacity and bandwidth limitations of the server network into account. The algorithms presented for the solution of the S-MAMP problem make efficient use of the ability of au-dio/video encoding standards such as MPEG to encode one stream in different bitrates providing scalable service qual-ity to the user in this way. ...|$|R
5000|$|Convedia - a {{maker of}} VoIP/IMS <b>Media</b> <b>Servers,</b> which was {{acquired}} by RadiSys in 2006 for $US 105 Million and {{is the basis of}} Radisys' MediaEngine solutions.|$|R
25|$|The Plex <b>Media</b> <b>Server</b> desktop {{application}} runs on Windows, macOS and Linux-compatibles including {{some types of}} NAS devices. The 'server' {{desktop application}} organizes video, audio and photos from your collections and from online services, enabling the players to access and stream the contents.|$|E
25|$|Plex <b>Media</b> <b>Server</b> via its web-based {{structure}} has a RESTful API returning either XML or JSON responses. This API {{provides a way}} for clients to browse and manage media libraries, as well as rich transcode functionality for video, images, and audio and synchronization.|$|E
25|$|The {{feature is}} {{especially}} useful when travelling offline {{or without a}} broadband connection. The user can sync partially its movies, music or photos collection to their device, in a format readable by the latter (see Transcoding). View progression of episodes are synced back to the Plex <b>Media</b> <b>Server</b> when a connection is available again.|$|E
50|$|NetBackup {{features}} a central master server which manages both <b>media</b> <b>servers</b> (containing the backup media) and clients. Core server platforms include Solaris, HP-UX, AIX, Tru64, Linux and Windows.|$|R
5000|$|Digital Media Player (DMP): find {{content on}} digital <b>media</b> <b>servers</b> (DMS) and provide {{playback}} and rendering capabilities. Examples include TVs, stereos and home theaters, wireless monitors and game consoles.|$|R
40|$|The MediaCtrl {{working group}} in the IETF has {{proposed}} an architecture for controlling media services. The Session Initiation Protocol (SIP) is used as the signaling protocol that provides many inherent capabilities for message routing. In addition to such signaling properties, a need exists for intelligent, application-level media service selection based on non-static signaling properties. This is especially true when considered in conjunction with deployment architectures that include 1 :M and M:N combinations of Application <b>Servers</b> and <b>Media</b> <b>Servers.</b> This document introduces a Media Resource Broker (MRB) entity, which manages the availability of <b>Media</b> <b>Servers</b> and the <b>media</b> resource demands of Application Servers. The document includes potential deployment options for an MRB and appropriate interfaces to Application <b>Servers</b> and <b>Media</b> <b>Servers.</b> Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
25|$|As of March 20, 2017, free users' {{playback}} on Android devices {{is limited}} to one minute for music and video, watermark on photos, until the app is unlocked (similar to iOS app), when playing media from a Plex <b>Media</b> <b>Server,</b> as the app cannot play content not created on the device itself without it.|$|E
25|$|Netscape {{integrated}} {{a number}} of products initially developed by InSoft, including the first streaming media system called Netscape <b>Media</b> <b>Server,</b> the first Internet telephony technology called Netscape Conference, and the first media developers' platform called Netscape LiveMedia, as well as Netscape CoolTalk which was built on {{an early version of}} InSoft's shared whiteboard application.|$|E
25|$|VLC {{media player}} (commonly known as VLC) {{is a free}} and open-source, {{portable}} and cross-platform media player and streaming <b>media</b> <b>server</b> developed by the VideoLAN project. VLC is available for desktop operating systems and mobile platforms, such as Windows 10 Mobile, Windows Phone, Android, Tizen, iOS. VLC is also available on digital distribution platforms such as Apple's App Store, Google Play and Windows Store.|$|E
30|$|Cloud {{platform}} activates {{the cloud}} matrixes and multimedia streaming <b>media</b> <b>servers</b> for forwarding the cloud data. User service request would {{be integrated into}} multimedia cloud platform distribution scheme through the cooperative computation.|$|R
2500|$|Since Plex <b>Media</b> <b>Servers</b> do not {{all have}} a domain name or a stable IP address (a dynamic public IP address or even a local one), the {{solution}} had to provide a dynamic DNS for each user. Each Plex user is thus provided with a DNS domain [...] where the hash part is probably a hash of the user or the server name ID. Each user domain name is prefixed by an IP address. Each user can have several DNS records each representing the IP addresses the user's Plex <b>Media</b> <b>Servers</b> are reachable. Here is an example with the dig command: ...|$|R
40|$|Real-time <b>media</b> <b>servers</b> are {{becoming}} increas-ingly {{important as the}} Internet supports more and more multimedia applications. In order to meet these ever increasing demands, real-time <b>media</b> <b>servers</b> {{will be responsible for}} support-ing a large number of clients {{with a wide range of}} QoS requirements. In this paper, we pro-pose a granularity aware (m; k) scheduler (GAS) which successfully controls the tradeo between QoS granularity and scalability. We propose al-gorithms for group balance, stream join, burst sending, and feedback that exploit individual stream characteristics while avoiding per-stream state cost. Besides presenting detailed examples of GAS, we evaluate our work through simula-tion studies and experiments. ...|$|R
