8|9|Public
5000|$|... #Caption: OpenBSD section 8 intro <b>manpage,</b> {{displaying}} {{in a text}} console ...|$|E
5000|$|As of October 2006, the <b>manpage</b> for xfs on Debian states that: ...|$|E
5000|$|A list of {{often used}} keys follows below. All keys are {{optional}} unless otherwise noted. For a full list, see Apple's <b>manpage</b> for [...]|$|E
50|$|In 2010, OpenBSD {{deprecated}} troff for formatting <b>manpages</b> {{in favour}} of mandoc, a specialised compiler/formatter for <b>manpages</b> with native support for output in PostScript, HTML, XHTML, and the terminal.|$|R
5000|$|... troff and nroff: for {{typesetting}} and formatting Unix <b>manpages.</b>|$|R
50|$|AsciiDoc is a human-readable {{document}} format, semantically {{equivalent to}} DocBook XML, but using plain-text mark-up conventions. AsciiDoc documents {{can be created}} using any text editor and read “as-is”, or rendered to HTML or any other format supported by a DocBook tool-chain, i.e. PDF, TeX, Unix <b>manpages,</b> e-books, slide presentations, etc.|$|R
50|$|BSD/386 1.0 was {{released}} in March 1993. The company sold licenses and support for it, taking advantage of terms in the BSD License which permitted use of the BSD software in proprietary systems, as long as credit {{was given to the}} author. The company in turn contributed code and resources to the development of non-proprietary BSD operating systems.In the meantime, Jolitz had left BSDi and independently released an open source BSD for PCs, called 386BSD. One of the advantages of the BSDi system was a complete and thorough <b>manpage</b> documentation for the entire system, including complete syntax and argument explanations, examples, file usage, authors, and cross-references to other commands. <b>Manpage</b> documentation is far poorer in modern Linux systems.|$|E
50|$|The {{command line}} {{conversion}} program tool {{is used by}} the GUI to import and export datasets, netlists and schematics from and to other CAD/EDA software. The supported file formats as well as usage information {{can be found on the}} <b>manpage</b> of qucsconv.|$|E
5000|$|... sub Point::new { # Here, Point->new(4, 5) {{will result}} in $class being 'Point'. # It's a {{variable}} to support subclassing (see the perloop <b>manpage).</b> my ($class, $x, $y) = @_; bless $y, $class; # Implicit return}sub Point::distance { my ($self, $from) = @_; my ($dx, $dy) = ($$self0 - $$from0, $$self1 - $$from1); sqrt($dx * $dx + $dy * $dy);} ...|$|E
40|$|We {{report on}} the {{treatment}} of ambiguity in ExtrAns, a system that performs an exhaustive linguistic analysis of UNIX <b>manpages</b> to do answer extraction over them. Disambiguation is performed in two stages. The first stage consists {{of a set of}} simple rules that delete some of the wrong interpretations that can be spot with purely syntactic information. The second stage extends the use of Brill and Resnik's algorithm to disambiguate several types of attachment ambiguities. Ambiguities that pass the disambiguation procedures are handled by ExtrAns by displaying the answers to the user with graded selective highlighting...|$|R
40|$|Nifti 2 Dicom (2012 - 06 - 28) 0. 4. 3 	Filtering files when opening NIfTi/DICOM (Issue # 14) 	Fix {{warnings}} on. desktop file {{reported by}} lintian 	Fix build on Mac OS 	Fix "Crash if nifti image opened {{is not a}} nifti image" (Issue # 12) 	Fix "Crash if DICOM opened is not a DICOM" (Issue # 13) 	Improve information about the opened volume (Issue # 7) 	Create and install <b>manpages</b> 	Cleanup (translate comments into English and remove old GDCM 1 stuff 	Added progress bar in the finalizing page (Issue # 17) 	Improved information about opened volume (Issue # 7...|$|R
5000|$|... fish has [...] "search as you type" [...] {{automatic}} suggestions {{based on}} history and current directory.This is essentially like bash's [...] history search, {{but because it}} is always on instead of being a separate mode, the user gets continuous feedback while writing the command line, and can select suggestions with the arrow keys, or as in bash, press [...] for a tab completion instead. Tab-completion is feature-rich, expanding file paths (with wildcards and brace expansion), variables, and many command specific completions. Command-specific completions, including options with descriptions, can to some extent be generated from the commands' <b>manpages.</b>|$|R
40|$|The mining {{of textual}} {{artifacts}} is requisite for many important activities in software engineering: tracing of requirements; retrieval of components from a repository; location of <b>manpage</b> text for {{an area of}} question, etc. Many such activities leave the “final word ” to the analyst – have the relevant items been retrieved? are there other items {{that should have been}} retrieved? When analysts {{become a part of the}} text mining process, their decisions on the relevance of retrieved elements impact the final outcome of the activity. In this paper, we undertook a pilot study to examine the impact of analyst decisions on the final outcome of a task. ...|$|E
40|$|This paper {{reports on}} the {{scalability}} of the answer extraction system ExtrAns. An answer extraction system locates the exact phrases in the documents that contain the explicit answers to the user queries. Answer extraction systems are therefore more convenient than document retrieval systems in situations where the user wants to find specific information in limited time. ExtrAns performs answer extraction over UNIX manpages. It has been constructed by combining available linguistic resources and implementing only a few modules from scratch. A resolution procedure between the minimal logical form of the user query and the minimal logical forms of the <b>manpage</b> sentences finds {{the answers to the}} queries. These answers are displayed to the user, together with pointers to the respective manpages, and the exact phrases that contribute to the answer are highlighted. This paper shows that the increase in response times is not a big issue when scaling the system up from 30 to 500 documents, and that the response times for 500 documents are still acceptable for a real-time answer extraction system. Comment: 5 page...|$|E
40|$|Nifti 2 Dicom (2014 - 10 - 24) 0. 4. 9 	Update vtkKWImage from ITKApps {{repository}} 	Fix {{issues with}} VTK version >= 6 	Add FindTCLAP. cmake file {{to be able}} to use it w/o pkg-config 	Fix empty statement 	Use "cmake -E copy" instead of "cp" 	Do not add <b>manpages</b> target if gzip is not available 	Use a vector instead of variable length arrays 	Add icon to qnifti 2 dicom on windows 	Link qnifti 2 dicom with qtmain and build as WIN 32 and MACOSX_BUNDLE 	Use FindQt 4 imported targets if available 	Build with Qt 4 definitions and disable MSVC warnings 	Fix adding -DDEBUG on multi-config generators 	Do not set position of the windows 	Bugfixes and improvements in the image widget in the init phase 	Use Nifti 2 Dicom instead of QNifti 2 Dicom as displayed string in GUI 	Packaging for Windows 	Fix build with Qt...|$|R
40|$|Enhancements Manual and API {{documentation}} {{has been}} much improved Passing -Dintrospection=false to meson disables introspection data An error is generated if duplicate node names exist in JSON Added ufo_profiler_call_blocking to wait for execution Added ufo_resources_get_kernel_from_source_with_opts Added an NVIDIA Dockerfile example The deadlock warning {{has been turned into}} a debug message The scheduler returns early if no OpenCL platform is found Fix # 135 : added UFO_GPU_NODE_INFO_NAME Fixes UFO is compiled with gnu 99 now to avoid GLOB_TILDE complaints Fixed wrong references and highlighting in the manual if UFO_DEVICE_TYPE=cpu is set, no GPUs are used Fix # 142 : fixed multi input and GPU processing Fix # 142 : prune graph correctly for multiple GPU Fix # 137 : support JSON array properties Fix # 133 : output build flag string for each device Fix # 132 : do not segfault on unknown properties Fix # 126 : abort execution without resources Fix # 129 : allocate enough memory for index array Fix # 125 : build and install <b>manpages</b> with meson Breaks Property sets have been removed from the JSON specificatio...|$|R
40|$|This release {{has several}} {{improvements}} and bug fixes: 	 	Now GNSS-SDR {{can be installed}} on the system with the usual ‘cmake [...] / && make && sudo make install’. 	 	 	Added volk_gnsssdr library, a volk-like library implementing some specific kernels and ensuring portable executables. It comes with a ‘volk_gnsssdr_profile’ executable, in the fashion of volk_profile. Volk and volk_gnsssdr are compatible and can be mixed together. This is expected to enable faster execution of the software receiver in upcoming versions. 	 	 	The former ‘rtlsdr_signal_source’ {{has been replaced by}} a more general ‘osmosdr_signal_source’ compatible with all those front-ends accessible by the OsmoSDR driver (bladeRF, hackRF, etc.) in addition to RTL-based dongles. 	 	 	Added <b>manpages</b> when binaries gnss-sdr, volk_gnsssdr_profile and front-end-cal are installed. 	 	 	Now GNSS-SDR can be build on i 386, amd 64, armhf, armel and arm 64 architectures. 	 	 	Now GNSS-SDR builds on Ubuntu 14. 04 and 14. 10, Debian jessie/sid and Mac OS X 10. 9 and 10. 10. 	 	 	Improved detection of dependencies, specially when installed as. deb packages. 	 	 	Added a ‘check' target with some minimal tests. 	 	 	Added support for interleaved I/Q byte-size sample files. 	 	 	Minor bug fixes, updated documentation and code cleaning...|$|R

