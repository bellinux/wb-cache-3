71|135|Public
5|$|An {{offshoot}} of the work at MIT {{was the beginning of}} digital circuit design theory by one of Bush's graduate students, Claude Shannon. Working on the analytical engine, Shannon described the application of Boolean algebra to electronic circuits in his landmark master's thesis, A Symbolic Analysis of Relay and Switching Circuits. In 1935, Bush was approached by OP-20-G, which was searching for an electronic device to aid in codebreaking. Bush was paid a $10,000 fee to design the Rapid Analytical <b>Machine</b> (<b>RAM).</b> The project went over budget and was not delivered until 1938, when it was found to be unreliable in service. Nonetheless, it was an important step toward creating such a device.|$|E
25|$|Random access <b>machine</b> (<b>RAM)</b> – {{a counter}} machine with {{indirect}} addressing and, usually, an augmented instruction set. Instructions {{are in the}} finite state machine {{in the manner of}} the Harvard architecture.|$|E
2500|$|List of labeled instructions, {{usually in}} {{sequential}} order: A finite list of instructions [...] In {{the case of}} the counter machine, random access <b>machine</b> (<b>RAM)</b> and pointer machine the instruction store is in the [...] "TABLE" [...] of the finite state machine; thus these models are example of the Harvard architecture. In {{the case of the}} RASP the program store is in the registers; thus {{this is an example of}} the von Neumann architecture. See also Random access machine and Random access stored program machine.Usually, like computer programs, the instructions are listed in sequential order; unless a jump is successful the default sequence continues in numerical order. An exception to this is the abacus (Lambek (1961), Minsky (1961)) counter machine models—every instruction has at least one [...] "next" [...] instruction identifier [...] "z", and the conditional branch has two.|$|E
50|$|Hibernation is {{an example}} that uses {{an image of the}} entire <b>machine's</b> <b>RAM.</b>|$|R
30|$|In case of {{the sample}} {{generator}} {{this would be the}} case if even one sample would be too large for an individual <b>machine’s</b> <b>RAM.</b>|$|R
50|$|Weitek {{attempted}} to re-enter at the low-end market with their W464 (486) and W564 (P5) systems, which used the host <b>machine's</b> <b>RAM</b> as the frame buffer to lower costs. These {{were one of}} the reasons the company was purchased by Rockwell shortly after they shipped.|$|R
50|$|The RASP is a {{universal}} Turing machine (UTM) built on a random-access <b>machine</b> <b>RAM</b> chassis.|$|E
50|$|Future File: The most {{speculative}} register {{state of}} the <b>machine.</b> <b>RAM</b> indexed by logical register number.|$|E
50|$|Random access <b>machine</b> (<b>RAM)</b> - {{a counter}} machine with {{indirect}} addressing and, usually, an augmented instruction set. Instructions {{are in the}} finite state machine {{in the manner of}} the Harvard architecture.|$|E
50|$|Advertisements {{described}} the TS2068 as offering 72K of memory, color, and sound {{for a price}} under $200. Like the TS2048 was announced as a 40K memory <b>machine</b> (16K <b>RAM</b> + 24K ROM), so the 2068 was announced as a 72K <b>machine</b> (48K <b>RAM</b> + 24K ROM).|$|R
2500|$|Trapdoor slot {{under the}} <b>machine,</b> for <b>RAM</b> {{expansion}} and real-time clock ...|$|R
50|$|The memory {{issue was}} also flagged by Crash magazine, which {{pointed out that}} the floppy disk format meant that games had to be loaded into the <b>machine's</b> <b>RAM</b> (originally {{intended}} to be 128k) in turn requiring the system to be constantly accessing the disk drive. Konix intended to remedy the problem with RAM upgrade cartridges, provided that the price of RAM fell in the future.|$|R
50|$|Architectural Register File or Retirement Register File (RRF): The {{committed}} register {{state of}} the <b>machine.</b> <b>RAM</b> indexed by logical register number. Typically written into as results are retired or committed out of a reorder buffer.|$|E
5000|$|... "Morrow" [...] is the {{eleventh}} maxi single by Dragon Ash; released in 2003. Remixers on this single include Fantastic Plastic <b>Machine,</b> <b>Ram</b> Jam World, and Dry & Heavy. Morrow was featured on Virgin Air's British flight radio Japanese Pop in winter of 2003.|$|E
50|$|In {{computer}} science, random-access <b>machine</b> (<b>RAM)</b> is {{an abstract}} {{machine in the}} general class of register machines. The RAM {{is very similar to}} the counter machine but with the added capability of 'indirect addressing' of its registers. Like the counter machine the RAM has its instructions in the finite-state portion of the machine (the so-called Harvard architecture).|$|E
5000|$|The {{auxiliary}} slot {{could accept}} a 1 kB memory card {{to enable the}} 80-column display. This card contained only RAM; the hardware and firmware for the 80-column display was built into the Apple IIe, remaining fairly compatible with the older Videx-style cards, even though the low-level details were very different. An [...] "extended 80-column card" [...] with more memory expanded the <b>machine's</b> <b>RAM</b> to 128 kB.|$|R
50|$|The AlphaSmart saved every {{keystroke}} {{directly to}} the <b>machine's</b> <b>RAM,</b> which was maintained by a battery backup even when powered down. AlphaSmarts could transfer data either by a special program that communicated with the AlphaSmart or by the simpler method of transmitting the keystrokes of the written text {{as if it were}} the computer's keyboard. When not transferring text, the AlphaSmart could be used as a standard keyboard.|$|R
40|$|We {{present some}} decidability and undecidability results for subsets of the BlenX Language, a process-calculi-based {{programming}} language developed for modelling biological processes. We show {{that for a}} core subset of the language (which considers only communication primitives) termination is decidable. Moreover, we prove that by adding either global priorities or events to this core language, we obtain Turing equivalent languages. The proof is through encodings of Random Access <b>Machines</b> (<b>RAMs),</b> a well-known Turing equivalent formalism, into our subsets of BlenX. All the encodings are shown to be correct...|$|R
5000|$|... van Emde Boas {{comments}} {{on a similar}} problem {{with respect to the}} random access <b>machine</b> (<b>RAM)</b> abstract model of computation sometimes used in place of the Turing machine when doing [...] "analysis of algorithms":"The absence or presence of multiplicative and parallel bit manipulation operations is of relevance for the correct understanding of some results in the analysis of algorithms.|$|E
5000|$|A random-access <b>machine</b> (<b>RAM)</b> is an {{abstract}} computational-machine model identical to a multiple-register counter machine {{with the addition}} of indirect addressing. At the discretion of an instruction from its finite state machines TABLE, the machine derives a [...] "target" [...] registers address either (i) directly from the instruction itself, or (ii) indirectly from the contents (e.g. number, label) of the [...] "pointer" [...] register specified in the instruction.|$|E
5000|$|The {{concept of}} a random-access <b>machine</b> (<b>RAM)</b> starts with the {{simplest}} model of all, the so-called counter machine model. Two additions move {{it away from the}} counter machine, however. The first enhances the machine with the convenience of indirect addressing; the second moves the model toward the more conventional accumulator-based computer with the addition of one or more auxiliary (dedicated) registers, the most common of which is called [...] "the accumulator".|$|E
40|$|Abstract. Thermal {{error of}} machine tool {{is the main}} in total machine tool error, and {{obviously}} impairs {{the accuracy of the}} <b>machined</b> workpieces. <b>Ram</b> is a very important component of heavy-duty floor type boring-milling machine, and its thermal deformation is a significant source causing errors in machining process. Aiming at the thermal elongation of heavy type milling boring <b>machine</b> tool <b>ram,</b> the <b>machine</b> tool thermal errors are measured and compensated. Temperature compensation function in NC system is applied. Experiment results shows that 90 % ram positioning error can be compensated...|$|R
50|$|The machine {{included}} IBM drivers bundled on {{a floppy}} disk, which enabled properly written software {{to operate in}} the <b>machine's</b> <b>RAM</b> and then run on the native Mega Drive hardware. A good example of this shown in the Puzzle Construction program, {{one of the very few}} software titles included with the TeraDrive, which included a PC-side editor suite for changing the features of a falling-block puzzle game, then playable on the Mega Drive side. The operating system shipped with the system was IBM's DOS J4.0/V, which was similar to PC DOS.|$|R
50|$|Pointer machine - a {{blend of}} counter <b>machine</b> and <b>RAM</b> models. Less common and more {{abstract}} than either model. Instructions are in the finite state machine {{in the manner of}} the Harvard architecture.|$|R
5000|$|The RASP is a random-access <b>machine</b> (<b>RAM)</b> model that, {{unlike the}} RAM, has its program in its [...] "registers" [...] {{together}} with its input. The registers are unbounded (infinite in capacity); whether {{the number of}} registers is finite is model-specific. Thus the RASP is to the RAM as the Universal Turing machine is to the Turing machine. The RASP {{is an example of the}} von Neumann architecture whereas the RAM is an example of the Harvard architecture.|$|E
5000|$|Depending on {{the objects}} {{one likes to}} {{manipulate}} in the computations (numbers like nonnegative integers or alphanumeric strings), two models have obtained a dominant position in machine-based complexity theory::the off-line multitape Turing machine..., which represents the standard model for string-oriented computation, and:the random access <b>machine</b> (<b>RAM)</b> as introduced by Cook and Reckhow ..., which models the idealized Von Neumann style computer. van Emde Boas 1990:4 [...] Only in the related area of analysis of algorithms this role is {{taken over by the}} RAM model. van Emde Boas 1990:16 ...|$|E
5000|$|The {{random access}} <b>machine</b> (<b>RAM)</b> is an {{abstract}} machine model used {{in computer science}} to study algorithms and complexity for standard serial computing. The PRAM computational model is an abstract parallel machine model that had been introduced to similarly study parallel algorithms and complexity for parallel computing, when they were yet to be built. Researchers have developed {{a large body of}} knowledge of parallel algorithms for the PRAM model. These parallel algorithms are also known for being simple, by standards of other approaches to parallel algorithms.|$|E
30|$|For {{the static}} bending test, a {{universal}} testing machine of 200 -kN capacity (made by Tokyokoki Seizosho Ltd.) {{was used for the}} 100 -kN range. Third-point loading was applied with a total span of 360  cm. The total span deflection of green round timber was measured using the CDP- 100 displacement gauge with 10 -cm capacity (made by Tokyo Sokki Kenkyujo Co., Ltd.). The displacement gauge was mounted on a yoke to measure the neutral axis deflection. The targeted duration of testing was 5  min. The apparent Young’s modulus was obtained based on the total span deflection, and calculated at the middle circumference of the round timber. The bending strength was calculated at the circumference of a failure part from the ratio of the mid-length circumference to the circumference at the loading point. However, 9 of the 40 green round timbers did not show failure, even at the extension limit of the testing <b>machine’s</b> <b>ram</b> cylinder. For these specimens, load at the extension limit of the test <b>machine’s</b> <b>ram</b> cylinder was considered the maximum load. For the air-dried round timber, the total span deflection was measured using the rolled-in type DP- 500 E displacement gauge with 50 -cm capacity (made by Tokyo Sokki Kenkyujo Co., Ltd.). The displacement gauge was mounted on a yoke to measure the neutral axis deflection of air-dried round timber. All air-dried round timbers failed within the extension limit of the ram cylinder.|$|R
40|$|Abstract. Random Access <b>Machines</b> (<b>RAMs)</b> are a {{deterministic}} Turing-complete formalism {{especially well}} suited for being encoded in other formalisms. This {{is due to the}} fact that RAMs can be defined starting from very primitive concepts and operations, which are unbounded natural numbers, tuples, successor, predecessor and test for equality to zero. Since these concepts are easily available also in theorem-provers and proof-assistants, RAMs are good candidates for proving Turingcompleteness of formalisms using a proof-assistant. In this paper we describe an encoding in Coq of RAMs into a Linda Calculus endowed with the Ordered Semantics. We discuss the main difficulties that must be faced and the techniques we adopted to solve them...|$|R
5000|$|Together {{with the}} {{register}} <b>machine,</b> the <b>RAM,</b> and the pointer machine the RASP {{makes up the}} four common sequential machine models, called this to distinguish them from the [...] "parallel" [...] models (e.g. parallel random access machine) van Emde Boas (1990).|$|R
5000|$|The {{original}} Amiga&nbps;1000 is {{the only}} model to have 256 KB of Amiga Chip RAM, which can be expanded to 512 KB {{with the addition of}} a daughterboard under a cover in the center front of the <b>machine.</b> <b>RAM</b> may also be upgraded via official and third-party upgrades, with a practical upper limit of about 9 MB of [...] "fast RAM" [...] due to the 68000's 24-bit address bus. This memory is accessible only by the CPU permitting faster code execution as DMA cycles are not shared with the chipset.|$|E
50|$|An {{offshoot}} of the work at MIT {{was the beginning of}} digital circuit design theory by one of Bush's graduate students, Claude Shannon. Working on the analytical engine, Shannon described the application of Boolean algebra to electronic circuits in his landmark master's thesis, A Symbolic Analysis of Relay and Switching Circuits. In 1935, Bush was approached by OP-20-G, which was searching for an electronic device to aid in codebreaking. Bush was paid a $10,000 fee to design the Rapid Analytical <b>Machine</b> (<b>RAM).</b> The project went over budget and was not delivered until 1938, when it was found to be unreliable in service. Nonetheless, it was an important step toward creating such a device.|$|E
50|$|In {{computer}} science, {{a parallel}} random-access machine (PRAM) is a shared-memory abstract machine. As its name indicates, the PRAM {{was intended as}} the parallel-computing analogy to the random-access <b>machine</b> (<b>RAM).</b> In {{the same way that}} the RAM is used by sequential-algorithm designers to model algorithmic performance (such as time complexity), the PRAM is used by parallel-algorithm designers to model parallel algorithmic performance (such as time complexity, where the number of processors assumed is typically also stated). Similar to the way in which the RAM model neglects practical issues, such as access time to cache memory versus main memory, the PRAM model neglects such issues as synchronization and communication, but provides any (problem-size-dependent) number of processors. Algorithm cost, for instance, is estimated using two parameters O(time) and O(time × processor_number).|$|E
50|$|The next {{member of}} the line was the Apple IIGS computer, {{released}} on September 15, 1986. A radical departure from the existing Apple II line, the IIGS featured a true 16-bit microprocessor, the 65C816, operating at 2.8 MHz with 24-bit addressing, allowing expansion up to 8 MB of RAM without the bank-switching hassles of the earlier <b>machines</b> (<b>RAM</b> cards with more than 4 MB were never directly supported by Apple). It introduced two completely new graphic modes sporting higher resolutions with a palette of 4,096 colors and up to 256 colors on screen; however, only 4 (at 640×200 resolution) or 16 (at 320×200 resolution) colors could be used on a single line at a time.|$|R
40|$|Theorem 1 (Main Theorem). Every {{non-deterministic}} RAM computation in time t can be simulated by a non-deterministic oblivious two-tape TM in time t polylog(t). We {{prove this}} theorem in two steps. First, we show how to simulate non-deterministic <b>RAM</b> <b>machines</b> using non-deterministic multi-tape TMs with polylogarithmic overhead. Then, we show how to simulate multi-tape TMs using oblivious two-tape TMs. 1 RAM to Multi-tape Lemma 1. Every non-deterministic RAM computation in time t can be simulated by a non-deterministic multi-tape TM in time t polylog(t). Definition 1 (Nearly linear time). A function is in nearly linear time if {{and only if}} it is in time(n(log n) O(1)). Definition 2 (NQL). NQL is the class of languages accepted by non-deterministic multi-tape TMs in nearly linear time. Definition 3 (NNLT). NNLT is the class of languages accepted by non-deterministic random access machines in nearly linear time. We assume that random-access <b>machines</b> (<b>RAM</b> <b>machines,</b> random-access TMs, etc.) are equivalent for nearly linear time. The proofs are straightforward, but {{beyond the scope of this}} proof. Lemma 2. Multi-tape TMs can sort in nearly linear time. This lemma is due to Schnorr [4]. We will take it for granted. The idea is that since merging two lists can be done in linear time on a 3 -tape TM, sorting a list using merge sort can be done in nearly linear time...|$|R
40|$|Abstract. An optimal (n 2) {{lower bound}} is shown for the time-space product of any R-way {{branching}} program that determines those values which occur exactly {{once in a}} list of n integers in the range [1, R] where R_-> n. This (n 2) tradeoff also applies to the sorting problem and thus improves the previous time-space tradeoffs for sorting. Because the R-way branching program is such a powerful model, these time-space product tradeoffs also apply to all models of sequential computation that have a fair measure of space such as off-line multitape Turing machines and off-line log-cost random access <b>machines</b> (<b>RAMs).</b> Key words, lower bounds, time-space tradeoff, computational complexity, sorting, branching programs AMS(MOS) subject classifications. 68 P 10, 68 Q 10, 68 Q 25 1. Introduction. Th...|$|R
