5|86|Public
5000|$|... can {{restore the}} most {{recently}} <b>minimized</b> <b>window.</b> (If there are [...] "always on top" [...] windows, {{the lowest of}} these will be selected instead.) ...|$|E
5000|$|This {{functionality}} {{does not}} {{switch to a}} window that has been minimized. To restore such a window, one needs to press [...] {{as many times as}} necessary to choose the desired window, and press the Option key just prior to releasing the Command button. This will restore the <b>minimized</b> <b>window.</b>|$|E
50|$|For {{a display}} device without a frame buffer, {{such as the}} old vector {{graphics}} displays, the commands were executed every {{fraction of a second}} to maintain and animate the output. In modern systems, the commands need only be executed when they have changed or in order to refresh the output (e.g., when restoring a <b>minimized</b> <b>window).</b>|$|E
5000|$|... is {{equivalent}} to one [...] except that <b>minimized</b> <b>windows</b> are selected without being restored.|$|R
5000|$|The {{order of}} the [...] list {{corresponds}} directly to the z-order, once the windows have been sorted according to 'always-on-top' status. Alt-Shift-Esc is equivalent to one Alt-Shift-Tab except that <b>minimized</b> <b>windows</b> are selected without being displayed.|$|R
5000|$|Aero Shake: Shaking (quickly {{dragging}} {{back and}} forth) a <b>window</b> <b>minimizes</b> all other <b>windows.</b> Shaking it again brings them back.|$|R
5000|$|On {{the first}} day of every month, at 5:00 pm, the worm uses SHUTDOWN.EXE to {{initiate}} a shutdown and show a popup with text Kagou-anti-Kro$oft says not today!. A <b>minimized</b> <b>window</b> often appears on startup with the title [...] "Driver Memory Error". Another message saying [...] "S3 Driver Memory Alloc Failed!" [...] occasionally pops up. The worm also adds a registry key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\cAg0u and edits AUTOEXEC.BAT to make Windows launch it on startup.|$|E
5000|$|Windows 1.0, {{released}} in 1985, features a horizontal bar {{located at the}} bottom of the screen where running programs reside when minimized (referred to as [...] "iconization" [...] at the time), represented by icons. A window can be minimized by double-clicking its title bar, dragging it onto an empty spot on the bar, or by issuing a command from one of its menus. A <b>minimized</b> <b>window</b> is restored by double-clicking its icon or dragging the icon out of the bar.|$|E
50|$|RocketDock {{is able to}} show live updates of <b>minimized</b> <b>windows</b> as in Mac OS X, and in Windows Vista it {{can show}} live {{thumbnail}} updates on the taskbar. It is compatible with MobyDock, ObjectDock, RK Launcher, and Y'z Dock skins, and is compatible with and borrows from Stardock ObjectDock's publicly published Docklet API.|$|R
5000|$|... {{if current}} window is maximized, restores it; {{otherwise}} <b>minimizes</b> current <b>window.</b>|$|R
50|$|The bar {{features}} multiple slots for {{icons and}} expands vertically {{to provide with}} more rows as more slots are needed. Its color {{is the same as}} that of the screen background, which can be customized. <b>Minimized</b> <b>windows</b> can be freely placed in any of the empty slots. Program windows cannot overlap the bar unless maximized.|$|R
5000|$|<b>Minimizing</b> a <b>window</b> also {{sends it}} {{to the back of}} the Z-order in the same way as [...]|$|R
50|$|Windows 98 and Windows Desktop Update for Windows 95 {{introduced}} {{the ability to}} <b>minimize</b> foreground <b>windows</b> by clicking their button on the taskbar.|$|R
5000|$|RK Launcher {{is a free}} {{application}}, {{similar to}} the dock in the AquaGUI Or Mac OS X. The application has support for themes and can support docklets made for ObjectDock and Y'z Dock. Icons with the file extension [...]PNG and [...]ICO can {{be placed on the}} dock for shortcuts to applications and documents. The application also mimics the smooth zooming and scrolling effects of the Mac OS X smooth zooming animations, as well as the effects used when <b>minimizing</b> <b>windows</b> (Aladdin's Lamp Effect).|$|R
25|$|The Finder is a file browser {{allowing}} {{quick access}} to {{all areas of the}} computer, which has been modified throughout subsequent releases of macOS. Quick Look is part of the Finder since version 10.5. It allows for dynamic previews of files, including videos and multi-page documents without opening any other applications. Spotlight, a file searching technology which has been integrated into the Finder since version 10.4, allows rapid real-time searches of data files; mail messages; photos; and other information based on item properties (metadata) and/or content. macOS makes use of a Dock, which holds file and folder shortcuts as well as <b>minimized</b> <b>windows.</b>|$|R
40|$|The {{effect of}} mass {{injection}} {{on the shuttle}} infrared leeside temperature sensing (SILTS) pod window surfaces in reducing <b>window</b> heating and <b>minimizing</b> <b>window</b> lens radiation during the reentry data taking period is investigated. Heat transfer coefficients on and around the simulated windows and window cavities are determined. Heat transfer rates and window coolant flow rates are reported for the SILTS configuration. A comparison of two windows' geometries and their effects on the heat transfer rate is discussed and oil flow photographs are presented to indicate how mass injection affects the flow field near the SILTS window...|$|R
50|$|The Finder is a file browser {{allowing}} {{quick access}} to {{all areas of the}} computer, which has been modified throughout subsequent releases of macOS. Quick Look is part of the Finder since version 10.5. It allows for dynamic previews of files, including videos and multi-page documents without opening any other applications. Spotlight, a file searching technology which has been integrated into the Finder since version 10.4, allows rapid real-time searches of data files; mail messages; photos; and other information based on item properties (metadata) and/or content. macOS makes use of a Dock, which holds file and folder shortcuts as well as <b>minimized</b> <b>windows.</b>|$|R
50|$|Windows in {{all types}} of {{buildings}} were large and regularly placed on a grid; this was partly to <b>minimize</b> <b>window</b> tax, which was in force throughout the period in the United Kingdom. Some windows were subsequently bricked-in. Their height increasingly varied between the floors, and they increasingly began below waist-height in the main rooms, making a small balcony desirable. Before this the internal plan and function of the rooms can generally not be deduced from the outside. To open these large windows the sash window, already developed by the 1670s, became very widespread. Corridor plans became universal inside larger houses.|$|R
50|$|Window {{management}} - Opening multiple <b>windows,</b> <b>minimizing,</b> maximizing and resizing AIR windows.|$|R
5000|$|The titlebar {{provides}} a meta button and facilities to <b>minimize</b> and maximize <b>windows</b> ...|$|R
5000|$|The [...] "traffic light" [...] close, <b>minimize,</b> and {{maximize}} <b>window</b> buttons have appeared somewhat brighter.|$|R
2500|$|... restores {{the default}} window size and {{state of the}} active window, if maximized. Otherwise, <b>minimizes</b> the active <b>window.</b>|$|R
40|$|While {{manipulating}} an interface, users often {{generate a}} proliferation of windows that overlap {{with each other and}} cause disorganization. Given a cluttered screen, many actions are possible to reorganize the configuration including moving and <b>minimizing</b> <b>windows.</b> This paper claims that three types of knowledge xist to aid the user and the system in intelligently reducing the clutter. They are the knowledge of window characteristics, window content, and user problem-solving context. We present a system called P 4 P. It implements a planner that currently uses the first and second knowledge types to achieve a state of reduced screen-clutter given arbitrary window configurations. Two examples illustrate the process. We conclude that, while necessary, knowledge of geometrical window characteristics alone is not sufficient to effectively manage the user interface...|$|R
50|$|John Siracusa, {{writing for}} Ars Technica, {{also pointed out}} some issues with the Dock around the {{releases}} of Mac OS X Public Beta in 2000. He noted that because the Dock is centered, adding and removing icons changes {{the location of the}} other icons. In a review of Mac OS X v10.0 the following year, he also noted that the Dock does far too many tasks than it should for optimum ease-of-use, including launching apps, switching apps, opening files, and holding <b>minimized</b> <b>windows.</b> Siracusa further criticised the Dock after the release of Mac OS X v10.5, noting that it was made less usable for the sake of eye-candy. Siracusa criticized the 3D look and reflections, the faint blue indicator for open applications, and less distinguishable files and folders.|$|R
50|$|The Dock, as {{featured}} in macOS and its predecessor NeXTSTEP, {{is also a}} kind of taskbar. The macOS Dock is application-oriented instead of window-oriented. Each running application is represented by one icon in the Dock regardless of how many windows it has on screen. A textual menu can be opened by right-clicking on the dock icon that gives access to an application's windows. Mac OS X 10.2 added the ability for an application to add items of its own to this menu. <b>Minimized</b> <b>windows</b> also appear in the dock, in the rightmost section, represented by a real-time graphical thumbnail of the window's contents. The trash can is also represented in the Dock, as a universal metaphor for deletion. For example, dragging selected text to the trash should remove the text from the document and create a clipping file in the trash.|$|R
50|$|Aero Shake {{allows users}} to clear up any clutter on their screen by shaking (dragging back and forth) a window of their choice with the mouse. All other <b>windows</b> will <b>minimize,</b> while the <b>window</b> the user shook stays active on the screen. When the window is shaken again, they are all restored, similar to desktop preview.Use when you have manyopen windows on your desktop. This feature will <b>minimize</b> all <b>windows</b> except the one you shake. Click and hold on the title bar of the window you need open and shake the mouse. The window you shake will {{maximize}} and all others will be minimized. To restore all windows, shake the mouse again whilst {{holding on to the}} title bar of the open window.|$|R
40|$|In {{this paper}} we {{introduce}} a new localization framework for wavelet transforms, such as the 1 D wavelet transform and the Shearlet transform. Our goal is to design nonadaptive window functions that promote sparsity in some sense. For that, we introduce a framework for analyzing localization aspects of window functions. Our localization theory diverges from the conventional theory in two ways. First, we distinguish between the group generators, and the operators that measure localization (called observables). Second, we define the uncertainty of a signal transform based on a window as a whole, instead of defining the uncertainty of an individual window. We show that the uncertainty of a window function, in the signal space, {{is closely related to}} the localization of the reproducing kernel of the wavelet transform, in phase space. As a result, we show that using uncertainty <b>minimizing</b> <b>window</b> functions, results in representations which are optimally sparse in some sense...|$|R
5000|$|In early 1996, Netscape {{announced}} that the next release of its browser, codenamed [...] "Constellation", would completely integrate with Windows and add a new shell, codenamed [...] "HomePort", which would present the same files and shortcuts no matter which machine a user logged into. Microsoft started working on a similar Internet Explorer release, codenamed [...] "Nashville". Internet Explorer 4.0 was redesigned and resulted in two products: the standalone IE4 and Windows Desktop Update, which updated the shell with features such as Active Desktop, Active Channels, Web folders, desktop toolbars such as the Quick Launch bars, ability to <b>minimize</b> <b>windows</b> by clicking their button on the taskbar, HTML-based folder customization, single click launching, image thumbnails, folder infotips, web view in folders, Back and Forward navigation buttons, larger toolbar buttons with text labels, favorites, file attributes in Details view, and an address bar in Windows Explorer, among other features. It also introduced the My Documents shell folder.|$|R
5000|$|When <b>minimized,</b> <b>windows</b> are [...] "sucked" [...] {{into the}} Dock using the [...] "Genie effect" [...] or [...] "Scale effect." [...] Both {{of the effects}} are {{customizable}} by the user. The former makes a window turn into a curvy shape {{so it looks like}} reverse animation of a genie exiting a lamp, and the latter scales down the window until it is small enough to be in the Dock. By pressing the shift key, both effects can be seen in slow motion. These keystrokes can also be applied to other Aqua effects such as Dashboard, Mission Control (macOS), formerly Exposé, and Front Row. Holding Control as well as Shift makes the minimize effect take twice as long as just holding Shift. Holding just Control also slows down the animation slightly. There is another undocumented dock effect called [...] "Suck" [...] which can be enabled by hand editing a configuration file or using a Terminal command; this appears to be the same effect that accompanies the removal of widgets from the Dashboard.|$|R
50|$|The {{top panel}} usually {{contains}} a clock and notification area, while the bottom panel contains buttons for navigating between virtual desktops, the window list proper, and a button which <b>minimizes</b> all <b>windows</b> (similarly to Windows' Show desktop button). The contents of panels are handled by widgets called panel applets, which can consist of application shortcuts, search tools, or other tools. The {{contents of the}} panels can be moved, removed, or configured in other ways.|$|R
40|$|To prospectively assess liver ADC (apparent {{diffusion}} coefficient) repeatability from cardiac-triggered diffusion-weighted images {{obtained with}} an individually predetermined optimal cardiac time <b>window</b> <b>minimizing</b> cardiac-related effects and {{to evaluate a}} signal filtering method aimed at artifact elimination. SCOPUS: ar. jFLWINinfo:eu-repo/semantics/publishe...|$|R
40|$|Selecting salient {{points from}} {{two or more}} images for {{computing}} correspondence is a well studied problem in image analysis. This paper describes a new and effective technique for selecting these tiepoints using condition numbers, with application to image registration and mosaicking. Condition numbers are derived for point-matching methods based on <b>minimizing</b> <b>windowed</b> objective functions for 1) translation, 2) rotation-scaling-translation (RST) and 3) affine transformations. Our principal {{result is that the}} condition numbers satisfy K Trans K Affine. That is, if a point is ill-conditioned with respect to point-matching via translation then it is also unsuited for matching with respect to RST and affine transforms. This is fortunate since K Trans is easily computed whereas KRST and K Affine are not. The second half of the paper applies the condition estimation results to the problem of identifying tiepoints in pairs of images for the purpose of registration. Once these points have been matched (after culling outliers using a RANSAC-like procedure) the registration parameters are computed. The postregistration error between the reference image and the stabilized image is then estimated by evaluating the translation between these images at points exhibiting good conditioning with respect to translation...|$|R
50|$|Goaltimate {{offensive}} strategy mimics that of {{a basketball}} offense's half-court set. Offensive players stand to the fore of the scoring area and make streaking cuts behind the goal. Throwers attempt to either strike through the goal, or, when this is impossible, throw the disc to an open player in position before the goal. Defenders position themselves between the offensive players and the scoring area, and attempt to <b>minimize</b> throwing <b>windows</b> by remaining aware of where the disc is and where a scoring opportunity may ensue.|$|R
50|$|The Windows 98 shell {{integrates}} {{all of the}} enhancements from Windows Desktop Update, an Internet Explorer 4 component, such as the Quick Launch toolbar, deskbands, Active Desktop, Channels, {{ability to}} <b>minimize</b> foreground <b>windows</b> by clicking their button on the taskbar, single click launching, Back and Forward navigation buttons, favorites, and address bar in Windows Explorer, image thumbnails, folder infotips and web view in folders, and folder customization through HTML-based templates. Another feature of this new shell is that dialog boxes now {{show up in the}} Alt-Tab sequence.|$|R
50|$|This {{is meant}} to {{indicate}} that the application is temporarily unresponsive, a state from which the application should recover. It also may indicate that the application has entered an unrecoverable state or an infinite loop. During this time the user is prevented from closing, resizing, or even <b>minimizing</b> the <b>windows</b> of the affected application, although moving the window is still possible in OS X, as well as previously hidden parts of the window being usually redrawn, even when the application is otherwise unresponsive. While one application is unresponsive, typically other applications are usable.|$|R
40|$|Windows {{are used}} quite {{frequently}} in a GUI environment. The greatest advantage of using windows {{is that each}} window creates a virtual screen space. Hence, although the physical screen space {{is limited to a}} few inches, use of windows can create unlimited screen space to display innumerable items. The use of windows facilitates the user to open and interact with multiple programs or documents simultaneously in different windows. Sometimes a single program may also open multiple windows to display various items. The user can resize the windows and move their location time to time as desired. However, there are several concerns of a window relating to its size, appearance, positioning, color, visibility, resizability etc. For example, the window should have a minimum and a maximum size, dragging and resizing the window should be easy, one window should not be obscured by another window, windows should adjust their size and location in order to match with the changes in the resolution and display environment etc. This article illustrates six patents from US Patent database solving problems relating to displaying and resizing of windows. The inventions include automatic resizing and relocating of windows, alternative modes of displaying windows to accommodate within the limited display area, combining both spatial and temporal methods to resize the <b>window,</b> locking and <b>minimizing</b> <b>windows</b> and making the windows invisible on specific situations. Comment: 10 pages, 6 figure...|$|R
