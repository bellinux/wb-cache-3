3|25|Public
40|$|Library of Congress Classification Scheme (LCCS). LCCS uses a <b>mixed</b> <b>notation</b> {{of capital}} letters and numerals, {{followed}} by a Cutter number (the author’s first letter of their surname) and the year of publication. Main subject classes are designated by a single capital letter, with subclasses represented by two or more capitals. The call number for a book entitled "Shooting blanks: war making that doesn't work", by J. F. Dunningan and A. A. Nofi is...|$|E
40|$|The study {{examines}} recently found {{fragments of the}} Buda Antiphonal. The codex, containing Office chants representing the Esztergom liturgical tradition, was notated {{at the end of}} the 15 th century with Messine-Hungarian <b>mixed</b> <b>notation.</b> 21 folios, originating from its beginning and preserved at the National Széchényi Library (Budapest), were identified by László Dobszay in 1978. Fragments of the same antiphonal surfaced recently in two collections from Slovakia: 7 folios, with summer and autumn historiae as well as antiphons for Sundays in ordinary time, in the archives of the Saint Adalbert Association (Trnava) and a single truncated folio, with responsories for Christmas Matins, in the music collection of the Slovak National Museum...|$|E
40|$|This master's thesis {{examines}} {{the possibilities of}} correction and change in a classification scheme, {{with regard to the}} changes that occur in the world the classification system intends to describe. Applying a comparative method and classification theory, the classification of the example of the former Yugoslavia (1918 - 1941, 1945 - 1991), its republics and successor states, and the languages, formerly known as Serbo-Croatian are examined through a comparison of the main classes and divisions of language, geography, and history, in Dewey Decimal Classification (DDC), and Klassifikationssystem för svenska bibliotek [Classification for Swedish Libraries] (SAB). Eight editions of DDC, from 1876 to 2014, are compared to seven editions of SAB, from 1921 to 2013. The editions have been selected in order to show the changes prior to, and following, the First World War, changes after the Second World War, and changes following the collapse of Yugoslavia in 1991. The examination shows that both systems have updated their editions according to the changes in former Yugoslavia over the years. DDC has well constructed facet schedules, especially Table 2 concerning geography, but fails, in some cases, to construct a logic and hierarchical structure for the republics and languages of Yugoslavia, partly due to the fixed classes and divisions that survive from the very first edition of DDC from 1876, but also {{as a result of the}} decimal notation, and its limitations, itself. SAB seeks to construct a hierarchically logic and equal scheme for the languages, areas, and states of the former Yugoslavia. Although the facets for geography and chronology aren't as developed as the ones in DDC, the overall result is that of a logically consistent and hierarchically clear classification, with short notation codes, thanks to the alphabetic <b>mixed</b> <b>notation,</b> which allows more subdivisions than the numerals and the pure notation of DDC. This study is a two years master's thesis in Archive, Library and Museum studies...|$|E
2500|$|More {{general is}} using a <b>mixed</b> radix <b>notation</b> (here written little-endian) like [...] for , etc.|$|R
5000|$|<b>Mixed</b> ASCII packet <b>notation</b> (ASCII with {{embedded}} syntax {{to allow}} hex) ...|$|R
40|$|Students {{studying}} hierarchical {{models are}} often confronted with multiple notational representations. The {{purpose of this}} note is to illustrate the relationship between HLM <b>notation</b> and <b>mixed</b> model <b>notation.</b> This is accomplished by explicitly mapping the parameters across notations for a concrete example involving the hierarchical modeling of change. Hierarchical data structures are prevalent in educational research (Bryk & Raudenbush, 1992; Kreft, 1995), and hierarchical linear modeling is becoming a popular method for analyzing multilevel data. In addition to a text dedicated to hierarchical modeling (Bryk & Raudenbush, 1992), both the Journal of Educational and Behavioral Statistics (Kreft, 1995) and Sociological Methods and Research (Hox & Kreft, 1994 a) have recently devoted special issues to this topic. Students and applied researchers wishing to acquaint themselves with these methods quickly learn that there are multiple notations {{which can be used}} for representing the same hierarchical model. One notational approach involves explicitly representing each level of the hierarchy. This strategy is used in the HLM notation of Bryk and Raudenbush (e. g., 1987, 1992). An alternative approach is to conceptualize a hierarchical model as a special case of a mixed model, where the outcome is modeled using a combination of fixed and random effects. <b>Mixed</b> model <b>notation</b> has been discussed both generally (Latour, Latour, & Wolfinger, 1994; McLean, Sanders, & Stroup, 1991) and specifically for hierarchical models (Hox & Kreft, 1994 b; Long-ford, 1987). In addition, the relationship between the HLM <b>notation</b> and the <b>mixed</b> model <b>notation</b> has been shown (Bryk & Raudenbush, 1992, technical appendix). The purpose of this didactic article is to illustrate the link between notational systems {{in the context of a}} concrete example. The example starts with a research scenario involving the hierarchical modeling of change, then moves to an HLM conceptualization, and then from the HLM <b>notation</b> to the <b>mixed</b> model <b>notation.</b> The explicit mapping of the parameters across notations i...|$|R
40|$|Multi-level {{modeling}} {{has gained}} increasing attention {{in recent years as}} the maturity of the supporting tools has grown. One of the most advanced tools for deep modeling is Melanee which supports modeling through deep, multi-format, multi-notation user-defined languages. “Multiformat” refers to seamlessly editing a language in several formats in parallel (e. g. diagrammatic, textual and tabular) while “multi-notation” denotes the ability to <b>mix</b> <b>notations</b> arbitrarily (i. e. to show one part of a model in a general-purpose, UML-like, notation and one part in a domain-specific notation such as BPMN). The deep modeling component of the tool, underpinned by the orthogonal classification architecture and deep instantiation, allows models to contain as many classification levels as needed to concisely represent the domain in hand. This demonstration shows the capabilities of the Melanee tool in the context of defining a language to model the structure of an enterprise...|$|R
40|$|OCL’s {{contribution}} {{to the definition of}} constraint languages is twofold: the identification of core concepts for a constraint language suitable for object-oriented modeling; a developer-friendly notation for that language, as an alternative to traditional mathematical syntax. Whilst the former is an important contribution the latter is more questionable. Not only is notation often a matter of taste, but it would also be desirable to freely <b>mix</b> <b>notations,</b> allowing the most appropriate notation to be chosen for the task at hand or for notations to be seamlessly interchanged. A further problem when writing constraints is scalability: the number and complexity of constraints can be overwhelming for a model of a real-sized system, and current techniques for organizing the constraint space of a model are limited. The contribution {{of this paper is to}} provide a notation, constraint trees, which can be used both for <b>mixing</b> different <b>notations</b> and for organizing the constraint space of a model. Constraint trees achieve this by revealing aspects of the underlying abstract syntax structure of a constraint. The paper demonstrates the utility of the notation using an example from the telecomms networks domain, and shows how constraint trees can be used to write a constraint involving a mix of textual OCL notation, constraint diagrams, object diagrams and rich pictures. This also demonstrates the organizational role of constraint trees. An outline meta-model definition of constraint trees is provided and issues surrounding their tooling is discussed...|$|R
40|$|International audienceVia a {{comparison}} of the currently used language-based components for knowledge sharing, this article first highlights the difficulties caused by the inexistence – and hence absence of exploitation – of a shared core ontology of knowledge representation languages (KRLs), i. e., (i) an ontology of KRL abstract models which represents, aligns and extends standards, and (ii) an ontology of KRL notations. For programmers, these are the difficulties of importing, exporting or translating between KRLs; for end-users, the difficulties of adapting, extending or <b>mixing</b> <b>notations.</b> This article then shows how we have built this shared core ontology plus a tool for exploiting it. We use them for specifying, parsing and translating KRLs, thus allowing their use without additional programming. This ontology can be represented in any KRL that has at least OWL- 2 expressiveness. Thus, the results can easily be replicated. A Web address for the tool and the full specifications is given...|$|R
50|$|Rosegarden is a multi-featured audio {{application}} that includes audio <b>mixing</b> plugins, a <b>notation</b> editor, and MIDI. The MusE Sequencer is a similarly featured audio {{application that}} includes an audio mixer and a MIDI sequencer.|$|R
40|$|In web {{projects}} it {{is often}} necessary to <b>mix</b> XML <b>notation</b> and program notation in a single document or program. In mono-lingual situations the XML notation is either subsumed in the program, or the program notation is subsumed in the XML document. As an introduction we analyze XML notation and programming notation in relation to each other. As the main contribution of the paper we describe a number of general issues to consider when subsuming XML in a given programming language...|$|R
40|$|Salient Features Over 1500 {{problems}} {{are used to}} illustrate concepts, related to different topics, and introduce applications. Over 1000 exercises in the text with {{many different types of}} questions posed. Precise mathematical language is used without excessive formalism and abstraction. Care has been taken to balance the <b>mix</b> of <b>notation</b> and words in mathematical statements. Problem sets are stated clearly and unambiguously, and all are carefully graded for various levels of difficulty. This text has been carefully designed for flexible use...|$|R
5000|$|Monatomic ions are {{sometimes}} also denoted with Roman numerals; for example, the [...] example seen above is occasionally {{referred to as}} Fe(II) or FeII. The Roman numeral designates the formal oxidation state of an element, whereas the superscripted numerals denote the net charge. The two notations are, therefore, exchangeable for monatomic ions, but the Roman numerals {{cannot be applied to}} polyatomic ions. However, it is possible to <b>mix</b> the <b>notations</b> for the individual metal centre with a polyatomic complex, as shown by the uranyl ion example.|$|R
40|$|International audienceIn its introduction, {{this article}} gives a short {{state of the}} art about ontologies of {{knowledge}} representation languages (KRLs) and the problems caused by i) the lack of relations between these ontologies, and ii) the lack of ontologies about notations (concrete syntaxes). For programmers, these are the difficulties of importing, exporting or translating between KRLs; for end-users, the difficulties of adapting, extending or <b>mixing</b> <b>notations.</b> To show how these problems can be solved, this article first shows how concepts of the main KRL standards can be aligned and organized. Then, it shows how this KRL model ontology can be re-used and completed by a notation ontology. Based on these two ontologies, KRLs models and notations - and thereby parsing and generation - can be specified in a concise way that even KRL end-users can adapt. The article gives representative examples. For these ontologies or specifications, a concise KRL notation is introduced and used. However, the presented approach is independent of any notation and model that has at least OWL- 2 expressiveness. Thus, the results can easily be replicated. A Web address for the full specification of the two ontologies, and for a knowledge server to test or use them, is also given...|$|R
40|$|In its introduction, {{this article}} gives a short {{state of the}} art about ontologies of {{knowledge}} representation languages (KRLs) and the problems caused by i) the lack of relations between these ontologies, and ii) the lack of ontologies about notations (concrete syntaxes). For programmers, these are the difficulties of importing, exporting or translating between KRLs; for end-users, the difficulties of adapting, extending or <b>mixing</b> <b>notations.</b> To show how these problems can be solved, this article first shows how concepts of the main KRL standards can be aligned and organized. Then, it shows how this KRL model ontology can be re-used and completed by a notation ontology. Based on these two ontologies, KRLs models and notations - and thereby parsing and generation - can be specified in a concise way that even KRL end-users can adapt. The article gives representative examples. For these ontologies or specifications, a concise KRL notation is introduced and used. However, the presented approach is independent of any notation and model that has at least OWL- 2 expressiveness. Thus, the results can easily be replicated. A Web address for the full specification of the two ontologies, and for a knowledge server to test or use them, is also given. Griffith Sciences, School of Information and Communication TechnologyFull Tex...|$|R
2500|$|An open {{interval}} {{does not}} include its endpoints, and is indicated with parentheses. For example, [...] means greater than [...] and less than [...] A closed interval includes its endpoints, and is denoted with square brackets. For example, [...] means {{greater than or equal}} to [...] and less than or equal to [...] A half-open interval includes only one of its endpoints, and is denoted by <b>mixing</b> the <b>notations</b> for open and closed intervals. [...] means greater than [...] and less than or equal to , while [...] means {{greater than or equal to}} [...] and less than [...]|$|R
40|$|There {{has been}} some recent {{interest}} to extend univariate and multivariate robust and nonparametric procedures to cluster-dependent data problems, which frequently arise in longitudinal studies, for example. Traditionally, parametric mixed models based on the normal distribution assumption {{have been used to}} take care of the dependence in the data. In this talk we outline how the robust and nonparametric procedures can be extended to cluster-dependent data problems. For suitably chosen (robust, nonparametric) score functions, the limiting behavior of the tests and estimates in the one and two samples cases is outlined. Also weighted versions of the procedures are described. <b>Mixed</b> models <b>notation</b> involving design matrices for fixed and random effects is used throughout...|$|R
40|$|We work in {{the space}} C n of n × 1 column vectors with the inner product (x, y) =x † y. A † denotes the {{transpose}} conjugate of A. We <b>mix</b> math <b>notation</b> and bra(c) ket notation like English and pidgin. Postulate 1. An isolated quantum system “is described by ” a unit vector in Cn. A unit vector ψ in Cn is called a state. Aqubit is a unit vector in C 2. A linear combination of states is called a superposition. Postulate 2. The evolution of an isolated system is described by a continuous 1 -parameter group of unitary operators. That means we have unitary matrices U(t) such that U(0) = I U(t 1 + t 2) =U(t 1) U(t 2) ψ(t) =U(t) ψ(0) Example. The Schrödinger equation i...|$|R
50|$|The primary {{subject of}} the Liber Abaci is {{calculations}} involving decimal and vulgar fraction notation, which eventually replaced Egyptian fractions. Fibonacci himself used a complex notation for fractions involving {{a combination of a}} <b>mixed</b> radix <b>notation</b> with sums of fractions. Many of the calculations throughout Fibonacci's book involve numbers represented as Egyptian fractions, and one section of this book provides a list of methods for conversion of vulgar fractions to Egyptian fractions. If the number is not already a unit fraction, the first method in this list is to attempt to split the numerator into a sum of divisors of the denominator; this is possible whenever the denominator is a practical number, and Liber Abaci includes tables of expansions of this type for the practical numbers 6, 8, 12, 20, 24, 60, and 100.|$|R
50|$|A {{number of}} Chinese-language Microsoft Windows {{applications}} {{are available for}} the WYSIWYG editing of scores (optionally with lyrics) in numbered musical notation. Typically these support only the numbered notation, i.e. {{it is not possible}} to <b>mix</b> the numbered <b>notation</b> with a Western-style score in the same file, but it is also possible to add numbered notation to Sibelius scores via a Chinese-language third-party plugin. English-language applications for working with numbered-notation scores are relatively rare, but there have been some developments. There are technical methods of printing numbered notation (in various forms) with GNU LilyPond.|$|R
40|$|A {{convention}} for {{the transcription}} of Ethiopic script into the seven bit American Standard for Computer Information Interchange (ASCII) is presented. The convention provides {{a mechanism for}} computer interchange of Ethiopic text for single byte information systems. The system of transcription is readily human readable and encompasses all elements of Ethiopic text which includes; letters, numbers, and punctuation. The convention also provides a mechanism for the extension to multilingual text and may be employed for the keyboard entry of Ethiopic text elements. Preface In the time since the original publication of our paper in The Journal of EthioSciences [1] {{on the topic of}} representation of Fidel in 7 -bit ASCII, the need became apparent to extend the system to encompass representation for Ethiopic numerals, punctuation, and <b>mixed</b> script <b>notations.</b> In the same period more was learned about the treatment of certain characters outside of Amharic that allowed for simplification of the ASC [...] ...|$|R
5000|$|Fibonacci used a {{composite}} fraction notation {{in which a}} sequence of numerators and denominators shared the same fraction bar; each such term represented an additional fraction of the given numerator divided by the product of all the denominators below {{and to the right}} of it. That is, , and [...] The notation was read from right to left. For example, 29/30 could be written as , representing the value [...] This {{can be viewed as a}} form of <b>mixed</b> radix <b>notation,</b> and was very convenient for dealing with traditional systems of weights, measures, and currency. For instance, for units of length, a foot is 1/3 of a yard, and an inch is 1/12 of a foot, so a quantity of 5 yards, 2 feet, and [...] inches could be represented as {{a composite}} fraction: [...] yards. However, typical notations for traditional measures, while similarly based on mixed radixes, do not write out the denominators explicitly; the explicit denominators in Fibonacci's notation allow him to use different radixes for different problems when convenient. Sigler also points out an instance where Fibonacci uses composite fractions in which all denominators are 10, prefiguring modern decimal notation for fractions.|$|R
40|$|The Sonata For Alto Saxophone and Piano Op. 19 {{is one of}} {{the most}} popular pieces in the {{saxophone}} literature, commonly played by professional saxophonists during their training. It features exciting rhythmic devices like irregular and <b>mixed</b> meter, the <b>notation</b> of which is the main focus of this paper. Although Creston often used irregular and mixed meter in his compositions, he rarely specifically notated them, choosing instead to use accents, beams, slurs, and other phenomenal cues at the musical surface to create the effect of these metric plans. Time signatures often remained constant throughout entire movements. Creston believed this would ease performers reading burden by using the barlines as nothing more than measured markers of the underlying pulse stream, leaving them free to focus on more pertinent aspects of the music. I have termed this idea as meter-as-measure, and is central to Creston 2 ̆ 7 s rhythmic theories. Contemporary theories of rhythm and meter based in cognition do not support the meter- as-measure hypothesis, however, and publishers typically show irregular and <b>mixed</b> meters through <b>notation</b> of changing time signatures. The main purpose of this thesis is to create a new score of the Sonata to reflect the meter inherent in the phenomenal cues of the musical surface, thereby restoring the power of the barline to convey the metrical structure of the work to performers. Lerdahl and Jackendoff 2 ̆ 7 s theory of metrical structures from A Generative Theory of Tonal Music is used as a basis for parsing the rhythms at the musical surface, providing a theoretical framework for the rebarring. Many passages with difficult-to-interpret metrical structure are discussed in detail and reproduced as examples...|$|R
40|$|Algorithms for {{approximation}} of rational matrix factors to data is described. The method {{is based on}} a subspace based multivariable frequency domain statespace identification, canonical and spectral factorization and parametric optimization. The algorithms can be used for identifying spectral factors and factors of positive real functions from frequency data. The methods are directly applicable in the D Γ K algorithm for complex ¯-synthesis and the Y Γ Z Γ K algorithm for <b>mixed</b> ¯. 1 <b>Notation</b> RL 1 is the set of real-rational matrix functions with no poles on the imaginary axis. Let RH 1 = fX(s) : X(s) 2 RL 1; X(s) analytic in Re (s) ? 0 g be the set of stable real-rational matrix functions. Let A denote the conjugate transpose of A and let k Δ k denote any matrix norm and G (s) = G T (). 2 Introduction Realization and {{approximation of}} matrix functions {{plays an important role in}} many automatic control and signal processing applications. In t [...] ...|$|R
40|$|This book {{teaches the}} art of writing mathematics, an {{essential}} -and difficult- skill for any mathematics student.   The book begins with an informal introduction on basic writing principles and {{a review of the}} essential dictionary for mathematics. Writing techniques are developed gradually, from the small to the large: words, phrases, sentences, paragraphs, to end with short compositions. These may represent the introduction of a concept, the abstract of a presentation or the proof of a theorem. Along the way the student will learn how to establish a coherent <b>notation,</b> <b>mix</b> words and symbols effectively, write neat formulae, and structure a definition.   Some elements of logic and all common methods of proofs are featured, including various versions of induction and existence proofs. The book concludes with advice on specific aspects of thesis writing (choosing of a title, composing an abstract, compiling a bibliography) illustrated by large number of real-life examples. Many exercises are included; over 150 of them have complete solutions, to facilitate self-study.   Mathematical Writing will be of interest to all mathematics students who want to raise the quality of their coursework, reports, exams, and dissertations...|$|R

