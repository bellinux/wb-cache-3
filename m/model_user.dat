405|9423|Public
2500|$|In early March 2011, DroidDream, a trojan rootkit exploit, was {{released}} to then-named Android Market {{in the form}} of several free applications that were, in many cases, pirated versions of existing priced apps. This exploit allowed hackers to steal information such as IMEI and IMSI numbers, phone <b>model,</b> <b>user</b> ID, and service provider. The exploit also installed a backdoor that allowed the hackers to download more code to the infected device. The exploit only affected devices running Android versions earlier than 2.3 [...] "Gingerbread". Google removed the apps from the Market immediately after being alerted, but the apps had already been downloaded more than 50,000 times, according to Android Polices estimate. Android Police wrote that the only method of removing the exploit from an infected device was to reset it to factory state, although community-developed solutions for blocking some aspects of the exploit were created. A few days later, Google confirmed that 58 malicious apps had been uploaded to Android Market, and had been downloaded to 260,000 devices before being removed from the store. Google emailed affected users with information that [...] "As far as we can determine, the only information obtained was device-specific (IMEI/IMSI, unique codes which are used to identify mobile devices, and the version of Android running on your device)" [...] as opposed to personal data and account information. It also announced a new [...] "remote kill" [...] functionality, alongside a security update, that lets Google remotely remove malicious apps from users' devices. However, days later, a malicious version of the security update was found on the Internet, though it did not contain the specific DroidDream malware. New apps featuring the malware, renamed DroidDream Light, surfaced the following June, and were also removed from the store.|$|E
5000|$|Chi, Ed H., et al. [...] "Using {{information}} scent to <b>model</b> <b>user</b> {{information needs}} and actions and the Web." [...] Proceedings of the SIGCHI conference on Human factors in computing systems. ACM, 2001.|$|E
5000|$|Web {{applications}} of UML {{can be used}} to <b>model</b> <b>user</b> interfaces of web applications and make the purpose of the website clear.Web applications are software-intensive systems and UML is among the efficient choice of languages for modeling them. Web software complexity of an application can be minimized using various UML tools.|$|E
40|$|In {{this paper}} the {{definitions}} of and approaches to <b>user</b> <b>modeling</b> in natural language dialog systems have been reviewed. The contents of <b>user</b> <b>models</b> are discussed; how <b>user</b> <b>modeling</b> in di#erent research areas relates to <b>user</b> <b>modeling</b> are reviewed; examples of some techniques for building <b>user</b> <b>models</b> through natural language interaction and observed behavior in other media channels are given. Furthermore, the uses of <b>user</b> <b>models</b> in natural language dialog systems are discussed, {{as well as the}} implications of employing <b>user</b> <b>models.</b> It is concluded that natural language aspects of <b>user</b> <b>modeling</b> is needed to complement traditional <b>user</b> <b>modeling</b> in high-functionality applications...|$|R
50|$|The {{operating}} characteristic (OC) curve is {{the probability that}} the null hypothesis is accepted when it is true. The OC curve characterizes the probabilities of both type I and II errors. Risk curves for model builder's risk and <b>model</b> <b>user's</b> can be developed from the OC curves. Comparing curves with fixed sample size tradeoffs between model builder's risk and <b>model</b> <b>user's</b> risk can be seen easily in the risk curves. If model builder's risk, <b>model</b> <b>user's</b> risk, and the upper and lower limits for the range of accuracy are all specified then the sample size needed can be calculated.|$|R
40|$|In {{interactive}} multimedia presentations, users {{should have the}} exibility to decide on various scenar-ios they want to see. This means that two-way commu-nications should be captured by the conceptual model. An abstract semantic model, the augmented transition network (ATN), is proposed for <b>modeling</b> <b>user</b> inter-actions in multimedia presentations. In ATNs, each state node allows multiple outgoing arcs to <b>model</b> po-tential <b>user</b> interactions. At the decision point, the multimedia presentation system can use this informa-tion to display selection buttons so users can make their choices. The superiority of <b>modeling</b> <b>user</b> interactions with ATN instead of the Timeline model or the Object Composition Petri Net model is discussed in this pa-per. Our {{results show that the}} ATN is eective for <b>modeling</b> <b>user</b> interactions in a multimedia presenta-tion environment. ...|$|R
50|$|The system’s model {{must not}} exceed the user’s mental model in complexity. The system’s model is the {{organization}} of features in the system whereas the user’s mental model is their conceptualization of the system. When the system’s model exceeds the user’s <b>model,</b> <b>user</b> {{will not be able}} to operate the system without extensive training and the result is often an implementation failure.|$|E
50|$|Although the {{outcomes}} (dependent variables) to be predicted {{are assumed to}} be random variables, the explanatory variables themselves are usually not assumed to be random. Instead, they {{are assumed to be}} fixed values, and any random variables (e.g. {{the outcomes}}) are assumed to be conditional on them. As a result, the <b>model</b> <b>user</b> is free to transform the explanatory variables in arbitrary ways, including creating multiple copies of a given explanatory variable, each transformed using a different function. Other common techniques are to create new explanatory variables in the form of interaction variables by taking products of two (or sometimes more) existing explanatory variables.|$|E
5000|$|In February 2005, VMGR-252 {{made the}} first {{operational}} combat deployment of the KC-130J when six aircraft were deployed to Al Asad, Iraq in support of Operation Iraqi Freedom. During this time VMGR-252 experienced many [...] "firsts" [...] with the new J model conducting aerial refueling, delivery of cargo and passengers, the first combat aerial delivery of supplies by any J <b>model</b> <b>user</b> (the USAF subsequently conducted aerial delivery in Afghanistan with their new J models later that year) and battlefield illumination. VMGR-252 maintained the sole KC-130J presence for a year while VMGR-352 took delivery of and transitioned to the J model. The semi-permissive threat environment {{and the state of}} the art defensive systems of the J model permitted it to operate over the battlefield, providing fuel for the jets close to the fight, versus the tanker being far behind the lines in relative sanctuary. On more than one occasion VMGR-252 aircraft came under fire from insurgents, as did VMGR-352 aircraft during subsequent deployments to Iraq.|$|E
40|$|Ubiquitous <b>user</b> <b>modeling</b> {{describes}} ongoing {{modeling and}} exploitation of user behaviour {{with a variety}} of systems that share their <b>user</b> <b>models.</b> These shared <b>user</b> <b>models</b> can either be used for mutual or for individual adaptation goals. Ubiquitous <b>user</b> <b>modeling</b> differs from generic <b>user</b> <b>modeling</b> by the three additional concepts: ongoing modeling, ongoing sharing and ongoing exploitation. Systems that share their <b>user</b> <b>models</b> will improve the coverage, the level of detail, and the reliability of the integrated <b>user</b> <b>models</b> and thus allow better functions of adaptation. Ubiquitous <b>user</b> <b>modeling</b> implies new challenges of scalability, scrutability and privacy. A key challenge for ubiquitous <b>user</b> <b>modelling</b> is <b>user</b> <b>models</b> integration. Different systems may represent the same information in different ways, using different syntactic and conceptual structures. Therefore means for negotiation and clarification of data among systems are required. This is fundamental not only to access information, but also to reuse information. Recently, suppliers of user profiles have shown an increased awareness of the need for standards for representing and exchanging <b>user</b> <b>model</b> data. At the same time we observe tha...|$|R
40|$|We {{propose a}} {{technique}} for <b>user</b> <b>modeling</b> in Adaptive Hypermedia (AH) that is unobtrusive {{at both the}} level of observable behavior and that of cognition. Unobtrusive <b>user</b> <b>modeling</b> is complementary to transparent <b>user</b> <b>modeling.</b> Unobtrusive <b>user</b> <b>modeling</b> induces <b>user</b> <b>models</b> appropriate for Educational AH (EAH) based on metaphors characterized by a shared locus of control over learning, such as small group learning. Transparent <b>user</b> <b>modeling,</b> on the other hand, induces <b>user</b> <b>models</b> appropriate for EAH based on metaphors characterized by an independent locus of control, such as social navigation. We extend an existing decomposition model of adaptation in AH to incorporate summative evaluation of unobtrusive <b>user</b> <b>modeling.</b> Summative evaluation examines the effects or outcomes of a system, while formative evaluation is used to improve a system under development. We also introduce a separate, two-stage model for formative evaluation of unobtrusive <b>user</b> <b>modeling.</b> We then present results from a field study {{for the first of}} the two developmental stages and describe the current field study of the second developmental stage. Finally, we compare unobtrusive and transparent <b>user</b> <b>modeling,</b> and explain the role of each...|$|R
40|$|Modern user {{interface}} development environments {{are based on}} fast prototyping which as a methodology does not incorporate any theory or design principles. Adept (Advanced design environment for prototyping with tasks) incorporates a theory of <b>modelling</b> <b>users</b> and user task knowledge known as Task Knowledge Structures [11], and extends it to a theoretical framework for <b>modelling</b> <b>user,</b> task and interface characteristics. This paper introduces the underlying framework, and discusses how this {{can be used to}} support task based {{user interface}} design...|$|R
5000|$|In early March 2011, DroidDream, a trojan rootkit exploit, was {{released}} to then-named Android Market {{in the form}} of several free applications that were, in many cases, pirated versions of existing priced apps. This exploit allowed hackers to steal information such as IMEI and IMSI numbers, phone <b>model,</b> <b>user</b> ID, and service provider. The exploit also installed a backdoor that allowed the hackers to download more code to the infected device. The exploit only affected devices running Android versions earlier than 2.3 [...] "Gingerbread". Google removed the apps from the Market immediately after being alerted, but the apps had already been downloaded more than 50,000 times, according to Android Polices estimate. Android Police wrote that the only method of removing the exploit from an infected device was to reset it to factory state, although community-developed solutions for blocking some aspects of the exploit were created. A few days later, Google confirmed that 58 malicious apps had been uploaded to Android Market, and had been downloaded to 260,000 devices before being removed from the store. Google emailed affected users with information that [...] "As far as we can determine, the only information obtained was device-specific (IMEI/IMSI, unique codes which are used to identify mobile devices, and the version of Android running on your device)" [...] as opposed to personal data and account information. It also announced a new [...] "remote kill" [...] functionality, alongside a security update, that lets Google remotely remove malicious apps from users' devices. However, days later, a malicious version of the security update was found on the Internet, though it did not contain the specific DroidDream malware. New apps featuring the malware, renamed DroidDream Light, surfaced the following June, and were also removed from the store.|$|E
40|$|In this study; {{components}} of a web-based general purpose Intelligent Tutoring System (ITS) has been realized by using Visual Prolog. A framework of the system has been constructed to apply various lesson. An ITS consists of four fundamental models which are domain expert <b>model,</b> <b>user</b> model, instruction model and user interface model. In this study, domain expert <b>model,</b> <b>user</b> model and user interface model have been realized. There are user interfaces for both author and student in the system. We aimed in this study, developing studies on ITS in our country and constructing a framework for an ITS...|$|E
40|$|Abstract- Ubiquitous robots need user {{modeling}} for providing personalized services. With a user model, ubiquitous robots can build more accurate context model, therefore, we provide appropriate services to users {{based on the}} context model. In this paper, we propose a context model with ontology based on conceptual dependency. This model {{is supposed to be}} used for modeling observed user behaviors. In order to <b>model</b> <b>user</b> behavior, we designed context ontology based on conceptual dependency. Context modeler monitors user behavior and generate ontology instances to represent the behavior. We <b>model</b> <b>user</b> behavior using temporal concepts to enable temporal reasoning for context model. After a temporal context model is generated, we employ ontology reasoner to infer more high level contexts for ubiquitous...|$|E
40|$|Abstract. <b>User</b> <b>modeling</b> is an {{important}} strategy for designing effective <b>user</b> interface. <b>User</b> <b>model</b> for turret is different with general application. This paper concerns on <b>modeling</b> <b>user</b> of turret. Main emphasis is given on the relationships of man, machine and environment. The <b>user</b> <b>models</b> can help determine {{the characteristics of the}} turret user and how they affect the design of the adaptive interface. In this paper we present the progress of <b>user</b> <b>model</b> development and give some case studies using the proposed model...|$|R
40|$|Abstract. One {{distinctive}} feature of any adaptive {{system is the}} <b>user</b> <b>model</b> that represents essential information about each user. This chapter complements other chapters of this book in reviewing <b>user</b> <b>models</b> and <b>user</b> <b>modeling</b> approaches applied in adaptive Web systems. The presentation is structured along three dimensions: what is being modeled, how it is modeled, and how the models are maintained. After a broad overview {{of the nature of}} the information presented in these various <b>user</b> <b>models,</b> the chapter focuses on two groups of approaches to <b>user</b> <b>model</b> representation and maintenance: the overlay approach to <b>user</b> <b>model</b> representation and the uncertainty-based approach to <b>user</b> <b>modeling.</b> 1. ...|$|R
40|$|Abstract- <b>User</b> <b>modeling</b> is an {{important}} strategy for designing effective <b>user</b> interface. <b>User</b> <b>model</b> for able-bodied <b>user</b> is not always suitable for physically and mentally retarded people. There are some special characteristics of users and also of the interfaces, which {{have to be considered}} when building a <b>user</b> <b>model</b> for disabled <b>users.</b> This paper concerns about <b>modeling</b> motor-impaired <b>users</b> for developing personalized interfaces for those people. In the proposed <b>user</b> <b>model,</b> main emphasis is given on making the <b>user</b> <b>model</b> application independent, clustering users according to their physical disability and cognitive level and adapting the model with respect to individual user as well as cluster of users. I...|$|R
40|$|This report {{describes}} the Clyde Gateway Pilot 3 D geological model (superficial deposits, bedrock) and groundwater model (recharge and groundwater flow) which covers 1 : 10, 000 scale Ordnance Survey sheets NS 66 SW, NS 66 NW and NS 56 SE. The groundwater model considers a broader area in general, and also, for practical purposes, a detailed consideration of NS 56 NE, based on available hydrogeological data. Therefore, the models, and report, address {{not only the}} Clyde Gateway area itself, but a larger area which includes for example the alignments of the M 74 Extension and East End Regeneration Route. The report provides background information to the <b>model</b> <b>user</b> including brief geological descriptions, model construction methods, uncertainty factors, limitations and a helpful 3 D <b>model</b> <b>user</b> manual...|$|E
40|$|Interest in {{the study}} of {{discretionary}} databases has grown as numerous large-scale public file-sharing systems have emerged as mainstream internet applications. In peer-to-peer systems, Usenet, and other discretionary databases, the study of incentives is of particular importance, at it allows us to <b>model</b> <b>user</b> behaviour and thus predict system performance...|$|E
40|$|Situation {{awareness}} is considered as {{an approach to}} <b>model</b> <b>user</b> context in ubiquitous information services. Such services can intelligently infer knowledge about user situation. Moreover, situational reasoning is attained taking into consideration similarity-based approaches. This paper proposes approximate decision making about situational similarity using conceptual modelling, ontological representation, and, fuzzy logic inference...|$|E
40|$|<b>User</b> <b>modeling</b> is {{employed}} by applications {{that need to}} maintain explicit <b>models</b> of their <b>users</b> in order to exhibit individualized behaviour. The <b>user</b> <b>modeling</b> task involves representation and acquisition of assumptions about the <b>user.</b> Particularly <b>user</b> <b>model</b> acquisition {{is closely related to}} the machine learning task of automatically acquiring new information as well as new representations of existing information. This paper shows how and for which purposes machine learning techniques have been and could be employed in <b>user</b> <b>modeling.</b> Also usage modeling, a more action-centered approach to <b>user</b> <b>modeling,</b> is considered. Finally, the LaboUr approach to <b>user</b> <b>modeling</b> is sketched, which regards <b>user</b> <b>modeling</b> as learning problem. 1 Introduction <b>User</b> <b>modeling</b> is aimed at providing an explicit information basis (a socalled <b>user</b> <b>model),</b> about a <b>user's</b> knowledge, goals, preferences etc. to application systems that try to adapt their behaviour to their users' individual characteristics. The main [...] ...|$|R
40|$|Abstract. This paper {{outlines}} a {{new approach}} for decentralized agent based <b>user</b> <b>modelling</b> using a taxonomy of purposes that define a variety of contextdependent <b>user</b> <b>modelling</b> processes rather than creating and maintaining a single centralized <b>user</b> <b>modelling</b> server. This approach {{can be useful in}} distributed environments where autonomous agents develop <b>user</b> <b>models</b> independently and do not necessarily adhere to a common representation scheme. 1 Decentralized active <b>user</b> <b>modelling</b> Traditionally <b>user</b> <b>modelling</b> has focused on creating and maintaining a single global description of the user used internally in an application for some purpose defined at design time [1]. Knowledge representation is a key issue in this kind of traditional <b>user</b> <b>modelling.</b> With the emergence of networked applications, <b>user</b> <b>modelling</b> servers have been proposed [2] to store data {{that can be used to}} support adaptation in several networked applications. <b>User</b> <b>modelling</b> servers provide a centralized solution: <b>user</b> <b>models</b> are stored in centralized or virtually centralized repository. Even if th...|$|R
40|$|The SIGIR 2013 Workshop on <b>Modeling</b> <b>User</b> Behavior for Information Retrieval Evaluation (MUBE 2013) brings {{together}} people to discuss existing and new approaches, ways to collaborate, and other ideas and {{issues involved in}} improving information retrieval evaluation through the <b>modeling</b> of <b>user</b> behavior...|$|R
40|$|Attentive systems pay {{attention}} to what users do so that they can attend to what users need. Such systems track user behavior, <b>model</b> <b>user</b> interests, and anticipate user desires and actions. Because the general class of attentive systems is broad — ranging from human butlers to web sites that profile users — we have focused specifically on attentive information systems, which observe user actions with information resources, <b>model</b> <b>user</b> information states, and suggest information that might be helpful to users. In particular, we describe an implemented system, Simple User Interest Tracker (Suitor), that tracks computer users through multiple channels — gaze, web browsing, application focus — to determine their interests and to satisfy their information needs. By observing behavior and modeling users, Suitor finds and displays potentially relevant information that is both timely and non-disruptive to the users ’ ongoing activities...|$|E
30|$|Regarding the iOS MSECO, the Data Binding topic covers {{mechanisms}} used to synchronize an UI with {{an underlying}} data <b>model.</b> <b>User</b> Interface topic in iOS covers the user interface control, and adaptation to any size changes. Project topic involves similar questions within Android community with {{focus in the}} build of apps to hardware devices.|$|E
30|$|Coelho et al. [24] {{proposed}} an ATRS that can adapt to different traveler preferences. They got {{information about the}} travelers in various ways such as considering domain independent data or domain dependant data. As a result, they got different types of data by diverse methods (e.g., Likelihood Matrix, Stereotypes, Socialization, Psychological <b>Model,</b> <b>User</b> Explicit Knowledge, and Retrieval).|$|E
40|$|<b>User</b> <b>modeling</b> {{approaches}} {{are expected to}} fulfill <b>user</b> <b>modeling</b> criteria. We present a collection of such criteria, and analyze how the info-bead <b>user</b> <b>modeling</b> approach fulfills them. The criteria are all well-known criteria elicited from the <b>user</b> <b>modeling</b> literature, including Kay [1999], Fink and Kobsa [2000], Kobsa [2001; 2007], and Vassileva [2003]. We arranged the criteria according to the following more general topics: expressiveness, ease of development, operability, and user control. In addition, based on our experience with the info-bead <b>user</b> <b>modeling</b> approach, we suggest additional criteria for "componentized " <b>user</b> <b>modeling</b> approaches. This presentation assumes that the reader {{is familiar with the}} info-bead <b>user</b> <b>modeling</b> approach. Expressiveness Expressiveness is the ability to express different <b>user</b> <b>model</b> characteristics and to apply <b>user</b> <b>modeling</b> methods. The <b>user</b> <b>modeling</b> criteria related to expressiveness are: • Being able to represent different types of assumptions [Kobsa, 2007] about the user at a specific point in time (e. g., beliefs, goals, interests, plans, and reflexiv...|$|R
40|$|Supporting {{electronic}} catalogs (e-catalogs) {{to provide}} product-search services on the Internet {{is emerging as}} an important function of electronic brokers. However, the explosive growth of information is creating difficulties for customers to search for goods information they desire. In this work, an integrated framework is proposed to develop personalized e-catalogs. The proposed framework integrates XML-based metadata <b>models,</b> <b>user</b> <b>models</b> and agents. The proposed metadata model has a multi-level architecture that can facilitate resource-discovery and format translation, and can flexibly model the definitions of diverse attributes. The proposed <b>user</b> <b>model</b> uses three-level <b>user</b> profiles to <b>model</b> a <b>user's</b> shopping interests to resources, categories and goods. This work integrates the agent technology with the proposed metadata <b>models</b> and <b>user</b> <b>models</b> to develop a personalized e-catalog system. With the support of personalized services, the novel e-catalog system allows an integrated product search to be performed effectively...|$|R
5000|$|Quantification - By [...] "taking-off" [...] the <b>model,</b> <b>users</b> can {{automatically}} make material estimates, measure {{areas and}} count building components.|$|R
40|$|Abstract. We present our {{approach}} to mining and modeling the behavior of data-base users. In particular, we propose graphic models to capture the database user’s dynamic behavior and focus on applying data mining techniques {{to the problem of}} mining and modeling database user behaviors from database trace logs. The experimental results show that {{our approach}} can discover and <b>model</b> <b>user</b> behav-iors successfully. ...|$|E
40|$|Abstract. KTS is {{a web-based}} {{software}} system for solving high school timetabling problems, freely accessible on the Internet. This paper describes KTS, including its data <b>model,</b> <b>user</b> interface, and solver. The solver uses operations research models in a polynomial-time heuristic framework to produce high quality solutions {{in a few}} seconds. Results are presented for six instances taken from Australian high schools. ...|$|E
40|$|Using Lynchis (1960) {{treatise}} The Image of the City as a <b>model,</b> <b>user</b> navigation of e-retailing {{web sites}} was analyzed using defined categories: paths, districts, edges, nodes, and landmarks. Results {{from this study}} suggest that elements in the urban landscape and their use by individuals for way finding and legibility may be similar to those necessary for navigating the World Wide Web...|$|E
30|$|<b>Modeling</b> <b>user</b> privacy. The {{framework}} {{takes as}} input {{models of the}} system {{in terms of the}} data and its flow between systems and stakeholders (via data flow diagrams) and automatically generates a formal <b>model</b> of <b>user</b> privacy in the system (in terms of a Labeled Transition System).|$|R
40|$|In {{course of}} the OySTER project {{our goal is to}} induce {{conceptual}} <b>user</b> <b>models</b> that allow for a transparent query refinement and information filtering in the domain of Www meta [...] search. <b>User</b> <b>models</b> which describe a user's interest with respect to an underlying ontology allow for a manual <b>user</b> <b>model</b> editing process and also pose a well defined problem for a conceptual inductive learning task. OySTER is a research prototype that is currently being developed at the university of Osnabruck. Introduction <b>User</b> <b>Modeling</b> and Machine Learning. <b>User</b> <b>models</b> represent assumptions about a <b>user.</b> <b>User</b> <b>modeling</b> systems infer <b>user</b> <b>models</b> from <b>user</b> interaction, store <b>user</b> <b>models</b> and induce new assumptions by reasoning about the models. These models are used within the system in order to adapt to the <b>user.</b> Furthermore, these <b>models</b> shall be accessible to the user [...] - they should be both understandable and manually modifyable. Incorporating machine learning into this framework often leads to intertwine [...] ...|$|R
5000|$|Multi-user <b>modeling.</b> <b>Users</b> can {{securely}} {{and simultaneously}} {{work on the}} same project through a shared database that stores the model data.|$|R
