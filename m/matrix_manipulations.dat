146|186|Public
2500|$|This {{system can}} be solved using Cramer's rule and basic <b>matrix</b> <b>manipulations.</b> Let ...|$|E
5000|$|The {{calculation}} requires rigorous <b>matrix</b> <b>manipulations,</b> but {{results in}} {{an expression of the}} form: ...|$|E
50|$|This {{approach}} requires much more computationally intensive <b>matrix</b> <b>manipulations,</b> {{and again the}} visibilities covariance matrix is altered.|$|E
5000|$|<b>Matrix</b> <b>manipulation</b> tools {{including}} {{support for}} sparse arrays ...|$|R
5000|$|Our valiant <b>matrix</b> <b>manipulation</b> has now paid off. We {{see that}} the {{expression}} for our upper bound can be greatly simplified: ...|$|R
40|$|Present title {{discloses}} {{a distinctive}} method to cram the processor behavior while {{dealing with the}} multifaceted task of <b>matrix</b> <b>manipulation.</b> System facilitates this distinct feature by allowing user to input the data in suitable form and observe the output using suitable display devices. [5] System is build around high performance VLSI technology. <b>Matrix</b> <b>manipulation</b> is on the whole parallel architecture of logical expressions. VLSI when implemented using High Performance Gate Arrays becomes most suitable for implementing parallel architecture. [6...|$|R
50|$|It {{includes}} built-in {{functions for}} generating and running Turing machines, creating graphics and audio, analyzing 3D models, <b>matrix</b> <b>manipulations,</b> and solving differential equations. It is extensively documented.|$|E
50|$|A {{proprietary}} {{programming language}} developed by Civilized Software, Inc., MLAB allows <b>matrix</b> <b>manipulations,</b> plotting of functions and data, {{and implementation of}} algorithms, and provides support for curve-fitting, differential equations, statistics and graphics.|$|E
50|$|Fermat has {{extensive}} built-in primitives for array and <b>matrix</b> <b>manipulations,</b> such as submatrix, sparse matrix, determinant, normalize, column reduce, row echelon, Smith normal form, and matrix inverse. It {{is consistently}} faster than some well known computer algebra systems, especially in multivariate polynomial gcd. It is also space efficient.|$|E
40|$|Empirical studies {{comparing}} {{the effectiveness of}} visual languages versus textual languages have rarely been attempted. Here we describe an experiment conducted on programmers solving vector and <b>matrix</b> <b>manipulation</b> tasks using the visual language Forms/ 3, the textual language Pascal, and a textual <b>matrix</b> <b>manipulation</b> language with the capabilities of APL. Presented here are our motivation, experimental approach, some of the difficulties experienced in attempting this type of empirical study, and {{a summary of the}} experimental results and insights gained...|$|R
3000|$|... [...]. According to (15)), the {{computation}} {{involved in}} linear detection is mainly <b>matrix</b> <b>manipulation</b> including <b>matrix</b> multiplication and inversion. Here the matrix [...]...|$|R
5000|$|We will rewrite this {{expression}} {{with some}} <b>matrix</b> <b>manipulation.</b> The {{reason for this}} seemingly counterproductive measure will become evident shortly. Exploiting the Hermitian symmetry of the covariance matrix , we can write ...|$|R
50|$|MATLAB (matrix laboratory) is a multi-paradigm {{numerical}} {{computing environment}} and fourth-generation programming language. A proprietary programming language developed by MathWorks, MATLAB allows <b>matrix</b> <b>manipulations,</b> plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages, including C, C++, C#, Java, Fortran and Python.|$|E
5000|$|... {{where the}} proper {{orthogonal}} tensor [...] is the dynamic rotation tensor and the non-singular tensors [...] are the left dynamic stretch tensor and right dynamic stretch tensor, respectively. Just as the classic polar decomposition, the DPD is valid in any finite dimension. Unlike the classic polar decomposition, however, the dynamic rotation and stretch tensors are obtained from solving linear differential equations, {{rather than from}} <b>matrix</b> <b>manipulations.</b> In particular, [...] is the deformation gradient of the purely rotational flow ...|$|E
50|$|Other machine {{features}} {{became available}} and {{could also be}} exploited. Consequently, BLAS was augmented from 1984 to 1986 with level-2 kernel operations that concerned vector-matrix operations. Memory hierarchy was also recognized as something to exploit. Many computers have cache memory that is much faster than main memory; keeping <b>matrix</b> <b>manipulations</b> localized allows better usage of the cache. In 1987 and 1988, the level 3 BLAS were identified to do matrix-matrix operations. The level 3 BLAS encouraged block-partitioned algorithms. The LAPACK library uses level 3 BLAS.|$|E
50|$|ND4S is a {{scientific}} computing library for linear algebra and <b>matrix</b> <b>manipulation</b> in a production environment, integrating with Hadoop and Spark {{to work with}} distributed GPUs. It supports n-dimensional arrays for JVM-based languages.|$|R
5000|$|... where KR, KG, and KB are ordinarily {{derived from}} the {{definition}} of the corresponding RGB space, and required to satisfy [...] (The equivalent <b>matrix</b> <b>manipulation</b> {{is often referred to as}} the [...] "color matrix".) ...|$|R
50|$|ND4J's {{operations}} include distributed parallel versions. Operation {{can occur}} in a cluster and process massive amounts of data. <b>Matrix</b> <b>manipulation</b> occurs in parallel on CPUs or GPUs over cloud computing, and can work in Spark or Hadoop clusters.|$|R
50|$|The design matrix {{contains}} data on {{the independent}} variables (also called explanatory variables) in statistical models which attempt to explain observed data on a response variable (often called a dependent variable) {{in terms of the}} explanatory variables. The theory relating to such models makes substantial use of <b>matrix</b> <b>manipulations</b> involving the design matrix: see for example linear regression. A notable feature of the concept of a design matrix is that it is able to represent a number of different experimental designs and statistical models, e.g., ANOVA, ANCOVA, and linear regression.|$|E
50|$|In the 1940s, D’Arcy Wentworth Thompson (biologist and mathematician, 1860-1948) {{looked at}} ways to {{quantify}} that could be attached to biological shape based on developmental and evolutionary theories. This led to the first branch of multivariate morphometrics, which emphasized <b>matrix</b> <b>manipulations</b> involving variables. In the late 1970s and early 1980s, Fred Bookstein (currently a professor of Anthropology at the University of Vienna) began using Cartesian transformations and David George Kendall (statistician, 1918-2007) showed that figures that hold the same shape can be treated as separate points in a geometric space. Finally, in 1996, Leslie Marcus (paleontologist, 1930-2002) convinced colleagues to use morphometrics on the famous Ötzi skeleton, which helped expose {{the importance of the}} applications of these methods.|$|E
30|$|The {{correlations}} between the DDOA measurements are ignored (which simplifies the <b>matrix</b> <b>manipulations</b> within the TALA, e.g. see endnote 5).|$|E
50|$|ND4J is for {{performing}} linear algebra and <b>matrix</b> <b>manipulation</b> in a production environment, integrating with Apache Hadoop and Spark {{to work with}} distributed central processing units (CPUs) or graphics processing units (GPUs). It supports n-dimensional arrays for JVM-based languages.|$|R
50|$|ND4S's {{operations}} include distributed parallel versions. They {{can take}} place in a cluster and process massive amounts of data. <b>Matrix</b> <b>manipulation</b> occurs in parallel on GPUs or CPUs in the cloud, and can work within Spark or Hadoop clusters.|$|R
50|$|Deeplearning4j {{includes}} an n-dimensional array class using ND4J that allows scientific computing in Java and Scala, {{similar to the}} functions that NumPy provides to Python. It's effectively based on a library for linear algebra and <b>matrix</b> <b>manipulation</b> in a production environment.|$|R
40|$|Elastic redatuming can {{be carried}} out before or after {{decomposition}} of the multi-component data into independent PP, PS, SP, and SS responses. We argue that from a practical point of view, elastic redatuming is preferably applied after decomposition. We review forward and inverse extrapolation of decomposed P- and S-wavefields. We use the forward extrapolation operators to derive a model of discrete multicomponent seismic data. This forward model is fully described in terms of <b>matrix</b> <b>manipulations.</b> By applying these <b>matrix</b> <b>manipulations</b> in reverse order we arrive at an elastic pro-cessing scheme for multicomponent data in which elastic redatuming plays an essential role. Finally, we illustrate elastic redatuming with a controlled 2 D example, consisting of simulated multicomponent seismic data...|$|E
40|$|ESPRIT is an {{interesting}} new method for solving the Direction-of-Arrival estimation problem. It involves some rather tricky <b>matrix</b> <b>manipulations.</b> We show how these calculations {{can be carried out}} using only unitary transformations of the data. No inverses or cross-products are required making the new method extremely robust...|$|E
40|$|Holly and Magnus [1988] {{show that}} the IV {{estimator}} in a linear equation is asymptotically as efficient as the ML estimator in the model that is obtained by "completing" this equation to a complete equations system. Their proof is long and involves many <b>matrix</b> <b>manipulations.</b> A simpler approach is provided here. ...|$|E
40|$|A {{new method}} is {{presented}} for obtaining stiffness constants for structures modeled as three-dimensional linear elastic beams. The three-dimensional lattice {{is comprised of}} multiple two-dimensional lattices. <b>Matrix</b> <b>manipulation</b> is {{used to determine the}} contribution of each two-dimensional substructure to the complete three dimensional lattice...|$|R
40|$|<b>Matrix</b> <b>manipulation</b> is very {{important}} in many types of applications. The suitability of reconfigurable hardware devices, in the form of field programmable gate arrays (FPGAs), is investigated as a low-cost solution for implementing two <b>matrix</b> <b>manipulation</b> operations. This paper present the design and implementation of matrix operations like addition, subtraction and multiplication using VHDL design approach, where the performances of programming language have been presented Solutions for processing different matrix operations. Advanced RISC Machine (ARM) is the Implementation result of the RISC microprocessor architecture. RISC introduces simpler hardware processor architecture because fixed length Instruction format with the opcode in the same bit position requires less decoding, allowing any register to be used in any context simplifies the compiler design and Complex addressing is performed through sequences of arithmetic and/or load store operations...|$|R
40|$|The {{purpose of}} the Matrix and Scientific Computing Language (MSCL) {{is to provide a}} tool for {{performing}} basic matrix operations and scientific calculations. The inspiration for MSCL comes from MATLAB. For this project, a small subset of MATLAB‟s direct <b>matrix</b> <b>manipulation</b> capabilities has been implemented in MSCL. In addition, various build-i...|$|R
40|$|Summary- Although the {{capacity}} of modern computers is increasing dramatically so too are the complexity of models that animal breeders employ, {{with the result that}} we still find computers limiting. This paper demonstrates the employment of linked lists for sparse <b>matrix</b> <b>manipulations</b> and their use in a number of relevant applications...|$|E
40|$|Abstract. Recently Chu, Liu, and Mehrmann {{developed}} an O(n 3) structure preserving method for computing the Hamiltonian real Schur {{form of a}} Hamiltonian matrix. This paper outlines an alternate derivation of the method and alternate explanation of why the method works. Our approach places emphasis eigenvalue swapping and relies less on <b>matrix</b> <b>manipulations...</b>|$|E
30|$|In this section, we {{indicate}} {{the relation between}} the ill-conditioning and the non-physical behaviour of the Holzapfel model and the MFH model. Obviously, for a 3 D boundary-value problem, it is impossible to compute analytically the condition number because of complicated <b>matrix</b> <b>manipulations.</b> Therefore, the condition number is calculated numerically for our tension tests.|$|E
5000|$|For {{intrinsic}} types we can 'sweep' pointers over {{different sets}} of target data using the same code without any data movement. Given the <b>matrix</b> <b>manipulation</b> y = B C z, we can write the following code (although, in this case, the same result could be achieved more simply by other means): ...|$|R
40|$|In Jin et al. (2014), the {{limiting}} spectral distribution (LSD) of a symmetrized auto-cross covariance matrix is derived using <b>matrix</b> <b>manipulation,</b> with finite (2 + δ) -th moment assumption. Here we give an alternative method using a result in Bai and Silverstein (2010), {{in which a}} weaker condition of finite 2 nd moment is assumed. ...|$|R
40|$|Empirical studies {{comparing}} {{the effectiveness of}} visual languages versus textual languages have rarely been attempted. Here we describe an experiment conducted on programmers solving vector and <b>matrix</b> <b>manipulation</b> tasks using the visual language Forms/ 3, the textual language Pascal, and a textual <b>matrix</b> <b>manipulation</b> language with the capabilities of APL. Presented here are our motivation, experimental approach, some of the difficulties experienced in attempting this type of empirical study, and {{a summary of the}} experimental results and insights gained. 1 : Introduction A long term goal of research in visual programming, according to a 1991 paper by E. P. Glinert et al., is: to develop "general purpose" visual languages which combine textual and graphical elements in so powerful and compelling a manner that tomorrow's programmers would prefer them to purely textual languages for their everyday tasks [7]. In order to validate any claims of visual programming languages replacing textual l [...] ...|$|R
