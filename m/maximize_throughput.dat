376|2851|Public
25|$|Dynamic {{striping}} {{across all}} devices to <b>maximize</b> <b>throughput</b> means that as additional devices {{are added to}} the zpool, the stripe width automatically expands to include them; thus, all disks in a pool are used, which balances the write load across them.|$|E
5000|$|Load {{balancing}} [...] - [...] The workload {{is distributed}} across the available hardware components. Goal: Reduce I/O completion time, <b>maximize</b> <b>throughput,</b> and optimize resources ...|$|E
50|$|Dynamic {{striping}} {{across all}} devices to <b>maximize</b> <b>throughput</b> means that as additional devices {{are added to}} the zpool, the stripe width automatically expands to include them; thus, all disks in a pool are used, which balances the write load across them.|$|E
50|$|DDAs {{are well}} suited for {{hardware}} implementation and can be pipelined for <b>maximized</b> <b>throughput.</b>|$|R
30|$|We {{propose a}} {{heuristic}} method and an approximation algorithm {{for determining the}} UAV position that <b>maximizes</b> <b>throughput.</b>|$|R
30|$|This {{work also}} {{introduces}} {{a simple and}} computationally efficient method for keeping all associated users within the transmission range of the UAV while determining a UAV position that <b>maximizes</b> <b>throughput.</b>|$|R
50|$|Climbers {{would need}} to be paced at optimal timings so as to {{minimize}} cable stress and oscillations and to <b>maximize</b> <b>throughput.</b> Lighter climbers could be sent up more often, with several going up at the same time. This would increase throughput somewhat, but would lower the mass of each individual payload.|$|E
5000|$|Optical sorters are in {{widespread}} {{use in the}} food industry worldwide, with the highest adoption in processing harvested foods such as potatoes, fruits, vegetables and nuts where it achieves non-destructive, 100 percent inspection in-line at full production volumes. The technology is also used in pharmaceutical manufacturing and nutraceutical manufacturing, tobacco processing, waste recycling and other industries. Compared to manual sorting, which is subjective and inconsistent, optical sorting helps improve product quality, <b>maximize</b> <b>throughput</b> and increase yields while reducing labor costs.|$|E
50|$|In computing, load {{balancing}} improves {{the distribution of}} workloads across multiple computing resources, such as computers, a computer cluster, network links, central processing units, or disk drives. Load balancing aims to optimize resource use, <b>maximize</b> <b>throughput,</b> minimize response time, and avoid overload of any single resource. Using multiple components with {{load balancing}} instead of a single component may increase reliability and availability through redundancy. Load balancing usually involves dedicated software or hardware, such as a multilayer switch or a Domain Name System server process.|$|E
30|$|Furthermore, in [21], {{the total}} {{transmission}} delays of alternative paths between a source and destination nodes are compared. It is {{seen that the}} optimum path for a packet that <b>maximizes</b> <b>throughput</b> indeed depends {{on the size of}} the packet. Note that minimizing the overall transmission delay is equivalent to <b>maximizing</b> the end-to-end <b>throughput,</b> as mentioned by [23, 24].|$|R
3000|$|... of the {{inferior}} link as the performance measure for an end-to-end two-hop path. This measure enables the discussion for <b>maximizing</b> <b>throughput</b> in a variable rate system. Accordingly, balanced relaying and access links are more desirable.|$|R
30|$|The {{solution}} to the above problem can be solved by the Kuhn-Munkres algorithm in [18], and the details {{is beyond the scope}} of this paper. The pseudo-code of the <b>maximizing</b> <b>throughput</b> gain via resource allocation is summarized in Algorithm 1.|$|R
50|$|All TimesTen data {{exists in}} RAM, however TimesTen does utilize {{non-volatile}} storage (such as a hard disk) for database persistence and recoverability. A TimesTen database stores all transactional data modifications in an in-memory log buffer, which is eventually persisted to disk {{in the form}} of transaction log files. In addition, TimesTen also persists snapshots of the in-memory database, called checkpoint files, to disk. The combination of checkpoint files and transaction log files allow TimesTen to provide recoverability {{in the event of a}} system failure. TimesTen implements a parallel log manager in order to <b>maximize</b> <b>throughput</b> on large SMP systems.|$|E
50|$|The write cache in most {{operating}} systems sorts its writes (using the elevator algorithm or some similar scheme) to <b>maximize</b> <b>throughput.</b> To avoid an out-of-order write hazard with a metadata-only journal, writes for file data must be sorted {{so that they}} are committed to storage before their associated metadata. This can be tricky to implement because it requires coordination within the operating system kernel between the file system driver and write cache. An out-of-order write hazard can also exist if the underlying storage cannot write blocks atomically, or does not honor requests to flush its write cache.|$|E
50|$|Evolution-Data Optimized (EV-DO, EVDO, etc.) is a {{telecommunications}} {{standard for the}} wireless transmission of data through radio signals, typically for broadband Internet access. EV-DO is an evolution of the CDMA2000 (IS-2000) standard that supports high data rates and can be deployed alongside a wireless carrier's voice services. It uses advanced multiplexing techniques including {{code division multiple access}} (CDMA) as well as time division multiplexing (TDM) to <b>maximize</b> <b>throughput.</b> It {{is a part of the}} CDMA2000 family of standards and has been adopted by many mobile phone service providers around the world particularly those previously employing CDMA networks. It is also used on the Globalstar satellite phone network.|$|E
40|$|We {{define a}} variant of k-of-n testing that we call {{conservative}} k-of-n testing. We present a polynomial-time, combinatorial algorithm for the problem of <b>maximizing</b> <b>throughput</b> of conservative k-of-n testing, in a parallel setting. This extends previous work of Kodialam and Condon et al., who presented combinatorial algorithms for parallel pipelined filter ordering, which is the special case where k= 1 (or k = n). We also consider the problem of <b>maximizing</b> <b>throughput</b> for standard k-of-n testing, and show how to obtain a polynomial-time algorithm based on the ellipsoid method using previous techniques. Comment: 17 pages. An extended abstract of this paper appeared in the Proceedings of the 22 nd International Symposium on Algorithms and Computation (ISAAC 2011...|$|R
50|$|Process {{optimization}} is {{the discipline}} of adjusting a process so as to optimize some specified set of parameters without violating some constraint. The most common goals are minimizing cost and <b>maximizing</b> <b>throughput</b> and/or efficiency. This {{is one of the}} major quantitative tools in industrial decision making.|$|R
50|$|If an XFS {{file system}} is to be created on a striped RAID array, a stripe unit can be {{specified}} when the file system is created. This <b>maximizes</b> <b>throughput</b> by ensuring that data allocations, inode allocations and the internal log (the journal) are aligned with the stripe unit.|$|R
50|$|Replication in TimesTen is {{implemented}} by the replication agent, a daemon process that aims at every TimesTen database involved in replication. The replication agent sends and receives updates between databases by communicating with the replication agents of other databases involved in the same replication scheme. Change capture is via log-mining with in-memory optimization; under normal operating conditions change records are captured from the in-memory log buffer with no need for any disk I/O. Communication between replication agents is via an efficient stream-oriented protocol built on top of regular TCP/IP connections. The replication agent is multi-threaded and in the 11.2.2 release, TimesTen supports parallel replication for increased throughput. The replication workload is automatically parallelized to <b>maximize</b> <b>throughput</b> while still maintaining correctness.|$|E
50|$|To <b>maximize</b> <b>throughput</b> of players, {{each room}} of the dungeon has a group of players in it. Groups all advance to the next room simultaneously. As a result, each room {{has a hard time}} limit. If players finish early, they must wait for the time limit to expire before advancing. If the players are too slow, they are penalized hit points and are moved into the next room. The plot for each dungeon usually {{provides}} a reason for the time limit. One year the plot specified that the characters were fleeing lizardmen. Sometimes the rooms themselves explain the time limit; in 2005 one room had a moving wall that would crush characters who failed to open the locked door into the next room quickly enough.|$|E
40|$|Abstract: Serial flow or {{production}} lines are modeled as tandem queueing networks and formulated as continuous-time Markov chains to investigate how to <b>maximize</b> <b>throughput</b> or minimize the average work-in-process (WIP) when the total service time among the stations are fixed (this is the workload allocation problem). This paper examines {{the effect of}} the unreliability of the machines on the optimal workload allocation in order to <b>maximize</b> <b>throughput</b> or minimize the average WIP subject to a minimum required throughput...|$|E
5000|$|... {{products}} {{to control the}} settings of industrial plants in real-time {{with the aim of}} <b>maximizing</b> <b>throughput</b> or some economic objective, to ensure that process constraints are met or to achieve a more smooth and stable process by rejecting disturbances. At the core of these products are always models custom-tailored for the plant and for use with model predictive control.|$|R
40|$|Provided is {{a system}} and method for <b>maximizing</b> <b>throughput</b> in a {{telecommunications}} network. The method is operable to select and service {{a request for a}} communication session by selecting a bit rate and assigning the bit rate to the request. The method selects the request from a pool of queued requests and the bit rate from all supported bit rates. The request and bit rate are selected based on calculations that determine an amount of power needed for each queued request at each bit rate. The calculations result in ratios representing each combination of power and bit rate for each request. The method selects the ratio having the highest number of bit rates per power unit and assigns the bit rate to the associated request. This approach enables the method to select a queued request according to current network constraints and so provides an optimal approach that <b>maximizes</b> <b>throughput...</b>|$|R
40|$|Thesis (M. S.) [...] Wichita State University, College of Engineering, Dept. of Industrial and Manufacturing Engineering. Buffers are {{inventory}} held {{in between}} machines to avoid stockout of parts. When a company has large buffer quantities between machines the inventory holding cost increases. Reducing {{the amount in}} a buffer increases the chance of stockout and hence will have {{a direct impact on}} the throughput of the line. Hence {{there is a need to}} <b>maximize</b> the <b>throughput</b> of the production line for a minimum quantity of buffers carried between machines. In large volume manufacturing, homogeneous unreliable serial parallel production lines are typical. For this line, a method is developed to identify the buffer allocation that <b>maximizes</b> the <b>throughput</b> of the line with a constraint on the maximum buffer size that can be held in the line. The developed method is implemented in case studies to identify buffer allocation that <b>maximizes</b> <b>throughput...</b>|$|R
30|$|We {{provide a}} {{mathematical}} {{formulation of the}} problem: to <b>maximize</b> <b>throughput,</b> considering {{the characteristics of the}} PHY and MAC layers, by optimally positioning a UAV based on the data rate demands and positions of its associated users.|$|E
40|$|Link {{adaptation}} algorithms enhance throughput in OFDM {{communication systems}} by adjusting various transmission parameters based on channel state information. In wireless OFDM systems, however, {{changes in the}} channel due to Doppler spread and limits on the reverse link bandwidth {{make it difficult to}} fully adapt to current channel conditions. Therefore in this paper we study link adaptation based on time-frequency blocks. We propose an algorithm that adapts the modulation scheme in a time-frequency block to <b>maximize</b> <b>throughput</b> while maintaining a target average block error rate. We describe a channel prediction algorithm and comment on the channel conditions where it improves performance. Simulations show {{that it is possible to}} optimize the size of the time-frequency block to <b>maximize</b> <b>throughput</b> given a fixed frequency of link adaptation control messages...|$|E
40|$|Force {{sustainment}} {{requires an}} optimum supply {{of resources to}} maintain and project power in an area. With sustainment reaching ever farther from the origin of supplies, commanders find an increasing exposure of their logistic trains to risk. To mitigate the increased risk from hostile forces, the survivability of supply vehicles {{must be considered in}} force sustainment operations to accurately capture a true throughput projection. Development of an optimum throughput plan for littoral sustainment will reduce overall risk to supplies and <b>maximize</b> <b>throughput</b> to the war-fighter. The research conducted focused on maximizing throughput considering the size, quantity, and risk to the cargo vehicles traversing the littoral arena. The major risk component studied is comprised primarily of littoral mines, though this risk is comparable to many other survivability situations. Use of data collected from computer modeling programs are used to compute and <b>maximize</b> <b>throughput.</b> US Navy (USN) author...|$|E
30|$|In {{addition}} to the optimal scheduling problem that <b>maximizes</b> <b>throughput,</b> our framework can be extended to obtain the optimality of association that minimizes the frequency of handoffs occurring in vehicles. In the Appendix, we formulate the optimal handoff minimization scheduling problem as a non-linear integer programming and show that this problem also holds the TU property, and thus is solvable in polynomial time.|$|R
40|$|The {{throughput}} in multi-hop ad hoc networks (MANETs) {{is highly}} dependent on the sending rate and the route length from the source node to the destination. Sending packets at the optimal rate for a given route length <b>maximizes</b> <b>throughput</b> in the network, whereas slightly increasing the sending rate over the optimal value may decrease throughput by up to 55 %...|$|R
40|$|The {{problem that}} we {{consider}} is that of <b>maximizing</b> <b>throughput</b> in a MIMO network while accounting for vari- able rate streams on MIMO links. The stream rates on a link depend on the channel conditions of the link, {{and the manner in}} which the diversity-multiplexing tradeoff is handled. In this work, we use the dependence of stream rates on the chan- nel to develop methods of link selection and stream alloca- tion that approximately <b>maximize</b> the aggregate <b>throughput.</b> <b>Maximizing</b> <b>throughput</b> is closely tied to the problem of allo- cating streams based on the stream rates of the selected links. Doing this optimally is very complex even for networks with 10 or fewer links. We develop a stream allocation heuristic that approximately <b>maximizes</b> the <b>throughput</b> over a given set of links. Simulation results for single collision domain networks show that our stream allocation heuristic is within 6 % of optimal in networks with up to 10 links (in a typical case where the maximum concurrency allowed is 15 links). The algorithm also cuts the difference between heuristic and optimal results in half, compared to a simple greedy algo- rithm. Our research has also identified the feasibility check- ing problem for general MIMO networks as being a compu- tationally hard problem. However, we also identify several practical special cases, e. g. when interference suppression is done only at the receiver side, for which feasibility checking remains a polynomial-time operation...|$|R
40|$|Abstract — We {{consider}} {{the problem of}} providing absolute QoS guarantees to multiple classes of users of an OBS network {{in terms of the}} end-to-end burst loss. We employ Markov decision process (MDP) theory to develop wavelength sharing policies that <b>maximize</b> <b>throughput</b> while meeting the QoS guarantees. The randomized threshold policies we obtain are simple to implement and operate, and make effective use of statistical multiplexing. I...|$|E
40|$|This {{proposal}} {{outlines the}} application of the theory of constraints (TOC) to serving the working professionals in the industrial technology (IT) programs at the University of Texas of the Permian Basin (UTPB). Bottlenecks in the process are identified. Changes are then proposed in the delivery of the program to <b>maximize</b> <b>throughput,</b> as it applies to the number of students in the IT programes. 1...|$|E
40|$|The {{systems design}} of a {{real-time}} hybrid digital-optical correlator is analyzed based on partitioning of the digital and optical systems such that {{the efficiency of the}} optical image train is maximized. The parallelization of tasks within the digital sub-system is to <b>maximize</b> <b>throughput.</b> The significance of communication bottlenecks are emphasized in the digital system and the constraints enforces on the initial selection of digital signal processing devices...|$|E
40|$|Conference PaperIn this work, we {{consider}} delay-constrained systems in cooperative relay networks, and derive methods to <b>maximize</b> the <b>throughput</b> when a limited feedback {{link to the}} transmitter nodes exist. We derive the optimal rate control policy, and show that {{with just a few}} bits of feedback, most of the gains of the perfect feedback rate control policy are achievable. We <b>maximize</b> the <b>throughput</b> for popular methods of transmission in a network such as relaying, routing, and direct transmission. It is observed that for a finite rate of feedback, the <b>throughput</b> <b>maximizing</b> outage probability can be relatively high. This suggests using higher rate codes, and allowing some outages in an effort to increase the overall throughput. Interestingly, for large average power constraints, power control is unnecessary to <b>maximize</b> the <b>throughput.</b> On the other hand, for small average power constraints, we show that power control is more important than rate control...|$|R
30|$|The {{best source}} rate that <b>maximizes</b> the <b>throughput</b> exists at around the {{switching}} points of APR and MST.|$|R
30|$|The two-way relay {{channel is}} a special case of the multi-way relay channel with L= 1 cluster and K= 2 users per cluster. Thus, the optimal policy that <b>maximizes</b> <b>throughput</b> can be found by solving Equation 3. This channel model is also {{considered}} in [28] with stochastic data arrivals and buffers at the relay where it is shown that the throughput maximization problem is convex and can be solved numerically.|$|R
