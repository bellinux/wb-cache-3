8|15|Public
500|$|According to Shelton himself, {{the initial}} idea for [...] "Savior's Shadow" [...] {{came to him}} in his sleep in May 2015. Although the singer did not {{remember}} the exact dream, he recalled [...] "four lines of lyrics and [...] melody", which drew him to [...] "grab his smartphone and s the passage into the <b>memo</b> <b>function</b> before it was lost". He {{enlisted the help of}} married couple Jessi Alexander and Jon Randall to complete the track, who were ironically experiencing changes in their lives, much like Shelton. The finalized recording was done at Shelton's private home in Los Angeles, California in his bedroom's closet for [...] "best effect". Alexander claimed that the track [...] "came deep from Blake's soul" [...] and demonstrated that his tenth studio album If I'm Honest would [...] "be extremely personal". She remarked that the writing became more emotional, as the track was finished [...] "just one month after his divorce from Miranda Lambert". When Shelton released the single on April 8, 2016 through Warner Bros. Nashville, he expressed gratitude from his fans, stating: [...] "In all the years I've been doing this I've never experience this kind of reaction from a song. So proud." ...|$|E
50|$|Programmers must specify {{an upper}} limit for varrays, but need not for index-by tables or for nested tables. The {{language}} includes several collection {{methods used to}} manipulate collection elements: for example FIRST, LAST, NEXT, PRIOR, EXTEND, TRIM, DELETE, etc. Index-by tables {{can be used to}} simulate associative arrays, as in this example of a <b>memo</b> <b>function</b> for Ackermann's function in PL/SQL.|$|E
50|$|The {{calculator}} had a BASIC interpreter, <b>MEMO</b> <b>function,</b> {{a formula}} library. The built-in 8 kB memory could be expanded using the optional Casio RP-8 (8 kB) or RP-33 (32 kB) RAM expansion modules. An optional Casio FA-6 interface board provided a cassette tape recorder connector, a Centronics printer connector and an RS-232C port. The calculator could print data and listings on any Centronics printer; printing graphics required the Casio FP-100 plotter-printer.|$|E
40|$|<b>Memo</b> <b>functions</b> and memoization {{are well}} known {{concepts}} in AI programming. They have {{been around since the}} sixties and are often used as examples in introductory programming texts. However, the automation of memoization as a practical software engineering tool for AI systems has never received a detailed treatment. This paper describes how automatic memoization can be made viable on a large scale. It points out advantages and uses of automatic memoization not previously described, describes the components of an automatic memoization facility, enumerates potential memoization failures, and presents a publicly available memoization package (CLAMP) for the Lisp programming language. Experience in applying these techniques {{in the development of a}} large planning system are briefly discussed. Content Areas. AI programming, AI software engineering. Acknowledgements. This work was supported in part by the Advanced Research Projects Agency [...] . 1 Introduction <b>Memo</b> <b>functions</b> a [...] ...|$|R
25|$|The ZEN Sleek {{was first}} {{available}} on August 30, 2005, {{and is an}} upgrade of the ZEN with a 20GB hard drive, FM radio, built-in microphone, and sports an aluminium casing. Like its predecessors, it can synchronize with Microsoft Outlook's calendar, address book, and <b>memo</b> <b>functions.</b> The player has a battery life of up to 20 hours.|$|R
40|$|Every now and then, a user of the Glasgow Haskell Compiler {{asks for}} a feature that {{requires}} specialised support from the storage manager. <b>Memo</b> <b>functions,</b> pointer equality, external pointers, nalizers, and weak pointers, are all examples. We take <b>memo</b> <b>functions</b> as our exemplar because they {{turn out to be}} the trickiest to support. We present no fewer than four distinct mechanisms that are needed to support memo tables, and that (in various combinations) satisfy a variety of other needs. The resulting set of primitives is undoubtedly powerful and useful. Whether they are too powerful is not yet clear. While the focus of our discussion is on Haskell, there is nothing Haskell-specic about most of the primitives, which could readily be used in other settings. 1 Introduction an arbitrary function f, construct a memoised version of f; that is, construct a new function with the property that it returns exactly the same results as f, but if it is applied a second time to [...] ...|$|R
5000|$|According to Shelton himself, {{the initial}} idea for [...] "Savior's Shadow" [...] {{came to him}} in his sleep in May 2015. Although the singer did not {{remember}} the exact dream, he recalled [...] "four lines of lyrics and the melody", which drew him to [...] "grab his smartphone and sing the passage into the <b>memo</b> <b>function</b> before it was lost". He {{enlisted the help of}} married couple Jessi Alexander and Jon Randall to complete the track, who were ironically experiencing changes in their lives, much like Shelton. The finalized recording was done at Shelton's private home in Los Angeles, California in his bedroom's closet for [...] "best effect". Alexander claimed that the track [...] "came deep from Blake's soul" [...] and demonstrated that his tenth studio album If I'm Honest would [...] "be extremely personal". She remarked that the writing became more emotional, as the track was finished [...] "just one month after his divorce from Miranda Lambert". When Shelton released the single on April 8, 2016 through Warner Bros. Nashville, he expressed gratitude from his fans, stating: [...] "In all the years I've been doing this I've never experience this kind of reaction from a song. So proud." ...|$|E
40|$|This paper {{presents}} a polytypic implementation of memo functions {{that are based}} on digital search trees. A <b>memo</b> <b>function</b> {{can be seen as the}} composition of a tabulation function that creates a memo table and a look-up function that queries the table. We show that tabulation can be derived from look-up by inverse function construction. The type of memo tables is dened by induction on the structure of argument types and is parametric with respect to the result type of memo functions. A memo table for a xed argument type is then a functor and look-up and tabulation are natural isomorphisms. We provide simple polytypic proofs of these properties. 1 Introduction A <b>memo</b> <b>function</b> [11] is like an ordinary function except that it caches previously computed values. If it is applied a second time to a particular argument, it immediately returns the cached result, rather than recomputing it. For storing arguments and results a <b>memo</b> <b>function</b> internally employs an index structure, the [...] ...|$|E
30|$|This paper {{uses the}} BookRoll digital {{learning}} material reading system which can offer {{many types of}} interaction between users and system as our e-book reader. Users can use marker function to highlight sections of learning materials in yellow for the sections that were not understood, or red for import sections. <b>Memo</b> <b>function</b> can also be created at any pages with the specific section of the page. Users can also use bookmark function to mark any pages. Currently, e-book contents can be uploaded to the BookRoll in PDF format {{and be able to}} support a large scale of devices as it can be accessed through a standard web browser. In this paper, we implement the methods that to be compared to a slide-based e-book which is being used in the BookRoll.|$|E
5000|$|Optional Multi Function Battery Pack MB-D100 accepts six 1.5 V LR6 (AA-size alkaline) {{batteries}} or {{one or two}} Li-Ion EN-EL3 batteries {{for extended}} shooting capability. Features voice <b>memo</b> recording/playback <b>function,</b> vertical shutter release button, Command and Sub Command Dials, AF start button and a 10-pin remote terminal.|$|R
40|$|It {{is shown}} that a process similar to Earley's {{algorithm}} can be generated by a simple top-down backtracking parser, when augmented by automatic memoization. The memoized parser has the same complexity as Earley's algorithm, but parses constituents in a different order. Techniques for deriving <b>memo</b> <b>functions</b> are described, with a complete implementation in Common Lisp, and an outline of a macro-based approach for other languages. 1. Memoization The term memoization was coined by Donald Michie (1968) {{to refer to the}} process by which a function is made to automatically remember the results of previous compu-tations. The idea has become more popular in recent years with the rise of functional languages; Field and Harrison (1988) devote a whole chapter to it. The basic idea is just to keep a table of previously computed input/result pairs. In Common Lisp one could write: 1 (defun memo (fn) &quot;Return a memo-function of fn. &quot...|$|R
5|$|In Japan, Final Fantasy and Final Fantasy II were re-released both {{separately}} {{and as a}} combined game for the PlayStation. The collection was released in Japan in 2002 as Final Fantasy I & II Premium Package and in Europe and North America in 2003 as Final Fantasy Origins. This version {{was similar to the}} WonderSwan Color remake and featured several changes such as more detailed graphics, a remixed soundtrack, added full motion video sequences, art galleries of Yoshitaka Amano's illustrations, and a <b>memo</b> save <b>function.</b> On December 18, 2012, the port was re-released as part of the Final Fantasy 25th Anniversary Ultimate Box release.|$|R
40|$|Implicit {{surfaces}} {{are defined by}} a real valued function. They can easily be defined and manipulated and have therefore gained great popularity in computer graphics. This paper presents a purely functional implementation of a well known algorithm to polygonize implicit surfaces, based on spatial partitioning by means of octrees. While conventional implementations are laden with practical issues, our implementation in Clean is straightforward, implements the algorithm very concisely and makes essential use of lazy evaluation. Further we present two enhancements to this basic algorithm: Introducing a <b>memo</b> <b>function</b> greatly improves time efficiency. The appearance of a visualized implicit surface can be greatly enhanced by providing normal vector information. For calculating normal vectors we adopt a lazy implementation of automatic differentiation. 1 Introduction An implicit surface is given by the set of zeros of the underlying function, the so called implicit function. Implicit [...] ...|$|E
40|$|AbstractMemoization is {{a useful}} {{technique}} to eliminate computational redundancy. A <b>memo</b> <b>function</b> remembers all the arguments to which it has been applied, together with their corresponding results, by storing them in a table. This table is consulted before each functional call {{to determine if the}} particular argument is in it. If so, the call is skipped and the stored result is returned; otherwise the call is performed and its result added to the table. Acar, Belloch and Harper present a framework to apply memoization selectively, that is, enabling the programmer to determine precisely the dependences between the input and the result of a function. This framework is efficient and yields programs whose performance can be analyzed using standard techniques. The language, implemented as an SML library, is based on a modal type system which allows the programmer to reveal the true data input/output dependences in a program. However, the modality seems to be an ad-hoc choice for the implementation. In this paper we develop selective memoization, using instead box types, corresponding to the necessitation modality □. We also include non-memoized functions, and provide full proofs of type safeness and soundness of the dynamic semantics with respect to an effect-free system which is later translated into the very well-known language PCF...|$|E
50|$|The {{standard}} version of MAXQDA for macOS and Windows offers tools for the organisation {{and analysis of}} qualitative data. This includes text, audio, image, video and bibliographical files as well as survey data, Twitter tweets or focus group transcripts. The data can be analysed in a four-screen window {{with the help of}} codes and <b>memos.</b> MAXQDA’s visualisation <b>functions</b> and export options facilitate presentations. MAXQDA includes some quantitative data analysis tools (e.g. Mixed Methods tools).|$|R
40|$|Status of this <b>Memo</b> An Echo <b>Function</b> for CLNP (ISO 8473) This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. This memo defines an echo function for the connection-less network layer protocol. The mechanism that is mandated here is in the fina...|$|R
40|$|Data Types and Rewrite Systems : : : : : : : : : : : : : : : : : : : : : : 23 4. 5 Rewrite Systems and Functions : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 24 4. 6 <b>Memo</b> <b>Functions</b> : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 26 4. 7 Beyond Symbol Tables : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 27 5 Design Considerations for Kimwitu 28 5. 1 Why a Type per Phylum? : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 28 5. 2 What is in a Name? : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 28 5. 3 What is the Place in Software Engineering? : : : : : : : : : : : : : : : : : : : : : : 29 6 Acknowledgements 29 A Syntax of the Kimwitu input 29 B Structure File Encoding 31 References 33 Index 2 1 INPUT Introduction When {{all else}} fails, read the manual. Anonymous. In this {{document}} we describe {{a system that}} supports the construction of programs that use trees or terms as their main data struc [...] ...|$|R
500|$|After {{this first}} screen, players are taken the main puzzle solving interface, which {{provides}} {{instructions for the}} current puzzle on the top screen while allowing the player to interact directly with the touch screen in order to solve the puzzle. The player has an infinite {{amount of time to}} complete each puzzle, and they have access to an in-game <b>memo</b> pad <b>function</b> to aid them in solving each puzzle. If they do not wish to solve the puzzle at the time, they can hit the button labelled [...] "Quit" [...] in order to exit the interface without losing any Picarats. Additionally, all puzzles have three hints available that can be purchased with tokens called [...] "hint coins". If a player needs more help, they can also purchase a fourth [...] "super hint", a more detailed hint that costs two hint coins. However, there are a limited amount of hint coins, and the game recommends they be used wisely. [...] The player starts with ten hint coins, but more can be obtained by thorough investigation of the village.|$|R
40|$|The ErbB 2 {{receptor}} {{tyrosine kinase}} {{has been shown to}} play an important role in cancer cell motility and metastases formation. This receptor is often overexpressed in human tumors of diverse origins, including breast and ovarian cancer. Individuals with ErbB 2 over expressing tumors have shown poor clinical outcome. Our studies are focused on signaling molecules that interact with autophosphorylated tyrosine residues of the cytoplasmic tail of the receptor. Two of the sites, Tyr 1201 (YC) and Tyr 1227 (YD) are fully able to restore the migratory phenotype of breast carcinoma cells. Studies of the functional role of ErbB 2 phosphorylation sites identified PLCγ 1 as an interacting partner of the YC autophosphorylation site, and Memo (Mediator of ErbB 2 -driven cell Motility) as a binding partner of the YD site that is required for ErbB 2 induced cell motility. Memo is encoded by a unique gene that is found in all branches of life, from bacteria to humans. Memo has no characterized domains, nor does it have obvious catalytic activity. Various approaches were used to position Memo in a signaling pathway and to uncover its biochemical <b>function.</b> <b>Memo</b> was initially detected based on its important role in ErbB 2 - induced cell motility. In fact, tumor cells with a specific knock-down (KD) of Memo failed to grow microtubules in response to Heregulin (HRG) -induced ErbB 2 activation and were impaired in their migration. Cell migration proceeds in distinct steps. In response to a chemotactic stimulus, cells extend protrusions at the front that help in attachment. This is followed by contraction of the cell body and tail detachment at the rear allowing movement in the direction of the ligand. The initial event in the process is sensing of the ligand in response to activation of cellular receptors like EGFR or ErbB 2. Their activation initiates signaling pathways that lead to polymerization of new actin at the leading edge, which is necessary for generating the protrusive force allowing migration. An important goal of my thesis work has been to investigate the step(s) of the migratory process that require Memo. In the first study, we explored migration using Dunn chambers and analyzed the chemotactic response of tumor cells in a shallow gradient of ligand. By tracing HRG-stimulated cell migration in time-lapse video microscopy, we found that Memo or PLCγ 1 KD strongly impairs cell directionality, reflecting an important role for Memo and PLCγ 1 in orchestrating directional cell migration. We also demonstrated that depletion of Memo or PLCγ 1 resulted in very similar phenotypes, with a strong impairment of HRG-induced cytoskeletal organization. To gain more insight into <b>Memo’s</b> <b>function,</b> we carried out a Yeast- 2 -Hybrid (YTH) analysis and found a number of interesting new partners of interaction for Memo. Of particular interest is the small protein cofilin, one of the major cellular actin severing and depolymerizing factors that is known to have an essential role in directional sensing during chemotaxis. This interaction was confirmed in vitro using recombinant proteins and in vivo in coimmunoprecipitation experiments where Memo was detected in complexes with cofilin, ErbB 2 and PLCγ 1. Interestingly, we also found that HRG-induced PLCγ 1 phosphorylation was decreased in Memo KD cells, suggesting that Memo regulates PLCγ 1 activation. Furthermore, by introducing GFP-tagged cofilin into control, Memo or PLCγ 1 siRNA transfected breast tumor cells, we showed that HRG-induced recruitment of GFP-cofilin to lamellipodia is impaired in Memo- and in PLCγ 1 KD cells, suggesting that both proteins lie upstream of cofilin in models of ErbB 2 -driven tumor cell migration. Finally, we examined the effect of Memo on cofilin binding and severing/depolymerizing properties. In vitro F-actin binding assays showed that Memo does not impair cofilin binding to F-actin, and revealed that Memo is a novel F-actin binding protein. In vitro F-actin depolymerization assays indicated that Memo promotes cofilin depolymerizing/severing activity. Altogether, these data suggest a novel role for Memo during the migratory process and its implication in the regulation of actin dynamics through cofilin binding. In the second study, we used two different Memo-defective cellular models to examine <b>Memo’s</b> <b>function</b> in more detail. We demonstrated that inhibition of Memo impairs activation of a number of signaling molecules including Src, Shc, ERK and PLCγ 1. We also provide evidence that Memo interacts with the three Shc isoforms, p 46 shc, p 52 shc, and p 66 shc, and showed that Shc is required for Memo binding to the ErbB 2 receptor. Control and Memodeficient cells were also scored for their migration and adhesion properties. These assays indicated that Memo is important in both cell migration and adhesion processes. Also, morphological and biochemical analyses of control and Memo-deficient cells suggested that Memo is involved in focal adhesion organization and rear cell deadhesion during the migratory process. Altogether, these two studies revealed important roles for Memo at different steps of cell migration and metastasis, making it a potential interesting target for cancer therapy. Genetic approaches in model organisms have been important for gaining insight into the function of evolutionarily conserved proteins. To position Memo within a genetic network, experiments in the model organism S. cerevisae that lends itself to rapid genetic screening were performed. We investigated cellular localization of Memo in yeast and found that Memo is located in the nucleus and cytoplasm of the cell. A S. cerevisae memo Δ strain has been generated and is viable. Considering the role of Memo in the microtubule and actin networks that we described in mammalian cells, we examined the memo Δ strain for defects in different cytoskeletal dynamics. No significant effect was observed. We also performed a Synthetic Lethal Screen of genetic interactions between a memo Δ strain and an ordered array of 4700 Yeast strains containing non-essential gene deletions. This analysis revealed a limited number of synthetic interactions. Lethality was observed in combination with the plc 1 Δ strain. PLC 1 encodes for the unique isoform of phosphatidylinositol-specific phospholipase C of S. cerevisiae. The results are intriguing and exciting considering the data obtained in the mammalian models; in fact, we demonstrated that Memo and PLCγ 1 interact with ErbB 2 autophosphorylation sites and are essential for directional migration. We also showed that Memo is found in a complex with PLCγ 1 and ErbB 2 and that Memo is likely contributing to PLCγ 1 activation. We hypothesize that in Yeast, Memo and PLC 1 act in the same or in distinct but related pathways, and suggest that the connection between PLC and Memo induced-pathways is also conserved through evolution...|$|R
40|$|This <b>memo</b> {{describes}} the <b>functions</b> in the synchronization library provided for programs written for ASIM and {{acts as a}} user's manual. Mul-T provides futures and binary semaphores as primitive synchronization mechanisms. For experimenting with other synchronization constructs, we have extended the language to include J-structures, L-structures, mutualexclusion locks, counting semaphores and barriers. An extension of futures to allow thread placement directives is also provided. 1 Introduction A synchronization library is provided in ASIM for users to experiment with various synchronization mechanisms. This memo assumes knowledge of programming in the ASIM environment. See Alewife Memo 13 for {{a description of the}} ASIM environment. The library contains implementations of mutual-exclusion locks, counting semaphores, Jstructures, L-structures, and barriers. These supplement the synchronization mechanisms already present in Mul-T on ASIM, viz., futures, and binary semaphores. This memo will b [...] ...|$|R

