0|258|Public
5000|$|On a <b>RAM</b> <b>machine</b> with {{word size}} [...] and integer inputs , the {{problem can be}} solved in [...] {{operations}} {{by means of the}} fast Fourier transform.|$|R
5000|$|In particular, the cache-oblivious {{model is}} an {{abstract}} machine (i.e. a theoretical model of computation). It {{is similar to}} the <b>RAM</b> <b>machine</b> model which replaces the Turing machine's infinite tape with an infinite array. Each location within the array can be accessed in [...] time, similar to the Random access memory on a real computer. Unlike the <b>RAM</b> <b>machine</b> model, it also introduces a cache: a second level of storage between the RAM and the CPU. The other differences between the two models are listed below. In the cache-oblivious model: ...|$|R
50|$|Memory: 32 kB ROM, 8, 16, 24, or 32kB static <b>RAM.</b> <b>Machines</b> {{with less}} than 32 kB can be {{expanded}} in 8 kB increments of plug-in static RAM modules. An additional 32 kB Option ROM can be installed.|$|R
40|$|Garbled RAM, {{introduced}} by Lu and Ostrovsky, enables {{the task of}} garbling a <b>RAM</b> (Random Access <b>Machine)</b> program directly, there by avoiding the inefficient process of first converting it into a circuit. Garbled RAM {{can be seen as}} a RAM analogue of Yao’s garbled circuit construction, except that known realizations of Garbled RAM make non-black-box use of the underlying cryptographic primitives. In this paper we remove this limitation and provide the first black-box construction of Garbled RAM with polylogarithmic overhead. Our scheme allows for garbling <b>multiple</b> <b>RAM</b> programs being executed on a persistent database and its security is based only on the existence of one-way functions. We also obtain the first secure RAM computation protocol that is both constant round and makes only black-box use of one-way functions in the OT-hybrid model...|$|R
30|$|The {{proposed}} 3 D {{face reconstruction}} required about 0.1 [*]s per test image using our proposed algorithm {{based on an}} alternation methodology and about 3.6 [*]s per test image using the algorithm based on a one-step methodology. The computation times were measured on an Intel Core i 5 CPU 750, 2.7 [*]GHz, 3 [*]GB <b>RAM</b> <b>machine.</b>|$|R
40|$|We {{develop a}} new multi-party {{generalization}} of Naor-Nissim indirect indexing, {{making it possible for}} many participants to simulate a <b>RAM</b> <b>machine</b> with only poly-logarithmic blow-up. Our most efficient instantiation (built from length-flexible additively homomorphic public key encryption) improves the communication complexity of secure multi-party computation for a number of problems in the literature. Underlying our approach is a new multi-party variant of oblivious transfer which may be of independent interest...|$|R
40|$|We suggest two new methodologies for {{the design}} of {{efficient}} secure protocols, that differ with respect to their underlying computational models. In one methodology we utilize the communication complexity tree (or branching for f and transform it into a secure protocol. In other words, "any function f that can be computed using communication complexity c can be can be computed securely using communication complexity that is polynomial in c and a security parameter". The second methodology uses the circuit computing f, enhanced with look-up tables as its underlying computational model. It is possible to simulate any <b>RAM</b> <b>machine</b> in this model with polylogarithmic blowup. Hence it is possible to start with a computation of f on a <b>RAM</b> <b>machine</b> and transform it into a secure protocol. We show many applications of these new methodologies resulting in protocols efficient either in communication or in computation. In particular, we exemplify a protocol for the "millionaires problem", where two participants want to compare their values but reveal no other information. Our protocol is more efficient than previously known ones in either communication or computation...|$|R
50|$|In 2006, {{the company}} {{developed}} High Energy Applied Technology (HEAT) for wire EDMs {{to increase speed}} in wire EDMing, and released the EDAC1 micro EDM <b>ram</b> <b>machine.</b> Makino is also the only manufacturer of a horizontal wire EDM, the UPJ-2. In 2007, Makino introduced SurfaceWIZARD wire EDM technology, designed to eliminate witness lines in stepped parts. Makino created ADVANTiGE™ Technology for the machining of titanium in 2010, which was recognized as a winner of Aviation Week's 2012 Innovation Challenge.|$|R
40|$|The {{theoretical}} view of cryptography usually models all parties, legitimate ones {{as well as}} attackers, as idealized computational devices with designated interfaces, {{and their}} security and computational complexity are evaluated in some convenient computational model – usually PC-like <b>RAM</b> <b>machines.</b> This dissertation investigates several cases where reality significantly deviates from this model, leading to previously unforeseen cryptanalytic attacks. The {{first part of the}} dissertation investigates the concrete cost of factoring integers, and in particular RSA keys of commonly used sizes such as 1024 bits. Until recently, this task was considered infeasible (i. e., its cost was estimated as trillions of dollars), based on extrapolations that assumed implementation of factoring algorithms on sequential PC-like computers. We have shown that the situation changes significantly when one introduces custom-built hardware architectures, with algorithms and parametrization that are optimized for concrete technological tradeoffs and do not fit the <b>RAM</b> <b>machine</b> model. Focusing on the Number Field Sieve (NFS) factoring algorithm, we propose hardware architectures for both of its computational steps: the sieving step and the linear algebra step. Detailed analysis and a careful choice of the NFS parameters show that for breaking 1024 -bit RSA keys, NFS can be be implemented at a fairly practical cost of a few millio...|$|R
5000|$|In 1911 work {{started on}} {{expanding}} the site {{at the corner}} of Heegermühler Strasse/Boldtstrasse. The company was known the world over for manufacturing foundry machinery. It was particularly famous for a pipe <b>ramming</b> <b>machine,</b> patented in 1907. This device enabled the manufacture of cast-iron pipes on an industrial scale for the first time. However, cranes were the main products made. In 1912 the factory was inaugurated at its present location. In 1913 all four sons were made equal partners and the company’s title was changed to Ardeltwerke GmbH.|$|R
40|$|Secure two-party {{computation}} protocol allows two players, Alice with secret input x and Bob with secret input y, to jointly execute {{an arbitrary}} program π(x, y) such {{that only the}} output of the program is revealed to one or both players. In the two player setting, under computational assumptions most approaches require to first “unroll ” π into a circuit, and then execute this circuit in a private manner. Without unrolling the circuit, an alternative method was proposed by Ostrovsky and Shoup (in STOC 1997) [28] with both players simulating the CPU of an oblivious <b>RAM</b> <b>machine</b> using “off-the-shelf ” secure two-party computation to perform CPU simulation with atomic instructions implemented by circuits and relying on one of the players to implement encrypted memory. The simulation of the CPU must be done through circuit-based secure two-party computation, thus CPU “memory ” in the Oblivious RAM simulation must be minimized, as otherwise it impacts simulation of each step of the computation. Luckily, there are <b>multiple</b> Oblivious <b>RAM</b> solutions that require O(1) CPU memory in the security parameter. The Ostrovsky-Shoup compiler suffers from two drawbacks: • The best running time of Oblivious RAM simulation with O(1) memory is still prohibitive and requires O(log 2 t / log log t) overhead for running programs of length t by Kushilevitz, Lu, and Ostrovsky (i...|$|R
40|$|Theorem 1 (Main Theorem). Every {{non-deterministic}} RAM computation in time t can be simulated by a non-deterministic oblivious two-tape TM in time t polylog(t). We {{prove this}} theorem in two steps. First, we show how to simulate non-deterministic <b>RAM</b> <b>machines</b> using non-deterministic multi-tape TMs with polylogarithmic overhead. Then, we show how to simulate multi-tape TMs using oblivious two-tape TMs. 1 RAM to Multi-tape Lemma 1. Every non-deterministic RAM computation in time t can be simulated by a non-deterministic multi-tape TM in time t polylog(t). Definition 1 (Nearly linear time). A function is in nearly linear time if {{and only if}} it is in time(n(log n) O(1)). Definition 2 (NQL). NQL is the class of languages accepted by non-deterministic multi-tape TMs in nearly linear time. Definition 3 (NNLT). NNLT is the class of languages accepted by non-deterministic random access machines in nearly linear time. We assume that random-access <b>machines</b> (<b>RAM</b> <b>machines,</b> random-access TMs, etc.) are equivalent for nearly linear time. The proofs are straightforward, but {{beyond the scope of this}} proof. Lemma 2. Multi-tape TMs can sort in nearly linear time. This lemma is due to Schnorr [4]. We will take it for granted. The idea is that since merging two lists can be done in linear time on a 3 -tape TM, sorting a list using merge sort can be done in nearly linear time...|$|R
5000|$|Dynamic <b>RAM</b> disk <b>machines</b> with 64 or 128 kB RAM {{followed}} soon after, with a WD2793 Floppy Disk Controller incorporated on {{the core}} board. Later disk machines used 3.5" [...] floppy disks.|$|R
40|$|We {{introduce}} a compressed suffix array representation that, on a text T of length n over an alphabet of size sigma, {{can be built}} in O(n) deterministic time, within O(nlogsigma) bits of working space, and counts the number of occurrences of any pattern P in T in time O(|P| + loglog_w sigma) on a <b>RAM</b> <b>machine</b> of w=Omega(log n) -bit words. This new index outperforms all the other compressed indexes that can be built in linear deterministic time, and some others. The only faster indexes can be built in linear time only in expectation, or require Theta(nlog n) bits...|$|R
5000|$|A pointer-based {{implementation}} for <b>RAM</b> <b>machines,</b> supporting decrease-key, can {{be achieved}} using three pointers per node, by representing the children of a node by a singly-linked list: a pointer to the node's first child, one to its next sibling, and one to its previous sibling (or, for the leftmost sibling, to its parent). Alternatively, the previous-pointer can be omitted by letting the last child point back to the parent, if a single boolean flag is added to indicate [...] "end of list". This achieves a more compact structure {{at the expense of}} a constant overhead factor per operation.|$|R
50|$|In June 2015, {{after the}} Blues {{suffered}} <b>multiple</b> injuries, <b>Ram</b> was called onto the bench for their final 2015 Super Rugby pool {{game against the}} Highlanders.|$|R
50|$|The Pep/7 is {{a direct}} {{descendant}} of the Pep/6 virtual machine, the only major difference {{is that it has}} been expanded from 4KiB to 32KiB of system <b>RAM.</b> The <b>machine</b> code format remains the same.|$|R
50|$|Hibernation is {{an example}} that uses {{an image of the}} entire <b>machine's</b> <b>RAM.</b>|$|R
5000|$|Enterprise servers, {{supporting}} nodes {{with four}} sockets, each carrying 8-, 10- or 12-core modules, for {{a maximum of}} 16 sockets, 128 cores and 16 TB of <b>RAM.</b> These <b>machines</b> can run AIX, IBM i, or Linux.|$|R
40|$|Inclusion between XML types is {{important}} but expensive, and {{is much more}} expensive when unordered types are considered. We prove here that inclusion for XML types with interleaving and counting can be decided in polynomial time in presence of two important restrictions: no element appears twice in the same content model, and Kleene star is only applied to disjunctions of single elements. Our approach {{is based on the}} transformation of each such content model into a set of constraints that completely characterizes the generated language. We then reduce inclusion checking to constraint implication. We exhibit a quadratic algorithm to perform inclusion checking on a <b>RAM</b> <b>machine.</b> Key words: PACS...|$|R
50|$|To achieve high availability, Call {{agents are}} {{installed}} on multiple servers (hardware, Servers {{are provided with}} a) Multiple Processorsb) Multiple hard disksc) <b>Multiple</b> <b>RAM</b> (random access memory)d) Multiple of Ethernet (LAN) ports, and these ports are Bundled at Server End (also called as Teaming)connected on Multiple LAN Switches to achieve Network Level Redundancy.e)Multiple power Supply InputsThere are different type and Models of Server available in Market by well known Manufacturers Like, IBM, HP, etc. Note: compatibility of the Hardware Make,Model and Capacity with the software should be checked prior installing the software.|$|R
50|$|The 'IdeaCentre K Series {{desktops}} from Lenovo {{are described}} by the manufacturer as being gaming-oriented desktops. Typical features on the desktops include mid-range to high-end processors, discrete graphics cards, multiple hard disk drives, <b>multiple</b> <b>RAM</b> DIMMS, <b>multiple</b> USB ports, and multiple optical disk drives. The K Series desktops also come with a physical switch on the CPU that allows users to shift between different levels of processing power. For example, the K330 offered red for high performance, blue for moderate performance, and green for less processing- and resource-intensive tasks.|$|R
50|$|The RASP is a {{universal}} Turing machine (UTM) built on a random-access <b>machine</b> <b>RAM</b> chassis.|$|R
50|$|Future File: The most {{speculative}} register {{state of}} the <b>machine.</b> <b>RAM</b> indexed by logical register number.|$|R
40|$|RAM is {{packaged}} as a chip. • Basic {{storage unit}} is a cell (one bit per cell). • <b>Multiple</b> <b>RAM</b> chips form a memory. Static RAM (SRAM) • Each cell stores bit with a six-transistor circuit. • Retains value indefinitely, {{as long as}} it is kept powered. • Relatively insensitive to disturbances such as electrical noise. • Faster and more expensive than DRAM. Dynamic RAM (DRAM) • Each cell stores bit with a capacitor and transistor. • Value must be refreshed every 10 - 100 ms. • Sensitive to disturbances. • Slower and cheaper than SRAM. class 12. pp...|$|R
50|$|An {{optional}} 512K RAM cartridge {{was considered}} to boost the total <b>RAM</b> for the <b>machine</b> to 768K.|$|R
5000|$|... {{allows the}} {{creation}} of a CPU (a virtual one), including the registers, <b>RAM,</b> microinstructions, and <b>machine</b> instructions; ...|$|R
5000|$|The Model D came preinstalled with 256, 512, or 640 KB of <b>RAM.</b> Lower-capacity <b>machines</b> were user {{upgradeable}} to 640 KB. [...] Motherboard revisions 7, 8, WC1 and WC2 {{came with}} 768 KB of RAM installed (640 KB {{available to the}} user).|$|R
40|$|Abstract. Full {{parallel}} architecture for DVB-S 2 LDPC was implemented {{on the platform}} of FPGA, in this process, the pipeline technology was introduced, and the method of FIFO and <b>multiple</b> <b>RAM</b> group used {{at the same time}} was also used, the problem of storing the parity check matrix was effectively overcomed, and the coding rate reaches 125 Mbps. In order {{to solve the problem of}} high consumption of resources, the design of decoder adopted serial architecture, the decoding delay was greatly reduced by clever design of interleaver structure, and the decoding throughput reaches 125 Mbps, moreover utilization of registers and logic elements is less than 1 %...|$|R
40|$|Purpose: Retinal {{arterial}} macroaneurysm (RAM) {{has been}} reported in association with branch retinal vein occlusion (BRVO), and usually BRVO precedes RAM. We present a long-term follow-up case report of unilateral <b>multiple</b> <b>RAMs</b> that developed BRVO following ruptured RAM in the same retinal quadrant. Case Presentation: An 80 -year-old woman presented with floaters in her right eye in June 2012. Visual acuity (VA) was 20 / 25 in her right eye with posterior capsular opacity. Her fundus showed the first ruptured RAM at the superotemporal vascular arcade with subinternal limiting membrane and subretinal hemorrhages not involving the macula. These were absorbed gradually with a VA of 20 / 20. After 2 years, the second RAM at the proximal superotemporal vascular arcade developed and impending BRVO occurred with macular edema at the distal site of the RAM. With the RAM located close to the arteriovenous crossing, her VA was dropped to 20 / 60. Intravitreal injection of ranibizumab was performed and macular edema was resolved with improved vision of 20 / 30. Three months later, she realized a sudden vision loss of 2 / 200. Her posterior pole showed massive pre- and subretinal hemorrhages, and vitrectomy was performed. The source of bleeding was the third RAM’s rupture in a different artery. Her vision improved to 20 / 30. The unaffected eye showed no RAMs. Conclusion: We experienced a long-term follow-up case of <b>multiple</b> <b>RAMs</b> showing different courses. We should cautiously note that BRVO can occur following RAM at the arteriovenous crossing...|$|R
50|$|Some models support <b>multiple</b> ROM or <b>RAM</b> banks, in {{a manner}} similar to other PIC microcontrollers.|$|R
30|$|In case of {{the sample}} {{generator}} {{this would be the}} case if even one sample would be too large for an individual <b>machine’s</b> <b>RAM.</b>|$|R
40|$|Correctness of {{algorithms}} in {{computational geometry}} are usually proved using the unrealistic Real <b>RAM</b> <b>machine</b> model of computation with the undesirable result that correct algorithms, when implemented, turn into unreliable programs. In this paper, {{we use a}} domain-theoretic approach to recursive analysis to develop {{the basis of an}} effective and realistic framework for solid modeling. This framework is equipped with a well-defined and realistic notion of computability which reflects the observable properties of real solids. It is closed under the Boolean operations, admits non-regular sets and supports a design methodology for actual robust algorithms. Within this model, some unavoidable limitations of solid modeling computations are proved and a sound framework to design specifications for feasible modeling operators is provided. Some consequences in computation with the boundary representation paradigm are sketched that can incorporate existing methods into a general, mathematically we [...] ...|$|R
40|$|There the {{mathematical}} dependences {{for the design}} of peak values of stresses on the different levels of compaction zone, the dependences {{for the design of}} reduced mass of soil, the numerical values of coefficients, which characterize the change of spreading speed of loading waves and of off-loading waves have been presented. The determination technique of rational characteristics of soil-compacting machines of impact action, the compaction method of soils by the ramming, which was protected by the Inventor's Certificate, have been developed. The determination technique of rational characteristics of working heads of <b>ramming</b> <b>machines,</b> the recommendations for the up-dating of DU- 12 rammer are introduced. The application fields are the enterprises for the designing, for the production and for the use of soil-compacting machinesAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|The final {{publication}} {{is available}} at Springer via [URL] this work, we design an explicit time-stepping solver for the simulation of the incompressible turbulent flow through the combination of VMS methods and artificial compressibility. We evaluate {{the effect of the}} artificial compressibility on the accuracy of the explicit formulation for under-resolved LES simulations. A set of benchmarks have been solved, e. g., the 3 D Taylor–Green vortex problem in turbulent regimes. The resulting method is proven to be an effective alternative to implicit methods in some application ranges (in terms of problem size and computational resources), providing comparable results with very low memory requirements. As an example, with the explicit approach, we are able to solve accurately the Taylor-Green vortex benchmark in a fine mesh with 5123 cells on a 12 cores 64 GB <b>ram</b> <b>machine.</b> Peer ReviewedPostprint (author's final draft...|$|R
40|$|Solid {{modelling}} and {{computational geometry}} {{are based on}} classical topology and geometry in which the basic predicates and operations, such as membership, subset inclusion, union and intersection, are not continuous and therefore not computable. But a sound computational framework for solids and geometry can only be built in a framework with computable predicates and operations. In practice, correctness of algorithms in computational geometry is usually proved using the unrealistic Real <b>RAM</b> <b>machine</b> model of computation, which allows comparison of real numbers, with the undesirable result that correct algorithms, when implemented, turn into unreliable programs. Here, we use a domaintheoretic approach to recursive analysis to develop {{the basis of an}} eective and realistic framework for solid modelling. This framework is equipped with a well-dened and realistic notion of computability which reects the observable properties of real solids. The basic predicates and operations o [...] ...|$|R
