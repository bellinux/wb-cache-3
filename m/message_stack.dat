2|25|Public
40|$|An {{approach}} to automate the real-time analysis of flight critical health monitoring and system status {{is being developed}} and evaluated at the NASA Dryden Flight Research Facility. A software package was developed in-house and installed {{as part of the}} extended aircraft interrogation and display system. This design features a knowledge-base structure in the form of rules to formulate interpretation and decision logic of real-time data. This technique has been applied for ground verification and validation testing and flight testing monitoring where quick, real-time, safety-of-flight decisions can be very critical. In many cases post processing and manual analysis of flight system data are not required. The processing is described of real-time data for analysis along with the output format which features a <b>message</b> <b>stack</b> display. The development, construction, and testing of the rule-driven knowledge base, along with an application using the X- 31 A flight test program, are presented...|$|E
40|$|To enable {{deterministic}} scheduling in a distributed {{embedded system}} an existing open source embedded TCP/IP stack has been modified to support strict priority queuing. The embedded target system has a fully switched closed Ethernet backplane used for internal communication. The {{problem is that}} high-volume configuration file downloads interfere with low-volume internal signaling, such as alarms, status reports, performance data and other statistics. The network was already designed using a type of switches which could support several Quality of Service schemes. An open source embedded TCP/IP stack, lightweight IP (lwIP) was evaluated, and {{found to be a}} suitable foundation for the developed application; the Priority Based <b>Message</b> <b>Stack</b> (PBMS). PBMS is a modification of lwIP with support for selective packet forwarding and reception based on the IPv 4 Type-of-Service (TOS) field. Support for the BOOTP protocol, as well as a nonblocking send operation, was also implemented. PBMS is easily portable {{in the sense that it}} only requires a clearly defined basic set of generic OS functions in order to be ported to new systems. A generic interface to Ethernet drivers must also be developed. The implementation was desktop tested on a Linux platform for correct functionality in the IP, UDP and BSD Socket modules. The performance of the priority scheme compared to a best-effort strategy was also measured. These tests showed that stack-internal strict prioritization based on the IPv 4 TOS precedence bits have a clear potential for offering deterministic transfer times in Nera 9 ̆ 2 s distributed embedded system. Without prioritization, with contention for the network link, an average output time of 480 microseconds was measured from the time the socket sendto function was called until the IP output function had been executed. Using strict prioritization under the same conditions this sequence of functions executed in only 15 microseconds in 99 percent of the test runs. The proper prioritization within the TCP/IP stack is only one of several queuing points in the target network. The existing switches, along with the proper TOS marking of each packet, will ensure an unbroken chain of priority queueing all the way to the destination. Some network endpoints might have variable latencies, which will affect the round-trip time (RTT). A measurement methodology to determine this has been described. A test methodology for round-trip and one-way delay time measurement will be used to validate PBMS in the target system. These tests can also be used to estimate the latencies in those network endpoints mentioned above. With this data at hand a worst-case RTT for the entire system can be calculated. The target system integration and validation will be carried out immediately after the completion of this thesis...|$|E
40|$|TinyOS 2. x {{supplies}} a well-designed {{single hop}} messaging layer for applications, {{but there is}} no standardized multihop framework. To address this issue, we surveyed a large number of applications [1] to determine the addressing tech-niques and <b>messaging</b> <b>stack</b> features used in sensor networks. From the result...|$|R
30|$|In principle, {{encoding}} is {{the process}} of generating secret shares by integrating binary value of the watermark and digital audio’s features, while decoding refers to process of revealing the original watermark <b>message</b> by <b>stacking</b> those secret shares.|$|R
40|$|Photograph {{used for}} {{a story in the}} Oklahoma Times newspaper. Caption: "With love to Mr. Love" is the get wll <b>message</b> this <b>stack</b> of groveries {{represents}} for Calvin Coolidge school's stricken custodian. Adding their packages are Paul cambell, 12, Beverly Jones, 6, and Mrs. Lois Snowbarger, first grade teacher. ...|$|R
40|$|Abstract: Business {{processes}} provide abstractions for modelling business protocols {{that define}} the correct interactions between two or more Web services (WS). It {{has been shown that}} it is possible to automatically derive role-specific processes from a global protocol definition and also statically verify the compliance of a local process with the corresponding global business process. In this paper, we show that a similar approach can be used at run-time. We propose to employ process-based tools to enforce that the messages exchanged between different WS comply with a given business protocol, both in terms of sequencing constraints and data flow characteristics. Our solution simplifies the implementation of WS because it helps to separate the concern of business protocol compliance from the actual service implementation. To do so, we show how to transparently add a protocol enforcement layer to the WS <b>messaging</b> <b>stack.</b> Our experimental results indicate that this imposes a minimal overhead...|$|R
30|$|As {{far as we}} know, in {{existing}} protocol <b>stacks,</b> <b>messages</b> are encapsulated either using (a) sequential inclusion, or (b) bounded stratified inclusion. In [32], we further show that for these cases, heterogeneous parsers can be composed as black box functions (i.e., without requiring in-depth modification of the already existing parsers).|$|R
40|$|The {{purpose of}} this paper is to explore methods that enrich the teacher-student relationship. In particular, the focus is on applied {{strategies}} to improve the relationship between teachers and their students to enhance and improve student learning. Dale Carnegie, the preeminent writer on interpersonal relations, provides the framework for the discussion. The paper moves quickly from the theoretical to practical time-tested tools that can be immediately applied by teachers. Strategies discussed include: welcome <b>messages,</b> conversation <b>stack,</b> one-to-ones, learning names, giving feedback, thank-you notes, office etiquette, and post-graduation networking. The paper provides specific methods for application of these strategies...|$|R
40|$|International audienceHigh-speed {{networking}} {{in clusters}} usually relies on advanced hardware {{features in the}} NICs, such as zero-copy capability. Open-MX is a high-performance <b>message</b> passing <b>stack</b> tailored for regular Ethernet hardware without such capabilities. We present {{the addition of a}} multiqueue support in the Open-MX receive stack so that all incoming packets for the same process are handled on the same core. We then introduce the idea of binding the target end process near its dedicated receive queue. This model leads to a more cache-efficient receive stack for Open-MX. It also proves that very simple and stateless hardware features may {{have a significant impact on}} message passing performance over Ethernet. The implementation of this model in a firmware reveals that it may not be as efficient as some manually tuned micro-benchmarks. But our multiqueue receive stack generally performs better than the original single queue stack, especially on large communication patterns where multiple processes are involved and manual binding is difficult...|$|R
40|$|International audienceIn {{the last}} decade, cluster {{computing}} {{has become the}} most popular high-performance computing architecture. Although numerous technological innovations have been proposed to improve the interconnection of nodes, many clusters still rely on commodity Ethernet hardware to implement message passing within parallel applications. We present Open-MX, an open-source <b>message</b> passing <b>stack</b> over generic Ethernet. It offers the same abilities as the specialized Myrinet Express stack, without requiring dedicated support from the networking hardware. Open-MX works transparently in the most popular MPI implementations through its MX interface compatibility. It also enables interoperability between hosts running the specialized MX stack and generic Ethernet hosts. We detail how Open-MX copes with the inherent limitations of the Ethernet hardware to satisfy the requirements of message passing by applying an innovative copy offload model. Combined with a careful tuning of the fabric and of the MX wire protocol, Open-MX achieves better performance than TCP implementations, especially on 10 gigabit/s hardware...|$|R
40|$|Abstract. High-speed {{networking}} {{in clusters}} usually relies on advanced hardware {{features in the}} NICs, such as zero-copy. Open-MX is a highperformance <b>message</b> passing <b>stack</b> designed for regular Ethernet hardware without such capabilities. We present the addition of multiqueue support in the Open-MX receive stack so that all incoming packets for the same process are treated on the same core. We then introduce the idea of binding the target end process near its dedicated receive queue. This model leads to a more cachee cient receive stack for Open-MX. It also proves that very simple and stateless hardware features may have a signi cant impact on message passing performance over Ethernet. The implementation of this model in a rmware reveals {{that it may not}} be as e cient as some manually tuned micro-benchmarks. But our multiqueue receive stack generally performs better than the original single queue stack, especially on large communication patterns where multiple processes are involved and manual binding is di cult. ...|$|R
40|$|In {{the last}} decade, cluster {{computing}} {{has become the}} most popular high-performance computing architecture. Although numerous technological innovations have been proposed to improve the interconnection of nodes, many clusters still rely on commodity Ethernet hardware to implement message passing within parallel applications. We present Open-MX, an open-source <b>message</b> passing <b>stack</b> over generic Ethernet. It offers the same abilities as the specialized Myrinet Express stack, without requiring dedicated support from the networking hardware. Open-MX works transparently in the most popular MPI implementations through its MX interface compatibility. It also enables interoperability between hosts running the specialized MX stack and generic Ethernet hosts. We detail how Open-MX copes with the inherent limitations of the Ethernet hardware to satisfy the requirements of message passing by applying an innovative copy offload model. Combined with a careful tuning of the fabric and of the MX wire protocol, Open-MX achieves better performance than TCP implementations, especially on 10 gigabit/s hardware...|$|R
40|$|In (k,n) -threshold visual {{secret sharing}} (VSS) schemes, the secret holder can base {{a group of}} n {{participants}} with n shares to reconstruct secret <b>message</b> by <b>stacking</b> shares. The secret messages are identified directly without any computation with only k(k ≤ n) or more shares using the human eye. Recently, many researchers have devoted themselves to studying how more secret images can be encrypted into the same quantity of shares. An extended random-grid VSS scheme that can embed four secret images without pixel expansion under the (2, 2) -visual secret-sharing scheme was proposed by Chen et al. The secrets can be recovered by directly stacking and rotating {{one of the two}} shares at 90 ◦, 180 ◦ and 270 ◦, respectively. However, the used shares are meaningless, causing the attacker to become doubtful by looking at meaningless shares and trying to steal secret messages. The meaningless shares lead to difficult encryption management. This paper proposes an improved black-and-white (2, 2) -visual secret sharing scheme that adapts square shares to embed three secret images via two camouflaged images. Compared with other related VSS schemes, this technique has more flexibility, efficiency and security...|$|R
40|$|As {{part of a}} {{focus on}} {{electronic}} publications, we undertook an exploratory study of how people saved and used the information they encountered while reading. In particular, we wanted to understand the role of clipping and {{whether it would be}} a necessary form of interaction with electronic publications. We interviewed 20 diverse individuals at home and at work, bringing together narrative accounts and physical and digital examples to investigate how people currently collect and use clippings from their everyday reading. All study participants had examples of materials they had deliberately saved from periodicals, ranging from ads torn from newspapers and URLs received in email <b>messages</b> to large <b>stacks</b> of magazines. Participants rarely read periodicals specifically to clip but rather recognized items of interest when they were encountered. The work highlights the importance of encountering information as an activity distinct from task-focused browsing and searching and reveals design implications for online reading and clipping technologies...|$|R
40|$|International audienceWe {{consider}} push-down automata {{with data}} (Pdad) that operate on variables ranging over {{the set of}} natural numbers. The conditions on variables are defined via gap-order constraint. Gap-order constraints allow to compare variables for equality, or to check that {{the gap between the}} values of two variables exceeds a given natural number. The <b>messages</b> inside the <b>stack</b> are equipped with values that are natural numbers reflecting their “values”. When a message is pushed to the stack, its value may be defined by a variable in the program. When a message is popped, its value may be copied to a variable. Thus, we obtain a system that is infinite in two dimensions, namely we have a stack that may contain an unbounded number of messages each of which is equipped with a natural number. We present an algorithm for solving the control state reachability problem for Pdad based on two steps. We first provide a translation to the corresponding problem for context-free grammars with data (Cfgd). Then, we use ideas from the framework of well quasi-orderings in order to obtain an algorithm for solving the reachability problem for Cfgds...|$|R
40|$|Includes bibliographical {{references}} (pages [92]- 95) In {{this thesis}} we implement a <b>message</b> protocol <b>stack</b> {{to be useful}} in modems. After designing the functionality of the protocol, the implementation was written. This is a platform independent code written in ?C? language. This code can be compiled by any DSP compiler to get that DSP specific object code. The protocol code need not reside on the DSP. The call progress and other functionalities can all run on the DSP along with the protocol stack. Alternatively, if the architecture consists of a microcontroller and a DSP, the DSP can run the call progress and data pump code and the protocol can reside on the microcontroller. The important portion of the code now runs as 5 state machines. There are 5 ?C? files which define the state machines. The remaining files are supporting files which define functions of different types to manipulate data while in specific states so as to bring about state changes and data manipulation. The state machines and individual functions are described later. The protocol {{can be used to}} send both voice as well as data. The protocol can be in Message protocol mode or Modem or Fax mode. The DCE which originates the switch to data mode can send a start tone and mode indicator to switch from voice to data mode. We can then transmit pictures or drawings. We also have the modem and fax functionalities. Before any exchanges, both the DCEs exchange capabilities with each other. The capability exchange can be 1 way or both ways. The data between the two modems is sent in HDLC format. This consists of a flag, address, control, information, checksum, and another flag. The control information is split up into control 1 and control 2 bytes. The information, supervisory and unnumbered type frames are used in data exchange. M. S. (Master of Science...|$|R
40|$|We {{introduce}} an automata-based formal model {{suitable for}} specifying, modeling, analyzing, and verifying asynchronous taskbased and message-passing programs. Our model consists of visibly pushdown automata communicating over unbounded reliable point-to-point first-in-first-out queues. Such a combination unifies two branches of research, one focused on task-based models, {{and the other}} on models of message-passing programs. Our model generalizes previously proposed models that have decidable reachability in several ways. Unlike task-based models of asynchronous programs, our model allows sending and receiving of <b>messages</b> even when <b>stacks</b> are not empty, without imposing restrictions on the number of context-switches or communication topology. Our model is strictly more general than the well-known communicating finite-state machines and allows: (1) individual components to be visibly pushdown automata, which are more suitable for modeling (possibly recursive) programs, (2) the set of words (i. e., languages) of messages on queues to form a visibly pushdown language, which permits modeling of remote procedure calls and simple forms of counting, and (3) the relations formed by tuples of such languages to be synchronized, which permits modeling of complex interactions among processes. In spite of these generalizations, we prove that the composite configuration and control-state reachability are still decidable for our model. 1...|$|R
40|$|IPv 6 {{as we know}} offers {{variety of}} {{enhancements}} including increased addressing capacity, Quality of service (QoS) provisioning, built in security through IPSec, and also improved routing and mobility efficiency over IPv 4. BD-SIIT is a bidirectional stateless internet protocol/Internet control messaging protocol is an IPv 6 transition mechanism that allows IPv 6 -only hosts to talk to IPv 4 -only hosts. The BD-SIIT involves a stateless mapping or Bidirectional translation algorithm between IPv 4 and IPv 6 packet headers {{as well as between}} Internet control messaging protocol version 4 (ICMPv 4) and ICMPv 6 <b>messages</b> whereas Dual <b>stack</b> transition mechanism(DSTM) is also designed perform IPv 4 to IPv 6 transition for IPv 6 dominant network [...] This paper clearly specifies comparative and behavior analysis carried out on the two major IPv 6 interoperation mechanisms: BD-SIIT and DSTM for the high level compatibility smooth transition, and interoperation between IPv 4 and IPv 6. We implement the BD-SIIT and DSTM in order to study their behavior using difference evaluation performance metrics such as Throughput, EED, and RTT. The NS- 2 simulator is used to implement the BD-SIIT and DSTM mechanisms. The simulation results show that DSTM performance metrics are performing better than BD-SIIT when especially larger lengths packets are used...|$|R
40|$|Part 7 : Session 6 : AutomataInternational audienceWe {{introduce}} an automata-based formal model {{suitable for}} specifying, modeling, analyzing, and verifying asynchronous task-based and message-passing programs. Our model consists of visibly pushdown automata communicating over unbounded reliable point-to-point first-in-first-out queues. Such a combination unifies two branches of research, one focused on task-based models, {{and the other}} on models of message-passing programs. Our model generalizes previously proposed models that have decidable reachability in several ways. Unlike task-based models of asynchronous programs, our model allows sending and receiving of <b>messages</b> even when <b>stacks</b> are not empty, without imposing restrictions on the number of context-switches or communication topology. Our model also generalizes the well-known communicating finite-state machines with recognizable channel property allowing (1) individual components to be visibly pushdown automata, which are more suitable for modeling (possibly recursive) programs, (2) the set of words (i. e., languages) of messages on queues to form a visibly pushdown language, which permits modeling of remote procedure calls and simple forms of counting, and (3) the relations formed by tuples of such languages to be synchronized, which permits modeling of complex interactions among processes. In spite of these generalizations, we prove that the composite configuration and control-state reachability are still decidable for our model...|$|R
40|$|Abstract. We {{introduce}} an automata-based formal model {{suitable for}} specifying, modeling, analyzing, and verifying asynchronous task-based and message-passing programs. Our model consists of visibly pushdown automata communicating over unbounded reliable point-to-point firstin-first-out queues. Such a combination unifies two branches of research, one focused on task-based models, {{and the other}} on models of messagepassing programs. Our model generalizes previously proposed models that have decidable reachability in several ways. Unlike task-based models of asynchronous programs, our model allows sending and receiving of <b>messages</b> even when <b>stacks</b> are not empty, without imposing restrictions on the number of context-switches or communication topology. Our model also generalizes the well-known communicating finite-state machines with recognizable channel property allowing (1) individual components to be visibly pushdown automata, which are more suitable for modeling (possibly recursive) programs, (2) the set of words (i. e., languages) of messages on queues to form a visibly pushdown language, which permits modeling of remote procedure calls and simple forms of counting, and (3) the relations formed by tuples of such languages to be synchronized, which permits modeling of complex interactions among processes. In spite of these generalizations, we prove that the composite configuration and control-state reachability are still decidable for our model. ...|$|R
40|$|This paper {{depicts the}} Advanced Communication Technology Satellite (ACTS) {{system as a}} global central office switch. The ground portion {{of the system is}} the {{collection}} of earth stations or T 1 -VSAT's (T 1 very small aperture terminals). The control software for the T 1 -VSAT's resides in a single CPU. The software consists of two modules, the modem manager and the call manager. The modem manager (MM) controls the RF modem portion of the T 1 -VSAT. It processes the orderwires from the satellite or from signaling generated by the call manager (CM). The CM controls the Recom Laboratories MSPs by receiving signaling <b>messages</b> from the <b>stacked</b> MSP shelves ro units and sending appropriate setup commands to them. There are two methods used to setup and process calls in the CM; first by dialing up a circuit using a standard telephone handset or, secondly by using an external processor connected to the CPU's second COM port, by sending and receiving signaling orderwires. It is the use of the external processor which permits the ISDN (Integrated Services Digital Network) Signaling Processor to implement ISDN calls. In August 1993, the initial testing of the ISDN Signaling Processor was carried out at ACTS System Test at Lockheed Marietta, Princeton, NJ using the spacecraft in its test configuration on the ground...|$|R
40|$|We {{extend the}} {{classical}} model of multi-pushdown systems by considering systems that {{operate on a}} finite set of variables ranging over natural numbers. The conditions on variables are defined via gap-order constraints that allow to compare variables for equality, or to check that {{the gap between the}} values of two variables exceeds a given natural number. Furthermore, each <b>message</b> inside a <b>stack</b> is equipped with a data item representing its value. When a message is pushed to the stack, its value may be defined by a variable. When a message is popped, its value may be copied to a variable. Thus, we obtain a system that is infinite in multiple dimensions, namely {{we have a number of}} stacks that may contain an unbounded number of messages each of which is equipped with a natural number. It is well-known that the verification of any non-trivial property of multi-pushdown systems is undecidable, even for two stacks and for a finite data-domain. In this paper, we show the decidability of the reachability problem for the classes of data multi-pushdown system that admit a bounded split-width (or equivalently a bounded tree-width). As an immediate consequence, we obtain decidability for several subclasses of data multi-pushdown systems. These include systems with single stacks, restricted ordering policies on stack operations, bounded scope, bounded phase, and bounded context switches...|$|R
500|$|The episode {{received}} {{mixed reviews}} from critics. Tim Stack of Entertainment Weekly named {{it as one}} of his favorite episodes of the series, calling it [...] "not only funny and moving, but incredibly important", both for its religious element and <b>message</b> of tolerance. <b>Stack</b> praised the performances by Colfer and O'Malley, as did USA Today Robert Bianco, who deemed the episode a [...] "smart, moving, musical exploration of the power and limits of faith and religion in a democratic society". Bianco commented positively on the way Colfer's singing was used to [...] "dig beneath the archness and anger in Kurt's behavior", calling it [...] "a textbook example of what music can add to drama." [...] Mark Perigard of the Boston Herald went further in his praise, deeming [...] "Grilled Cheesus" [...] "the perfect blend of music, characterization and plot - and easily the most provocative scripted hour in prime-time of the new season." [...] Perigard appreciated the fact there were no easy answers presented, with no characters undergoing religious conversions {{during the course of the}} episode. Raymund Flandez of The Wall Street Journal felt that [...] "Grilled Cheesus" [...] succeeded in balancing opposing viewpoints, resulting in [...] "a nuanced, atypical episode of Glee that was both conflictingly emotional and confidently serious about the topic of religion", and Semigran similarly commended the episode's balance, writing that Falchuk [...] "covered both sides of controversial debate with grace, humor, and most importantly, respect." [...] In an article discussing Glee increasingly inconsistent tone, characterizations, and weird moments in the second season, film and television critic Matt Zoller Seitz cited [...] "Grilled Cheesus" [...] as an exception: [...] "an episode built around an earnest, Afterschool Special-style contemplation of faith that improbably turned out to be one of the series' boldest, silliest, maybe finest hours".|$|R
40|$|In this thesis, a novel {{protocol}} stack architecture is presented. The Future Core Networks System (FCNS) forms a secure reference model {{for use in}} packet-switched structures, with its applicability ranging from computer to telecommunication networks. An insight on currently used network protocol systems is given, analysing standardised sets of communication rules {{with respect to the}} security they afford to the messages exchanged. The lack of protection schemes for the internal protocol <b>stack</b> <b>messages</b> and the implementation pitfalls of their security architectures are described, in relation to the effects they have on the communication process. The OSI security model is also considered, with disadvantages identified in the placement of security functionality and its management. The drawbacks depicted for currently used systems form the motivation behind this work. The analysis of the FCNS follows, which is composed of three parts. In the first part, the FCNS communication layers are examined, with respect to the mechanisms used to establish, maintain and tear down a connection between peer entities. In the second part, the security mechanisms of the proposed reference architecture are given, including details on the FCNS keystream generator used for the security of the internal FCNS messages. Finally, the FCNS Error Protocol is depicted, illustrating the modes of operation and advantages it exhibits over currently used systems. The work then moves into presenting details of the software FCNS implementation, followed by the presentation of the results and measurements obtained by the case studies created. Comparisons are given in relation to the TCP/IP suite, to provide the means of identifying the FCNS applicability in various network environments. The work is concluded by presenting the FCNS functionality in delivering information for the UMTS, together with further work that may enhance the flexibility and use of the proposed architecture. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|Key <b>message</b> In a <b>stacking</b> {{study of}} eight {{resistance}} QTLs in lettuce against downy mildew, only {{three out of}} ten double combinations showed an increased resistance effect under field conditions. Abstract Complete race nonspecific resistance to lettuce downy mildew, as observed for the nonhost wild lettuce species Lactuca saligna, is desired in lettuce cultivation. Genetic dissection of L. saligna’s complete resistance has revealed several quantitative loci (QTL) for resistance with field infection reductions of 30 – 50 %. To test the effect of stacking these QTL, we analyzed interactions between homozygous L. saligna CGN 05271 chromosome segments introgressed into the genetic background of L. sativa cv. Olof. Eight different backcross inbred lines (BILs) with single introgressions of 30 – 70 cM and selected predominately for quantitative resistance in field situations were intercrossed. Ten developed homozygous lines with stacked introgression segments (double combinations) were evaluated for resistance in the field. Seven double combinations showed a similar infection as the individual most resistant parental BIL, revealing epistatic interactions with ‘less-than-additive’ effects. Three double combinations showed an increased resistance level compared to their parental BILs and their interactions were additive, ‘less-than-additive’ epistatic and ‘more-than-additive’ epistatic, respectively. The additive interaction reduced field infection by 73 %. The double combination with a ‘morethan-additive’ epistatic effect, derived from a combination between a susceptible and a resistant BIL with 0 and 30 % infection reduction, respectively, showed an average field infection reduction of 52 %. For the latter line, an attempt to genetically dissect its underlying epistatic loci by substitution mapping {{did not result in}} smaller mapping intervals as none of the 22 substitution lines reached a similar high resistance level. Implications for breeding and the inheritance of L. saligna’s complete resistance are discussed...|$|R
5000|$|The episode {{received}} {{mixed reviews}} from critics. Tim Stack of Entertainment Weekly named {{it as one}} of his favorite episodes of the series, calling it [...] "not only funny and moving, but incredibly important", both for its religious element and <b>message</b> of tolerance. <b>Stack</b> praised the performances by Colfer and O'Malley, as did USA Today Robert Bianco, who deemed the episode a [...] "smart, moving, musical exploration of the power and limits of faith and religion in a democratic society". Bianco commented positively on the way Colfer's singing was used to [...] "dig beneath the archness and anger in Kurt's behavior", calling it [...] "a textbook example of what music can add to drama." [...] Mark Perigard of the Boston Herald went further in his praise, deeming [...] "Grilled Cheesus" [...] "the perfect blend of music, characterization and plot - and easily the most provocative scripted hour in prime-time of the new season." [...] Perigard appreciated the fact there were no easy answers presented, with no characters undergoing religious conversions {{during the course of the}} episode. Raymund Flandez of The Wall Street Journal felt that [...] "Grilled Cheesus" [...] succeeded in balancing opposing viewpoints, resulting in [...] "a nuanced, atypical episode of Glee that was both conflictingly emotional and confidently serious about the topic of religion", and Semigran similarly commended the episode's balance, writing that Falchuk [...] "covered both sides of controversial debate with grace, humor, and most importantly, respect." [...] In an article discussing Glee increasingly inconsistent tone, characterizations, and weird moments in the second season, film and television critic Matt Zoller Seitz cited [...] "Grilled Cheesus" [...] as an exception: [...] "an episode built around an earnest, Afterschool Special-style contemplation of faith that improbably turned out to be one of the series' boldest, silliest, maybe finest hours".|$|R

