7|3510|Public
50|$|The RCA 1802 has {{a static}} core CMOS design with no <b>minimum</b> <b>clock</b> <b>frequency,</b> {{so that it}} can be run at very low speeds and low power, {{including}} a clock frequency of zero to suspend the microprocessor without affecting its operation. It has two separate 8-pin buses: an 8-bit bidirectional data bus and a time-multiplexed address bus, with the high-order and low-order 8-bits of the 16-bit address being accessed on alternate clock cycles.|$|E
50|$|SMBus has a {{time-out}} feature which resets devices if {{a communication}} takes too long.This explains the <b>minimum</b> <b>clock</b> <b>frequency</b> of 10 kHz to prevent locking up the bus. I²C {{can be a}} ‘DC’ bus, meaning that a slave device stretches the master clock when performing some routine while the master is accessing it. This will notify to the master that the slave is busy but {{does not want to}} lose the communication. The slave device will allow continuation after its task is complete. There is no limit in the I²C-bus protocol as to how long this delay can be, whereas for an SMBus system, it would be limited to 35 ms.SMBus protocol just assumes that if something takes too long, then it means {{that there is a problem}} on the bus and that all devices must reset in order to clear this mode. Slave devices are not then allowed to hold the clock LOW too long.|$|E
40|$|Abstract: As {{technology}} increases, {{there is}} a need of fast computing systems to enhance multimedia applications. In this paper, architecture is designed for fixed block size and Variable Block Size (VBS) Motion Estimation Algorithm (MEA). The proposed architectures perform Motion Estimation (ME) by applying Diamond search (DS) algorithm on 1 -Bit Transform (1 -BT) image frames. The DS based 1 -BT ME architecture reduces the <b>minimum</b> <b>clock</b> <b>frequency</b> required and overall power consumption compared with other ME architectures. So, the proposed architectures can be suitable for low power portable video application. The behavior of proposed architecture described in Verilog HDL and functional verification is done using Modelism simulation tool...|$|E
40|$|This paper {{describes}} an experimental {{investigation of the}} application of dynamical systems theory to the verification of digital VLSI circuits. We analyze {{the behavior of a}} nine-transistor toggle element using a simple, SPICE-like model. We show how such properties as <b>minimum</b> and maximum <b>clock</b> <b>frequency</b> can be identified from topological features of solutions to the corresponding system of differential equations. This dynamical systems perspective also gives a clear, continuous-model interpretations of such phenomena as dynamic storage and timing hazards...|$|R
40|$|The {{mainstay}} of the paper {{is to use a}} PLL using self healing pre-scalar. When a CMOS technology approaches to a nanometer scale, the non-idealities like variability and leakage current may affect the circuit performances. The process variability leads to the large variations to degrade the device matching and performances. The leakage current is highly dependent upon the process variations. In the existing method the key parameter is to be change the modulus value of the pre- scalar. By changing the value of the pre-scalar the PLL frequency range will be extended. In the proposed design we are planning to implement the digital PLL technique with self correcting DCO. The structure utilizes the DDR synthesizer as a base for generating the DCO frequency, so many methods are there to correct the DCO errors, here we detect the error or delay and correct it by using smooth jumping method. The DPLL varies from <b>minimum</b> system <b>clock</b> <b>frequency</b> 60 to 1489 MHZ (Minimum) maximum of GHZ frequency of any range we can generate, since our design act as a general platform for any kind of application...|$|R
40|$|This paper {{describes}} an experimental {{investigation of the}} application of dynamical systems theory to the verification of digital VLSI circuits. We analyze {{the behavior of a}} nine-transistor toggle element using a simple, SPICE-like model. We show how such properties as <b>minimum</b> and maximum <b>clock</b> <b>frequency</b> can be identified from topological features of solutions to the corresponding system of differential equations. This dynamical systems perspective also gives a clear, continuous-model interpretations of such phenomena as dynamic storage and timing hazards. Keywords: Dynamical systems, hardware verification, hybrid models, real time systems 1 Introduction Most verification of VLSI designs, synchronous and asynchronous, assumes discrete models for signal values and transition times. These discrete models lend themselves well to event-driven simulation [3], model checking [4], and theorem proving [17]. However, many important circuit phenomena cannot be modeled with discrete time and va [...] ...|$|R
30|$|In this article, {{a unique}} {{design of a}} non-preemptive modular {{customizable}} event-driven architecture is proposed for a standalone FPGA based sensor node. Therefore, the standard benchmark tests are not available to test our implementation. Thus, we tried to find standard application that can run on the proposed sensor node. As {{one of the prime}} objectives of WSN is to transmit and receive data packets, a standard ZigBee transceiver application is implemented to test the data packet processing and routing functionality of the proposed FPGA based sensor node. In general, every sensor node in a WSN has to have routing capability. Thus, implementing routing within the FPGA based sensor node is important. However, event handlers can be designed to provide any kind of sensor data processing and packet handling tasks in addition to routing functionality. Thus, the functional testing of routing capability of a sensor node is carried out. However, a full-fledged event-driven architecture for the FPGA based sensor node is designed and implemented using VHDL in this research rather than just FPGA based router. As transceiver application is implemented on a sensor node, measuring packet error rate (PER) and transmission range is the common practice to validate a transceiver. Thus, PER and transmission range are measured experimentally as part of functional verification of the HDL implementation. For performance analysis, the execution cycle count and the <b>minimum</b> <b>clock</b> <b>frequency</b> requirement to achieve the maximum possible throughput are recorded. Execution cycle count and <b>minimum</b> <b>clock</b> <b>frequency</b> requirement are measured using ModelSim simulator.|$|E
40|$|Trabajo presentado al Fifth ICDSC celebrado en Ghent del 22 al 25 de agosto de 2011. This paper {{presents}} Wi-FLIP, a vision-enabled WSN node {{resulting from}} the integration of FLIP-Q, a prototype vision chip, and Imotel, a commercial WSN platform. In Wi-FLIP, image processing is not only constrained to the digital domain like in conventional architectures. Instead, its image sensor - the FLIP-Q prototype - incorporates pixel-level processing elements (PEs) implemented by analog circuitry. These PEs are interconnected, rendering a massively parallel SIMD-based focal-plane array. Low-level image processing tasks fit very well into this processing scheme. They feature a heavy computational load composed of pixel-wise repetitive operations which can be realized in parallel with moderate accuracy. In such circumstances, analog circuitry, not very precise but faster and more area- and power-efficient than its digital counterpart, has been extensively reported to achieve better performance. The Wi-FLIP's image sensor does not therefore output raw but pre-processed images that make the subsequent digital processing much lighter. The energy cost of such pre-processing is really low - 5. 6 mW for the worst-case scenario. As a result, for the configuration where the Imote 2 's processor works at <b>minimum</b> <b>clock</b> <b>frequency,</b> the maximum power consumed by our prototype represents only the 5. 2...|$|E
40|$|Abstract—This paper {{presents}} a new dynamic {{voltage and frequency}} scaling (DVFS) FFT processor for MIMO OFDM ap-plications. By the proposed multimode multipath-delay-feedback (MMDF) architecture, our FFT processor can process 1 – 8 -stream 256 -point FFTs or a high-speed 256 -point FFT in two processing domains at <b>minimum</b> <b>clock</b> <b>frequency</b> for DVFS operations. A parallelized radix- 2 FFT algorithm is also employed to save the power consumption and hardware cost of complex multipliers. Furthermore, a novel open-loop voltage detection and scaling (OLVDS) mechanism is proposed for fast and robust voltage management. With these schemes, the proposed FFT processor can operate at adequate voltage/frequency under different con-figurations to support the power-aware feature. A test chip of the proposed FFT processor has been fabricated using UMC 90 nm single-poly nine-metal CMOS process with a core area of 1. 88 1. 88 mm. The SQNR performance of this FFT chip is over 35. 8 dB for QPSK/ 16 -QAM modulation. Power dissipation of 2. 4 Gsample/s 256 -point FFT computations is about 119. 7 mW at 0. 85 V. Depending on the operation mode, power can be saved by 18 %– 43 % with voltage scaling in TT corner. Index Terms—Dynamic voltage and frequency scaling (DVFS), fast Fourier transform (FFT), multiple-input multiple-output (MIMO), orthogonal frequency division multiplexing (OFDM). I...|$|E
40|$|International audienceBoth {{theoretical}} and experimental evidence {{are presented in}} this work in order to validate {{the existence of an}} Energy/Frequency Convexity Rule, which relates energy consumption and microprocessor frequency for nanometer-scale microprocessors. Data gathered during several month-long experimental acquisition campaigns, supported by several independent publications, suggest that energy consumed is indeed depending on the microprocessor's <b>clock</b> <b>frequency,</b> and, more interestingly, the curve exhibits a clear minimum over the processor's frequency range. An analytical model for this behavior is presented and motivated, which fits well with the experimental data. A parameter sensitivity analysis shows how parameters affect the energy <b>minimum</b> in the <b>clock</b> <b>frequency</b> space. The conditions are discussed under which this convexity rule can be exploited, and when other methods are more effective, with the aim of improving the computer system's energy management efficiency. We show that the power requirements of the computer system, besides the microprocessor, and the overhead affect the location of the energy minimum the most. The sensitivity analysis of the Energy/Frequency Convexity Rule puts forward a number of simple guidelines especially for by low-power systems, such as battery-powered and embedded systems, and less likely by high-performance computer systems...|$|R
40|$|Both {{theoretical}} and experimental evidence {{are presented in}} this work in order to validate {{the existence of an}} Energy/Frequency Convexity Rule, which relates energy consumption and microprocessor frequency for nanometer-scale microprocessors. Data gathered during several month-long experimental acquisition campaigns, supported by several independent publications, suggest that energy consumed is indeed depending on the microprocessor's <b>clock</b> <b>frequency,</b> and, more interestingly, the curve exhibits a clear minimum over the processor's frequency range. An analytical model for this behavior is presented and motivated, which fits well with the experimental data. A parameter sensitivity analysis shows how parameters affect the energy <b>minimum</b> in the <b>clock</b> <b>frequency</b> space. The conditions are discussed under which this convexity rule can be exploited, and when other methods are more effective, with the aim of improving the computer system's energy management efficiency. We show that the power requirements of the computer system, besides the microprocessor, and the overhead affect the location of the energy minimum the most. The sensitivity analysis of the Energy/Frequency Convexity Rule puts forward a number of simple guidelines especially for by low-power systems, such as battery-powered and embedded systems, and less likely by high-performance computer systems. Comment: In submission to the Special Issue on Energy Efficient Multi-Core and Many-Core Systems (The Elsevier Journal of Parallel and Distributed Computing...|$|R
40|$|The {{fabrication}} {{and performance}} of an Al(0. 3) Ga(0. 7) As/GaAs modulation-doped resistive-gate CCD are reported. The two-dimensional electron gas (2 DEG) CCD, implemented as a 32 -stage four-phase delay line, was tested at both low (1 - 13 MHz) and high (0. 6 - 1. 0 GHz) frequency. It exhibits a room-temperature charge-transfer efficiency (CTE) of better than 0. 999 at <b>clock</b> <b>frequencies</b> from 10 MHz up to 1 GHz without a fat-zero signal and is limited by dark current below 10 MHz. The high-frequency test showed no CTE degradation up to 1 -GHz operation. The CTE degraded at frequencies lower than approximately 5 MHz due to dark current. The charge-handling capability and <b>minimum</b> <b>clock</b> swing of the resistive-gate 2 DEG CCD are calculated...|$|R
40|$|International audienceSelf-mixing {{interferometry}} (SMI) {{has been}} widely used for sensing of diverse vibration, velocity, displacement, biomedical and flow applications. The simplicity of the SMI configuration enables {{the design of a}} low-cost, self-aligned and compact sensor with a small optical component count. SMI occurs when a small portion of emitted coherent optical beam is backscattered by the remote target and re-enters the laser cavity, causing interference. Under SMI, the employed laser diode simultaneously acts as a laser source, coherent detector, as well as micro-interferometer. This simple sensor design configuration, however, comes at a price of complex signal processing algorithms, because the SMI signals have rich characteristics as a function of optical feedback level. The purpose of this research work is to implement two of these algorithms, time-frequency signal processing (TFSP) and Consecutive samples based Unwrapping (CSU) in hardware so that real-time displacement and vibration measurements with nanometric precision can be retrieved from the SM sensor in an embedded, autonomous manner. We implemented and tested both algorithms on a Xilinx ZYBO Zynq 7000 development board using VHDL. Results show that our design of CSU algorithm is capable of operating at 432 MHZ <b>minimum</b> <b>clock</b> <b>frequency</b> and latency of 3 clock cycles. Our CSU design consumes 159 slice registers and 215 LUT's, and draws 0. 70 watts of onboard power. While the design of TFSP algorithm is capable of operating at 363. 3 MHZ clock frequency and latency of 570 k clock cycles. TFSP design consumes 5056 slice registers and 5192 LUT's, and draws 0. 8 watts of onboard power...|$|E
50|$|The {{external}} interface is a 128-bit {{system bus}}. The system bus operates at a <b>clock</b> <b>frequency</b> that is 3 to 15 times {{lower than the}} internal <b>clock</b> <b>frequency,</b> or 20 to 100 MHz with an internal <b>clock</b> <b>frequency</b> 300 MHz. The system bus' clock signal is generated by the microprocessor.|$|R
2500|$|Computer <b>clock</b> <b>frequencies</b> {{are always}} quoted using SI prefixes in their decimal sense. For example, the {{internal}} <b>clock</b> <b>frequency</b> {{of the original}} IBM PC was 4.77MHz, that is [...]|$|R
50|$|For all Opterons, {{the last}} two digits in the model number (the YY) {{indicate}} the <b>clock</b> <b>frequency</b> of a CPU, a higher number indicating a higher <b>clock</b> <b>frequency.</b> This speed indication is comparable to processors of the same generation {{if they have the}} same amount of cores, single-cores and dual-cores have different indications despite sometimes having the same <b>clock</b> <b>frequency.</b>|$|R
30|$|Now {{from the}} designers’ point of view, {{synchronization}} of clock throughout {{the design is}} a big challenge to the designer as the flash memory card requires 100 - to 400 -KHz <b>clock</b> <b>frequency</b> for the application specific command execution during initialization [3] and maximum 25 -MHz <b>clock</b> <b>frequency</b> for data transfer [1]; which ultimately points to the decrement of <b>clock</b> <b>frequency</b> and it implies sacrifice in performance in a single clock input system. If the <b>clock</b> <b>frequency</b> does not match in initialization process, then the card uses to poll the command in a 50 -ms time gap to complete the initialization process.|$|R
40|$|Abstract- In this contribution, we {{investigate}} {{the effect of}} <b>clock</b> <b>frequency</b> offsets {{on the performance of}} multicarrier direct-sequence CDMA (MC-DS-CDMA) in the downlink, assuming orthogonal spreading sequences. Theoretical expressions are derived for the performance degradation caused by the <b>clock</b> <b>frequency</b> offset, {{in the presence of a}} multipath channel. We show that the performance degradation caused by a <b>clock</b> <b>frequency</b> offset rapidly increases for an increasing number of carriers. I...|$|R
50|$|The {{execution}} {{units were}} simplified {{relative to the}} SuperSPARC to achieve higher <b>clock</b> <b>frequencies</b> - {{an example of a}} simplification is that the ALUs were not cascaded, unlike the SuperSPARC, to avoid restricting <b>clock</b> <b>frequency.</b>|$|R
50|$|<b>Clock</b> <b>frequency</b> was not {{increased}} at launch and remained between at 1.5 to 1.9 GHz. On 14 February 2006, new versions raised the <b>clock</b> <b>frequency</b> to 2.2 GHz {{and then to}} 2.3 GHz on 25 July 2006.|$|R
5000|$|Computer <b>clock</b> <b>frequencies</b> {{are always}} quoted using SI prefixes in their decimal sense. For example, the {{internal}} <b>clock</b> <b>frequency</b> {{of the original}} IBM PC was 4.77 MHz, that is [...]Similarly, digital information transfer rates are quoted using decimal prefixes: ...|$|R
30|$|Reducing the <b>clock</b> <b>frequency.</b>|$|R
30|$|We {{selected}} the <b>clock</b> <b>frequency</b> (that is, the throughput of the TRNG) as 2.5 MHz which was fast enough for embedded systems to generate session keys and session random numbers. We implemented the TRNG on an FPGA and confirmed the {{evaluations of the}} <b>clock</b> <b>frequency</b> described in [2]. From this evaluation, we {{selected the}} <b>clock</b> <b>frequency</b> of the ASIC implementation with enough margins. The fastest throughput of our TRNG is the future work to be considered.|$|R
40|$|Abstract- We {{study the}} effect of fixed <b>clock</b> <b>frequency</b> offsets on the {{performance}} of multicarrier direct-sequence CDMA (MC-DS-CDMA) for both uplink and downlink communication, assuming orthogonal spreading sequences. We show that for both uplink and downlink MC-DS-CDMA, the performance {{in the presence of a}} <b>clock</b> <b>frequency</b> offset rapidly degrades with an increasing number of carriers. It turns out that this degradation is larger in the uplink than in the downlink, because the former suffers from a higher level of multiuser interference. For a given maximum <b>clock</b> <b>frequency</b> offset, enlarging the spreading factor in a fully loaded system does not affect the downlink degradation, but strongly increases the uplink degradation. KEY WORDS: synchronization, MC-DS-CDMA, <b>clock</b> <b>frequency</b> offse...|$|R
40|$|The {{receiver}} (100) has a {{local oscillator}} (102) {{that provides a}} receiver oscillator signal (114) with receiver oscillator frequency. Two devices (104, 108) provide a receiver carrier signal (106) with receiver carrier frequency and a receiver timing signal (110) with receiver <b>clock</b> <b>frequency</b> based on receiver oscillator frequency. A device (112) determines the offset between transmitter carrier frequency of received transmitting signal (116) and receiver carrier frequency. The device (108) provides the receiver timing signal to adjust receiver <b>clock</b> <b>frequency</b> {{as a function of}} offset. Independent claims are included for the following: (1) system with receiver; (2) method for synchronizing <b>clock</b> <b>frequencies</b> of receiver and transmitter; and (3) computer program for synchronizing <b>clock</b> <b>frequencies</b> of receiver and transmitter...|$|R
30|$|Performance-set {{the highest}} {{available}} <b>clock</b> <b>frequency.</b>|$|R
30|$|Sampling <b>clock</b> <b>frequency</b> offset (SCFO) [8].|$|R
40|$|Abstract—We {{consider}} the most general case of source <b>clock</b> <b>frequency</b> recovery (SCFR) in packet networks, i. e., asyn-chronous SCFR through aperiodic packet streams, {{where there is}} neither a common reference clock nor any relation between packet generation intervals and a source <b>clock</b> <b>frequency.</b> We formulate the problem of asynchronous SCFR with timestamps as a linear case of regression through the origin (RTO) and propose two schemes, one based on recursive least squares (RLS) method and the other based on simple heuristics of cumulative ratio of interarrival and interdeparture times, which provide better estimates of the source <b>clock</b> <b>frequency</b> with faster convergence than conventional phase-locked loop (PLL) -based schemes. Index Terms—Source <b>clock</b> <b>frequency</b> recovery, linear regres-sion, least squares, cumulative ratio, packet jitter. I...|$|R
40|$|A {{methodology}} {{is presented}} in this paper for determining an optimal set of clock path delays for designing high performance VLSI/ULSI-based clock distribution networks. This methodology emphasizes the use of non-zero clock skew to reduce the system-wide <b>minimum</b> <b>clock</b> period. Although choosing (or scheduling) clock skew values has been previously recognized as an optimization technique for reducing the <b>minimum</b> <b>clock</b> period, difficulty in controlling the delays of the clock paths due to process parameter variations has limited its effectiveness. In this paper the <b>minimum</b> <b>clock</b> period is reduced using intentional clock skew by calculating a permissible clock skew range for each local data path while incorporating process dependent delay values of the clock signal paths...|$|R
50|$|The ITT 2020 used {{a higher}} <b>clock</b> <b>frequency,</b> {{necessary}} for the PAL signal. A 17.73 MHz crystal was used (Four times the PAL subcarrier frequency of 4.433 MHz), whereas the Apple II used a 14.318 crystal- four times the NTSC subcarrier frequency of 3.58 MHz. In the ITT 2020, the crystal frequency was divided by 17 to give the microprocessor a <b>clock</b> <b>frequency</b> of 1.042 MHz. In the Apple II, the frequency was divided by 14 to give a microprocessor <b>clock</b> <b>frequency</b> of 1.023 MHz.|$|R
30|$|Power save- set {{the lowest}} <b>clock</b> <b>frequency.</b>|$|R
5000|$|Digital logic {{designers}} use Gray codes extensively {{for passing}} multi-bit count information between synchronous logic that operates at different <b>clock</b> <b>frequencies.</b> The logic is considered operating in different [...] "clock domains". It {{is fundamental to}} the design of large chips that operate with many different <b>clocking</b> <b>frequencies.</b>|$|R
40|$|This essay aims {{to debate}} the <b>minimum</b> <b>clock</b> hours of {{instruction}} necessary for obtaining a bachelor's degree in nutrition considering the challenges to educate health professionals. Official documents on the <b>minimum</b> <b>clock</b> hours of instruction required by undergraduate nutrition programs were analyzed to investigate compliance with the curriculum guidelines for the area, the law that regulates the profession of dietitian, and the necessary education for the Sistema Único de Saúde (Unified Health Care System). Compared with other health programs, nutrition presented the smallest increase in the <b>minimum</b> <b>clock</b> hours of instruction required for the degree. The changes {{that occurred in the}} epidemiological, demographic, and nutritional profile of the population and scientific advances require specific nutrition actions. Since Sistema Único de Saúde focuses on comprehensiveness in the three levels of care, on humanization, and on health care, the theoretical and methodological concepts given in undergraduate programs need to be improved for the dietitians education to meet the Sistema Único de Saúde needs. Incorporation of the knowledge needed for working with food and nutritional phenomena, including its social and cultural dimensions, management of public policies, quantity cooking, and food and nutritional surveillance requires a higher <b>minimum</b> <b>clock</b> hours of instruction. In conclusion, dietitians need a <b>minimum</b> <b>clock</b> hours of instruction of 4, 000 to acquire a proper education, integrate into the university life, and coordinate interdisciplinary experiences of the triad teaching/research/extension...|$|R
50|$|H.263v2 {{also added}} support for {{flexible}} customized picture formats and custom picture <b>clock</b> <b>frequencies.</b> As noted above, the only picture formats previously supported in H.263 had been Sub-QCIF, QCIF, CIF, 4CIF, and 16CIF, {{and the only}} picture <b>clock</b> <b>frequency</b> had been 30000/1001 (approximately 29.97) clock ticks per second.|$|R
40|$|We develop {{architectural}} {{techniques for}} mitigating {{the impact of}} process variability. Our techniques hide the performance effects of slow components—including registers, functional units, and L 1 I and L 1 D cache frames—without slowing the <b>clock</b> <b>frequency</b> or pessimistically assuming that all components are slow. Using ideas previously developed for other purposes—criticality-based allocation of resources, prefetching, and prefetch buffering—we allow design engineers to aggressively set the <b>clock</b> <b>frequency</b> without worrying about the subset of components that cannot meet this frequency. Our techniques outperform speed binning, because <b>clock</b> <b>frequency</b> benefits outweigh slight losses in IPC...|$|R
50|$|The {{secondary}} cache, {{termed the}} B-cache, is an external cache with {{a capacity of}} 1 to 16 MB. It {{is controlled by the}} microprocessor and is implemented by synchronous static random access memory (SSRAM) chips that operate at two thirds, half, one-third or one-fourth the internal <b>clock</b> <b>frequency,</b> or 133 to 333 MHz at 500 MHz. The B-cache was accessed with a dedicated 128-bit bus that operates at the same <b>clock</b> <b>frequency</b> as the SSRAM or at twice the <b>clock</b> <b>frequency</b> if double data rate SSRAM is used. The B-cache is direct-mapped.|$|R
