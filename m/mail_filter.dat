23|123|Public
5000|$|Typically either {{variant of}} the {{application}} is {{set up in a}} generic <b>mail</b> <b>filter</b> program, or it is called directly from a mail user agent that supports this, whenever new mail arrives. <b>Mail</b> <b>filter</b> programs such as procmail can be made to pipe all incoming mail through SpamAssassin with an adjustment to user's [...]procmailrc file.|$|E
50|$|In UNIX and UNIX-like environments OTRS {{works closely}} with system {{programs}} like the mail transfer agent Postfix or the <b>mail</b> <b>filter</b> procmail.|$|E
50|$|There is {{also the}} free <b>mail</b> <b>filter</b> POPFile, which sorts mail in as many {{categories}} as the user wants (family, friends, co-worker, spam, whatever) with Bayesian filtering.|$|E
5000|$|Sieve (<b>mail</b> <b>filtering</b> language) is an RFC {{standard}} for describing <b>mail</b> <b>filters</b> ...|$|R
50|$|The Cyrus IMAP server {{supports}} server-side <b>mail</b> <b>filtering</b> {{through the}} implementation of a <b>mail</b> <b>filtering</b> language called Sieve.|$|R
40|$|This paper {{presents}} a unique spam <b>mail</b> <b>filtering</b> technique {{based on a}} deep analysis of statistics on URL’s included in various e-mails gathered from a laboratory in a university for about six months. Since the proposed <b>mail</b> <b>filtering</b> technique searches only URL’s in mail, the overhead introduced by searching all mail contents or black list utilized by many other <b>mail</b> <b>filtering</b> algorithms is significantly reduced. In addition, the proposed filtering technique dynamically updates URL list through client feedback, and the bias possibly introduced by selecting bad training mail set can be eliminated as the filtering process is progressed...|$|R
50|$|Common {{uses for}} mail filters include {{organizing}} incoming email and removal of spam and computer viruses. A less common use is to inspect outgoing email at some companies {{to ensure that}} employees comply with appropriate laws. Users might also employ a <b>mail</b> <b>filter</b> to prioritize messages, and to sort them into folders based on subject matter or other criteria.|$|E
50|$|Microsoft Office 2003 (Office 11.0) was {{released}} in 2003. It featured a new logo. Two new applications made their debut in Office 2003: Microsoft InfoPath and OneNote. It is the first version to use new, more colorful icons. Outlook 2003 provides improved functionality in many areas, including Kerberos authentication, RPC over HTTP, Cached Exchange Mode, and an improved junk <b>mail</b> <b>filter.</b>|$|E
50|$|As {{part of its}} Trustworthy Computing initiative, Microsoft took {{corrective}} {{steps to}} fix Outlook's reputation in Office Outlook 2003. Among the most publicized security features are that Office Outlook 2003 does not automatically load images in HTML emails or permit opening executable attachments by default, and includes a built-in Junk <b>Mail</b> <b>filter.</b> Service Pack 2 has augmented these features and adds an anti-phishing filter.|$|E
5000|$|... <b>mail</b> <b>filtering</b> as of version 0.4 (via Sieve scripts, needs a ManageSieve server) ...|$|R
50|$|In November 2009 SORBS was {{acquired}} by GFI Software, to enhance their <b>mail</b> <b>filtering</b> solutions.|$|R
50|$|Procmail was {{an early}} example of a <b>mail</b> <b>filtering</b> tool and language. There are unfixed {{security}} vulnerabilities, and its last maintainers suggest using alternative tools.|$|R
50|$|Bogofilter is a <b>mail</b> <b>filter</b> that classifies e-mail as spam or ham (non-spam) by a {{statistical}} analysis of the message's header and content (body). The program is able {{to learn from the}} user's classifications and corrections. It was originally written by Eric S. Raymond after he read Paul Graham's article A Plan for Spam and is now maintained together with a group of contributors by David Relson, Matthias Andree and Greg Louis.|$|E
5000|$|Milter (portmanteau for <b>mail</b> <b>filter)</b> is an {{extension}} to the widely used open source mail transfer agents (MTA) Sendmail and Postfix. It allows administrators to add mail filters for filtering spam or viruses in the mail-processing chain. In {{the language of the}} art, [...] "milter" [...] refers to the protocol and API implementing the service, while [...] "a milter" [...] has come to refer to a filter application that uses milter to provide service.|$|E
5000|$|... policyd-weight is a <b>mail</b> <b>filter</b> for the Postfix mail {{transfer}} agent (MTA) written in Perl, by Robert Felber. It allows postfix to evaluate mail envelope information and to score mail against several DNS-based Blackhole Lists (DNSBL) before the mail is queued. The final score will determine whether a mail is rejected or accepted, in which case it is usually then subject to more resource intensive checks by a virus scanner and spam filter.|$|E
50|$|Some {{disadvantages}} of Oddpost were {{seen to be}} that it required Windows and Internet Explorer, and that it lacked <b>mail</b> <b>filters</b> and support for secure email.|$|R
50|$|The Apache James project also {{produces}} pure Java libraries for implementing Sender Policy Framework (SPF), the Sieve <b>mail</b> <b>filtering</b> language, and parsing MIME content streams, independent of Sun's JavaMail API.|$|R
5000|$|MIMEDefang is a GPL {{licensed}} {{framework for}} filtering e-mail. It uses sendmail's [...] "Milter" [...] API, some C glue code, and some Perl code {{to let the}} user write high-performance <b>mail</b> <b>filters</b> in Perl.|$|R
50|$|Since version 2.7.0 a before-queue {{setup is}} preferred, as {{it allows for}} a mailmessage {{transfer}} to be rejected during an SMTP sessionwith a sending client. In an after-queue setup filtering takes place aftera mail message has already been received and enqueued by an MTA, in whichcase a <b>mail</b> <b>filter</b> can no longer reject a message, but can only deliver it(possibly tagged), or discard it, or generate a non-delivery notification,which can cause unwanted backscatter in case ofbouncing a message with a fake sender address.|$|E
5000|$|POPFile is a free, open source, {{cross-platform}} <b>mail</b> <b>filter</b> originally {{written in}} Perl by John Graham-Cumming and maintained {{by a team}} of volunteers. It uses a naive Bayes classifier to filter mail. This allows the filter to [...] "learn" [...] and classify mail according to the user's preferences. Typically it is used to filter spam mail. It {{can also be used to}} sort mail into other user defined [...] "buckets" [...] or categories - for example, the user may define a bucket into which work email is sorted.|$|E
50|$|The core applications, Word, Excel, PowerPoint, and Access, {{had only}} minor {{improvements}} from Office XP. Outlook 2003 received improved functionality in many areas, including better email and calendar sharing and information display, complete Unicode support, search folders, colored flags, Kerberos authentication, RPC over HTTP, and Cached Exchange mode. Another key benefit of Outlook 2003 was the improved junk <b>mail</b> <b>filter.</b> Tablet and pen support {{was introduced in}} the productivity applications. Word 2003 introduced a reading layout view, document comparison, better change-tracking and annotation/reviewing, a Research Task Pane, voice comments and an XML-based format among other features. Excel 2003 introduced list commands, some statistical functions and XML data import, analysis and transformation/document customization features. Access 2003 introduced a backup command, the ability to view object dependencies, error checking in forms and reports among other features.|$|E
5000|$|<b>Mail</b> <b>filters</b> can be {{installed}} by the user, either as separate programs (see links below), {{or as part of}} their email program (email client). In email programs, users can make personal, [...] "manual" [...] filters that then automatically <b>filter</b> <b>mail</b> according to the chosen criteria. Most email programs now also have an automatic spam filtering function.|$|R
5000|$|Sendmail {{supports}} {{a variety of}} mail transfer protocols, including SMTP, ESMTP, DECnet's Mail-11, HylaFax, QuickPage and UUCP. Additionally, Sendmail v8.12 [...] introduced support for milters - external <b>mail</b> <b>filtering</b> programs that can participate in {{each step of the}} SMTP conversation.|$|R
50|$|Email {{filtering}} software inputs email. For its output, it might pass the message through unchanged for delivery to the user's mailbox, redirect the message for delivery elsewhere, or even throw the message away. Some <b>mail</b> <b>filters</b> {{are able to}} edit messages during processing.|$|R
40|$|By feeding {{personal}} e-mails {{into the}} training set, personalized content-based spam filters {{are believed to}} classify e-mails in higher accuracy. However, filters trained by both spam mails and personal mails may have difficulty classifying e-mails with the same characteristics of both spam and ham. In this paper, we propose a two-tier approach of using two filters trained only with either personal mails or spam mails. E-mails classified as legitimate mails by the legitimate <b>mail</b> <b>filter</b> may pass, while the remaining e-mails are processed by the spam filter in an ordinary way. Experiments in this paper are performed on two mail servers–one equipped with ordinary spam filter, and the other equipped both the legitimate <b>mail</b> <b>filter</b> and the spam filter. By combining the two filters with tuned thresholds, a much lower false positive rate is observed under the same false negative rate comparing to the ordinary filter. Keywords—personalized spam filtering, content-based, two-tie...|$|E
40|$|With the {{proliferation}} of electronic mail in the modern era, it becomes ever more important to devise methods for the organization, categorization and searching of such mail. Mail filtering is such a method for the organization of incoming e-mail. In this paper, we critique modern mail filters and describe how Machine Learning techniques could improve upon them without eliminating the benefits they provide. We then present ifile, a <b>mail</b> <b>filter</b> which makes use of the text classification algorithm naive Bayes. Furthermore, we present experiments showing its classification performance on sets of private e-mail and point {{out some of the}} issues involved with creating a Machine Learning based <b>mail</b> <b>filter.</b> We conclude that ifile eliminates some of the problems with modern mail filters while still maintaining high classification accuracy. 1 Introduction Most modern mail clients allow the user to organize his or her mail into what are called folders or mailboxes. This allows the user to group [...] ...|$|E
40|$|Abstract — In this paper, {{the system}} that {{classified}} spam mail and other mail(regular mail) was constructed by two filters with Bayesian theory and SVM(Support Vector Machine) used well by the text classification task as a text classification algorithm. It was confirmed to evaluate {{the performance of the}} spam filter constructed by Bayesian theory and SVM, and to show a high reproduction ratio and a high relevance ratio. Moreover, the URL pre-fetch method was built into Bayesian spam <b>mail</b> <b>filter,</b> and the relevance ratio was able to be improved. I...|$|E
5000|$|Windows Mail: A {{replacement}} for Outlook Express {{that includes a}} new mail store that improves stability, and features integrated instant search. It has the Phishing Filter like Internet Explorer 7 and Junk <b>mail</b> <b>filtering</b> that is enhanced through regular updates via Windows Update.|$|R
50|$|A common <b>mail</b> <b>filtering</b> {{installation}} with Amavis {{consists of}} aPostfix as an MTA, SpamAssassin as a spamclassifier, and ClamAV as an anti-virus protection, all running undera Unix-like operating system. Many other virus scanners (about 30) andsome other spam scanners (CRM114, DSPAM, Bogofilter)are supported too, {{as well as}} some other MTAs.|$|R
5|$|<b>Mail</b> can <b>filter</b> messages, {{either by}} unread/read, or by categories.|$|R
40|$|Spam {{messages}} are nuisance and huge problem to most users since they clutter their mailboxes and waste {{their time to}} delete all the junk mails before reading the legitimate ones. They also cost user money with dial up connections, waste network bandwidth and disk space and most importantly make available harmful and offensive materials such as pornographic sites to children. All these problems can be rectified by using an apt <b>Mail</b> <b>filter.</b> The <b>Mail</b> <b>filter</b> that we have considered here is open source engine widely known as Anti Spam SMTP Proxy. This paper provides a framework to overcome {{the limitations of the}} existing ASSP server engine by restructuring the existing ASSP server engine. This paper would deal with spam detection as image spam, video spam that come as attachments and a single line message that would direct to another URL with a trainable fuzzy classifier to build an automatic anti spam filter. Based on the rule, evaluations were done to predict whether the given mail is a valid or invalid and the report is updated in the database. Finally, our work attempts to improve performance of the Anti Spam SMTP Proxy Mailfilter by configuring the ASSP server engine with an efficient Mail Transfer Agent based on the analysis done with leading open source MTAs like Sendmail, Postfix and Qmail...|$|E
40|$|We {{study the}} {{applicability}} of partially supervised text classification to junk mail filtering, where a given set of junk messages serve as positive examples while the messages received by a user are unlabeled examples, {{but there are no}} negative examples. Supplying a junk <b>mail</b> <b>filter</b> with a large set of junk mails could result in an algorithm that learns to filter junk mail without user intervention and thus would significantly improve the usability of an e-mail client. We study several learning algorithms that take care of the unlabeled examples in different ways and present experimental results. ...|$|E
40|$|Abstract. In this paper, {{the system}} that {{classified}} spam mail and other mail(regular mail) was constructed by two filters with Bayesian theory and SVM(Support Vector Machine) used well by the text classification task as a text classification algorithm. It was confirmed to evaluate {{the performance of the}} spam filter constructed by Bayesian theory and SVM, and to show a high reproduction ratio and a high relevance ratio. More-over, the URL pre-fetch method was built into Bayesian spam <b>mail</b> <b>filter,</b> and the relevance ratio was able to be improved. We proposed the spam filter system by the combination of some filters, and discussed {{the system that}} added URL pre-fetch method to Bayesian spam filter and the SVM filter. ...|$|E
50|$|In some {{countries}} the legislationdoes not permit <b>mail</b> <b>filtering</b> to discard a mail message once it hasbeen accepted by an MTA, so this rules out an after-queue filtering setupwith discarding or quarantining of messages, but leaves a possibility ofdelivering (possibly tagged) messages, or rejecting {{them in a}} before-queuesetup (SMTP proxy or milter).|$|R
50|$|Included in all {{versions}} of macOS {{up to and}} including Mac OS X Panther, Mail was integrated with other Apple applications such as Address Book, iChat, and iCal. Some of its features that remain in the most recent version of Mail include rules for mailboxes, junk <b>mail</b> <b>filtering</b> and multiple account management.|$|R
5000|$|Gmail {{allows users}} to create rules (‘filters’) for the {{automatic}} organization of incoming <b>mail.</b> <b>Filters</b> are created using the Advanced Search interface using the same criteria as those used for searching. Gmail can perform any combination of the following actions upon an email that meets all the specified criteria in a filter: ...|$|R
