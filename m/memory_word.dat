147|989|Public
25|$|The lower 15 bits of each <b>memory</b> <b>word</b> held AGC {{instructions}} or data, {{with each}} word being {{protected by a}} 16th odd parity bit. This bit was set to 1 or 0 by a parity generator circuit so a count of the 1s in each <b>memory</b> <b>word</b> would always produce an odd number. A parity checking circuit tested the parity bit during each memory cycle; if the bit didn't match the expected value, the <b>memory</b> <b>word</b> {{was assumed to be}} corrupted and a parity alarm panel light was illuminated.|$|E
25|$|The {{computer}} had 2048 {{words of}} erasable magnetic core memory and 36 kilowords of read-only core rope memory. Both had cycle times of 11.72microseconds. The <b>memory</b> <b>word</b> length was 16 bits: 15 bits {{of data and}} one odd-parity bit. The CPU-internal 16-bit word format was 14 bits of data, one overflow bit, and one sign bit (ones' complement representation).|$|E
25|$|The AGC {{memory cycle}} {{occurred}} continuously during AGC operation. Instructions needing memory data had to access it during timing pulses 7-10. If the AGC changed the <b>memory</b> <b>word</b> in the G register, the changed word was written back to memory after timing pulse 10. In this way, data words cycled continuously from memory to the G register {{and then back}} again to memory.|$|E
30|$|The {{received}} {{column of}} the <b>memory</b> <b>words</b> {{is stored in}} the last column of the S-lattice which has been reserved for the border <b>memory</b> <b>words</b> of the neighbor process (Fig.  5 e).|$|R
30|$|Now, {{we turn to}} {{the first}} problem. As {{mentioned}} before, in each phase half of a sub-lattice is updated. Before a process starts updating the half of the sub-lattice, it should receive the corresponding border <b>memory</b> <b>words</b> of the neighbor process. Suppose that the process p 2 is going to update the left half of its sub-lattice in phase 1. It waits to receive the right-side border <b>memory</b> <b>words</b> of the process p 1. The process p 1 sends its right border <b>memory</b> <b>words</b> to the process p 2 asynchronously just after it accomplishes the phase 2 of the last iteration. After p 2 receives the border <b>memory</b> <b>words</b> from p 1 synchronously, it starts updating the <b>memory</b> <b>words</b> in the phase 1. Just after finishing the phase 1, p 2 sends its updated left-side border <b>memory</b> <b>words</b> to p 1 asynchronously and goes to the phase 2. The similar procedure occurs for other processes as well. It should be mentioned that we use periodic boundary conditions thereby the left neighbor of the first process is the last process, and likewise the right neighbor of the last process is the first process.|$|R
50|$|The Alpha {{architecture}} has a two-step {{approach to}} unaligned loads and stores. The {{first step is}} to load the upper and lower <b>memory</b> <b>words</b> into separate registers. The second step is to extract or modify the <b>memory</b> <b>words</b> using special low/high instructions similar to the MIPS instructions. An unaligned store is completed by storing the modified <b>memory</b> <b>words</b> back to <b>memory.</b> The reason for this complexity is that the original Alpha architecture could only read or write 32-bit or 64-bit values. This proved to be a severe limitation that often led to code bloat and poor performance. To address this limitation, an extension called the Byte Word Extensions (BWX) was added to the original architecture. It consisted of instructions for byte and word loads and stores.|$|R
25|$|In a {{study of}} women {{experiencing}} Premenstrual Syndrome, they were either given a placebo beverage or a carbohydrate-rich one. The patients were tested at home; their moods, cognitive performance, and food craving were measured before the consumption of the beverage and 30, 90, and 180 minutes after consumption. The {{results showed that the}} carbohydrate-rich beverage significantly decreased self-reported depression, anger, confusion, and carbohydrate craving 90 to 180 minutes after consumption. <b>Memory</b> <b>word</b> recognition also improved significantly.|$|E
25|$|The AGC {{transferred}} data to {{and from}} memory through the G register in a process called the memory cycle. The memory cycle took 12 timing pulses (11.72μs). The cycle began at timing pulse 1 (TP1) when the AGC loaded the memory address to be fetched into the S register. The memory hardware retrieved the data word from memory at the address specified by the S register. Words from erasable memory were deposited into the G register by timing pulse 6 (TP6); words from fixed memory were available by timing pulse 7. The retrieved <b>memory</b> <b>word</b> was then available in the G register for AGC access during timing pulses 7 through 10. After timing pulse 10, the data in the G register was written back to memory.|$|E
500|$|Different methods {{exist for}} {{more or less}} {{successful}} detection, prevention, correction or mitigation of the row hammer effect. [...] Tests show that simple ECC solutions, providing single-error correction and double-error detection (SECDED) capabilities, {{are not able to}} correct or detect all observed disturbance errors because some of them include more than two flipped bits per <b>memory</b> <b>word.</b> [...] A less effective solution is to introduce more frequent memory refreshing, with the refresh intervals shorter than the usual 64ms, but this technique results in higher power consumption and increased processing overhead; some vendors provide firmware updates that implement this type of mitigation. [...] One of the more complex prevention measures performs counter-based identification of frequently accessed memory rows and proactively refreshes their neighboring rows; another method issues additional infrequent random refreshes of memory rows neighboring the accessed rows regardless of their access frequency. [...] Research shows that these two prevention measures cause negligible performance impacts.|$|E
50|$|The GPUs did {{not support}} {{direct access to the}} {{graphics}} memory, although a special command was provided to aid in implementing access to individual <b>memory</b> <b>words.</b>|$|R
30|$|The {{results provide}} partial support for our {{hypothesis}} that increasing spreading activation in emotional memory networks {{would be associated}} with greater changes in heart rate and skin conductance due to the cumulative effect of an increasing number of somatic markers being activated. Both the number of emotional <b>memory</b> <b>words</b> and the average ages of the memories were significantly correlated with changes in heart rate and skin conductance. However, there were some differences between the happy and sad conditions as well as between the number of emotional <b>memory</b> <b>words</b> and the average ages of the memories. Specifically, there was a significant positive relationship between the number of happy <b>word</b> <b>memories</b> and heart rate but a significant negative relationship between the number of happy <b>word</b> <b>memories</b> and skin conductance. No significant relationships were found between the number of sad <b>word</b> <b>memories</b> and either heart rate or skin conductance. However, the average ages of the sad <b>word</b> <b>memories</b> was significantly positively correlated with skin conductance, but not with heart rate. Finally, the average ages of the happy <b>word</b> <b>memories</b> was not significantly correlated with either skin conductance or heart rate.|$|R
50|$|Caruana {{deals with}} a number of themes, namely, knowledge, truth, nature, conscience, sensibility, imagination, intellect, intuition, judgement, discourse, <b>memory,</b> <b>words,</b> and such like subjects. All are {{discussed}} in a philosophically clear and argumentative way.|$|R
50|$|A {{computer}} accesses memory by {{a single}} <b>memory</b> <b>word</b> at a time. As long as the <b>memory</b> <b>word</b> size {{is at least as}} large as the largest primitive data type supported by the computer, aligned accesses will always access a single <b>memory</b> <b>word.</b> This may not be true for misaligned data accesses.|$|E
50|$|The lower 15 bits of each <b>memory</b> <b>word</b> held AGC {{instructions}} or data, {{with each}} word being {{protected by a}} 16th odd parity bit. This bit was set to 1 or 0 by a parity generator circuit so a count of the 1s in each <b>memory</b> <b>word</b> would always produce an odd number. A parity checking circuit tested the parity bit during each memory cycle; if the bit didn't match the expected value, the <b>memory</b> <b>word</b> {{was assumed to be}} corrupted and a parity alarm panel light was illuminated.|$|E
50|$|Some {{architectures}} like MIPS {{have special}} unaligned load and store instructions. One unaligned load instruction gets the bytes from the <b>memory</b> <b>word</b> {{with the lowest}} byte address and another gets the bytes from the <b>memory</b> <b>word</b> with the highest byte address. Similarly, store-high and store-low instructions store the appropriate bytes in the higher and lower memory words respectively.|$|E
40|$|We {{extend the}} Faulty RAM model by Finocchi and Italiano (2008) {{by adding a}} safe memory of {{arbitrary}} size S, and we then derive tradeoffs between the performance of resilient algorithmic techniques {{and the size of}} the safe memory. Let δ and α denote, respectively, the maximum amount of faults which can happen during the execution of an algorithm and the actual number of occurred faults, with α≤δ. We propose a resilient algorithm for sorting n entries which requires O(n n+α (δ/S + S)) time and uses Θ(S) safe <b>memory</b> <b>words.</b> Our algorithm outperforms previous resilient sorting algorithms which do not exploit the available safe memory and require O(n n+ αδ) time. Finally, we exploit our sorting algorithm for deriving a resilient priority queue. Our implementation uses Θ(S) safe <b>memory</b> <b>words</b> and Θ(n) faulty <b>memory</b> <b>words</b> for storing n keys, and requires O(n + δ/S) amortized time for each insert and deletemin operation. Our resilient priority queue improves the O(n + δ) amortized time required by the state of the art. Comment: To appear in Theoretical Computer Science, 201...|$|R
60|$|What {{else was}} it that tried to force its way above the {{threshold}} of his bruised and wavering <b>memory?</b> <b>Words?</b> Words of love? And lips pressed to his? No, it must be but a figment of his wounded brain.|$|R
50|$|Fine-grained {{parallelism}} means individual {{tasks are}} relatively small in terms of code size and execution time. The data is transferred among processors frequently in amounts of {{one or a few}} <b>memory</b> <b>words.</b> Coarse-grained is the opposite: data is communicated infrequently, after larger amounts of computation.|$|R
50|$|Instructions {{were either}} 26 bits or 13 bits long, {{allowing}} packing {{of up to}} 4 instructions per <b>memory</b> <b>word.</b>|$|E
5000|$|The {{two basic}} {{operations}} {{performed by a}} memory chip are [...] "read", in which the data contents of a <b>memory</b> <b>word</b> is read out (nondestructively), and [...] "write" [...] in which data is stored in a <b>memory</b> <b>word,</b> replacing any data that was previously stored there. To increase data rate, {{in some of the}} latest types of memory chips such as DDR SDRAM multiple words are accessed with each read or write operation.|$|E
5000|$|The new {{value of}} SP becomes 0xF81E. The CPU then copies {{the value of}} AX to the <b>memory</b> <b>word</b> whose {{physical}} address is 0x1F81E.|$|E
30|$|There {{are rather}} few {{research}} works {{addressing the problem}} of signal mapping to the physical memory. De Greef et al. mapped each multidimensional array from the behavioral specification by choosing the canonical linearization which yielded the minimum distance (in <b>memory</b> <b>words)</b> between array elements simultaneously alive [10].|$|R
50|$|The HEP memory {{consisted}} of completely separate instruction memory (up to 128 MBs) and data memory (up to 1 GB). Users saw 64-bit words, but in reality, data <b>memory</b> <b>words</b> were 72-bit {{with the extra}} bits used for state, see next paragraph, parity, tagging, and other uses.|$|R
3000|$|... (i = 1 : 4) {{to store}} excess {{particles}} {{which will be}} transmitted to the different PEs. The size of these buffers is 2 M. Additional memory space is needed to store the tagged particles in tag buffers (TB). M/ 5 <b>memory</b> <b>words</b> are needed for each TB [...]...|$|R
50|$|When {{a single}} <b>memory</b> <b>word</b> is {{accessed}} {{the operation is}} atomic, i.e. the whole <b>memory</b> <b>word</b> is read or written at once and other devices must wait until the read or write operation completes before they can access it. This {{may not be true}} for unaligned accesses to multiple memory words, e.g. the first word might be read by one device, both words written by another device and then the second word read by the first device so that the value read is neither the original value nor the updated value. Although such failures are rare, they can be very difficult to identify.|$|E
50|$|There {{are also}} several games {{you can play}} to help you learn and win the mastery points that are needed to clear levels; once you master all the words given in one level, you'll {{be able to move}} on. Games include flash cards, {{multiple}} choice, hit-a-word, fading characters, write cards, <b>memory,</b> <b>word</b> search, etc.|$|E
50|$|The G-20 {{system was}} a general purpose {{mainframe}} computer, constructed of transistorized modules and core <b>memory.</b> <b>Word</b> size was 32 bits, plus parity. Up to 32k words of memory could be used. Single and Double precision floating point were allowed, as well a custom scaled format, called Pick-a-Point. A special form of the pick-a-point allowed an integer.|$|E
40|$|The {{recognition}} <b>memory</b> of <b>words</b> {{and pictures}} was tested following a study session where the stimuli entered metaphorical or literal decision tasks. The results confirmed a picture superiority {{effect in the}} sense that the memory for pictures under all conditions was better than the <b>memory</b> for <b>words.</b> However, a metaphorical task at study had opposite effects on the long-term memory for pictures and <b>words,</b> producing better <b>memory</b> for <b>words</b> and poorer <b>memory</b> for pictures compared to a literal decision task at study. The results are interpreted within the concept of dual coding...|$|R
40|$|Akmtnct—Amnesic {{patients}} have impaired explicit memory that IS evident in poor recall {{and recognition of}} words, yet can have intact implicit <b>memory</b> for <b>words</b> as measured by repetition priming, the enhanced efficiency for reprocessing those words The dissociation between explicit and implicit <b>memory</b> for <b>words</b> IS a fundamental characteristic of normal cognition that could reflect two different functional architectures of the hu- 1 brain two separate processing systems or two levels of operation of a single system with implicit memory less demand-ing of that system We present a patient who has a lesion in the nght occipital lobe and who showed intact explicit and im-paired implicit <b>memory</b> for <b>words</b> The deficit was specific to visual priming The double dissociation between explicit and implicit visual <b>memory</b> for <b>words</b> indicates that separate pro-cessing systems mediate these two forms of memory, and that a memory system in right occipital cortex mediates implicit visual <b>memory</b> for <b>words</b> Human <b>memory</b> is not a unitary faculty, but rather an en-semble of various forms of leammg that differ in their uses, their operating charactenstics, and the neural networks tha...|$|R
3000|$|... aThe 'de-normalization' is implicitly {{contained}} in the homography; bWidth and height are configurable, and their optimal choice depends on the transformation. Typically, blocks should be much wider than high, since the transformation rotation angle is usually small, after manual coarse rectification; cThe number of necessary <b>memory</b> <b>words</b> is proportional to [...]...|$|R
50|$|The phonological deficit theory {{proposes that}} people with {{dyslexia}} have a specific sound manipulation impairment, which affects their auditory <b>memory,</b> <b>word</b> recall, and sound association skills when processing speech. The phonological theory explains a reading impairment when using an alphabetic writing system which requires learning the grapheme/phoneme correspondence, {{the relationship between the}} graphic letter symbols and speech sounds which they represent.|$|E
50|$|This {{implies that}} after the {{hardware}} reset, the CPU will start execution at the physical address 0xFFFF0. In IBM PC compatible computers, This address maps to BIOS ROM. The <b>memory</b> <b>word</b> at 0xFFFF0 usually contains a JMP instruction that redirects the CPU to execute the initialization code of BIOS. This JMP instruction is absolutely the first instruction executed after the reset.|$|E
50|$|The AGC {{memory cycle}} {{occurred}} continuously during AGC operation. Instructions needing memory data had to access it during timing pulses 7-10. If the AGC changed the <b>memory</b> <b>word</b> in the G register, the changed word was written back to memory after timing pulse 10. In this way, data words cycled continuously from memory to the G register {{and then back}} again to memory.|$|E
50|$|The 160G model {{extended}} the registers and <b>memory</b> <b>words</b> to 13 bits; in G mode, all 13 bits were used, while in A mode, only the lower 12 bits were used, for binary compatibility with the 160-A. The 160G added some instructions, including built-in multiply and divide instructions, and some additional addressing modes.|$|R
5000|$|... 48 bit-words. fixed/floating-point. 1024/4096 <b>words</b> of Magnetic-core <b>memory.</b> (8192 <b>words</b> of Drum <b>memory).</b>|$|R
5000|$|... 1024-word Williams memory {{replaced}} by four banks of magnetic core <b>memory,</b> 4096 <b>words</b> each bank.|$|R
