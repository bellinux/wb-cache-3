57|243|Public
50|$|According to {{information}} present on product website, the program uses <b>macro</b> <b>program</b> to integrate itself into Microsoft Office. In case if macro security level is high, then program {{will not be}} installed correctly.|$|E
50|$|The first screenwriting {{software}} was SmartKey, a <b>macro</b> <b>program</b> that sent strings of commands to existing word processing programs, such as WordStar, WordPerfect and Microsoft Word. SmartKey was popular with screenwriters from 1982-1987, after which word processing programs {{had their own}} macro features.|$|E
40|$|Abstract. Based on FANUC nc lathe {{catenary}} <b>macro</b> <b>program,</b> {{explores the}} rule curve <b>macro</b> <b>program</b> compiling method, using a simple example {{is given to}} illustrate the <b>macro</b> <b>program</b> programming method, the workpiece coordinate origin is not Z zero programming method, the continuous processing same shape graphics macro programming method, provides the programming method of the other special rule curve and reference...|$|E
40|$|Abstract—This paper {{presents}} an on-going research {{work on the}} implementation of feature-based machining via <b>macro</b> <b>programming.</b> Repetitive machining features such as holes, slots, pockets etc can readily be encapsulated in macros. Each macro consists of methods on how to machine the shape {{as defined by the}} feature. The <b>macro</b> <b>programming</b> technique comprises of a main program and subprograms. The main program allows user to select several subprograms that contain features and define their important parameters. With macros, complex machining routines can be implemented easily and no post processor is required. A case study on machining of a part that comprised of planar face, hole and pocket features using the <b>macro</b> <b>programming</b> technique was carried out. It is envisaged that the <b>macro</b> <b>programming</b> technique can be extended to other feature-based machining fields such as the newly developed STEP-NC domain. Keywords—Feature-based machining, CNC, Macro, STEP-NC. I...|$|R
40|$|The qualities which SAS ® macros {{share with}} {{object-oriented}} languages {{account for the}} power of <b>macro</b> <b>programming.</b> This paper illustrates some examples of specific design patterns which can be partially or fully implemented with the SAS macro language. The material is intermediate to advanced, and assumes knowledge of macros and macro variables. The goal is to illustrate best practices for SAS <b>macro</b> <b>programming...</b>|$|R
5000|$|<b>Macro</b> <b>programming,</b> {{allowing}} {{the user to}} program command sequences to be sent with one button press ...|$|R
40|$|Abstract. Based on {{the design}} {{parameters}} of disc CAM with the oscillating roller follower and modified trapezoid curve follower motion, by introducing <b>macro</b> <b>program</b> cyclic variable, the mathematical calculation model of <b>macro</b> <b>program</b> about cutter path of disc CAM with the holonomic constraint oscillating roller follower is established. The <b>macro</b> <b>program</b> is designed to can be adjusted quickly, according to the design parameters and the process parameters. The numerical control program completely parametric design is realized. So it provides programming methods and strategies for numerical control machining <b>macro</b> <b>program</b> design of the oscillating roller follower disc CAM with a complicated movement law...|$|E
40|$|Abstract. In {{order to}} reduce non-cutting time and improve {{machining}} efficiency, the <b>macro</b> <b>program</b> of automatic tool changer (ATC) has been designed firstly, {{which was based on}} the macro theory and parameter settings. Then, the machining simulation environment of the automatic tool changing was established, based on which, the digital simulation of automatic tool changing process is realized by mapping of the practical changing tool process in the virtual machining environment. The simulation results effectively verify and improve the <b>macro</b> <b>program</b> performance...|$|E
40|$|Abstract: The work {{efficiency}} {{can be improved}} if we work out <b>macro</b> <b>program</b> in the practical processing according to the real parts. Through {{the study of the}} <b>macro</b> <b>program</b> of FANUC 0 i system, based on the macro programming, combining the characteristics of the hyperboloid of two sheets, the thesis develops manual programming of milling double hyperboloid methods with the adoption of hierarchical milling and linear approximation oval. And corresponding application example is also given out in the paper. The method is of simple programming with small programming capacity and highly optimized for general use, which also has certain significance for the space complex surface machining...|$|E
50|$|SAM76 is a <b>macro</b> <b>programming</b> {{language}} used {{from the late}} 1970s to the present 2007 initially ran on CP/M.|$|R
40|$|Visualizing Categorical Data {{presents}} a comprehensive overview of graphical methods for discrete data — count data, cross-tabulated frequency tables, and discrete response data. These methods {{are designed to}} complement traditional numerical summaries and statistical models, expose patterns in the data, and to aid in diagnosing model defects. They are illustrated with real data problems, and implemented in a large collection of SAS <b>macro</b> <b>programs</b> available with the book. A number of these methods are somewhat novel, and the <b>macro</b> <b>programs</b> may take some effort to use effectively with your own data. In this paper I present an overview of these methods and illustrate {{the use of the}} <b>macro</b> <b>programs</b> for graphic analysis to reveal features of the data not apparent in traditional numerical summaries. The goal is to translate ”theory into practice, ” and enable readers to use these techniques productively with their own data...|$|R
40|$|<b>Macro</b> <b>programming</b> a {{distributed}} system, such as {{a sensor}} network, {{is the ability to}} specify application tasks at a global level while relying on compiler-like software to translate the global tasks into the individual component activities. Bayesian networks can be regarded as a powerful tool for <b>macro</b> <b>programming</b> a distributed system in a variety of data analysis applications. In this paper we present our architecture to program a sensor network by means of Bayesian networks. We also present some applications developed on a microphone-sensor network, that demonstrate calibration, classification and anomaly detection. ...|$|R
40|$|A {{summary table}} with {{statistical}} comparisons {{is one of}} the most common tables included in clinical study reports. The table usually contains not only summary statistics such as, count, mean, standard deviations, medians, ranges for relevant continuous variables of interest, and number and percentage of patients falling within a particular category for categorical variables of interest, but also some statistical information such as p-values from Chi-square test, Fisher’s exact test, t-test, ANOVA test, etc. We have developed a user-friendly <b>macro</b> <b>program</b> to calculate summary statistics and test results for both continuous and categorical variables of interest, and output a highly customized, presentable table into Microsoft Word. The SAS <b>Macro</b> <b>program</b> is flexible, allowing you to choose the descriptive statistics and the statistical methods for comparisons among groups...|$|E
40|$|Adverse events (AE) are {{commonly}} reported and analyzed {{through the use}} of various summary tables as requested by FDA and other regulatory agencies. However, writing and validating these SAS programs are very labour-intensive and time-consuming. In this paper, we introduce a SAS <b>macro</b> <b>program</b> that creates one adverse event analysis dataset for generating different summary tables...|$|E
40|$|This note {{extends the}} {{construction}} of the design matrix used for estimating cell probabilities with ignorable missing data described by Lipsitz et al. (1998). A reformulation for the general case of an n-way table is described, and implemented in a SAS <b>macro</b> <b>program.</b> The macro constructs this design matrix and offset variable, estimates the cell probabilities, and returns a table with the estimates, their standard errors, and fitted cell frequencies...|$|E
50|$|On Lisp: Advanced Techniques for Common Lisp {{is a book}} by Paul Graham on <b>macro</b> <b>programming</b> in Common Lisp. Published in 1993, it is {{currently}} out of print, but can be freely downloaded as a PDF file.|$|R
50|$|The WordStar Command Emulator {{is written}} in Microsoft Visual Basic for Applications, a <b>macro</b> <b>programming</b> {{language}} based on Visual Basic built into Microsoft Word {{to allow for a}} high level of customization. Most Word add-ins are written in this language also known as VBA.|$|R
50|$|An {{update to}} Scriptor {{understood}} the style sheets used in Microsoft Word for DOS. And so {{the need for}} key <b>macro</b> <b>programs</b> was lessened. Scriptor's limitation was that once formatted {{it was difficult to}} re-import the resulting text back into a word processor for further editing.|$|R
40|$|This paper {{describes}} {{the use of}} spreadsheet programs for the numerical solution of hyperbolic partial differential equations. A complete 123 <b>macro</b> <b>program</b> is presented and applied to obtain the approximate solution of a model problem in electrical engineering. Through user macros, spreadsheets can now function {{in the same way}} as programs written in conventional programming languages. They provide a clear and direct means of entering data and formulas. This important feature will allow the students to easily experiment with their model problem...|$|E
40|$|Bivariate count {{models are}} used in {{situations}} where two count dependent variables are correlated {{and they need to}} be jointly estimated. Most research on count data regression models focus on univariate cases where the single dependent variable takes on non-negative integer. While Chou and Steenhard (2009) provided a SAS ® <b>macro</b> <b>program</b> that handles a wide variety of univariate count data distributions, no study has provided a SAS program to estimate bivariate count regression models. This paper develops a SAS ® <b>macro</b> <b>program</b> jointly estimate two correlated count data series [...] -the bivariate count regression model. Our SAS ® macro allows for ten bivariate count data distributions: bivariate Poisson, bivariate Poisson-LogNormal, bivariate negative binomial, bivariate generalized Poisson, bivariate Poisson inverse Gaussian, bivariate Borel-Tanner, bivariate Neyman Type A, bivariate generalized Waring, Poisson-Laguerre polynomial, and bivariate Poisson series expansion. In addition, the macro also provides estimation of the above bivariate distributions using a copula approach. Bivariate zero-inflated, bivariate hurdle, bivariate truncated, and bivariate censored regression models can also be estimated with this SAS ® macro. We apply this SAS ® macro procedure to a healthcare utilization data. The AIC (Akaike Information Criterion) and BIC (Bayesian Information Criterion) of these bivariate regression models are provided for model evaluation. 1...|$|E
40|$|Count data {{regression}} models are used when {{the dependent variables}} are non-negative integers. The standard count data models are limited in their ability in handling the data distributions. Poisson and negative binomial distributions are commonly used in count models. Poisson distributions assumes equidispersed data (variance equals to the mean); and negative binomial {{regression models}} over-dispersed data (variance greater than the mean). While there are studies (Liu and Cela 2008; Tin 2008) provide zero-inflated and hurdle count data models in SAS, no study has provided a SAS program that allows for a comprehensive list of data distributions and modeling strategies. This paper presents a SAS ® <b>macro</b> <b>program</b> that allows {{for a wide variety}} of count data distributions which can be used to model both underand over-dispersed data. In addition, our SAS ® <b>macro</b> <b>program</b> can handle data that has excess zeros (zero-inflated) in the sample. This SAS ® macro is flexible in allowing one to estimate a variety of count regression models including: zero-inflated, hurdle, censored, truncated, finite mixture, semi-parametric, squared polynomial expansion, and generalized heterogeneous. We demonstrate this SAS ® macro procedure by applying it to the number of takeover bids received by targeted firms. We also evaluate count models performance using goodness-of-fit test, Vuong’s test, and information criteria test. 1...|$|E
50|$|After remapping, the old key {{will retain}} its {{original}} function even after being remapped elsewhere, effectively creating {{two copies of}} the same key. After it is remapped somewhere else, the original or 'old' key can be remapped to a different function or have a <b>macro</b> <b>programmed</b> to it.|$|R
50|$|The AnyKey {{keyboard}} is extensively programmable. This {{takes two}} forms: Remapping, and <b>macro</b> <b>programming.</b> The only keys on the AnyKey that cannot be programmed {{in at least}} some way are those used to control the programming itself - <b>Program</b> <b>Macro,</b> Suspend Macro, Repeat Rate, and Remap. Any other key on the keyboard including letters, numbers, arrow keys, and even special keys like modifiers such as Shift, Alt, Ctrl, Enter, and the Space Bar can be programmed.|$|R
40|$|Automated method {{validation}} of early drug candidates increases QC efficiency In this publication, Dr Michael Pfeffer, lab manager at Bayer Schering Pharma, Berlin, Germany, {{describes how the}} company’s QC unit deployed the <b>macro</b> <b>programming</b> capability of Agilent ChemStation to automate the {{validation of}} an analytical method for an Agilent HPLC system...|$|R
40|$|This manual {{documents}} the first {{release of the}} the Corn Product Evaluation Program (CPEP) program. The CPEP is a Lotus 1 - 2 - 3 <b>macro</b> <b>program</b> that is intended to facilitate benefit/cost evaluation of alternative corn products. The program is fully menu-driven. The user is guided through the program via typical 1 - 2 - 3 menus, from which the user makes selections. A working knowledge of Lotus 1 - 2 - 3 {{is all that is}} required to use CPEP. A proficient Lotus macro programmer, however, can further modify or customize the program to meet more specialized needs. ...|$|E
30|$|The main aim of {{the linear}} static {{analysis}} was to check for any stresses that exceeded the allowable stress level. The tower main members, horizontal members, lower cross members and the top mast were modelled with BEAM 188 elements. On the other hand, the upper cross members were modelled with LINK 180 elements because of their high slenderness ratio (Fig.  4). 8000 elements were used to generate the FE model of the tower that rendered a converged solution. A <b>macro</b> <b>program</b> using ANSYS APDL [1] was written at post-processing stage in order to list various stresses and displacements in each element and at each node, respectively.|$|E
40|$|Abstract. Based on the {{structure}} features of double primary ribs reticulated domes, a method for node generation and element connection of six typical double primary ribs reticulated domes was produced in spherical coordinate system. A <b>macro</b> <b>program</b> was designed by using ANSYS Parametric Design Language (APDL). This six typical double primary ribs reticulated dome modeling was realized under given parameters such as span, rise high, double primary ribs thickness, grid number in circular and radial direction. It is proved by several examples that this method is simple, efficient and possible. It can be easily {{used to analyze the}} internal force and optimized design in shell structures...|$|E
40|$|The qualities which SAS macros {{share with}} {{object-oriented}} languages {{account for the}} power of <b>macro</b> <b>programming.</b> This picture guide will graphically model and introduce how SAS macros are best built, and use these graphics to illustrate how macros share some qualities of object-oriented programming (defined as encapsulation, polymorphism, and inheritance) ...|$|R
50|$|The Program light {{normally}} remains solidly {{on or off}} {{depending on}} whether the keyboard is set to use macros, which can be toggled by pressing the Suspend Macro key. The state of the Program light does not reflect whether there are any <b>macros</b> <b>programmed</b> into the keyboard, merely whether the keyboard is in macro mode.|$|R
40|$|Macros {{are often}} {{regarded}} {{as a sort of}} black magic: highly useful yet abstruse. The present paper aims to make <b>macro</b> <b>programming</b> more like a craft. Using R 5 RS Scheme macros as an example, we develop and present a general practical methodology of building complex macros systematically, by combining simpler components by functional composition or higher-order operators...|$|R
40|$|Abstract: R Parameter {{programming}} and Programming Jump instruction is an advanced programming method in SIEMENS system and {{similar to the}} <b>macro</b> <b>program</b> in FANUC system. It uses parameter variables instead of functional codes and address values {{to make up a}} processing program. The R variables can plus, minus, multiply, divide, evolution, power, trigonometricfunction and so on in the logical calculation, In NC machining programming, uses R Parameter {{programming and}} is Programming Jump instruction, may realize the NC procedure logical judgment, comparison, transfer and other logic operation, resulting in a greatly simplified program, provides some solutions to numerical control programming for some special, complex and the similar parts...|$|E
40|$|Automatically {{generating}} customized tables {{by using}} the SAS ® System is more reliable and efficient, particularly, when the tables need to be submitted periodically in report systems. An example SAS program using SAS/BASE and MACRO modules to create a comprehensive summary table is presented. The SAS program may be run on all SAS platforms. The SAS program features the INTCK and INTNX functions, PROC FREQ, and PROC TABULATE to create monthly reports that summarized weekly activities in the Department of Health Services. A SAS <b>macro</b> <b>program</b> is also described to add flexibility to the calculations shown in the PROC TABULATE table. Also, tips customizing the table and suppressing unnecessary displays were introduced...|$|E
40|$|Abstract. The use of CNC {{machine tools}} signal acquisition, two-way {{transmission}} of the temperature sensor data, the ladder design and <b>macro</b> <b>program</b> guide and other methods on {{the implementation of a}} temperature sensing system of smart lubrication function. It is not only low-end CNC machine tools can compensate for deficiencies in equipment protection features and maintenance-free function, but also enhance the diversity of processing. Ultimately by analyzing the different lubrication mode, the relationship between the lubricating oil pressure and temperature and other factors, to draw the function in the lubrication in a stabilizing effect on oil pressure and control bearings and nut seat temperature. It is simple and practical, has important theoretical significance and great value...|$|E
50|$|Keyboard {{and mouse}} macros that are created using an application's {{built-in}} macro features are sometimes called application macros. They {{are created by}} carrying out the sequence once and letting the application record the actions. An underlying <b>macro</b> <b>programming</b> language, most commonly a scripting language, with {{direct access to the}} features of the application may also exist.|$|R
40|$|This paper {{deals with}} the {{optimization}} of coaxial filters using Tuning Space Mapping (TSM) method implemented to CST environment. The function of fine and coarse model and their link between each other is explained. In addition, supporting <b>macros</b> <b>programmed</b> in VBA language, which are used for maximum efficiency of the optimization from the user´s point of view, are mentioned. <b>Macros</b> are <b>programmed</b> in CST and are also used for automatic calibration constants determination and for automatic calibration process between the coarse model and the fine model. The whole algorithm is illustrated on the particular seven-order filter design and optimized results are compared to measured ones...|$|R
40|$|A {{method is}} {{described}} for fitting the Weibull distribution to failure-time data {{which may be}} left, right or interval censored. The method generalizes the auxiliary Poisson approach and, as such, means {{that it can be}} easily programmed in statistical packages with <b>macro</b> <b>programming</b> capabilities. Examples are given of fitting such models and an implementation in the GLIM package is used for illustration. ...|$|R
