432|1|Public
50|$|In his object model, Grady Booch {{mentions}} Abstraction, Encapsulation, <b>Modularisation,</b> and Hierarchy as fundamental {{software design}} principles. The acronym PHAME (Principles of Hierarchy, Abstraction, <b>Modularisation,</b> and Encapsulation) is sometimes {{used to refer}} to these four fundamental principles.|$|E
5000|$|Application (or Component) architecture: The {{internal}} structure, the <b>modularisation</b> of software, {{within an}} application. This is software architecture {{at the lowest}} level of granularity. It is usually below the level of <b>modularisation</b> that solution architects define. However, there is no rigid dividing line.|$|E
50|$|The SASS-C {{software}} re-engineering {{is referred}} to as <b>modularisation</b> and was commenced at the end of 2003. The objective is to have a full evaluation of (?): It consists in migrating upgraded functionality into four different independent suites, interoperable through common interfaces called CSDF (Common Surveillance Data Format).|$|E
50|$|The British Rail Class 58 is a {{class of}} Co-Co diesel {{locomotive}} designed for heavy freight. Introduced in 1983, they followed American practice of <b>modularisation.</b> EWS withdrew them in 2002 after 20 years in service, and 32 were hired abroad - four to the Netherlands, eight to Spain and twenty to France.|$|E
5000|$|The {{system was}} criticised {{at the time}} of {{introduction}} as objections were made to the <b>modularisation</b> of subjects such as English and Art which require an accumulation of critical and productive skills over a full year rather than the passing of discrete modules, which was seen as a system much better suited to scientific subjects. However, strictly speaking, English teaching is not moduralised, given that the internal assessments do not assess fixed blocks of knowledge, as in the sciences, rather, they assess specific skills and can be delivered at different points in the year. The <b>modularisation</b> of the Higher examination and the other qualifications under the [...] "Higher Still" [...] umbrella is also not {{the same as that of}} the English A-level, in which terminal examinations are themselves arranged into modules. Under the Scottish system, the final examination is still essentially synoptic in nature and draw from all units. Additionally, the internal units do not contribute to the grade awarded.|$|E
50|$|The {{prison is}} divided into eight wings (A-H), a {{healthcare}} unit and a Care and Separation unit. Accommodation at the prison consists mostly of single cells, with some double cells. All the cells {{are designed to be}} safer, having almost no ligature points due to <b>modularisation</b> being the method of construction. The Healthcare Unit at Forest bank has a 20-bed in-patient facility, with a 24-hour nursing care service. There is also a full-time Senior Medical Officer and a Locum Medical Officer at the prison.|$|E
50|$|From 2001 to 2011, Colm {{served as}} Professor of International {{business}} at Trinity College. He was elected Dean of the Faculty of Business Economic and Social Studies in 2004. In 2005, Kearney {{was appointed to}} serve as Senior Lecturer (now Chief Academic Officer) of the College. In this role, Colm had direct responsibility for implementing restructuring policies for the university, which were agreed by Council and Board in July 2008. A significant achievement in this role, Colm gained College-wide agreement to synchronise Trinity College Dublin's academic semesters and programme offerings {{in line with the}} Bologna system of <b>modularisation.</b> Since 2012, Colm has been Dean of the Faculty of Business and Economics at Monash University in Melbourne.|$|E
50|$|In around 2010 Siemens has {{a goal of}} {{reducing}} the cost per kilowatt-hour to €0.05 for onshore windpower and to €0.10 for offshore wind by 2020, many of the cost saving mechanisms were based on practice originating in the auto industry. Potential cost reductions included: automation/robotisation of blade manufacture and tailor woven glass fibre mats to reduce to simplify the blade manufacturing process; use of standardised components across product ranges to reduce overall component costs; elimination of geared generator drives to reduce maintenance cost; and <b>modularisation</b> of nacelle design, splitting generator and power conversion into separate modules, {{with the aim of}} additional flexibility in manufacture, and reduced transportation costs due reduced weight of the modules. The company also offered shorter length bolted tower sections allowing container transportation, and simplified mass production.|$|E
5000|$|With {{increased}} <b>modularisation</b> of subjects, {{the amount}} of time that young adults are spending being examined in the UK has risen considerably. It was estimated in a report by educationalists that by the age of 19 children will have spent an entire year of their school education being assessed. As a result of such criticisms about the [...] "burden of assessment", since candidates have taken four papers for most A-levels, instead of six as in the past. This means that there are two modules for AS and two more for A2 for the majority of A levels. However, this will not be the case for all A levels: Biology, Human Biology, Chemistry, Physics, Electronics, Geology, Music, Welsh and Science will continue with six units, three units for AS and A2 respectively, and 600 UMS for the A level. Mathematics (including Further Mathematics, Additional Further Mathematics, Statistics, and the Use of Mathematics AS), will not change structurally in the modular reform; it will stay on 600 UMS (300 UMS for AS), but it will include the new A* grade and the 'Stretch and Challenge' provision. Also, Bengali, Modern Hebrew, Punjabi, Polish, Arabic, Japanese, Modern Greek, Biblical Hebrew, Dutch, Gujarati, Persian, Portuguese, and Turkish will remain at two units, one for AS and one for A2. However, they will move to 200 UMS for A level. Chinese will also move to 200 UMS, but instead of two units, it will move to three units: AS will have two units, A2 will have one. It is the first A level to have an odd number of units since Curriculum 2000.|$|E
40|$|International audienceThe paper summarises {{findings}} from an action research project on <b>modularisation</b> of industrial services. Based on literature about <b>modularisation</b> of physical goods and literature on <b>modularisation</b> of services, several research gaps are highlighted and appropriate approaches discussed. Module drivers addressing <b>modularisation</b> benefits are transferred to services. Interdependencies among service elements are presented. Research gaps on design opportunities of modular service products are addressed and possible analogies from <b>modularisation</b> of physical goods are introduced...|$|E
40|$|<b>Modularisation</b> is the {{predominant}} approach {{used in the}} modern automotive industry to widen the variety of products available in the market place at affordable prices. <b>Modularisation</b> {{has taken place in}} the context of increased global competition in the industry, a trend towards greater outsourcing of both module manufacture and development and greater volatility in consumer demand at the model level. <b>Modularisation</b> is both a strategy and a process. Like all shifts in the organisation of production in the industry there are potential limits to what can be achieved through <b>modularisation.</b> This paper explores some {{the extent to which the}} market itself may impose limitations on what can be achieved via <b>modularisation...</b>|$|E
40|$|The paper {{proposes a}} literature-grounded {{revisited}} definition and ontology of <b>modularisation,</b> which highlight its five distinctive constituents – architecture breakdown, standardisation, interfaces, decision making, life cycle – inserted in an ontological framework also including barriers, enabling factors, methodologies, and effects. The {{discussion of a}} couple of dramatic examples shows the potential of the ontology, which provides a deductive approach to identify possible ways to <b>modularisation,</b> transforms <b>modularisation</b> into a fully operationalisable strategy, and contributes to a paradigm shift in the understanding of <b>modularisation,</b> from a mere design issue to a choice that by nature has consequences on the system whole lifespan...|$|E
40|$|Information systems {{development}} (ISD) outsourcing projects employ <b>modularisation</b> to decompose complex tasks into simpler portions. <b>Modularisation</b> enables better management and control. Adopting a ‘control theory’ perspective, this research explored the mechanisms for managing modularised ISD outsourcing projects effectively. Results are drawn using {{the case study}} method, employing eight modularised ISD outsourcing projects. Results demonstrate that <b>modularisation</b> increases the use of formal controls and decreases the informal clan controls. Further, {{it was found that}} an error in modualrisation creates fluctuations in Business Requirement Specifications...|$|E
30|$|The {{suggested}} PMS structure {{follows the}} objectives identified in Sect.  4.2 and {{the aspect of}} allowing <b>modularisation</b> of the PMS which {{is derived from the}} process perspective. To allow <b>modularisation</b> and aligned PIs on a process level, the following section defines the structure and top-level KPIs.|$|E
40|$|<b>Modularisation</b> {{can reduce}} the effort in {{designing}} and maintaining language specifications. Existing approaches to language <b>modularisation</b> are typically either focused on language syntax or on language semantics. In this paper, we propose a <b>modularisation</b> approach covering both syntax and semantics. We propose defining composition rules {{on the level of}} abstract syntax, making it the central artefact in a language module. To enable clean interfaces for such language modules—effectively making them language components—we use rolemodelling at the metamodel level. We discuss how role-based metamodelling supports the aspectual <b>modularisation</b> of language semantics and can also be integrated with concrete syntax specifications to build self-contained language components. We present the implementation of our approach in the LanGems language compositions system and show how {{it can be used to}} provide a modularised definition of the Object Constraint Language...|$|E
40|$|<b>Modularisation</b> {{is crucial}} to create {{re-usable}} and manageable ontologies. The <b>modularisation</b> is usually performed a posteriori, i. e. after the ontology is developed, and has been applied mainly to well-structured domains. With the increasing popularity of social media, Semantic web technologies are moving towards ill-defined domains that involve cognitively-complex processes carried out by humans and require tacit knowledge (e. g. decisionmaking, sensemaking, interpersonal communication, negotiating, motivating). In such domains, a priori <b>modularisation</b> can enable ontology creation to handle the complexity and the dynamic nature of knowledge. This paper outlines an a priori <b>modularisation</b> methodology for multi-layered development of ontologies in ill-defined domains, including an upper ontology layer, high-level and reusable domain layers, and case-specific layers. The methodology is being applied in several use cases in two EU projects - Dicode and ImREAL...|$|E
40|$|Abstract. <b>Modularisation</b> {{can reduce}} the effort in {{designing}} and maintaining language specifications. Existing approaches to language <b>modularisation</b> are typically either focused on language syntax or on language semantics. In this paper, we propose a <b>modularisation</b> approach covering both syntax and semantics. We propose defining composition rules {{on the level of}} abstract syntax, making it the central artefact in a language module. To enable clean interfaces for such language modules—effectively making them language components—we use rolemodelling at the metamodel level. We discuss how role-based metamodelling supports the aspectual <b>modularisation</b> of language semantics and can also be integrated with concrete syntax specifications to build self-contained language components. We present the implementation of our approach in the LanGems language compositions system and show how {{it can be used to}} provide a modularised definition of the Object Constraint Language. ...|$|E
40|$|<b>Modularisation</b> is an {{increasingly}} common strategy for many companies. However, present literature {{is lacking in}} two respects. First, it tends {{to focus on the}} positive effects of <b>modularisation,</b> disregarding any problems during the <b>modularisation</b> process. Second, it is mostly based on rather simple products, like desks and computers. We identify managerial issues in modularising complex products. Through a four-year in-depth case study at Volvo Car Corporation, we uncovered a number of issues that needed to be dealt with. We synthesise these into three major issues, which needed management attention to be resolved. Managerial implications of our research follows...|$|E
40|$|Submitted in partial {{fulfilment}} of {{the requirements}} for the award {{of the degree of}} Doctor of Philosophy of Loughborough University. This thesis contains product design <b>modularisation</b> and its potential for meeting manufacturing and marketing needs. The premiss is that product manufacturing organisations have failed {{to take advantage of the}} full potential, taking a reactive approach to <b>modularisation</b> within their product architecture and subsequent manufacture. The aims of this thesis are to develop a systems level framework for product and process integration, develop a strcutured methodology for design <b>modularisation</b> and finally, evaluate modularity through case analysis and software modelling...|$|E
40|$|One of {{the core}} ideas of Lean Construction is {{that the process of}} {{designing}} and producing a construction product should progress continuously and create value for both the customer and the delivery team. The hypothesis in this paper is that <b>modularisation</b> has potential as a method for value management. The aim is to describe how <b>modularisation,</b> in a lean context, {{can be used as a}} tool to facilitate the management of internal and external values in industrialised housing. The paper will explore the theory of <b>modularisation</b> and its drivers and examine how the method can promote value management. <b>Modularisation</b> is then explored in practice, using empirical knowledge from the building service systems (HVAC, electricity, etc.) development process at five Swedish multi-storey timber housing producers. The analysis point out the importance of decomposing the <b>modularisation</b> process into a jointly performed industry phase where modules are designed, followed by a company internal product development process that complies to the modules. This paper concludes that it is not the product decomposition into modules that is of importance, rather the process that strives to balance internal and external values. Godkänd; 2008; 20080825 (marlen) Installationssamordnin...|$|E
40|$|Facing {{constantly}} increasing product {{variety and}} changing customer demands, many companies {{have adopted a}} product <b>modularisation</b> strategy to increase strategic flexibility. Despite the dominant view that product <b>modularisation</b> directly increases strategic flexibility, it is argued here that the causal link between product <b>modularisation</b> and strategic flexibility is mediated by specific complementary organisational factors which enable firms with a modular product structure to develop strategic flexibility. Moreover, the interrelationship between product architecture and organisational structure is regarded as reciprocal. That is, product architecture and organisational structure are considered to co-evolve and mutually influence each other. The {{purpose of this paper}} is to elucidate how firms applying a <b>modularisation</b> strategy organise in order to increase the strategic flexibility, and how the organisational structure is interrelated with the product architecture, especially the ability to maintain a modular product architecture over time. Two International automotive companies, both of them implemented a <b>modularisation</b> strategy in the mid- 1990 s, have been studied. From the cases it can be concluded that the alignment of product and organisational architecture, decision-making structures, and the management of knowledge affect a firm's ability to evolve its products and maintain a modular product structure over time...|$|E
40|$|International audienceThis chapter takes {{a closer}} look at the {{difficulties}} of feature-oriented <b>modularisation</b> of product lines and demonstrate how a better <b>modularisation</b> can be achieved with the ECaesarJ programming language, through a type-safe and stable decomposition of a broad spectrum of software abstractions: classes, methods, events, and state machines, based on late binding and mixin composition...|$|E
40|$|Built {{environment}} {{education has}} seen many changes {{over the last}} decade or so. Among these is the modular system, which has promised flexibility and choice. Like most changes to well established systems, <b>modularisation</b> has brought with it compartmentalised learning, duplication of assessment and at times overburdening of students and tutors alike. One way of mitigating the undesirable effects of <b>modularisation</b> is to adopt an integrative approach to teaching, learning and assessment. Even then, <b>modularisation</b> has something to offer. This paper will describe some of the methods adopted in the delivery and assessment of architecture programmes in two UK institutions; Sheffield Hallam University and the Canterbury School of Architecture. The purpose of the paper is not to argue for or against <b>modularisation,</b> nor will it come up with answers in the style of “here is one I prepared earlier”. Instead it will endeavour to raise some issues related to curriculum integration and how this could affect the learning experience of students...|$|E
40|$|Decomposing a hard problem into easier sub-problems (`modularisation') is a {{powerful}} problemsolving technique. <b>Modularisation</b> is often based on expert knowledge {{and can lead to}} efficient high-performance models. Contrasting with this expert-based approach is the approach of machine-learning algorithms such as back-propagation and symbolic inductive-learning algorithms that do not make us of a predetermined modular architecture. We present examples of machine-learned models without modules of problems that are traditionally solved by expertbased <b>modularisation.</b> The machine-learned models perform equally good as or better than the expert-based models. This surprising fact gives rise to the question whether the performance of machine-learned models could be further increased when <b>modularisation</b> is somehow incorporated in the learning algorithms. We describe work in progress on the development of machine learning algorithms that automatically construct modular architectures during learning [...] ...|$|E
40|$|Abstract. The {{principle}} of <b>modularisation</b> {{is one of}} the main techniques that software designers use to tame the complexity of programming. A software project,however,is complex in many other areas than just programming. In this paper,we focus on one of these complex areas,namely software configuration management,and outline how <b>modularisation</b> is natural and powerful also in this context. The analysis is partly based on experiences from case studies where small- to medium-sized development projects are using a prototype tool that supports modular software configuration management. ...|$|E
40|$|Multi-paradigm languages, like CafeOBJ {{provide a}} very {{powerfull}} mechanism for specification of complex systems. <b>Modularisation</b> plays crusial {{role in the}} management of such specifications by improving reusabilty and flexibility, while it optimizes the required time for system development. In this paper we present a general framework based on category theory and institutions supporting <b>modularisation</b> for multi-paradigm languages. 1 Introduction <b>Modularisation</b> is considered a fundamental methodological tool for systems design and management. It can be thought in two styles: ffl the bottom - up approach, that conceives modules as pieces, and the whole system built as a combination of all these pieces, a la mosaic, ffl the top - down approach, that supports the decomposition of the whole system into smaller parts, the modules. Both approaches have been studied extensively in software engineering and have been used in systems design, management and implementation. It is the requirements g [...] ...|$|E
40|$|We formalise, using Category Theory, <b>modularisation</b> {{techniques}} for parallel and distributed systems {{based on the}} notion of superposition, showing that parallel program design obeys the "universal laws" formulated by J. Goguen for General Systems Theory, as well as other algebraic properties of modularity formulated for Specification Theory. The resulting categorical formalisation unifies the different notions of superposition that have been proposed in the literature and clarifies their algebraic properties with respect to <b>modularisation.</b> It also suggests ways of extending or revising existing languages in order to provide higher levels of reusability, modularity and incrementality in system design. 1 Introduction The role of Category Theory in supporting the definition of 'scientific laws' of system <b>modularisation</b> and composition has been recognised since the early 70 s when J. Goguen proposed the use of categorical techniques in General Systems Theory for unifying a variety of notion [...] ...|$|E
40|$|AbstractWe formalise, using Category Theory, <b>modularisation</b> {{techniques}} for parallel and distributed systems {{based on the}} notion of superposition, showing that parallel program design obeys the “universal laws” formulated by Goguen for General Systems Theory, as well as other algebraic properties of modularity formulated for Specification Theory. The resulting categorical formalisation unifies the different notions of superposition that have been proposed in the literature and clarifies their algebraic properties with respect to <b>modularisation.</b> It also suggests ways of extending or revising existing languages in order to provide higher levels of reusability, modularity and incrementality in system design...|$|E
40|$|Abstract. This paper {{proposes a}} set of <b>modularisation</b> {{constructs}} {{as well as a}} new implementation technique for overloading functions across module boundaries. In contrast to existing approaches, it allows to fully preserve separation of namespaces and it supports overloading of recursive functions in the context of subtyping, which in fact requires support for mutual recursion across module boundaries. Based on a very simple applied λ-calculus as core language, the <b>modularisation</b> constructs are defined and a transformation scheme into an applied λ-calculus is presented. Furthermore, an outline of an implementation {{in the context of the}} functional programming language SaC is given. ...|$|E
40|$|Personalization is desirable, but {{writing the}} {{adaptation}} behaviour description {{to go with}} it is taxing. Even more challenging is the application of multiple adaptation strategies over the same static content. This paper focuses on recent work on strategy <b>modularisation</b> and merger development in the authoring process ofadaptive hypermedia. The reason for the <b>modularisation</b> of strategies is to break a complex adaptation decision into a number of simpler ones, which may be reused more easily and applied in different orders. The rationale for strategy merger {{is to be able to}} apply multiple adaptation strategies over the same content - a challenge which is not yet fully addressed in current adaptive hypermedia systems. To demonstrate the proposed method we present an example case study and sample strategies written in the LAG adaptation language. The case study is based on a recently proposed model for Quality of Experience in e-learning. This model exposes the complex interaction between a number of factors affecting QoE and hence presents a good candidate for the application of a strategy merger, as well as <b>modularisation.</b> We have then evaluated this approach via structured questionnaires used with a number of design experts of hypermedia content creation, especially in the domain of education. This allows us to draw generic conclusions for both our own further research, as well as for the community at large, interested in the area of reuse and <b>modularisation</b> of adaptation...|$|E
40|$|A {{comparison}} between the literature and the industry leads to a communicational gap between the two: the potential benefits (together with barriers and enablers) from a <b>modularisation</b> action highlighted by Academics are not effectively communicated to Practitioners. This paper aims at contributing to Practitioners’ awareness, by proposing a methodological tool to support decisions on <b>modularisation</b> actions, barriers- and enablers-aware, that Managers can use to get further understanding on its implementation process and its possible outcomes. The associated decision-making-driven Ontology – on which the tool grounds – can help them to recognise which decision (or set of decisions), {{with regard to the}} <b>modularisation</b> action(s), is the most proper to make in order to achieve a specific/desired impact (Target-driven perspective), or in order to identify the achievable impact considering the current condition of the firm (Context-driven approach). Practical implications of the use of such a tool, based on such an Ontology, are discussed in the last section of the paper, together with the description of a likely implementation process. Finally, some hints of the next research steps are provided...|$|E
40|$|This paper briefly {{describes}} SEASALTexp, {{an extension}} of the application-independent SEASALT architecture (Sharing Experience using an Agent-based explanation-aware System Architecture LayouT), which offers knowledge acquisition from Internet communities, knowledge <b>modularisation,</b> and agent-based knowledge maintenance complemented with agent-based explanation facilities...|$|E
40|$|Bizzi et al (1995)   showed that the motor control of the frog's leg was modular in operation,  by stimulating different areas on the spine, and analysing the force produced by the leg. Wolpert et al (1998)   hypothesise that motor control and internal models are partitioned into output units,  modelling a specific part of a movement,  and can overlap with each other,  creating a {{segmented}} overall model. Gallese et al (1996)   discover the existence of action selective mirror neurons in the premotor cortex,  showing that groups of neurons could be representing a single type of movement,  both in terms of action and recognition. Motor Primitives The superposition of movements implies an underlying <b>modularisation</b> of motor control. This can be generalised by...|$|E
40|$|Investigative work {{carried out}} to {{determine}} a strategy to address modularity as a facilitator for integration of design with manufacture. <b>Modularisation</b> is considered {{in conjunction with a}} large car manufacturer, a company that produce geophysical measuring systems for down hole drilling, and a company that produce electronic scanners for the pre press printing industry. Generic factors are being determined. These factors touch upon the benefits to product and process integration and also areas in which <b>modularisation</b> enables effective product customisation in meeting market needs. The aim, is to pool and document experience that can then be analysed and presented in a more accessible form by providing guidelines / checklists, evaluation tools and a product strategy based on derivatives...|$|E
40|$|Abstract. TTTTheme/UML is an {{existing}} approach to aspect-oriented modelling {{that supports the}} <b>modularisation</b> and composition of concerns, including crosscutting ones, in design. To date, its lack of integration with model-driven engineering (MDE) techniques has limited its benefits across the development lifecycle. Here, we describe our work on facilitating the use of Theme/UML {{as part of an}} MDE process. We have developed a transformation tool that adopts model-driven architecture (MDA) standards. It defines a concern composition mechanism, implemented as a model transformation, to support the enhanced <b>modularisation</b> features of Theme/UML. We evaluate our approach by applying it to the development of mobile, context-aware applications- an application area characterised by many non-functional requirements that manifest themselves as crosscutting concerns. ...|$|E
40|$|A product’s {{lifecycle}} performance (e. g. assembly, outsourcing, {{maintenance and}} recycling) {{can often be}} improved through modularity. However, <b>modularisation</b> under different and often conflicting lifecycle objectives is a complex problem that will ultimately require trade-offs. This paper presents a novel multi-objective modularity optimisation framework; the application of which is illustrated through the <b>modularisation</b> of a car climate control system. Central to the framework is a specially designed multi-objective grouping genetic algorithm (MOGGA) that is able to generate {{a whole range of}} alternative product modularisations. Scenario analysis, using the principles of the analytical hierarchical process (AHP), is then carried out to explore the solution set and choose a suitable modular architecture that optimises the product lifecycle according to the company’s strategic vision...|$|E
