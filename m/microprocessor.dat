10000|5101|Public
5|$|An {{embedded}} <b>microprocessor</b> {{governs the}} overall {{operation of the}} VFD controller. Basic programming of the <b>microprocessor</b> is provided as user-inaccessible firmware. User programming of display, variable, and function block parameters is provided to control, protect, and monitor the VFD, motor, and driven equipment.|$|E
5|$|In December 1974 Bill Gates was {{a student}} at Harvard University and Paul Allen worked for Honeywell in Boston. They saw the Altair 8800 {{computer}} in the January 1975 issue of Popular Electronics and knew it was powerful enough to support a BASIC interpreter. They wanted {{to be the first to}} offer BASIC for the Altair computer, and the software development tools they had previously created for their Intel 8008 <b>microprocessor</b> based Traf-O-Data computer would give them a head start. While their friend, Paul Gilbert, was building the computer, Allen wrote a program that ran on a DEC PDP-10 time-sharing computer that simulated the 8008 system. He also modified DEC's macro assembler to produce the machine code for the 8008 <b>microprocessor.</b> The Traf-O-Data software could be written and debugged before the computer hardware was complete.|$|E
5|$|Itanium-based {{systems have}} been {{produced}} by HP (the HP Integrity Servers line) and several other manufacturers. In 2008, Itanium was the fourth-most deployed <b>microprocessor</b> architecture for enterprise-class systems, behind x86-64, Power Architecture, and SPARC.|$|E
5000|$|For {{a list of}} Socket AM3 Athlon II <b>microprocessors,</b> see: List of AMD Phenom <b>microprocessors</b> ...|$|R
50|$|The Alpha 21364 {{can connect}} {{to as many}} as 127 other <b>microprocessors</b> using two network topologies: shuffle and an 2D torus. The shuffle {{topology}} had more direct paths to other <b>microprocessors,</b> reducing latency and therefore improving performance, but was limited to connecting up to eight <b>microprocessors</b> {{as a result of its}} nature. The 2D torus topology enabled the network to feature up to 128 <b>microprocessors.</b>|$|R
50|$|IBM {{uses the}} DCM and MCM POWER5 <b>microprocessors</b> in its System p and System i server families, in its DS8000 storage server, and as {{embedded}} <b>microprocessors</b> in its high-end Infoprint printers. DCM POWER5 <b>microprocessors</b> {{are used by}} IBM in its high-end IntelliStation POWER 285 workstation. Third-party users of POWER5 <b>microprocessors</b> are Groupe Bull, in its Escala servers, and Hitachi, in its SR11000 computers with up to 128 POWER5+ <b>microprocessors,</b> which have several installations featured in the 2007 TOP500 list of supercomputers. IBM uses the POWER5+ in its System p5 510Q, 520Q, 550Q and 560Q servers.|$|R
5|$|Additionally, some of {{the science}} {{instruments}} and components had their own embedded microprocessor-based control systems. The MATs (Multiple Access Transponder) components, MAT-1 and MAT-2, utilize Hughes Aircraft CDP1802CD microprocessors. The Wide Field and Planetary Camera (WFPC) also utilized an RCA 1802 <b>microprocessor</b> (or possibly the older 1801 version). The WFPC-1 {{was replaced by the}} WFPC-2 during Servicing Mission 1 in 1993, which was then replaced by the Wide Field Camera 3 (WFC3) during Servicing Mission 4 in 2009.|$|E
5|$|Harvard had a DEC PDP-10 {{that was}} {{available}} for student use. They would use it to develop BASIC. While Allen modified their development software for the new 8080 <b>microprocessor,</b> Gates began writing 8080 assembly language by hand on yellow legal pads. They enlisted another Harvard student, Monte Davidoff, to write the math routines.|$|E
5|$|Moore's {{law is the}} {{empirical}} observation {{that the number of}} transistors in a <b>microprocessor</b> doubles every 18 to 24months. Despite power consumption issues, and repeated predictions of its end, Moore's law is still in effect. With the end of frequency scaling, these additional transistors (which are no longer used for frequency scaling) can be used to add extra hardware for parallel computing.|$|E
5000|$|For {{a list of}} Socket FM1 Athlon II <b>microprocessors,</b> see: List of AMD {{accelerated}} {{processing unit}} <b>microprocessors</b> ...|$|R
50|$|In 2008, in Quanta Computer, Inc. v. LG Electronics, Inc., the Supreme Court {{held that}} the sale of {{patented}} <b>microprocessors</b> exhausted the patent monopoly on the <b>microprocessors</b> and also as to patents covering {{the combination of the}} patented <b>microprocessors</b> with other electronic components, where (as in Univis) the essential features of the invention were all contained in the <b>microprocessors,</b> i.e., the sold article embodies the essential features of the patented invention. In this case, Quanta's primary patents were on <b>microprocessors,</b> but it also had patents on products combining the patented <b>microprocessors</b> and other apparently conventional devices, such as PCs.) In so ruling, the Court reversed the judgment of the Federal Circuit holding that the licenses were effective under the Mallinckrodt doctrine.|$|R
40|$|<b>Microprocessors</b> exploit instructionlevel {{parallelism}} and tolerate memory-access latencies {{to achieve}} high-performance. Outof-order <b>microprocessors</b> {{do this by}} dynamically scheduling instruction execution, but require power-hungry hardware structures. Other general-purpose <b>microprocessors,</b> such as the Sun UltraSparc 1 and Intel Itanium, 2 and most embedded <b>microprocessors,</b> avoid such costs, relying instead on the compile-time scheduling of instruction execution. Appropriate instruction set architecture features—large register files, explicit speculation, and predication—help compilers successfully exploit instruction-level parallelism. In th...|$|R
5|$|Super Mario RPG: Legend of the Seven Stars {{is one of}} {{only seven}} SNES games {{released}} outside Japan to use the Nintendo SA-1 chip. Compared with standard SNES games, the additional <b>microprocessor</b> allows higher clock speeds; faster access to the random-access memory (RAM); greater memory mapping capabilities, data storage, and compression; new direct memory access (DMA) modes, such as bitmap to bit plane transfer; and built-in CIC lockout for piracy protection and regional marketing control.|$|E
5|$|The Altair 8800 kit {{came with}} a front panel, a CPU board with the Intel 8080 <b>microprocessor,</b> 256 bytes of RAM, a 4-slot {{backplane}} and an 8-amp power supply for $439. A 1k byte memory board was $176 and the 4k byte was $264. The serial interface board was $124 and the parallel interface was $119. There was a special price for an 8k byte system with BASIC for $995. The Teletype Model 33 ASR was $1500.|$|E
5|$|The game {{features}} amplified monaural {{sound and}} pixel graphics on a CRT monitor. A Motorola 6809 {{central processing unit}} handles the graphics and gameplay, while a Motorola 6800 <b>microprocessor</b> handles the audio. A pack of three AA batteries provide power to save the game's settings and high scores when the machine is unplugged from an electrical outlet. The cabinet artwork is stenciled on the wooden frame.|$|E
50|$|When {{manufactured}} on {{a similar}} process, 8-bit <b>microprocessors</b> use less power when operating and less power when sleeping than 32-bit <b>microprocessors.</b>|$|R
50|$|IBM {{approached}} Apple {{with the}} goal of collaborating on the development of a family of single-chip <b>microprocessors</b> based on the POWER architecture. Soon after, Apple, being one of Motorolas largest customers of desktop-class <b>microprocessors,</b> asked Motorola to join the discussions due to their long relationship, its more extensive experience with manufacturing high-volume <b>microprocessors</b> than IBM, and to form a second source for the <b>microprocessors.</b> This three-way collaboration became known as AIM alliance, for Apple, IBM, Motorola.|$|R
40|$|T he most {{straightforward}} and least expensive {{way to build}} a supercomputer capable of hundreds of T millions of instructions per second is to interconnect {{a large number of}} <b>microprocessors.</b> Supercomputers built by corporations such as Cray Research and Control Data do not use this approach, but rely on very fast components and pipelined operations. However, such machines are quite expensive, and each performance improvement of them is increasingly difficult to achieve. In contrast, the performance of machines consisting of interconnected <b>microprocessors</b> can be significantly improved simply by adding more <b>microprocessors,</b> faster <b>microprocessors,</b> and better interconnections among them. An important consideration for systems made up of interconnected <b>microprocessors</b> is the question of local versu...|$|R
5|$|The main <b>microprocessor</b> is a 16/32-bit Motorola 68000 CPU clocked at 7.6 MHz. The console uses a Zilog Z80 sub-processor, mainly used {{to control}} the sound {{hardware}} and provide backward compatibility with the Master System. The system has 72 kB of RAM, 64 kB of video RAM, and can display up to 61 colors at once from a palette of 512. The games are in ROM cartridge format and inserted in the top.|$|E
5|$|HP {{believed}} that it was no longer cost-effective for individual enterprise systems companies such as itself to develop proprietary microprocessors, so it partnered with Intel in 1994 to develop the IA-64 architecture, derived from EPIC. Intel was willing to undertake a very large development effort on IA-64 in the expectation that the resulting <b>microprocessor</b> would be used by the majority of enterprise systems manufacturers. HP and Intel initiated a large joint development effort with a goal of delivering the first product, Merced, in 1998.|$|E
5|$|In 1989, HP {{determined}} that Reduced Instruction Set Computing (RISC) architectures were approaching a processing limit at one instruction per cycle. HP researchers investigated a new architecture, later named Explicitly Parallel Instruction Computing (EPIC), {{that allows the}} processor to execute multiple instructions in each clock cycle. EPIC implements a form of very long instruction word (VLIW) architecture, in which a single instruction word contains multiple instructions. With EPIC, the compiler determines in advance which instructions can be executed at the same time, so the <b>microprocessor</b> simply executes the instructions and does not need elaborate mechanisms to determine which instructions to execute in parallel.|$|E
50|$|The first <b>microprocessors</b> {{emerged in}} the early 1970s, and were used for {{electronic}} calculators, using binary-coded decimal (BCD) arithmetic on 4-bit words. Other embedded uses of 4-bit and 8-bit <b>microprocessors,</b> such as terminals, printers, various kinds of automation etc., followed soon after. Affordable 8-bit <b>microprocessors</b> with 16-bit addressing also led to the first general-purpose microcomputers from the mid-1970s on.|$|R
5000|$|The {{exhaustion}} doctrine as restated in the Univis {{decision has}} remained a governing principle of United States patent and antitrust law. The Supreme Court relied on Univis in its 2008 decision in Quanta Computer, Inc. v. LG Electronics, Inc. to hold that the sale of patented <b>microprocessors</b> exhausted the patent monopoly including patents covering {{the combination of the}} patented <b>microprocessors</b> with other components, where (as in Univis) the essential features of the invention were all contained in the <b>microprocessors,</b> i.e., the sold article embodies the essential features of the patented invention. (Quanta's primary patents were on <b>microprocessors,</b> but it also had patents on products combining the patented <b>microprocessors</b> and other apparently conventional devices, such as PCs. See exhausted combination doctrine for an explanation of such patents.) ...|$|R
50|$|Compared to RISC <b>microprocessors,</b> the Pentium Pro, when introduced, {{slightly}} outperformed {{the fastest}} RISC <b>microprocessors</b> on integer performance when running the SPECint95 benchmark, but floating-point performance was significantly lower, half of some RISC <b>microprocessors.</b> The Pentium Pro's integer performance lead disappeared rapidly, first overtaken by the MIPS Technologies R10000 in January 1996, {{and then by}} Digital Equipment Corporation's EV56 variant of the Alpha 21164.|$|R
5|$|Inside the case, {{there were}} many more {{similarities}} with the ZX81. Like its successor, it used the Z80A <b>microprocessor</b> and had only 1KB of on-board RAM. It came with a specially written BASIC interpreter on a dedicated ROM chip and could use a television as a display. It relied on an ordinary cassette tape recorder for data storage. The main {{difference between the two}} machines lay in the internal software; when the ZX81 was released, ZX80 owners were able to upgrade by the relatively simple expedient of plugging a new ROM onto the circuit board.|$|E
5|$|The {{invention}} of the transistor in the 1950s, a key active component in practically all modern electronics, led to many technological developments and a significant expansion of the U.S. technology industry. This in turn led {{to the establishment of}} many new technology companies and regions around the country such as Silicon Valley in California. Advancements by American <b>microprocessor</b> companies such as Advanced Micro Devices (AMD), and Intel along with both computer software and hardware companies that include Adobe Systems, Apple Inc., IBM, Microsoft, and Sun Microsystems created and popularized the personal computer. The ARPANET was developed in the 1960s to meet Defense Department requirements, and became {{the first of a series}} of networks which evolved into the Internet.|$|E
5|$|The {{solid-state}} device came {{into its own}} with {{the invention of the}} transistor in 1947. Common {{solid-state device}}s include transistors, <b>microprocessor</b> chips, and RAM. A specialized type of RAM called flash RAM is used in USB flash drives and more recently, solid-state drives to replace mechanically rotating magnetic disc hard disk drives. Solid state devices became prevalent in the 1950s and the 1960s, during the transition from vacuum tubes to semiconductor diodes, transistors, integrated circuit (IC) and the light-emitting diode (LED).|$|E
40|$|Includes bibliographical {{references}} (page 39) The {{objective of}} this project is to study and investigate various <b>microprocessors</b> (??P) and their unique hardware and software characteristics. A rapidly expanding technology on digital electronics field attracts interest to today's <b>microprocessors.</b> When used as replacements for hardwired logic, the <b>microprocessors</b> provide significant economies. The large-scale integration (LSI) chip performs the basic control processing unit (CPU) functions of a computer...|$|R
40|$|Based on operand delivery, {{existing}} <b>microprocessors</b> can {{be categorized}} into architected register file (ARF) or physical register file (PRF) machines, both with or without payload RAM (PL). Though many previous generation <b>microprocessors</b> use a PRF without PL, the trend of newer <b>microprocessors</b> targeting lower power environments seem to be moving towards ARF with PL. We quantitatively analyze power consumption of different machine styles: ARF with PL, ARF without PL, PRF with PL, and PRF only machine. Our result shows that PRF without PL consumes {{the least amount of}} power and is fundamentally the best approach for building poweraware out-of-order <b>microprocessors...</b>|$|R
40|$|When <b>microprocessors</b> {{are used}} in a safety {{critical}} application, the software can be responsible for safety functions. Furthermore, software is also responsible {{for the implementation of}} the Fault Cover Factor, especially hardware faults. In this paper are discussed some important aspects that must be considered in a safety analysis work. Also it’s proposed a methodology to be considered in critical <b>microprocessors</b> applications. 1. Aim <b>Microprocessors</b> technology in safety systems is a complex problem. When <b>microprocessors</b> {{are used in}} a safety critical application, the software can be responsible for safety functions. Furthermore, software is also responsible for the implementation of the Fault Cover Factor, especially hardware faults. Also it’s proposed a methodology to be considered in critical <b>microprocessors</b> applications. Finally it’s presented a safety case study. 2. Conceptual Aspect...|$|R
5|$|Adventure {{was named}} after Colossal Cave Adventure. Robinett began {{designing}} the graphics-based game, loosely based on the text game, on a Hewlett-Packard 1611A <b>microprocessor</b> computer around May to June 1978. Robinett was aware early on that memory use {{was going to be}} critical: Atari 2600 cartridges had room for only 4096 bytes (4 KB) on the cartridge ROM, and 128 bytes for program variables in the 2600's RAM; in contrast, Colossal Cave Adventure took hundreds of kilobytes of memory. The final game used nearly all of the available memory (including 5% of the cartridge storage for Robinett's Easter egg), with 15 unused bytes from the ROM capacity. Robinett credits Ken Thompson, his professor at University of California Berkeley, with teaching him the skills needed to use the limited memory efficiently. Thompson had required his students to learn the C programming language; Robinett carried techniques from that language into his programming of Adventure.|$|E
5|$|The {{developer}} of Sabre Wulf, Ultimate Play the Game, {{had a reputation}} for secrecy. The company rarely gave interviews or revealed details about their internal practices or upcoming games. Little is known about their development process apart from that they used Sage IV computers, preferred to develop for the ZX Spectrum's Z80 <b>microprocessor,</b> and often outsourced development for other platforms, such as those that ran 6502 microprocessors. After releasing Atic Atac at the end of 1983, Ultimate went silent until it ran teaser advertisements for Sabre Wulf in April 1984. The company rarely depicted actual gameplay in their advertisements. They had already prepared Knight Lore, the third game in the Sabreman series, in advance of the character's introduction in Sabre Wulf. Ultimate withheld Knight Lore for about a year because they felt Sabre Wulf would not have sold as well once players saw the former's graphical advancements. Knight Lore subsequently became known as a seminal work in British gaming history and an iconic game of the 1980s for its popularization of the isometric platformer format.|$|E
5|$|The final Computer Space design uses no <b>microprocessor</b> or memory; {{the entire}} {{computer}} {{system is a}} state machine made of 74-series TTL chips, with graphic elements held in diode arrays. The array designs, which Bushnell designed to let him rotate the rocket in 16 directions with only 4 arrays, are {{laid out in the}} shape of the ships, which made it obvious to game operators what would need to be replaced if something broke. The ships themselves are projected on the screen as a pattern of dots, rather than connected lines, and the monitor they are projected on is a General Electric 15-inch black and white television screen, specially modified for the game. The rudimentary artificial intelligence constructed by Bushnell has the enemy ships firing towards the quadrant of the screen that the player's rocket is in, rather than a more complicated tracking algorithm.|$|E
50|$|The Pentium D brand was succeeded on July 27, 2006 by the Core 2 branded line of <b>microprocessors</b> {{with the}} Core {{microarchitecture}} released as dual- and quad-core <b>microprocessors</b> branded Duo, Quad, and Extreme.|$|R
40|$|This is a {{real-time}} robotic controller and simulator {{which is}} a MIMD-SIMD parallel architecture for interfacing with an external host computer and providing {{a high degree of}} parallelism in computations for robotic control and simulation. It includes a host processor for receiving instructions from the external host computer and for transmitting answers to the external host computer. There are a plurality of SIMD <b>microprocessors,</b> each SIMD processor being a SIMD parallel processor capable of exploiting fine grain parallelism and further being able to operate asynchronously to form a MIMD architecture. Each SIMD processor comprises a SIMD architecture capable of performing two matrix-vector operations in parallel while fully exploiting parallelism in each operation. There is a system bus connecting the host processor to the plurality of SIMD <b>microprocessors</b> and a common clock providing a continuous sequence of clock pulses. There is also a ring structure interconnecting the plurality of SIMD <b>microprocessors</b> and connected to the clock for providing the clock pulses to the SIMD <b>microprocessors</b> and for providing a path for the flow of data and instructions between the SIMD <b>microprocessors.</b> The host processor includes logic for controlling the RRCS by interpreting instructions sent by the external host computer, decomposing the instructions into a series of computations to be performed by the SIMD <b>microprocessors,</b> using the system bus to distribute associated data among the SIMD <b>microprocessors,</b> and initiating activity of the SIMD <b>microprocessors</b> to perform the computations on the data by procedure call...|$|R
40|$|Intel’s compilers {{may or may}} not {{optimize}} to the same degree for non-Intel <b>microprocessors</b> for optimizations that are not unique to Intel <b>microprocessors.</b> These optimizations include SSE 2, SSE 3, and SSE 3 instruction sets and other optimizations. Intel does not guarantee the availability, functionality, or effectiveness of any optimization on <b>microprocessors</b> not manufactured by Intel. Microprocessor-dependent optimizations in this product are intended for use with Intel <b>microprocessors.</b> Certain optimizations not specific to Intel microarchitecture are reserved for Intel <b>microprocessors.</b> Please refer to the applicable product User and Reference Guides for more information regarding the specific instruction sets covered by this notice. Notice revision # 20110804 Trademarks Intel, Xeon, and Intel Xeon Phi are trademarks of Intel Corporation in the U. S. and/or other countries. * Other names and brands may be claimed as the property of others...|$|R
