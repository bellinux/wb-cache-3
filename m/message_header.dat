99|127|Public
25|$|All {{applications}} {{have seen}} bugfixes, feature additions and user interface improvements. Dolphin now supports previews of files in toolbars and {{has gained a}} slider to zoom in and out on file item views. It can now also show the full path in the breadcrumb bar. Konqueror offers increased loading speed by prefetching domain name data in KHTML. A find-as-you-type bar improves navigation in webpages. KMail has a new <b>message</b> <b>header</b> list, and reworked attachment view. The KWrite and Kate text editors can now operate in Vi input mode, accommodating those used to the traditional UNIX editor. Ark, the archiving tool has gained support for password-protected archives and is accessible via a context menu from the file managers now. KRDC, the remote desktop client improves support for Microsoft’s Active Directory through LDAP. Kontact has gained a new planner summary and support for drag and drop in the free/busy view. KSnapshot now uses the window title when saving screenshots, {{making it easier to}} index them using search engines.|$|E
2500|$|J2178-1 – Defines {{standards}} for network <b>message</b> <b>header</b> formats and physical address assignments ...|$|E
2500|$|To {{complement}} the burst of activity and interest being generated in DX communications by {{the popularity of}} the International Relay Parties, the ARRL adopted a competitive operating format for events designed for non-international contacts. [...] The first ARRL All-Sections Sweepstakes Contest was started in 1930. [...] The Sweepstakes required a more complicated exchange of information for each two-way contact that was adapted from the <b>message</b> <b>header</b> structure used by the National Traffic System. [...] The competition was immediately popular, both with those operators active in the NTS who participated as an opportunity to gauge the merits of their station and operating skills, and among those for whom the competitive excitement of the event was the primary attraction. [...] The contest, sponsored annually by the ARRL, became known as the ARRL November Sweepstakes in 1962.|$|E
25|$|Long <b>message</b> <b>headers</b> for all NetMail {{programs}} including Internet, Usenet & others.|$|R
5000|$|<b>Message</b> <b>headers</b> can {{be readily}} mapped between MultiSpeak and IEC 61968 but Mapping of message content {{between the two is}} more complex.|$|R
50|$|Authenticated Identity Body or AIB is {{a method}} {{allowing}} parties in a network to share authenticated identity thereby increasing the integrity of their SIP communications. AIBs extend other authentication methods like S/MIME {{to provide a more}} specific mechanism to introduce integrity to SIP transmissions. Parties transmitting AIBs cryptographically sign a subset of SIP <b>message</b> <b>headers,</b> and such signatures assert the message originator's identity. To meet requirements of reference integrity (for example in defending against replay attacks) additional SIP <b>message</b> <b>headers</b> such as 'Date' and 'Contact' may be optionally included in the AIB.|$|R
50|$|An iMail message {{consists}} of three components, the message envelope, the <b>message</b> <b>header,</b> and the message body. The <b>message</b> <b>header</b> contains control information, including, minimally one or more recipient addresses. Usually descriptive information is also added, such as a subject header field and a message submission date/time stamp.|$|E
5000|$|The <b>message</b> <b>header</b> {{must include}} at least the {{following}} fields: ...|$|E
5000|$|Military teletype: Z codes used as routers in <b>message</b> <b>header.</b>|$|E
5000|$|Because all user {{accounts}} and <b>message</b> <b>headers</b> {{are stored in}} the 64's limited RAM, {{which had to be}} shared with the program itself, the program only supported up to nine message areas and nine download file areas. Further limitations include a maximum of 239 {{user accounts}}, and a four-character password length.|$|R
40|$|We present {{methods for}} finding experts (and their contact details) using e-mail {{messages}}. We locate messages on a topic, {{and then find}} the associated experts. Our approach is unsupervised: both the list of potential experts and their personal details are obtained automatically from e-mail <b>message</b> <b>headers</b> and signatures, respectively. Evaluation is done using the e-mail lists in the W 3 C corpus...|$|R
5000|$|In binary form (10101011), the {{preamble}} in a Specific Area <b>Message</b> Encoding <b>header</b> in the Emergency Alert System ...|$|R
5000|$|... #Subtitle level 2: Separation of <b>message</b> <b>header</b> {{and message}} body ...|$|E
50|$|A valid {{example of}} a Smart <b>Message</b> <b>Header,</b> {{expressed}} in hex is 0B0504158200000003010201.|$|E
5000|$|J2178-1 - Defines {{standards}} for network <b>message</b> <b>header</b> formats and physical address assignments ...|$|E
50|$|Properly configured, Proxomitron {{intercepts}} HTTP traffic {{between the}} user's browser and web servers. The program {{is capable of}} altering web page content by removing or adding text. Additionally, it can add, modify, or delete HTTP <b>message</b> <b>headers,</b> be configured to block connections or redirect requests based on the web page address, and be configured to route connections through a remote proxy. The user can monitor connections and filter activations, if desired.|$|R
5000|$|Domain-based Message Authentication, Reporting and Conformance (DMARC) is an email-validation system {{designed}} to detect and prevent email spoofing. It is intended to combat certain techniques often used in phishing and email spam, such as emails with forged sender addresses that appear to originate from legitimate organizations. Specified in RFC 7489, DMARC counters the illegitimate usage of the exact domain name in the [...] field of email <b>message</b> <b>headers.</b>|$|R
5000|$|... #Caption: An HTTP 1.1 request {{made using}} telnet. The request <b>message,</b> {{response}} <b>header</b> section, and response body are highlighted.|$|R
5000|$|RFC 5293 - Editheader; {{allows a}} script to add and delete <b>message</b> <b>header</b> fields.|$|E
50|$|Encrypting the {{communications}} between mail servers {{to protect the}} confidentiality of both message body and <b>message</b> <b>header.</b>|$|E
50|$|FLIP uses {{a bit in}} the <b>message</b> <b>header</b> {{to request}} {{transmission}} of sensitive messages across trusted networks.|$|E
50|$|Bogofilter is a {{mail filter}} that classifies e-mail as spam or ham (non-spam) by a {{statistical}} analysis of the <b>message's</b> <b>header</b> and content (body). The program is able {{to learn from the}} user's classifications and corrections. It was originally written by Eric S. Raymond after he read Paul Graham's article A Plan for Spam and is now maintained together with a group of contributors by David Relson, Matthias Andree and Greg Louis.|$|R
40|$|This {{specification}} {{extends the}} Internet Message Access Protocol (IMAP) to support UTF- 8 encoded international characters in user names, mail addresses, and <b>message</b> <b>headers.</b> This specification replaces RFC 5738. Status of This Memo This is an Internet Standards Track document. This document {{is a product}} of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
50|$|Radiogram forms {{facilitate}} a standard protocol between amateur radio operators, allowing much faster relay of formal messages. They {{do this by}} always having the <b>message</b> <b>headers</b> in a certain order, allowing operators to read and understand the headers without explicit verbal labels. This is especially important in hectic and stressful environments such as during a disaster, when many parties call upon radio operators to quickly transfer messages {{in and out of}} the affected areas.|$|R
5000|$|... next payload: type of {{the first}} payload after the <b>message</b> <b>header</b> as KINK_DONE, KINK_AP_REQ, KINK_AP_REP, KINK_KRB_ERROR, KINK_TGT_REQ, KINK_TGT_REP, KINK_ISAKMP, KINK_ENCRYPT, or KINK_ERROR ...|$|E
50|$|X-No-Archive, {{also known}} colloquially as xna, is a {{newsgroup}} <b>message</b> <b>header</b> field {{used to prevent}} a Usenet message from being archived in various servers.|$|E
5000|$|In a <b>message</b> <b>header,</b> an address, i.e., {{group of}} characters, that {{specifies}} routing {{instructions for the}} transmission of the message to its final destination.|$|E
40|$|We {{show how}} {{layering}} in communication software violates {{the principle of}} separating concerns. Examples illustrate that layering couples receiver-and sender functions, sharing <b>message</b> <b>headers</b> among layers creates dependencies between layers that largely compromise re-usability, QoS management is scattered over all layers, and layers are tightly coupled with the sub-system that executes it. Layering hence leads often to large and hardly re-usable modules, tangles possibly independent parts of code, and makes imple-mented protocols difficult and error-prone to extend. I...|$|R
50|$|Oddpost {{created an}} {{interface}} {{much like the}} traditional 3-pane view used by many desktop software applications (namely Microsoft Outlook, Apple's Mail, Microsoft Entourage, Mozilla Thunderbird, and others).Oddpost also had the design philosophy of making the interface invisible, where unread <b>message</b> <b>headers</b> were bolded, {{so there was no}} need for an unread message icon next to each message; sub folders were indented under the parent, so {{there was no need for}} a little ant trail connecting each folder.|$|R
50|$|Messages {{forwarded}} {{through an}} email alias retain the original SMTP envelope sender and recipient. If {{the message is}} a blind carbon copy, the recipient can only tell whether the message was forwarded through the alias by examining the <b>message</b> <b>headers.</b> However, the standard does not mandate mentioning the envelope recipient in the headers. Therefore, recipients of a message {{may not be able}} to recover what email address has been used by the sender to eventually deliver the message to their mailbox.|$|R
50|$|Internet email {{messages}} {{consist of}} two major sections, the <b>message</b> <b>header</b> and the message body, collectively known as content. The header is structured into fields such as From, To, CC, Subject, Date, and other information about the email. In the process of transporting email messages between systems, SMTP communicates delivery parameters and information using <b>message</b> <b>header</b> fields. The body contains the message, as unstructured text, sometimes containing a signature block at the end. The header is separated from the body by a blank line.|$|E
5000|$|RFC 2047 {{amended by}} RFC 2231, {{defining}} {{a mechanism to}} allow non-ASCII characters to be encoded in text portions of a <b>message</b> <b>header</b> (but not in email addresses); ...|$|E
5000|$|On {{first sight}} {{the use of}} 50% of the CAN message payload for {{purposes}} other than transmitting operational data {{may seem like a}} waste of bandwidth. However, the CANaerospace <b>message</b> <b>header</b> delivers valuable information which would require the use of message payload bytes also when realized otherwise: The header allows receiving stations to analyze received messages immediately with respect to origin, data type, integrity and creation time. To accomplish this, no further information except the knowledge of the CAN identifier assignment for the particular system is needed. The <b>message</b> <b>header</b> bytes have the following meaning: ...|$|E
5000|$|The {{well-known}} mass-mailing [...] macro {{computer virus}} called the [...] "Melissa virus" [...] was originally distributed via the alt.sex newsgroup. It was hidden inside a list purporting to contain passwords to pornographic websites. The messages containing the virus were posted with <b>message</b> <b>headers</b> {{claiming that the}} post had been written using the America Online (AOL) account of Scott Steinmetz, whose username was [...] "skyroket". Kizza reports that the headers on the post were probably forged by Melissa's author, David L. Smith.|$|R
50|$|The data {{returned}} from the query is also a list of tag-value pairs. It includes the domain's public key, along with other key usage tokens and flags. The receiver can use this to then decrypt the hash value in the header field {{and at the same}} time recalculate the hash value for the mail <b>message</b> (<b>headers</b> and body) that was received. If the two values match, this cryptographically proves that the mail was signed by the indicated domain and has not been tampered with in transit.|$|R
5000|$|Moreover, yEnc adds {{a few new}} flaws of its own. It {{attempts}} to turn unstructured fields into structured ones, which is unreliable, given that no constraints can be placed upon the unstructured use of the fields by non-yEnc uses. Most notably, the subject line of the message is supposed to contain the string [...] "yEnc", the filename, and the part number. (The yEnc homepage chastises yEnc article posters for themselves not observing these constraints.) MIME places all such information in the <b>message</b> <b>headers,</b> which is far more reliable.|$|R
