8|45|Public
2500|$|The command {{selection}} <b>menu</b> <b>input</b> system, {{where the}} player chooses from a menu list of commands either through keyboard shortcuts or scrolling down the menu, {{was introduced in}} 1983, and would largely replace the verb-noun parser input method over the years. The earliest known title to use the command selection menu system was the Japanese adventure game Spy 007 (スパイ00.7), published in April 1983, and it was followed soon after by several other Japanese adventure games in 1983. These included the eroge title Joshiryo Panic, authored by Tadashi Makimura and published by Enix for the FM-7 in June and slightly earlier for the FM-8; Atami Onsen Adventure (熱海温泉アドベンチャー), released by Basic System (ベーシックシステム) in July for the FM-7 and slightly earlier for the PC-8001; Planet Mephius, released in July; and Tri-Dantal (トリダンタル), authored by Y. Takeshita and published by Pax Softnica for the FM-7 in August. The game that popularized the command selection system was the 1984 adventure game [...] (Okhotsk ni Kiyu: Hokkaido Chain Murders), designed by Yuji Horii (his second mystery adventure game after Portopia) and published by ASCII for the PC-8801 and PC-9801. Its replacement of the traditional verb-noun text parser interface with the command selection menu system {{would lead to the}} latter becoming a staple of adventure games as well as role-playing games (through Horii's 1986 hit Dragon Quest in the latter case).|$|E
5000|$|During the {{software}} development cycle, programmers make frequent changes to source code. When using a compiler, {{each time a}} change is made to the source code, they must wait for the compiler to translate the altered source files and link all of the binary code files together before the program can be executed. The larger the program, the longer the wait. By contrast, a programmer using an interpreter does a lot less waiting, as the interpreter usually just needs to translate the code being worked on to an intermediate representation (or not translate it at all), thus requiring much less time before the changes can be tested. Effects are evident upon saving the source code and reloading the program. Compiled code is generally less readily debugged as editing, compiling, and linking are sequential processes {{that have to be}} conducted in the proper sequence with a proper set of commands. For this reason, many compilers also have an executive aid, known as a Make file and program. The Make file lists compiler and linker command lines and program source code files, but might take a simple command line <b>menu</b> <b>input</b> (e.g. [...] "Make 3") which selects the third group (set) of instructions then issues the commands to the compiler, and linker feeding the specified source code files.|$|E
50|$|The command {{selection}} <b>menu</b> <b>input</b> system, {{where the}} player chooses from a menu list of commands either through keyboard shortcuts or scrolling down the menu, {{was introduced in}} 1983, and would largely replace the verb-noun parser input method over the years. The earliest known title to use the command selection menu system was the Japanese adventure game Spy 007 (スパイ00.7), published in April 1983, and it was followed soon after by several other Japanese adventure games in 1983. These included the eroge title Joshiryo Panic, authored by Tadashi Makimura and published by Enix for the FM-7 in June and slightly earlier for the FM-8; Atami Onsen Adventure (熱海温泉アドベンチャー), released by Basic System (ベーシックシステム) in July for the FM-7 and slightly earlier for the PC-8001; Planet Mephius, released in July; and Tri-Dantal (トリダンタル), authored by Y. Takeshita and published by Pax Softnica for the FM-7 in August. The game that popularized the command selection system was the 1984 adventure game Okhotsk ni Kiyu: Hokkaido Rensa Satsujin Jiken (Okhotsk ni Kiyu: Hokkaido Chain Murders), designed by Yuji Horii (his second mystery adventure game after Portopia) and published by ASCII for the PC-8801 and PC-9801. Its replacement of the traditional verb-noun text parser interface with the command selection menu system {{would lead to the}} latter becoming a staple of adventure games as well as role-playing games (through Horii's 1986 hit Dragon Quest in the latter case).|$|E
40|$|ACARA (Availability, Cost, and Resource Allocation) is a {{computer}} program which analyzes system availability, lifecycle cost (LCC), and resupply scheduling using Monte Carlo analysis to simulate component failure and replacement. This manual was written to: (1) explain how to prepare and enter input data for use in ACARA; (2) explain the user interface, <b>menus,</b> <b>input</b> screens, and input tables; (3) explain the algorithms used in the program; and (4) explain each table and chart in the output...|$|R
50|$|KOM {{is a type}} of BBS, with a text-based (as {{opposed to}} a <b>menu</b> based) <b>input</b> system. The first was QZ KOM, but soon others imitated the user interface.|$|R
40|$|AUTOCASK (AUTOmatic Generation of 3 -D CASK models) is a micro{{computer}}-based {{system of}} computer programs and databases {{developed at the}} Lawrence Livermore National Laboratory (LLNL) for the structural analysis of shipping casks for radioactive material. Model specification is performed on the microcomputer, and the analyses are performed on an engineering workstation or mainframe computer. AUTOCASK is based on 80386 / 80486 compatible microcomputers. The system is composed {{of a series of}} <b>menus,</b> <b>input</b> programs, display programs, a mesh generation program, and archive programs. All data is entered through fill-in-the-blank input screens that contain descriptive data requests...|$|R
40|$|The paper {{presents}} the HydroHillChart - Pelton module application, {{used to calculate}} the hill chart of the Pelton hydraulic turbine models, by processing the data measured on the stand. In addition, the tools offered by the application such as: interface, <b>menu,</b> <b>input</b> data, numerical and graphical results, etc. are described...|$|E
40|$|Any {{gastrointestinal}} {{disease in}} humans {{has a different}} disease in both the symptomsand treatment of complaints suffered by patients, {{as well as with}} the explanation adifferent disease, suffered by the patient (a person) is. To find out the initial suspicion of the disease, the author tries to make the applicationDiagnose Disease In Human Digestion using Visual Basic 6. 0. Discussion on Application Diagnose Disease In Human Digestion This Divided intofive namely, Making Flowchart, Display <b>Menu,</b> <b>Input</b> and Output Design andDevelopment program with Visual Basic 6. ...|$|E
40|$|In {{this paper}} {{we present a}} method for rule based {{knowledge}} representation. The proposed approach is inspired from Finite Automata (FA). The inspired FA diagrams are easily used to represent rule-based system {{and make it more}} reliable structure in large complicated systems. One of the major additions that gives the proposed structure its significance is that it can represent the rules such that else case, the user text input or user <b>menu</b> <b>input,</b> and the relation and sequence of inputs are considered. The proposed diagram is called (RKRFA) ...|$|E
5000|$|... macOS {{provides}} a [...] "character palette" [...] with {{much the same}} functionality, along with searching by related characters, glyph tables in a font, etc. It can be enabled in the <b>input</b> <b>menu</b> in the menu bar under System Preferences → International → <b>Input</b> <b>Menu</b> (or System Preferences → Language and Text → Input Sources) or can be viewed under Edit → Emoji & Symbols in many programs.|$|R
5000|$|Toolbar - a {{graphical}} {{control element}} on which on-screen buttons, icons, <b>menus,</b> or other <b>input</b> or output elements are placed ...|$|R
50|$|The Apple Wireless Keyboard is {{supported}} on the 2nd generation Apple TV and later using the built-in Bluetooth. The consumer {{has the ability to}} control media playback, navigate <b>menus</b> and <b>input</b> text and other information. Third-party keyboards that use the Apple layout may also be compatible.|$|R
40|$|Lacks is a Tier 1 {{automotive}} supplier. They {{have multiple}} manufacturing plants located {{in many different}} counties and states. There {{is a need to}} create a browser based plant metric reporting application based on Microsoft IIS 5. 0 server. This project uses the. Net framework to provide a multi-tier application that can be used on the corporate Intranet. The application is coded in C# and uses ADO. Net to interact with the database. Currently there are log on, <b>menu,</b> <b>input,</b> and report screens. The use of cookies maintains the current user information and communication between screens. This application will go a long ways towards decreasing the strain on the network that the current metrics application places on the corporate intranet...|$|E
40|$|A {{clinic is}} {{a health care}} {{facility}} that provides personal heatlh treatment. The clinic used in this research have problems in registration, finance and pharmacy divisions. The registration division has duplicates of patients data and it takes time for officers to find those data. The Finance division periodic reports are too simple and the pharmacy division have to record everything in a book so its hard to oversee how much medicine is left or how much is used {{in a period of}} time. These problems are caused by inadequat information system. The purpose of this research is to develop a computer-based information system using rapid action development method. This is a qualitative development research. Information network is developed in accordance to the problems of registration, finance and pharmacy divisions. The subjects of this research are the user of the system which includes a single staff for each divisions. The devepment of the system uses the Rapid Application Development (RAD) method while the evaluation of the results uses End User Computing (EUC). RAD includes user needs assessment, design and implementation. EUC evaluates the conent, accuracy, format, timeliness and user compatibility. The results of this research is a information system that have <b>menu,</b> <b>input</b> form in each section of clinic, database and report on each section. shows that the information system is applied in the clinic. After the system was developed, it was evaluated according to each users. While the pharmacy division cannot be evaluated because of retirement, evaluations of the other two divisions sows that this system has provided adequat information prcessing and is ready to be used...|$|E
40|$|SCANS (Shipping Cask ANalysis System) is a micro{{computer}}-based {{system of}} computer programs and databases {{developed at the}} Lawrence Livermore National Laboratory (LLNL) for evaluating safety analysis reports on spent fuel shipping casks. SCANS is an easy-to-use system that calculates the global response to impact loads, pressure loads and thermal conditions, providing reviewers with an independent check on analyses submitted by licensees. SCANS is based on microcomputers compatible with the IBM-PC family of computers. The system is composed {{of a series of}} <b>menus,</b> <b>input</b> programs, cask analysis programs, and output display programs. All data is entered through fill-in-the-blank input screens that contain descriptive data requests. Analysis options are based on regulatory cases described in the Code of Federal Regulations 10 CFR 71 and Regulatory Guides published by the US Nuclear Regulatory Commission in 1977 and 1978...|$|R
5000|$|... #Caption: Screenshot of GIMP 2.8 - GTK+ is {{responsible}} for managing the interface components of the program, including the <b>menus,</b> buttons, and <b>input</b> fields.|$|R
40|$|CASKS (Computer Analysis of Storage casKS) is a micro{{computer}}-based {{system of}} computer programs and databases {{developed at the}} Lawrence Livermore National Laboratory (LLNL) for evaluating safety analysis reports on spent-fuel storage casks. The bulk of the complete program and this user`s manual are based upon the SCANS (Shipping Cask ANalysis System) program previously developed at LLNL. A number of enhancements and improvements {{were added to the}} original SCANS program to meet requirements unique to storage casks. CASKS is an easy-to-use system that calculates global response of storage casks to impact loads, pressure loads and thermal conditions. This provides reviewers with a tool for an independent check on analyses submitted by licensees. CASKS is based on microcomputers compatible with the IBM-PC family of computers. The system is composed of a series of <b>menus,</b> <b>input</b> programs, cask analysis programs, and output display programs. All data is entered through fill-in-the-blank input screens that contain descriptive data requests...|$|R
40|$|CARE 3 <b>MENU</b> generates <b>input</b> {{file for}} CARE III program. Used to predict reliabilities of complex, redundant, {{fault-tolerant}} systems, including digital computers, aircraft, and nuclear and chemical control systems. CARE III input file often becomes complicated and not easily formatted with text editor. Provides easy interactive method of creating input file by automatically formatting set of user-supplied inputs for CARE III system. CARE 3 MENU provides detailed online help {{for most of}} its screen formats...|$|R
40|$|The paper {{presents}} the Hydro Hill Chart - Francis module application, {{used to calculate}} the hill chart of the Pelton, Francis and Kaplan hydraulic turbine models, by processing the data measured on the stand. After describing the interface and <b>menu,</b> the <b>input</b> data is graphically presented and the universal characteristic for measuring scenarios ao=const. and n 11 =const is calculated. Finally, the two calculated hill charts are compared through a graphical superimposition of the isolines...|$|R
40|$|A {{variety of}} {{features}} {{that support the}} generation and manipulation of graphical objects and images in C Language Integrated Production System (CLIPS) are described. These features provide the CLIPS programmer {{with the ability to}} develop an enhanced user interface. Windows and objects within the windows can be created, hidden, redisplayed, given new values, properties, or positions and manipulated in various other ways. Menus can be generated for any window or object and displayed when desired. Interaction with the user is primarily via mouse movements and mouse button selections made over windows, items, or <b>menus.</b> User <b>input</b> is recorded in the form of fact assertions. Limited animation of objects is also supported...|$|R
40|$|This paper {{proposed}} {{combination of}} Iconix Process and Technique For Others Reference by Similarity to Ideal Solution (TOPSIS) an application method {{to create a}} healthy menu meeting the nutritional needs of the family. Iconix Process {{was used as an}} approach in application development. While TOPSIS method was used as a tool in providing some healthy alternative <b>menu’s</b> with <b>input</b> criteria that was the usual allocation menu, the type of menu materials, the desired portion, and the number of menu combinations. The combination of the two methods produced an application that was able to provide an alternative solution in determining a healthy diet and nutritional needs...|$|R
5000|$|In {{the classic}} Mac OS and macOS {{operating}} systems, the degree symbol can be entered by typing [...] One {{can also use}} the Mac OS character palette, which is available in many programs by selecting Special Characters from the Edit Menu, or from the <b>Input</b> <b>Menu</b> (flag) icon on the menu bar (enabled in the International section of the System Preferences).|$|R
40|$|We {{describe}} &quot;marking menus&quot;, {{an extension}} of &quot;pie menus &quot; which makes. Pie menus are circular menus subdivided into sectors, each of which might correspond to a different command. Marking menus are pie menus in which {{the path of the}} cursor leaves an ink trail. Thus, selecting a sector from a marking menu creates a visual mark similar to a pen stroke on paper. Marking menus are also unique in that they ease the transition from novice to expert user. Novices can “pop-up ” a menu and make a selection, whereas experts can simply make the corresponding mark without waiting for the menu to appear. This paper describes an experiment designed to explore both articulatory and cognitive aspects of pie and marking menus. &quot;Articulatory aspects &quot; refers to how well subjects could execute the physical actions necessary to select from pie menus, given three different kinds of input devices (mouse, trackball, and stylus), and as the number of items in the menu increases. Articulatory aspects were investigated by presenting one group of subjects with the task of selecting from fully visible or &quot;exposed &quot; menus. To investigate the cognitive aspects, two other groups of subjects used invisible or &quot;hidden &quot; pie menus: one group with an ink trail, and one without. In order for marking menus to work effectively, users must be able to mentally represent and associate Selection from hidden menus was designed to reveal Both number of slices per <b>menu</b> and <b>input</b> device were systematically varied. We discuss the findings with respect to <b>menu</b> size, <b>input</b> device, analysis of markings used, and learning. 2 1...|$|R
40|$|A {{software}} system design is proposed and demonstrated with pilot-project software. The system permits the Apple II microcomputer {{to be used}} for personalized computer-assisted instruction in the digital image processing of LANDSAT images. The programs provide data <b>input,</b> <b>menu</b> selection, graphic and hard-copy displays, and both general and detailed instructions. The pilot-project results are considered to be successful indicators of the capabilities and limits of microcomputers for digital image processing education...|$|R
40|$|Electronic system acquires, {{controls}} processing of, {{and displays}} data from experiments on propagation of phase-coherent radio signals at frequencies of 12, 20, and 30 GHz. Acquisition equipment coordinates flow {{of data from}} multiple input channels to computer. Software provides for multi-tasking and for interactive graphical displays, including easy-to-use windows and pulldown <b>menus</b> with mouse <b>input.</b> Offers outstanding accuracy; acquires and displays data and controls associated equipment, all in real time...|$|R
50|$|Depending on the {{particular}} implementation, a search box may {{be accompanied by a}} drop-down list to present the users with past searches or search suggestions. Search boxes may have other features to help the user, such as autocomplete, search suggestions, a spelling checker, etc. Search boxes are often also accompanied by drop-down <b>menus</b> or other <b>input</b> controls to allow the user to restrict the search or choose what type of content to search for.|$|R
40|$|Unpublished. CADLINE has {{abstract}} only. This dissertation {{is concerned}} with developments in design decision methodologies applied to computer-aided design. The major aim {{of this research was}} to design and develop a knowledge-based computer-aided optimization system that has the ability to emulate some of the human performances in design decision processes. The issues and problems involved in developing a knowledge-based system for design optimization are addressed. A knowledge-based methodology to aid design optimization formulation is investigated. The major issues considered include representation of design description, the variety of knowledge required for the formulation process, recognizing optimization formulations, and selection of appropriate algorithms. It is demonstrated that the knowledge-based control of numerical processes leads to efficient and improved decisions in design. In developing knowledge-based systems for computer-aided decision applications an effective human-machine interface is essential. A model for knowledge-based graphical interfaces is proposed. This model incorporates knowledge for graphics interpretation, extraction of features of graphics objects and identification of prototypical objects. An experimental system developed in Prolog and C is demonstrated in the domain of structural design. The system shows one way of combining knowledge-based systems technology with computer graphics and indicates how knowledge-based interfaces improve the system's interactive capabilities. Finally, the system, OPTIMA, is presented. The system is designed as an integrated knowledge-based decision system using frames, rule bases, <b>menu</b> <b>inputs,</b> algebraic computation and optimization algorithms. The system has been written in LISP, Prolog and C and implemented on SUN Microsystems workstations. The performance of the system is demonstrated using two example problems from the domains of structural and architectural design respectively. The knowledge-based approach to design optimization is shown to be considerably easier and more efficient than those using conventional programs. ...|$|R
50|$|MWM is a {{lightweight}} window manager, having robust compliance and {{configuration of the}} features it has. MWM first appeared on in the early-1980s, along with the Motif toolkit. MWM supports: Common User Interface (i.e., Alt-Tab is switch windows, a standard), some International support, Common Desktop Environment, X Resource Database (/home/app-defaults/ and runtime), X Session Manager protocol, X Edited Resource Protocol (edit widget data), desktop icons, optional use of images to decorate, and had supported Virtual desktop (removed since 2.1) but now supports non-virtual desktop panning. MWM is a window manager, not a full desktop environment, so it only manages windows; {{it is expected that}} configuration, programs, sound, are provided by other programs. A plain text file is parsed to customize <b>menus,</b> user <b>input</b> mappings, management features, and user made functions of the same.|$|R
40|$|There {{are many}} {{building}} simulation {{programs on the}} market that calculate the annual energy use for a facility. These programs are difficult to for use in energy conservation projects. The designer must run a complete simulation for each intended design or systems modification. This can be time consuming and expensive. This report describes a program that performs an energy analysis {{in a way that}} is much more convenient for the energy analyst. Several common conservation projects are featured in the program: tinting glass, single-to-double pane conversion, adding roof insulation, savings from landscape features, external wall shading and reduction in outside air. Each of these are evaluated in a separate building load subroutine. The program computes and displays the annual load profile for each of these components of the envelope. It can then calculate the exact savings possible, for example, by modifying south-facing window, or by planting fast-growing shade trees to the west of the building. This is to permit the user to focus limited funds on specific projects. The analysis takes into account geographic location, ambient temperature and latitude. It also permits the user to modify these parameters to conform to unique local conditions. The software will rotate a building as well, to discern the effect on loads of a change in building orientation. Another feature is the ability to separate the building load by specific elements. Each screen used to input glass, roof, wall or floor data also gives a reading on the load attributed to that particular element alone, (e. g. each individual wall, window or roof section) converted into annual energy use. This is useful to the designer as it gives a relative perspective on the building load, of changes in insulation, glass area or wall color. The program is complete with help screens, pull-down <b>menus,</b> <b>input</b> help and range constraints on data entry. It also has a full range of data editing review and print-out features...|$|R
5000|$|On the BRAVIA TVs {{that have}} the XMB, the BRAVIA version of the XrossMediaBar {{includes}} seven categories of options. These include: Settings, Photo, Music, Video, Digital, Analogue, and External Inputs. The BRAVIA XMB menu works similarly to the in-game XMB menu on the PS3, except with the [...] "Home" [...] button instead. Therefore, it lacks a background and is not BRAVIA's start up menu. Like the PSP and PS3, it {{has the ability to}} perform system updates and access the user's music and video on the TV. Unique to the BRAVIA XMB however, is the ability to view digital channel information just by scrolling through the items on the <b>menu.</b> Although <b>inputs</b> can be instantly selected through the TV, XMB also handles the devices plugged into the TV along with the TV channels. Analogue channels, unlike digital channels, do not display channel information on the XMB.|$|R
30|$|The {{simulation}} {{procedure was}} started by dividing the MAIWF domain into a suitable grid pattern on which all the input items are performed via <b>input</b> <b>menus.</b> The total surface area of the model domain reaches 3, 600  km 2 (60  km in length and 60  km in width). The computational grid for the aquifer domain {{in the study area}} is divided into 3, 600 cells (60 columns and 60 rows). The dimension of the cell nodes reaches 1, 000  m for the cultivated and reclaimed areas (Fig.  3, right).|$|R
40|$|In {{this paper}} we give a {{preliminary}} description of an experimental system, currently named MathBrush, {{for working with}} mathematics using pen-based devices. The system allows a user to enter mathematical expressions with a pen and to then do mathematical computation using a computer algebra system. The system provides a simple and easy way for users to verify the correctness of their handwritten expressions and, if needed, to correct any errors in recognition. Choosing mathematical operations is done making use of context <b>menus,</b> both with <b>input</b> and output expressions. Key words: PC-tablets, Pen-based input, Maple...|$|R
40|$|NLEdit is {{a generic}} {{graphical}} user interface for the preprocessing of Fortran namelist input files. The interface consists of a menu system, a message window, a help system, and data entry forms. A form is generated for each namelist. The form has an input field for each namelist variable along with a one-line description of that variable. Detailed help information, default values, and minimum and maximum allowable values can all be displayed via <b>menu</b> picks. <b>Inputs</b> are processed through a scientific calculator program that allows complex equations to be used instead of simple numeric inputs. A custom user interface is generated simply by entering information about the namelist input variables into an ASCII file. There {{is no need to}} learn a new graphics system or programming language. NLEdit {{can be used as a}} stand-alone program or as part of a larger {{graphical user interface}}. Although NLEdit is intended for files using namelist format, it can be easily modified to handle other file formats. ...|$|R
50|$|CADDS3 was {{introduced}} in the late 1970s on the CGP80 and CGP100 using Tektronix storage tube vector devices as display terminals and graphics tablets with <b>menus</b> for operator <b>input.</b> CADDS3 was written in Fortran and based on software developed by Patrick Hanratty and acquired from S3 Corporation around 1973. In 1975, Computervision introduced an improved database that allowed additional entities and data types to be introduced easily. Other improvements, including a B-spline package and improved refresh performance led to adoption by many large customers, including Boeing, which purchased dozens of systems for the 757/767 aircraft program.|$|R
50|$|In {{computer}} interface design, a toolbar (originally {{known as}} ribbon) is a graphical control element on which on-screen buttons, icons, <b>menus,</b> or other <b>input</b> or output elements are placed. Toolbars {{are seen in}} many types of software such as office suites, graphics editors and web browsers. Toolbars are usually distinguished from palettes by their integration into {{the edges of the}} screen or larger windows, which results in wasted space if too many underpopulated bars are stacked atop each other (especially horizontal bars on a landscape oriented display) or interface inefficiency if overloaded bars are placed on small windows.|$|R
50|$|Microsoft is distributing its novel Windows-based {{platform}} Microsoft Surface (now Microsoft PixelSense) since 2009. Beside multi-touch {{tracking of}} fingers, the platform supports {{the recognition of}} physical objects by their footprints. Several applications, mainly for the use in commercial space, have been presented. Examples range from designing an own individual graphical layout for a snowboard or skateboard to studying {{the details of a}} wine in a restaurant by placing it on the table and navigating through <b>menus</b> via touch <b>input.</b> Interactions such as the collaborative browsing of photographs from a handycam or cell phone that connects seamlessly once placed on the table are also supported.|$|R
