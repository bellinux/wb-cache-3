221|23|Public
25|$|WebKit {{is used as}} the {{rendering}} engine within Safari and was formerly used by Google's Chrome web browser on Windows, macOS, iOS, and Android before version 4.4 KitKat (Chrome used only WebCore, and included its own JavaScript engine named V8 and a <b>multiprocess</b> system). Other applications on macOS make use of WebKit, such as Apple's e-mail client Mail and the 2008 version of Microsoft's Entourage personal information manager, both of which make use of WebKit to render e-mail messages with HTML content.|$|E
5000|$|... “How to Make a Multiprocessor Computer That Correctly Executes <b>Multiprocess</b> Programs”, which {{defined the}} notion of Sequential consistency, ...|$|E
50|$|Maggie (<b>Multiprocess</b> ActionScript Generic Game Interface Engine) is a {{programming}} library {{developed in}} ActionScript 3.0 to create Flash games.|$|E
40|$|In {{this paper}} we give a new {{approach}} to introduce switching strategies in a special class of optimal <b>multiprocesses.</b> Defined as the set of partitions of the time interval, switching strategies become the character of a classical control. With this approach we overcome the restrictive comparison of <b>multiprocesses</b> with the same switching strategy. The necessary conditions for strong local optimizer in form of the Pontryagin maximum principle are demonstrated in illustrative examples. Comment: 16 pages, 5 figures, in germa...|$|R
40|$|In today’s {{world of}} {{rapid growth in}} the {{material}} sciences, knowledge of a material’s mechanical properties has become increasingly important. It has also become very important that this “knowledge” be obtained by some type of nondestructive method. The mechanical properties that are {{of particular interest to}} most material scientists are the ones governing elastic behavior. These properties are primarily determined by three basic characteristics: the type of material, the method of processing, and the processing sequence for <b>multiprocessed</b> materials...|$|R
40|$|A data {{visualization}} system geared toward large gigabyte or greater-than-gigabyte time-varying scientific data sets has been written. The {{system is a}} distributed <b>multiprocessed</b> application that employs techniques used both in the video-game industry and military flight simulators to achieve real-time frame rates. On the computational side, the system calculates vector fields, streamlines, isosurfaces, and cutplanes in real time. The graphics component employs strategic visual database decomposition and levels of detail to maintain a fast frame rate. This allows one to navigate through the data sets as they evolve temporally. © 1998 American Institute of Physics. S 0894 - 18669801804 -...|$|R
50|$|Because {{it lacks}} true {{concurrency}} control and file-system based indexing {{it is not}} appropriate for very large <b>multiprocess</b> transaction-based systems.|$|E
50|$|During 1979-1980, Weinreb {{worked at}} Lawrence Livermore National Laboratory on the Amber {{operating}} {{system for the}} S-1, particularly the file system and the <b>multiprocess</b> scheduler.|$|E
5000|$|Concurrent with Pnueli's work on LTL, {{academics}} {{were working}} to generalize Hoare logic for verification of <b>multiprocess</b> programs. Leslie Lamport {{became interested in}} the problem after peer review found an error in a paper he submitted on mutual exclusion. Ed Ashcroft introduced invariance in his 1975 paper [...] "Proving Assertions About Parallel Programs", which Lamport used to generalize Floyd's method in his 1977 paper [...] "Proving Correctness of <b>Multiprocess</b> Programs". Lamport's paper also introduced safety and liveness as generalizations of partial correctness and termination, respectively. This method was used to verify the first concurrent garbage collection algorithm in a 1978 paper with Edsger Dijkstra.|$|E
40|$|With the {{continuous}} increase of processing power, the graphic hardware – also called Graphic Processor Unit (GPU) – is naturally assuming most {{part of the}} rendering pipeline, leaving the Central Processor Unit (CPU) with more idle time. In order {{to take advantage of}} this when rendering relief textures, the present work proposes two approaches for the mapping of relief textures. Both methods are fully implemented on the CPU leaving the GPU responsible for the per-pixel shading effects. These approaches allow the use of CPU idle time and/or <b>multiprocessed</b> systems for the increase of real-time rendering quality and the inclusion of image-based representations...|$|R
40|$|Reading {{disabled}} {{subjects were}} very quickly taught letter-sound associations (later used in reading) by an object-imaging-projection method utilizing 26 actual objects found around the home (flower, key, pan, etc.), each object having a name whose beginning sound {{is a letter}} sound, and having a form {{very similar to the}} letter form. This method might also be quite effective in reteaching reading to people who have suddenly lost the ability to read due to brain damage. It appears that with this method, our language becomes an easily learned, <b>multiprocessed</b> object language, not requiring letter distortion for t h e learning process...|$|R
40|$|A finite-difference {{scheme for}} solving complex {{three-dimensional}} aerodynamic flow on parallel-processing supercomputers is presented. The method {{consists of a}} basic flow solver with multigrid convergence acceleration, embedded grid refinements, and a zonal equation scheme. Multitasking and vectorization have been incorporated into the algorithm. Results obtained include <b>multiprocessed</b> flow simulations from the Cray X-MP and Cray- 2. Speedups as high as 3. 3 for the two-dimensional case and 3. 5 for segments of the three-dimensional case have been achieved on the Cray- 2. The entire solver attained a factor of 2. 7 improvement over its unitasked version on the Cray- 2. The performance of the parallel algorithm on each machine is analyzed...|$|R
5000|$|In a <b>multiprocess</b> or multithreaded environment, {{it might}} be {{necessary}} to attach the process ID (PID) or any other unique ID to the timestamp {{so that it is}} possible to differentiate between events [...] and [...] which may occur simultaneously in different processes.|$|E
50|$|WebKit2 is a <b>multiprocess</b> API for WebKit, {{where the}} web-content is handled by a {{separate}} process than the application using WebKit. Apple announced WebKit2 in April 2010. Safari for OS X {{switched to the}} new API with version 5.1. Safari for iOS switched to WebKit2 with iOS 8.|$|E
50|$|Allinea MAP, is an {{application}} profiler produced by Allinea Software {{now part of}} Arm. of Warwick, United Kingdom, for profiling the performance of C, C++ and Fortran 90 software. It is widely used for its multithreaded and <b>multiprocess</b> capabilities such as profiling parallel MPI or OpenMP applications, including those running on clusters of Linux machines, and for scalar (sequential) code.|$|E
40|$|The {{problem of}} {{recovering}} from processor transient faults in shared memory <b>multiprocesses</b> systems is examined. A user-transparent checkpointing and recovery scheme using private caches is presented. Processes can recover from errors due to faulty processors by restarting from the checkpointed computation state. Implementation techniques using checkpoint identifiers and recovery stacks are examined {{as a means}} of reducing performance degradation in processor utilization during normal execution. This cache-based checkpointing technique prevents rollback propagation, provides rapid recovery, and can be integrated into standard cache coherence protocols. An analytical model is used to estimate the relative performance of the scheme during normal execution. Extensions to take error latency into account are presented...|$|R
50|$|Pipelines {{are often}} {{implemented}} in a multitasking OS, by launching all elements {{at the same}} time as processes, and automatically servicing the data read requests by each process with the data written by the upstream process - this can be called a <b>multiprocessed</b> pipeline. In this way, the CPU will be naturally switched among the processes by the scheduler so as to minimize its idle time. In other common models, elements are implemented as lightweight threads or as coroutines to reduce the OS overhead often involved with processes. Depending upon the OS, threads may be scheduled directly by the OS or by a thread manager. Coroutines are always scheduled by a coroutine manager of some form.|$|R
40|$|AbstractWe have {{recently}} <b>multiprocessed</b> a code for the direct solution of sparse linear equations on the Alliant FX/ 8. We discuss several issues which are involved, {{all of which}} are of relevance to any shared memory multiprocessor. Among these issues are the dynamic allocation of data, the management of task queues, task spawning, and the effect of controlling the granularity. We also show runs of our code under the SCHEDULE package from Argonne which presents a portable interface to users of parallel machines, allows the user to define the computational graph, and has very useful graphic output to a SUN workstation. Our tailored code attains a speedup by a factor of about six on the eight processors of the Alliant. We suggest ways of improving it further...|$|R
50|$|The {{property}} of not needing to access a reference count when a reference is copied is particularly helpful when the object's reference count is expensive to access, for example {{because it is}} in another process, on disk, or even across a network. It can also help increase concurrency by avoiding many threads locking a reference count to increase it. Thus, weighted reference counting is most useful in parallel, <b>multiprocess,</b> database, or distributed applications.|$|E
50|$|Firefox 51.0 was {{released}} on January 24, 2017 for both desktop and Android. Among the many additions were added support for FLAC (Free Lossless Audio Codec) playback, better Tab Switching, support for WebGL 2, and a warning that is displayed when a login page {{does not have a}} secure connection. Firefox 51.0.1 {{was released}} two days later for desktop only, fixing issues where <b>multiprocess</b> incompatibility did not correctly register with some add-ons, and geolocation was not working on Windows.|$|E
50|$|WebKit {{is used as}} the {{rendering}} engine within Safari and was formerly used by Google's Chrome web browser on Windows, macOS, iOS, and Android before version 4.4 KitKat (Chrome used only WebCore, and included its own JavaScript engine named V8 and a <b>multiprocess</b> system). Other applications on macOS make use of WebKit, such as Apple's e-mail client Mail and the 2008 version of Microsoft's Entourage personal information manager, both of which make use of WebKit to render e-mail messages with HTML content.|$|E
40|$|There exist {{a number}} of {{scientific}} visualization systems {{designed to provide a}} two-dimensional interface to the user. However, little consideration has been given to the development of collaborative virtual environments for visualization purposes. This paper discusses the Tele-Immersive Data Explorer a generalizable framework to facilitate the construction of domain-specific data exploration applications challenged with the problem of having to visualize massive data-sets immersively and collaboratively. In the paper we describe the framework's conceptual organization, its distributed <b>multiprocessed</b> objectoriented architecture, and its application to visualize gridded scalar data. KEYWORDS Tele-immersion, collaborative virtual reality, data mining, multivariate data, annotations, persistent environments, design patterns. 1 INTRODUCTION Research scientists and engineers need to analyze massive data sets generated by intensive computational simulations, geographic information systems [...] ...|$|R
40|$|The {{computational}} {{structural mechanics}} (CSM) program at Lewis encompasses: (1) fundamental aspects for formulating and solving structural mechanics problems, and (2) development of integrated software systems to computationally simulate the performance/durability/life of engine structures. It is structured to mainly supplement, complement, and whenever possible replace, costly experimental efforts which are unavoidable during engineering {{research and development}} programs. Specific objectives include: investigate unique advantages of parallel and <b>multiprocesses</b> for: reformulating/solving structural mechanics and formulating/solving multidisciplinary mechanics and develop integrated structural system computational simulators for: predicting structural performances, evaluating newly developed methods, and for identifying and prioritizing improved/missing methods needed. Herein the CSM program is summarized with emphasis on the Engine Structures Computational Simulator (ESCS). Typical results obtained using ESCS are described to illustrate its versatility...|$|R
40|$|Abstract. The {{objective}} of this work consists on {{the exploration of the}} resources offered by FPGAs {{for the development of a}} <b>multiprocessed</b> platform with the purpose of parallel execution of tasks for robotic purpose. In this way, the eCos operating system was modified, with the addition of new characteristics to sup-port of the Symmetric Multiprocessing model, using three soft-Core Altera Nios II processors. This platform was analyzed and validated through the execution of parallel algorithms, emphasizing aspects of performance and flexibility com-pared to other architectures. Resumo. O propósito deste trabalho consiste no aproveitamento dos recursos oferecidos pela FPGA para o desenvolvimento de uma plataforma multipro-cessada com a finalidade de execução paralela de tarefas para a robótica. Deste modo, o sistema operacional eCos foi modificado, com a agregação de novas funcionalidades, para permitir o suporte do modelo Multiprocessa...|$|R
5000|$|In Google Chrome's [...] "Multi-Process Architecture" [...] and Internet Explorer 8's [...] "Loosely Coupled IE (LCIE)", tabs {{containing}} webpages {{are contained}} {{within their own}} semi-separate OS-level processes which are isolated from the core process of the browser so as to prevent the crash of one tab/page from crashing the entire browser. This method (known popularly as <b>multiprocess</b> or process-per-tab) is meant to both manage memory and processing by allowing offending tabs to crash separately from the browser and other tabs and manage security.|$|E
5000|$|Android [...] "O" [...] {{will add}} support for Neighborhood Aware Networking (NAN) for Wi-Fi based on Wi-Fi Aware, wide color gamuts in apps, an API for autofillers, <b>multiprocess</b> and Google Safe Browsing support for WebViews, an API to allow {{system-level}} integration for VoIP apps, and launching activities on remote displays. Android Runtime (ART) features performance improvements and better cache handling. Android [...] "O" [...] contains additional limits on apps' background activities {{in order to}} improve battery life. Apps can specify [...] "adaptive icons" [...] for differently-shaped containers specified by themes, such as circles, squares, and squircles.|$|E
5000|$|Prospective {{memory is}} memory for {{performing}} intended {{actions in the}} future. For decades, researchers studied prospective memory outside of the laboratory by having participants phone an experimenter on a certain date or remember to mail a postcard to the experimenter. McDaniel, along with his colleague Gil Einstein, are credited with developing one of the earliest, and since then the most frequently used, laboratory measure of prospective memory. In addition to developing the standard laboratory measure of prospective memory, McDaniel has made several contributions {{to the understanding of}} the processes underlying successful prospective memory retrieval. His <b>Multiprocess</b> Framework contends that individuals can consciously maintain prospective memory intentions and monitor for retrieval cues, or they may rely on cue-driven spontaneous retrieval processes. The efficacy of monitoring and spontaneous retrieval processes is assumed to depend on the quality of encoding, the quality of the retrieval cue, and the overlap between encoding and retrieval conditions (termed cue focality). McDaniel has further distinguished the neural bases of these retrieval processes by using functional magnetic resonance imaging to illustrate that monitoring is supported by sustained anterior prefrontal cortex activation, whereas spontaneous retrieval is not. An important prediction of McDaniel's <b>Multiprocess</b> Framework is that aging impacts prefrontal-cortex-dependent monitoring processes, but not spontaneous retrieval processes that are assumed to be more automatic. The nature of age-related changes in prospective memory continues to be debated by the field, but research findings are consistent in showing that monitoring declines with aging and spontaneous retrieval appears to remain relatively intact in older adults. (see also Prospective memory) ...|$|E
40|$|Various kind of {{productions}} {{are made}} in semiconductor fabrications, where it employs the production system with <b>multiprocesses</b> and multiple Automated Guided Vehicles(AGVs) for transportation. It is difficult to optimize planning of production and transportation simultaneously because of the complicated flow of semifinished products. This paper describes the formulations of production scheduling, transportation routing and sequence planning of material handling system, and algorithm for simultaneous optimization of plannings by using solution space reduction and simulated annealing method. In this paper, all production system is decomposed to the production scheduling problem, transportation routing problem by AGVs and sequence planning of material handling system with managing stockers and buffers. Production scheduling problem and transportation routing problem are solved by the optimization algorithm using the decomposition routing problem. Sequence planning of material handling robot problem is solved by the algorithm using simulated annealing method...|$|R
40|$|An {{algorithm}} that dynamically maximizes the CDMA capacity usage by adjacent cell {{load sharing}} is proposed and investigated via simulation. For comparison purposes, the scheme proposed by Hanly [2] is reviewed {{and a set}} of criteria is established for the comparison. It is conjectured that the proposed algorithm is amenable to practical implementation. A <b>multiprocessed</b> simulation methodology used to obtain the numerical results is also presented. 1 Introduction As a non-orthogonal signaling scheme, CDMA is mainly interference limited. Any reduction in interference will convert directly into usable capacity. A number of power control schemes {{have been reported in the}} literature to reduce interference. Most of these schemes concentrate on reducing interference within a single cell [2, 4] to achieve equal received power level at the base station receiver. This paper proposes a scheme that treats the CDMA wireless system as a whole, and increases the system capacity by redistributing users [...] ...|$|R
40|$|Technological {{development}} has significantly reduced {{the distance between}} the performance of systems designed using reconfigurable computing and dedicated hardware. The main sources of performance are the high density level of the FPGAs and the resources? improvement offered by manufacturers, who make more its use more attractive in a variety of applications, emphatically in systems that demand a high degree of flexibility. In this context, the objective of this work consists on the exploration of the resources offered by FPGAs {{for the development of a}} <b>multiprocessed</b> platform with the purpose of parallel execution of tasks. In this way, the eCos operating system was modified, with the addition of new characteristics to support of the Symmetric Multiprocessing model, using three soft-Core Altera Nios II processors. On this operating system, all parallelism is directly related to execution of the threads. This platform was analyzed and validated through the execution of parallel algorithms, emphasizing aspects of performance and flexibility compared to other architectures. This work contributes for reaching better results in the execution of tasks in robotics area, which belongs to a domain that demand great competition of tasks, mainly in modules that involve interaction with the external environmentTechnological {{development has}} significantly reduced {{the distance between the}} performance of systems designed using reconfigurable computing and dedicated hardware. The main sources of performance are the high density level of the FPGAs and the resources? improvement offered by manufacturers, who make more its use more attractive in a variety of applications, emphatically in systems that demand a high degree of flexibility. In this context, the objective of this work consists on the exploration of the resources offered by FPGAs for the development of a <b>multiprocessed</b> platform with the purpose of parallel execution of tasks. In this way, the eCos operating system was modified, with the addition of new characteristics to support of the Symmetric Multiprocessing model, using three soft-Core Altera Nios II processors. On this operating system, all parallelism is directly related to execution of the threads. This platform was analyzed and validated through the execution of parallel algorithms, emphasizing aspects of performance and flexibility compared to other architectures. This work contributes for reaching better results in the execution of tasks in robotics area, which belongs to a domain that demand great competition of tasks, mainly in modules that involve interaction with the external environmen...|$|R
5000|$|Denning {{was born}} January 6, 1942, in Queens, NY, {{and raised in}} Darien, CT. He took an early {{interest}} in science, pursuing astronomy, botany, radio, and electronics while in grade school. At Fairfield Prep, he submitted home designed computers to the science fair in 1958, 1959, and 1960. The second computer, which solved linear equations using pinball machine parts, won the grand prize. He attended Manhattan College for a Bachelor in EE (1964) and then MIT for a PhD (1968). At MIT {{he was part of}} Project MAC and contributed to the design of Multics. His PhD thesis, [...] "Resource allocation in <b>multiprocess</b> computer systems", introduced seminal ideas in working sets, locality, thrashing, and system balance.|$|E
40|$|Multilevel <b>multiprocess</b> {{models are}} {{simultaneous}} equation systems that include multilevel hazard equations with correlated random effects. Demographers routinely use these models to adjust estimates for endogeneity and sample selection. In this article, I demonstrate how multilevel <b>multiprocess</b> models can be {{fit with the}} gsem command. I distinguish between two classes of multilevel <b>multiprocess</b> models: nonrecursive systems of hazard equations without observed endogenous variables and recursive systems that include a hazard equation with observed endogenous qualitative variables. I illustrate the estimation of both classes of models using sample datasets shipped with the statistical software aML. I {{pay special attention to}} identifying structural coefficients in nonrecursive simultaneous systems...|$|E
40|$|We study {{alternative}} {{models for}} capturing abrupt structural changes (level shifts) in a times series. The problem is confounded {{by the presence}} of transient outliers. We compare the performance of non-Gaussian time-varying parameter models and <b>multiprocess</b> mixture models within a Monte Carlo experimental setup. Our findings suggest that once we incorporate shocks with thick-tailed probability distributions, the superiority of the <b>multiprocess</b> mixture models over the time-varying parameter models, reported in an earlier study, disappears. The behavior of the two models, both in adapting to level shifts and in reacting to transient outliers, is very similar. time-varying parameter (TVP) models, non-Gaussian state space models, <b>multiprocess</b> mixture models, level shifts, outliers...|$|E
40|$|A {{large number}} of evidences {{indicate}} that progression of HIV disease is driven {{by an increase in}} viral burden. It is still unclear, however, to what extent this is contributed by the dysregulation of the molecular mechanisms governing virus gene expression at the transcriptional or posttran-scriptional levels. To address this issue, several quantitative virologic pa-rameters (including provirus transcriptional activity and splicing pattern) were analyzed in individuals with nonpro-gressive HIV infection and compared with those of a matched group of progressor patients. Exact quantification was achieved by a competitive PCR procedure using a mul-ticompetitor template. Nonprogressors were characterized by striking differ-ences in the levels of viremia, provirus copy number, and overall levels of all viral mRNA classes in peripheral blood mononuclear cells. Additionally, the transcriptional activity of the proviral DNA in these patients was mainly engaged in the production of <b>multiprocessed</b> transcripts, with a pattern resembling the early phases of the experimental infection. Taken together, these results show that both viral load and provirus transcription pattern are remarkably different in infected individuals nonprogressing toward overt disease, and further support the notion that disease progression is accompanied by a change in the kinetics of HIV gene ex-pression. ...|$|R
40|$|Chronic {{diseases}} such as cancer, {{chronic obstructive pulmonary disease}} (COPD), diabetes mellitus, hypertension, epilepsy, chronic hepatitis, neurodegenerative disease, and obesity are a kind of whole-body diseases that are involved in multi-factors, <b>multiprocesses,</b> and multi-consequences, that are involved in multiple molecules including genes, mRNAs, proteins, peptides, and metabolites, and that those molecules function in a mutually interacted pathway network system but not exert their roles individually. Also, heterogeneity in between-individual and intra-disease is involved in each chronic disease, and let each chronic disease more complicated, which is heavily challenging the efficacy of traditional therapeutic model – the same therapeutic strategy for the same type of disease. It is very difficult or even impossible for one to use single-one factor such as one gene, protein, or metabolite to clarify occurrence, development, and consequence of a chronic disease. In fact, the traditional single-factor strategy is based on an unrealistic assumption that the increase in the amount of a single-molecule can unambiguously characterize a chronic disease. The paradigm is being shifted from traditional single-factor strategy to multi-factor systematic strategy for research and clinical practice of a chronic diseas...|$|R
40|$|Carotid {{bodies were}} removed from cats, fixed in {{buffered}} 1 per cent osmic acid, embedded in deaerated, nitrogenated methacrylate, and cut into thin sections for electron microscopic study. The carotid body is seen to be composed of islands of chemoreceptor and sustentacular cells surrounded by wide irregular sinusoids. These cells are separated from the sinusoids by relatively broad interstitial spaces which are filled with collagen, fibroblasts, and many unmyelinated nerve fibers with their Schwann cell sheaths. The chemoreceptor cells are surrounded by the flattened, <b>multiprocessed</b> sustentacular cells which serve to convey the axons from an interstitial to a pericellular location. These sustentacular cells {{are assumed to be}} lemmoblastic in origin. Relatively few axons are seen to abut on the chemoreceptor cells. The cytoplasm of the chemoreceptor cell is characterized by numerous small mitochondria, units of granular endoplasmic reticulum, a small Golgi complex, and a variety of vesicles. There are many small vesicles diffusely scattered throughout the cytoplasm. In addition, there is a small number of dark-cored vesicles of the type which has been previously described in the adrenal medulla. These are usually associated with the Golgi complex. These findings are discussed in relation to the concepts of the origin of the chemoreceptor cell {{and the nature of the}} synapse...|$|R
