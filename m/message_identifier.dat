19|71|Public
5000|$|The DTG {{may be used}} as a <b>message</b> <b>identifier</b> if it {{is unique}} for each message.|$|E
50|$|CAN ID: CAN Identifier. This is the 11-bit CAN <b>message</b> <b>identifier</b> {{which is}} at the {{beginning}} of every CAN message on the bus.|$|E
50|$|SDA {{does not}} {{incorporate}} a record source, although a field can contain a <b>Message</b> <b>Identifier</b> Code {{of the form}} Mx9999 to access the Member1 or Member2 message member.|$|E
40|$|In {{previous}} work, it {{has been}} shown how to solve atomic broadcast by reduction to consensus on messages. While this solution is theoretically correct, it has its limitations in practice, since executing consensus on large messages can quickly saturate the system. The problem can be addressed by executing consensus on <b>message</b> <b>identifiers</b> instead of the full messages, in order to decouple the size of the messages from the size of the data sent by the consensus algorithm. In this paper, we study the impact of executing consensus on <b>message</b> <b>identifiers</b> instead of on the full messages, in the context of solving atomic broadcast. We also discuss the implications of executing consensus on <b>message</b> <b>identifiers</b> on the consensus and atomic broadcast algorithms...|$|R
30|$|In {{the value}} domain, the routing {{configuration}} permits {{the detection of}} invalid <b>message</b> <b>identifiers,</b> while the recognition of errors in the user data occurs using message checks. In addition, the CAN controllers [25] detect errors (e.g., stuffing error, CRC error, acknowledgment error) that are reported to the MU.|$|R
50|$|The {{protocol}} {{structure is}} similar to SAE J1939. The main differences are timing, bus voltage level {{and the structure of}} the <b>message's</b> 29-bit <b>identifier.</b>|$|R
5000|$|The <b>message</b> <b>identifier</b> [...] "UA" [...] is {{used when}} the PIREP {{contains}} non-hazardous weather information. If the PIREP contains {{a report of}} a tornado, funnel cloud, waterspout, severe turbulence, severe icing, hail, or a low-level wind shear hazard, the identifier [...] "UUA" [...] would be used.|$|E
50|$|All {{messages}} are {{initiated by the}} master with at most one slave replying to a given <b>message</b> <b>identifier.</b> The master node can also act as a slave by replying to its own messages. Because all communications are initiated by the master {{it is not necessary}} to implement a collision detection.|$|E
50|$|A Cell Broadcast message page is {{composed}} of 82 octets, which, using the default character set, can encode 93 characters. Up to 15 of these pages may be concatenated to form a Cell Broadcast message. Each page of such a CB message {{will have the same}} <b>message</b> <b>identifier</b> (indicating the source of the message), and the same serial number. Using this information, the mobile telephone is able to identify and ignore broadcasts of already received messages.|$|E
30|$|The router {{contains}} a dedicated MU which {{is capable of}} collecting violations in the time and value domain. This includes violations of the minimum and maximum interarrival time, as well as invalid <b>message</b> <b>identifiers.</b> This information can then be used as input for further analysis. Additionally, the MU {{can be used to}} change the routing configuration at run-time. This includes the addition and removal of valid CAN identifiers, the modification of minimum and maximum interarrival times, as well as changing multicast patterns (i.e., the destination of CAN messages).|$|R
30|$|On a CAN bus every {{transmitting}} node {{monitors the}} state of the bus. Whenever a node tries to send a recessive bit, and reads back a dominant bit, it backs off and retries to send the interrupted message at a later point in time. As high-priority <b>message</b> <b>identifiers</b> contain more leading dominant bits than low-priority <b>identifiers,</b> a <b>message</b> with a high priority is sent first (i.e., it wins the arbitration). In order to reproduce this behavior, the CAN router maintains a priority queue at every destination CIS and transmits the messages to the destination CAN bus according to their priority.|$|R
30|$|We {{replace the}} CAN bus with a star {{topology}} {{based on an}} intelligent CAN router. Fault isolation {{is one of the}} primary objectives of the router and our main focus of this paper. The CAN router eliminates the hazard of medium failures of an individual CAN bus leading to a global communication failure. Furthermore, the router exploits a priori knowledge about the permitted behavior of CAN nodes in the time and value domains for the containment of node failures. In the time domain interarrival times are monitored and enforced. In the value domain, permitted <b>message</b> <b>identifiers</b> and constraints on the application data within a message are enforced.|$|R
50|$|Data Frame {{is called}} {{telegraph}} in Byteflight specification. Data frame {{start with a}} start sequence containing six dominant bits the start sequence is followed by one byte <b>message</b> <b>identifier</b> followed by a length field which contain {{the size of the}} data sent in bytes. Byteflight specification currently supports only data length up to 12 bytes, the length field is followed by the data field which may be up to 12 bytes in size the datagram then ends with a 15 bit CRC encoded in two bytes with the LSB left unused. All the bytes are cushioned in the beginning by a recessive start bit and a dominant stop bit.|$|E
5000|$|The keying {{material}} for the Fialka consists of a daily key book, a message key book and a <b>message</b> <b>identifier</b> book for broadcast traffic. The daily key book contains day keys for one month. A day key consists of a key table (in Cyrillic) and a punched card. For fixed rotor systems, the key table specifies {{the order of the}} rotors on the axle and the initial rotor settings to be used to decrypt the indicator of broadcast messages. As its name implies, the day key is valid (has a cryptoperiod in NSA parlance) for 24 hours and was changed at 00:01 hours. For the disassemblable rotors, the table also specifies the electrical insert for each outer rotor, which side was to be up, and the orientation of the insert relative to the outer rotor. Here is a sample M-125-3NM day key table for use on the 14th of the month: ...|$|E
30|$|Mid is the <b>message</b> <b>identifier</b> sent by {{the core}} node in the {{previous}} message. ID_sensor is the identifier of the sensor which sends the response. SAr states the cryptographic suite chosen from the offered choices sent in the payload SAi. These three payloads are encrypted using the group key GKDH. digest is a digest calculated and encrypted using the key GKDH.|$|E
5000|$|When it {{receives}} a Lookup <b>message</b> for the <b>identifier</b> leftSubTree, it responds with 1 ...|$|R
40|$|Current {{wireless}} authentication mechanisms typically rely on inflexible shared secrets or {{a heavyweight}} public-key infrastructure with user-specific digital certificates and, as such, lack general support for environments with dynamic user bases where guest access is frequent. Simple Authentication for the Web (SAW) facilitates dynamic user {{bases in the}} context of web site logins by enabling users to authenticate to personal <b>messaging</b> <b>identifiers</b> (e. g., email addresses, IM handles, cell phone numbers). SAW, however, is ill-suited for wireless authentication because, in most cases, it is dependent on client-side Internet connectivity. Wireless Authentication using Remote Passwords (WARP) overcomes this constraint by building a hybrid protocol that combines the principles of SAW authentication with the Secure Remote Password (SRP) protocol...|$|R
40|$|This paper {{presents}} the schedulability analysis for control messages when networked control loops, built {{on top of}} the controller area network (CAN), are dynamically allocating bandwidth in terms of their controlled plants' dynamics. The bandwidth allocation policy is theoretically described by an optimization problem and practically solved by the distributed bitwise arbitration of CAN <b>messages</b> when <b>message</b> <b>identifiers,</b> i. e., priorities, reflect control applications demands. This poses the problem of assessing whether the set of real-time messages will meet their deadlines regardless of run-time priority changes. This is solved by a schedulability analysis based on recent results on worst-case response time techniques for real-time CAN applications. The analysis ends up with the schedulability test for this type of applications. Peer ReviewedPostprint (published version...|$|R
30|$|Type_of_message {{indicates}} {{the type of}} the sent message. For this case, the node who receives the messages detects {{that it is a}} request to choose a cryptographic suite. Mid is the <b>message</b> <b>identifier.</b> SAi states the cryptographic algorithms supported by the core node for encryption and signature. The previous two payloads are encrypted using the previously negotiated key GKDH. This ensures the confidentiality of the transmitted data. digest is a digest of the global message and is encrypted using the negotiated key GKDH. This payload ensures the integrity and authentication of the sent data.|$|E
30|$|Messages are {{represented}} as Erlang tuple data structures that consist of <b>message</b> <b>identifier,</b> a sender identifier, a message {{body and a}} timestamp. We implemented two message filtering rules that apply the principle of combining static with temporal filtering, as discussed in Section 3. Both rules were coded so that they execute in constant memory space. This makes possible to handle high volumes of message traffic without exceeding the phoneâ€™s available memory. All received messages are stored in an ordered list that is reordered each time a new message is received, using {{a modified version of}} the Quicksort algorithm. The list is pruned periodically by applying the sliding time window principle, i.e., removing broadcast messages over 2 minutes old and team messages over 5 minutes old.|$|E
40|$|Hash-based message {{authentication}} codes are an extremely simple yet hugely effective construction for producing keyed message digests using shared secrets. HMACs have seen widespread use as ad-hoc digital signatures in many Internet applications. While messages signed with an HMAC are secure against sender impersonation and tampering in transit, if used alone they {{are susceptible to}} replay attacks. We propose a construction that extends HMACs to produce a keyed message digest that has a finite validity period. We then propose a message signature scheme that uses this time-dependent MAC along with an unique <b>message</b> <b>identifier</b> to calculate a set of authentication factors using which a recipient can readily detect and ignore replayed messages, thus providing perfect resistance against replay attacks. We further analyse time-based {{message authentication}} codes and show that they provide stronger security guarantees than plain HMACs, even when used independently of the aforementioned replay attack resistant message signature scheme...|$|E
5000|$|Support an {{identification}} mechanism for process instances {{that allows the}} definition of instance identifiers at the application <b>message</b> level. Instance <b>identifiers</b> should be defined by partners and may change.|$|R
30|$|In {{a classic}} CAN setup a faulty node A could send <b>messages</b> with an <b>identifier</b> {{reserved}} for another node B. Therefore, the router contains knowledge about valid identifiers of a CAN segment in its routing configuration. If a node sends a <b>message</b> with an <b>identifier</b> not {{specified in the}} routing configuration, the router discards this message and sends {{a report to the}} MU. In addition to identifier validation, the router supports identifier translation. This is important in the case of legacy system integration, where two legacy systems use the same CAN identifiers. It is possible to specify a translation ID for every CAN identifier used in the system.|$|R
30|$|The CAN router {{isolates}} masquerading {{failures and}} contains {{them in their}} source CAN segment. The routing configuration contains entries for every valid CAN identifier. Whenever a faulty node tries to send a CAN <b>message</b> with an <b>identifier</b> that is not specified in the routing configuration, the source CIS blocks this message and sends a violation report to the MU. This prevents the propagation of <b>messages</b> with an <b>identifier</b> not specified for the given CAN segment. Nodes sharing the same CAN segment can sill masquerade IDs of nodes on the same segment. The router provides the best fault detection and isolation capability if CISes consist of a single CAN node.|$|R
40|$|In {{this paper}} we propose and {{validate}} algorithms for choosing finite word length identifiers for dynamically scheduled networked control systems. A networked control system is characterized by having a feedback loop closed through a local area computer network. Scheduling {{the use of the}} network in a way that assures both stability and controller performance are maintained is the primary focus of this work. Network usage for the control system is scheduled dynamically, that is, as the system runs, as opposed to statically, that is, in advance of operation. In earlier work we proposed a Try-Once-Discard (maximum-error-first) scheduler with continuous priority levels. However, in practice only a finite number of priority levels will be available as the priority is mapped to a subset of the <b>message</b> <b>identifier.</b> Two schemes for selecting which priority levels are proposed, the first with a fixed arbitrary grid and the second with an auto-scaling grid. Examples of both using linear or logarit [...] ...|$|E
40|$|A {{reliable}} and efficient broadcast procedure {{is essential for}} the Vehicular Ad Hoc Networks (VANET) because a major portion of services need to broadcast the messages to the vehicles within a certain area of interest, The broadcasting should ensure a minimum number of transmissions and also should guarantee delivery. Several such broadcasting protocols have been implemented till date, but intermittent connectivity ehich is a property of VANET is not addressed. In the proposed work, the local information of the surrounding vehicles is used to construct a Connected Dominating Set (CDS). Vehicles in the CDS actively take part in message broadcast. As the total number of nodes which needs to forward the message is reduced, the number of retransmissions is reduced. Acknowledgements from neighbors include the <b>message</b> <b>identifier</b> which eliminates forwarding the messages to the same vehicles which have already received the message. Thus the overall network traffic is minimized. The proposed method does not depend on any parameter to broadcast the message. In simulation based approaches, the method provides high reliability and efficiency...|$|E
40|$|International audienceController Area Network (CAN) {{is widely}} used in {{automotive}} applications. With CAN, the network utilisation that may be obtained while ensuring that all messages meet their deadlines {{is strongly dependent on}} the policy used for priority (<b>message</b> <b>identifier)</b> assignment. This paper addresses the problem of priority assignment when some message identifiers are fixed. There are two variants of this problem: P 1 where the gaps between fixed identifiers are large enough to accommodate the freely assignable messages and P 2 when the gaps are too small. For problem P 1, we provide algorithms that give optimal and robust priority orderings based on an adaptation of existing techniques. Problem P 2 is more difficult to solve. We show via a counter example that the algorithms derived for P 1 and others recently published can fail to find a schedulable priority ordering when the gaps are small, even though one exists. We derive an optimal and robust solution to this problem with respect to a simple form of schedulability analysis which assumes the same upper bound on the length of all messages...|$|E
30|$|After {{receiving}} the messages sent by secondary nodes A, B encrypts the encrypted <b>message</b> {A,B,Na}_K_as and <b>identifier</b> A, random Nb with pre-shared key Kbs, along with plain text identifier B, and sends {{them to the}} control node S.|$|R
50|$|The US Army {{shared with}} the US Navy the Purple attack on Japanese {{diplomatic}} cryptosystems. After {{the creation of the}} Army Signal Security Agency, the cryptographic school at Vint Hill Farms Station, Warrenton, Virginia, trained analysts. As a real-world training exercise, the new analysts first solved the <b>message</b> center <b>identifier</b> system for the Japanese Army. Until Japanese Army cryptosystems were broken later in 1943, the order of battle and movement information on the Japanese came purely from direction finding and traffic analysis.|$|R
40|$|A {{print on}} demand {{of these books}} and {{articles}} {{can be obtained from}} Cornell Business Services (CBS) Digital Services by sending e-mail to digital@cornell. edu or calling 607. 255. 2524. In the body of the <b>message</b> include the <b>identifier.</b> uri for the book or article, and ask to be contacted regarding payment...|$|R
40|$|Nowadays, {{the trend}} is clear that {{technologies}} are taking place in teaching and learning. As a message can be transmitted from a Web to a mobile phone, {{with the use of}} mobile phone and Internet access have been increasing rapidly, class organization seem to be possible in electronic form. This paper describes a study of information dissemination in teaching and learning. An Agent Notification for Appointment System will be developed in order to ease and facilitate user to make an appointment or announcement through a teaching web and will be notified via GSM Network using Short Message Services. The Notification Agent is responsible for the notification service on behalf of recipients. A notification generally comprises four data which are the recipient to whom the notification is addressed; the message store holding the message; the <b>message</b> <b>identifier</b> that the recipient uses for retrieving the message; and the (publicly visible) name of the account on the message store for the originator of the message. Since the system will run online, the web server used is Internet Information Services (IIS) and Active Server Pages as web-based scripting language and Microsoft SQL Server as database...|$|E
40|$|In this paper, i {{am going}} to {{implement}} a heterogeneous network for industrial applications. In general, A wireless remote controller in which providing a wireless sensing solution for industries to operate essential industrial appliances, ranging from simple lightings to sophisticated electronic devices. A wireless protocol based on wireless token ring protocol (WTRP) has been modified, yielding wireless controller area network (WCAN) data centric communications, which is then proposed to be applied in managing concurrency control of industrial appliances. WCAN is an adaptation of its wired cousin, controller area network (CAN) protocol which has not being properly defined. The wireless controller communicates with the standalone server which in turn communicates with the rest of sensing nodes through CAN system. Each node will be receiving command from the Standalone server and based on the <b>message</b> <b>identifier,</b> either executing the command or discarding it. WCAN has been chosen to become the backbone network of the system as it offers an alternative solution when industrial mobile stations under certain constraints should continue to use CAN protocol as frame exchange protocol. This project is implemented in three sections. First node runs as data acquisition node to which sensors are connected and another one is responsible controlling machines and appliances. Communications between two nodes are accomplished through High Speed CAN communication. Sensors connected are temperature, level and MEMS. Third node is the Master Node collects all necessary data from node 1 and controls industrial appliances through node 2. The communication between master node with node...|$|E
40|$|The paper {{describes}} the protocol converter INT- 485 -MBRTU, developed for serial {{communication between the}} thyristor rectifier (based on the proprietary protocol "INT-CPD- 05 ", according to standard RS- 485) and the SCADA system (based on protocol "Modbus RTU", of the same standard) in the thermal power plant "Nikola Tesla B 1 ". Elementary data on industrial communication protocols and communication gateways were provided. The basic technical characteristics of the "Omron" programmable logic controller CJ series were described, {{as well as the}} developed device INT- 485 -MBRTU. Protocol converters with two versions of communication software were tested, differing only in one control word, intended for a forced successive change of communication sequences, in opposite to automatic sequence relieve. The device iNT- 485 -MBRTU, with the program for forced successive change of communication sequences, demonstrated the reliability of data transfer of 100 %, in a sample of approximately 480 messages. For nearly the same sample, the same protocol converter, with a version of the program without any type of <b>message</b> <b>identifiers,</b> transferred less than 60 % of the foreseen data. During multiple sixty-hour tests, the reliability of data transfer of at least 99. 9979 % was recorded, in 100 % of the analysed cases, and for a sample of nearly 96, 000 pairs of the send and receive messages. We analysed the results and estimated the additional possibilities for application of the INT- 485 -MBRTU protocol converter...|$|R
50|$|All J1939 packets, {{except for}} the request packet, contain eight bytes of data and a {{standard}} header which contains an index called Parameter Group Number (PGN), which {{is embedded in the}} <b>message's</b> 29-bit <b>identifier.</b> A PGN identifies a message's function and associated data. J1939 attempts to define standard PGNs to encompass a wide range of automotive, agricultural, marine and off-road vehicle purposes. A range of PGNs (00FF0016 through 00FFFF16, inclusive) is reserved for proprietary use. PGNs define the data which is made up of a variable number of Suspect Parameter Number (SPN) elements defined for unique data. For example, there exists a predefined SPN for engine RPM.|$|R
40|$|DE 1004049198 A UPAB: 20060523 NOVELTY - First house station (104 a,d) fulfils first {{communication}} task, while second house station (104 b,e) fulfils second communication task. To each station is allocated identifier. There is door or third station (102) for selection of one house station by useroor or third station responding to selection by transmitting <b>message</b> containing <b>identifier</b> of selected station and, or message reception, compares received and allocate identifiers. Identical procedure {{is carried out}} regarding second house station. On comparison agreement, first station carries out its communication task. DETAILED DESCRIPTION - INDEPENDENT CLAIM is included for method of house communication. USE - For large courts of flats and office buildings. ADVANTAGE - High flexibility...|$|R
30|$|Secure routing is {{divisible}} {{into three}} sub-problems [16]: secure identifier assignment, routing table maintenance, and <b>message</b> forwarding. Secure <b>identifiers</b> prevent attackers from misrepresenting or abusing their overlay positions to intercept {{more than their}} share of traffic. Secure routing tables maintain peers' connections to appropriate sets of neighbor peers. Finally, secure message forwarding delivers messages using the secure identifiers and routing tables. This last sub-problem {{is the focus of}} our work.|$|R
