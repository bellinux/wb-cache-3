100|25|Public
2500|$|RFC 3657 Use of the Camellia Encryption Algorithm in Cryptographic <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
2500|$|RFC 5990 Use of the RSA-KEM Key Transport Algorithm in the Cryptographic <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
5000|$|RFC 3657: Use of the Camellia Encryption Algorithm in Cryptographic <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
30|$|These are {{insufficient}} {{for the case}} of composite message parsing as, in real life situations, protocol stacks may use a mix of message formats that originate from custom-made, CFG, DSL and IDL generators. Hence, message parser composition must deal with the composition of heterogeneous <b>message</b> <b>syntaxes</b> and hence parsers.|$|R
5000|$|There {{are some}} key words {{related to this}} norm: Securities, Messages, Dictionaries, Databases, Data layout, Data organization, Data processing, banking documents, finance, {{electronic}} data interchange, Electronic <b>messaging,</b> <b>Syntax,</b> Character sets, Control characters, Information separators, Sets of data, Data blocks, Codes, Numerical designations, Tags (data processing), Data, Data elements, Coding (data conversion), Access, EDIFACT, Data transmission ...|$|R
5000|$|Properties can be {{accessed}} using the traditional <b>message</b> passing <b>syntax,</b> dot notation, or, in Key-Value Coding, by name via the [...] "valueForKey:"/"setValue:forKey:" [...] methods.|$|R
5000|$|RFC 5990: Use of the RSA-KEM Key Transport Algorithm in the Cryptographic <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
50|$|It is {{followed}} by ISO 19092 Financial Services - Biometrics - Part 2: <b>Message</b> <b>syntax</b> and cryptographic requirements.|$|E
5000|$|PKCS7 (Cryptographic <b>Message</b> <b>Syntax</b> Standard â€” public keys with {{proof of}} {{identity}} for signed and/or encrypted message for PKI).|$|E
5000|$|The utility {{can be very}} unforgiving of {{improper}} syntax. Any {{errors in}} syntax will cause the command to fail and will display a brief help <b>message.</b> The <b>syntax</b> for a scheduled event is as follows: ...|$|R
30|$|In {{order to}} deal with cross-layer message {{translation}} and generate CCL message translators, it is essential to have a good knowledge and understanding of the various <b>message</b> <b>syntaxes</b> encountered in middleware technologies as well as the issues that can rise when composing heterogeneous message translators. In general, a message translator assures two functions: (i) parsing a stream of bits or characters, representing a network message in order to produce an AST, and (ii) processing an AST to produce a network message in the format expected by a given component. Most existing approaches focus on the parsing problem, which is, in the general case, the hardest. In this section, we present and analyse existing approches for generating and composing message translators.|$|R
5000|$|Loglevel {{specifies}} {{the type}} of message {{being sent to the}} kernel <b>message</b> log. The <b>syntax</b> with loglevel is:printk(KERN_DEBUG [...] "Debug message shown!\n"); ...|$|R
50|$|CAdES (CMS Advanced Electronic Signatures) {{is a set}} of {{extensions}} to Cryptographic <b>Message</b> <b>Syntax</b> (CMS) signed data {{making it}} suitable for advanced electronic signatures.|$|E
50|$|The Cryptographic <b>Message</b> <b>Syntax</b> (CMS) is the IETF's {{standard}} for cryptographically protected messages. It {{can be used}} to digitally sign, digest, authenticate or encrypt any form of digital data.|$|E
50|$|In version 4.0, {{the basic}} <b>message</b> <b>syntax</b> was {{switched}} over to XML. Further, {{the number of}} roundtrips necessary was reduced, allowing asynchronous communication (e.g. via SMTP) for simple transaction dialogues.|$|E
40|$|Two domain decompositions for the {{implementation}} of the NAS Scalar Penta-diagonal Parallel Benchmark on MIMD systems are investigated, namely transposition and multi-partitioning. Hardware platforms considered are the Intel iPSC/ 860 and Paragon XP/S- 15, and clusters of SGI workstations on ethernet, communicating through PVM. It is found that the multi-partitioning strategy offers the kind of coarse granularity that allows scaling up to hundreds of processors on a massively parallel machine. Moreover, efficiency is retained when the code is ported verbatim (save <b>message</b> passing <b>syntax)</b> to a PVM environment on a modest size cluster of workstations...|$|R
5000|$|A {{particular}} {{advantage of}} MBASIC was the full-text error <b>messages</b> provided for <b>syntax</b> and run-time errors. MBASIC {{also had a}} [...] "trace" [...] function that displayed line numbers as they were executed. While this occupied the same screen space as normal program output, it was useful for detecting conditions such as endless loops.|$|R
40|$|An {{important}} {{question in the}} study of language production {{is the nature of the}} semantic information that speakers use to create syntactic structures. A common answer to this question assumes that thematic roles help to mediate the mapping from <b>messages</b> to <b>syntax.</b> However, research using structural priming has suggested that the construction of syntactic frames may be insensitive to variations in thematic roles within messages (Cognition 35 (1990) 1; Psychological Review 99 (1992) 150). Because these studies involved structural alternations whose syntax covaries with the order of thematic roles, it is difficult to assess any independent contribution that role information may make to the positioning of phrases. In this study, we primed the order of the roles without changing the syntactic structure of the sentences produced, and found that the order of the roles was influenced by the priming manipulation. This implies that thematic roles or the features that differentiate them are active within the mapping between messages and sentence structures...|$|R
50|$|<b>Message</b> <b>syntax</b> and {{semantics}} {{is defined}} with BEEP profiles associated {{to one or}} more BEEP channels, where each channel is a full-duplex pipe. A framing-mechanism enables simultaneous and independent communication between peers.|$|E
5000|$|Cryptographic <b>Message</b> <b>Syntax,</b> used in S/MIME (RFC 2311 and RFC 2633). IETF message {{specification}} (based {{on the popular}} Internet MIME standard) that provides a consistent way to send and receive signed and encrypted MIME data.|$|E
50|$|Syntax is {{concerned}} with the formalism used to represent a <b>message.</b> <b>Syntax</b> as an area studies the form of communication in terms of the logic and grammar of sign systems. Syntax is devoted {{to the study of the}} form rather than the content of signs and sign-systems.|$|E
30|$|Bounded {{composition}} {{represents a}} generalisation of bounded stratified inclusion where the parsing context is not strictly delimitated. This means that lexemes from the host syntax can appear alongside lexemes of the extension syntax. Sections {{of the data}} block where this composed syntax is used (exemplified using hatched blue in Fig. 5 (c)) can be parsed neither by the host parser, nor by the extension parser. Unlike bounded stratified inclusion, bounded composition may include both syntax extensions and syntax restrictions. Syntax extensions expands the initial language with new <b>message</b> types, while <b>syntax</b> restrictions introduces intentional limitations on the expressiveness of a language.|$|R
40|$|Interoperability is a {{key issue}} in {{distributed}} health information systems. This paper presents the design {{and implementation of the}} Connection Service (CS) component of the HELIOS medical software engineering environment. An exchange message meta-model based on CEN TC 251 recommendations and a message description language are proposed. Using this meta-model, the CS is able either to interpret messages expressed in a given syntax (e. g., EDIFACT, ASTM) and map them to the application objects or to automate the translation of the <b>messages</b> in another <b>syntax.</b> It is concluded that this meta-model approach contributes to the management of semantic heterogeneity...|$|R
40|$|In today's {{global economy}} and E-commerce, there is {{increasing}} need to integrate application systems within and across organizations. Additionally, to {{lower the cost of}} application development and maintenance, increase reuse, and support outsourcing, the application development is moving towards component-based development and Web services. While great stride has been made in standardization to achieve interoperability and integration at hardware, operating system, data communication, <b>messaging,</b> and common <b>syntax</b> level, the common semantics required for application integration has not been developed. The standardization of common semantics depends on particular vertical industries such as insurance, banking, healthcare, and manufacturing. The standardization in each of the verticals has proceeded in ad-hoc and very unique ways...|$|R
50|$|The Certificate Management over CMS (CMC) is an {{internet}} standard by the IETF, defining transport mechanisms for the Cryptographic <b>Message</b> <b>Syntax</b> (CMS). It {{is defined in}} RFC 5272, its transport mechanisms in RFC 5273. It {{is one of two}} protocols utilizing the Certificate Request Message Format (CRMF), described in RFC 4211, with the other protocol being the Certificate Management Protocol (CMP).|$|E
50|$|PAdES is {{complementary}} to {{two other}} standards for an implementation of electronic signatures through cryptographically secured digital signatures in compliance to the eIDAS regulation. Like PAdES, they are legally binding in the European Union and suited for applications {{that do not}} involve human-readable documents: Cryptographic <b>Message</b> <b>Syntax</b> Advanced Electronic Signatures (CAdES) and XML Advanced Electronic Signatures (XAdES).The PAdES, CAdES and XAdES standards can be downloaded from the ETSI website ETSI download page.|$|E
5000|$|XML Signature is more {{flexible}} than {{other forms of}} digital signatures such as Pretty Good Privacy and Cryptographic <b>Message</b> <b>Syntax,</b> {{because it does not}} operate on binary data, but on the XML Infoset, allowing to work on subsets of the data, having various ways to bind the signature and signed information, and perform transformations. Another core concept is canonicalization, that is to sign only the [...] "essence", eliminating meaningless differences like whitespace and line endings.|$|E
40|$|This conference {{paper was}} {{published}} in the book, 19 th European Symposium on Computer Aided Process Engineering [Â© Elsevier]: [URL] VIRTHUALIS project aims to develop a number of virtual reality applications for improving safety in the process industries. The applications allow human factors experts to study how operators interact with plant, and provide a safe environment in which new safety actions can be tried and tested. Safety applications are built on the SafeVR technology platform, a distributed client-server virtual reality system. This paper describes how two external modules - a process simulator and a rule-based system - are interfaced to the platform and the benefits they provide both separately and together. The two modules communicate with the platformâ€™s server by exchanging messages, conforming to a simple syntax. pSimProxy provides a generic interface to an external process simulator, which in turn delivers the realistic plant behaviour. It handles bidirectional data exchange with and control of the external simulator. It can be configured at run time to use whichever available mechanisms are supported by the actual process simulator that models the plant being simulated. ClipsClient is an expert or rule-based system, based on NASAâ€™s CLIPS expert system software that can make inferences about the information contained in the messages. It consists of a set of facts, a number of rules and an inference engine. It can be provided with a number of rules that monitor how operators are running the plant, and react in useful ways to these events. The simulator notifies the server of changes in process parameters through a message. The values may be displayed, for example as gauge readings, in the virtual environment. As operators control the plant, their actions, say opening a valve, are also reported by messages via the server to the process simulation. Messages can also be read by the rule-based system, allowing it to maintain its own representation of the plant. This in turn permits automated expert reasoning {{on the state of the}} plant and the actions of its operators which can cause further message to be sent to the server. The rule-based system is therefore, a powerful mechanism for rapidly reconfiguring the application and general rules can be written that only require new facts at run-time to change the behaviour of the entire virtual environment. The <b>message</b> <b>syntaxes,</b> the system architecture and the interfacing of the external modules are described along with examples showing their individual and joint benefits...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2005). This document describes the Certificate Request <b>Message</b> Format (CRMF) <b>syntax</b> and semantics. This syntax is used to convey {{a request for a}} certificate to a Certification Authority (CA), possibly via a Registration Authority (RA), for the purposes of X. 509 certificate production. The request will typically include a public key and the associated registration information. This document does not define...|$|R
40|$|Web {{services}} {{send and}} receive <b>messages</b> in XML <b>syntax</b> with some parts hashed, encrypted or signed, according to the WS-Security standard. In this paper we introduce a model to formally describe the protocols that underly these services, their security properties and the rewriting attacks they might be subject to. Unlike with usual security protocols, {{we have to address}} here the facts that: (1) The Web service receive/send actions are nondeterministic to accommodate the XML format and the lack of normalization in parsing XML messages. Our model is designed to permit non-deterministic operations. (2) The Web service message format is better modelled with multiset constructors than with fixed arity symbols. Hence we had to introduce an attacker model that handles associativecommutative operators. In particular we present a decision procedure for insecurity of Web services with messages built using encryption, signature, and other cryptographic primitives...|$|R
50|$|Profiles, {{channels}} and a framing mechanism {{are used in}} BEEP to exchange different kinds of messages. Only content type and encoding are defaulted by the specification leaving the full flexibility of using a binary or textual format open to the protocol designer. Profiles define the functionality of the protocol and the <b>message</b> <b>syntax</b> and semantics. Channels are full-duplex pipes connected to a particular profile. Messages sent through different channels are independent from each other (asynchronous). Multiple channels can use the same profile through one connection.|$|E
5000|$|ISO 19092 Financial Services - Biometrics - Part 2: <b>Message</b> <b>syntax</b> and {{cryptographic}} requirements is an ISO {{standard that}} describes the techniques, protocols, cryptographic requirements, and syntax for using biometrics as an identification and verification mechanism {{in a wide variety}} of security applications in the financial industry. This standard provides support for policy based matching decisions for remote authentication and allows biometrics to be used securely with the ISO 8583 retail transaction messaging standard. A secure review and audit event journal syntax is provided that allows many of the security controls specified in ISO 19092-1 to be implemented.|$|E
50|$|S/MIME (Secure/Multipurpose Internet Mail Extensions) is a {{standard}} for public key encryption and signing of MIME data. S/MIME is on an IETF standards track and defined {{in a number of}} documents, most importantly RFCs 3369, 3370, 3850 and 3851. It was originally developed by RSA Data Security Inc. and the original specification used the IETF MIME specification with the de facto industry standard PKCS#7 secure message format. Change control to S/MIME has since been vested in the IETF and the specification is now layered on Cryptographic <b>Message</b> <b>Syntax,</b> an IETF specification that is identical in most respects with PKCS #7. S/MIME functionality is built into the majority of modern email software and interoperates between them.|$|E
40|$|Part 2 : Computerizing Public Sector IndustriesInternational audienceManaging {{prescriptions}} for medication, using ICT support, {{started in the}} 1970 s with the computerization of the pharmacy branch offices where local systems registered handwritten prescriptions and to print labels. In 1984, the first online prescribing started with physicians connected to their local pharmacy system in a pilot test. Then in 1987, the first pilot test started with an off-line system in which PC-based prescriber support systems transferred data to patient-held smart cards that {{were taken to the}} pharmacy. In the 1990 s, we had the first use of <b>messaging</b> using EDIFACT <b>syntax</b> for prescriptions. These had a relatively small volume until 2000, when an XML version of a European standard based on object-oriented modeling became popular and made electronic prescribing the normal practice, which meant important quality gains...|$|R
40|$|Web {{services}} {{send and}} receive <b>messages</b> in XML <b>syntax</b> with some parts hashed, encrypted or signed, according to the WS-Security standard. In this paper we introduce a model to formally describe the protocols that underly these services, their security properties and the rewriting attacks they might be subject to. Unlike other protocol models (in symbolic analysis) ours can handle non-deterministic receive/send actions and unordered sequence of XML nodes. Then to detect the attacks {{we have to consider}} the services as combining multiset operators and cryptographic ones and we have to solve specific satisfiability problems in the combined theory. By non-trivial extension of the combination techniques of [3] we obtain a decision procedure for insecurity of Web services with messages built using encryption, signature, and other cryptographic primitives. This combination technique allows one to decide insecurity in a modular way by reducing the associated constraint solving problems to problems in simpler theories...|$|R
40|$|In this {{position}} statementwe outline the key ideas behind Hybrid Sequence Charts (HySCs) along an example system {{taken from the}} automotive industry. HySCs are a visual description technique for communication in hybrid systems inspired bythewell known <b>Message</b> Sequence Charts <b>syntax.</b> However, they have a completely different semantic model that is well suited for the application domain of hybrid systems. As modeling example we consider a scenario taken from the specification of an electronic heightcontrol system, whichis used to adjust the chassis level of a car. HySCs can be advantageously used in the early phases of the system development process. In particular, in the requirements capture phase they can help to improve the dialog between customers and application experts. HySCs complement existing formalisms like hybrid automata {{by focusing on the}} interaction between the system's components. A detailed presentation of HySCs together with their formal semantics is given in [6]...|$|R
