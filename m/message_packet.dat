44|296|Public
25|$|The FIDONET {{program was}} what later {{became known as}} a mailer. FIDO was {{modified}} to use a previously unused numeric field in the message headers to store a node number for the machine the message should be delivered to. When FIDONET ran, it would search through the email database for any messages with a number in this field. FIDONET collected all of the messages for a particular node number into a file known as a <b>message</b> <b>packet.</b> After all the packets were generated, one for each node, the FIDONET program would look up the destination node's phone number in NODELIST.BBS, and call the remote system. Provided that FIDONET was running on that system, the two systems would handshake and, if this succeeded, the calling system would upload its packet, download a return packet if there was one, and disconnect. FIDONET would then unpack the return packet, place the received messages into the local system's storage, and move onto the next packet. When there were no remaining packet, it would exit, and run the FIDO BBS program.|$|E
50|$|ISO 15765-2, or ISO-TP (Transport Layer), is an {{international}} standard for sending data packets over a CAN-Bus. The protocol allows for the transport of messages that exceed the eight byte maximum payload of CAN frames. ISO-TP segments longer messages into multiple frames, adding metadata that allows the interpretation of individual frames and reassembly into a complete <b>message</b> <b>packet</b> by the recipient. It can carry up to 4095 bytes of payload per <b>message</b> <b>packet.</b>|$|E
50|$|The {{total length}} of a <b>message</b> <b>packet</b> can range from a minimum of 5 bytes (data-length byte equal to 0) to 260 bytes (data-length byte equal to 255). Longer {{transfers}} require a series of message packets.|$|E
50|$|Data is {{transmitted}} during an established session by Session <b>Message</b> <b>packets.</b>|$|R
50|$|The Transmission Control Protocol (TCP) detects {{packet loss}} and {{performs}} retransmissions to ensure reliable <b>messaging.</b> <b>Packet</b> loss in a TCP connection {{is also used}} to avoid congestion and reduces throughput of the connection.|$|R
40|$|Designing a {{protocol}} structure which contains the control system, VANET device {{and the type}} of communication message structures which will implement the <b>message</b> <b>packets</b> for v 2 v or v 2 I infrastructure. The different <b>message</b> <b>packets</b> contain the information required to transfer from one node to another in vehicular network for communication. Design various algorithm required for Control, Alert and Infotainment messages. Time stamping lowering data rate efficient packet delivery and proper communication of required messages. Implementation of proposed algorithms and comparison of them with existing algorithms and study of different factors affecting the working of theses algorithms. Analysis of proposed design approach and improvements in results if required. Keywords...|$|R
5000|$|SMB was {{originally}} designed to run {{on top of the}} NetBIOS/NetBEUI API (typically implemented with NBF, NetBIOS over IPX/SPX, or NBT). Since Windows 2000, SMB runs, by default, with a thin layer, similar to the Session <b>Message</b> <b>packet</b> of NBT's Session Service, on top of TCP, using TCP port 445 rather than TCP port 139—a feature known as [...] "direct host SMB".|$|E
50|$|Offline mail {{readers are}} {{computer}} programs that allow users to read electronic mail or other messages (for example, those on bulletin boards) {{with a minimum}} of connection time to the server storing the messages. This is accomplished by the server packaging up multiple messages into a compressed file for the user to download and then disconnect. The user then reads the <b>message</b> <b>packet</b> locally and any replies or new messages generated are packaged up and uploaded back to the server upon the next connection.|$|E
50|$|A message {{longer than}} 7 bytes {{requires}} segmenting the <b>message</b> <b>packet</b> over multiple frames. A segmented transfer {{starts with a}} First Frame. The PCI is two bytes in this case, with the first 4 bit field the type (type 1) and the following 12 bits the message length (excluding the type and length bytes). The recipient confirms the transfer with a flow control frame. The flow control frame has three PCI bytes specifying the interval between subsequent frames and how many consecutive frames may be sent (Block Size).|$|E
30|$|A vehicle can be {{a carrier}} for some RSUs while being just a {{collector}} for others. A vehicle is free to decode any messages received while moving in the network. Therefore, it can carry <b>message</b> <b>packets</b> from multiple RSUs. However, vehicles have limited buffer capacity, and consequently {{they may not be}} able to save all received messages. When a vehicle with a full buffer encounters a new message, it discards the packets of the oldest message to create room for the new message. Since RSUs may disseminate messages which change over time, vehicles must update the messages being carried. This process consists of discarding old <b>message</b> <b>packets</b> and collecting the corresponding new ones.|$|R
40|$|The {{quality of}} service (QoS) of failure {{detectors}} determines how fast a failure detector q detects the crash of a process p, and how accurate q informs the p crash. In wide area networks and wireless networks, the occurrence of process crashes, high delay variations and burst losses in <b>message</b> <b>packets</b> are common. So, this paper proposes a failure detector configurator which {{takes into account the}} probability distribution of loss burst lengths of <b>message</b> <b>packets,</b> by using a Markov model. The simulation results show that the parameters provided by the proposed configurator lead the failure detector to really satisfy the QoS requirements in networks subject to message loss bursts, while previous works do not satisfy them in some cases...|$|R
30|$|Once {{receiving}} the <b>message</b> <b>packets</b> (including PM,M, CM,M, T, P) from the eNB, Algorithm  2 and 3 start. Also, they stop the running process after receiving end package for power adjustment from the eNB. Therefore, the WiFi links’ transmitting powers will be adjusted under the unified coordination of the eNB.|$|R
5000|$|Voltage {{levels on}} the network range between 29,5 [...]. 31,6 V DC and data protection, in {{addition}} to the framing bits, is accomplished via Manchester-II coding, a highly symmetrical, floating layout with Alternating Pulse Modulation. The networks bit time is 6 µs. Segment length is limited to 100 meters. Multiple segments can be combined to form longer networks. In this case it is necessary to assure that every slave is only two repeaters 'away' from the network master. This is required due to the time delay introduced when a <b>message</b> <b>packet</b> transitions the repeater. Under certain conditions a so-called Terminator and/or Tuner can be used to extend the allowable segment length to 200 m or 300 m, respectively.|$|E
5000|$|The Status packet is {{free-field}} {{format that}} lets each station announce his current mission or application or contact information {{or any other}} information or data of immediate use to surrounding activities. The <b>message</b> <b>packet</b> {{can be used for}} point-to-point messages, bulletins, announcements or even email. Bulletins and Announcements are treated specially and displayed on a single [...] "community Bulletin board". This community bulletin board is fixed size and all bulletins from all posters are sorted onto this display. The intent of this display is to be consistent and identical for all viewers so that all participants are seeing the same information at the same time. Since lines are sorted onto the display, then individual posters can edit, update, or delete individual lines of their bulletins at any time to keep the bulletin board up-to-date to all viewers.|$|E
50|$|The FIDONET {{program was}} what later {{became known as}} a mailer. FIDO was {{modified}} to use a previously unused numeric field in the message headers to store a node number for the machine the message should be delivered to. When FIDONET ran, it would search through the email database for any messages with a number in this field. FIDONET collected all of the messages for a particular node number into a file known as a <b>message</b> <b>packet.</b> After all the packets were generated, one for each node, the FIDONET program would look up the destination node's phone number in NODELIST.BBS, and call the remote system. Provided that FIDONET was running on that system, the two systems would handshake and, if this succeeded, the calling system would upload its packet, download a return packet if there was one, and disconnect. FIDONET would then unpack the return packet, place the received messages into the local system's storage, and move onto the next packet. When there were no remaining packet, it would exit, and run the FIDO BBS program.|$|E
40|$|Most current {{applications}} are distributed. An important subset of them use web services and are designed using Service-Oriented Architecture (SOA) principles. We define SOA as an architectural style {{in which a}} system is composed from a set of loosely coupled services that {{interact with each other}} by sending <b>messages</b> (<b>packets</b> of data). In order t...|$|R
50|$|LT {{codes are}} rateless because the {{encoding}} algorithm can in principle produce {{an infinite number}} of <b>message</b> <b>packets</b> (i.e., the percentage of packets that must be received to decode the message can be arbitrarily small). They are erasure correcting codes because they can be used to transmit digital data reliably on an erasure channel.|$|R
40|$|Bit level abstracts away radio {{specifics}} Byte level {{radio component}} collects individual bits into bytes Packet Level constructs <b>packets</b> from bytes <b>Messaging</b> layer interprets <b>packets</b> as <b>messages</b> Data pump paradigm used to connect layers � � High level components initiate transfer (COMMANDS COMMANDS) � � Lower level components signal when more {{data can be}} handled (EVENTS EVENTS) Collection of bit events aggregated into single byte event Collection of byte events collected into single packet event How it works: Communication Application <b>messaging</b> <b>packet</b> byte bit Applicatio...|$|R
50|$|An {{important}} {{example of}} a cryptographic protocol that failed because of a related-key attack is Wired Equivalent Privacy (WEP) used in WiFi wireless networks. Each client Wi-Fi network adapter and wireless access point in a WEP-protected network shares the same WEP key. Encryption uses the RC4 algorithm, a stream cipher. It is essential that the same key never be used twice with a stream cipher. To prevent this from happening, WEP includes a 24-bit initialization vector (IV) in each <b>message</b> <b>packet.</b> The RC4 key for that packet is the IV concatenated with the WEP key. WEP keys have to be changed manually and this typically happens infrequently. An attacker therefore can assume that all the keys used to encrypt packets share a single WEP key. This fact opened up WEP {{to a series of}} attacks which proved devastating. The simplest to understand uses the fact that the 24-bit IV only allows a little under 17 million possibilities. Because of the birthday paradox, it is likely that for every 4096 packets, two will share the same IV and hence the same RC4 key, allowing the packets to be attacked. More devastating attacks take advantage of certain weak keys in RC4 and eventually allow the WEP key itself to be recovered. In 2005, agents from the U.S. Federal Bureau of Investigation publicly demonstrated the ability to do this with widely available software tools in about three minutes.|$|E
30|$|The {{destination}} IP of the UE Location <b>message</b> <b>packet</b> is configured as ANDSF_IP, which {{matches the}} preset flow entry “the destination IP is ANDSF_IP”. The OFS sends the packet to the OFC through the OFPT_PACKET_IN message. The OFC forwards this <b>message</b> <b>packet</b> to the ASB.|$|E
30|$|For {{evaluating}} {{the performance of}} WSN, the following metrics are considered. They are network lifetime, <b>message</b> <b>packet</b> delivered to sink and stability for a cluster.|$|E
40|$|In this paper, {{modified}} ad-hoc on-demand multipath {{distance vector}} (AOMDV) for multipath routing using ant colony for mobile ad hoc networks (MANETs) is presented. For this purpose, Ant-AODV {{is used for}} comparison with Ant-AOMDV. The idea behind the working of Ant-AODV and Ant-AOMDV is that the RREQ <b>message</b> <b>packets</b> are sent to single path in case of Ant-AODV based routing and to multiple paths in case of Ant-AOMDV based routing. RREQ <b>message</b> <b>packets</b> can be termed as pheromone in terms of standard algorithm of ACO used by the ants. Selecting the transmission path dynamically through regular updating of pheromone of transmission path expects to improve routing performance. Simulation results show that Ant-AOMDV algorithm outperforms Ant-AODV effectively in terms of packet delivery fraction, normal routing load and packet drop compared with AODV and AOMDV. The main goal {{is to reduce the}} routing overhead, congestion and increase the performance...|$|R
50|$|MCAPI is a language-independent, {{processor}} and operating system agnostic communications protocol used to program multi-core devices. MCAPI provides three modes of communication: <b>messages,</b> <b>packets,</b> and scalars. MCAPI is a message-passing application programmer interface, together with protocol and semantic specifications for how its features must behave in any implementation. The primary goals for any MCAPI implementation are extremely high performance and low memory footprint.|$|R
40|$|Abstract. Decentralized {{peer to peer}} {{networks}} like Gnutella are attrac-tive {{for certain}} applications because they require no centralized directo-ries and no precise control over network topology or data placement. The greatest advantage is the robustness provided by them. However, ooding-based query algorithms used by the networks produce enor-mous amounts of trac and substantially slow down the system. Re-cently ooding {{has been replaced by}} more ecient k-random walkers and dierent variants of such algorithms [5]. In this paper, we report immune-inspired algorithms for searching peer to peer networks. The algorithms use the immune-inspired mechanism of anity-governed proliferation and mutation to spread query <b>message</b> <b>packets</b> in the network. Through a series of experiments, on dierent types of topologies, we compare prolif-eration/mutation with dierent variants of random walk algorithms. The detailed experimental results show <b>message</b> <b>packets</b> undergoing prolifer-ation and mutation spread much faster in the network and consequently proliferation/mutation algorithms produce better search output in p 2 p networks than random walk algorithms. ...|$|R
30|$|<b>Message</b> <b>packet</b> format: it {{specifies}} {{the network}} packets format used to encapsulate application messages. There are two standards {{from which the}} application’s designer can choose, the Internet Protocolv 6 (IPv 6) or the WAVE Short Message Protocol (WSMP) [12].|$|E
3000|$|... are transmission/reception circuitry-dependent parameters, l is {{the size}} of the <b>message</b> <b>packet</b> in bits, d is the {{distance}} between the communicating pair and d 0 is the threshold distance related to the node’s hardware. Depending on the distance between the communication pairs, the free space (ε [...]...|$|E
30|$|The {{destination}} IP of {{the selected}} Wi-Fi AP information <b>message</b> <b>packet</b> is configured as ANDSF_IP, which matches the preset flow entry in the OFS (same as that in step 13 of Section 3.1). Therefore, the OFS forwards the message through the OFPT_PACKET_IN message to the ASB in the OFC.|$|E
40|$|Abstract. Decentralized {{peer to peer}} (p 2 p) {{networks}} like Gnutella {{are attractive}} for certain applications because they require no centralized di-rectories and no precise control over network topology or data placement. The greatest advantage is the robustness provided by them. However, ooding-based query algorithms used by the networks produce enormous amounts of trac and substantially slow down the system. Recently, ooding {{has been replaced by}} more ecient k-random walkers and dier-ent variants of such algorithms. In this paper, we report immune-inspired algorithms for searching peer to peer networks. The algorithms use the immune-inspired mechanism of anity-governed proliferation to spread query <b>message</b> <b>packets</b> in the network. Through a series of experiments, we compare the proliferation mechanism with dierent variants of ran-dom walk algorithms. The detailed experimental results show <b>message</b> <b>packets</b> undergoing proliferation spread much faster in the network and consequently proliferation algorithms produce better search output in p 2 p networks than random walk algorithms. Moreover, theoretical results by calculating the packet spreading speeds are reported which provide an understanding of the improved performance of the proliferation based search algorithm. ...|$|R
30|$|There are 40 RSUs in {{the network}} located at the intersections and midway between intersections. All {{vertical}} road segments are 3 -km long while the horizontal segments are 2 -km long. Each RSU broadcasts four different messages during the simulation time with dissemination periods of 250 s. Then the old messages are replaced with new ones. This replacement causes the vehicles to discard the packets related to the old messages and collect the new <b>message</b> <b>packets</b> instead.|$|R
30|$|There are {{two types}} of control <b>messages</b> (<b>packets</b> check results and channel {{switching}} message) needed to be transmitted from the teleoperator to the telerobot. Moreover, the teleoperator needs to control the movements of the telerobot in an unknown environment. Hence, the movement message is also needed to be transmitted from the teleoperator to the telerobot. To reduce the transmission cost of these control information, three kinds of control messages are integrated into a single ACK packet.|$|R
40|$|Rapidly and robustly {{disseminating}} safety messages is {{an important}} goal for vehicle-to-vehicle communications. When multiple vehicles receive an alert <b>message,</b> <b>packet</b> collisions may occur if they rebroadcast the message simultaneously. Due to the broadcast nature of safety messages, acknowledgement on the reception of packets is difficult, and such collision leads to nonrecoverable failed delivery. The proposed Receive Power-Based Prioritized Rebroadcast (RPPR) scheme (1) minimizes the probability of packet collision during rebroadcast, and (2) maximizes {{the probability that a}} vehicle that is furthest away from the source rebroadcasts an alert message first. This improves robustness and minimizes the packet delivery time...|$|E
30|$|As {{the network}} size increases, {{the numbers of}} events {{detected}} gets reduced. This {{is due to the}} fact that as the number of nodes increases, the nodes in the network (or a sector) increases. This leads to transmitting a <b>message</b> <b>packet</b> from one level to another through a number of nodes, thereby depleting energy quickly. In this figure, we make a vivid comparison of our scheme with various techniques and methods. Our scheme proves out to overcome the defect of traditional methods and detects the events more efficiently. We proved that considering the range and location estimates at regular intervals gives a precise localization.|$|E
40|$|In this paper, an IEEE 802. 15. 6 {{wireless}} body area networks (WBAN) medium {{access control}} protocol is developed to support a wireless USB (WUSB) application as a protocol adaptation layer (PAL). Further, we propose a Power Efficient Mechanism (PEM) technique based on the WUSB over WBAN protocol. The proposed time synchronization technique reduces power consumption. It is executed using the WUSB over WBAN protocol at each sensor node. We design the PEM and simulate for performance evaluation. From the results, we observe that the PEM reduces power consumption at the nodes by minimizing {{the number of the}} <b>message</b> <b>packet</b> transmissions required for time synchronization...|$|E
40|$|Abstract. Decentralized {{peer to peer}} {{networks}} like Gnutella {{are attractive}} for certain applications because they require no centralized directories and no precise control over network topology or data placement. The greatest advantage is the robustness provided by them. However, flooding based query algorithms used by the networks produce enormous amount of traffic and substantially slow down the system. Recently flooding is increasingly replaced with more efficient k-random walkers and different variants of such algorithms [6]. In this paper, we develop an efficient search algorithm for p 2 p networks {{with the help of}} a 2 -dimensional Cellular Automata model. The rules followed by each individual cell of the CA are inspired by concepts of natural immune systems whereby the query <b>message</b> <b>packets</b> in the network are spread through proliferation. Through a series of experiments, we compare proliferation with different variants of random walk algorithms. The detailed experimental results show <b>message</b> <b>packets</b> undergoing proliferation spread much faster in the network and consequently produce better search output in p 2 p networks. Moreover, experimental results show that proliferation rules are extremely scalable and their performance is largely insensitive to the change in dimension of the CA grid. ...|$|R
40|$|In {{the past}} decade Optical WDM Networks (Wavelength Division Multiplexing) are being used quite often and {{especially}} as far as broadband applications are concerned. <b>Message</b> <b>packets</b> transmitted through such networks can be interrupted using time slots {{in order to maximize}} network usage and minimize the time required for all messages to reach their destination. However, preempting a packet will result in time cost. The problem of scheduling <b>message</b> <b>packets</b> through such a network is referred to as PBS and is known to be NP-Hard. In this paper we have reduced PBS to Open Shop Scheduling and designed variations of polynomially solvable instances of Open Shop to approximate PBS. We have combined these variations and called the induced algorithm HSA (Hybridic Scheduling Algorithm). We ran experiments to establish the efficiency of HSA and found that in all datasets used it produces schedules very close to the optimal. To further establish HSAs efficiency we ran tests to compare it to SGA, another algorithm which when tested in the past has yielded excellent results. Comment: 9 pages, 5 figures, Second International Conference on Computer Science, Information Technology and Applications (CSITA 2016...|$|R
40|$|In {{the past}} years, Interconnection Networks {{have been used}} quite often and {{especially}} in applications where parallelization is critical. <b>Message</b> <b>packets</b> transmitted through such networks can be interrupted using buffers {{in order to maximize}} network usage and minimize the time required for all messages to reach their destination. However, preempting a packet will result in topology reconfiguration and consequently in time cost. The problem of scheduling <b>message</b> <b>packets</b> through such a network is referred to as PBS and is known to be NP-Hard. In this paper we have improved, critically, variations of polynomially solvable instances of Open Shop to approximate PBS. We have combined these variations and called the induced algorithm IHSA, Improved Hybridic Scheduling Algorithm. We ran experiments to establish the efficiency of IHSA and found that in all datasets used it produces schedules very close to the optimal. In addition, we tested IHSA with datasets that follow non-uniform distributions and provided statistical data which illustrates better its performance. To further establish the efficiency of IHSA we ran tests to compare it to SGA, another algorithm which when tested in the past has yielded excellent results...|$|R
