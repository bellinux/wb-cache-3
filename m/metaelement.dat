2|3|Public
40|$|The {{internal}} {{structure of the}} locative predicate-complement form-class in German is described {{within the framework of}} a generative grammar consisting of a phrase-structure (PS) component, a semantic (S) component, and a transformation (T) component. The S-component is interposed between the PS-component and the T-component. The PScomponent generates the deep {{internal structure}} of the locative form-class {{as a function of the}} <b>metaelement</b> "irgendwo, " assigning hierarchical relationships and groupings in the process. The S-component translates the "irgendwo"-quantified syntactic patterns of the P-marker into their corresponding semantic denotational patterns, resulting in an S-marker, and then returns the derivation to its P-marker at the level of the locative class symbols. The T-component then operates on this level, if necessary, to obtain the derived P-marker and thus the surface grammar. The <b>metaelement</b> "irgendwo " proves to be more than a syntactic filter assigning locative structure. It proves to be a semantic filter that reveals the indexical symbolic nature of the locative adverbs and their symbolic relationships to each other as well as to the locative prepositional phrase...|$|E
40|$|While {{the type}} system {{proposed}} in the OCL Standard Library of the latest OCL 2. 0 proposal seems to be considerably stable by now, {{there are still some}} deficiencies in the definition of operations for type casts and type conformance checks. This results {{from the fact that the}} types defined on the user-level are currently not well represented in the OCL Standard Library. This article presents a new modeling approach to adequately capture these types in the OCL Standard Library through the UML core concept called powertype. The powertype concept allows to model a <b>metaelement</b> on the architectural user level M 1. By this approach, we propose an enhanced structure of the OCL Standard Library that prescribes a controlled way for accessing the metalevel...|$|E
40|$|This {{technical}} paper describes an extension to the MOF metamodel {{which can be}} used to model metamodel hierarchies. The extension is intended to be backwards compatible as far as possible. We begin with a discussion of metamodeling in general, before describing in detail our approach along with explanations for the decisions made with regard to aspects such as strictness, <b>metaelements,</b> etc. The paper ends with a brief outlook on open issues and problems due to the compatibility with MOF. 2...|$|R
40|$|Abstract. Relational Concept Analysis (RCA) {{facilitates}} {{the discovery of}} new abstractions in data descriptions including relations. A model driven approach for RCA implementation makes possible to deal with most input data (models) simply by configuring the transformation for the chosen input data type (metamodel). Until now, we only applied this approach to one-level models (mainly class models). In this paper we study RCA applied to bi-levels models, which mix elements and <b>metaelements</b> (class-instance models, e. g. OWL models). We propose a model hybridisation approach to tackle the encoding problems and we provide a case study showing {{the results obtained on}} OWL models. ...|$|R
40|$|Database reverse {{engineering}} (DBRE) recovers a database design using a semantic data model. Most {{of the existing}} works and tools for DBRE and database design specify relational database schemas with extended ER models. The Unified Modeling Language (UML) is a standard language for modeling software and database systems. We discuss how to extend the UML metamodel with elements for modeling relational dependencies. We also present techniques for converting structures of relational dependencies to UML constructs. The introduced <b>metaelements</b> and conversion techniques {{can be used in}} relational database design that is presented in the UML. They unify object-oriented software design and relational database design. ...|$|R

