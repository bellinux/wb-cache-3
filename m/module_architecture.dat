75|306|Public
50|$|Python {{has been}} used in {{artificial}} intelligence tasks. As a scripting language with <b>module</b> <b>architecture,</b> simple syntax and rich text processing tools, Python is often used for natural language processing tasks.|$|E
50|$|Then {{he moved}} to Hewlett-Packard Labs, where he {{developed}} a <b>module</b> <b>architecture</b> for Squeak. He also started and still operates a small firm, Weather Dimensions Inc., which displays local weather data on home computers.|$|E
50|$|Oberon-2 {{provides}} built-in run-time {{support for}} garbage collection similar to Java and performs bounds and array index checks, etc. that eliminate the potential stack and array bounds overwriting problems and manual memory management issues inherent in C/C++. Separate compilation using symbol files and name-spaces via the <b>module</b> <b>architecture</b> ensure quick rebuilds since only modules with changed interfaces {{need to be}} recompiled.|$|E
50|$|Linux Pluggable Authentication Modules (PAM) provide dynamic {{authentication}} {{support for}} applications {{and services in}} a Linux or GNU/kFreeBSD system. Linux PAM is evolved from the Unix Pluggable Authentication <b>Modules</b> <b>architecture.</b>|$|R
40|$|In {{this chapter}} {{we use a}} three-level {{approach}} for analyzing module concepts for graph transformation systems. Based on the observation that <b>module</b> <b>architectures</b> consist of basic specifications like body or export interface and relations like the implementation relation between them, or the import relation between a client and a server module, module concepts are characterized by answering the questions 1. What are the basic specifications? 2. Which relations between specifications are used? 3. How are specifications and relations combined to <b>module</b> <b>architectures?</b> These three questions are investigated for five module concepts available in the literature. As a reference example, a sample modular specification of resource management in distributed operating systems is presented...|$|R
50|$|Sysload {{products}} {{are based on}} a 3-tiered (user interfaces, management modules and collection and analysis <b>modules)</b> <b>architecture</b> metric collection technology that provides detailed information on large and complex environments. Sysload software {{products are}} available for various virtualized and physical platforms including: VMware, Windows, AIX, HP-UX, Solaris, Linux, I-series, PowerVM, etc.|$|R
50|$|One {{very popular}} feature of Jamroom is its <b>module</b> <b>architecture</b> which allows users and {{developers}} {{to extend its}} abilities beyond the core installation. From Jamroom 5 {{the structure of the}} system changed majorly from the previous version. The largest change being that even the core of Jamroom itself became a module. By adding additional modules, more features can be made available to users on their profiles.|$|E
40|$|Abstractâ€”Our {{previous}} studies assigned labels to mnSOM modules {{based on the}} assumption that winner modules corresponding to subsequences in the same class share the same label. We propose segmentation using hierarchical clustering based on the resulting mnSOM. Since it does not need the above unrealistic assumption, it gains practical importance at the sacrifice of the deterioration of the segmentation performance by 1. 2 %. We compare the performance of task segmentation for two kinds of <b>module</b> <b>architecture</b> in mnSOM. The result is that <b>module</b> <b>architecture</b> with sensory-motor signals as target outputs has superior performance to that with only sensory signals as target outputs. ...|$|E
40|$|Optical {{metrology}} system reliability during a prolonged space mission is often {{limited by the}} reliability of pump laser diodes. We developed a metrology laser pump <b>module</b> <b>architecture</b> that meets NASA SIM Lite instrument optical power and reliability requirements by combining the outputs of multiple single-mode pump diodes in a low-loss, high port count fiber coupler. We describe Monte-Carlo simulations {{used to calculate the}} reliability of the laser pump module and introduce a combined laser farm aging parameter that serves as a load-sharing optimization metric. Employing these tools, we select pump <b>module</b> <b>architecture,</b> operating conditions, biasing approach and perform parameter sensitivity studies to investigate the robustness of the obtained solution...|$|E
40|$|The design {{concept and}} {{performance}} of AKAS, an automated knowledge-acquisition system {{for the development of}} expert systems, are discussed. AKAS was developed using the FLES knowledge base for the electrical system of the B- 737 aircraft and employs a 'learn by being told' strategy. The system comprises four basic modules, a system administration module, a natural-language concept-comprehension module, a knowledge-classification/extraction module, and a knowledge-incorporation module; details of the <b>module</b> <b>architectures</b> are explored...|$|R
40|$|This {{research}} project {{is concerned with}} sensor validation and sensor fusion {{as part of a}} five <b>module</b> hierarchical <b>architecture</b> for supervisory control. The goal is to enhance reliability and safety of the Intelligent Vehicle Highway System (IVHS) by taking into consideration the uncertainty of sensors and the system. Potential hazards are detected and feasible maneuvers are recommended within the upper <b>modules</b> of the <b>architecture.</b> Automotive sensors, Fault location (Engineering), Real-time control, Multisensor data fusion, Motor vehicles [...] Automatic control...|$|R
40|$|We {{describe}} a distributed, modular architecture for platform independent natural language systems. It features automatic interface generation and selLorganization. Adaptive (and nonadaptive) voting mechanisms {{are used for}} integrating discrete <b>modules.</b> The <b>architecture</b> is suitable for rapid prototyping and product de- livery...|$|R
40|$|The ever {{increasing}} complexity and ever more rapidly changing requirements for software systems create {{a need for}} reuse and adaptation of existing software. An explicit description of the software architecture of a system may help to get a high-level overview of the system, thus facilitating re-use and adaptation of the system. Reverse architecting is a technique applied within Philips to make the <b>module</b> <b>architecture</b> of a software system explicit. In this paper, the reverse architecting technique is briefly described. Furthermore, it is shown how Relation Partition Algebra {{can be used for}} reverse architecting purposes as a formalism to describe the <b>module</b> <b>architecture</b> of a system, and provide the architectural information with the right level of detail. 1...|$|E
40|$|Our {{previous}} studies assigned labels to mnSOM modules {{based on the}} assumption that winner modules corresponding to subsequences in the same class share the same label. We propose segmentation using hierarchical clustering based on the resulting mnSOM. Since it does not need the above unrealistic assumption, it gains practical importance at the sacrifice of the deterioration of the segmentation performance by 1. 2 %. We compare the performance of task segmentation for two kinds of <b>module</b> <b>architecture</b> in mnSOM. The result is that <b>module</b> <b>architecture</b> with sensory-motor signals as target outputs has superior performance to that with only sensory signals as target outputs. The 6 th International Workshop on Self-Organizing Maps (WSOM), 2007 Bielefeld University, Bielefeld, Germany, September 3 - 6, 200...|$|E
40|$|International audienceThe growing {{interest}} in asynchronous design drives a great effort to offer automated methodologies and tools. As in synchronous methodologies, asynchronous ones can improve their results using dedicated compilers to generate specific modules such as memories and arithmetic operators. These compilers exploit functional and structural <b>module</b> <b>architecture</b> knowledge to optimize generated results...|$|E
40|$|Thin (< 70 micron) {{single crystal}} silicon solar cells have been {{manufactured}} {{through the use}} of a novel process involving selective etching. Narrow grooves are micromachined through the wafer using a standard micromachining technique with cells manufactured on the resulting silicon strips. These bifacial cells have a much greater surface area than the original wafer, leading to dramatic decreases in processing effort and silicon usage. Individual cells fabricated using the new process have displayed efficiencies up to 17. 5 % while a 560 cm 2 prototype module has displayed an efficiency of 12. 3 %. The size, thickness and bifacial nature of the cells offer the opportunity for a wide variety of <b>module</b> <b>architectures</b> and applications...|$|R
40|$|Protected <b>module</b> <b>architectures</b> (PMA) are an {{isolation}} {{mechanism that}} emerg-ing processors provide as security {{building blocks for}} modern software systems. Reasoning about these building blocks means reasoning about elaborate assem-bly code, which can be very complex due to the loose structure of the code. One way to overcome this complexity is providing the code with a well-structured semantics. This paper presents one such semantics, namely a fully abstract trace semantics, for an assembly language enhanced with PMA. The trace semantics represents the behaviour of protected assembly code with simple abstractions, unburdened by low-level details, at the maximum degree of precision. Further-more, it captures the capabilities of attackers to protected code and simplifies the formulation of a secure compiler targeting PMA-enhanced assembly lan-guage...|$|R
40|$|Abstract. Body sensor networks(BSNs) are {{emerging}} cyberphysical systems {{that promise to}} improve quality of life through improved healthcare,independent living for the elderly,and reduced healthcare costs. In the BSNâ€™s clients oriented family healthcare,the methods of data storage and reading are important to data processing in BSN. This paper mainly studies the methods of real-time data storage in a BSNâ€™s intelligent terminal based Android through {{the analysis of the}} client <b>moduleâ€™s</b> <b>architecture</b> in a BSN. And an application model is finally designed to meet the need of mobile healthcare systemâ€™s data storage and reading. The application model is suitable for a BSN oriented family healthcare. Through testing this application model,it indicates that this application model makes users more convenient to manage their medical data...|$|R
40|$|Abstract. Good {{assessment}} and evaluation of ERP {{is very important for}} us to know the effect of implement ERP. In this paper, we bring forward evaluation <b>module</b> <b>architecture</b> of chemical enterprises ERP based the actual situation of some chemical enterprise. Enterprises can make comprehensive {{assessment and}} evaluation of ERP through the module including six evaluation indicators...|$|E
40|$|Baldwin and Clark (2000) {{brought the}} {{substantial}} {{attention to the}} concept of product architecture. This concept, particularly the concept of <b>module</b> <b>architecture,</b> defines a product system as a "coordination system," taking the viewpoint that a product system is an object that is used by human users or developed by human developers. In this paper, product architecture is defined as a design concept for a product system that calls for complex part-to-part coordination in order to fulfill the user's objectives, whereby we seek to show that <b>module</b> <b>architecture</b> can clarify (1) the functions of a product, and (2) the relationship between users' commands and corresponding product actions. By doing so, it becomes possible for human users or developers, whose actions and behaviors are instinctively "context dependent," to operate and use highly complex systems as well as to design and develop new systems by seeking an appropriate combination of division of labor and collaboration between human beings and product systems. ...|$|E
40|$|The {{development}} of a highly integrated Ka-band (24 - 26 GHz) transceiver module for a high volume point to multipoint telecommunication application is presented. In {{order to reduce the}} costs, a full GaAs MMIC solution has been chosen. The <b>module</b> <b>architecture</b> and assembly technology are described. 8 different Ka-band MMICs have been or are being designed and fabricated for this application. The measured performances of the developed MMICs and of the module prototypes are given...|$|E
50|$|In October 1992, Massalin joined MicroUnity as a {{research}} scientist, where she became responsible for signal-processing <b>modules</b> and software <b>architecture.</b>|$|R
40|$|Proposed {{processor}} architecture {{would have}} flexibility of a multi-processor and computational {{power of a}} lockstep array. Using an efficient interconnection network, it accomodates {{a large number of}} individual processors and memory <b>modules.</b> Array <b>architecture</b> would be suitable for very large scientific simulation problems and other applications...|$|R
50|$|The fifth {{generation}} Espace {{was unveiled}} at the 2014 Paris Motor Show in October 2014. It abandons the large MPV design of previous generations, instead having a mid size crossover styling. The car {{is based on}} the Renault-Nissan Common <b>Module</b> Family <b>architecture</b> developed by both Renault and Nissan.|$|R
40|$|Based on Brooks' {{subsumption}} architecture, we {{introduce a}} relational {{definition of a}} layered <b>module</b> <b>architecture.</b> We present two straightforward implementations following the declarative and the procedural meaning of such architectures. Based on these representations {{and the notion of}} state snapshots we then explain how to learn relational, discrete descriptions of asynchronous and possible non-deterministic behaviour. We conclude with an outlook of how relational learning can be used to optimise module behaviour, how to prune redundant connections and how to induce functionalities of higher level competence...|$|E
40|$|This {{document}} {{describes the}} module {{design of the}} In-Response system. It presents {{an overview of the}} user and functional requirements and translates them into design requirements for the implementation of each module, describing the <b>module</b> <b>architecture,</b> sub-models of each module, external and internal dataflow interchange, and method, algorithm and rules implementing the corresponding functions Incident prediction, incident detection, incident verification, incident response, HER, design, graphical user interface, RDBMS. DG XIII TR 1030 DG XIII TR 1030 DELIVERABLE D 5. 1 Module Design TABLE OF CONTENTS 1...|$|E
40|$|To {{assist the}} {{decision}} makers, we {{develop a new}} supply chain simulation software: Easy-SC, a Java-based tool that simplifies the supply chain simulation. In its current state of development, Easy-SC is a modeling tool for assessing {{the pros and cons}} of new facility locations, resource allocations and different combinations of policies. It can be used in the modeling of small projects such as single inventory units to large-scale projects such as world wide supply chains. This paper introduces Easy-SC by an examination of its current software <b>module</b> <b>architecture,</b> modeling elements, basic features and simulation processes. ...|$|E
40|$|The thesis {{presents}} {{the computer program}} based on building information model - Allplan and its use in construction industry. The introductory part presents basic information about BIM and the software tool and its modules that enable threedimensional graphic presentation of the building or its separate elements. Special attention {{is devoted to the}} <b>modules</b> <b>architecture,</b> steel reinforcement and geodesy. The second part of the thesis is presenting the use and demostration of the software enviroment Allplan for a case study, i. e. residential neighbourhood Mlac near Ozeljan construction project, where the contractor used the above mentioned software for the preparation of the detailed drawings required for the execution stage. Efficiency of the selected 3 D software tool is evaluated on model building and accompanying drawings. A evaluation of the software application is presented in {{the last part of the}} thesis...|$|R
40|$|We {{describe}} a modular compiler architecture {{that has been}} developed over the years for a functional data model DBMS. This has proved itself in practice, when major extensions have been developed quickly by reuse of modules (possibly reordered) saving much development time. We analyse the reasons for success and discuss the intermediate code (ICode) format used to communicate between <b>modules.</b> This <b>architecture</b> using a shared list structure suits Prolog, which can also manipulate partially instantiated ICode fragments by unification in a way not open to functional languages. These manipulation routines are shared by many <b>modules.</b> The <b>architecture</b> is oriented towards performance improvement by high-level code transformation for novel database applications, which makes it different from those using classic compiler technology. 2 1 Introduction The idea of a callable compiler was originally introduced into persistent languages, such as PS-Algol [26], {{as a way of}} overcoming the difficul [...] ...|$|R
50|$|The IMA concept proposes an {{integrated}} architecture with application software portable across an assembly of common hardware <b>modules.</b> An IMA <b>architecture</b> imposes multiple requirements on the underlying operating system.|$|R
40|$|In this paper, {{a method}} for verifying the {{equivalence}} of logic program modules under a Gaifman-Shapiro-style <b>module</b> <b>architecture</b> is proposed. The idea is to adapt a translation-based verification technique, which was originally devised for complete programs only, for program modules. In addition, optimization strategies are {{addressed in order to}} exploit the modular structure of programs in verification tasks. A number of experiments on verification strategies are also conducted using LPEQ which implements the verification method for the SMOD-ELS system. Preliminary results indicate that at least in certain cases the overall time spent on verification tasks can be reduced through modularization...|$|E
40|$|The {{design and}} {{development}} of a prototype computer-based instruction (CBI) module is described. The module covers introductory structural analysis techniques and demonstrates the practicality of CBI for undergraduate engineering education. The moduleâ€™s generic learning objectives are used to develop a set of guiding principles for CBI development. Choice of authoring software and the <b>module</b> <b>architecture</b> are presented, followed by {{the details of the}} user interface, logic, and screen layout. The module design and software development process outlined here are easily extended to computer-based tutorials that present problem solving methods for engineering, mathematics, and the natural sciences...|$|E
40|$|This paper {{presents}} a rule-based expert {{system that can}} be used for the selection of a suitable production planning and control (PPC) software package to be applied in a manufacturing firm. A production system's typology and a compact PPC software reference model are included in the knowledge base which has been created. The inferences made are based on rules that relate a semantic network of PPC software features with a semantic network of production systems' attributes. The results given by the expert system include the <b>module</b> <b>architecture</b> and the set of features of the PPC software package, which are applicable in a certain manufacturing setting...|$|E
40|$|We {{describe}} an architecture for invariant visual detection and recognition. Learning is {{performed in a}} single central <b>module.</b> The <b>architecture</b> makes use of copies of retinotopic layers of local features, with a particular design of inputs and outputs, {{that allows them to}} be primed either to attend to a particular location, or to attend to a particular object representation. In the forme...|$|R
40|$|Protected <b>module</b> <b>architectures</b> such as Intel SGX {{hold the}} promise of {{protecting}} sensitive computations from a potentially compromised operating system. Recent research convincingly demonstrated, however, that SGX's strengthened adversary model also gives rise to to {{a new class of}} powerful, low-noise side-channel attacks leveraging first-rate control over hardware. These attacks commonly rely on frequent enclave preemptions to obtain fine-grained side-channel observations. A maximal temporal resolution is achieved when the victim state is measured after every instruction. Current state-of-the-art enclave execution control schemes, however, do not generally achieve such instruction-level granularity. This paper presents SGX-Step, an open-source Linux kernel framework that allows an untrusted host process to configure APIC timer interrupts and track page table entries directly from user space. We contribute and evaluate an improved approach to single-step enclaved execution at instruction-level granularity, and we show how SGX-Step enables several new or improved attacks. Finally, we discuss its implications for the design of effective defense mechanisms. status: accepte...|$|R
40|$|ABSTRACT: A new {{technique}} has been devised for {{the manufacture of}} thin (< 60 Âµm) highly efficient single crystalline solar cells. Novel methods of encapsulating these Sliver Â® solar cells have also been devised. Narrow grooves are formed through a 1 - 2 mm thick wafer. Device processing (diffusion, oxidation, deposition) is performed on the wafer, so {{that each of the}} narrow strips becomes a solar cell. The strips are then detached from the wafer and laid on their sides, which greatly increases the surface area of solar cell that can be obtained from the wafer. Further gains of a factor of two can be obtained by utilising a simple method of static concentration. Large decreases in processing effort (up to 30 -fold) and silicon usage (up to 10 -fold) per m 2 of module are possible. The size, thickness and bifacial nature of the cells create the opportunity {{for a wide variety of}} <b>module</b> <b>architectures</b> and applications...|$|R
