4|27|Public
50|$|Techniques {{used in the}} ALE {{standard}} include automatic signaling, {{automatic station}} identification (sounding), polling, <b>message</b> <b>store-and-forward,</b> linking protection and anti-spoofing to prevent hostile denial of service by ending the channel scanning process. Optional ALE functions include polling and the exchange of orderwire commands and messages. The orderwire message, known as AMD (Automatic Message Display), is {{the most commonly used}} text transfer method of ALE, and the only universal method that all ALE controllers have in common for displaying text. It is common for vendors to offer extensions to AMD for various non-standard features, although dependency on these extensions undermines interoperability. As in all interoperability scenarios, care should be taken to determine if this is acceptable before using such extensions.|$|E
40|$|In {{this paper}} we test the {{suitability}} of Java to implement a scalable Web Service that solves a set of problems related to peer-to-peer interactions between Web Services that are behind firewalls or not generally accessible. In particular we describe how to enable reliable and long running conversations through firewalls between Web Service peers that have no accessible network endpoints. Our solution is to implement in Java a Web Services Dispatcher (WSD) that is an intermediary service that forwards messages and can facilitate message exchanges by supporting SOAP RPC over HTTP and WS-Addressing for asynchronous messaging. We describe how Web Service clients that have no network endpoints, such as applets, can become Web Service peers by using an additional <b>message</b> <b>store-and-forward</b> service (”mailbox”). Then we conduct a set of experiments to evaluate performance of Java implementation in realistic Web Service scenarios, involving intercontinental tests between France and the US. ...|$|E
40|$|In {{this paper}} we test the {{suitability}} of Java to implement a scalable Web Service that solves a set of problems related to peer-to-peer interactions between Web Services that behind firewalls or not generally accessible. In particular we describe how to enable reliable and long running conversations through firewalls betweenWeb Service peers have no accessible network endpoints. Our solution is to implement in Java aWeb Services Dispatcher (WSD) that is an intermediary service that forwards messages and can facilitate message exchanges by supporting SOAP RPC over HTTP and WS-Addressing for asynchronous messaging. We describe how Web Service clients that have no network endpoints, such as applets, can become Web Service peers by using an additional <b>message</b> <b>store-and-forward</b> service ("mailbox"). Then we conduct a set of experiments to evaluate performance of Java implementation in realistic Web Service scenarios, involving intercontinental tests between France and the US...|$|E
50|$|Groove's {{basic set}} of {{services}} (including always-on security, persistent chat, <b>store-and-forward</b> <b>messaging</b> delivery, firewall/NAT transparency, ad-hoc group formation, and change notification) may be customized with tools.|$|R
50|$|MHSnet is a <b>store-and-forward</b> <b>Message</b> Handling System for {{wide area}} networks. MHSnet and its precursor, SUN3, {{were used to}} {{implement}} the Australian Computer Science network, commonly known as ACSnet, which connected Australia's Universities {{to each other and}} to ARPANET.|$|R
40|$|This paper {{presents}} applications using Pronto[12] and its corresponding functions. Pronto is a middleware {{system for}} mobile applications with messaging {{as a basis}} in both centralized and decentralized forms. It addresses design issues in mobile computing, including data optimization, resource constraints, and network characteristics. Pronto consists of a lightweight Message Oriented Middleware (MOM) client and an intelligent gateway as a <b>message</b> hub with <b>store-and-forward</b> <b>messaging.</b> The publishsubscribe paradigm is ideal for mobile applications, as mobile devices are commonly used for data collection under conditions of frequent disconnection and changing numbers of recipients. This paradigm provides greater flexibility due to decoupling of publisher and subscriber applications. Mobile applications benefit from advantages by deploying Pronto, including disconnected operation, Gateway caching, compression, data transformation by Gateway plug-in functions, and content-based subscription. ...|$|R
40|$|OBJECTIVE: Predict the {{behavior}} and estimate the telecommunication cost of a wide-area <b>message</b> <b>store-and-forward</b> network for health care providers that uses the telephone system. DESIGN: A tool with which to perform large-scale discrete-event simulations was developed. Network models for star and mesh topologies were constructed to analyze the differences in performances and telecommunication costs. The distribution of nodes in the network models approximates the distribution of physicians, hospitals, medical labs, and insurers in the Province of Saskatchewan, Canada. Modeling parameters were based on measurements taken from a prototype telephone network and a survey conducted at two medical clinics. Simulation studies were conducted for both topologies. RESULTS: For either topology, the telecommunication cost of a network in Saskatchewan is projected {{to be less than}} $ 100 (Canadian) per month per node. The estimated telecommunication cost of the star topology is approximately half that of the mesh. Simulations predict that a mean end-to-end message delivery time of two hours or less is achievable at this cost. A doubling of the data volume results in an increase of less than 50 % in the mean end-to-end message transfer time. CONCLUSION: The simulation models provided an estimate of network performance and telecommunication cost in a specific Canadian province. At the expected operating point, network performance appeared to be relatively insensitive to increases in data volume. Similar results might be anticipated in other rural states and provinces in North America where a telephone-based network is desired...|$|E
40|$|Abstract — Dynamic sensor network(DSN) {{technology}} {{which is}} based on swarming flight type air node offers analyzed and acquired information on target data gathered by air nodes in rotation flight or 3 dimension array flight. Efficient operation of dynamic sensor network based on air node is possible when problems of processing time, data transmission reliability, power consumption and intermittent connectivity are solved. Delay tolerant network (DTN) can be a desirable alternative to solve those problems. DTN using <b>store-and-forward</b> <b>message</b> switching technology is a solution to intermittent network connectivity, long and variable delay time, asymmetric data rates, and high error rates. However, all processes are performed at the bundle layer, so high power consumption, long processing time, and repeated reliability technique occur. DSN based on swarming flight type air node need to adopt <b>store-and-forward</b> <b>message</b> switching technique of DTN, the cancelation scheme of repeated reliability technique, fast processing time with simplified layer composition...|$|R
40|$|HikerNet is a <b>store-and-forward</b> <b>messaging</b> {{system for}} areas without {{ordinary}} communication infrastructure. The transport {{of the messages}} is accomplished by devices that are carried around. When devices are in close range to each other, messages can be exchanged based on peer-to-peer connections in an ad-hoc network. The messages are sent asynchronously in a store-and-forward pattern. We have implemented a simulation for HikerNet. Results and conclusions from simulations of the HikerNet are presented in this document. ...|$|R
50|$|The {{complete}} distributed case handling {{application is}} provided in form of a single active Document ("&alpha;-Doc").The α-Doc is a case file (as information carrier) with an embedded workflow engine (in form of active properties).Inviting process participants is equivalent to providing them {{with a copy of}} an α-Doc, copying it like an ordinary desktop file.All α-Docs that belong to the same case can synchronize each other, based on the participant management, electronic postboxes, <b>store-and-forward</b> <b>messaging,</b> and an offline-capable synchronization protocol.|$|R
40|$|One of {{the most}} {{promising}} applications for small satellites in the 10 - 50 kg class is <b>store-and-forward</b> <b>message</b> relay. A single <b>store-and-forward</b> <b>message</b> relay satellite in a polar orbit can provide a global communications network carrying electronic mail, digitized voice, images or computer data. With appropriate choice of link characteristics, small, low cost ground terminals can be used. When designing an inexpensive microsatellite system to provide store-and-forward communications to small ground terminals, the engineer must challenge the standard assumptions made concerning such things as link frequency, modulation techniques, error-control, and multiple-access arbitration. Beginning with experiments on its UoSAT- 2 satellite, the Spacecraft Engineering Research Unit at the University of Surrey (UK) - in collaboration with AMSAT and VITA - has been investigating store-and-forward communications using microsatellites. The UoSAT- 2 store-and-forward transponder used a relatively slow 8 -bit CPU with only 96 kbytes of message store, but it has been used by stations world-wide, demonstrating system feasibility. The latest experiments undertaken by Surrey will qualify a commercial-capacity microsatellite store-and-forward system. The onboard transponder is based on a 8 -MHz, 16 -bit, 80 C 186 CPU, multitasking operating software and 4 Mbytes of RAM message store. The UoSAT/SST modular microsatellite bus provides 9600 baud FSK communications links and other support facilities for the store and forward mission. This payload was launched on the UoSAT- 3 satellite in January 1990, and is now successfully operating in orbit...|$|R
40|$|International Telemetering Conference Proceedings / October 28 - 31, 1985 / Riviera Hotel, Las Vegas, NevadaThis paper {{describes}} {{the design and}} performance of a flexible data link system for test and training range communications. To support {{a wide variety of}} range applications, this data link provides variable length <b>messages,</b> participant <b>store-and-forward</b> relays, remote data stations, three modes of operation - TDMA, polled, and carrier sense, and a transmitreceive range of more than 80 miles. The data link is adaptable to different message rates and sizes to support different types of missions. For example, a high dynamics aircraft mission can be supported by two-way 400 bit messages from 25 aircraft 10 times per second; a tactical armor mission can be supported by two-way 200 bit messages from 500 participants once per second. The data link is designed with packet radio and pseudonoise spread spectrum techniques to combat common range communication problems such as multipath fading, host vehicle obscuration, coexistence, interference, and vehicle dynamics. Data link performance is presented to show the flexibility and adaptability to various range communication requirements...|$|R
40|$|The main {{target of}} this {{research}} is to exploit the potential of this technology and enhance the interoperability between LoRa nodes and the Internet, by enabling CoAP communications between end-devices and remote clients. More specifically, the system is implemented according to the pubsub paradigm, where the figure of "broker" is introduced to allow <b>store-and-forward</b> <b>messaging.</b> The rationale behind this decision is that it spouses well with the LoRaWAN characteristics, since it allows the nodes to sleep between operations and favours uplink trasmissions. What is more the use of CoAP pubsub drastically simplifies the mote behavior, allowing it to only take the client role and shifting all the complexity of the server role to the broker.|$|R
40|$|To improve speech {{recognition}} applications, designers must understand acoustic memory and prosody. Human-human relationships are rarely a good model for designing effective user interfaces. Spoken language is effective for human-human interaction but often has severe limitations {{when applied to}} human-computer interaction. Speech is slow for presenting information, is transient and therefore difficult to review or edit, and interferes significantly with other cognitive tasks. However, speech has proved useful for <b>store-and-forward</b> <b>messages,</b> alerts in busy environments, and input-output for blind or motor-impaired users. Continued research and development {{should be able to}} improve certain speech input, output, and dialogue applications. Speech recognition and generation is sometimes helpful for environments that are hands-busy, eyes-busy, mobility-required, or hostile and shows promise for telephone-based services...|$|R
40|$|To obtain good {{performance}} in messaging over mobile networks, {{we have developed}} a Gateway. Gateway is a message hub that transmits information using <b>store-and-forward</b> <b>messaging</b> and provides powerful optimization and data transformation. The SmartCaching component provides generic caching in an N-tier architecture, an essential function of Gateway. Gateway can be integrated into Pronto, a middleware system for mobile applications with messaging as a basis [15]. Pronto then offers: 1) a lightweight client of Message Oriented Middleware (MOM) based on Java Message Service(JMS), 2) Gateway for reliable and efficient transmission between mobile devices and a server, and 3) Serverless JMS based on IP multicast. Integration of Gateway within Pronto provides a solution for mobile application-specific problems such as resource constraints, network characteristics, and data optimization...|$|R
40|$|In {{this paper}} we discuss {{progress}} {{in the development of}} Application Program Interfaces (APIs) and mechanisms which provide a comprehensive set of security services to application developers. The APIs, though similar, are designed for distinct environments: the session API ("GSS") is aimed at the on-line real-time <b>messaging</b> environment; the <b>store-and-forward</b> API ("IDUP") is particularly suited to electronic-mail types of environments (where messages are secured independently of any on-line communication with intended recipients of those messages). Both APIs are designed to be easy to use, yet with appropriate public-key-based mechanisms (such as SPKM and PIM) include many necessary services for communication security, such as data origin authentication, data confidentiality, data integrity, and support for non-repudiation. A full key management and certification infrastructure can be provided by implementations of these APIs/mechanisms in a way which is completely transparent to the cal [...] ...|$|R
40|$|Publish/subscribe is {{a popular}} event {{dissemination}} mechanism, providing anonymous, <b>store-and-forward</b> <b>message</b> distribution. Such systems have been deployed in quite small application environments, such as body area networks for patient health monitoring; they have also been deployed in extremely large distributed application environments, such as stock price distribution systems. The AMUSE project in the UK is a collaboration between computing researchers at the University of Glasgow and Imperial College London. This project {{is focused on the}} concept of self-managed cells (SMC) as the basic unit of autonomous computing, and the federation of such cells at different levels of scale. Publish/subcribe implementations form the basis of SMCs at all levels of scale, and the federation of these P/S implementations forms the basis of SMC-SMC interactions. This talk will present the P/S systems at the heart of small and large scale SMCs, and explore their federation. The efficacy of such federations will be discussed, and lessons learned recounted. </p...|$|R
40|$|Purpose – Anonymity {{research}} on high latency, store-and-forward mediums, such as e-mail, {{have led to}} comparatively well-researched anonymity technologies; however, similar achievements {{have proven to be}} more difficult for low-latency communications such as Web browsing. This paper aims to propose an anonymous Web browsing protocol that harnesses some of the advantages of a store-and-forward anonymity solutions whilst retaining some of the interactive properties of Web browsing. Design/methodology/approach – A review of existing anonymity solutions notes the advantages of mix technologies versus the advantages offered by Onion Routing. A solution is presented that features a combined approach of both solutions. Findings – The proposed protocol differentiates between Web requests and Web responses – requests are treated as <b>store-and-forward</b> <b>messages</b> whilst the Web response is handled like a data stream. Originality/value – The solution described can be used by existing anonymous Web browsing solutions in order to improve the level of anonymity whilst minimising the overhead of anonymously distributing Web content...|$|R
40|$|This memo {{defines a}} "Green Model" for {{information}} commerce using the Internet. In this model, the information merchant carries all risk of non-payment. By shifting {{the risk of}} non-payment, we do not require guarantees of credit worthiness for a merchant. This allows every participant to be both a buyer and a merchant {{of information on the}} Internet. Transactions relating to accounting and settlement are performed through either the exchange of <b>store-and-forward</b> <b>messages</b> (using the "application/green-commerce" format defined in [1]), or interactive protocol exchanges (using the "Simple Green Commerce Protocol" defined in [2]). Stein, Stefferud, Borenstein, Rose [Page 1] Listing for First Virtual Tue Oct 11 06 : 40 : 20 1994 Page draft The Green Commerce Model October, 1994 2. The Green Commerce Model We propose a new model for Internet commerce in which the information merchant carries all risk of non-payment. By shifting the risk of nonpayment, we do not require guarantees of credit wor [...] ...|$|R
40|$|Many {{communication}} devices, like {{mobile phones}} and PDAs, {{are enabled for}} near field communication by using Bluetooth. Many approaches dealt so far with the attempt to transfer mobile ad-hoc networks (MANET) to the mechanism of the “fixed internet” to mobile networks. In order to achieve liability and robustness of common TCP connections routing algorithm in near field communication based networks become more sophisticated and complex. These mechanisms often do not reflect on the application’s particularities. Our approach of an ad-hoc messaging network (AMNET) uses simple <b>store-and-forward</b> <b>message</b> passing to spread data asynchronously. We do not aim at the reliability of common internet networks but focus on application specific needs that can be covered by simple message passing mechanism. In this paper we will portray a powerful network by using simple devices and communication protocols {{on the basis of}} AMNETs. Simulation results of our AMNET approach provide insights towards speeding up the network setup process and to enable the use of AMNETs even with few participants by introducing a hybrid structure of infrastructure and mobile nodes...|$|R
40|$|Push {{notification}} services provide reliable, energy efficient, <b>store-and-forward</b> <b>messaging</b> between servers and clients. This mode {{of communication}} is widely used, and sufficiently compelling for mobile devices that push notification services are integrated into operating systems. Unfortunately, push notification services today allow the service provider to practice censorship, surveillance, and location tracking. We explore whether running a Tor hidden service from a smartphone offers a viable, privacy-aware alternative. We conduct empirical measurements {{in the lab}} as well as modelling using data from 2 014 handsets in the Device Analyzer dataset. We estimate the monthly median cost of cellular data required to support a Tor hidden service from a smartphone at 198 MiB. We further estimate that the network activity would cost at least 9. 6 % of total battery on a Nexus One device with a daily charging cycle and connected to the Internet via 3 G. We explore four strategies for reducing cellular data costs which, when combined, could potentially reduce the total monthly median cost to 61 MiB. Stephan Kollmann is supported by Microsoft Research through its PhD Scholarship Programme. Alastair R. Beresford is partly supported by The Boeing Company and EPSRC [grant number EP/M 020320 / 1]...|$|R
40|$|Traditional Internet {{technology}} makes {{a series}} of assumptions which may not exist in some cases especially in the challenged environments where {{some or all of}} those requirements are hard to meet. In addition, Internet-based communications face the privacy and data security issues simply because the data is essential to be sent to and maintained in a centralized infrastructure. DTN, by contrast, supports frequently interrupted communications by introducing a <b>Store-and-Forward</b> <b>message</b> switching mechanism: intermediate node keeps the bundle in its persistent storage and waits for a better opportunity to forward it at a later time to another custody node or directly to the final destination if reachable. Floating Content, as a DTN-based localized information sharing service exclusively dependent on mobile phones and other mobile devices, takes advantage of wireless interfaces such as Bluetooth or WLAN to communicate in ad-hoc mode. We evaluate Floating Content service and finally implement it into mobile platforms in the form of mobile application thus benefits the users by providing an opportunistic communication mechanism even in an extreme environment, as well, decreases the security and privacy worries to a certain extent...|$|R
40|$|Abstract — Following {{the success}} of short {{messaging}} service (SMS), multimedia messaging service (MMS) is emerging as a natural but revolutionary successor to short messaging. MMS allows personalized multimedia messages containing content such as images, audio, text and video to be created and transferred between MMS-capable phones and other devices. By using IP and its associated protocols, MMS is able to interwork with other messaging systems such as Internet messaging services. An important feature of MMS is the guaranteed delivery of <b>messages</b> via a <b>store-and-forward</b> mechanism which temporarily stores messages in the network until successfully delivered. Unlike SMS, multimedia messaging service does not mandate any maximum size for a multimedia message. This enhanced flexibility of MMS requires a careful design of the network {{in order to avoid}} excessive message delays and losses. This paper develops a mathematical model for evaluating the performance of an MMS system. Using the model, closed-form expressions for major performance parameters such as message loss, message delay and expiry probability have been derived. Furthermore, a simple algorithm is presented to find the optimal temporary storage size for a given set of system parameters. The accuracy of the presented analysis is evaluated through simulations which shows a close agreement between analytic and simulation results. I...|$|R
40|$|More {{than four}} and one half {{years have passed}} since the launch of four Microsat {{spacecraft}} developed by the Radio Amateur Satellite Corporation of North America (AMSAT-NA) and other cooperating AMSAT groups. This paper documents the current status of the four Microsats with particular emphasis on AO- 16 and DO- 17. The software supporting the <b>store-and-forward</b> <b>message</b> system of AO- 16 and LO- 19 has changed significantly since launch, starting out as a real-time digital repeater, progressing to a connected-mode file server, and finally evolving to a broadcast-mode file server. A concise description of this software evolution is included along with long-term satellite usage data for AO- 16. Statistics such as average bytes of directory and file data transmitted per day and the average time a user spends waiting for directory and file data requests to be serviced are included. In 1993, DO- 17 was returned to service in the 2 m band after having been off the air for over 18 months. The temporary lapse in operations was caused by difficulties loading software after the failure of its 13 cm downlink transmitter modulator. Details of the recovery are summarized {{as an example of how}} operational problems have been addressed by an all-volunteer software development, command, and control team...|$|R
40|$|Following {{the success}} of short {{messaging}} service (SMS), multimedia messaging service (MMS) is emerging as a natural but revolutionary successor to short messaging. MMS allows personalized multimedia messages containing content such as images, audio, text and video to be created and transferred between MMS-capable phones and other devices. By using IP and its associated protocols, MMS is able to interwork with other messaging systems such as Internet messaging services. An important feature of MMS is the guaranteed delivery of <b>messages</b> via a <b>store-and-forward</b> mechanism which temporarily stores messages in the network until successfully delivered. Unlike SMS, multimedia messaging service does not mandate any maximum size for a multimedia message. This enhanced flexibility of MMS requires a careful design of the network {{in order to avoid}} excessive message delays and losses. This paper develops a mathematical model for evaluating the performance of an MMS system. Using the model, closed-form expressions for major performance parameters such as message loss, message delay and expiry probability have been derived. Furthermore, a simple algorithm is presented to find the optimal temporary storage size for a given set of system parameters. The accuracy of the presented analysis is evaluated through simulations which shows a close agreement between analytic and simulation results...|$|R
2500|$|Although the Kims had a {{cellular}} phone with them, their remote location in the mountains was {{out of range of}} the cellular network, rendering the phone unusable for voice calls. [...] Despite being unusable for voice calls, their cell phone would {{play a key role in}} their rescue. [...] Cell phone text messages may go through even when there appears to be no signal, in part because text <b>messaging</b> is a <b>store-and-forward</b> service. [...] Two Edge Wireless engineers, Eric Fuqua and Noah Pugsley, contacted search and rescue authorities offering their help in the search. On Saturday, December 2, they began searching through the data logs of cell sites, trying to find records of repeaters to which the Kims' cellphone may have connected. They discovered that on November 26, 2006 at around 1:30a.m., the Kims' cellphone made a brief automatic connection to a cell site near Glendale, Oregon, and retrieved two text messages. Temporary atmospheric conditions, such as tropospheric ducting, can briefly allow radio communications over larger distances than normal. Through the data logs, the engineers determined that the cell phone was in a specific area west of the cellular tower. They then used a computer program to determine which areas in the mountains were within a line-of-sight to the cellular tower. This narrowed the search area tremendously, and finally focused rescue efforts on Bear Camp Road.|$|R
40|$|Human-human {{relationships}} are rarely a good {{model for the}} design of effective user interfaces. Spoken language is effective for human-human interaction (HHI), but it often has severe limitations when applied to human-computer interaction (HCI). Speech is slow for presenting information, it is difficult to review or edit, and it interferes with other cognitive tasks. However speech has proven to be useful for <b>store-and-forward</b> <b>messages,</b> alerts in busy environments, and input-output for blind or motor-impaired users. Speech recognition for control is helpful for hands-busy, eyes-busy, mobilityrequired, or hostile environments and it shows promise for use in telephone-based services. Dictation input is increasingly accurate, but adoption outside the disabled users community has been slow compared to visual interfaces. Obvious physical problems include fatigue from speaking continuously and the disruption in an office filled with people speaking. By understanding the cognitive processes surrounding human acoustic memory and processing, interface designers may be able to integrate speech more effectively and guide users more successfully. Then by appreciating the differences between HHI and HCI designers may be able to choose appropriate applications for human use of speech with computers. The key distinction may be the rich emotional content conveyed by prosody [...] the pacing, intonation, and amplitude in spoken language. Prosody is potent for HHI, but may be disruptive for HCI...|$|R
40|$|There is an {{increasing}} number of efforts to install wide area health care networks. Some of these networks are being built to support several applications over a wide user base consisting primarily of medical practices, hospitals, pharmacies, medical laboratories, payors, and suppliers. Although on-line, multi-media telecommunication is desirable for some purposes such as cardiac monitoring, <b>store-and-forward</b> <b>messaging</b> is adequate for many common, high-volume applications. Laboratory test results and payment claims, for example, can be distributed using electronic messaging networks. Several network prototypes have been constructed to determine the technical problems and to assess the effectiveness of electronic messaging in wide area health care networks. Our project, Health Link, developed prototype software that was able to use the public switched telephone network to exchange messages automatically, reliably and securely. The network could be configured to accommodate the many different traffic patterns and cost constraints of its users. Discrete event simulations were performed on several network models. Canonical star and mesh networks, that were composed of nodes operating at steady state under equal loads, were modeled. Both topologies were found to support the throughput of a generic wide area health care network. The mean message delivery time of the mesh network was found to be less than that of the star network. Further simulations were conducted for a realistic large-scale health care network consisting of 1, 553 doctors, 26 hospitals, four medical labs, one provincial lab and one insurer. Two network topologies were investigated: one using predominantly peer-to-peer communication, the other using client-server communication. (ABSTRACT TRUNCATED AT 250 WORDS...|$|R
40|$|International Telemetering Conference Proceedings / September 28 - 30, 1982 / Sheraton Harbor Island Hotel and Convention Center, San Diego, CaliforniaThis paper {{addresses}} {{the development of}} an architecture or framework to guide the design of future communications links and networks to support tactical military operations. In the next decade military forces are planned to be much more mobile and dispersed than they are today. Improved sensors and information processing capabilities will provide information needed to manage defense actions against numerically superior enemy forces, but the effective use of that information will require greatly improved communications capability. The resultant digital information traffic which consists of bursts of data between and among users and data sources must be accomodated efficiently, something that neither the present circuit-switches nor the current <b>store-and-forward</b> <b>message</b> transmission systems do well. Also, there is a requirement for much more interoperability between the systems of different services and nations. Internetwork routing of data transmissions can provide more robust connectivity via alternate paths, to cope with jamming and physical attacks on specific transmission media or nodes. An approach to data network interconnection structure that has emerged {{over the past several years}} is the concept of a hierarchial set of protocol layers, each one building on the one below. In total, they constitute a reference model for “open systems interconnection. ” The most common version of such a reference model is the International Organization for Standardization’s reference model of Open Systems Interconnection (ISO OSI) (1). The ISO OSI model has been designed to serve the fixed plant, benign-environment commercial user. DoD has special needs for security, precedence, internetwork data transfer and user mobility that are not yet reflected in the ISO model. Because of these special needs candidate DoD models that are different from the ISO model have been proposed. However, an important consideration in the choice of or development of a DoD standard is that DoD Systems should be able to use commercial equipment and interface with commercial data networks. Also a consideration is that the reference model used for strategic and tactical communications should be a standard throughout DoD, although specific protocols could differ as necessary to support tactical vs. strategic needs. In total, these requirements and considerations constitute a significant design challenge that must be addressed promptly if DoD is to have any influence on the finalization of the ISO OSI model to get it to accomodate DoD requirements as much as possible...|$|R
40|$|Graduation date: 2003 The {{purpose of}} the thesis is to design and develop a network of automated, distributed, living {{cell-based}} sensors, called CytoSensors. Their main role is to detect a variety of biological and chemical toxins. The system {{is designed to help}} researchers to carry out multitude of experiments, in order to build a practical knowledge base in toxin detection. The network is developed in accordance with industry standards, to be used and deployed for prevention in inhospitable environments such as battlefields, toxic urban locations or polluted agricultural regions. The sensor is composed of a processing unit (processor and memory), an archiving unit (permanent data storage), a communication unit, input devices attached to a data acquisition unit, and control devices. The CytoSensor is specifically designed to acquire and analyze visual information about the living cells: hence cameras are used as input devices and frame grabbers are used as the digitizers. The control devices are additional external devices developed to help control and automate the process of data acquisition: they comprise light intensity control USB boards to provide the correct amount of light to view the cells, touch panels for user-instrument interaction, and bar code readers to identify vials and experiments. The software, on the other hand, is a complex mosaic of different elements, each of which has a specific task to accomplish. These building blocks include the real-time acquisition, archiving, networking, processing, modelling, sensor output presentation and user interfaces. Our goal is to develop, integrate and optimize all these components to produce a viable and working device. The prototypes evolved from an offline, portable sensor equipped with a single high-resolution CCD camera and high-quality optics, to distributed online sensors with multiplexed CCD cameras and affordable optics. The acquisition board digitizes in real time the images from one to twelve multiplexed high resolution cameras. Several operational requirements must be met. First, a fault-tolerant and stable control over the input devices and control devices must be provided. Secondly, acquisition timing errors should be minimized as a trade-off between performance and the use of a low-cost, general-purpose, industry-standard operating system such as Microsoft Windows NT. Finally, in order to reduce development time and increase code reusability, a common abstraction layer is designed to provide for flexible use with various types of digitizers and cameras. As part of a distributed detection network, each sensor is able to exchange data with other "trusted" sensors and users, and to allow remote control of certain tasks. The sensor may be seen as a node capable of transmitting and receiving acquired or processed data to a distant device (another sensor, a workstation or a PDA) for visualization, inspection and decision-making by a front-end user. Each node on the network provides a set of complementary services including data acquisition, data processing, communication and system. The mandatory system service monitors the local system performance and manages data archiving. The communication service connects the various services on the network by enabling message-passing, file transfer and caching. The sensor network integrates a lightweight, interoperable and flexible RPC (Remote Procedure Call) protocol to achieve real-time control and monitoring of these distributed resources. A reliable embedded database system is used to store metadata bound to acquired and processed images. This database is also used to maintain information on neighbor nodes, and to check access credentials of available local services. Finally, by adding <b>store-and-forward</b> <b>messaging</b> capabilities, the application can be extended to work in wireless and mobile networks...|$|R

