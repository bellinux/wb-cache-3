22|34|Public
500|$|In February 1991, in an interview, Jon Vitti {{described}} [...] "Bart the Genius" [...] as {{his favorite}} among the episodes {{he wrote to}} that point. James L. Brooks also mentioned the episode among his favorites, saying that [...] "we did things with animation when that happened that just opened doors for us." [...] The show received mail from viewers complaining that the throwing away of a comic book was an incident of censorship. The invented word [...] "Kwyjibo" [...] in the episode inspired {{the creator of the}} Melissa <b>macro</b> <b>virus,</b> as well as the name of an Iron Oxide Copper Gold deposit in Quebec.|$|E
50|$|A <b>macro</b> <b>virus</b> can {{be spread}} through e-mail attachments, {{removable}} media, networks and the Internet, and is notoriously difficult to detect. A common {{way for a}} <b>macro</b> <b>virus</b> to infect a computer is by replacing normal macros with a virus. The <b>macro</b> <b>virus</b> replaces regular commands with the same name and runs when the command is selected. These malicious macros may start automatically when a document is opened or closed, without the user's knowledge.|$|E
5000|$|The macro viruses can, in some cases, {{interact}} between them. If two viruses are executed at {{the same}} time, both of them can modify the source code of each other.So, it results a new virus which can't be recognize by the anti-viruses software. But, the result is totally random : the <b>macro</b> <b>virus</b> can be more infectious or less infectious, it depends to {{what part of the}} virus has been changed.However, when the 'mating' is unintentional, the <b>macro</b> <b>virus</b> in result has more chances to be less infectious.Indeed, in order to replicate itself, it has to know the commands in the source code, but, if it's changed with a random scheme, the macro can't replicate itself.Nevertheless, it is possible to do such macros intentionally (it is different from polymorphic macros viruses which have to use another macro to change their contents) in order to increase the infectivity of the two viruses.In the example of the article, the <b>macro</b> <b>virus</b> Colors infected a document, but another infected the user's system before : the <b>macro</b> <b>virus</b> Concept.Both of these viruses use the command AutoOpen, so, at first, the <b>macro</b> <b>virus</b> Colors was detected but the command AutoOpen in it was the command of the <b>macro</b> <b>virus</b> Concept.Morever, when Concept duplicate itself, it is unencrypted, but the command in the virus Colors was encrypted (Colors encrypt its commands).So, the replicate of the <b>macro</b> <b>virus</b> Concept result of the hybridation of this <b>macro</b> <b>virus</b> (which infected the user's system first) and Colors.The [...] "hybrid" [...] could replicate itself only if AutoOpen wasn't executed, indeed this command comes from Concept, but the body of the hybrid is Colors, so that create some conflicts.This example shows the potential of mating macro viruses : if a couple of mating macro viruses is created, it will make more difficult to detect both of the <b>macro</b> <b>virus</b> (in hypothesis, there is only two which mate) by the virus-specificscanners and may reinforce the virility of the viruses.Fortunately, this type of <b>macro</b> <b>virus</b> is very rare (more than the polymorphic macro viruses, there may not exist one), indeed, create two (or more) which can interact with each other and not reduce the virlity (rather reinforce it) is complicated.|$|E
5000|$|So, {{in order}} to {{implement}} <b>macros</b> <b>viruses</b> which can change its contents, the hackers have to do another macro which fulfill the task to modify {{the content of the}} virus.However, this type of <b>macros</b> <b>viruses</b> isn't really widespread. Indeed, the hackers choose to do <b>macros</b> <b>viruses</b> because it's easy and quick to implement. Make a polymorphic macro need a lot of knowledge of the language WordBasic (it needs the advanced functionalities) and more time than a [...] "classic" [...] macro virus.Even if the hacker make a polymorphic macro, the polymorphism needs to be done, so, the document needs to be update and the update can be visible for a user.|$|R
50|$|In {{order to}} protect from these <b>macros</b> <b>viruses,</b> a scanner has to detect all {{elements}} of the chain and remove them properly.|$|R
50|$|Not all <b>macro</b> <b>viruses</b> are {{detected}} by antivirus software. Caution when opening email attachments {{and other documents}} decreases the chance of becoming infected.|$|R
50|$|The Melissa {{virus was}} a mass-mailing <b>macro</b> <b>virus.</b> As {{it was not}} a {{standalone}} program, it is not a worm.|$|E
50|$|One of {{the worst}} {{scenarios}} {{in the world of}} viruses would be a tool allowing to create a new virus by modifying an existing one.For executable files, it is hard to create this kind of tool. But it is very simple for macro viruses since sources of macros are always available. Based on the same idea of polymorphic macros, a macro can perform modifications to all macros present in the document. Considering this, there is just a few modifications to make to the macro in order to convert it in a <b>macro</b> <b>virus</b> mutator.So it is quite easy to create <b>macro</b> <b>virus</b> generators, so it is possible to create quickly several thousands of the known viruses.|$|E
50|$|The {{anti-virus}} has {{to detect}} all macros {{of the virus}} but also any remnants of them. In the example of Colors, the anti-virus must not detect that Microsoft's ScanProt (<b>macro</b> <b>virus</b> protection tool) contains remnants of the virus {{but the problem is}} that ScanProt does contain parts of the virus.|$|E
50|$|There {{will always}} be faults {{in the world of}} viruses. Fortunately, a lot of <b>macro</b> <b>viruses</b> can be countered with good anti-virus.This section {{presents}} characteristics that anti-virus should have to protect from macro-viruses.|$|R
50|$|The {{problem here}} is that there is not an easily {{identifiable}} set of macros, the anti-virus have to parse the body of the macro and identify and cut parts added by the <b>macro</b> <b>viruses</b> (fortunately, this task is not difficult to achieve).|$|R
40|$|Computer viruses pose a {{considerable}} problem for users of personal computers. The recent emergence of <b>macro</b> <b>viruses</b> {{as a problem}} of some importance may heighten virus awareness in general. Yet most people {{have little or no}} understanding of common anti-virus measures, the varieties of viruses that exist today, and the strategies which they use to accomplish infection and to defeat anti-viruses. It is well-known that the virus problem is most severe for users of IBM PCs and compatibles; however, users of other platforms, such as the Macintosh, should not become complacent - viruses exist for many platforms in varying numbers. The ease with which <b>macro</b> <b>viruses</b> may be written is discussed, and a new virus attack for the Macintosh is presented which closely resembles an attack under DOS for the PC...|$|R
50|$|Since a <b>macro</b> <b>virus</b> {{depends on}} the {{application}} rather than the operating system, it can infect a computer running any operating system to which the targeted application has been ported. In particular, since Microsoft Word is available on Macintosh computers, word macro viruses can attack some Macs in addition to Windows platforms.|$|E
50|$|An {{example of}} a <b>macro</b> <b>virus</b> is the Melissa virus which {{appeared}} in March 1999. When a user opens a Microsoft Word document containing the Melissa virus, their computer becomes infected. The virus then sends itself by email to the first 50 people in the personâ€™s address book. This made the virus replicate at a fast rate.|$|E
5000|$|... format command: Under MS-DOS, PC DOS, OS/2 and Microsoft Windows, disk {{formatting}} {{can be performed}} by the [...] command. The [...] program usually asks for confirmation beforehand to prevent accidental removal of data, but some versions of DOS have an undocumented [...] option; if used, the usual confirmation is skipped and the format begins right away. The WM/FormatC <b>macro</b> <b>virus</b> uses this command to format drive C: {{as soon as a}} document is opened.|$|E
25|$|Because HyperCard {{executed}} scripts in stacks {{immediately on}} opening, {{it was also}} one of the first applications susceptible to <b>macro</b> <b>viruses.</b> The Merryxmas virus was discovered in early 1993 by Ken Dunham, two years before the Concept virus. Very few viruses were based on HyperCard, and their overall impact was minimal.|$|R
5000|$|<b>Macro</b> <b>viruses</b> {{have become}} common since the mid-1990s. Most of these viruses {{are written in}} the {{scripting}} languages for Microsoft programs such as Microsoft Word and Microsoft Excel and spread throughout Microsoft Office by infecting documents and spreadsheets. Since Word and Excel were also available for Mac OS, most could also spread to Macintosh computers. Although most of these viruses {{did not have the}} ability to send infected email messages, those viruses which did take advantage of the Microsoft Outlook Component Object Model (COM) interface. Some old versions of Microsoft Word allow macros to replicate themselves with additional blank lines. If two <b>macro</b> <b>viruses</b> simultaneously infect a document, the combination of the two, if also self-replicating, can appear as a [...] "mating" [...] of the two and would likely be detected as a virus unique from the [...] "parents".|$|R
50|$|These flaws are {{completely}} different from the previous ones : the main problem in VBA-type <b>macros</b> is the <b>viruses.</b> <b>Macro</b> <b>viruses</b> are relatively recent, the first one named Concept, has been created in June 1995.The main reason {{of that is that}} the high-level languages used to write macro code are powerful and easy to use, considerably increasing the pool of potential virus writers, and the documents containing the macros can be disseminated rapidly and widely by E-mail.So they can be spread quickly and be very destructive.|$|R
5000|$|Visio 2013 drops {{support for}} writing VDX files {{in favor of}} the new VSDX and VSDM file formats. Created based on Open Packaging Conventions (OPC) {{standard}} (ISO 29500, Part 2), a VSDX or VSDM file consists of a group of XML files archived inside a Zip file. [...] VSDX and VSDM files differ only in that VSDM files may contain macros. Since these files are susceptible to <b>macro</b> <b>virus</b> infection, the program enforces strict security on them.|$|E
50|$|A type of <b>macro</b> <b>virus</b> {{that cut}} and paste the text of a {{document}} in the macro. The macro could be invoked with the Auto-open macro so the text would be re-created when the document (empty) is opened. The user will not notice that the document is empty. The macro could also convert only {{some parts of the}} text in order to be less noticeable.Removing macros from the document, manually or by using an anti-virus program would lead to a loss of the content of the document.|$|E
5000|$|The Princeton Word <b>Macro</b> <b>Virus</b> Loophole was {{discovered}} on August 22, 1996, nine days after Internet Explorer 3's release, which could allow Webmasters to cause an end-user's computer to initiate downloads without their consent via a backdoor. [...] Microsoft patched the vulnerability the following day; however, researchers {{went on to}} find more vulnerabilities and new types of problems, {{such as the ability}} to spoof a website (similar to the later phishing problem), with these issues triggering public concern over browser security. In early 1997, Microsoft released IE 3.02 as an update to fix most of the discovered security problems.|$|E
25|$|These <b>macro</b> <b>viruses</b> {{were the}} only known {{cross-platform}} threats between Windows and Macintosh computers and they {{were the only}} infection vectors to affect any macOS system up until the advent of video codec trojans in 2007. Microsoft released patches for Word X and Word 2004 that effectively eliminated the macro problem on the Mac by 2006.|$|R
50|$|The {{automation}} functionality {{provided by}} VBA made Excel {{a target for}} <b>macro</b> <b>viruses.</b> This caused serious problems until antivirus products began to detect these viruses. Microsoft belatedly took steps to prevent the misuse by adding the ability to disable macros completely, to enable macros when opening a workbook or to trust all macros signed using a trusted certificate.|$|R
50|$|These <b>macro</b> <b>viruses</b> {{were the}} only known {{cross-platform}} threats between Windows and Macintosh computers and they {{were the only}} infection vectors to affect any macOS system up until the advent of video codec trojans in 2007. Microsoft released patches for Word X and Word 2004 that effectively eliminated the macro problem on the Mac by 2006.|$|R
50|$|In {{computing}} terminology, a <b>macro</b> <b>virus</b> is a {{virus that}} is written in a macro language: a programming language which is embedded inside a software application (e.g., word processors and spreadsheet applications). Some applications, such as Microsoft Office, Excel, Power point allow macro programs to be embedded in documents such that the macros are run automatically when the document is opened, and this provides a distinct mechanism by which malicious computer instructions can spread. This is one reason it can be dangerous to open unexpected attachments in e-mails. Many antivirus programs can detect macro viruses, however the macro virus' behavior can still be difficult to detect.|$|E
5000|$|In February 1991, in an interview, Jon Vitti {{described}} [...] "Bart the Genius" [...] as {{his favorite}} among the episodes {{he wrote to}} that point. James L. Brooks also mentioned the episode among his favorites, saying that [...] "we did things with animation when that happened that just opened doors for us." [...] The show received mail from viewers complaining that the throwing away of a comic book was an incident of censorship. The invented word [...] "Kwyjibo" [...] in the episode inspired {{the creator of the}} Melissa <b>macro</b> <b>virus,</b> as well as the name of an Iron Oxide Copper Gold deposit in Quebec.|$|E
50|$|Additional to the {{responsibility}} of the anti-virus, there is a responsibility of the users : if a potential <b>macro</b> <b>virus</b> is detected, the user can choose {{what to do with it}} : ignore it, quarantine it or destroy it, but the last option is the most dangerous.The anti-virus can activate some destructives macro viruses which destroy some data when they are deleted by the anti virus.So, both of the virus scanners and the users are responsible of the security and the integrity of the documents/computer.Furthermore, even if the anti-virus aren't optimal in the virus detection, most of the macro viruses are detected and the progression in the virus detection improve but with the creation of new macro viruses.|$|E
5000|$|Because {{they are}} {{predominantly}} used on mail servers which may send mail to computers running other operating systems, Linux virus scanners generally use definitions for, and scan for, all known viruses for all computer platforms. For example, the open source ClamAV [...] "Detects ... viruses, worms and trojans, including Microsoft Office <b>macro</b> <b>viruses,</b> mobile malware, and other threats." ...|$|R
50|$|With {{the rise}} of the Microsoft Windows {{platform}} in the 1990s, and the flexible macros of its applications, it became possible to write infectious code in the macro language of Microsoft Word and similar programs. These <b>macro</b> <b>viruses</b> infect documents and templates rather than applications (executables), but rely on the fact that macros in a Word document are a form of executable code.|$|R
50|$|VBA {{has access}} to most Microsoft Windows system calls and executes when {{documents}} are opened. This makes it relatively easy to write computer viruses in VBA, commonly known as <b>macro</b> <b>viruses.</b> In the mid-to-late 1990s, this {{became one of the}} most common types of computer virus. However, during the late 1990s and to date, Microsoft has been patching and updating their programs. In addition, current anti-virus programs immediately counteract such attacks.|$|R
50|$|Most macros viruses are stand-alone; they donâ€™t {{depend on}} other macros (for the {{infectious}} {{part of the}} virus not for the replication for some viruses), but some macros viruses do. They are called parasitic macros.When they are launched, they check other macros (viruses or not), and append their contents to them. In this way, all of the macros became viruses.But, this type of macro canâ€™t be spread as quickly as stand-alone macros.Indeed, it depends on other macros, so, without them, the virus canâ€™t be spread. So, parasitic macros often are hybrid: they are stand alone and they can infect other macros.This kind of <b>macro</b> <b>virus</b> poses real problems to the virus-specific anti-virus; in fact, they change the content of other viruses, so the accurate detection isn't possible.|$|E
5000|$|Once a file {{containing}} a <b>macro</b> <b>virus</b> is opened, the virus can infect the system. When triggered, {{it will begin}} to embed itself in other documents and templates. It may corrupt {{other parts of the}} system, depending on what resources a macro in this application can access. When the infected documents are shared with other users and systems, the virus spreads. Macro viruses have been used as a method of installing software on a system without the user's consent, as they can be used to download and install software from the internet through the use of automated key-presses. However, this is uncommon as it is usually not fruitful for the virus coder since the installed software is usually noticed and uninstalled by the user.|$|E
5000|$|Many common applications, such as Microsoft Outlook and Microsoft Word, allow macro {{programs}} to be embedded in documents or emails, {{so that the}} programs may be run automatically when the document is opened. A <b>macro</b> <b>virus</b> (or [...] "document virus") is a virus that is written in a macro language, and embedded into these documents so that when users open the file, the virus code is executed, and can infect the user's computer. This {{is one of the}} reasons that it is dangerous to open unexpected or suspicious attachments in e-mails. While not opening attachments in e-mails from unknown persons or organizations can help to reduce the likelihood of contracting a virus, in some cases, the virus is designed so that the e-mail appears to be from a reputable organization (e.g., a major bank or credit card company).|$|E
50|$|There are {{different}} types of anti-virus (or scanner), {{one of them is}} the heuristic analysis anti-virus which interpretes or emulates macros.Indeed, to examine all of the branches of macros require a NP-complete complexity (using backtracking), so in this case, the analysis of one document (which contains macros) would take too much time. Interpreting or emulating a macro would lead to either false positives errors or <b>macro</b> <b>viruses</b> not detected.|$|R
40|$|An {{implementation}} of a mandatory virus protection policy is described. This policy is implemented within an {{implementation of}} the Generalized Framework for Access Control (GFAC) on the Linux operating system. This approach is similar, but more secure, than that implemented in IBM AntiVirus. The implementation is extended to include socket accesses {{in order to prevent}} malicious code entering the system via network connections. Finally, the challenges that are posed by application-level code (e. g. so-called <b>Macro</b> <b>viruses)</b> are discussed...|$|R
50|$|Microsoft Office 2000 (Office 9.0) {{introduced}} adaptive menus, where little-used {{options were}} {{hidden from the}} user. It also introduced a new security feature, built around digital signatures, to diminish the threat of <b>macro</b> <b>viruses.</b> Office 2000 automatically trusts macros (written in VBA 6) that were digitally signed from authors who have been previously designated as trusted. The Registration Wizard, a precursor to Microsoft Product Activation, remained in Brazil and was also extended to Australia and New Zealand, though not for volume-licensed editions. Academic software in the United States and Canada also featured the Registration Wizard.|$|R
