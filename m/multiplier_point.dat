1|247|Public
40|$|Abstract — This paper {{describes}} {{the development of}} a Decimal Floating Point adder/subtractor multiplier and division in verilog with the help of ModelSim and will be synthesized by using Xilinx tools. These are available in single cycle and pipeline architectures and fully synthesizable with performance comparable to other available high speed implementations. The design is described as graphical schematics and code. This representation is very valuable as allows for easy navigation over all the components of the units, which allows for a faster understanding of their inter relationships aspects of a Floating Point operation. The presented DFP adder/subtractor supports operations on the decimal 64 format and our extension is decimal floating point <b>multiplier.</b> <b>point</b> design is extended to support floating-point mu by adding several components including exponent generation, rounding, shifting, and exception handling. And DFP multiplier is compared with the booth multiplier technique...|$|E
5000|$|Multiplier - <b>Multiplies</b> the <b>points</b> {{awarded to}} a single player by 2x, 4x, or 6x.|$|R
5000|$|To {{determine}} which screen x-coordinate {{corresponds to a}} <b>point</b> at [...] <b>multiply</b> the <b>point</b> coordinates by:where ...|$|R
5000|$|MNOF (sr. Množi u Fiksnom zarezu, en. <b>Multiply,</b> Fixed <b>Point)</b> - Multiples the {{accumulator}} {{with the}} parameter ...|$|R
3000|$|Scale. <b>Multiplying</b> all <b>points</b> z(t) {{with the}} same real factor d[*]>[*] 0 leads to new {{coefficients}} d[*]·[*]c [...]...|$|R
6000|$|... "Be an {{old friend}} {{as much as you}} like; the more old friends she has the better, for she doesn't get on very well with some of her new. But don't for the present try to make her take up the cudgels for you. Her husband may have other views, and, as a person who wishes her well, I advise you not to <b>multiply</b> <b>points</b> of {{difference}} between them." ...|$|R
40|$|The {{accuracy}} of the multiplication depends on the precision of the multiplier. The variable precision floating <b>point</b> <b>multiplier</b> will have more accuracy {{when compared with the}} fixed precision multiplier. In this paper a variable precision floating <b>point</b> <b>multiplier</b> is considered. An effective BIST test pattern generator for variable precision floating <b>point</b> <b>multiplier</b> is proposed. A BIST TPG consists of pseudo random test pattern generator for the variable precision floating <b>point</b> <b>multiplier</b> and a comparator is used to compare the output response and the expected response, a control unit is used for selecting either primary inputs or the test pattern for the variable precision floating <b>point</b> <b>multiplier.</b> The Linear feedback shift registers are used to generate the pseudo random test pattern generation. The LFSR are very much efficient in producing the random test vectors which is used to produce high fault coverage...|$|R
5000|$|Chen Kuan-Hsing (...) is an {{intellectual}} (based in Taiwan) {{who works in}} the field of inter-Asian Cultural Studies. He is one of the editors of the journal Inter-Asia Cultural Studies. He is the author of Asia as Method: Toward Deimperialization (Duke University Press, 2010) and numerous other publications. His approach to cultural studies has been described as one of calling [...] "for using 'Asia as method'... the basic idea being to <b>multiply</b> <b>points</b> of reference within Asia so as to de-imperialize and de-colonize.|$|R
50|$|The Fightin' Words game board {{features}} different bonus tiles placed {{throughout the}} board. Bonus tiles <b>multiply</b> the <b>point</b> value of any letter tile placed on them.|$|R
50|$|For pairs, <b>multiply</b> the <b>points</b> by 2 (AA=20, KK=16, etc.), with {{a minimum}} of 5 points for any pair. 55 is given an extra point (i.e., 6).|$|R
40|$|<b>Multiplying</b> {{floating}} <b>point</b> {{numbers is}} a critical requirement for DSP applications involving large dynamic range. This paper focuses only on single precision normalized binary interchange format targeted for Xilinx Spartan- 3 FPGA based on VHDL. The multiplier was verified against Xilinx floating <b>point</b> <b>multiplier</b> core. It handles the overflow and underflow cases. Rounding is not implemented to give more precision when using the multiplier in a Multiply and Accumulate (MAC) unit...|$|R
50|$|In puzzle games, {{scores are}} usually gained by solving the puzzles quickly. Higher scores can {{be gained by}} {{performing}} combos of puzzle solving. There is often a time bonus which can add extra points. The level number is often a <b>multiplier</b> on the <b>points,</b> so higher scores are possible on harder levels. Level multipliers can also be picked up in some games, to further <b>multiply</b> your <b>points</b> bonus.|$|R
5000|$|<b>Multiplying</b> each <b>point</b> in the 2D-FFT by a {{propagation}} term {{which accounts}} for the phase change that each plane wave will undergo on its journey to the prediction plane.|$|R
40|$|An {{architecture}} for a fast 32 -bit floating <b>point</b> <b>multiplier</b> {{compliant with}} the single precision IEEE 754 - 2008 standard has been proposed in this paper. Verilog is used to implement a technology-independent pipelined design. Floating <b>Point</b> <b>Multiplier</b> is synthesized and targeted for Xilinx Spartan- 3 E FPGA. Keywords-Floating point, IEEE- 754 Standard...|$|R
40|$|In this paper, high Speed, {{low power}} and less delay 32 -bit IEEE 754 Floating PointSubtractor andMultiplierispresented using Booth Multiplier. Multiplication is an {{important}} fundamental function in many Digital Signal Processing (DSP) applications such as Fast Fourier Transform (FFT). Since multiplication dominates the execution time of most DSP algorithms, {{so there is a}} need of high speed multiplier. The main objective of this researchis to reduce delay, power and to increase the speed. The coding is done in VHDL, synthesis and simulationhas been done using Xilinx ISE simulator. The modules designed are 24 -bit Booth Multiplier for mantissa multiplication in Floating <b>Point</b> <b>Multiplier,</b> 32 -bit Floating Point Subtractor and 32 -bit Floating <b>Point</b> <b>Multiplier.</b> The Computational delay obtained by Floating <b>Point</b> Subtractor, booth <b>multiplier</b> and floating <b>point</b> <b>multiplier</b> is 16. 180 nsec, 33. 159 nsec and 18. 623 nsec respectively...|$|R
40|$|We {{investigate}} {{the use of}} monotonic abstraction and backward reachability analysis as means of performing shape analysis on programs with <b>multiply</b> <b>pointed</b> structures. By encoding the heap as a vertex- and edge-labeled graph, we can model the low level behaviour exhibited by programs written in the C programming language. Using the notion of signatures, which are predicates that define sets of heaps, we can check properties such as absence of null pointer dereference and shape invariants. We report on the results from running a prototype based on the method on several programs such as insertion into and merging of doubly-linked lists. UPMAR...|$|R
3000|$|Rotation. Rotation in {{the complex}} plane {{is the same as}} <b>multiplying</b> all <b>points</b> z(t) with a factor exp(j φ), where φ is the angle of rotation. This leads to new {{coefficients}} exp(j φ)c [...]...|$|R
40|$|In this paper, we have {{presented}} of High Speed, low power and less delay 32 -bit IEEE 754 Floating <b>Point</b> Subtractor and <b>Multiplier</b> using Booth Multiplier. Multiplication {{is an important}} fundamental function in many Digital Signal Processing (DSP) applications such as Fast Fourier Transform (FFT). Since multiplication dominates the execution time of most DSP algorithms, {{so there is a}} need of high speed multiplier. The main objective of this research is to reduce delay, power and to increase the speed. The coding is done in VHDL, synthesis and simulation has been done using Xilinx ISE simulator. The modules designed are 24 -bit Booth Multiplier for mantissa multiplication in Floating <b>Point</b> <b>Multiplier,</b> 32 -bit Floating Point Subtractor and 32 -bit Floating <b>Point</b> <b>Multiplier.</b> The Computational delay obtained by Floating <b>Point</b> Subtractor, booth <b>multiplier</b> and floating <b>point</b> <b>multiplier</b> is 16. 180 nsec, 33. 159 nsec and 18. 623 nsec respectivel...|$|R
5000|$|If [...] u is uniformly {{distributed}} in the interval0 ≤ u < 1, then the point(cos(2πu), sin(2πu))is uniformly distributed on the unit circumferencex2 + y2 = 1, and <b>multiplying</b> that <b>point</b> by an independentrandom variable ρ whose distribution is ...|$|R
40|$|Mergers and takeovers {{are again}} {{the order of}} the day. In North America, Europe, Australia, Africa and East Asia, firms try to combine, to take over, and to {{cooperate}} in joint-ventures. The combination phenomenon has risen spectacularly during the past few years. The European Community Competition Policy Reports also document an appreciable rise in acquisitions of minority holdings and in joint ventures, both of which have more than doubled during the past six years. This evidence, which could easily be <b>multiplied,</b> <b>points</b> towards one general characteristic of the merger and takeover phenomenon: mergers, takeovers and other combinations occur in waves, and each of these waves has its radiations throughout the economically relevant world...|$|R
5000|$|World Baseball Classic 6x (Winner {{receives}} 50 <b>points,</b> <b>multiplied</b> by 6 for a {{total of}} 300 points) ...|$|R
60|$|Undoubtedly Mr. Gladstone’s {{method in}} this long {{committee}} carried with it some disadvantages. His discursive treatment exposed an enormous surface. His abundance of illustration <b>multiplied</b> <b>points</b> for debate. His fertility in improvised arguments encouraged improvisation in disputants without the gift. Mr. Gladstone always supposed {{that a great}} theme needs to be copiously handled, which is perhaps doubtful, and indeed is often an exact inversion of the true state of things. However that may be, copiousness is a game at which two can play, as a patriotic opposition now {{and at other times}} has effectually disclosed. Some thought in these days that a man like Lord Althorp, for (M181) instance, would have given the obstructives much more trouble in their pursuits than did Mr. Gladstone.|$|R
40|$|Abstract—In {{this paper}} we {{describe}} an efficient implementation of an IEEE 754 single precision floating <b>point</b> <b>multiplier</b> using vedic mathematics. The purpose of using vedic mathematics {{is due to}} {{increase in the number}} of partial products in normal multiplication process,with using vedic mathematics partial products can be reduced so that the area and power constraints of the floating <b>point</b> <b>multiplier</b> can be reduced efficiently. Keywords [...] floatingpoint; multiplication, FPGA, Nikhilamsutra, Radix selection unit, Vedic mathematics...|$|R
50|$|If Kelly catches Harry, {{the player}} will score points {{based on the}} amount of time they have left. On levels 1-9, the player will score what is left on the clock multiplied by 100 points; on levels 10-15, the amount left on the clock is <b>multiplied</b> by 200 <b>points,</b> and {{afterwards}} the amount left on the clock is <b>multiplied</b> by 300 <b>points.</b> Kelly can also pick up suitcases and bags of money for 50 points each.|$|R
50|$|Points {{were awarded}} 401-300-225-169-127-95-71 {{based on the}} top race {{positions}} in each classe {{in each of the}} four races. There was an additional bonus <b>points</b> structure added, <b>multiplying</b> the <b>points</b> received by the number of karts entered in that competitors class, divided by the total number of entries for the field.|$|R
5000|$|... 6. <b>Multiplying</b> {{the basic}} <b>points</b> {{depending}} on whether the winner is the dealer or non-dealer, and whether the hand is won by tsumo or ron ...|$|R
5000|$|... 32-bit FPU {{coprocessor}} (COP1) with 6 stage long pipeline (floating <b>point</b> <b>multiply</b> accumulator × 1, {{floating point}} divider × 1). FPU is not IEEE compliant.|$|R
50|$|One unique {{aspect of}} the game is its {{proximity}} combo system. The game measures the player's closeness to the enemy {{at the time of its}} death, and <b>multiplies</b> the <b>points</b> earned anywhere from 2 to 16 times. If the player has a collision with an enemy or the environment, no multipliers are awarded for several seconds.|$|R
40|$|We discuss new {{algorithms}} for <b>multiplying</b> <b>points</b> on elliptic curves defined over small finite {{fields of}} characteristic two. This algorithm {{is an extension}} of previous results by Koblitz, Meier and Staffelbach. Experimental results show that the new methods can give a running time improvement of up to 50 % compared to the ordinary binary algorithm for multiplication. Finally, we present a table of elliptic curves, which are well suited for elliptic curve public key cryptosystems, and for which the new algorithm can be used. Keywords. Elliptic curves, Characteristic two, Multiplication, Frobenius expansion, Frobenius endomorphism. 1 Introduction Elliptic curves over finite fields have gained a lot of attention in public key cryptography in recent years ([4], [10]). For practical reasons, elliptic curves over fields of characteristic two are of special interest. Diffie-Hellman type cryptosystems using elliptic curves over F 2 155 were implemented and compared to RSA (see [12]). The most [...] ...|$|R
40|$|This work {{presents}} a new fast and efficient algorithm for a floating <b>point</b> <b>multiplier</b> that adheres to the IEEE 754 standard and also investigates its VLSI implementation. As a verification tool, VHDL {{is used to}} simulate the hardware model of the new floating <b>point</b> <b>multiplier</b> algorithm. In addition this work describes and compares several parallel multiplier architectures including a new parallel multiplier architecture which is both time optimal and regular in structure. This new multiplier architecture {{will be used as}} part for the new floating <b>point</b> <b>multiplier</b> algorithm. Finally the BICMOS implementation of the new multiplier architecture is discussed. Dept. of Electrical and Computer Engineering. Paper copy at Leddy Library: Theses 2 ̆ 6 Major Papers - Basement, West Bldg. / Call Number: Thesis 1992. M 474. Source: Masters Abstracts International, Volume: 31 - 04, page: 1847. Thesis (M. A. Sc.) [...] University of Windsor (Canada), 1992...|$|R
50|$|Well of Souls: This is a six-ball multiball where a shot to {{the lock}} hole is worth 2 million <b>points,</b> <b>multiplied</b> {{by the number of}} balls in play.|$|R
3000|$|The {{process of}} the RNLM filter is {{accomplished}} in several steps. The output in Eq. (8) requires M_s^ 2 + 1 floating <b>point</b> <b>multiplies</b> and adds. The computation of the weights in Eqs. (9) and (10) requires M_s^ 2 + 1 vector distances using M_p^ 2 × 1 vectors. This requires approximately 2 (M_s^ 2 + 1)M_p^ 2 additions/subtractions and 2 M_s^ 2 M_p^ 2 multiplications. The residual noise recursion in Eq. (12) requires M_s^ 2 + 1 floating <b>point</b> <b>multiplies</b> and adds. Finally, if BMA is used to find s [...]...|$|R
5000|$|... {{subject to}} the {{constraint}} [...] In other words, it {{is to find the}} critical points of where [...] is a Lagrange <b>multiplier.</b> The stationary <b>points</b> of [...] occur at ...|$|R
5000|$|In -dimensional space , uniform scaling by {{a factor}} [...] is {{accomplished}} by scalar multiplication with , that is, multiplying each coordinate of each point by [...] As a special case of linear transformation, it can be achieved also by <b>multiplying</b> each <b>point</b> (viewed as a column vector) with a diagonal matrix whose entries on the diagonal are all equal to , namely [...]|$|R
40|$|In this investigation, {{we use a}} new {{numerical}} method LDDA (Lagrangian Discontinuous Deformation Analysis) [1 - 2] {{to simulate}} a dynamic process of an earthquake occurring on strike slip fault, The method {{can be used to}} solve the dynamic problem with discontinuous deformation block system, it grows up on the base of the finite element method with do-main decomposition algorithm [3 - 4] and DDA (Discontinuous Deformation Analysis) [5] and overcomes the weakness of the classical Lagrangian multiplier method by using do-main decomposition algorithm and obviously prevails over the penalty method in the satis-faction of constrain conditions. The process of solving the problem by LDDA is as fol-lows: 1) find total contact <b>points</b> (Lagrangian <b>multiplier</b> <b>points)</b> between blocks according to the contact criteria of the DDA, 2) solve the forces on the contact points between blocks by domain decomposition method. 3) calculate the displacement and stresses caused by the contact forces in term of th...|$|R
40|$|This paper {{describes}} a fast checker for modular exponentiation, the computational problem underlying I,SA, one that, for modulus n, requires O(loglogn) queries and modular multiplications {{for a given}} confidence level. This paper also presents a hypothesis that implies {{the existence of a}} "constant-query" checker, requiring only a constant number of queries and modular multiplications, independent of the input. Finally, it is shown without hypothesis that in many practical cases, constant-query checkers can be obtained. Independently, l,onitt lubinfeld [1] has devised a checker for a restricted version of modular exponentiation 1 that requires O((loglog n) a) queries and O((loglogn) 4) modular multiplications for modulus n. In passing, it is noted that this checker {{can be used in a}} number of cryptographic contexts, e. g., the Diffie-Hellrnan key exchange and discrete logarithm based systems. Furthermore, an entirely analogous checker can be used to check elliptic curve discrete logarithm systems, where exponentiation corresponds to <b>multiplying</b> <b>points</b> on the curv...|$|R
