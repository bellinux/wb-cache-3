6|10|Public
50|$|Under Estonian law, since 15 December 2000 the {{cryptographic}} signature is legally {{equivalent to a}} <b>manual</b> <b>signature.</b>|$|E
50|$|The card's chip stores a key pair, {{allowing}} {{users to}} cryptographically sign digital documents based on principles of {{public key cryptography}} using DigiDoc. Under Estonian law, since 15 December 2000 the cryptographic signature is legally equivalent to a <b>manual</b> <b>signature.</b>|$|E
40|$|Signature {{is used as}} a {{proof of}} oneâ€™s ratification. This {{important}} purpose cause attempts of falsifying the signature. Falsifying signature is relatively simple, because most verification was done manually only by comparing the form of each signature with the originals. Itâ€™s even worse since most verification examiner are tired of the boring verification continuously, thatâ€™s why the <b>manual</b> <b>signature</b> verification result is found less satisfying. To overcome the weaknesses of this manual verification, this thesis proposes a computerized verification system for Latinos signature, which feature of signature extracted by Localized Arc Pattern Methods according to model pattern of Indonesian signature, which seeks appearance frequency the model pattern of inputted signature image. This feature achieved than compared to the previous reference signature. This comparison yields the dissimilarity value, which is used to define whether the signature is accepted or rejected through a critical value comparison. The experiment achieved an error rate of 9. 696 %. <br /...|$|E
40|$|Maintenance of land records, {{processing}} of mutations and delivery and access of documents are key areas {{which have been}} revamped {{as a result of}} successful Computerisation of Land Records project. Efforts have been also made to share data; contents and documents over Internet with relevant stakeholders. Hand-written copies with <b>manual</b> <b>signatures</b> of competent authority have an assurance value for consumers or citizens. This authenticity can also be introduced into electronic documents through different mechanisms like Digital Signature, Bar Code and Digital Pen. This paper describes these mechanisms of introducing the authenticity into the electronic documents. It {{is one of the key}} factor for success of governance projects at grass root level...|$|R
50|$|The {{player can}} carry an {{unlimited}} amount of weapons, including a minigun, rocket launcher, assault rifle and a cannon. There are 13 weapons total. 5 {{of them have}} a <b>manual</b> reload. The <b>signature</b> close-combat weapons from the first game, the knife and chainsaw, have been replaced with a sledgehammer with three modes of attack (vertical strike, 180 turn and full 360 turn).|$|R
40|$|This paper {{presents}} a new research project, {{which aims to}} reveal the elements of haptic sensation in playing pipe organ with mechanical tracker actions. In order to reach this goal sets of experiments will be carried out. Layout of these experiments are (1) measuring <b>manual</b> key <b>signatures</b> and analyzing them together with the interviews with expert organists to study the extent they can feel and communicate key properties, (2) measuring dynamical properties of key action, recording sound and recording organist’s movements simultaneously during performance, and (3) running psychophysical experiments on expert organists using an experimental keyboard where key action can be simulated and altered. The outcome of this research project will contribute to organ building and documentation and new class of haptics-enabled digital musical instruments...|$|R
40|$|Abstract. Intrusion {{signatures}} {{are used}} to detect and/or prevent fast-spreading worms or exploits, and usually, constructing these signatures is an automatic process without human intervention {{for the sake of}} speed. In principle, the automatic signature construction process can produce not only true-positive intrusion signatures but also false-positive ones, the latter of which poses a grave problem because they can be misused to disclose privacy information. <b>Manual</b> <b>signature</b> checking (for a whitelist) can solve the problem, but it slows down the reaction time for an attack dramatically. In this paper, we propose a mechanism to generate signatures automatically while preserving the privacy information. Essentially, we transform the original feature values within an audit trail instance into feature ranges, and then use these feature ranges to construct a privacy-preserved intrusion signature. Our current focus is on the methods constructing feature ranges, and for this purpose, several methods are proposed to discover feature ranges. The experimental results are quite encouraging: the transformation from values to ranges leads not only to the preservation of privacy but also to the enhancement of the detection performance. ...|$|E
40|$|Signature-based {{defense systems}} {{are one of}} the most popular {{architectures}} for defending against exploits of vulnerabilities. At the heart of a signature-based defense system is the signature generation mechanism. Since <b>manual</b> <b>signature</b> generation tends to be slow and error-prone, we need automatic signature generation techniques. In this paper, we present the first practical approach for automatically creating vulnerability signatures which recognize different exploit variants of a vulnerability regardless of the execution path they take. Vulnerability signatures are based on the semantics of the vulnerability in the program itself, thus are more accurate than other types of signatures. A key limitation of previous vulnerability signature generation approaches is that they were only able to demonstrate signature generation for a single program path that an exploit may take to exploit a vulnerability. However, there may be multiple program paths which an exploit can take to the vulnerability, resulting in unacceptably many false negatives if only one path is covered by the signature. We address this shortcoming by presenting and implementing techniques for automatically generating practical vulnerability signatures which cover multiple paths. By covering multiple paths, our signatures have lower false negatives than previous approaches, while still guaranteeing zero false positives. 1 This paper was originally submitted to CCS 2007, and is currently in draft form. Please contact the authors for later versions...|$|E
40|$|After a {{long time}} period using hand-written {{signatures}} and according to new times in which new technologies are present in daily live, it's {{time to make a}} transition towards digital signatures. A digital signature aims for three purposes: first, to univocally identify a document's signer; second, to ensure that this document has not been altered; and finally third, to prevent signer's repudiation. Therefore, digital signature allows to break with time, space and money constraints associated to <b>manual</b> <b>signature.</b> PortaSigma is a web application developed by Isigma company in 2009 in order to contribute towards the transition from hand-written to digital signature. So far, PortaSigma provides with tools to sign documents using digital certificates that are recognized (as valid certificates) within the country of application. Nevertheless, for those environments in which a recognized certificate is not available, it is necessary to provide new methods to ensure the validity of signatures. In this project, we have implemented new digital signature systems into the PortaSigma software covering the following topics: 1) to allow to digitally sign documents with a smartphone; 2) to use digital certificates recognized only within the customer-company context to digitally sign with PortaSigma; and 3) a client-side signature system that overcomes the constrains of current signature systems that are based on an applet running within the web browser. The latter is a rather novel solution that may be implemented into PortaSigma in the future, once the applets life will be close to its end...|$|E
25|$|Similarly, most forums allow {{users to}} define a {{signature}} (sometimes called a sig), which is a block of text, possibly with BBCode, which appears {{at the bottom of}} all of the user's posts. There is a character limit on signatures, though it may be so high that it is rarely hit. Often the forum's moderators impose <b>manual</b> rules on <b>signatures</b> to prevent them from being obnoxious (for example, being extremely long or having flashing images), and issue warnings or bans to users who break these rules. Like avatars, signatures may improve the recognizability of a poster. They may also allow the user to attach information to all of their posts, such as proclaiming support for a cause, noting facts about themselves, or quoting humorous things that have previously been said on the forum.|$|R
40|$|This paper {{presents}} {{a case study}} of a digital signature solution implementation for a healthcare organization that provides disability evaluation services for various government agencies and private companies. One service the company provides for its clients is online disability report generation and electronic report submission. When generating these disability reports, the signature of the examining physician is required for submission. The current process used by the company involves the <b>manual</b> collection of <b>signatures.</b> To streamline this process, and to meet legal and client requirements, the company was seeking a digital signature solution. A security framework previously proposed was utilized to guide the implementation of the digital signature solution. This security framework consists of eight sequential stages. An in-depth description of the first six stages for this case, including guidelines for choosing digital signature solutions, vendor analyses, and implementation issues, are provided...|$|R
500|$|On 17 November 1558, several Protestant heretics {{were saved}} by a Royal herald's timely {{announcement}} that Queen Mary had died {{shortly before the}} wooden faggots were to be lit at the Smithfield Stake. Under English Law Death Warrants were commanded by Sign <b>Manual</b> (the personal <b>signature</b> of the Monarch), invariably upon ministerial recommendation, which if unexercised {{by the time of}} a Sovereign's death required renewed authority which, in this case, Elizabeth I did not give thereby freeing the Protestants. During the 16th century, Smithfield was also used to execute swindlers and coin forgers who were boiled to death in oil. However, by the 18th century the [...] "Tyburn Tree" [...] (near the present-day Marble Arch), became the main place for public executions in London. After 1785, they were again moved, this time to the gates of Newgate prison — just to the south of Smithfield.|$|R
40|$|Malicious JavaScript code in webpages is a {{pressing}} prob-lem in the Internet. Classic security tools, such as anti-virus scanners, are hardly {{able to keep}} abreast of these attacks, as their obfuscation and complexity obstructs the <b>manual</b> generation of <b>signatures.</b> Recently, several methods have been proposed that combine JavaScript analysis with ma-chine learning for automatically generating detection mod-els. However, it is open how these methods can really op-erate autonomously and update detection models without manual intervention. In this paper, we present an empirical study of a fully automated system for collecting, analyz-ing and detecting malicious JavaScript code. The system is evaluated on a dataset of 3. 4 million benign and 8, 282 ma-licious webpages, which has been collected in a completely automated manner {{over a period of}} 5 months. The results of our study are mixed: For manually verified data excellent detection rates up to 93 % are achievable, yet for fully auto-mated learning only 67 % of the malicious code is identified. We conclude that fully automated systems are still a vision and several challenges need to be solved first...|$|R
40|$|Personal {{use of this}} {{material}} is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing {{this material}} for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works. D. Morocho, A. Morales, J. Fierrez and R. Vera-Rodriguez, "Towards human-assisted signature recognition: Improving biometric systems through attribute-based recognition," 2016 IEEE International Conference on Identity, Security and Behavior Analysis (ISBA), Sendai, 2016, pp. 1 - 6. doi: 10. 1109 /ISBA. 2016. 7477227 This work explores human-assisted schemes for improving automatic signature recognition systems. We present a crowdsourcing experiment to establish the human baseline performance for signature recognition tasks and a novel attribute-based semi-automatic signature verification system inspired in FDE analysis. We present different experiments over a public database and a self-developed tool for the <b>manual</b> annotation of <b>signature</b> attributes. The results demonstrate the benefits of attribute-based recognition approaches and encourage to further research in the capabilities of human intervention to improve the performance of automatic signature recognition systems. A. M. {{is supported by a}} JdC contract by the Spanish MECD (JCI- 2012 - 12357). This work has been partially supported by projects: Bio-Shield (TEC 2012 - 34881) from Spanish MINECO, BEAT (FP 7 -SEC- 284989) from EU...|$|R

