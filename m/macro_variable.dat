40|691|Public
5000|$|Anand Sinha joined RBI as a Grade-B officer [...] He rose {{through the}} ranks to reach the {{position}} of Executive Director. He was RBI's alternate representative in the Basel Committee on Banking Supervision (BCBS), Bank for International Settlements, Basel. He represented India on three sub-committees the BCBS, namely, Policy Development Group (PDG), Macro Prudential Supervision Group (MPG) and <b>Macro</b> <b>Variable</b> Task Force (MVTF). He also represented RBI on the Committee on Global Financial Systems (CGFS), BIS since December 2005. He {{was a member of}} the CGFS Working Group on Capital Flows to Emerging Market Economies. He represented India on the G20 Working Group on [...] "Enhancing Sound Regulation and Strengthening Transparency" [...] set up in the aftermath of the Global Financial Crisis.|$|E
40|$|In 21 {{years as}} a SAS ® {{consultant}} at the Federal Reserve Board, I have seen SAS users make the same mistakes year after year. This paper reviews some common mistakes and shows how to fix them. In the context of reviewing these mistakes, the paper provides details about SAS system processing that can help users employ the SAS system more effectively. 1. CREATING A <b>MACRO</b> <b>VARIABLE</b> AND USING IT IN THE SAME DATA STEP. Before executing a DATA step, the <b>macro</b> <b>variable</b> MACVAR is assigned the value "oldvalue " in either a prior DATA or PROC step or (as in the code below) in open code (not in a DATA or PROC step). In the DATA step, the <b>macro</b> <b>variable</b> MACVAR is set to "newvalue " with CALL SYMPUT. Then, using a <b>macro</b> <b>variable</b> reference (preceding a macro variable's name with an ampersand), the DATA step variable DATASTEP_VAR 1 is set {{to the value of}} MACVAR. The value of DATASTEP_VAR 1, displayed with a PUT statement, is expected to be "newvalue", but it is "oldvalue". / * Create or update a <b>macro</b> <b>variable</b> before executing a DATA step */ %let macvar=oldvalue...|$|E
40|$|When {{using the}} macro {{language}} {{it is not}} at all unusual to need to manipulate a list of values. These may be a list of variables in a data set or even a list of data set names. Macro variables are often used to hold this list and there are a couple of storage options. Either each word of the list can be stored in its own indexed <b>macro</b> <b>variable</b> or, as discussed in this paper, one <b>macro</b> <b>variable</b> can be used to store the entire list. The <b>macro</b> <b>variable</b> that contains this list of values can be created in a number of different ways including through the use of the DATA step or PROC SQL. Once created, the user will often want to step through the list performing one or more operations on each of the elements in the list, and this is often accomplished using a combination of the %DO statement and the %SCAN function. This paper shows how to write a series of values to a <b>macro</b> <b>variable</b> and then how to take advantage of the list by utilizing it from within the macro language...|$|E
40|$|My {{previous}} contribution on SAS <b>macro</b> <b>variables</b> (van Santen, 2009) {{introduced the}} basic {{aspects of this}} time saving tool of the SAS/BASE installation. <b>Macro</b> <b>variables</b> can be deployed whenever {{there is a need}} to repeatedly access a certain string in a given program or project. The current contribution gives two examples where <b>macro</b> <b>variables</b> might be useful...|$|R
40|$|Creating <b>macro</b> <b>variables</b> {{for later}} use can help to create dynamic, {{powerful}} SAS ® programs. Creating those variables in a standard, consistent manner without causing any conflicts with other <b>macro</b> <b>variables,</b> however, can be repetitive, time consuming, and prone to error. Here we present macro programs that assist with generating <b>macro</b> <b>variables</b> {{with the intent to}} use the variables in specific ways later in the program. Each macro meets a set of criteria including allowing the filtration of input data (if possible); deleting conflicting macro variables; creating <b>macro</b> <b>variables</b> in a consistent, predefined manner; and reporting the result of the macro’s activity...|$|R
40|$|International audienceNo-arbitrage macro-finance models use {{variance}} decompositions {{to gauge}} the extent of association between the <b>macro</b> <b>variables</b> and yields. We show that results generated by this approach {{are sensitive to the}} order of variables in the recursive identification scheme. In a four-factor model, one may obtain 18 different sets of answers out of 24 possible. We propose an alternative measure that is based on levels of <b>macro</b> <b>variables</b> as opposed to shocks. We account for the correlation between the macro and latent factors via projection of the latter onto the former. As a result, the association between <b>macro</b> <b>variables</b> and yields can be computed uniquely via an. <b>Macro</b> <b>variables</b> explain 80 % of the variation in the short rate and 50 % of the slope, and 54 % to 68 % of the term premia...|$|R
40|$|We {{know that}} we should always try to avoid storing special {{characters}} in macro variables. We {{know that there are}} just too many ways that special characters can cause problems when the <b>macro</b> <b>variable</b> is resolved. Sometimes, however, we just do not have a choice. Sometimes the characters must be stored in the <b>macro</b> <b>variable</b> whether we like it or not. And when they appear we need to know how to deal with them. We need to know which macro quoting functions will solve the problem, and even more importantly why we need to use them. This paper takes a quick look at the problems associated with the resolution and use of macro variables that contain special characters such as commas, quotes, ampersands, and parentheses...|$|E
40|$|This {{research}} is study done in Indonesia with headline “Growth Analysis of Banking Sector in Indonesia the Year 2001 ­ 2008 (Based on <b>Macro</b> <b>Variable</b> Review of Chartered Investment Counsel) " Intention of this {{research is}} to know level of growth of banking credit in Indonesia and know <b>macro</b> <b>variable</b> influence that is resident amounts, earnings of perkapita and amount of money supplies to growth of banking credit. Analyzer applied to know resident growth influence, income percapita, amount of money supplies to growth of credit is doubled linear regression test with statistical test two directions that is T test and F test and test ekonometrika that is classic assumption test (multikolinierity test, heteroskedastisity test, autocorrelation test). Result of research at doubled linear regression shows where T­calculate > T­table, hence growth of number of residents to growth of credit influential significant where T ­ calculate 2, 642 > T ­ table 2, 048 while earnings growth of percapita doesn't have an effect on significant to growth of credit where T ­ calculate 1, 960 T ­ table 2, 048. Assumption test result classical shows the happening of multikolinierity while at heteroskedastisity and autocorrelation free of model. Based on conclusion to <b>macro</b> <b>variable</b> of chartered investment counsel can be cought up with growth of credit as according to ability of Negara to be realized secure and prosperous public...|$|E
40|$|Intention of this {{research}} is to know level of growth of banking credit in Indonesia and know <b>macro</b> <b>variable</b> influence that is resident amounts, earnings of perkapita and amount of money supplies to growth of banking credit. Analyzer applied to know resident growth influence, income percapita, amount of money supplies to growth of credit is doubled linear regression test with statistical test two directions that is T test and F test and test ekonometrika that is classic assumption test (multikolinierity test, heteroskedastisity test, autocorrelation test). Result of research at doubled linear regression shows growth of number of residents to growth of credit influential significant. while earnings growth of percapita doesn 2 ̆ 7 t have an effect on significant to growth of credit and growth of amount of money supplies influential significant to growth of credit. Based on conclusion to <b>macro</b> <b>variable</b> of chartered investment counsel can be cought up with growth of credit as according to ability of Negara to be realized secure and prosperous public...|$|E
40|$|No-arbitrage macro-finance models use {{variance}} decompositions {{to gauge}} the extent of association between the <b>macro</b> <b>variables</b> and yields. We show that results generated by this approach {{are sensitive to the}} order of variables in the recursive identification scheme. In a four-factor model, one may obtain 18 different sets of answers out of 24 possible. We propose an alternative measure that is based on levels of <b>macro</b> <b>variables</b> as opposed to shocks. We account for the correlation between the macro and latent factors via projection of the latter onto the former. As a result, the association between <b>macro</b> <b>variables</b> and yields can be computed uniquely via an R 2. <b>Macro</b> <b>variables</b> explain 80 % of the variation in the short rate and 50 % of the slope, and 54 % to 68 % of the term premia. Macro-finance models Term structure Variance decomposition Kalman filter...|$|R
40|$|This paper re-examines {{the causal}} {{relationship}} between stock prices and <b>macro</b> <b>variables</b> like consumption expenditure, investment spending, and economic activity (measured by GDP) in Pakistan. Using annual data from 1959 - 60 to 1998 - 99 and applying cointegration and error correction analysis, the paper indicates {{the presence of}} long-run relationship between stock prices and <b>macro</b> <b>variables.</b> Regarding the cause and effect relationship, the analysis indicates a one-way causation from <b>macro</b> <b>variables</b> to stock prices, implying that in Pakistan fluctuations in <b>macro</b> <b>variables</b> cause changes in stock prices. The {{findings suggest that the}} stock market in Pakistan is not that developed to play its due role in influencing aggregate demand. A disturbing feature of the stock market in Pakistan is that it cannot be characterised as the leading indicator of economic activity. In the absence of other strong indicators, shooting up of stock prices may indicate a speculative bubble. ...|$|R
40|$|The {{contribution}} {{of this paper}} is to show how the balance of risk for various <b>macro</b> <b>variables</b> can be linked to inflation uncertainty. Inflation uncertainty is derived from uncertainty in the <b>macro</b> <b>variables</b> that are deemed to be important for future inflation. The paper focuses on the technical derivation of inflation forecast skewness from uncertainty in such <b>macro</b> <b>variables.</b> The uncertainty in these <b>macro</b> <b>variables</b> is based on their historical standard deviations, but we allow these to be subjectively adjusted if there is reason to be more or less uncertain than historically. We also allow for a subjective assessment of the balance of risk, i. e. whether the distributions are symmetric or not. The baseline case is that the distributions of the macro-variables are symmetric and Gaussian with standard deviations based on historical data; any departures from the baseline can typically be justified from some indicator correlated with future inflation...|$|R
40|$|SAS ® and the Output Delivery System (ODS) {{can make}} printed or web-based output {{processing}} {{easier and more}} productive. Creating multiple reports from a single dataset can be repetitive and time-consuming. Using macro variables and variable formats can simplify this process. Using macro processing and one data step, <b>macro</b> <b>variable</b> values {{can be used to}} name output files, limit observations in the dataset, and add titles to individual reports. The CALL routine can be used to facilitate this process...|$|E
40|$|Investment {{pass through}} stock {{exchange}} beside extend yield, possess risk too. Large small it risk on stock exchange very extremely influence of condition country in particular sector economic, politics and social. The research is result of study at prices share’s company of LQ 45 in Indonesia Stock Exchange period of February 2008 – January 2010 by the title “The {{influence of the}} exchange rate’s values of rupiah to prices share’s of Indonesia Stock Exchange (IDX). The research to analis influence of economic <b>macro</b> <b>variable</b> to share perform. <b>Macro</b> <b>variable</b> in this research is exchange rate’s of Rupiah to US Dollar. With to know <b>macro</b> <b>variable</b> who’s influential, then result it will be reference for investor to doing investment of stock exchange. The election of the share price’s as investment instrument’s it’s because the share price’s is assessed {{as one of the}} important factor in showing a stock liquidity. If the condition is on a liquidity stock, so share price’s incline to rise or much longer to stand because of more being attention by the investor. On the contrary, degradation of the share prices is considered as signal which will happened inversion of tendency. Data analysis technique which is used in this research is variable regression of lag. That is regression model which involves free variable X that do not only consisting in this period but also in previous period. Processing data is done by using package program of SPSS version 13. 00 with result acquirement of regression as follows Y =Rp. 23098, 917 – 1, 716 Xt. From the result of regression calculation which have already done based on existing data, generally it can know that the change of rupiah’s rate have a significant effect to the Share’s price. Based on the conclusion above, the researcher can imply to the investor to able to make put and call decisions on Share by paying attention to the change of rate that happened...|$|E
40|$|ABSTRACT List Processing or dynamic {{programming}} techniques free up your programming time by eliminating hard coded parame-ter values. List values {{can be obtained}} di-rectly from information you already have, {{and there is more}} than one way to do it! Commonly the list is stored as series of macro variables or as a <b>macro</b> <b>variable</b> with a series of values or even as values in a data set. This paper compares and contrasts the basic methods of treating variable val-ues as parameters and placing them into repetitive code...|$|E
40|$|Very often, Business Analysts and SAS ® programmers need {{to analyze}} the impacts of making changes to {{existing}} tables, datasets, <b>macro</b> <b>variables</b> etc. In order to fully understand {{the impact of the}} changes it is critical to list all SAS codes that use or reference the objects (tables, datasets, <b>macro</b> <b>variables</b> etc.) that are changing. This paper describes an innovative method for listing all the impacted code...|$|R
40|$|Using PROC SQL, can you {{identify}} {{at least four}} ways to: select and create <b>variables,</b> create <b>macro</b> <b>variables,</b> create or modify table structure, and change table content? Learn how to apply multiple PROC SQL programming options through task-based examples. This hands-on workshop reviews topics in table access, retrieval, structure and content, as well as creating <b>macro</b> <b>variables.</b> References are provided for key PROC SQL books, relevant webinars...|$|R
40|$|Learn a {{quick and}} easy way to run {{multiple}} SAS programs from one “Main ” program. This method provides flexibility and helps with the organization of <b>macro</b> <b>variables</b> that are used across multiple programs. By using the %INCLUDE statement you can retrieve and run external SAS programs. This paper will help you prepare to write a Main program, organize your <b>macro</b> <b>variables</b> and library references, and utilize the %INCLUDE statement...|$|R
40|$|The motive of {{this paper}} is to study and hence {{establish}} stylized facts for the small oil producing economy of Bahrain using time series techniques. This is done by estimating persistence in GDP and its two main components (oil and non-oil GDP) and by testing for the macroeconomic variables driving the non-oil business cycles. Applying these techniques to Bahrain data show: (i) GDP, non-oil GDP and oil GDP have little persistence, so that an innovation at the level of these series will have only transitory effects; and (ii) government expenditure is the only <b>macro</b> <b>variable</b> that Grangercauses non-oil business cycles. ...|$|E
40|$|The study {{develops}} {{the relationship between}} CIS program infrastructure variables and satisfaction/return among a sample of CIS alumni. The study is unique in its <b>macro</b> <b>variable</b> orientation and includes such infrastructure variables as faculty, technological support, placement services, overall curriculum, etc. The study addresses the tenets of services marketing {{with respect to the}} attributes and features that influence consumer satisfaction. The results of the analysis explain sizable variance (61. 6 %) and key predictors are identified, mainly “overall curriculum. ” The study adds to the arsenal of outcome assessment approaches and provides a platform for improvement that may influence program satisfaction/return...|$|E
30|$|The {{problem of}} food {{security}} is multifactorial. Within a household, food insecurity {{should be understood}} as a problem of 1) food availability, 2) food access, and 3) food consumption (Consejo Nacional de Evaluación de la Política de Desarrollo Social CONEVAL 2010). In macro terms, as for food availability, between 2003 and 2005 there was adequate food availability in Mexico. That is, the minimum requirements for the Mexican population was of 1850 kilocalories per capita per day, while the food supply reached 3270 kilocalories per capita per day (Consejo Nacional de Evaluación de la Política de Desarrollo Social CONEVAL 2010). Nevertheless, in terms of food access 18.2  % of the Mexican population had income below the food poverty line in 2008, which means {{that they did not have}} enough income to buy a representative basic food basket (Consejo Nacional de Evaluación de la Política de Desarrollo Social CONEVAL 2010). Finally, in terms of food consumption, in 2008 only a small proportion of rural households had a diversified diet, according to health recommendations (Consejo Nacional de Evaluación de la Política de Desarrollo Social CONEVAL 2010). This is the macro panorama, however, the <b>macro</b> <b>variable</b> for national food availability is not always informative of food availability for each household. The same can be said of the <b>macro</b> <b>variable</b> for food access and food consumption (Magaña-Lemus and J. Lara-Álvarez 2015). For that reason, in this research data at the household level will be used.|$|E
5000|$|The {{simplest}} {{solution is}} to give the <b>macros</b> <b>variables</b> names that do not conflict with any variable in the current program: ...|$|R
40|$|INTO: ” host-variable in PROC SQL is a {{powerful}} tool. It simplifies programming code while minimizing the risk of typographical errors. SQL INTO: creates one or more <b>macro</b> <b>variables,</b> {{based on the results}} of a SELECT statement. This <b>macro</b> <b>variable(s)</b> reflects a list of values that can then be used to manipulate data in both DATA and PROC steps. The usefulness of SQL INTO: will be demonstrated by analyzing a large medical claims database. Keywords: INTO:, host-variable, macro, SQ...|$|R
40|$|In many organizations, analysts {{manually}} {{change the}} SAS ® code {{that is used}} to run routine reports so that it uses current dates. However, analysts can use SAS date functions and formats to create automated <b>macro</b> <b>variables</b> that update all of the dates in a report script. Using <b>macro</b> date <b>variables</b> eliminates the need to manually edit scripts, and these variables can even be used to find current external files without searching for them. Date <b>macro</b> <b>variables</b> enable an analyst to execute report scripts at pre-designated times without ever having to edit the file. This ability can greatly reduce processing time and can also eliminate user error...|$|R
40|$|The SAS ® Macro Language is a {{powerful}} tool for extending the capabilities of the SAS System. This hands-on workshop presents numerous tips and tricks related to the construction of effective macros through the demonstration of a collection of proven Macro Language coding techniques. Attendees learn how to process statements containing macros; replace text strings with macro variables; generate SAS code using macros; manipulate <b>macro</b> <b>variable</b> values with macro functions; handle global and local variables; construct arithmetic and logical expressions; interface the macro language with the DATA step and SQL procedure; store and reuse macros; troubleshoot and debug macros; and develop efficient and portable macro language code...|$|E
40|$|The COMPARE {{procedure}} is very useful for validating SAS ® data sets in clinical studies. One particularly useful feature is its SYSINFO system <b>macro</b> <b>variable</b> by which numerical codes are issued following {{the comparison of}} data sets. These codes represent up to 16 messages that describe {{the outcome of the}} comparisons. Thus, interpreting SYSINFO codes can provide a very concise PROC COMPARE report, especially when many pairs of data sets are involved. In this paper, we demonstrate a novel approach for decoding SYSINFO values using the SAS function bAND (bitwise logical AND). With this function, one can quickly determine which of the 16 PROC COMPARE output messages a SYSINFO code contains...|$|E
40|$|When using large {{data sets}} with many variables, {{it is often}} {{necessary}} to find how the variables are correlated. However, many times, the cross-correlations among all the variables are {{not as important as}} the diagonal of a correlation matrix where both the var and with clauses are invoked. A simple and effective use of <b>macro</b> <b>variable</b> references can be employed to display only the diagonal using the noprint option for the PROC CORR and a single dataset step. While the simple statistics are not printed prior to the diagonal of the matrix, they can be obtained using a PROC MEANS prior to the invocation to the correlation procedure. The methodology for two ways of extraction of singular pieces from the matrix and various adaptations are presented...|$|E
40|$|Objective: The {{purpose of}} the study {{described}} here is to extend our understanding of needle transfer behaviors among injection drug users (IDUs) by combining both micro and <b>macro</b> <b>variables</b> in a multilevel model. Methods: A sample of 8, 404 IDUs interviewed at 18 sites of the National Institute on Drug Abuse (NIDA) Cooperative Agreement for AIDS Community-Based Outreach/Intervention Program (COOP) was used for the study. A multilevel model was employed to deal with intraclass correlation in the sample and to evaluate the impact of micro and <b>macro</b> <b>variables</b> on needle transfer among IDUs. Results: A significant intraclass correlation was detected in the sample. Needle transfer was associated with both the individual characteristics and the features of the social setting in which they were embedded. Some of the micro slopes were fixed, while some varied from site to site, depending on the values of <b>macro</b> <b>variables.</b> The micro intercept and the micro slope of ethnicity vary randomly across social settings, while they are partially determined by <b>macro</b> <b>variables.</b> Conclusion: Considering the intraclass correlation in the data and the effects of contextual features on individual behaviors, multilevel analysis of HIV risk behaviors should be considered when combining data from micro and macro levels (e. g., individual and project site levels) ...|$|R
40|$|We {{construct}} linear {{projections of}} <b>macro</b> <b>variables</b> conditional on hypothetical paths of monetary policy, using {{as an example}} an identified VAR model. Hypothetical policies are restricted to ones where both the policy intervention and its impacts are consistent with history [...] otherwise the linear projections {{are likely to be}} unreliable. We use the approach to interpret Federal Reserve decisions, modeling their frequent reassessment in light of new information about the tradeoffs policymakers face. The interventions we consider matter: they can shift projected paths and probability distributions of <b>macro</b> <b>variables</b> in economically meaningful ways. ...|$|R
40|$|In {{this paper}} {{we follow the}} work of Evans and Marshall and propose new {{approaches}} for modelling the joint development of <b>macro</b> <b>variables</b> and the returns of government bond yields of several maturities. The models are estimated and compared with other forecasting schemes previously proposed in the literature, especially those relying on univariate, VAR and error correction methods. The models are then used to judge {{the hypothesis that the}} information content of <b>macro</b> <b>variables</b> and the term structure of interest rates as a whole help improving forecasting performance. Our main conclusion is quite simple: if one is interested in computing short-term forecasts, then there is no significant improvement in incorporating information other than the one already present in past observations of the yield at hand; however, if one worries about long-term forecasts (which is frequently the case with pension insurance companies), then the information content of <b>macro</b> <b>variables</b> and the term structure can improve forecasting performance. ...|$|R
40|$|In {{clinical}} vaccine trials, participant {{safety is}} of great importance. A safety monitor program is required to check for lab abnormalities and adverse events that might trigger a vaccination pause. With {{the rapid growth of}} HIV vaccine trials, the challenge of programming support is to develop a safety monitor program that can be applied across protocols with minimal changes. This challenge can be met by using the table-driven approach. The project specifics are built into metadata tables. The CALL SYMPUT routines are used to assign the table columns (variables) to a series of macro variables. The indirect <b>macro</b> <b>variable</b> referencing (double ampersands) technique is applied to use metadata for dataset sorting, pause rule checking, and message displaying in the final report...|$|E
40|$|Macro {{variables}} {{are the most}} {{essential part of the}} SAS ® macro facility. One can create macro variables by using the %LET statement, the SYMPUT routine, or the INTO clause in the SELECT statement from the SQL procedure. Sometimes a SAS programmer is often unsure when best to use which method due to a lack in understanding each step of macro language processing. This lack in understanding includes how SAS statements are transferred from the input stack to the macro processor and DATA step compiler, what role the macro processor plays during this process, and when best to utilize the interface to interact with the macro facility during the DATA or SQL execution. Once one grasps the intricacies of macro language processing, one will best know how to accurately create a <b>macro</b> <b>variable...</b>|$|E
40|$|This paper {{analyses}} subjective {{economic well-being}} in several Eastern European countries from 1991 to 1995. Economic well-being explains {{a significant part}} of the variation in overall life satisfaction of Eastern Europeans. In an ordered logit model, the determinants of subjective economic well-being are analysed. Some results are very similar to typical findings in happiness regressions, such as a negative but u-shaped age effect, positive influences of education and relative income position, as well as a negative effect of unemployment. Differing results were found with regard to gender and marital status. Finally, comparing indicators of objective and subjective well-being on a macro level indicates that using a standard <b>macro</b> <b>variable</b> for crosscountry comparisons in well-being, such as real GDP per capita, may provide misleading results during the early stages of transformation. [...] Eastern Europe,economic well-being,happiness,economic transformation...|$|E
40|$|This paper investigates a general-equilibrium asset {{pricing model}} of the term {{structure}} of nominal interest rates. In a pure exchange economy with incomplete information, investors are unable to observe the expected growth rates of both exogenous real output and money supply and, therefore, engage in dynamic Bayesian inference. The dependence of term premia on beliefs allows the model to introduce a GARCH property, which interacts with the volatility of the <b>macro</b> <b>variables.</b> In particular, the volatility of excess returns is inversely related to noise in the <b>macro</b> <b>variables,</b> implying that their erratic movements may reduce uctuations in interest rates...|$|R
40|$|This paper {{describes}} {{techniques that}} use MS-Access Visual Basic tools {{to create a}} Graphical User Interface (GUI) to run SAS © and facilitate the passing of parameters to SAS. Using this GUI, users can fulfill any SAS task by embedding SAS codes in the Visual Basic script, and also execute separate SAS programs with or without <b>macro</b> <b>variables.</b> This paper will illustrate the following: how to create front-end components and setup their properties, how to embed SAS codes in the Visual Basic script, {{and how to use}} a GUI to run a separate SAS program with or without <b>macro</b> <b>variables...</b>|$|R
40|$|While it is {{understood}} that <b>macro</b> <b>variables</b> are referenced in ODS by using MVAR and NMVAR statements, macro programs {{continue to play a}} vital role in ODS. To back up this claim, the TABLETEMPLATE macro that generates a customized table in ODS is reviewed in depth. Looping in the macro eliminates the need for hard coding, and multiple ampersand <b>macro</b> <b>variables</b> (&&f&i) provide the only viable means for inserting data dependent text strings into a table. Pre and Post macro versions of the code are presented to emphasize the role played by macros in ODS. PROBLEM DEFINITION To generalize PROC TEMPLATE table definitions, it is recommended that DYNAMIC variables reference structural components such as headers or footers and that MVAR and NMVAR be reserved for constants that can change each time a compiled template is called in a DATA step. However, what if the <b>macro</b> <b>variables</b> you need to define come from the set of unique values in a column from the input data? Furthermore, what if you need a different outcome in a PROC TEMPLATE CELLSTYLE-AS statement for each unique value in the column? In this situation, a reliable table definition requires the assistance of a full-fledged macro with looping capabilities. What the paper describes is an application where an ODS table definition is nested inside the macro TABLETEMPLATE. The table definition uses MVAR and DYNAMIC variables in addition to conventional <b>macro</b> <b>variables</b> with multiple ampersands for managing the CELLSTYLE-AS statement...|$|R
