472|165|Public
25|$|<b>Memory</b> <b>protection</b> {{enables the}} kernel to limit a process' {{access to the}} computer's memory. Various methods of <b>memory</b> <b>protection</b> exist, {{including}} memory segmentation and paging. All methods require some level of hardware support (such as the 80286 MMU), which doesn't exist in all computers.|$|E
25|$|An MMU {{effectively}} performs {{virtual memory}} management, handling {{at the same}} time <b>memory</b> <b>protection,</b> cache control, bus arbitration and, in simpler computer architectures (especially 8-bit systems), bank switching.|$|E
25|$|The PPE and bus {{architecture}} includes various {{modes of operation}} giving different levels of <b>memory</b> <b>protection,</b> allowing areas of memory {{to be protected from}} access by specific processes running on the SPEs or the PPE.|$|E
5000|$|In Mac OS X Lion 10.7 (released July 2011), Apple {{expanded}} their implementation {{to cover all}} applications, stating [...] "address space layout randomization (ASLR) has been improved for all applications. It is now available for 32-bit apps (as are heap <b>memory</b> <b>protections),</b> making 64-bit and 32-bit applications more resistant to attack." ...|$|R
50|$|All models {{featured}} a CPU {{with at least}} a floating-point arithmetic unit, Memory map with access <b>protection,</b> <b>Memory</b> write <b>protection,</b> Two real-time clocks, a Power fail-safe, an External interface, Ten internal interrupt levels. Also a Multiplexor input/output processor (MIOP) featuring Channel A with eight sub-channels.|$|R
50|$|Early x86 {{computers}} {{used the}} segmented memory model addresses {{based on a}} combination of two numbers: a memory segment, and an offset within that segment.Some segments were implicitly treated as code segments, dedicated for instructions, stack segments, or normal data segments. Although the usages were different, the segments did not have different <b>memory</b> <b>protections</b> reflecting this.In the flat memory model all segments (segment registers) are generally set to zero, and only offsets are variable.|$|R
25|$|Windows {{versions}} 3.1 through ME {{had some}} level of <b>memory</b> <b>protection,</b> but programs could easily circumvent the need to use it. A general protection fault would be produced, indicating a segmentation violation had occurred; however, the system would often crash anyway.|$|E
25|$|Manages virtual memory, {{controlling}} <b>memory</b> <b>protection</b> and the paging {{of memory}} {{in and out}} of physical memory to secondary storage, and implements a general-purpose allocator of physical memory. It also implements a parser of PE executables that lets an executable be mapped or unmapped in a single, atomic step.|$|E
25|$|While the Windows 9x series {{offered the}} option of having {{profiles}} for multiple users, they had no concept of access privileges, and did not allow concurrent access; and so were not true multi-user operating systems. In addition, they implemented only partial <b>memory</b> <b>protection.</b> They were accordingly widely criticised for lack of security.|$|E
5000|$|As of August, 2004, {{nothing from}} the Exec Shield {{projects}} attempt to enforce <b>memory</b> <b>protections</b> by restricting mprotect (...) on any architecture; although memory may not initially be executable, it may become executable later, so the kernel will allow an application to mark memory pages as both writable and executable at the same time. However, {{in cooperation with the}} Security-Enhanced Linux project (SELinux), the standard policy for the Fedora Core distribution does prohibit this behavior for most executables, with only a few exceptions for compatibility reasons.|$|R
40|$|<b>Memory</b> {{integrity}} <b>protection</b> {{is crucial}} for many applications that store critical data in the memory. A secure real-time protection scheme can eliminate many potential attacks and protect such critical data effectively. However, existing schemes are not fast enough to provide on-line protection. The main difficulty in enrolling real-time <b>memory</b> integrity <b>protection</b> schemes is that the cryptographic operations typically cost a few hundred cycles per memory access. In this paper, we {{make an effort to}} reduce this overhead by proposing an improved <b>memory</b> integrity <b>protection</b> scheme. In addition, we for the first time propose a provably secure scheme that takes advantage of the error inheritance property, which can eliminate the costly check process that is normally required. More specifically, we propose the parallelization of the scheme, randomization of tagged data to eliminate potential attacks on error inheritance, and hashing of seeds (instead of the data) which enables delayed AES mask computations. The security of the proposed scheme is rigorously analyzed and the performance is measured. When these techniques are implemented simultaneously, the peak performance can be improved by up to a factor of 5 over a previously proposed scheme based on Merkle Trees. ...|$|R
40|$|The {{management}} of resources in multi-user computer systems. Emphasis is on problems of file-system design, process scheduling, <b>memory</b> allocation, <b>protection,</b> and tools needed for solutions. Course projects use the C/C++ language and include the design of portions of an operating system. 4 credit hours...|$|R
25|$|With its {{original}} introduction as Mac OS X, the system brought {{a number of}} new capabilities to provide a more stable and reliable platform than its predecessor, the classic Mac OS. For example, pre-emptive multitasking and <b>memory</b> <b>protection</b> improved the system's ability to run multiple applications simultaneously without them interrupting or corrupting each other.|$|E
25|$|Passwords are {{protected}} in memory while KeePass is running. On Windows Vista and later versions, passwords are encrypted in process memory using Windows Data Protection API, which allows storing {{the key for}} <b>memory</b> <b>protection</b> in a secure, non-swappable memory area. On previous Windows systems, KeePass falls back to using the ARC4 cipher with a temporary, random session key.|$|E
25|$|In {{addition}} to those existing forms of <b>memory</b> <b>protection,</b> Internet Explorer 9 now opts-in to SEHOP (Structured Exception Handler Overwrite Protection) which works by validating {{the integrity of the}} exception handling chain before dispatching exceptions. This helps ensure that structured exception handling cannot be used as an exploit vector, even when running outdated browser add-ons that have not been recompiled to take advantage of SafeSEH.|$|E
5000|$|Ependymin is a {{glycoprotein}} {{associated with}} the consolidation of long-term <b>memory,</b> claims involving <b>protection</b> from strokes, and neuronal regeneration.|$|R
50|$|In December 2012, Intel {{released}} Atom for servers, the S1200 series. The primary {{difference between}} these processors and all prior versions, is that ECC memory support has been added, enabling {{the use of the}} Atom in mission-critical server environments that demand redundancy and <b>memory</b> failure <b>protection.</b>|$|R
50|$|When {{the pointer}} moves outside {{the bounds of}} the array, some {{implementations}} will give an error message, some will try to extend the array dynamically, some will not notice and will produce undefined behavior, and a few will move the pointer to {{the opposite end of}} the array. Some tradeoffs are involved: expanding the array dynamically to the right is the most user-friendly approach and is good for memory-hungry programs, but it carries a speed penalty. If a fixed-size array is used it is helpful to make it very large, or better yet let the user set the size. Giving an error message for bounds violations is very useful for debugging but even that carries a speed penalty unless it can be handled by the operating system's <b>memory</b> <b>protections.</b>|$|R
25|$|In some cases, a {{page fault}} may {{indicate}} a software bug, {{which can be}} prevented by using <b>memory</b> <b>protection</b> as one of key benefits of an MMU: an operating system {{can use it to}} protect against errant programs by disallowing access to memory that a particular program should not have access to. Typically, an operating system assigns each program its own virtual address space.|$|E
25|$|Although Windows 9x {{features}} <b>memory</b> <b>protection,</b> it {{does not}} protect the first megabyte of memory from userland applications. This area of memory contains code critical to {{the functioning of the}} operating system, and by writing into this area of memory an application can crash or freeze the operating system. This was a source of instability as faulty applications could accidentally write into this region and with that halt the operating system.|$|E
25|$|The {{other main}} issue was that early Macs lack a memory {{management}} unit (MMU), which precludes the possibility of several fundamental modern features. An MMU would provide <b>memory</b> <b>protection</b> to ensure that programs cannot accidentally overwrite other program's memory, and it would provision shared memory. Lacking shared memory, the API was instead written so the operating system and application shares all memory, which is what allows QuickDraw to examine the application's memory for settings like the line drawing mode or color.|$|E
40|$|The {{purpose of}} the class is for {{everyone}} to understand the issues involved with the management of resources in multi-user computer systems. Emphasis is on problems of file-system design, process scheduling, <b>memory</b> allocation, <b>protection,</b> and tools needed for solutions. Course projects use the C/C++ language and include the design of portions of an operating system...|$|R
5000|$|Operating system: early {{workstations}} ran the Unix {{operating system}} (OS), a Unix-like variant, or an unrelated equivalent OS such as VMS. The PC CPUs {{of the time}} had limitations in memory capacity and <b>memory</b> access <b>protection,</b> making them unsuitable to run OSes of this sophistication, but this, too, began {{to change in the}} late 1980s as PCs with the 32-bit 80386 with integrated paged MMUs became widely affordable.|$|R
50|$|Every year, on {{the last}} Sunday of August, the image of Our Lady of Rome is carried in {{procession}} round Châtelineau nearby in <b>memory</b> of the <b>protection</b> received by that town in 1628 and 1636 against the outbreaks of the plague.|$|R
25|$|The Windows NT {{series of}} {{operating}} systems, by contrast, are true multi-user, and implement absolute <b>memory</b> <b>protection.</b> However, {{a lot of}} the advantages of being a true multi-user operating system were nullified by the fact that, prior to Windows Vista, the first user account created during the setup process was an administrator account, which was also the default for new accounts. Though Windows XP did have limited accounts, the majority of home users did not change to an account type with fewer rights– partially due to the number of programs which unnecessarily required administrator rights– and so most home users ran as administrator all the time.|$|E
500|$|<b>Memory</b> <b>protection,</b> {{as a way}} of {{preventing}} processes from accessing memory that has not been assigned to each of them, is one of the concepts behind most modern operating systems. [...] By using <b>memory</b> <b>protection</b> in combination with other security-related mechanisms such as protection rings, it is possible to achieve privilege separation between processes, in which programs and computer systems in general are divided into parts limited to the specific privileges they require to perform a particular task. [...] Using privilege separation can also reduce the extent of potential damage caused by computer security attacks by restricting their effects to specific parts of the system.|$|E
500|$|Disturbance errors (explained in {{the section}} above) {{effectively}} defeat various layers of <b>memory</b> <b>protection</b> by [...] "short circuiting" [...] them at a very low hardware level, practically creating a unique attack vector type that allows processes to alter the contents of arbitrary parts of the main memory by directly manipulating the underlying memory hardware. [...] In comparison, [...] "conventional" [...] attack vectors such as buffer overflows aim at circumventing the protection mechanisms at the software level, by exploiting various programming mistakes to achieve alterations of otherwise inaccessible main memory contents.|$|E
50|$|Since 30 September 2004, Little Island {{has been}} part of the <b>Memory</b> Cove Wilderness <b>Protection</b> Area. Previously, it had been part of the Lincoln National Park.As of December 2012, the waters {{surrounding}} the island are in the Thorny Passage Marine Park.|$|R
50|$|The {{principal}} {{land use}} within the locality is conservation with its full extent being {{occupied by the}} following protected areas - {{the portion of the}} Lincoln National Park located within the Hundred of Flinders and the <b>Memory</b> Cove Wilderness <b>Protection</b> Area.|$|R
50|$|The CDC 1700 was a 16-bit word minicomputer, {{manufactured}} by the Control Data Corporation with deliveries beginning in May 1966. The 1700 used ones' complement arithmetic and an ASCII-based character set, and supported <b>memory</b> write <b>protection</b> {{on an individual}} word basis. It had one general-purpose register and two indexing registers (one of which was implemented as a dedicated memory location). The instruction set was fairly simple and supported seven storage addressing modes, including multilevel (chained) indirect addressing.|$|R
2500|$|... <b>memory</b> <b>protection</b> {{techniques}} {{to guard against}} invalid accesses, such as ProPolice and the W^X page protection feature ...|$|E
2500|$|The Burroughs B5000 from 1961 was {{the first}} {{commercial}} system to support virtual memory (after the Atlas), {{even though it has}} no MMU [...] It provides the two functions of an MMU - virtual memory addresses and <b>memory</b> <b>protection</b> - with a different architectural approach.|$|E
2500|$|The OS is single-user and employs {{cooperative}} multitasking (CMT). While most current desktop OSes use preemptive multitasking (PMT) and multithreading, [...] remains with a CMT system. By 2003, many users {{had called for}} the OS to migrate to PMT. The OS <b>memory</b> <b>protection</b> is not comprehensive.|$|E
50|$|Even if {{this were}} not so, there are other ways. The most damning is the {{so-called}} return to libc method for shellcode creation. In this attack the malicious payload will load the stack not with shellcode, but with a proper call stack so that execution is vectored to a chain of standard library calls, usually with the effect of disabling <b>memory</b> execute <b>protections</b> and allowing shellcode to run as normal. This works because the execution never actually vectors to the stack itself.|$|R
50|$|Since 30 September 2004, Hopkins Island {{has been}} part of the <b>Memory</b> Cove Wilderness <b>Protection</b> Area. Previously, it had been part of the Lincoln National Park. It {{originally}} obtained protected area status as a fauna reserve under the former Fauna Conservation Act 1964 in 1965.|$|R
40|$|This paper {{presents}} the techniques for improving system reliability which SEAKR Engineering employs {{in the design}} of their spacecraft solid state data recorders. Briefly, these techniques include Hamming code error correction, periodic <b>memory</b> scrubbing, latch-up <b>protection,</b> excessive capacity, redundant power supplies/control/bus circuits, microcode protection, and shielding...|$|R
