15|138|Public
50|$|The other Switch Word command was Switch Word and Superimpose, SWS, {{with the}} same syntax. The action {{differed}} in the mask stage. If the <b>mask</b> <b>bit</b> was 0 then the unshifted rather than the shifted bit {{was placed in the}} output word. For a <b>mask</b> <b>bit</b> of 1 the action was the same as for SWE.|$|E
5000|$|The {{word was}} {{obtained}} from address AThe bits were moved Left or Right by the number and size of unit specifiedBits that “fell off” the end were put back into the opposite endThe shifted word was passed through the <b>mask</b> <b>bit</b> by bit. If the <b>mask</b> <b>bit</b> was 1 then the shifted bit would be copied through. Otherwise a 0 bit would be passed.The modified word was placed in address C ...|$|E
5000|$|A Program {{interruption}} {{occurs when}} an instruction encounters one of 15 exceptions; however, if the Program <b>Mask</b> <b>bit</b> corresponding to an exception is 0 {{then there is}} no interruption for that exception. On 360/65, 360/67 and 360/85 the Protection Exception and Addressing Exception interruptions can be imprecise, in which case they store an Instruction Length Code of 0.The Interruption code may be any of ...|$|E
5000|$|Preamble {{address code}} with <b>masking</b> <b>bit</b> 15,11 and 7 as already defined abovecan be {{interpreted}} from following table ...|$|R
50|$|Furthermore, when in mode 2, {{the lower}} {{bits of the}} color and pattern table address <b>bits</b> act as <b>mask</b> <b>bits</b> rather than address bits.|$|R
5000|$|Graphic 2 + Multicolor: This mode {{is more of}} a novelty, as {{it offers}} nothing beyond what the {{standard}} Multicolor mode can already do. The address <b>mask</b> <b>bits</b> can be used to further reduce the size.|$|R
5000|$|The S/360 {{architecture}} {{defines a}} priority to each interruption class, {{but it is}} only relevant when two interruptions occur simultaneously; an interruption routine can be interrupted by any other enabled interruption, including another occurrence of the initial interruption. For this reason, it is normal practice to specify all of the mask bits, with the exception of machine-check <b>mask</b> <b>bit,</b> as 0 for the [...] "first-level" [...] interruption handlers. [...] "Second-level" [...] interruption handlers are generally designed for stacked interruptions (multiple occurrences of interruptions of the same interruption class).|$|E
5000|$|Several {{articles}} and newspapers mention {{what appears to}} be the iron bit, but the name of the device varies from region to region where it is used. The <b>mask,</b> <b>bit,</b> and gag all refer to this torture device, but may differ in their specific manufacturing and disciplinary purposes. An 1848 article in The North Star states that [...] "dealing in slaves has become a large business: establishments are made in several places in Maryland, at which they are sold like cattle. These places of deposit are strongly built and well supplied with iron thumb-screws and gags, and ornamented with cowskins and whips, often bloody".|$|E
5000|$|Binary CAM is the {{simplest}} type of CAM which uses data search words consisting entirely of 1s and 0s. Ternary CAM (TCAM) allows a third matching state of [...] "X" [...] or [...] "don't care" [...] {{for one or}} more bits in the stored dataword, thus adding flexibility to the search. For example, a ternary CAM might have a stored word of [...] "10XX0" [...] which will match {{any of the four}} search words [...] "10000", [...] "10010", [...] "10100", or [...] "10110". The added search flexibility comes at an additional cost over binary CAM as the internal memory cell must now encode three possible states instead of the two of binary CAM. This additional state is typically implemented by adding a <b>mask</b> <b>bit</b> ("care" [...] or [...] "don't care" [...] bit) to every memory cell.|$|E
50|$|The MIPS {{architecture}} supports one to 64 {{entries in}} the TLB. The number of TLB entries is configurable at CPU configuration before synthesis. TLB entries are dual. Each TLB entry maps a virtual page number (VPN2) to either one of two page frame numbers (PFN0 or PFN1), depending on the least significant bit of the virtual address that {{is not part of}} the page <b>mask.</b> This <b>bit</b> and the page <b>mask</b> <b>bits</b> are not stored in the VPN2. Each TLB entry has its own page size, which can be any value from 1 KB to 256 MB in multiples of four. Each PFN in a TLB entry has a caching attribute, a dirty and a valid status bit. A VPN2 has a global status bit and an OS assigned ID which participates in the virtual address TLB entry match, if the global status bit is set to zero. A PFN stores the physical address without the page <b>mask</b> <b>bits.</b>|$|R
2500|$|The MIPS {{architecture}} supports one to 64 {{entries in}} the TLB. [...] The number of TLB entries is configurable at CPU configuration before synthesis. [...] TLB entries are dual. [...] Each TLB entry maps a virtual page number (VPN2) to either one of two page frame numbers (PFN0 or PFN1), depending on the least significant bit of the virtual address that {{is not part of}} the page <b>mask.</b> [...] This <b>bit</b> and the page <b>mask</b> <b>bits</b> are not stored in the VPN2. [...] Each TLB entry has its own page size, which can be any value from [...] to [...] in multiples of four. [...] Each PFN in a TLB entry has a caching attribute, a dirty and a valid status bit. [...] A VPN2 has a global status bit and an OS assigned ID which participates in the virtual address TLB entry match, if the global status bit is set to zero. [...] A PFN stores the physical address without the page <b>mask</b> <b>bits.</b>|$|R
5000|$|Graphic 2 + Text: This mode {{allows for}} two-color bitmap images, with no color table. This saves memory, {{at the expense}} of a {{slightly}} reduced horizontal resolution (text mode has a horizontal resolution of 240 pixels instead of 256 pixels like the graphic modes do). The address <b>mask</b> <b>bits</b> can be used to further reduce the size.|$|R
40|$|Abstract. Masked logic styles use {{a random}} <b>mask</b> <b>bit</b> to de-correlate the power {{consumption}} of the circuit {{from the state of}} the algorithm. The effect of the random <b>mask</b> <b>bit</b> is that the circuit switches between two complementary states with a different power profile. Earlier work has shown that the mask-bit value can be estimated from the power consumption profile, and that masked logic remains susceptible to classic power attacks after only a simple filtering operation. In this contribution we will show that this conclusion also holds for masked pre-charged logic styles and for all practical implementations of masked dual-rail logic styles. Up to now, it was believed that masking and dual-rail can be combined to provide a routing-insensitive logic style. We will show that this assumption is not correct. We demonstrate that the routing imbalances can be used to detect the value of the <b>mask</b> <b>bit.</b> Simulations as well as analysis of design data from an AES chip support this conclusion. ...|$|E
30|$|A {{template}} mask is {{also created}} during this filtering process. If both filter output values are not above a certain threshold, then a <b>mask</b> <b>bit</b> is cleared {{for that particular}} pixel location. The template mask is used to identify pixel locations where neither vertical nor horizontal directions are identified.|$|E
40|$|Abstract—To {{obtain a}} better {{trade-off}} between cost and se-curity, practical DPA countermeasures {{are not likely}} to deploy full masking that uses one distinct <b>mask</b> <b>bit</b> for each signal. A common approach is to use the same mask on several instances of an algorithm. This paper proposes a novel power analysis method called Power Variance Analysis (PVA) to reveal the danger of such implementations. PVA uses the fact that the side-channel leakage of parallel circuits has a big variance when they are given the same but random inputs. This paper introduces the basic principle of PVA and a series of PVA experiments including a successful PVA attack against a prototype RSL-AES implemented on SASEBO-R...|$|E
5000|$|<b>Mask</b> of <b>bit,</b> where bit 1 {{marks the}} {{starting}} bit of each codeword; ...|$|R
5000|$|Automatically <b>masks</b> nonsignificant <b>bits</b> (sets to 0, 1, or extends {{value of}} another bit) ...|$|R
50|$|The opmask {{registers}} {{are normally}} 16 bits wide, {{but can be}} up to 64 bits with the AVX-512BW extension. How many of the bits are actually used, though, depends on the vector type of the instructions masked. For the 32-bit single float or double words, 16 bits are used to mask the 16 elements in a 512-bit register. For double float and quad words, at most 8 <b>mask</b> <b>bits</b> are used.|$|R
40|$|Abstract — Ternary content {{addressable}} memory (TCAM) is one {{key component}} in the dedicated hardware modulars for high-performance networking applications. Symmetric and asym-metric cells are two widely used cell structures in TCAMs. An asymmetric cell consists of a binary {{content addressable memory}} (BCAM) bit and a <b>mask</b> <b>bit.</b> This paper proposes two march-like test algorithms, and, to cover the comparison faults of the BCAM cell and the comparison logic faults of the masking cell. requires 7 Write operations and (3 + 2) Compare operations to cover the comparison faults of an -bit TCAM with Hit output only. requires 4 Write operations and (3 + 2) Compare operations to cover the comparison faults of an -bit TCAM with priority address encoder (PAE) output. I...|$|E
40|$|The main {{objective}} of watermarking {{is to protect}} a digital content from unauthorized redistribution and copying by enabling ownership provability over the content. The goal of digital watermarking is to insert a robust and imperceptible watermark into the digital content such that the mark does not destroy {{the value of the}} content, and the mark is hard to be removed by attackers without destroying the utility of content. The measurement {{of the value of the}} content is closely related to the data type and its intended use. We have proposed a new marking scheme called as improved watermarking. Watermarking scheme first generates the bit string of fixed length. The mark bit is computed with the help of watermark bit and <b>mask</b> <b>bit,</b> which is used to mark the certain bit location of the attribute value...|$|E
40|$|Abstract. This {{contribution}} {{discusses the}} information leakage of flipflops for different DPA-resistant logic styles. We show {{that many of}} the proposed side-channel resistant logic styles still employ flip-flops that leak data-dependent information. Furthermore, we apply simple models for the leakage of masked flip-flops to design a new attack on circuits implemented using masked logic styles. Contrary to previous attacks on masked logic styles, our attack does not predict the <b>mask</b> <b>bit</b> and does not need detailed knowledge about the attacked device, e. g., the circuit layout. Moreover, our attack works even if all the load capacitances of the complementary logic signals are perfectly balanced and even if the PRNG is ideally unbiased. Finally, after performing the attack on DRSL, MDPL, and iMDPL circuits we show that single-bit masks do not influence the exploitability of the revealed leakage of the masked flip-flops. ...|$|E
5000|$|Because {{the result}} 0010 is non-zero, {{we know the}} second bit in the {{original}} pattern was set. This is often called <b>bit</b> <b>masking.</b> (By analogy, the use of masking tape covers, or masks, portions {{that should not be}} altered or portions that are not of interest. In this case, the 0 values <b>mask</b> the <b>bits</b> that are not of interest.) ...|$|R
50|$|The <b>bit</b> <b>masks</b> can be {{manipulated}} efficiently with Boolean operations. For example, two fragment <b>bit</b> <b>masks</b> can be added together to determine the overlap between them. The A-buffer algorithm saves {{only a small amount}} of additional information with each fragment. For example. It includes the fragment's z extent, but no information about which part of the fragment is associated with these z values. Thus, the algorithm must make assumptions about the sub-pixel geometry in cases in which fragment <b>bit</b> <b>masks</b> overlap in z.|$|R
50|$|The sample fields {{defined by}} the BITFIELDS <b>bit</b> <b>masks</b> have to be {{contiguous}} and non-overlapping, but {{the order of the}} sample fields is arbitrary. The most ubiquitous field order is: Alpha, Blue, Green, Red (MSB to LSB). The red, green and blue <b>bit</b> <b>masks</b> are valid only when the Compression member of the DIB header is set to BI_BITFIELDS. The alpha <b>bit</b> <b>mask</b> is valid whenever it is present in the DIB header or when the Compression member of the DIB header is set to BI_ALPHABITFIELDS (Windows CE only).|$|R
40|$|Abstract. Several dual-rail logic styles {{make use}} of single-rail {{flip-flops}} for storing intermediate states. We show that single mask bits, as applied by various side-channel resistant logic styles such as MDPL and iMDPL, are not sufficient to obfuscate the remaining leakage of single-rail flipflops. By applying simple models for the leakage of masked flip-flops, we design a new attack on circuits implemented using masked single-rail flip-flops. Contrary to previous attacks on masked logic styles, our attack does not predict the <b>mask</b> <b>bit</b> and does not need detailed knowledge about the attacked device, e. g., the circuit layout. Moreover, our attack works even if all the load capacitances of the complementary signals are perfectly balanced {{and even if the}} PRNG is ideally unbiased. Finally, after performing the attack on DRSL, MDPL, and iMDPL circuits we show that single-bit masks do not influence the exploitability of the revealed leakage of the masked flip-flops. ...|$|E
40|$|Abstract—Masking is a side-channel {{countermeasure}} that randomizes side-channel leakage, such as {{the power}} dissipation of a circuit. Masking is only effective {{on the condition that}} the internal random mask remains a secret. Previous research has illustrated how a successful estimation of the <b>mask</b> <b>bit</b> in circuit-level masking leads to successful side-channel attacks. In this paper, we extend this concept to algorithmic masking, which uses multi-bit masks. Our key observation is that the power dissipation of a masked circuit and the mask value are not independent. We exploit this property by using a slice of the power samples obtained by partial selection. This slice has a statistically biased mask, even when the mask signal itself is generated with a uniform distribution. We demonstrate this attack by showing how a perfectly masked AES SBox can be broken using part of the observed power samples, while the same circuit remains secure if we use all of the observed power samples...|$|E
40|$|Introduction. The modern digital {{communication}} {{systems such as}} radiorelay and tropospheric communication, their advantages before the analogue systems, requirements for digital systems in terms of accurate data transmission and control errors in service monitoring are described. Performance error in digital path. The overview of main error indicators in {{digital communication}} systems, approved by international telecommunication union is provided in this section. It contains {{a brief description of}} determine the readiness state and error seconds calculation method. Methods for evaluating the quality of digital signal. The questions measuring key indicators of errors that can occur in the digital channel, such as BER - (Bit Error Ratio) and ES -(Error Seconds) are considered. The description of the methods for measuring these indica-tors, so as out of service and in service monitoring is given. The errors detection method used the E 1 stream structure and their efficiency is described. The diagnostic methods in the digital path in service monitoring and applications features for authentic definition of the bit errors coefficient based on CRC- 4 procedure are compared. One of the methods offers to get probabilistic relations between the parameters based on BER and ES / SES for the evaluation digital path use, using a probabilistic model of the processes occurring in the measurements. Mask of bit errors ratio of the relative measurements time is produced. Conclusions. The methods of control quality signals for errors in digital communication systems compared different approaches for indicating and calculation the main indicators of errors, such as BER and ES/SES are analyzed. It is recommended to use CRC- 4 procedure with probabilistic model of the processes occurring in the measurements using distribution <b>mask</b> <b>bit</b> error probability for channels with different bandwidth for the quantitative evaluation the quality radio path. В данной статье приводится описание методов и средств оценки качества сигналов в цифровых системах связи, которые работают с цифровым потоком первичного уровня синхронной цифровой иерархии 2048 кбит/с (поток Е 1). Рассмотрены вопросы измерения основных показателей ошибок, которые возникают в цифровом канале, таких, как BER – (Bit Error Ratio, коэффициент битовых ошибок) и ES – (Error Seconds, секунды с ошибками). Приводиться описание методов измерения этих показателей, как при выключенном сервисе, так и в режиме реального времени. У даній статті наводиться огляд існуючих методів та засобів оцінки якості сигналів в цифрових системах зв‘язку, що працюють із цифровим потоком первинного рівня синхронної цифрової ієрархії 2048 кбіт/с (потік Е 1). Розглянуті питання вимірювання основних показників помилок, що виникають в цифровому каналі, таких, як BER – (Bit Error Ratio, коефіцієнт бітових помилок) та ES – (Error Seconds, секунди з помилками). Приводиться опис методів вимірювання цих показників, як при вимкненому сервісі, так і в режимі реального часу. </p...|$|E
50|$|Using a <b>mask,</b> {{multiple}} <b>bits</b> in a Byte, nibble, word (etc.) {{can be set}} either on, off or inverted from on to off (or vice versa) in {{a single}} bitwise operation.|$|R
5000|$|A {{wildcard}} mask is a <b>mask</b> of <b>bits</b> {{that indicates}} which parts of an IP address {{are available for}} examination. In the Cisco IOS, they are used in several places, for example: ...|$|R
50|$|Each {{device is}} given its Device Keys and a 31-bit number d called the device number.For each Device Key, {{there is an}} {{associated}} number denoted the path number, the “u” <b>bit</b> <b>mask,</b> and the “v” <b>bit</b> <b>mask.</b> The path number denotes the position in the tree associated with the Device Key. This path number defines a path from the root to that node in the tree.The “u” and “v” masks {{are used in the}} subset difference tree process. They are always a single sequence of 1-bits followed by a single sequence of 0-bits. The <b>bit</b> <b>masks</b> indicate “don’t care” bits in the path number; if a bit is 0 in the <b>mask,</b> the corresponding <b>bit</b> in the path number is “don’t care”. The deeper the position of a node in the tree, the shorter the sequence of 0-bits in the mask associated to that node.|$|R
5000|$|Mask 128 buckets {{represented}} by 7 <b>bit</b> <b>mask</b> {{of the source}} or destination IP/Port ...|$|R
5000|$|... "the actual mode... of the newly-created file is {{the logical}} {{and of the}} given mode and the {{complement}} of the argument. Only the low-order 9 <b>bits</b> of the <b>mask</b> (the protection <b>bits)</b> participate. In other words, the <b>mask</b> shows indicatesthe <b>bits</b> to be turned off when files are created." [...] UNIX Eighth Edition Manual, Bell Labs UNIX (manual), AT&T Laboratories ...|$|R
5000|$|CBP — Coded Block Pattern, this is <b>bit</b> <b>mask</b> {{indicating}} {{for which}} blocks coefficients are present.|$|R
40|$|The {{most popular}} metric {{distance}} used in iris code matching is Hamming distance. In this paper, we improve {{the performance of}} iris code matching stage by applying adaptive Hamming distance. Proposed method works with Hamming subsets with adaptive length. Based on density of <b>masked</b> <b>bits</b> in the Hamming subset, each subset is able to expand and adjoin to the right or left neighbouring bits. The adaptive behaviour of Hamming subsets increases the accuracy of Hamming distance computation and improves the performance of iris code matching. Results of applying proposed method on Chinese Academy of Science Institute of Automation, CASIA V 3. 3 shows performance of 99. 96 % and false rejection rate 0. 06...|$|R
5000|$|... "All MRI images where, in some region {{defined by}} the <b>bit</b> <b>masks,</b> {{intensity}} exceeds a threshold of 250": ...|$|R
50|$|An {{affinity}} <b>mask</b> is a <b>bit</b> <b>mask</b> indicating what processor(s) {{a thread}} or process should be run {{on by the}} scheduler of an operating system. Setting the affinity mask for certain processes running under Windows can be useful as there are several system processes (especially on domain controllers) that are restricted to the first CPU / Core. So, excluding the first CPU might lead to better application performance.|$|R
