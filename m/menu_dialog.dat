1|91|Public
40|$|Single Display Groupware (SDG) lets {{multiple}} co-located people, {{each with}} their own input device, interact simultaneously over a single communal display. While SDG is beneficial, there is risk of interference: when two people are interacting in close proximity, one person can raise an interface component (such as a <b>menu,</b> <b>dialog</b> box, or movable palette) over another person’s working area, thus obscuring and hindering the other’s actions. Consequently, researchers have developed special purpose interaction components to mitigate interference techniques. Yet is interference common in practice? If not, then SDG versions of conventional interface components could prove more suitable. We hypothesize that collaborators spatially separate their activities {{to the extent that}} they partition their workspace into distinct areas when working on particular tasks, thus reducing the potential for interference. We tested this hypothesis by observing co-located people performing a set of collaborative drawing exercises in an SDG workspace, where we paid particular attention to the locations of their simultaneous interactions. We saw that spatial separation and partitioning occurred consistently and naturally across all participants, rarely requiring any verbal negotiation. Particular divisions of the space varied, influenced by seating position and task semantics. These results suggest that people naturally avoid interfering with one another by spatially separating their actions. This has design implications for SDG interaction techniques, especially in how conventional widgets can be adapted to an SDG setting...|$|E
50|$|Page 2 Stage {{includes}} {{resources in}} 30 different languages so all <b>menus,</b> <b>dialog</b> boxes, etc. {{are in the}} language of the user, including Asian languages and bi-directional languages such as Arabic and Hebrew.|$|R
25|$|Since its {{introduction}} in 2000 up through OS X Mavericks, Lucida Grande was the system font used in Mac OS X user interface elements, such as <b>menus,</b> <b>dialog</b> boxes, and other widgets. It has been superseded by Helvetica Neue.|$|R
5000|$|DeskMate [...] "Lotus Spreadsheet for DeskMate", {{which was}} not officially called [...] "1-2-3", {{supported}} 1-2-3 2.x files, and used windows, on-screen symbols, pull-down <b>menus,</b> <b>dialog</b> boxes and other graphical tools similar to Microsoft Windows. However, it did not support add-ins, macros, or expanded memory. Introduced in 1989.|$|R
5000|$|Multi-row tabs are {{a second}} issue that {{will appear in}} <b>menu</b> <b>dialogs</b> in some {{programs}}. Some prefer to have many tabs open, and some programs help making these compact yet identifiable, while normally dealing with multiple rows of tabs in one window is seen to have two disadvantages: ...|$|R
40|$|The paper {{presents}} {{a program for}} robotics education that runs on standard IBM-PCs under the Microsoft Windows enviroment. The WinRob package is designed for undergraduate students and emphasises the fundamental aspects of robot modelling and control. The software is self-explanatory and uses <b>menus,</b> <b>dialog</b> boxes and context-dependent on-line help. info:eu-repo/semantics/publishedVersio...|$|R
50|$|GenoPro is {{available}} in 56 languages, including Albanian, Arabic, Brazilian Portuguese, Bulgarian, Catalan, Czech, Dutch, English, Estonian, Finnish, French, German, Greek, Hebrew, Hungarian, Icelandic, Indonesian, Italian, Latvian, Lithuanian, Polish, Portuguese, Russian, Scots Gaelic, Spanish, Swedish, Turkish, Vietnamese and Ukrainian. GenoPro features an online collaboration system where users can translate the <b>menus,</b> <b>dialogs</b> and error messages.|$|R
5000|$|... #Caption: Screenshot of the Windows Home Server, {{showing the}} Start <b>menu,</b> About... <b>dialog</b> box, task bar and Internet Explorer 6 ...|$|R
40|$|Abstract. Complex {{instruments}} {{which are}} not used regularly, such as diagnostic devices, are often avoided or inefficiently used because of thestart-upeffortrequired to figureouthow to apply them. To solve this problem, we have developed avisualinterface for the SLAC FASTBUS Snoop Module. ‘JThis interface {{is based on the}} Macintosh computer’s standard human interface, using <b>menus,</b> <b>dialogs</b> and graphics to quickly bring to mind the range of possibilities and allow easy setup and manipulation of the Snoop module’s powerful features...|$|R
50|$|The {{application}} {{offers the}} tools required to localize {{all the elements}} contained in the software, including strings, <b>menus,</b> <b>dialogs,</b> bitmaps, and icons, without requiring access to the source text files or the development environment used for developing the software, {{as well as providing}} automatic test functions, interfaces to the major translation memories, and the option of working with all the major Windows formats as well as text files and tagged formats such as XML and HTML.|$|R
40|$|Abstract. 3 D {{graphics}} {{scenes are}} difficult to create, requiring users to learn and utilize a series of complex <b>menus,</b> <b>dialog</b> boxes, and often tedious direct manipulation techniques. By giving up some amount of control afforded by such interfaces {{we have found that}} users can use natural language to quickly and easily create a wide variety of 3 D scenes. Natural language offers an interface that is intuitive and immediately accessible by anyone, without requiring any special skill or training. The WordsEye syste...|$|R
5000|$|As of Windows XP, the Start menu {{shortcut}} to NetMeeting was removed “by design”. Users must start [...] manually from the Start <b>menu</b> Run <b>dialog.</b>|$|R
40|$|There {{are many}} {{different}} ways to work in Stata depending on your desires: You can work using the <b>menus,</b> <b>dialog</b> boxes, Command window, or via the Do-file Editor. Stata 11 adds to this list with its new Variables Manager and much-improved Data Editor, both of which provide tools that make tasks such as managing value labels or entering and editing dates much easier. I will show off these new features and explain {{how they can be}} used to produce do-files for reproducibility through the use of command logs and the improved Do-file Editor. ...|$|R
50|$|The MPW Shell command {{language}} {{was based on}} the Unix csh language, but was extended to support the main features of the Macintosh GUI. It had simple commands to create <b>menus,</b> <b>dialogs</b> (prompts), and new shell windows. The cursor could be controlled, and MPW scripts or tools could easily be attached to a menu item. Command key shortcuts could be specified. Window size and location could be controlled. These features were popular in commercial production environments, where complicated build and packaging processes were all controlled by elaborate scripts.|$|R
5000|$|The GFA BASIC {{interpreter}} is {{compact and}} reasonably fast, and was shipped with a runtime {{that could be}} distributed freely with one's programs. When a compiler was made available, execution speed could be increased by approximately a factor of 2. GFA BASIC allowed extreme optimisations for execution speed, supporting some direct assembler-level calls, and even the ability to embed sections of assembler code directly within the BASIC source code. GFA BASIC integrated neatly into GEM and TOS, the Atari ST's operating system, providing <b>menus,</b> <b>dialog</b> boxes, and mouse control. (See WIMP interface.) ...|$|R
5000|$|A {{cross-platform}} API for accessing native UI components such as navigation bars, <b>menus,</b> and <b>dialog</b> {{boxes and}} native device functionality including the file system, network, geolocation, accelerometer, and maps.|$|R
40|$|Abstract: The paper {{presents}} {{a program for}} robotics education that runs on standard PCs under the Microsoft Windows environment. The RobLib package is designed for undergraduate students and emphasis the fundamental aspects of robot modelling and control. The software is self-explanatory and uses <b>menus,</b> <b>dialog</b> boxes with figures and context-dependent on-line help. In this perspective, students are motivated to investigate on the workspace, kinematics, dynamics, trajectory planning, position and force control of manipulators. Based on this first experience, further studies on robotics, using more sophisticated packages and concepts, are, then, more attractive from the students point of view. Copyright © 2000 Controlo 200...|$|R
5000|$|GUI widgets or visual {{components}} such as edit boxes, buttons, <b>dialogs,</b> <b>menus,</b> etc.|$|R
5000|$|Using Excel as a GUI for R, making R {{functionality}} accessible through <b>menus</b> and <b>dialog</b> boxes {{instead of}} a command line oriented programming style. Using this paradigm, the widely used GUI package R Commander is available as an Excel menu bar.|$|R
5000|$|In {{keeping with}} {{its role as}} an {{application}} framework, MacApp also included a number of pre-rolled objects covering most of the basic Mac GUI—windows, <b>menus,</b> <b>dialogs</b> and similar widgets were all represented within the system. Unfortunately, Apple typically supplied lightweight wrappers over existing internal Mac OS code instead of providing systems that were usable in the [...] "real world". For instance, the TTEView class was offered as the standard text editor, but the underlying TextEdit implementation was severely limited and Apple itself often stated {{it should not be}} used at all after the MLTE control was introduced. As a result, developers were often forced to buy add-on objects to address these sorts of needs, or roll their own. The lack of a set of professional quality GUI objects can be considered one of MacApp's biggest problems.|$|R
5000|$|Remember that {{although}} computer editing systems may refer to [...] "24p", usually the precise frame rate is 23.976 frame/s. To add to confusion, the popular editing program Final Cut Pro refers to 23.976 as [...] "23.98" [...] in <b>menus</b> and <b>dialogs,</b> {{even though it}} correctly works with the footage at the 23.976 frame rate.|$|R
40|$|This {{document}} {{gives the}} details of a Graphical User Interface(GUI) developed for a CFD (Computational Fluid Dynamics) code on an INDY workstation using X/Motif Programming. The interface integrates the various modules using pulldown <b>menus,</b> popup, <b>dialog</b> boxes, pushbuttons amp; windows to provide interaction with the user. The package is basically a shell around the core module written in FORTRAN...|$|R
40|$|ABSTRACT: Heavy {{rainfall}} {{often leads}} to complete suspension of highway construction due to saturated and unworkable soil conditions. Therefore, quantifying the impact of rainfall on the productivity of highway con-struction is essential in preparing realistic schedules and cost estimates for the preconstruction stage and in analyzing weather-related claims for the postconstruction stage. This paper presents a decision support system for quantifying the impact of rainfall on productivity and duration of common highway construction operations, namely: earthmoving, construction of base courses, construction of drainage layers, and paving operations. The system incorporates a knowledgebase and a database. The knowledgebase includes if/then type rules, acquired from experts in highway construction operations, and the database contains hourly records of weather parameters from the closest weather station to the construction site. The system, named WEATHER, is a software system that provides user-friendly interface, including <b>menus,</b> <b>dialog</b> boxes, and graphical capabilities to facilitate data input and output...|$|R
50|$|Susan Kare {{has stated}} that Chicago was the first font to be {{developed}} for the Macintosh. Before the team settled on the convention of naming fonts after “world cities”, it was called Elefont (Elefont is also {{the name of a}} bold semi-serif typeface designed by Bob McGrath in 1978). The first bitmap version included only a 12 pt. version. This font, with only very minor changes to spacing, was used for <b>menus,</b> <b>dialogs,</b> window titles, and text labels, through version 7.6 of the system. The TrueType version had many differences from the bitmap version, which became more apparent at greater sizes. One of Chicago’s features was that it could remain legible while being made “grey” (to indicate a disabled menu item) by the removal of every other pixel (since actual grey type was not supported by the original Macintosh graphics hardware). The zero was slashed to distinguish it from capital “O”.|$|R
5000|$|ResEdit {{is one of}} the {{earliest}} examples of a GUI layout tool, an essential component for rapid application development. For example, the classic Mac OS defines a standard resource called a dialog template and a dialog items list (resource types 'DLOG' and 'DITL' respectively). In ResEdit, it's possible to simply create these types and add GUI elements to them in an almost WYSIWYG fashion, such that a user interface could be designed directly as it would appear to the end user of the application. Later, the application code can create a functional dialog box using the stored resource data which matches the appearance you lay out in ResEdit. While hardly a revolutionary concept today, when ResEdit first appeared in the mid-1980s, this was a considerable innovation. ResEdit includes standard editors for window templates (...) , <b>menus</b> (...) , <b>dialog</b> boxes, controls (...) , color palettes ( [...] and [...] ), icons ( [...] , , [...] ), and various other standard types.|$|R
50|$|MacChoro {{began to}} be {{developed}} in the Fall of 1985 on an Apple Macintosh 512K (Fat Mac) computer with a single 400K floppy drive. The programming language was Fortran, and the code {{was based on a}} choropleth mapping program that was developed on a Digital Equipment VAX computer. It had to be re-written to incorporate the mouse, pull-down <b>menus,</b> and <b>dialogs.</b>|$|R
40|$|Abstract. CPN/Tools {{is a major}} {{redesign}} of the popular Design/CPN tool for editing, simulation and state space analysis of Coloured Petri Nets. The new interface is based on advanced interaction techniques, including bi-manual interaction, toolglasses and marking menus and a new metaphor for managing the workspace. It challenges traditional ideas about user interfaces, getting rid of pull-down menus, scrollbars, and even selection, while providing the same or greater functionality. CPN/Tools requires an OpenGL graphics accelerator and will run on all major platforms (Windows, Unix/Linux, MacOS). 1 The CPN/Tools Interface Interaction techniques for desktop workstations have changed little since {{the creation of the}} Xerox Star in the early eighties. The vast majority of today’s interfaces are still based on a single mouse and keyboard to manipulate windows, icons, <b>menus,</b> <b>dialog</b> boxes, and to drag and drop objects on the screen. While these interfaces are now ubiquitous they are also reaching their limits: as ne...|$|R
40|$|Highly complex <b>menu</b> and <b>dialog</b> {{structures}} in standard applications like word processing or spreadsheets contradict good operability and deter beginners and occasional users. In this paper, we present ContextControl, a widget to control existing applications, {{as an example}} for {{a new kind of}} user interface based on games. Game based interfaces are easier to learn and can be specialized to different tasks and contexts...|$|R
50|$|FlexPro has a {{built-in}} programming language, FPScript, which is optimized for data analysis and supports direct operations on non-scalar objects such as vectors and matrices as well as composed data structures like signals, signal series or surfaces. All operations can be executed either graphically (through <b>menus</b> or <b>dialog</b> boxes) or programmatically. Programmatic access is provided through an Automation Object Model and the built-in Microsoft Visual Basic for Applications Development Environment (VBA).|$|R
50|$|Subsequent {{improvements}} include {{extending the}} features of SpaceFM's Desktop Manager, a new <b>Menu</b> Item Properties <b>dialog</b> for adding and customizing menu items, socket commands for interacting with a running instance, and an improved panel configuration memory.|$|R
50|$|ISPF {{primarily}} {{provides an}} IBM 3270 terminal interface {{with a set}} of panels. Each panel may include <b>menus</b> and <b>dialogs</b> to run tools on the underlying Time Sharing Option (TSO). Generally, these panels just provide a convenient interface to do tasks—most of them execute modules of IBM mainframe utility programs to do the actual work. ISPF is frequently used to manipulate z/OS data sets via its Program Development Facility named ISPF/PDF, where PDF refers to Program Development Facility.|$|R
40|$|ABSTRACT: This paper briefly {{describes}} a model, designed to automate data acquisition and analysis {{for planning and}} scheduling highway construction projects. The paper briefly describes the proposed model, and focuses primarily on its automation aspects. Geographic information systems is employed to analyze spatial data and estimate cut and fill quantities. The model also stores activities typically involved in highway construction and automatically generates the precedence network respecting job logic. The model generates digital terrain models to represent the ground topography and underlying soil strata. Transition of soil strata between borehole locations can either be: 1) automatically generated by the model; or 2) defined by the user. The model employs the mass haul diagram to develop the optimum earthmoving plan. It accounts {{for the presence of}} transverse obstructions, such as rivers and existing highways, when developing the earthmoving plan and defining project activities. The model is implemented in a prototype software that operates in Microsoft Windows environment. It provides a user-friendly interface, including <b>menus,</b> <b>dialog</b> windows, and graphical capabilities to expedite data input and retrieval. Several input and output formats are accepted to facilitate data sharing with commercially-available software packages...|$|R
40|$|Abstract—Current {{interfaces}} {{for common}} information visualizations such as bar graphs, line graphs, and scatterplots usually {{make use of}} the WIMP (Windows, Icons, Menus and a Pointer) interface paradigm with its frequently discussed problems of multiple levels of indirection via cascading <b>menus,</b> <b>dialog</b> boxes, and control panels. Recent advances in interface capabilities such as the availability of pen and touch interaction challenge us to re-think this and investigate more direct access to both the visualizations and the data they portray. We conducted a Wizard of Oz study to explore applying pen and touch interaction to the creation of information visualization interfaces on interactive whiteboards without implementing a plethora of recognizers. Our wizard acted as a robust and flexible pen and touch recognizer, giving participants maximum freedom in how they interacted with the system. Based on our qualitative analysis of the interactions our participants used, we discuss our insights about pen and touch interactions in the context of learnability and the interplay between pen and touch gestures. We conclude with suggestions for designing pen and touch enabled interactive visualization interfaces. Index Terms—Pen and touch, interaction, Wizard of Oz, whiteboard, data exploration. ...|$|R
50|$|Edbrowse is {{sometimes}} described as dense in its code {{and in its}} human interface. It contains many cryptic one and two letter commands, and few interactive help facilities. There is no <b>menu,</b> no <b>dialog,</b> and no screen of intuitive icons to click on. Like bash, edbrowse greets the user with a blinking cursor, waiting for input, and if that input is syntactically incorrect, edbrowse simply prints a question mark. Thus {{it is important to}} read the edbrowse user's guide before diving in.|$|R
50|$|Quick {{saving and}} quick loading allow the player to save or load {{the game with}} a single keystroke. These terms are used to {{differentiate}} between the traditional saving mechanism where the player is required to invoke a <b>menu</b> or <b>dialog</b> box, issue save order, specify a title for the game being save and, if applicable, confirm whether an old saved game file with same title should be overwritten. The term quick save may be used in video games that lack the traditional saving mechanism altogether.|$|R
50|$|Stata {{has always}} {{emphasized}} a command-line interface, which facilitates replicable analyses. Starting with version 8.0, however, Stata has included a {{graphical user interface}} which uses <b>menus</b> and <b>dialog</b> boxes to give access to nearly all built-in commands. This generates code which is always displayed, easing {{the transition to the}} command line interface and more flexible scripting language. The dataset can be viewed or edited in spreadsheet format. From version 11 on, other commands can be executed while the data browser or editor is opened.|$|R
