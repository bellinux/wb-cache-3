2|852|Public
40|$|A {{graphical}} interface {{for designing}} XML Schemas is presented. The {{current version of}} this interface {{is based on the}} Schema for Object Oriented XML (SOX), but the constructs are easily generalizable for other schema representations as well. The main advantage is to use the two-dimensional visual field of graphical interface plus <b>multiple</b> <b>windowing</b> to capture more intuitively represent the hierarchical decomposition and re-usability of the XML element definitions. Initial user experience has been quite positive...|$|E
40|$|This report {{covers the}} April 2004 -September 2004 time period. Work has been {{performed}} successfully on several tasks 1 through 16. Part {{of this work}} {{has been reported in}} 15418 R 03. Most of portions of these tasks have been executed independently. We progressed steadily and completed some of the sub-tasks, while others are still on going. We achieved the goals that we had set up in the task schedule. Reviewing the results of this work period indicates that our plan is solid and we did not encounter any unforeseen problems. The work plan will continue as scheduled. A midyear review will be presented in November or December 2004. Several independent tasks pursuant the statement of project objectives have been executed simultaneously and are still on-going. Use of real seismic test data is augmented by the creation a 3 D ray tracing synthetic test data. We used the previously constructed 3 D layered model and simulated data acquisition from a set of circular source locations at the surface of the model, while a close to vertical VSP well was used to capture the wave field data. The source pattern was optimized with respect to Fresnel zone width at the target depth. Multi-component particle displacements were recorded every 50 ft down with an array length of 4, 000 ft. P-P as well as P-S reflections were specified in the resulting wave field. We ensured a large enough aperture with enough fine sampling to perform advanced processing, imaging and analysis tests in the future during this project. We constantly improved the interfacing of our software libraries with newly designed 3 C display classes and mechanisms. We used the previously implemented 3 C Work Bench tool as the primary prototyping tool. This work bench allows to load as well as manipulate and display data items in a flexible manner. We continued to demonstrate its basic functionality by loading source maps, horizons, seismic and velocity volumes, well logs into the tool, performing basic QC steps as is necessary in normal processing. We improved functionality by adding <b>multiple</b> <b>windowing</b> options to each of the display items. The windows can be docked or un-docked, which is advantageous in a practical sense, since the display real estate can be spread across multiple display monitors. All windows transparently tie into the same item tree and views get updated dynamically and transparently. Each display item can be associated with a particular display widget as is the case for the multi-component hodogram display widget. All tasks were performed successfully, ensuring the continued progress of this project as outlined in the original proposal. Deliverables generated during this time period consist of reporting details and synthetically modeled seismic data for a 3 D layered geological model. The numerically modeled SEGY data, as well as the model representation data, are ready to be sent out to DOE facilities for archiving. Based on the successful conclusion of work performed during this three month period we continue to occasionally generate synthetically modeled 3 D borehole seismic data, according to Tasks 2 and 3. At the same time we proceed to design, implement and test according to the original plan the basic data classes and the basic framework outlined in Tasks 5 through 11, as well as 16...|$|E
5000|$|<b>Multiple</b> <b>windows,</b> {{including}} <b>multiple</b> <b>windows</b> on {{the same}} source file ...|$|R
40|$|This paper {{presents}} <b>multiple</b> <b>windows</b> with suppressed side-lobes that approximate a time-frequency kernel. The <b>multiple</b> <b>windows</b> {{are given}} from the eigenvalue decomposition of the time-lag kernel. By using a penalty matrix both in time- and frequency domain and solving a generalized eigenvalue problem, the <b>multiple</b> <b>windows</b> are achieved. Examples are given {{and the resulting}} sidelobe suppression {{and the number of}} windows needed are analysed...|$|R
30|$|This paper {{concerns}} the {{mean square error}} optimal weighting factors for <b>multiple</b> <b>window</b> spectrogram of different stationary and nonstationary processes. It {{is well known that}} the choice of <b>multiple</b> <b>windows</b> is important, but here we show that the weighting of the different <b>multiple</b> <b>window</b> spectrograms in the final average is as important to consider and that the equally averaged spectrogram is not mean square error optimal for non-stationary processes. The cost function for optimization is the normalized mean square error where the normalization factor is the <b>multiple</b> <b>window</b> spectrogram. This means that the unknown weighting factors will be present in the numerator {{as well as in the}} denominator. A quasi-Newton algorithm is used for the optimization. The optimization is compared for a number of well-known sets of <b>multiple</b> <b>windows</b> and common weighting factors and the results show that the number and the shape of the windows are important for a small mean square error. <b>Multiple</b> <b>window</b> spectrograms using these optimal weighting factors, from ElectroEncephaloGram data including steady-state visual evoked potentials, are shown as examples.|$|R
30|$|In {{this paper}} we compare the Hermite functions, the Thomson windows, the Peak Matched <b>Multiple</b> <b>Windows,</b> and the Welch windows and {{evaluate}} the performance with optimal weighting factors for different processes. The cost function for optimization is the normalized mean square error where the normalization factor is the <b>multiple</b> <b>window</b> spectrogram. This means that the unknown weighting factors will {{be present in the}} numerator {{as well as in the}} denominator. A quasi-Newton algorithm is used for the optimization. We compare the results from the usual equally weighted <b>multiple</b> <b>window</b> spectrogram as well as an optimal scaling factor-adjusted <b>multiple</b> <b>window</b> spectrogram. Preliminary results have been presented in [14]. A nonstationary process model, which could be appropriate for, for example, induced responses in the EEG, is studied. We illustrate the weighted <b>multiple</b> <b>window</b> spectrogram estimates by showing examples of steady-state visual evoked potential (SSVEP).|$|R
40|$|This paper {{investigates the}} <b>multiple</b> <b>windows</b> {{of the mean}} squared error optimal time-frequency kernel for {{estimation}} of the Wigner-Ville spectrum. The kernel is optimal for a certain locally stationary process where the covariance function is determined by two one-dimensional Gaussian functions. The <b>multiple</b> <b>windows</b> are obtained as the eigenvectors of the rotated time-lag estimation kernel. The spectrograms from the different windows are weighted with the eigenvalues and the resulting <b>multiple</b> <b>window</b> spectrogram is {{an estimate of the}} optimal smoothed Wigner-Ville spectrum...|$|R
40|$|This paper {{proposes a}} new <b>multiple</b> <b>window</b> method for {{estimating}} a peaked spectrum. The <b>multiple</b> <b>windows</b> are {{adapted to the}} signal, giving a less biased estimate for esti-mation of peaks than does the Thomson <b>Multiple</b> <b>Window</b> method. Still thle result from estimation of a flat spectrum shows comparable results in variance reduction. The method is based on solution of an eigenvalue prob-lem where the eigenvectors of a special correlation matrix are used as <b>multiple</b> <b>windows.</b> The correlation matrix corre-sponds to a low frequency dominant spectrum with limited bandwidth. The design results in windows that are fur-ther improved by a penalty function to reduce leakage from nearby frequencies. This gives a better estimate when the process contains of large spectrum dynamics...|$|R
40|$|Copyright Â© 2010 M. Hansson-Sandsten and J. Sandberg. This is an {{open access}} article {{distributed}} under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. This paper concerns the mean square error optimal weighting factors for <b>multiple</b> <b>window</b> spectrogram of different stationary and nonstationary processes. It {{is well known that}} the choice of <b>multiple</b> <b>windows</b> is important, but here we show that the weighting of the different <b>multiple</b> <b>window</b> spectrograms in the final average is as important to consider and that the equally averaged spectrogram is not mean square error optimal for non-stationary processes. The cost function for optimization is the normalized mean square error where the normalization factor is the <b>multiple</b> <b>window</b> spectrogram. This means that the unknown weighting factors will be present in the numerator {{as well as in the}} denominator. A quasi-Newton algorithm is used for the optimization. The optimization is compared for a number of well-known sets of <b>multiple</b> <b>windows</b> and common weighting factors and the results show that the number and the shape of the windows are important for a small mean square error. <b>Multiple</b> <b>window</b> spectrograms using these optimal weighting factors, from ElectroEncephaloGram data including steady-state visual evoked potentials, are shown as examples. 1...|$|R
5000|$|... #Caption: EDI {{screenshot}} showing <b>multiple</b> <b>windows</b> {{and welcome}} screen ...|$|R
5000|$|<b>Multiple</b> <b>windows,</b> {{so those}} edit buffers can share screen space.|$|R
5000|$|... #Caption: Nethack {{running in}} <b>multiple</b> <b>windows</b> on a NeXT {{computer}} ...|$|R
2500|$|GIMP is {{presented}} in two forms, single and <b>multiple</b> <b>window</b> mode; GIMP 2.8 defaults to the <b>multiple</b> <b>window</b> mode. [...] In <b>multiple</b> <b>window</b> mode a set of windows contain all GIMPs functionality. By default, tools and tool settings are on the left and other dialogues are on the right. A layers tab is often {{to the right of the}} tools tab, and allows a user to work individually on separate image layers. Layers can be edited by right-clicking on a particular layer to bring up edit options for that layer. The tools tab and layers tab are the most common dockable tabs.|$|R
40|$|The aim of {{this paper}} is to find a <b>multiple</b> <b>window</b> {{estimator}} that is mean square error optimal for cepstrum estimation. The estimator is compared with some known <b>multiple</b> <b>window</b> methods as well as with the parametric AR-estimator. The results show that the new estimator has high performance, especially for data with large spectral dynamics, and that it is also robust against parameter choices. Simulated speech data is used for the evaluation. It is also shown that the windows of the estimator can be approximated with the sinusoidal <b>multiple</b> <b>windows</b> and that the weighting factors of the different periodograms can be analytically computed...|$|R
50|$|GIMP is {{presented}} in two forms, single and <b>multiple</b> <b>window</b> mode; GIMP 2.8 defaults to the <b>multiple</b> <b>window</b> mode. In <b>multiple</b> <b>window</b> mode a set of windows contain all GIMPs functionality. By default, tools and tool settings are on the left and other dialogues are on the right. A layers tab is often {{to the right of the}} tools tab, and allows a user to work individually on separate image layers. Layers can be edited by right-clicking on a particular layer to bring up edit options for that layer. The tools tab and layers tab are the most common dockable tabs.|$|R
50|$|Window {{management}} - Opening <b>multiple</b> <b>windows,</b> minimizing, maximizing and resizing AIR windows.|$|R
50|$|Some feature {{additions}} include <b>multiple</b> <b>window</b> support, hardware-accelerated 2D graphics, {{and better}} Unicode support.|$|R
5000|$|The screen can {{be split}} up to display <b>multiple</b> <b>windows</b> {{at the same}} time.|$|R
5000|$|Erwise could execute <b>multiple</b> <b>window</b> operation, {{though the}} {{optional}} single window mode was also available.|$|R
5000|$|System {{builders}} / Network Administrators {{seeking to}} quickly install all updates to <b>multiple</b> <b>Windows</b> PCs.|$|R
5000|$|... 1968 - Douglas Engelbart {{demonstrated}} NLS, {{a system}} which uses a mouse, pointers, hypertext, and <b>multiple</b> <b>windows.</b>|$|R
5|$|As {{computers}} {{offered more}} advanced user interfaces, such as windows and point-and-click menus, many traditional roguelikes were modified to include support for having <b>multiple</b> <b>windows.</b> This was useful {{to not only}} show the character-based dungeon, but details on the character's inventory, the monster they were in battle with, and other status messages, in separate windows. Having access to <b>multiple</b> <b>windows</b> also allowed having menus to complete more complex commands.|$|R
5000|$|Window modes - Like other X servers for Microsoft Windows, X-Win32 has two window modes, Single and <b>Multiple.</b> Single <b>window</b> mode {{contains}} all X windows with one large visible root <b>window.</b> <b>Multiple</b> <b>window</b> mode allows the Microsoft Window Manager {{to manage the}} X client windows ...|$|R
50|$|On April 18, 1989, Quarterdeck {{was awarded}} a US {{software}} patent that allowed <b>multiple</b> <b>windowed</b> PC applications under MS-DOS.|$|R
50|$|UWP apps in Windows 10 {{can open}} in <b>multiple</b> <b>windows.</b> Microsoft Edge, Calculator, and Photos are {{examples}} of apps that allow this.|$|R
50|$|On February 7, 2017, an EF3 tornado {{carved a}} path through Orleans Parish, in which the {{facility}} is situated. <b>Multiple</b> <b>windows</b> were broken.|$|R
30|$|The {{choice of}} the window size for the {{fragmentation}} index depends on the application and using <b>multiple</b> <b>window</b> sizes may be appropriate for regressions and classifications.|$|R
30|$|The {{choice of}} windows {{has been studied}} in the {{literature}} but how to weight the different <b>multiple</b> <b>window</b> spectrograms in the final average has not gained that much attention. In [9], the weighting factors are optimized for the Peak-Matched <b>Multiple</b> <b>Windows,</b> [6]. A criterion is used where normalized bias, variance, and mean square error is optimized for the predefined peaked spectrum. In the nonstationary case, different approaches to approximate a time-varying spectrum with a few windowed spectrograms have been taken, for example, [10 â 13].|$|R
40|$|Window-based {{correlation}} algorithms {{are widely}} used for stereo matching due to their computational efficiency as compared to global algorithms. In this paper, a <b>multiple</b> <b>window</b> correlation algorithm for stereo matching is presented which addresses {{the problems associated with}} a fixed window size. The developed algorithm differs from the previous <b>multiple</b> <b>window</b> algorithms by introducing a reliability test to select the most reliable <b>window</b> among <b>multiple</b> <b>windows</b> of increasing sizes. This ensures that at least one window is large enough to cover a region of adequate intensity variations {{while at the same time}} small enough to cover a constant depth region. A recursive computation procedure is also used to allow a computationally efficient implementation of the algorithm. The outcome obtained from a standard set of images with known disparity maps shows that the generated disparity maps are more accurate as compared to two popular stereo matching local algorithms...|$|R
50|$|The client can be run in tabbed {{document}} interface or <b>multiple</b> <b>windows</b> mode for channels and queries, or just detached independent window for specific channels or queries.|$|R
40|$|Methods of data {{transaction}} acceleration in global-bus multi-processor systems {{based on}} <b>multiple</b> <b>window</b> processor local memory access are proposed. Possibility of transaction synchronization through data and control buses is considered. ???????????? ?????? ????????? ?????? ??????? ? ?????????????????? ???????? ? ????? ???????????, ?????????? ?? ????????????? ??????? ??????? ? ????????? ?????? ???????????. ??????????????? ??????????? ????????????? ???????? ?????? ?? ???? ?????? ? ???? ??????????...|$|R
50|$|Userful Multiplatform is a multiseat desktop {{virtualization}} {{product that}} works with Oracle VirtualBox to enable the creation and management of <b>multiple</b> <b>Windows,</b> Linux, and cloud desktops through commercially available hardware.|$|R
5000|$|The front facade has a two-sided {{stairway}} {{leading to}} a small entry porch. [...] The entrance door is flanked by sidelights and pilasters. [...] The <b>multiple</b> <b>windows</b> have small panes.|$|R
40|$|Abstract Background The {{accuracy}} of <b>multiple</b> <b>window</b> spatial resolution characterises {{the performance of}} a gamma camera for dual isotope imaging. In the present study we investigate an alternative method to the standard NEMA procedure for measuring this performance parameter. Methods A long-lived 133 Ba point source with gamma energies close to 67 Ga and a single bore lead collimator were used to measure the <b>multiple</b> <b>window</b> spatial registration error. Calculation of the positions of the point source in the images used the NEMA algorithm. The results were validated against the values obtained by the standard NEMA procedure which uses a liquid 67 Ga source with collimation. Results Of the source-collimator configurations under investigation an optimum collimator geometry, consisting of a 5 mm thick lead disk with a diameter of 46 mm and a 5 mm central bore, was selected. The <b>multiple</b> <b>window</b> spatial registration errors obtained by the 133 Ba method showed excellent reproducibility (standard deviation 133 Ba point source method proved to be much easier to use. A Bland-Altman analysis showed that the 133 Ba and the 67 Ga Method can be used interchangeably. Conclusion The 133 Ba point source method measures the <b>multiple</b> <b>window</b> spatial registration error with essentially the same accuracy as the NEMA-recommended procedure, but is easier and safer to use and has the potential to replace the current standard procedure. </p...|$|R
40|$|In this paper, <b>multiple</b> <b>windows,</b> optimal for locally {{stationary}} processes (MW-LSP) {{are used}} to estimate the spectrogram of the electroencephalogram (EEG) where {{we focus on the}} ability to estimate transient frequency changes. A peak of known frequency was evoked in the EEG spectrum in a predetermined time interval, by using a 9 Hz flickering light. We investigate the <b>multiple</b> <b>windows</b> corresponding to the mean squared error optimal time-frequency kernel for estimation of the Wigner-Ville spectrum. The kernel is optimal for a certain locally stationary process where the covariance function is determined by two one-dimensional Gaussian function...|$|R
40|$|It is {{believed}} that neural activity evoked by cognitive tasks is spatially correlated in certain frequency bands. The elec-troencephalogram (EEG) is highly affected by noise of large amplitude which calls for sophisticated time local coherence estimation methods. In this paper we investigate different approaches to esti-mate time local coherence between two real valued signals. Our {{results indicate that the}} method using two dimensional Gaussian kernels has a slightly better average SNR compared to the <b>multiple</b> <b>window</b> approach. On the other hand, the <b>multiple</b> <b>window</b> approach has a more narrow SNR distribu-tion and seems to perform better in the worst case. 1...|$|R
