308|157|Public
5|$|The chipset {{brought a}} 1066MHz system bus, use of DDR3 system memory, and {{integrated}} Nvidia GeForce 9400M graphics. Other changes include a display which uses LED backlights (replacing the fluorescent tube backlights {{used in the}} previous model) and arsenic-free glass, a new Mini DisplayPort (replacing the polycarbonate MacBook's mini-DVI port), a multi-touch glass trackpad which also acts as the <b>mouse</b> <b>button,</b> {{and the removal of}} the FireWire 400 port (thus it doesn't support Target Disk Mode, used for data transfers or operating system repairs without booting the system).|$|E
5|$|The {{character}} that the player controlled would change as they progressed through the game. The creators sought {{to have the}} player control Spock {{during one of the}} Vulcan's mind melds. The ending of the game would have seen the player control Kirk, Spock and Chekov in an attempt to stop the titular superweapon. The interface for the game revolved around a menu which appears after the <b>mouse</b> <b>button</b> is held down while the cursor is hovering over an object. This was to prevent the need for controls to be shown on screen at all times, {{in a manner similar to}} LucasArts games of that period.|$|E
5|$|The player kills enemies {{by firing}} daggers from their fingers. There are two firing options: {{clicking}} the left-mouse button fires a shotgun-like blast of daggers {{with a wide}} spread, and holding the <b>mouse</b> <b>button</b> down fires a precise, continuous stream of daggers. Some enemies have weak spots indicated by red crystals on their bodies. Once dead, the red crystals are dropped and can be gathered by the player to obtain attack upgrades, such as increased damage and homing daggers. The player dies when coming into physical contact with an enemy or falling off the stage. At {{the top of the}} screen, a timer displays how long the playthrough has lasted. The player's best survival time is published on a global leaderboard. Accessed via the leaderboard, replays of playthroughs can be downloaded and watched from either a first-person view or a top-down perspective.|$|E
50|$|The pointing-head is on {{the right}} side of the unit below the {{directional}} pad. The <b>mouse</b> <b>buttons</b> are on the left side of the unit, no matter what orientation it is used in. When rotated into portrait mode, the options key, brightness, and onscreen keyboard button are remapped to the <b>mouse</b> <b>buttons,</b> and the previous <b>mouse</b> <b>buttons</b> become the new modifier buttons.|$|R
50|$|KMouseTool - Helping {{software}} for clicking the <b>mouse</b> <b>buttons.</b>|$|R
5000|$|... {{the current}} state of the {{modifiers}} (Shift, Control, etc.) and <b>mouse</b> <b>buttons</b> ...|$|R
25|$|<b>Mouse</b> <b>button</b> chording (a.k.a. Rocker navigation).|$|E
25|$|The camera, fighting, and {{targeting}} {{controls were}} reworked to incorporate concepts from another Rockstar game, Manhunt, including various stealth elements, {{as well as}} improved target crosshairs and a target health indicator which changes from green to red to black depending on the target's health. The PC version of the game implements mouse chording; the player has to hold the right <b>mouse</b> <b>button</b> to activate the crosshairs, and then click or hold at the left <b>mouse</b> <b>button</b> to shoot or use an item, such as a camera.|$|E
25|$|Since {{around the}} late 1990s, the three-button scrollmouse {{has become the}} de facto standard. Users most {{commonly}} employ the second button to invoke a contextual menu in the computer's software user interface, which contains options specifically tailored to the interface element over which the mouse cursor currently sits. By default, the primary <b>mouse</b> <b>button</b> sits located on the left-hand side of the mouse, {{for the benefit of}} right-handed users; left-handed users can usually reverse this configuration via software.|$|E
5000|$|Celestia - Pressing both <b>mouse</b> <b>buttons</b> {{allows the}} user to adjust {{distance}} from an object.|$|R
5000|$|Page {{through the}} images {{sequentially}} and scroll around pages with single key presses or <b>mouse</b> <b>buttons.</b>|$|R
50|$|On a QWERTY keyboard, {{the stick}} is {{typically}} embedded between the G, H and B keys, and the <b>mouse</b> <b>buttons</b> are placed {{just below the}} space bar. The <b>mouse</b> <b>buttons</b> can be operated right-handed or left-handed due to their placement below the keyboard along the centerline. This pointing device has also appeared next to screens on compact-sized laptops such as the Toshiba Libretto and Sony VAIO UX.|$|R
25|$|LucasArts' {{previous}} graphic adventure, Sam & Max Hit the Road (1993), {{introduced a}} new inventory and interaction system to replace those of their prior games, which had taken up the lower third of the player's screen. Full Throttle continued to refine on the changes introduced in Sam & Max Hit the Road: Objects or characters with which Ben can interact are indicated by a red square appearing around the cursor's crosshairs when the cursor is placed over the object. When this occurs, holding down the left <b>mouse</b> <b>button</b> causes a contextual pie menu {{to appear in the}} shape of the emblem of Ben's biker gang: a flaming circle topped by a skull and flanked by a boot and a gloved hand. The player hovers the cursor over elements of the emblem and then releases the <b>mouse</b> <b>button</b> to attempt various interactions with the object; for example, selecting the skull's mouth to speak to a character, its eyes to examine an object, or the hand to pick up, use, or pull the object. Right-clicking anywhere on the screen brings up the player's inventory of collected objects, which can be examined or dragged and dropped in order to use them with other items in the inventory or with objects or characters in the scene. These gameplay features would be further developed for The Curse of Monkey Island (1997).|$|E
25|$|However stylish, the mouse's round {{shape is}} widely {{considered}} clumsy, due to its small size and tendency to rotate in use. This was a major cause {{for the success of}} the Griffin iMate ADB to USB adapters, as they allowed {{for the use of the}} older, more comfortable ADB Mouse II to be used with those iMacs. Later revisions included a shallow indentation on the front of the single <b>mouse</b> <b>button,</b> but this was not enough to prevent a flood of third-party products like the iCatch and UniTrap, shells that attached to the USB mouse to give it the ADB mouse's elliptical shape.|$|E
25|$|When mice {{have more}} than one button, the {{software}} may assign different functions to each button. Often, the primary (leftmost in a right-handed configuration) button on the mouse will select items, and the secondary (rightmost in a right-handed) button will bring up a menu of alternative actions applicable to that item. For example, on platforms with more than one button, the Mozilla web browser will follow a link in response to a primary button click, will bring up a contextual menu of alternative actions for that link in response to a secondary-button click, and will often open the link in a new tab or window in response to a click with the tertiary (middle) <b>mouse</b> <b>button.</b>|$|E
5000|$|Eve Online - Pressing {{both the}} left and right <b>mouse</b> <b>buttons</b> allows for an {{alternative}} method of camera control.|$|R
5000|$|Minesweeper (Windows) - Pressing both <b>mouse</b> <b>buttons</b> clears {{around a}} square after the correct number of flags {{have been placed}} in the {{surrounding}} squares.|$|R
25|$|<b>Mouse</b> <b>buttons</b> are {{microswitches}} {{which can}} be pressed to select or interact with an element of a graphical user interface, producing a distinctive clicking sound.|$|R
25|$|Gamers {{can use a}} {{scroll wheel}} for {{changing}} weapons (or for controlling scope-zoom magnification, in older games). On most first person shooter games, programming may also assign more functions to additional buttons on mice with more than three controls. A keyboard usually controls movement (for example, WASD for moving forward, left, backward and right, respectively) and other functions such as changing posture. Since the mouse serves for aiming, a mouse that tracks movement accurately and with less lag (latency) will give a player an advantage over players with less accurate or slower mice. In some cases the right <b>mouse</b> <b>button</b> {{may be used to}} move the player forward, either in lieu of, or in conjunction with the typical WASD configuration.|$|E
25|$|M0100: Four {{months after}} the Macintosh debut, the Apple IIc was {{introduced}} {{with the addition of}} an optional mouse to manipulate standard 80 column text. The mouse was similar to the Macintosh mouse, though it was in a creamy-beige color that co-ordinated with the IIc's bright off-white case and had a slightly modified design which was sleeker than the Macintosh's blockier shape. It also was uniformly the same color, eliminating the Mac & Lisa's contrasting taupe accents on the <b>mouse</b> <b>button</b> and cable. Unlike the Macintosh, the IIc Mouse shared a dual purpose port with gaming devices like joysticks. In order for the IIc to know what was plugged into it, its mouse had to send the appropriate signal. Despite these differences, it carried exactly the same model number as the Macintosh version.|$|E
25|$|As {{with most}} LucasArts {{adventure}} games, Full Throttle is a single-player video {{game in which}} the player controls {{the actions of the}} player character from a third-person perspective using a computer mouse and point and click interface. By positioning the cursor and clicking the left <b>mouse</b> <b>button,</b> the player causes the player character, Ben, to move around a scene. In certain contexts the cursor will become an arrow (if Ben is on foot) or a directional road sign (if Ben is riding his motorcycle); clicking these causes Ben to travel to another scene. As with other LucasArts graphic adventure games of the era, dialogue plays a large part in the game, presenting story elements and information necessary to advance. During conversations with other characters, several choices of dialogue are presented. The currently selected choice is highlighted, and once clicked, the player character responds with the selected choice. Choosing the correct response allows the player to advance the conversation and ultimately advance the scene.|$|E
50|$|Mouse chording is the {{capability}} of performing actions when multiple <b>mouse</b> <b>buttons</b> are held down, much like a chorded keyboard and similar to mouse gestures.|$|R
50|$|The X server {{maintains}} {{and uses}} a modifier mapping for the <b>mouse</b> <b>buttons.</b> However, the buttons can only be permuted. This is mostly useful for exchanging the leftmost and rightmost button for left-handed users.|$|R
50|$|Only the {{keyboard}} {{is required to}} work with Gnome Commander, which makes working processes much faster. Using the mouse is still an option. Keyboard shortcuts and the behavior of certain <b>mouse</b> <b>buttons</b> are freely configurable.|$|R
25|$|The game {{features}} a simple interface, with icon menus instead of text. Character movement and most object manipulation are mouse-directed, although the player may use a keyboard or joystick. The player chooses all actions (except movement and projectile weapons) by pressing a single action key (or <b>mouse</b> <b>button),</b> which causes the character to automatically take the correct action with an object; the character either automatically picks up important objects or {{can take the}} object when the character looks at it. To talk to characters, or attack monsters with the scimitar, the player moves the character towards the target and clicks. The player selects the game's difficulty level of the game, which affects the monsters' power. At {{the beginning of the}} game, the player learns to maneuver the character by racing through a trap-filled dungeon hallway. Al-Qadim features simple, real-time combat, with the character using up to two weapons at a time. The character's scimitar can become more powerful with special objects, and his projectile weapon is a sling or magic shards which cast spells. If the character is injured, he can restore his hit points by drinking healing potions or be magically healed when he visits special locations.|$|E
25|$|Lau et al. {{set up an}} {{experiment}} where subjects would look at an analogue-style clock, and a red dot would move around the screen. Subjects were told to click the <b>mouse</b> <b>button</b> whenever they felt the intention to do so. One group was given a transcranial magnetic stimulation (TMS) pulse, {{and the other was}} given a sham TMS. Subjects in the intention condition were told to move the cursor to where it was when they felt the inclination to press the button. In the movement condition, subjects moved their cursor to where it was when they physically pressed the button. Results showed the TMS was able to shift the perceived intention forward by 16ms, and shifted back the 14ms for the movement condition. Perceived intention could be manipulated up to 200ms after the execution of the spontaneous action, indicating that the perception of intention occurred after the executive motor movements. Often it is thought that free will were to exist, it would require intention to be the causal source of behavior. These results show that intention may not be the causal source of all behavior.|$|E
500|$|Curse of Enchantia uses a {{point and}} click style user interface, similar to Sierra's Creative Interpreter from the King's Quest series. The player {{character}} is commanded with an icon based control bar that is accessible by pressing the right <b>mouse</b> <b>button,</b> which also pauses the game. The control bar features seven main actions: inventory, pick up/take, manipulate/use (opening up a sub-menu with eight further actions: unlock, insert, push/pull, eat, wear, throw, give and combine), look, talk (only either [...] "Help!" [...] or [...] "Hi!"), attack, and jump. Usually, the protagonist has {{to stand in}} the immediate vicinity to the game's objects and characters, which then appear as icons in a separate bar, in order to interact with them. A joystick or computer keyboard input can also be used.|$|E
5000|$|Silo is a polygon/subdivision {{surfaces}} 3D modeling application {{created by}} Nevercenter. It has {{a focus on}} quick editing, a customizable interface (all <b>mouse</b> <b>buttons</b> and keyboard shortcuts can be assigned to any function), and a flexible workflow.|$|R
50|$|New {{features}} of the fourth version consists {{of the availability of}} using <b>mouse</b> <b>buttons</b> for hot keys. The user can thus use mouse 4, 5 and mouse scroll. Additionally, the fourth version adds full customization to hot keys.|$|R
5000|$|A {{scroll wheel}} (or mouse wheel) {{is a hard}} plastic or rubbery disc (the [...] "wheel") on a {{computer}} mouse that is perpendicular to the mouse surface. It is normally located between {{the left and right}} <b>mouse</b> <b>buttons.</b>|$|R
500|$|Day of the Tentacle {{follows the}} point-and-click {{two-dimensional}} adventure game formula, first {{established by the}} original Maniac Mansion. Players direct the controllable characters around the game world by clicking with the computer mouse. To interact with the game world, players choose from a set of nine commands arrayed on the screen (such as [...] "pick up", [...] "use", or [...] "talk to") and then on an object in the world. This was the last SCUMM game to use the original interface of having {{the bottom of the}} screen being taken up by a verb selection and inventory; starting with the next game to use the SCUMM engine, Sam & Max Hit the Road, the engine was modified to scroll through a more concise list of verbs with the right <b>mouse</b> <b>button</b> and having the inventory on a separate screen.|$|E
500|$|The game {{is played}} {{primarily}} through [...] "pointing and clicking" [...] with the mouse and a few keyboard commands. This system {{is also used to}} control the spacecraft, a breakaway from the traditional use of joysticks for space flight simulators. Observing their spacecraft from the rear, players fly their ships by moving the mouse in the direction they want the vessels to go. Freelancers spacecraft follow simplistic flight dynamics; however, a dash of realism is implemented by allowing the vessels to cut power to their engines and turn to face any direction while drifting along their original pathconservation of momentum. Clicking the <b>mouse</b> <b>button</b> shoots the ship's weapons at the location of the cursor. The interface has no radar display; the location of objects not shown on the screen are indicated by pointers at the screen's edges. Targeting, communications, and navigation data are displayed in information boxes that can be minimized.|$|E
2500|$|Drag and drop: {{pressing}} {{and holding}} a button, then moving the mouse without releasing. (Using the command [...] "drag with the right mouse button" [...] instead of just [...] "drag" [...] when one instructs a user to drag an object while holding the right <b>mouse</b> <b>button</b> down instead of the more commonly used left <b>mouse</b> <b>button.)</b> ...|$|E
50|$|From release 2.0 onwards it is {{possible}} to enter a boot menu by holding down both <b>mouse</b> <b>buttons</b> at power on or reset. This allows the user to choose a boot device, set parameters for backwards compatibility and examine Autoconfig hardware.|$|R
50|$|Depending on the {{software}} version and specific mouse product, users can define <b>mouse</b> <b>buttons</b> to run any executable program or file they desire (or a control key + letter combination) {{and can even}} define buttons for different functions in chosen programs.|$|R
5000|$|... ranger borrows its keybindings from vi where possible, {{but also}} accepts <b>mouse</b> <b>buttons</b> and shares a few keybindings with GNU Readline and Midnight Commander. All {{configurable}} keybindings are {{defined in the}} [...] configuration file, which is located in [...] by default.|$|R
