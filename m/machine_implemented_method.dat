0|10000|Public
5000|$|US {{patent on}} {{evolutionary}} program induction of machine code granted: Computer <b>Implemented</b> <b>Machine</b> Learning <b>Method</b> and System, Patent Number 5,841,947 ...|$|R
40|$|Decomposition {{methods for}} multiclass classication {{problems}} constitute a powerful framework to improve generalization capabilities {{of a large}} set of learning machines, including support vector machines and multi-layer perceptrons. We present {{a review of the}} main decomposition approach to classi cation and an experimental comparison of OnePer -Class (OPC), Correcting Classiers (CC) and Error Correcting Output Codes (ECOC) decomposition <b>methods</b> <b>implemented</b> using multi-layer perceptrons as dichotomizers. The results show that CC and ECOC outperform OPC over the considered data sets. 1 Introduction Decomposition methods for classication split a multiclass problem, or polychotomy, in a series of independent twoclass problems (dichotomies) and recompose them using the outputs of dichotomizers, in order to reconstruct the original polychotomy [10, 12, 8]. Learning <b>machines</b> <b>implementing</b> decomposition <b>methods</b> are composed by two main units: Decomposition Unit that analyzes the input pa [...] ...|$|R
40|$|Big {{data has}} become a rapidly growing field amongst firms in the {{financial}} sector and thus many companies and researchers have begun <b>implementing</b> <b>machine</b> learning <b>methods</b> to sift through large portions of data. From this data, investment management firms have attempted to automate investment strategies, some successful and some unsuccessful. This paper will investigate an investment strategy by using a deep neural network {{to see whether the}} stocks picked from the network will out or underperform the Russell 2000...|$|R
25|$|Since the {{negative}} {{answer to the}} halting problem shows that there are problems that cannot be solved by a Turing machine, the Church–Turing thesis limits what {{can be accomplished by}} any <b>machine</b> that <b>implements</b> effective <b>methods.</b> However, not all machines conceivable to human imagination are subject to the Church–Turing thesis (e.g. oracle machines). It is an open question whether there can be actual deterministic physical processes that, in the long run, elude simulation by a Turing machine, and in particular whether any such hypothetical process could usefully be harnessed {{in the form of a}} calculating machine (a hypercomputer) that could solve the halting problem for a Turing machine amongst other things. It is also an open question whether any such unknown physical processes are involved in the working of the human brain, and whether humans can solve the halting problem (Copeland 2004, p.15).|$|R
40|$|Abstract. In {{order to}} ensure the security, {{stability}} and effective operation of information system, the construction and optimization techniques for information operational Rule Base has become an urgent problem to be solved. To meet the demands, this paper presents a rule base construction and optimization strategy based on machine learning and association rule mining. The operational rule base which includes basic rules, association rules and extension rules is generated by the network topology, the monitoring indicators and the association rule mining of historical data. Then <b>implement</b> <b>machine</b> learning <b>method</b> for rules to improve their performance. At last, the rule-upgrade strategy is proposed for rules {{to move from the}} lower region to higher region. Based on these steps, experimental results are given to verify the proposed strategy...|$|R
50|$|Solan depot is {{pioneer in}} {{introducing}} Electronic Ticketing <b>Machine,</b> <b>implementing</b> Tally software & almost computerized for following work.|$|R
50|$|Fully {{automatic}} systems {{allow the}} ability of the <b>machine's</b> <b>implements</b> to be controlled by the GPS guidance system. This is typically used in the fine grading applications where precise levels of material need to be moved on a predetermined design or grade. The advantages to this system is due to the accuracy that can be achieved with GPS and RTK, but requires an onsite base station. These systems can use either one or two GPS receivers and are mounted on the machine's blade. The more advanced systems use two receivers since it allows the machine to be controlled in a three-dimensional design. Fully automatic systems require the GPS guidance system to be integrated in the <b>machine's</b> <b>implement</b> controls. Some manufacturers sell the machine with these controls already integrated into the machine as an option. Aftermarket kits are available that can retrofit your existing machine to fully automatic control, but requires the GPS system to interface with the <b>machine's</b> <b>implement</b> controls. This is typically done one of two ways. If the <b>machine's</b> <b>implements</b> are controlled using electric over hydraulic (EH), the GPS system can input lever commands in parallel with the <b>machine's</b> <b>implement</b> lever. The output from the GPS system is interpreted by the machine's electronic control module as a lever command given by the operator and moves the implements accordingly. The second method for integrating GPS in the <b>machine's</b> <b>implement</b> controls is by adding a second pilot hydraulic valve in parallel with the machine's pilot hydraulic valve. This second valve is controlled by the GPS system and moves the implement valve according to the system design and blade location. Types of machines that use fully automatic GPS systems include TTT and MG.|$|R
50|$|In {{order to}} {{illustrate}} Generalized Paxos, the example below shows a message flow between two concurrently executing clients and a replicated state <b>machine</b> <b>implementing</b> read/write operations over two distinct registers A and B.|$|R
5000|$|In {{marketing}} terms, the 2900 Series was {{superseded by}} Series 39 in the mid-1980s; however, Series 39 {{was essentially a}} new set of <b>machines</b> <b>implementing</b> the 2900 Series architecture, as were subsequent ICL machines branded [...] "Trimetra".|$|R
40|$|IEEE Computer Society Technical Committee on Parallel ProcessingWith {{advances}} in hardware-assisted full virtualization technologies, system virtualization {{based on the}} virtual machine monitor (VMM) has received much recent attention. Using the Xen/IA 64 hardware virtual <b>machine</b> <b>implemented</b> on Intel® Virtualization...|$|R
50|$|It {{has been}} proved that the Krivine <b>machine</b> <b>implements</b> {{correctly}} the call by name head normal form reduction in the lambda-calculus. Moreover the Krivine machine is deterministic, since each pattern of the state corresponds to at most one machine transition.|$|R
50|$|An {{abstract}} machine can also {{refer to a}} microprocessor design which {{has yet to be}} (or is not intended to be) implemented as hardware. An abstract <b>machine</b> <b>implemented</b> as a software simulation, or for which an interpreter exists, is called a virtual machine.|$|R
50|$|The Acorn <b>machines</b> <b>implement</b> the Kansas City {{standard}} (KCS) for tape data encoding and as {{a result}} the file format is suitable for creating backups of original media for several non-Acorn machines. As of version 0.10 the file format carries BASICODE signals as well.|$|R
50|$|This <b>machine</b> <b>implements</b> a true {{multiplication}} where, by just {{pulling on}} a ribbon, the multiplicand entered on the input sliders is multiplied by a one-digit multiplier number and {{it uses the}} 9's complement method for subtracting. Both of these features will be dropped in later designs.|$|R
40|$|Abstract: The paper {{describes}} {{the implementation of}} a parallel graph narrowing <b>machine.</b> The <b>machine</b> <b>implements</b> a functional logic language on a shared memory multiprocessor. The model of parallelism uses an independence condition to decide which subexpressions of an expression can run in parallel. The outer expression continues its execution and the synchronization with a subtask is only performed when its result is needed. The <b>machine</b> is fully <b>implemented</b> and some experimental results are shown...|$|R
50|$|Instructions are 16 bits {{wide and}} have 4-bit opcodes. The {{instruction}} set defines instructions for fifteen of the sixteen possible opcodes, though some instructions {{have more than}} one mode of operation. Individual instructions' execution is regulated by a state <b>machine</b> <b>implemented</b> with a control ROM and microsequencing unit.|$|R
5000|$|... many {{answering}} <b>machines</b> <b>implement</b> call screening, which 1571 cannot do: {{the answering}} machine picks up the call with its speaker active, so that the user, if available, can {{listen to what the}} caller says, and pick up the phone only if they want to speak with the caller; ...|$|R
5000|$|The <b>implemented</b> <b>method</b> {{that runs}} when the {{delegate}} is called: ...|$|R
40|$|JavaCard is {{a variant}} of the Java {{programming}} language specifically designed for use on Smart Cards. In order to support the secure execution of several different applets on a Smart Card, the JavaCard Virtual <b>Machine</b> <b>implements</b> a firewall that isolates applets from each other by preventing unwanted information sharing and communication between applets...|$|R
5000|$|Container {{classes are}} {{expected}} to <b>implement</b> <b>methods</b> to do the following: ...|$|R
50|$|In {{hardware}} virtualization, virtual <b>machines</b> <b>implement</b> virtual drives as part {{of their}} efforts to emulate the behavior of an actual machine. As with an ordinary computer, a virtual machine needs one virtual drive and one disk image to start up, except when it is performing a network boot. More virtual drives are added as needed.|$|R
40|$|We {{provide an}} illustrative {{implementation}} of an analytic, infinitely-differentiable virtual <b>machine,</b> <b>implementing</b> infinitely-differentiable programming spaces and operators acting upon them, as {{constructed in the}} paper Operational calculus on programming spaces. Implementation closely follows theorems and derivations of the paper, intended as an educational guide for those transitioning from automatic differentiation to this general theory. Comment: 17 page...|$|R
40|$|This paper {{presents}} the MANTRA I machine, an SIMD neuro-computer {{based on a}} square systolic array of dedicated processing elements (PEs). A VLSI custom chip, called GENES IV containing 2 Θ 2 PEs {{is at the heart}} of the system. This <b>machine</b> <b>implements</b> sufficient instruction and data flows to keep the array's utilization rate close to 100...|$|R
40|$|The paper {{presents}} {{technologies for}} developing efficient high temperature permanent magnet <b>machines</b> <b>implemented</b> in aerospace drive applications. Selection criteria and experimental {{investigation of the}} permanent magnet material is undertaken and design considerations enabling to meet the specifications set are described. The proposed control algorithm for an appropriate PWM inverter is introduced. © (2012) Trans Tech Publications...|$|R
50|$|The Vx32 virtual {{extension}} {{environment is}} an application-level virtual <b>machine</b> <b>implemented</b> as an ordinary user-mode library {{and designed to}} run native x86 code. Applications can link with and use Vx32 {{in order to create}} safe, OS-independent execution environments, in which to run untrusted plug-ins or other extensions written in any language that compiles to x86 code.|$|R
40|$|The {{aim of this}} bachelor's {{thesis is}} to design and <b>implement</b> <b>method</b> using radar to {{distance}} measurement. The first part describes radar principles. A brief introduction radar signal processing methods and radar techniques for distance measurement as well. The next part describes concept and implementation of system for estimate distance. In the end, the <b>implemented</b> <b>method</b> is evaluated and possible continuation is stated...|$|R
40|$|The paper {{presents}} the design considerations of electrical machines for drive systems. The {{different types of}} electrical <b>machines</b> <b>implemented</b> in drive systems are overviewed and their main characteristics are discussed. Actual trends of using vector control techniques in inverter fed asynchronous motors and sensorless permanent magnet motor drives are explained and their advantages are illustrated. The finite element method i...|$|R
50|$|The Perl {{virtual machine}} is a stack-based process virtual <b>machine</b> <b>implemented</b> as an opcodes {{interpreter}} which runs previously compiled programs {{written in the}} Perl language. The opcodes interpreter {{is a part of}} the Perl interpreter, which also contains a compiler (lexer, parser and optimizer) in one executable file, commonly /usr/bin/perl on various Unix-like systems or perl.exe on Microsoft Windows systems.|$|R
5000|$|... /* Class {{implementing}} this interface must <b>implement</b> <b>methods</b> of bothActionListener and RequestListener */interface EventListener extends ActionListener, RequestListener { } ...|$|R
50|$|At IBM, Hendricks {{worked with}} the team that had {{developed}} the world’s first virtual machine operating systems, CP/CMS. A key problem with this new software architecture was {{finding a way to}} expand the functions of the system without significantly increasing the size of the hypervisor (control program). Hendricks developed the concept of a service virtual <b>machine,</b> <b>implemented</b> in a simple communications system named CPREMOTE.|$|R
50|$|In practice, many {{functions}} of interest are computable by machines that always halt. A machine that uses only finite memory on any particular input can {{be forced to}} halt for every input by restricting its flow control capabilities so that no input will ever cause the machine to enter an infinite loop. As a trivial example, a <b>machine</b> <b>implementing</b> a finitary decision tree will always halt.|$|R
50|$|An ongoing area of {{research}} in recursion theory studies reducibility relations other than Turing reducibility. Post (1944) introduced several strong reducibilities, so named because they imply truth-table reducibility. A Turing <b>machine</b> <b>implementing</b> a strong reducibility will compute a total function regardless of which oracle it is presented with. Weak reducibilities are those where a reduction process may not terminate for all oracles; Turing reducibility is one example.|$|R
50|$|To {{implement}} the head reduction of a term u v {{which is an}} application, but {{which is not a}} redex, one must reduce the body u to exhibit an abstraction and therefore create a redex with v. When a redex appears, one reduces it. To reduce always the body of an application first is called call by name. The Krivine <b>machine</b> <b>implements</b> call by name.|$|R
50|$|When a green thread executes a {{blocking}} system call, {{not only}} is that thread blocked, {{but all of the}} threads within the process are blocked. To avoid that problem, green threads must use asynchronous I/O operations, although the increased complexity on the user side can be reduced if the virtual <b>machine</b> <b>implementing</b> the green threads spawn specific I/O processes (hidden to the user) for each I/O operation.|$|R
5000|$|In 1982, Burroughs began {{producing}} personal computers, the B20 and B25 {{lines with}} the Intel 8086/8088 family of 16-bit chips as the processor. These ran the BTOS operating system, which Burroughs licensed from Convergent Technologies. These <b>machines</b> <b>implemented</b> an early Local Area Network {{to share a}} hard disk between workgroup users. These microcomputers were later manufactured in Kunming, China for use in China under agreement with Burroughs.|$|R
50|$|He {{has been}} {{influential}} in the Higher Education Commission of Pakistan and <b>implemented</b> <b>methods</b> to improve educational standards in Pakistan.|$|R
