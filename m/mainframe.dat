4165|999|Public
5|$|By {{the end of}} the 1960s, <b>mainframe</b> {{computers}} and minicomputers were present in many academic research institutions and large companies such as Bell Labs. While the commercial video game industry did not yet exist at that point in the early history of video games and would not until the early 1970s, programmers at these companies created several small games to be played on their <b>mainframe</b> computers. Most of these spread only to other users of the same type of computer and therefore did not persist as older computer models were discontinued; several, however, inspired future games, or were later released in modified versions on more modern systems or languages. These early <b>mainframe</b> games were largely created between 1968 and 1971; while earlier games were created they were limited to small, academic audiences. <b>Mainframe</b> games also continued to be developed through the 1970s, but the rise of the commercial video game industry, focused on arcade video games and home video game consoles, followed by the rise of personal computers later in the decade, meant that beginning in the 1970s the audience and developers of video games began to shift away from <b>mainframe</b> computers or minicomputers, and the spread of general-purpose programming languages such as the BASIC programming language meant that later <b>mainframe</b> games could generally be run on personal computers with minimal changes, even if initially developed on a <b>mainframe.</b>|$|E
5|$|Early {{computer}} games {{began to be}} created in the 1950s, and the steady {{increase in the number}} and abilities of computers over time led to the gradual loosening of restrictions on access to <b>mainframe</b> computers at academic and corporate institutions beginning in the 1960s. This in turn led to a modest proliferation of generally small, text-based games on <b>mainframe</b> computers, with increasing complexity {{towards the end of the}} decade. While games continued to be developed on mainframes and minicomputers through the 1970s, the rise of personal computers and the spread of high-level programming languages meant that later games were generally intended to or were capable of being run on personal computers, even when developed on a <b>mainframe.</b> These early games include Hamurabi, an antecedent of the strategy and city-building genres; Lunar Lander, which inspired numerous recreations in the 1970s and 1980s; Civil War, an early war simulation game; Star Trek, which was widely ported, expanded, and spread for decades after; Space Travel, which played a role in the creation of the Unix operating system; and Baseball, an early sports game and the first baseball game to allow player control during a game.|$|E
5|$|In 1971, DEC {{employee}} David H. Ahl converted two minicomputer games, Hamurabi and Lunar Lander, {{from the}} FOCAL language to BASIC, partially {{as a demonstration}} of the language on the DEC PDP-8 minicomputer. Their popularity led him to start printing BASIC games in the DEC newsletter he edited, both ones he wrote and reader submissions. In 1973, he released the book 101 BASIC Computer Games, containing descriptions and the source code for video games written in BASIC. The games included were written by both Ahl and others, and included both games original to the language and ported from other languages such as FOCAL. Many of these ports were originally <b>mainframe</b> computer games. 101 BASIC Computer Games was a landmark title in computer games programming, and was a best-selling title with more than 10,000 copies sold—more sales than computers in existence at the time. Its second edition in 1978, titled BASIC Computer Games, was the first million-selling computer book. As such, the BASIC ports of <b>mainframe</b> computer games included in the book were often more long-lived than their original versions or other <b>mainframe</b> computer games.|$|E
50|$|An innovative, {{nationwide}} packet-switching network, running {{primarily on}} DEC PDP-11s, provided access between modem banks {{and up to}} a dozen large IBM and Amdahl <b>mainframes.</b> This network also provided interconnections between <b>mainframes.</b>|$|R
50|$|When Unisys {{discontinued}} {{sales of}} the 9000 series <b>mainframes</b> {{in favor of the}} EXEC 8 series computers (probably because they were no longer cost effective, and the market for <b>mainframes</b> had shrank), VS/9 was effectively abandoned by the company.|$|R
50|$|Distribution of {{the product}} is {{scheduled}} to cease in early 2006, as most of its packages are out of date, and other Linux distributions support IBM <b>mainframes.</b> Most modern Linux distributions support IBM <b>mainframes,</b> making a special dedicated distribution unnecessary.|$|R
5|$|In late September 2012, NEC {{announced}} a return from IA-64 {{to the previous}} NOAH line of proprietary <b>mainframe</b> processors, now produced in a quad-core variant on 40nm, called NOAH-6.|$|E
5|$|<b>Mainframe</b> {{computers}} are computers used primarily by businesses and academic institutions for large-scale processes. Before personal computers, first termed microcomputers, became widely {{available to the}} general public in the 1970s, the computing industry was composed of <b>mainframe</b> computers and the relatively smaller and cheaper minicomputer variant. During the mid to late 1960s, many early video games were programmed on these computers. Developed prior to the rise of the commercial video game industry in the early 1970s, these early <b>mainframe</b> games were generally written by students or employees at large corporations in a machine or assembly language that could only be understood by the specific machine or computer type they were developed on. While many of these games were lost as older computers were discontinued, some of them were ported to high-level computer languages like BASIC, had expanded versions later released for personal computers, or were recreated for bulletin board systems years later, thus influencing future games and developers.|$|E
5|$|The next day, {{the corpse}} of a shapeshifter is found, {{shot in the head}} with its data disc—encoded {{information}} regarding its mission—missing. When the identity connects it to one of the employees at the facility where the Fringe <b>mainframe</b> is housed, Broyles suspects a mole seeking to wipe out Fauxlivia's data, and orders a <b>mainframe</b> lockdown, while verifying the humanity of key people in the FBI and Massive Dynamic. Astrid identifies several other potential candidates, including a doctor from Massive Dynamic who had already left. By the time Fringe division reaches his home, they find the man, a shapeshifter, already dead.|$|E
50|$|PL/I {{implementations}} {{were developed}} for <b>mainframes</b> {{from the late}} 1960s, mini computers in the 1970s, and personal computers in the 1980s and 1990s. Although its main use has been on <b>mainframes,</b> there are PL/I versions for DOS, Microsoft Windows, OS/2, AIX, OpenVMS, and Unix.|$|R
50|$|For {{historical}} reasons, some organizations use {{the term}} systems programmer to describe a job function which would be more accurately termed systems administrator. This is particularly true in organizations whose computer resources have historically been dominated by <b>mainframes,</b> although the term is even used to describe job functions which do not involve <b>mainframes.</b> This usage arose because administration of IBM <b>mainframes</b> often involved the writing of custom assembler code (IBM's Basic Assembly Language (BAL)), which integrated with the operating system such as OS/MVS, DOS/VSE or VM/CMS. Indeed, some IBM software products had substantial code contributions from customer programming staff. This type of programming is progressively less common, but the term systems programmer is still the de facto job title for staff directly administering IBM <b>mainframes.</b>|$|R
5000|$|PC-based IBM-compatible <b>mainframes</b> - z/Architecture {{and today}} ...|$|R
5|$|VisiCalc – was {{the first}} {{spreadsheet}} computer program for personal computers, originally released for the Apple II by VisiCorp. MIT alum Dan Bricklin and Bob Frankston rented time sharing at night on an MIT <b>mainframe</b> computer (that cost $1/hr for use).|$|E
5|$|Meanwhile, Malory becomes {{temporally}} blinded {{after having}} {{an allergic reaction}} to zucchini. Seeing {{this as an opportunity}} to help themselves, secretary Cheryl and human resources representative Pam hack into the ISIS computer <b>mainframe</b> from Malory's office and alter their files, allowing them better health care and other perks they can not afford themselves. The whole time, Malory rants about how disgruntled she is about her own and others' life choices.|$|E
5|$|On 11 September 1940, George Stibitz {{transmitted}} {{problems for}} his Complex Number Calculator in New York using a teletype, {{and received the}} computed results back at Dartmouth College in New Hampshire. This configuration of a centralized computer (<b>mainframe)</b> with remote dumb terminals remained popular well into the 1970s. However, already in the 1960s, researchers started to investigate packet switching, a technology that sends a message in portions to its destination asynchronously without passing it through a centralized <b>mainframe.</b> A four-node network emerged on 5 December 1969, constituting {{the beginnings of the}} ARPANET, which by 1981 had grown to 213 nodes. ARPANET eventually merged with other networks to form the Internet. While Internet development was a focus of the Internet Engineering Task Force (IETF) who published a series of Request for Comment documents, other networking advancement occurred in industrial laboratories, such as the local area network (LAN) developments of Ethernet (1983) and the token ring protocol (1984).|$|E
5000|$|... #Subtitle level 3: <b>Mainframes,</b> minicomputers, and {{microcomputers}} ...|$|R
50|$|On IBM <b>mainframes,</b> LPARs {{are managed}} by the PR/SM facility. IBM <b>mainframes</b> operate {{exclusively}} in LPAR mode, even when {{there is only one}} partition on a machine. Multiple LPARs running z/OS can form a Sysplex or Parallel Sysplex, whether on one machine or spread across multiple machines.|$|R
2500|$|For {{historical}} reasons, some organizations use {{the term}} systems programmer to describe a job function which would be more accurately termed systems administrator. [...] This is particularly true in organizations whose computer resources have historically been dominated by <b>mainframes,</b> although the term is even used to describe job functions which do not involve <b>mainframes.</b> This usage arose because administration of IBM <b>mainframes</b> often involved the writing of custom assembler code (IBM's Basic Assembly Language [...] (BAL)), which integrated with the operating system such as OS/MVS, DOS/VSE or VM/CMS. [...] Indeed, some IBM software products had substantial code contributions from customer programming staff. This type of programming is progressively less common, but the term systems programmer is still the de facto job title for staff directly administering IBM <b>mainframes.</b>|$|R
5|$|By the 1960s, {{improvements}} in computing {{technology and the}} early development of relatively cheaper <b>mainframe</b> computers, which would later be termed minicomputers, led to the loosening of restrictions regarding programming access to the computers. At the Massachusetts Institute of Technology (MIT), access to the TX-0 experimental computer was opened to students and employees of the university. This in turn {{led to the development}} of programs that in addition to highlighting the power of the computer also contained an entertainment aspect. The games created for the TX-0 by the small programming community at MIT included Tic-Tac-Toe, which used a light pen to play a simple game of noughts and crosses against the computer, and Mouse in the Maze, which let players set up a maze for a mouse to run through. When the Digital Equipment Corporation (DEC) PDP-1 computer was installed at MIT in 1961, the community built a video game to showcase its abilities, Spacewar, which then became the first known video game to spread beyond a single computer installation as it was copied and recreated on other PDP-1 systems and later on other <b>mainframe</b> computers.|$|E
5|$|Despite his {{previous}} actions of breaking into ISIS and hacking the <b>mainframe,</b> Archer is excused from his expenses after Cyril {{comes to the}} assumption that Kremenski had been stealing from Archer's account the whole time. Malory notes {{that she would have}} known if there was a mole at ISIS, her earlier phone call shown to have been with Nikolai Jakov, head of the KGB. She changes the subject when questioned, and rather complains that someone left donuts on the floor attracting ants.|$|E
5|$|In the episode, suave yet {{rude and}} belligerent spy Sterling Archer, {{prompted}} by questions regarding his expense account, breaks into the <b>mainframe</b> computer of his organization ISIS and inadvertently discovers a mole in the organization. The episode {{was written by}} Archer creator and co-executive producer, Adam Reed, and directed by Mack Williams. It was produced at Floyd County Productions and animated at Radical Axis Studio in Atlanta, {{over the course of}} approximately one month.|$|E
5000|$|HooX COM+ allows <b>mainframes</b> to {{communicate}} with [...]NET applications.|$|R
50|$|Up {{until the}} mid-1990s, <b>mainframes</b> were very large {{machines}} that often occupied entire rooms. The rooms were often air conditioned and had special power arrangements {{to accommodate the}} three-phase electric power required by the machines. Modern <b>mainframes</b> are now physically comparatively small and require little or no special building arrangements.|$|R
25|$|The {{most common}} {{operating}} system for <b>mainframes</b> is IBM's z/OS.|$|R
5|$|Kenji {{receives}} an e-mail with a mathematical code and cracks it. Love Machine, an artificial intelligence written by Wabisuke, uses Kenji's account and avatar to hack the infrastructure, causing widespread damage. Kenji, Sakuma, and Natsuki's cousin Kazuma Ikezawa (Mitsuki Tanimura) confront Love Machine. Love Machine defeats Kazuma's avatar King Kazma {{and continues to}} consume accounts in the OZ <b>mainframe,</b> creating catastrophic traffic congestion and disabling electrical devices. Two of Sakae's relatives, Rika (Sakiko Tamagawa) and Shota Jinnouchi (Yutaka Shimizu), discover Kenji's involvement. Shota arrests Kenji, but the congestion causes Natsuki to return them to the estate.|$|E
5|$|Roguelike {{games were}} {{initially}} developed for computing environments with limited memory, including shared <b>mainframe</b> systems and early home computers; this limitation prevented developers from retaining {{all but a}} few dungeon levels in memory while the game was running, leading to procedural generation to avoid the memory storage issue. Roguelikes were also often written in languages like BASIC, which are not as efficient in memory and data management compared to modern languages, further limiting the scope the game could cover.|$|E
5|$|Sakae calls {{associates}} {{in important}} positions in Japanese society and relatives {{who work in}} emergency services, encouraging them to work their hardest to reduce chaos and damage, comparing the situation to war. Kenji is able to return control of the <b>mainframe</b> to the moderators and engineers. Wabisuke explains that he sold the program to the United States Armed Forces for a test run. After an argument with Sakae, Wabisuke leaves the estate. Sakae later encourages Kenji {{to take care of}} Natsuki during a Koi-Koi match.|$|E
5000|$|Luminex Virtual Tape Solution for IBM zSeries <b>mainframes</b> via FICON ...|$|R
50|$|Itel was an {{equipment}} leasing company founded in 1967 by Peter Redfield and Gary Friedman, initially focusing on leasing IBM <b>mainframes.</b> Through creative financial arrangements and investments, Itel {{was able to}} lease IBM <b>mainframes</b> to customers at costs below what customers would have paid IBM, making them second to IBM itself in revenues.|$|R
5000|$|By {{the early}} 1970s, many <b>mainframes</b> {{acquired}} interactive user interfaces and operated as timesharing computers, supporting hundreds of users simultaneously along with batch processing. Users gained access through specialized terminals or, later, from personal computers equipped with terminal emulation software. By the 1980s, many <b>mainframes</b> supported graphical terminals, and terminal emulation, but not graphical user interfaces. This format of end-user computing reached mainstream obsolescence in the 1990s {{due to the}} advent of personal computers provided with GUIs. After 2000, most modern <b>mainframes</b> have partially or entirely phased out classic [...] "green screen" [...] terminal access for end-users in favour of Web-style user interfaces.|$|R
5|$|Soon after, Rebecca {{contacts}} the hacker, {{and says}} that she has convinced TriOptimum to authorize the station's destruction; she provides him with details {{on how to do}} this. After obtaining the necessary codes, the hacker initiates the station's self-destruct sequence and flees to the escape pod bay. There, the hacker defeats Diego a second time, then attempts to disembark. However, SHODAN prevents the pod from launching; it seeks to keep the player aboard the station, while the bridge—which contains SHODAN—is jettisoned to a safe distance. Rebecca tells the hacker that he can still escape if he reaches the bridge; SHODAN then intercepts and jams the transmission. After defeating Diego for the third time and killing him for good, the hacker makes it to the bridge as it is released from the main station, which soon detonates. He is then contacted by a technician who managed to circumvent SHODAN's jamming signal. The technician informs him that SHODAN can only be defeated in cyberspace, due to the powerful shields that protect its <b>mainframe</b> computers. Using a terminal near the <b>mainframe,</b> the hacker enters cyberspace and destroys SHODAN. After his rescue, the hacker is offered a job at TriOptimum, but he declines in favor of continuing his life as a hacker.|$|E
5|$|The Cottage was {{originally}} developed in 1977–1978 by three children: brothers Viggo Kann (then Eriksson) and Kimmo Eriksson, and their friend Olle Johansson, {{who at the}} time of the project's start were ten, twelve and fourteen years old, respectively. As Viggo and Kimmo's parents worked at Stockholms Datamaskincentral ("Stockholm's Computer Center", QZ) and the Royal Institute of Technology (KTH), and Johansson's father worked at an office that was a client for QZ, they had access to QZ's DEC-10 <b>mainframe</b> computer Oden. Using Oden and the book What to Do After You Hit Return (1975), the Eriksson brothers and Johansson learned programming.|$|E
5|$|The {{creation}} of general programming languages like BASIC, {{which could be}} run on different hardware types, allowed for programs to be written {{for more than one}} specific computer, in turn letting games written in them to spread to more end players in the programming community than before. These games included a baseball simulation game written in BASIC by John Kemeny in 1965; a BASIC bingo game by Larry Bethurum in 1966; a basketball simulation game written in BASIC by Charles R. Bacheller in May 1967; another baseball game that simulates the 1967 World Series written in BASIC by Jacob Bergmann in August 1967; Space Travel, written by Ken Thompson for a Multics system in 1969 and which led in part {{to the development of the}} Unix operating system; and Hamurabi, a text-based FOCAL game written by Doug Dyment in 1968 and converted to BASIC by David H. Ahl in 1969, and one of the first strategy video games ever made. Hamurabi and Space Travel were among several early <b>mainframe</b> games that were written during the time, and spread beyond their initial <b>mainframe</b> computers to general-purpose languages like BASIC.|$|E
5000|$|Packed BCD is {{supported}} in the COBOL programming language as the [...] "COMPUTATIONAL-3" [...] (an IBM extension adopted by many other compiler vendors) or [...] "PACKED-DECIMAL" [...] (part of the 1985 COBOL standard) data type. It {{is supported}} in PL/I as [...] "FIXED DECIMAL". Besides the IBM System/360 and later compatible <b>mainframes,</b> packed BCD is {{implemented in the}} native instruction set of the original VAX processors from Digital Equipment Corporation and some models of the SDS Sigma series <b>mainframes,</b> and is the native format for the Burroughs Corporation Medium Systems line of <b>mainframes</b> (descended from the 1950s Electrodata 200 series).|$|R
5000|$|PC-based IBM-{{compatible}} <b>mainframes</b> - list of compatible machines or virtual machines ...|$|R
25|$|Linux {{distributions}} {{have become}} increasingly popular on <b>mainframes,</b> partly due to pricing and the open-source model. In December 2009, computer giant IBM reported that it would predominantly market and sell mainframe-based Enterprise Linux Server. At LinuxCon North America 2015, IBM announced LinuxONE, a series of <b>mainframes</b> specifically designed to run Linux and open-source software.|$|R
