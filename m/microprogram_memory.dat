4|7|Public
50|$|Microprogramming {{is still}} used in modern CPU designs. In some cases, after the {{microcode}} is debugged in simulation, logic functions are substituted {{for the control}} store. Logic functions are often faster and less expensive than the equivalent <b>microprogram</b> <b>memory.</b>|$|E
5000|$|The Elea 6000 series were {{versions}} {{with reduced}} processing power and cost. They were originally designed for scientific computing with floating-point arithmetic, 4-bit memory width, then later developed for commercial applications (4+4 bits), with a <b>microprogram</b> <b>memory.</b> About 170 units were produced. The Elea 4000, was a later series that was successfully sold by General Electric after it purchased Olivetti's computer interests. Over 40,000 units were sold with the GE model names GE 105, GE-115, GE-125, and GE-130.|$|E
40|$|CIRCUIT DESIGN We now {{consider}} the abstract circuit representation of Gordon's Computer. A {{diagram of the}} basic implementation is shown in Figure 3. From the implementation representation in Figure 3 {{we can see that}} the following elements {{have been added to the}} datapath, in order for it to function: A memory address register (MAR) of 13 bits, an instruction register (IR), an argument register (ARG), and a buffer register (BUF), all of 16 bits. All components of the datapath, and the memory, are connected by a 16 -bit bus, though this is not properly part of the state of the datapath. The controller is seen to consist of a microprogram counter (MPC), and a <b>microprogram</b> <b>memory</b> (ROM) consisting of 32 words of 30 bits each, together with a decoder. 5. 1 Controller: Informal Description Each 30 -bit microprogram word consists of four fields: a three-bit test field; two five-bit next address fields, A and B; and a 17 -bit control field. The control field is used to direct the operation of da [...] ...|$|E
5000|$|A700 - {{based on}} AMD AM2903 {{bit-slice}} processor, optional hardware floating point processor, 1MIPS, 204kFLOPS, <b>microprogramming,</b> optional ECC <b>memory.</b> Codename: PHOENIX ...|$|R
40|$|This {{correspondence}} {{presents an}} algorithm for <b>microprogram</b> control <b>memory</b> width minimization with the bit steering technique. The necessary and sufficient conditions {{to detect the}} steerability of two mutually exclusive sets of microcommands are established. The algorithm encodes the microcommands of the sets with a bit steering common part and also extends the theory to multiple (more than two) sets of microcommands...|$|R
5000|$|Core <b>memory,</b> <b>microprogrammed</b> CPU. An option allowed user microprogramming. Front panel buttons were {{illuminated}} by small incandescent lamps that burned out with use. Dark lights {{did not bother}} regular users, who knew the 1 and 0 sequences to load the paper tape [...] "loader-loader" [...] instructions without seeing the panel's lights.|$|R
40|$|Digital {{system design}} based on Field Programmable Logic Array (FPGA) {{is a method}} of choice for digital product {{development}} as it provides faster time to realize. Design software such as Xilinx ISE allows the designer to design and implement a new system on FPGA chip. Behavior of FPGA which can be defined by using VHDL provides powerful high-level constructs for describing complex logic and supports modular design methodology. Real Time Digital Alarm Clock with implementation of microprogrammed control unit is developed in this project. It is one of digital design that uses VHDL as source code and microprogrammed control unit instead of hardwired one with downloading capability to FPGA based Spartan- 3 Development Board. Clocked sequential state machines are normally designed using one of two general approaches: the traditional gate and flip-flop approach or microprogramming. The microprogrammed approach to implementing control state machine has been widely used since the early 1960 s and has the advantages of structured programming and fixed timing characteristics. This changed around 1990 with {{the widespread use of}} hardware description languages such as VHDL. One {{of the reasons for the}} popularity of microprogramming is that it translates the hardware design problem into a programming problem, making it tractable to a wider range of designers. Control information is stored in the <b>microprogram</b> <b>memory</b> and a new microinstruction is fetched from memory at every clock cycle. Since program changes only require a change in memory contents, the rate at which the controller can be clocked does not change, no matter how significant the program change. This is in contrast to the traditional gate and flipflop approach where changes can drastically impact the logic equations, number of gates, and clock frequency...|$|E
40|$|In "An Interrupt Based Organization for Management Information Systems" (1), {{the author}} of that paper proposes {{a new form of}} interrupt, a Boolean {{expression}} of variables in the program, as a natural extension from the present interrupt structure. His paper describes a software implementation; this note shows how his system could easily be implemented in hardware, with a corresponding decrease in system overhead. Keywords and Phrases: Interrupts, Interrupt scheduling, supervisors, monitors, debugging, program checkout, parallel processing, associative <b>memories,</b> <b>microprogramming...</b>|$|R
40|$|This paper {{presents}} the LPCAD (Logic Programming-based system for CAD) system for designing complex microprogrammed processors using Prolog and Constraint Logic Programming (CLP). The system is developed around VHDL, {{the industry standard}} language for hardware description and simulation, and {{has been used for}} designing a Prolog processor based on the Warren Abstract Machine (WAM). LPCAD accepts a VHDL high level specification of the instruction set and the datapath specification of the processor to be designed as inputs, and provides the <b>microprogrammed</b> control <b>memory</b> and a structural VHDL model of the whole processor as outputs. Benchmark programs {{can be applied to the}} structural model, extracting information from the simulation results used to motivate design decisions. Definite Clause Grammars (DCG's) are used to compile (parsing and code generation) the behavioral description of the processor's instruction set into a Register Transfer Level (RTL) code. CLP is used for optimal plann [...] ...|$|R
40|$|Results are {{presented}} {{of a study}} conducted with a digital simulation model {{being used in the}} design of the Automatically Reconfigurable Modular Multiprocessor System (ARMMS), a candidate computer system for future manned and unmanned space missions. The model simulates the activity involved as instructions are fetched from random access memory for execution in one of the system central processing units. A series of model runs measured instruction execution time under various assumptions pertaining to the CPU's and the interface between the CPU's and RAM. Design tradeoffs {{are presented}} in the following areas: Bus widths, CPU <b>microprogram</b> read only <b>memory</b> cycle time, multiple instruction fetch, and instruction mix...|$|R
40|$|Abstract — Programmable memory BIST {{architecture}} {{is becoming a}} necessity for embedded memory cores. Classical memory BIST architectures use fixed algorithmic tests during the whole live of digital device. To improve the flexibility of memory BIST the programmable solution, based on finite state machine with microcode control, was invented. The requirement to use such flexibility is dictated by reason to use newest test for memory cores. In this paper a new Programmable Memory BIST architecture with small microcode memory is proposed. The analysis of existing March tests allows to code them into the optimal binary format, which cause not only small hardware overhead but also may speed-up the transferring of new test over the serial interfaces like IEEE 1149. 1 and P 1500. Index Terms — built-in testing, finite state machines, <b>memory</b> testing, <b>microprogramming,</b> random access <b>memories...</b>|$|R

