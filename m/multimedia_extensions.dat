87|75|Public
25|$|The classic windows Multimedia API {{is placed}} in winmm.dll and {{contains}} functions to play sound files, to send and receive MIDI messages, to access joysticks, and to facilitate all other features of the so-called MCI subsystem of Windows, which originates from the <b>Multimedia</b> <b>Extensions</b> available for Windows 3.0 separately and {{as an integral part}} of the operating system since Windows 3.1, at which time they were located in mmsystem.dll.|$|E
2500|$|Windows 3.0 {{received}} two updates. A {{few months after}} introduction, Windows 3.0a was released as a maintenance release, resolving bugs and improving stability. A [...] "multimedia" [...] version, Windows 3.0 with <b>Multimedia</b> <b>Extensions</b> 1.0, was released in October 1991. This was bundled with [...] "multimedia upgrade kits", comprising a CD-ROM drive and a sound card, such as the Creative Labs Sound Blaster Pro. This version was the precursor to the multimedia features available in Windows 3.1 (first released in April 1992) and later, and was part of Microsoft's specification for the Multimedia PC.|$|E
50|$|A CPU with 128-bit <b>multimedia</b> <b>extensions</b> was {{designed}} by researchers in 1999.|$|E
40|$|This paper {{proposes a}} {{multimedia}} enhanced general-purpose processor (GPP) architecture. An M+GPP enhanced architecture embodies a (regular) GPP architecture and a <b>multimedia</b> <b>extension.</b> The <b>multimedia</b> <b>extension</b> {{consists of a}} number of new multimedia dedicated instructions and (possibly new) hardware units to support their execution. Additionally, reconfigurable hardware units (RHUs) to support the execution of the new multimedia dedicated instructions are discussed. Finally, some implications of applying the M+GPP concept to the superscalar and VLIW GPP architectures are presented...|$|R
50|$|A <b>multimedia</b> <b>extension</b> {{connector}} (MXC) is {{a method}} of connecting video cameras and other video inputs to video capture cards and the like.|$|R
50|$|MMX {{is officially}} a {{meaningless}} initialism trademarked by Intel; unofficially, the initials have been variously explained as standing for <b>MultiMedia</b> <b>eXtension,</b> Multiple Math eXtension, or Matrix Math eXtension.|$|R
5000|$|Up 256 Virtual Cables (Windows {{limits the}} number of <b>Multimedia</b> <b>Extensions</b> devices to 32) ...|$|E
50|$|The VMX (Vector <b>Multimedia</b> <b>Extensions)</b> {{technology}} is conceptually {{similar to the}} vector model provided by the SPU processors, {{but there are many}} significant differences.|$|E
50|$|The <b>Multimedia</b> <b>Extensions</b> (WaveIn/WaveOut interfaces) were {{released}} in autumn 1991 to support sound cards, {{as well as}} CD-ROM drives, which were then becoming increasingly available. The <b>Multimedia</b> <b>Extensions</b> {{were released}} to Original Equipment Manufacturers (OEMs), mainly CD-ROM drive and sound card manufacturers, and added basic multimedia support for audio input and output and a CD audio player application to Windows 3.0. The Multimedia Extensions' new features were not available in Windows 3.0 real mode, only in standard and 386 enhanced mode. Windows 3.1x would later incorporate many of its features. Microsoft developed the Windows Sound System sound card specification to complement these extensions.|$|E
50|$|Much {{like their}} {{previous}} work together, Nuntype is a conceptualized album crafting original music, visual artwork, story telling lyrics and a <b>multimedia</b> <b>extension</b> (in this case, the Nuntype website) {{to help create}} a world for the listeners to indulge in.|$|R
40|$|This paper {{proposes a}} {{multimedia}} enhanced generalpurpose processor (GPP) architecture. An M + GPP enhanced architecture embodies a (regular) GPP architecture and a <b>multimedia</b> <b>extension.</b> The <b>multimedia</b> <b>extension</b> {{consists of a}} number of new multimedia dedicated instructions and (possibly new) hardware units to support their execution. Additionally, recon- gurable hardware units (RHUs) to support the execution of the new multimedia dedicated instructions are discussed. Finally, some implications of applying the M + GPP concept to the superscalar and VLIW GPP architectures are presented. I. INTRODUCTION Due to recent developments, e. g., superscalar, ILP, and VLIW, general-purpose processors (GPPs) have become a good candidate for multimedia processing. Even though GPPs can perform multimedia operations, it can be noted, that these processors are not able to reach the performance level achieved by DSPs. This lower peak performance implies that usually GPPs are not able to process mul [...] ...|$|R
50|$|The <b>Multimedia</b> Acceleration <b>eXtensions</b> or MAX are {{instruction}} set extensions to the Hewlett-Packard PA-RISC {{instruction set}} architecture (ISA).|$|R
50|$|The Miracast {{standard}} {{also includes}} optional components, such as Wireless <b>Multimedia</b> <b>Extensions</b> (WME). The use of optional components in standards sometimes causes issues when connecting products {{one of which}} supports the optional components and the other does not.|$|E
50|$|Xpress {{technology}} is Broadcom's standards-based frame-bursting approach to improve 802.11 wireless LAN performance. It is a software-based {{implementation of the}} frame-bursting originally in the IEEE 802.11e draft specification, and {{is found in the}} Wireless <b>Multimedia</b> <b>Extensions</b> (WME) specification.|$|E
50|$|Two midi {{files were}} {{included}} in several MS Windows versions from 3.0 (with <b>Multimedia</b> <b>Extensions)</b> to Windows 2000 promoting Passport Designs. The files PASSPORT.MID, and CANYON.MID (Trip Through the Grand Canyon composed by George Stone) were located in the MEDIA folder.|$|E
40|$|We {{present the}} {{high-level}} microarchitecture of LPX: a low-power issue-execute processor prototype {{that is being}} designed by a joint industry-academia research team. LPX implements a very small subset of a RISC architecture, with a primary focus on a vector (S 1 MD) <b>multimedia</b> <b>extension.</b> The objective of this project is to validate some key new ideas in power-aware microarchitecture techniques, supported by recent advances in circuit design and clocking...|$|R
40|$|In {{this work}} it is shown how 128 bit SSE 2 <b>multimedia</b> <b>extension</b> registers, present in Pentium IV class 32 bit processors, {{may be used}} to {{generate}} random numbers at several times greater speed then when regular general purpose registers are used. In particular, a 128 bit algorithm is presented for the Marsaglia MWC 1616 generator from the DIEHARD battery of random number generator tests, and its performance is compared to that of the conventional approach. Comment: 4 page...|$|R
5000|$|AltiVec is a {{single-precision}} {{floating point}} and integer SIMD instruction set designed and owned by Apple, IBM, and Freescale Semiconductor (formerly Motorola's Semiconductor Products Sector) [...] - [...] the AIM alliance. It is implemented on {{versions of the}} PowerPC processor architecture, including Motorola's G4, IBM's G5 and POWER6 processors, and P.A. Semi's PWRficient PA6T. AltiVec is a trademark owned solely by Freescale, so the system is {{also referred to as}} Velocity Engine by Apple and VMX (Vector <b>Multimedia</b> <b>Extension)</b> by IBM and P.A. Semi.|$|R
5000|$|In {{case the}} low-power-mode device is {{communicating}} via Wi-Fi, the wake-up-packet is sent via Wireless <b>Multimedia</b> <b>Extensions</b> (WMM). [...] This {{was not possible}} in previous implementations of Wake on LAN (WoL). The wireless hardware must be updated enough to include WMM support. Apple provides instructions for checking compatibility with this feature for Macintosh computers.|$|E
50|$|HTML+TIME (Timed Interactive <b>Multimedia</b> <b>Extensions)</b> was {{the name}} of a W3C {{submission}} from Microsoft, Compaq/DEC and Macromedia that proposed an integration of SMIL semantics with HTML and CSS. The specifics of the integration were modified considerably by W3C working groups, and eventually emerged as the W3C Note XHTML+SMIL. The submission also proposed new animation and timing features that were adopted (with revisions) in SMIL 2.0.|$|E
50|$|The High Precision Event Timer (HPET) is a {{hardware}} timer used in personal computers. It was developed jointly by AMD and Microsoft {{and has been}} incorporated in PC chipsets since circa 2005. Formerly referred to by Intel as a Multimedia Timer, the term HPET was selected to avoid confusion with the multimedia timers as a software feature introduced in the <b>MultiMedia</b> <b>Extensions</b> to Windows 3.0.|$|E
40|$|This paper {{introduces}} the X 32 V configurable processor core. X 32 V is geared towards low-power, lowmemory embedded systems, such as cell phones, PDAs, and digital cameras. X 32 V uses {{a feature that}} allows for variable length instructions that ultimately decrease the amount of program memory required for applications. In addition, X 32 V supports additional modules that increase flexibility. Currently, a <b>multimedia</b> <b>extension</b> module and a floating-point module have been developed and integrated into the X 32 V schema. An X 32 V prototype was developed as an execution based, cycle-accurate simulator. Preliminary testing of X 32 V has been performed using benchmarks based on portions of MPEG- 4 decoding. 1...|$|R
40|$|This paper explores {{microarchitecture}} {{models for}} a simultaneous multithreaded processor with multimedia enhancements. We enhance a wide-issue superscalar processor by the simultaneous multithreading technique, by multimedia units, and by an additional on-chip RAM storage. Our workload is a multithreaded MPEG- 2 video decompression algorithm that extensively uses multimedia units. Our simulation {{results suggest that}} a 2 - or 4 threaded 4 -issue processor with a small on-chip RAM accessed by a local load/store unit will be superior to a wide-issue (single-threaded) superscalar processor. Keywords: Simultaneous multithreading, <b>multimedia</b> <b>extension,</b> MPEG- 2 video decompression 1 Introduction Current microprocessors utilize instruction-level parallelism (ILP) by a deep processor pipeline and by the superscalar instruction issue technique [1]. A contemporarysuperscalarprocessorisabletoissueuptosixin - structions each clock cycle from a conventional linear instruction stream. However, ILP foun [...] ...|$|R
40|$|Effectiveness of MMX for Digital Signal Processing on {{general-purpose}} processors (often {{referred to}} as Native Signal Processing) is evaluated. We benchmarked a variety of signal processing algorithms and obtained speedup (ratio of execution speeds) ranging from 1. 0 to 4. 0 by using MMX technology over non-MMX code. Efficient, reliable and standard C code is also evaluated with respect to NSP library assembly code from Intel. I. INTRODUCTION Digital Signal Processing (DSP) and multimedia applications are increasingly being implemented on general-purpose microprocessors found in common desktop computers [1]. General-purpose microprocessors have entered the signal processing oriented stream by adding DSP functionality to the instruction set and also providing optimized assembly libraries. Perhaps, {{one of the earliest}} and most visible exam- ple of this approach was Intel's Native Signal Processing (NSP) initiative with the introduction of the MMX (commonly dubbed as <b>MultiMedia</b> <b>eXtension)</b> [...] ...|$|R
50|$|Owners of {{previous}} revision Sound Blaster boards could upgrade their board by purchasing the V2.00 DSP chip from Creative Labs, and swapping the older DSP V1.0x with the newer replacement. The upgraded board gained the auto-init DMA and new MIDI {{capabilities of the}} Sound Blaster 2.0 but not the expanded sampling rates. The upgrade was necessary for full compatibility with the Windows 3.0 <b>Multimedia</b> <b>Extensions</b> upgrade.|$|E
50|$|The classic windows Multimedia API {{is placed}} in winmm.dll and {{contains}} functions to play sound files, to send and receive MIDI messages, to access joysticks, and to facilitate all other features of the so-called MCI subsystem of Windows, which originates from the <b>Multimedia</b> <b>Extensions</b> available for Windows 3.0 separately and {{as an integral part}} of the operating system since Windows 3.1, at which time they were located in mmsystem.dll.|$|E
50|$|In 1992, Media Vision was {{the first}} company to publish Microsoft Windows with <b>Multimedia</b> <b>Extensions</b> on CD-ROM; having beaten Microsoft to market with its own product, Bill Gates's {{assistant}} telephoned and ordered two copies. During the same year, the company acquired Pellucid, Inc., a computer graphics company, and began producing a line of high-performance video graphics cards for the PC. Media Vision became a publicly traded company in late 1992.|$|E
40|$|In this paper, {{we present}} an {{implementation}} of a vectorizing C compiler for Intel's MMX (<b>Multimedia</b> <b>Extension).</b> This compiler would identify data parallel sections of the code using scalar and array dependence analysis. To enhance the scope for application of the subword semantics, our compiler performs several code transformations. These include strip mining, scalar expansion, grouping and reduction, loop ssion and distribution. Thereafter inline assembly instructions corresponding to the data parallel sections are generated. We have used the Stanford University Intermediate Format (SUIF), a public domain compiler tool, for our implementation. We evaluated {{the performance of the}} code generated by our compiler for a number of benchmarks. Initial performance results reveal that our compiler generated code produces a reasonable performance improvement (speedup of 2 to 6. 5) over the the code generated without the vectorizing transformations/inline assembly. In certain cases, t [...] ...|$|R
40|$|This paper {{investigates the}} use of both the {{luminance}} and chrominance components in color image and video processing algorithms and proposes a color-aware instruction set that improves the performance of such multimedia applications. The proposed color instruction set, quantized color pack extension (QCPX), which applied to a 32 -bit datapath processor, supports parallel operations on twopacked 16 -bit YCbCr (6 : 5 : 5) color pixels, resulting in more efficient processing of color pixel data as well as greater concurrency for color multimedia workloads on mobile systems. Experimental results {{on a set of}} media benchmark applications indicate that the QCPX-optimized version achieves a speedup ranging from about three to seven times while reducing energy consumption from 69 % to 85 % over the baseline version on identically-configured, dynamically-scheduled ILP superscalar processors. The QCPX-optimized version also outperforms the MDMX-like (MIPS’s <b>multimedia</b> <b>extension)</b> version. 1...|$|R
40|$|Many current {{general purpose}} {{processors}} are using extensions {{to the instruction}} set architecture to enhance the performance of digital signal processing (DSP) and multimedia applications. In this paper, we evaluate the X 86 architecture's <b>multimedia</b> <b>extension</b> (MMX) instruction set {{on a set of}} benchmarks. Our benchmark suite includes kernels (filtering, fast Fourier transforms, and vector arithmetic) and applications (JPEG compression, Doppler radar processing, imaging, and G. 722 speech encoding). Each benchmark has at least one non-MMX version in C and an MMX version that makes calls to an MMX assembly library. The versions differ in the implementation of filtering, vector arithmetic, and other relevant kernels. The observed speedup for the MMX versions of the suite ranges from less than 1. 0 to 6. 1. In addition to quantifying the speedup, we perform detailed instruction level profiling using Intel's VTune profiling tool. Using VTune, we profile static and dynamic instructions, microarch [...] ...|$|R
50|$|While Windows 3.0 {{was limited}} to 16 MB maximum memory, Windows 3.1 can access a {{theoretical}} 4 GB in 386 Enhanced Mode. (The actual practical ceiling is 256 MB.) However, no single process can use more than 16 MB. File Manager was significantly improved over Windows 3.0. Multimedia support was enhanced over what was available in Windows 3.0 with <b>Multimedia</b> <b>Extensions</b> and available to all Windows 3.1 users.|$|E
50|$|Wireless <b>Multimedia</b> <b>Extensions</b> (WME), {{also known}} as Wi-Fi Multimedia (WMM), is a Wi-Fi Alliance {{interoperability}} certification, based on the IEEE 802.11e standard. It provides basic Quality of service (QoS) features to IEEE 802.11 networks. WMM prioritizes traffic according to four Access Categories (AC): voice (AC_VO), video (AC_VI), best effort (AC_BE), and background (AC_BK). However, it does not provide guaranteed throughput. It is suitable for well-defined applications that require QoS, such as Voice over IP (VoIP) on Wi-Fi phones (VoWLAN).|$|E
5000|$|The {{first version}} of Windows Media Player {{appeared}} in 1991, when Windows 3.0 with <b>Multimedia</b> <b>Extensions</b> was released. Originally called Media Player, this component was included with [...] "Multimedia PC"-compatible machines but not available for retail sale. It was capable of playing [...] animation files, and could be extended to support other formats. It used MCI to handle media files. Being a component of Windows, Media Player shows the same version number {{as that of the}} version Windows with which it was included.|$|E
40|$|This paper starts by {{introducing}} {{a class of}} future document authoring systems that will allow authors to specify the content and form of a text + pictures document {{at a high level}} of abstraction, while leaving responsibility for linguistic and graphical details to the system. Next, we describe two working prototypes that implement parts of this functionality, based on semantic modeling of the pictures and the text of the document; one of these two, the illustrate prototype, is a <b>multimedia</b> <b>extension</b> of previous text authoring systems in the What You See Is What You Meant (wysiwym) tradition. The paper concludes with an exploration {{of the ways in which}} Multimedia Wysiwym can be further enhanced, allowing it to approximate the `ideal' systems that were sketched earlier in the paper. Applications of Multimedia Wysiwym to general-purpose picture retrieval (in the context of the Semantic Web, for example) are also discussed...|$|R
40|$|This paper {{addresses}} how {{to automatically}} generate code for <b>multimedia</b> <b>extension</b> architectures {{in the presence}} of conditionals. We evaluate {{the costs and benefits of}} exploiting branches on the aggregate condition codes associated with the fields of a superword (an aggregate object larger than a machine word) such as the branch-on-any instruction of the AltiVec. Branch-on-superword-condition-codes (BOSCC) instructions allow fast detection of aggregate conditions, an optimization opportunity often found in multimedia applications. This paper presents compiler analyses and techniques for generating efficient parallel code using BOSCC instructions. We evaluate our approach, which has been implemented in the SUIF compiler, through a set of experiments with multimedia benchmarks, and compare it with the default approach previously implemented in our compiler. Our experimental results show that using BOSCC instructions can result in better performance for applications where the aggregate condition codes of a superword often evaluate to the same value...|$|R
40|$|Reconfigurable {{hardware}} has {{the potential}} for significant performance improvements by providing support for application-specific operations. We report our experience with Chimaera, a prototype system that integrates a small and fast reconfigurable functional unit (RFU) into the pipeline of an aggressive, dynamically-scheduled superscalar processor. Chimaera is capable of performing 9 -input/ 1 -output operations on integer data. We discuss the Chimaera C compiler that automatically maps computations for execution in the RFU. Chimaera is capable of: (1) collapsing a set of instructions into RFU operations, (2) converting control-flow into RFU operations, and (3) supporting a more powerful fine-grain data-parallel model than that supported by current <b>multimedia</b> <b>extension</b> instruction sets (for integer operations). Using a set of multimedia and communication applications we show that even with simple optimizations, the Chimaera C compiler is able to map 22 % of all instructions to the RFU on t [...] ...|$|R
