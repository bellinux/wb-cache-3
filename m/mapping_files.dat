28|547|Public
50|$|For Perl {{there are}} a several modules {{available}} for memory <b>mapping</b> <b>files</b> on the CPAN, such as Sys::Mmap and File::Map.|$|E
50|$|The Apache iBator tool {{is closely}} related: it connects to your {{database}} and uses its metadata to generate iBATIS <b>mapping</b> <b>files</b> and Java classes.|$|E
50|$|The {{persistence}} {{mechanism in}} GORM is implemented via Hibernate. As such, legacy databases may be mapped to GORM classes using standard Hibernate <b>mapping</b> <b>files.</b>|$|E
40|$|Due {{to demand}} for shared memory {{in order to}} {{implement}} databases efficiently, I added the mmap <b>mapped</b> <b>file</b> interface of 4. 2 BSD Unix to Sprite, providing shared memory, <b>file</b> <b>mapping,</b> and user-level control over paging. This report first discusses the design issues for a shared memory and <b>file</b> <b>mapping</b> interface and {{provides an overview of}} the support for these functions in other operating systems. Details of the Sprite virtual memory system and the changes to support shared memory and <b>file</b> <b>mapping</b> are given. Performance measurements show that in this implementation, <b>mapped</b> <b>files</b> have comparable performance to block I/O and are faster than buffered I/O for sequential access. For random access to locally cached files, the relative performance of <b>mapped</b> <b>files</b> versus block I/O depends on the access patterns. Access to files across the network is limited by network transmission time, both for <b>mapped</b> <b>files</b> and block I/O. January 4, 1993 ############### + The work described here was supported [...] ...|$|R
50|$|The J {{programming}} language has supported memory <b>mapped</b> <b>files</b> {{since at least}} 2005. It includes support for boxed array data, and single datatype files. Support can be loaded from 'data/jmf' J's Jdb and JD database engines use memory <b>mapped</b> <b>files</b> for column stores.|$|R
5000|$|In the Microsoft [...]NET runtime, P/Invoke {{can be used}} to use memory <b>mapped</b> <b>files</b> {{directly}} through the Windows API. Managed access (P/Invoke not necessary) to memory <b>mapped</b> <b>files</b> was introduced in version 4 of the runtime (see Memory-Mapped Files). For previous versions, there are third-party libraries which provide managed API's.|$|R
5000|$|POSIX also {{provides}} the [...] API for <b>mapping</b> <b>files</b> into memory; a mapping can be shared, allowing the file's contents {{to be used}} as shared memory.|$|E
5000|$|Hibernate Tools. Supporting <b>mapping</b> <b>files,</b> {{annotations}} and JPA with reverse engineering, code completion, project wizards, refactoring, interactive HQL/JPA-QL/Criteria {{execution and}} more. In short a merger of Hibernate Tools and Exadel ORM features.|$|E
5000|$|Un{{marshalling}} and marshalling are {{dealt with}} marshall (...) and unmarshall (...) methods respectively. During marshalling, conversion process from Java to XML is carried out, and, during unmarshalling, conversion process from XML to Java is carried out. <b>Mapping</b> <b>files</b> are {{the equivalent of}} a binding schema, which allows to transforms names from XML to Java and vice versa.|$|E
50|$|Another pseudo-type—associated with name, {{rather than}} value—is the memory <b>mapped</b> <b>file.</b>|$|R
50|$|MicroStar based its {{arguments}} on the Game Genie case, discussed in Galoob v. Nintendo, arguing {{that both of}} them replaced old values (in the case of N/I, the <b>MAP</b> <b>files</b> in the original game) with new values (N/I's <b>MAP</b> <b>files).</b> They noted that the audiovisual experience was described by the N/I <b>MAP</b> <b>files.</b> Micro Star claimed that N/I <b>MAP</b> <b>files</b> were not derivative works, as they only referred to, but did not contain any art files from D/N-3D, and that as a result, no reproduction of D/N-3D content took place. Micro Star also argued that any use of D/N-3D's protected expression constituted fair use. Micro Star suggested that the court evaluate the fair use claim from the player's perspective, as the player created the derivative work. Finally, Micro Star argued that FormGen had forfeited its rights on the user-created levels by authorizing users to create new levels.|$|R
5000|$|... mmap, a POSIX-compliant Unix {{system call}} that <b>maps</b> <b>files</b> or devices into memory ...|$|R
5000|$|Most modern {{operating}} systems or runtime environments support {{some form of}} memory-mapped file access. The function mmap (...) , which creates a mapping of a file given a file descriptor, starting location in the file, and a length, {{is part of the}} POSIX specification, so the wide variety of POSIX-compliant systems, such as UNIX, Linux, Mac OS X or OpenVMS, support a common mechanism for memory <b>mapping</b> <b>files.</b> The Microsoft Windows {{operating systems}} also support a group of API functions for this purpose, such as CreateFileMapping (...) [...]|$|E
50|$|This is not {{the same}} as the {{mechanisms}} provided by calls such as mmap and Win32's MapViewOfFile, because inter-file pointers do not work when <b>mapping</b> <b>files</b> into semi-arbitrary places. In Multics, a file (or a segment from a multi-segment file) is mapped into a segment in the address space, so files are always mapped at a segment boundary. A file's linkage section can contain pointers for which an attempt to load the pointer into a register or make an indirect reference through it causes a trap. The unresolved pointer contains an indication of the name of the segment to which the pointer refers and an offset within the segment; the handler for the trap maps the segment into the address space, puts the segment number into the pointer, changes the tag field in the pointer so that it no longer causes a trap, and returns to the code where the trap occurred, re-executing the instruction that caused the trap. This eliminates the need for a linker completely and works when different processes map the same file into different places in their private address spaces.|$|E
40|$|Motivation: Based on a gene {{classification}} into hierarchical categories (‘BINs’), MapMan {{was originally}} developed to display Arabidopsis thaliana gene expression in a functional context. We {{have created a}} bioinformatics system to extend MapMan to any organism by using a new BIN structure based on the KEGG database. Gene sequences are assigned to this ontology by homology relationships in four reference databases: KEGG, COG, Swiss-Prot and Gene Ontology. We applied this system to tailor MapMan to the GeneChips of two model legumes, Glycine max and Medicago truncatula. We also developed a module to identify the most relevant pathways involved. Availability: All <b>mapping</b> <b>files,</b> pathway pictures and the analysis method are available at...|$|E
5000|$|... a {{text file}} {{containing}} information about <b>mapped</b> <b>files</b> and blocks (like heap and stack).|$|R
50|$|The D {{programming}} language supports memory <b>mapped</b> <b>files</b> in its standard library (std.mmfile module).|$|R
40|$|Abstract: In this paper, a data {{acquisition}} subsystem for aluminum reduction cells under reconstruction is designed on memory <b>mapped</b> <b>file</b> and MODBUS, has realized the sampling procedure {{and the main}} control program of real-time data transmission through the memory <b>mapped</b> <b>file,</b> has realized the MODBUS communication between the sampling procedure and the prestage using MSComm control, the system can work stably at present...|$|R
40|$|Current {{techniques}} for retrieving content and usage information from educational data {{are based on}} keywords which including string combinations. This technique raises the limitation in terms of capturing learning conceptualization associated to the results. Aims to reveal this issue, this paper present an approach of creating semantic metadata from relational educational data into ontology using D 2 RQ <b>mapping</b> <b>files.</b> The selected relational data converted to the defined metadata template in ontology such as instances or data properties. Thereafter, the learning conceptualization which stored in ontology knowledge-based growth the metadata to retrieve information meaning based and then used for further analysis. The retrieval results are expected to present meaningful information based on users' needs...|$|E
40|$|Background: Next {{generation}} sequencing (NGS) data treatment {{often requires}} mapping sequenced reads onto a reference genome for further analysis. Mapped data are commonly visualized using genome browsers. However, such software are not suited for a publication-ready and versatile representation of NGS data coverage, especially when multiple experiments are simultaneously treated. Results: We developed ‘VING’, a stand-alone R script that takes as input NGS <b>mapping</b> <b>files</b> and genome annotations to produce accurate snapshots of the NGS coverage signal for any specified genomic region. VING offers multiple viewing options, including strand-specific views {{and a special}} heatmap mode for representing multiple experiments in a single figure. Conclusions: VING produces high-quality figures for NGS data representation in a genome region of interest. It is available a...|$|E
40|$|Incorporating {{structured}} {{data in the}} Linked Data cloud is still complicated, despite the numerous existing tools. In particular, hierarchical {{structured data}} (e. g., JSON) are underrepresented, due to their processing complexity. A uniform mapping formalisation for data in different formats, which would enable reuse and exchange between tools and applied data, is missing. This paper describes a novel approach of mapping heterogeneous and hierarchical data sources into RDF using the RML mapping language, an extension over R 2 RML (the W 3 C standard for mapping relational databases into RDF). To facilitate those mappings, we present a toolset for producing RML <b>mapping</b> <b>files</b> using the Karma data modelling tool, and for consuming them using a prototype RML processor. A use case shows how RML facilitates the mapping rules' definition and execution to map several heterogeneous sources...|$|E
5000|$|... 1,403 {{structures}} in the PDB have a 3DEM <b>map</b> <b>file</b> deposited in EM Data Bank ...|$|R
5000|$|MapInfo TAB {{format -}} format using TAB, DAT, ID and <b>MAP</b> <b>files</b> (by MapInfo Corporation) ...|$|R
5000|$|MapInfo TAB {{format -}} MapInfo's vector data format using TAB, DAT, ID and <b>MAP</b> <b>files</b> ...|$|R
40|$|International audienceNext {{generation}} sequencing (NGS) data treatment {{often requires}} mapping sequenced reads onto a reference genome for further analysis. Mapped data are commonly visualized using genome browsers. However, such software are not suited for a publication-ready and versatile representation of NGS data coverage, especially when multiple experiments are simultaneously treated. We developed 'VING', a stand-alone R script that takes as input NGS <b>mapping</b> <b>files</b> and genome annotations to produce accurate snapshots of the NGS coverage signal for any specified genomic region. VING offers multiple viewing options, including strand-specific views {{and a special}} heatmap mode for representing multiple experiments in a single figure. VING produces high-quality figures for NGS data representation in a genome region of interest. It is available at [URL]. We also developed a Galaxy wrapper, available in the Galaxy tool shed with installation and usage instructions...|$|E
40|$|Several {{major changes}} in this version: {{taxonomy}} for ITS is updated to newest release from UNITE v 7. 1 11 - 20 - 2016. USEARCH 9 is now supported throughout and defaults {{have been changed to}} use usearch 9 UNOISE 2 algorithm is employed in a 'clustering' module SINTAX algorithm is supported in ufits taxonomy. default hybrid method now uses SINTAX, UTAX, and global alignment to infer the best taxonomy assignment. QIIME-like <b>mapping</b> <b>files</b> can now be used during demultiplexing/pre-processing. If you do not use a mapping file, the scripts will create one for you. The mapping file can be used to add metadata to it and then passed to ufits taxonomy to create a BIOM output file containing all metadata, OTUs, and taxonomy BIOM output of ufits taxonomy is compatible with QIIME, PHINCH, MetaCoMET, PhyloSeq, etc. ufits filter now alerts user if passing a barcode name via -b is not found in OTU tabl...|$|E
40|$|In {{order to}} avoid the {{negative}} effect of the complicated coding rules, multiform framing types, many kinds of coordinate systems and the various map scales on evaluating the real coordinates of framing topographic maps, this paper will propose the Shifting Residue Compensation Model (SRCM) to intelligently evaluating and emending the real coordinates of framing topographic maps which exist the coordinate translation error. Besides, this article will use abundant DWG vector <b>mapping</b> <b>files</b> and the practical project demand as examples to verify the validity and correctness of the SRCM. The results from the experiments show that the SRCM can be quite satisfactory, while calculating and adjusting the digital mapping edge. The proposal of the SRCM can not only avoid the negative effect of coding rules, framing types, coordinate systems and map scales on evaluation and emendation of the map coordinates, but also can sense in advance whether the map coordinates are true or not. Meanwhile the SRCM provides a new solution for the map pretreatment. 1...|$|E
5000|$|Unlimited free download, {{directly}} from the app (download limit 10 <b>map</b> <b>files</b> in free version) ...|$|R
5000|$|The Java {{programming}} language provides classes and methods to access memory <b>mapped</b> <b>files,</b> such as [...]|$|R
5000|$|Automatic {{announcement}} of public points of interest, provided the necessary Open Street <b>Map</b> <b>files</b> have been downloaded.|$|R
40|$|Next-generation {{technologies}} {{generate an}} overwhelming amount of gene sequence data. Efficient annotation tools are required, {{to make this}} data amenable to functional genomics analyses. The Mercator pipeline automatically assigns functional terms to protein or nucleotide sequences. It uses the MapMan “BIN” ontology, which is tailored for functional annotation of plant “omics” data. The classification procedure performs parallel sequence searches against reference databases, compiles the results, and computes the most likely MapMan BINs for each query. In the current version, the pipeline relies on manually curated reference classifications originating from the three reference organisms (Arabidopsis, Chlamydomonas, rice), various other plant species that have a reviewed SwissProt annotation, and more than 2000 protein domain and family profiles at InterPro, CDD and KOG. Functional annotations predicted by Mercator achieve accuracies above 90 % when benchmarked against manual annotation. In addition to <b>mapping</b> <b>files</b> for direct use in the visualization software MapMan, Mercator provides graphical overview charts, detailed annotation information in a convenient web browser interface and a MapMan-to-GO translation Table to export results as GO terms. Mercator is available free of charge via [URL]...|$|E
40|$|This is {{the first}} release of MONDO with MONDO IDs as primary. The core {{ontology}} is available in 3 formats: [URL] : obo format, use xrefs for equivalence to externals [URL] : owl format, use equivalence axioms to externals [URL] : json format, use equivalence axioms to externals Downloads are also available from [URL] but it is recommended you use the purls All IDs in Orphanet, OMIM, EFO and DOID can be precisely mapped forward using either equivalence axioms (OWL version) or via xrefs (OBO Format version). Note that for these ID spaces, only precise 1 - 1 xrefs {{are included in the}} release file. <b>Mapping</b> <b>files</b> for particular subsets available on request. In the release following this one, NCIT and GARD will join this precise set. Legacy Support An alternate version of this version of MONDO that retains external IDs and primary IDs is available in the extid/ folder on OSF, or via purls [URL] [URL] [URL] Note this support will not be maintained in perpetuity. You are recommended to use the main MONDO release...|$|E
40|$|The {{aim of this}} {{presentation}} is {{to introduce you to}} the to the model driven architecture (MDA) that we are using at the Norwegian Mapping Authority in Norway ([URL] The Norwegian Mapping Authority bears nationwide responsibility for geographical information, operates the national property registry and undertakes all property registration in Norway. Starting from the UML model we produce the rest of the pieces involved in order to deploy a dataset and make it available. From this UML we produce the corresponding schema file, data base and Deegree <b>mapping</b> <b>files.</b> All these pieces alloy us to deploy automatically a new WFS using the XSD files and a GML dataset. During all of these processes we use different technologies and software. As a strategic decision at the Norwegian Mapping Authority we use open source software but in that case there are a mix of proprietary and open source tools. To sum up, in this process we have found some limitations but also some advantages related to the implementation itself and also to the involved technologie...|$|E
30|$|The master {{monitors}} each map task’s {{successful completion}} and notifies reduce {{workers of the}} <b>map</b> <b>file</b> output locations.|$|R
50|$|The {{major reason}} to choose memory <b>mapped</b> <b>file</b> I/O is performance. Nevertheless, {{there can be}} tradeoffs. The {{standard}} I/O approach is costly due to system call overhead and memory copying. The memory-mapped approach has its cost in minor page faults—when a block of data is loaded in page cache, but is not yet mapped into the process's virtual memory space. In some circumstances, memory <b>mapped</b> <b>file</b> I/O can be substantially slower than standard file I/O.|$|R
5000|$|...ID (Stores {{information}} linking graphic data to {{the database}} information. This contains a 4-byte integer index into the <b>MAP</b> <b>file</b> for each feature).|$|R
