0|14|Public
40|$|Abstract — Recovering {{the symbols}} in a multiple-input multiple-output (MIMO) {{receiver}} is a computationally-intensive process. The layered space-time (LST) algorithms provide a reasonable tradeoff between complexity and performance. Com-mercial digital signal processors (DSPs) {{have become a}} key component in many high-volume products such as cellular tele-phones. As an alternative to power-hungry DSPs, we propose to use a moderately-parallel single-instruction <b>stream,</b> <b>multiple-data</b> <b>stream</b> (SIMD) co-processor architecture, called DSP-RAM, to implement an LST MIMO receiver that offers high performance with relatively low power consumption. For a typical indoor wireless environment, a 100 -MHz DSP-RAM can potentially provide more than 10 times greater decoding throughput at the receiver of a (4, 4) MIMO system compared to a conventional 720 -MHz DSP. The DSP-RAM processor has been coded in a hardware description language (HDL) and synthesized for both available field-programmable gate arrays (FPGAs) and for a 0. 18 −µm CMOS standard cell implementation. Index Terms — Layered space-time decoding, MIMO receiver, processor-in-memory, parallel processing. I...|$|R
40|$|Motion {{estimation}} is {{a temporal}} image compression technique where an n x n block of pixels {{in the current}} frame of a video sequence is represented by a motion vector {{with respect to the}} best matched block in a search area of the previous frame, and the DCT coefficients of the estimated error terms. In this paper, a fast technique for motion estimation is proposed and later mapped onto the SIMD structure of the Computational*RAM (C*RAM). C*RAM is a conventional computer DRAM (or SRAM) with built-in logic circuitry at the sense-amplifier {{to take advantage of the}} high on-chip memory bandwidth and massively parallel SIMD (Single-Instruction <b>stream,</b> <b>Multiple-Data</b> <b>stream)</b> operations. The proposed technique, first, attempts to reduce the n-bit grayscale frames into 1 -bit binary frames using morphological filters, and to search for motions of the extracted features on the binary frames. While the reduction procedure requires a small percentage of computation using the full grayscale, the searc [...] ...|$|R
40|$|The {{computation}} of {{the direct}} dynamics problem (forward dynamics) {{plays a major role}} in the real-time computer modelling and simulation of robot manipulators. The efficient and computationally inexpensive solution of this problem facilitates the design of real-time robot simulators. In addition, it allows for a better understanding of the key elements affecting robot operations. This work proposes to solve this problem by employing parallel and distributed processing techniques. First, a parallel implementation of a simplified Lagrange-Euler formulation is used to solve for the dynamics. Second, a resulting system of linear equations is solved using Gaussian-Elimination with simple row interchange. Both algorithms are distributed over a <b>multiple-instruction,</b> <b>multiple-data</b> <b>stream</b> (MIMD) computer architecture...|$|R
40|$|Motion {{estimation}} is {{a temporal}} image compression technique, where an n x n block of pixels {{in the current}} frame of a video sequence is represented by a motion vector {{with respect to the}} best matched block in a search area of the previous frame, and the DCT coefficients of the displaced block differences. In this paper, a low complexity technique for motion estimation is proposed. The proposed technique, first, reduces the n-bit grayscale frames into 1 -bit binary frames using morphological filters, and determines the displacement of the edge features of the adjacent frames. While reduction in bit-depth requires a small percentage of computation using the full pixel resolution, the search procedure is performed by simple XOR logic operations and 1 -b distortion accumulations on the entire search area. Compared to other low complexity techniques, the proposed technique yields better frame reconstruction, operates using simpler arithmetic/logic operations, and possesses a higher degree of parallelism when implemented on a 2 -D Single-Instruction <b>stream,</b> <b>Multiple-Data</b> <b>stream</b> (SIMD) architecture. Key words: motion estimation, morphological image processing, SIMD architecture, parallel processing. 1...|$|R
40|$|Sequence {{comparison}} with a ne gap costs {{is a problem}} that is readily parallelizable on simple singleinstruction, <b>multiple-data</b> <b>stream</b> (SIMD) parallel processors using only constant space per processing element. Unfortunately, the twin problem of sequence alignment, nding the optimal characterby-character correspondence between two sequences, is more complicated. While the innovative O(n 2) time and O(n) -space serial algorithm has been parallelized for <b>multiple-instruction,</b> <b>multiple-data</b> <b>stream</b> (MIMD) computers with only a communication-time slowdown, typically O(log n), it is not suitable for hardware-e cient SIMD parallel processors with only local communication. This paper proposes several methods of computing sequence alignments with limited memory per processing element. The algorithms are also well-suited to serial implementation. The simpler algorithms feature, for an arbitrary integer L, a factor of L slowdown in exchange for reducing space requirements from O(n) toO (Lp n) per processing element. Using this result, we describe an O(n log n) parallel time algorithm that requires O(log n) space per processing element onO(n) SIMD processing elements with only a mesh or linear interconnection network...|$|R
40|$|Introduction The Real World Computing (RWC) Project aims at {{developing}} "flexible information processing" {{technologies for}} real world applications. Main research areas are optical computing, theoretical basis, novel functions, and massively parallel computing. A series of massively parallel computers are {{planned to be}} developed to serve {{as part of the}} infrastructure of the project. The first in the series, RWC- 1, is now under development [4]. RWC- 1 is based on the "RICA architecture" in which computation and communication is closely coupled. The close coupling enables efficient fine-grain parallel computation, which is desirable in flexible computational tasks. <b>Multiple-instruction,</b> <b>multiple-data</b> <b>stream</b> (MIMD) type parallel computers [...] - RWC- 1 is one such [...] - allow more flexible computation than single-instruction, single-data stream (SIMD) type parallel computers, since constituent processors does not run in a lock-step manner but and asynchronously and freely. The price one h...|$|R
40|$|In this thesis, {{image and}} video {{processing}} algorithms, especially the compression algorithms, are first studied {{in their natural}} formats to appreciate the needs for real-time operations and hence, parallel computing. The computational intense, memory-bound problems are next approached from two directions: algorithmic and architectural. Algorithmic approach tends to systematically analyze the flow independence and data independence of a program, while architectural approach tends to gain speed-up by resource multiplicity and time sharing. The majority of image and video processing algorithms are inherently data-parallel in nature. The vectorization of these algorithms requires consistent practices, and new challenge in parallel programming seems endless. The data-parallel nature of image/video processing algorithms map well onto the Single-Instruction <b>stream,</b> <b>Multiple-Data</b> <b>stream</b> (SIMD) of an increasingly popular Memory-Embedded Array Processor classified as the Intelligent RAMS, specifically, the Computational*RAM (C*RAM). C*RAM is a SIMD-memory hybrid where the processing elements are pitch-matched to memory columns of a conventional computer RAM at the sense-amplifiers {{to take advantage of}} the inherently high memory bandwidth, and the emulation of the massively parallel processors. Throughout the thesis, speed-ups from 1 to 3 orders of magnitude are obtained. Memory-bound algorithms such as Motion Estimation, and Mean-Absolute-Error for Nearest Neighbor Distortion Computation are among the most efficient implementations. At its best, this thesis will, definitely, put forward the promising research direction which involves fast and efficient in-memory parallel computing for visual communications...|$|R
40|$|Experiments were {{conducted}} at NASA Ames Research Center to define multi-tasking software requirements for <b>multiple-instruction,</b> <b>multiple-data</b> <b>stream</b> (MIMD) computer architectures. The {{focus was on}} specifying solutions for algorithms {{in the field of}} computational fluid dynamics (CFD). The program objectives were to allow researchers to produce usable parallel application software as soon as possible after acquiring MIMD computer equipment, to provide researchers with an easy-to-learn and easy-to-use parallel software language which could be implemented on several different MIMD machines, and to enable researchers to list preferred design specifications for future MIMD computer architectures. Analysis of CFD algorithms indicated that extensions of an existing programming language, adaptable to new computer architectures, provided the best solution to meeting program objectives. The CoFORTRAN Language was written in response to these objectives and to provide researchers a means to experiment with parallel software solutions to CFD algorithms on machines with parallel architectures...|$|R
40|$|Advanced control {{strategies}} {{require the}} inclusion of the dynamical model of the robot arm in the control law. However, the dynamics consist of a highly coupled and non-linear set of equations. Thus, this complexity has always presented a major obstacle in real-time dynamic control applications. The computationally efficient solution of this problem will lead to a better comprehension of the key factors affecting robot operations. This work describes a solution of this problem by employing a parallel processing approach. The dynamics are computed by using a semi-customised Newton-Euler formulation. The algorithm is distributed over a highly-coupled <b>multiple-instruction</b> <b>multiple-data</b> <b>stream</b> (MIMD) computer architecture. The computer system is constructed from general purpose (VLSI) building blocks called (TRANSPUTER. The cost-effectiveness and speed of the scheme is demonstrated by a case study (PUMA 560 robot arm). The communication issues between the different processors are discussed. Speed-up results are included to show the superiority and advantages of the parallel approach...|$|R
40|$|A message-passing {{version of}} the PAGOSA shock-wave physics code has been {{developed}} at Sandia National Laboratories for <b>multiple-instruction,</b> <b>multiple-data</b> <b>stream</b> (MIMD) computers. PAGOSA is an explicit, Eulerian code for modeling the three-dimensional, high-speed hydrodynamic flow of fluids and the dynamic deformation of solids under high rates of strain. It was originally developed at Los Alamos National Laboratory for the single-instruction, multiple-data (SIMD) Connection Machine parallel computers. The performance of Sandia`s message-passing version of PAGOSA has been measured on two MIMD machines, the nCUBE 2 and the Intel Paragon XP/S. No special {{efforts were made to}} optimize the code for either machine. The measured scaled speedup (computational time for a single computational node divided by the computational time per node for fixed computational load) and grind time (computational time per cell per time step) show that the MIMD PAGOSA code scales linearly with the number of computational nodes used on a variety of problems, including the simulation of shaped-charge jets perforating an oil well casing. Scaled parallel efficiencies for MIMD PAGOSA are greater than 0. 70 when the available memory per node is filled (or nearly filled) on hundreds to a thousand or more computational nodes on these two machines, indicating that the code scales very well. Thus good parallel performance can be achieved for complex and realistic applications when they are first implemented on MIMD parallel computers...|$|R
40|$|Includes bibliographical {{references}} (pages [60]- 62). A new multi-path {{acoustic echo}} canceller for teleconferencing {{is presented in}} this thesis. This echo canceller contains digitized versions of multiple echo paths in its memory for all the microphones in the teleconferencing system. The echo paths were obtained by echo path modelling. The simulation for echo cancellation shows that the canceller has improved echo cancellation performance compared with a conventional single-path model echo canceller. The improvement is quite noticeable when active microphone switching occurs. A new adaptation technique is incorporated in this echo canceller which takes specific microphone related echo paths into account. The echo canceller demonstrates a highly parallel pipelined multi-processor architecture. The <b>multiple-instruction</b> <b>multiple-data</b> <b>stream</b> (MIMD) structure is utilized for implementing the echo cancellation system. The real-time acoustic echo cancellation application is computationally intensive. The intrinsic parallelism of a specific adaptive algorithm was exploited in this custom multiple microprocessor architecture. The design objective {{was to provide a}} system platform for efficient resource utilization and adaptive algorithm execution. The system consists of five high speed floating-point digital signal processors (DSP). One master processor handles system control, program downloads, data transfers, microphone selection and scalar adaptive filter computations. The other four slave processors execute filtering and adaptive algorithm computations in parallel. The interprocessor communication scheme accommodates large adaptive filters by permitting the addition of more slave processors. The system achieves excellent speedup rates when implementing FIR and DLMS algorithms for real-time acoustic echo cancellation applications. The system speedup with four SPMs varies from 2. 756 to 3. 967 when implementing a FIR filter with DLMS algorithm while the order of the filter increases from 32 to 2048. This indicates that the highest computational speedup can be achieved when DLMS algorithm is selected with high filter order. M. S. (Master of Science...|$|R
40|$|INTRODUCTION The SPMD (Single-Program <b>Multiple-Data</b> <b>Stream)</b> {{model has}} been widely adopted as the base of {{parallel}}izing compilers and parallel programming languages for scientific programs [1]. This model will work well not only for shared memory machines but also for distributed memory multicomputers, provided that; data are allocated appropriately by the programmer and/or the compiler itself, the compiler distributes parallel computations to processors so that interprocessor communication costs are minimized, and codes for communication are inserted, only when necessary, at the point adequate for minimizing communication latency. 314 Chapter 13 forall i / 1 to N do begin a[i] / b[index [i]]; end; (a) Loop with indexed right-hand side forall i / 1 to<F 24. 6...|$|R
40|$|Abstract—The {{morphological}} {{changes of}} muscle can be accu-rately detected by sonography, a process we have termed sono-myography (SMG). This article investigates {{the feasibility of}} using muscle thickness deformation SMG as a new signal source to control a prosthetic hand in real time. Thickness deformation SMG of the extensor muscle was measured by a block-matching algorithm during wrist extension-flexion; the amplitude of the deformation was used to control the prosthetic hand. We com-pared various fast-search algorithms to select the best one for real-time prosthetic control. The two-dimensional logarithmic search (TDL) algorithm, with and without <b>streaming</b> single-instruction <b>multiple-data</b> extensions, showed excellent execution efficiency, with an overall mean correlation coefficient of about 0. 99, a mean standard root-mean-square error < 0. 75, and a mean relative root-mean-square error < 8. 0 % referenced to the cross-correlation algorithm baseline. The mean frame rates were greater than the ultrasound sampling rate (12 Hz), indicating that TDL could be implemented in real-time control. These results demonstrate that only one muscle position is needed to control a prosthetic hand, allowing for proprioception of muscle tension, and that the SMG provides good control of the prosthetic hand, allowing it to proportionally open and close with a fast-search algorithm...|$|R
40|$|The {{morphological}} {{changes of}} muscle can be accurately detected by sonography, a process we have termed sonomyography (SMG). This article investigates {{the feasibility of}} using muscle thickness deformation SMG as a new signal source to control a prosthetic hand in real time. Thickness deformation SMG of the extensor muscle was measured by a block-matching algorithm during wrist extension-flexion; the amplitude of the deformation was used to control the prosthetic hand. We compared various fast-search algorithms to select the best one for real-time prosthetic control. The two-dimensional logarithmic search (TDL) algorithm, with and without <b>streaming</b> single-instruction <b>multiple-data</b> extensions, showed excellent execution efficiency, with an overall mean correlation coefficient of about 0. 99, a mean standard root-mean-square error < 0. 75, and a mean relative root-mean-square error < 8. 0 % referenced to the cross-correlation algorithm baseline. The mean frame rates were greater than the ultrasound sampling rate (12 Hz), indicating that TDL could be implemented in real-time control. These results demonstrate that only one muscle position is needed to control a prosthetic hand, allowing for proprioception of muscle tension, and that the SMG provides good control of the prosthetic hand, allowing it to proportionally open and close with a fast-search algorithm. Department of Health Technology and Informatic...|$|R

