34|54|Public
25|$|P {{contains}} an inverted fork (or collider), , {{such that the}} <b>middle</b> <b>node</b> m is not in Z and no descendant of m is in Z.|$|E
2500|$|P {{contains}} a directed chain, [...] or , {{such that the}} <b>middle</b> <b>node</b> m is in Z, ...|$|E
5000|$|P {{contains}} an inverted fork (or collider), , {{such that the}} <b>middle</b> <b>node</b> m is not in Z and no descendant of m is in Z.|$|E
5000|$|Level III: <b>Middle</b> jugular <b>nodes</b> - {{between the}} hyoid bone and cricoid {{cartilage}} ...|$|R
2500|$|... (The {{automorphism}} of A2n {{does not}} yield a folding because the <b>middle</b> two <b>nodes</b> are connected by an edge, {{but in the}} same orbit.) ...|$|R
40|$|A {{parallel}} {{genetic algorithm}} (GA) implemented on GPU clusters is proposed {{to solve the}} Uncapacitated Single Allocation p-Hub Median problem. The GA uses binary and integer encoding and genetic operators adapted to this problem. Our GA is improved by generated initial solution with hubs located at <b>middle</b> <b>nodes.</b> The obtained experimental results are compared with the best known solutions on all benchmarks on instances up to 1000 nodes. Furthermore, we solve our own randomly generated instances up to 6000 nodes. Our approach outperforms most well-known heuristics in terms of solution quality and time execution and it allows hitherto unsolved problems to be solved...|$|R
5000|$|... {{function}} split is input: T, a node representing an AA {{tree that}} needs to be rebalanced. output: Another node representing the rebalanced AA tree. [...] if nil(T) then return Nil else if nil(right(T)) or [...] nil(right(right(T))) then return T else if level(T) == level(right(right(T))) then We have two horizontal right links. Take the <b>middle</b> <b>node,</b> elevate it, and return it. R = right(T) right(T) := left(R) left(R) := T level(R) := level(R) + 1 return R else return T end if end function ...|$|E
5000|$|So clearly we'd {{start off}} visiting the top <b>middle</b> <b>node,</b> since the {{expected}} total cost, i.e. , is [...] Then the goal {{would be a}} candidate, with [...] equal to [...] Then we'd clearly pick the bottom nodes one after the other, followed by the updated goal, since they all have [...] lower than the [...] of the current goal, i.e. their [...] is [...] So even though the goal was a candidate, we couldn't pick it because there were still better paths out there. This way, an admissible heuristic can ensure optimality.|$|E
5000|$|SELECT Child.Node, Child.Left, Child.RightFROM Tree as Parent, Tree as ChildWHERE Child.Left BETWEEN Parent.Left AND Parent.Right AND NOT EXISTS ( [...] -- No <b>Middle</b> <b>Node</b> SELECT * FROM Tree as Mid WHERE Mid.Left BETWEEN Parent.Left AND Parent.Right AND Child.Left BETWEEN Mid.Left AND Mid.Right AND Mid.Node NOT IN (Parent.Node AND Child.Node) [...] ) AND Parent.Left = 1 -- Given Parent Node Left IndexOr, equivalently:SELECT DISTINCT Child.Node, Child.Left, Child.RightFROM Tree as Child, Tree as Parent WHERE Parent.Left < Child.Left AND Parent.Right > Child.Right -- {{associate}} Child Nodes with ancestorsGROUP BY Child.Node, Child.Left, Child.RightHAVING max(Parent.Left) = 1 -- Subset {{for those}} with the given Parent Node as the nearest ancestor ...|$|E
40|$|HABIT: Herbaceous {{perennial}} {{with winter}} rosettes, vernal culms sparsely caespitose, erect or ascending, 1. 5 - 6 dm.; flowering May-July; autumnal culms erect, branching from <b>middle</b> <b>nodes,</b> with slightly reduced ascending leaves, forming a dense tuft; flowering July- September. SIMILAR SPECIES: The genus Panicum is distinctive in Ohio. It {{is the largest}} genus in the family, and species distinctions are based upon minute and technical characters. This species is most similar to P. depauperatum, P. linearifolium, and P. calliphyllum. It has been suggested (Pohl, 1947) that this species is a hybrid between P. depauperatum and P. commutatum. TOTAL RANGE: Quebec and Newfoundland to MN, s. to NJ and n. IN...|$|R
5000|$|Classical: {{pick the}} longest axis and the <b>middle</b> of the <b>node</b> {{bounding}} box on that axis ...|$|R
40|$|Abstract: Active Queue Management (AQM) applies a {{suitable}} control policy upon detecting congestion in networks. In this paper, an adaptive Proportional-Integral (PI) controller based on Artificial Neural Networks (ANN) {{is applied to}} AQM {{for the objective of}} congestion avoidance and control in <b>middle</b> <b>nodes.</b> The proposed controller is simple and can be easily implemented in high-speed routers. Neural Network PI (NNPI) dynamically adapts its parameters with respect to changes in the system. It is anticipated that this results in better response compared to linear controllers due to the nonlinear nature of NNPI. We simulated our method in ns 2 and compared its performance with the conventional PI controller. The simulation results show NNPI yields better performance...|$|R
5000|$|GDD-agreement generalizes {{the notion}} of the degree {{distribution}} to the spectrum of graphlet degree distributions (GDDs) in the following way. The degree distribution measures the number of nodes of degree k in graph G, i.e., the number of nodes [...] "touching" [...] k edges, for each value of k. Note that an edge is the only graphlet with two nodes. GDDs generalize the degree distribution to other graphlets: they measure for each 2-5-node graphlet Gi, , such as a triangle or a square, the number of nodes [...] "touching" [...] k graphlets Gi at a particular node. A node at which a graphlet is [...] "touched" [...] is topologically relevant, since it allows us to distinguish between nodes [...] "touching", for example, a three node path at an end node or at the <b>middle</b> <b>node.</b> This is summarized by automorphism orbits (or just orbits, for brevity): by taking into account the [...] "symmetries" [...] between nodes of a graphlet, there are 73 different orbits across all 2-5-node graphlets (see 2007 for details).|$|E
30|$|Furthermore, {{the volume}} ratio {{criterion}} on the <b>middle</b> <b>node</b> is very satisfactory. The results improve {{as soon as}} the elimination process is activated around a node to interface distance (here δ /√(3)) of 10 ^- 3 m.|$|E
3000|$|The fit-to-vertex {{and volume}} {{criterion}} remove both the vertex node and the <b>middle</b> <b>node</b> d.o.f. (χ _Ω + _S [...] and χ _Ω + _M). Then, with the fit-to-vertex, the interface position is {{switched to the}} closest node.|$|E
40|$|AbstractBased on {{the general}} {{displacement}} method and the basic hypothesis of the trial load method, a new advanced trial load method, the general displacement arch-cantilever element method, was proposed to derive the transformation relation of displacements and loads between the surface <b>nodes</b> and <b>middle</b> plane <b>nodes.</b> This method considers the nodes on upstream and downstream surfaces of the arch dam to be exit nodes (master <b>nodes),</b> and the <b>middle</b> plane <b>nodes</b> to be slave nodes. According to the derived displacement and load transformation matrices, the equilibrium equation treating the displacement of <b>middle</b> plane <b>nodes</b> as a basic unknown variable is transformed into one that treats the displacement of upstream and downstream nodes as a basic unknown variable. Because the surface nodes have only three degrees of freedom (DOF), this method can be directly coupled with the finite element method (FEM), which is used for foundation simulation to analyze {{the stress of the}} arch dam with consideration of dam-foundation interaction. Moreover, using the FEM, the nodal load of the arch dam can be easily obtained. Case studies of a typical cylindrical arch dam and the Wudongde arch dam demonstrate the robustness and feasibility of the proposed method...|$|R
50|$|Categorical {{variables}} are indicated by placing their size (without a bracket) in the <b>middle</b> of the <b>node.</b>|$|R
50|$|Variables {{that are}} {{actually}} random vectors are indicated by putting the vector size in brackets in the <b>middle</b> of the <b>node.</b>|$|R
30|$|In [7, 26] {{discontinuous}} {{functions are}} added to continuous functions, so that {{the removal of the}} discontinuous <b>middle</b> <b>node</b> d.o.f. does not alter the partition of unity of continuous space functions [9] and consequently the representation of continuous functions.|$|E
40|$|Localization is {{significant}} for various applications in Wireless Sensor Networks. It is {{found that the}} estimated hop-distance will affect localization result. In this study, we propose a Cosine Theorem-based DV-hop localization algorithm (CTDV-hop) to improve localization precision. After estimating the average hop-distance by the traditional DV-hop technique, we select the <b>middle</b> <b>node</b> between every two anchor-pairs in the transmission route one by one. Then the estimated hop-distance is adjusted by the angle between the anchor-pairs to that selected <b>middle</b> <b>node.</b> We hence obtain the improved localization results and can accurately locate even the distribution of nodes is non-uniform. The simulation results illustrate that the CTDV-hop algorithm effectively improves the localization precision without extra energy consumption in networks...|$|E
30|$|Although the LMST type {{algorithm}} constructs {{a network}} topology efficiently by locally minimum total energy consumption, ignoring {{the problem of}} energy balance. The <b>middle</b> <b>node</b> bears too much load in the network, which consumes {{a lot of energy}} and easily leads to poor network connectivity.|$|E
40|$|Abstract—With {{the feature}} size of {{semiconductor}} technology reducing and intellectual properties (IP) cores increasing, on chip communication architectures {{have a great}} influence on the performance and area of System-on-Chip (SoC) design. Network-on-Chip (NoC) has been proposed as a promising solution to complex SoC communication problems and has been widely accepted by academe and industry. This paper discusses how to choose suitable topology and node encoding scheme for NoC, and proposes a two-dimensional plane code based on Johnson Code by the combination of Torus topology with corresponding node encoding. The node encoding implies the relation among neighbouring nodes and the global information of routing. And it has good scalable characteristics. The two methods for code compressing are also presented to reduce the storage space of node address and increase the utilization rate of channel bandwidth. Utilizing the code, the improved X-Y routing is proposed, which is implemented with only three or six logic operations in <b>middle</b> <b>nodes.</b> The node structure is designed at the same time. The experimental results show combination of the proposed code with Torus topology can simplify the routing algorithm {{in the implementation of}} NoC, decrease silicon resource consumption and greatly improve communication performance...|$|R
50|$|Digitaria insularis is a tufted {{perennial}} bunchgrass {{with very}} short, swollen rhizomes. The stems reach {{a height of}} 80-130 cm and are erect, branched from the lower and <b>middle</b> <b>nodes,</b> swollen bases, with woolly bracts, glabrous internodes and nodes. Sheaths papillose - pilose in their majority, ligule 4-6 mm long, blades linear, 20-50 cm long and 10-20 mm wide. Inflorescence 20-35 cm long, numerous clusters, 10-15 cm long, solitary triquetrous rachis of clusters, 0.4-0.7 mm wide, scabrous; spikelets lanceolate, 4.2-4.6 mm long, paired, caudate, densely covered with trichomes up to 6 mm long, brown or whitish, ranging up to 5 mm from {{the apex of the}} spikelet; lower glume triangular to ovate, to 0.6 mm long, enervate, membranous; upper glume 3.5-4.5 mm long, acute, 3-5 nerved, ciliated; inferior lemma as long as spikelet, acuminate, 7-nerved, covered with silky hairs, upper lemma 3.2-3.6 mm long, acuminate, dark brown; anthers 1-1.2 mm long.|$|R
50|$|Variables {{that are}} {{actually}} random matrices are similarly indicated by putting the matrix size in brackets in the <b>middle</b> of the <b>node,</b> with commas separating row size from column size.|$|R
30|$|We {{can also}} find each edge-betweenness using the edge-partition technique, and thereby the betweenness of that <b>middle</b> <b>node</b> will be the edge betweenness. One {{of the most common}} {{clustering}} methods is to remove edges with highest betweenness, and group nodes that are in the same connected component into a cluster.|$|E
40|$|We {{study the}} source coding problem {{on a simple}} two-hop network with side {{information}} on the middle and end nodes. For the degraded case, where the side information at the end node is weaker than the side information at the <b>middle</b> <b>node,</b> a complete characterization of the rate-distortion region is derived...|$|E
3000|$|As {{discussed}} in “Numerical analysis of strongly discontinuous approximations with quadratic elements” section, {{the use of}} vertex node and <b>middle</b> <b>node</b> shape functions (resp. χ _Ω + _S [...] and χ _Ω + _M [...] in Fig.  16) leads to an incorrect asymptotic behavior of strongly discontinuous formulations, both for Bernstein and Lagrange polynomials.|$|E
50|$|Region III: <b>middle</b> third jugular <b>nodes</b> {{extending}} from the carotid bifurcation superiorly to the cricothyroid notch (clinical landmark), or inferior edge of cricoid cartilage (radiological landmark), or omohyoid muscle (surgical landmark).|$|R
40|$|International audienceIn this paper, {{we present}} a {{composite}} event detection system for multicamera surveillance networks. The proposed framework is able to handle correlations between primitive events that are generated from either a single camera view or multiple camera views with spatial and temporal variations. Composite events are represented {{in the form of}} full binary trees, where the leaves nodes represent primitive events, the root node represents the target composite event, and the <b>middle</b> <b>nodes</b> represent defined rules. The multi-layer design of the composite events provides a great extensibility and flexibility to users in different applications. A standardized XML-style event language is designed to describe the composite events, such that inter-agent communications and event detection module construction are conveniently achieved. In our system, a set of graphical interfaces are developed for users to easily define both primitive and high-level composite events. The proposed system is designed in the distributed form, where different components of the system can be deployed on separate processors and communicating with each other over the network. The capabilities and effectiveness of our system have been demonstrated in several real life applications...|$|R
40|$|Localization {{is one of}} the {{key issues}} in the {{wireless}} sensors network. Regarding the mobility of the nodes in some of the applications, it is necessary to have a localization algorithm that can support the mobility of nodes. Most of the approaches that have been presented so far have required instruments for the measurement of the distance and the angle or they have needed many beacon nodes for localization. In this paper a demand-based algorithm has been presented which uses these two techniques: the first one is using the localized nodes to localize the unknown nodes and the second one is utilizing the information from localization message by the <b>middle</b> <b>nodes</b> which are located in the return route of the message. Using these two techniques, the suggested method that called ELoc(Efficient Localization) has been able to present a higher speed and range of success, by reducing the sent messages and consequently reducing the energy consumption quite significantly. Furthermore, this method with a high ability of scalability and low complexity can be very efficient in wireless sensor networks. By using Omnet++ simulator software, the ELoc has been compared to Dv-hop and ECLS methods and it has been evaluated. The results of simulation have confirmed the above-mentioned propositions...|$|R
40|$|This paper {{proposed}} to monitor a critical event in wireless sensor networks. Whenever a critical event occurs, the critical event is detected by the nearby sensor nodes. Immediately these sensor nodes should broadcast an alarm {{message to the}} entire network. To increase lifetime of the network, sleeping methods are always implemented in WSNs, it increases the delay of alarm message broadcasting. In this paper, we propose a novel sleep scheduling method to reduce the delay of alarm broadcasting from any sensor node in WSNs. scheduling methods are always employed in WSNs, we tend to style two determined traffic ways for the transmission of alarm message,and levelby-level offset based wake-up pattern according to the paths, respectively. Once a crucial event happens, An alarm is quickly transmitted on one among the traffic ways to a <b>middle</b> <b>node,</b> and so it's instantly broadcast by the <b>middle</b> <b>node</b> on another path without collision...|$|E
30|$|When {{getting rid}} of the <b>middle</b> <b>node</b> d.o.f. χ _Ω + _M for ε around 10 ^- 3, the {{condition}} number decreases sharply (Fig.  28). This threshold value is close to estimates of [18, 24], but we stress on the fact that only the middle d.o.f. is removed and that the position of the interface is not shifted. This alteration process allows the analysis to proceed beyond ε = 10 ^- 12 as with linear elements.|$|E
40|$|We {{present a}} new {{algorithm}} {{to reduce the}} space complexity of heuristic search. It is most effec-tive for problem spaces that grow polynomi-ally with problem size, but contain large num-bers of cycles. For example, the problem of finding a lowest-cost corner-to-corner path in a D-dimensional grid has application to gene sequence alignment in computational biology. The main idea is to perform a bidirectional search, but saving only the OPEN lists and not the CLOSED lists. Once the search completes, we have one node {{in the middle of}} an optimal path, but don’t have the solution path itself. The path is then reconstructed by recursively applying the same algorithm between the ini-tial node and the <b>middle</b> <b>node,</b> and also be-tween the <b>middle</b> <b>node</b> and the goal node. If n is the length of the grid in each dimension, and d is the number of dimensions, this algorithm reduces the memory requirement from O(nd) to O(nd- 1). For example, in a two-dimensional problem, the space complexity is reduced from quadratic to linear. The time complexity only increases by a constant factor of ~r in 2 dimen-sions, and ~rv/ 3 / 3 ~ 1. 8 in 3 dimensions. ...|$|E
30|$|The {{numerical}} {{results show}} that locating the relay node closer to the <b>middle</b> of source <b>node</b> and destination node yields more energy savings. It also demonstrates that the proposed cooperative protocol can improve the balance of cluster nodes’ residual energy, since it intelligently track the node’s energy sustainability in an online fashion.|$|R
40|$|The Internet of Things (IoT) is the {{intelligent}} technologies {{and services that}} mutually communicate information between humans and devices or between Internet-based devices. In IoT environments, various device information is collected from the user for intelligent technologies and services that control the devices. Recently, wireless sensor networks based on IoT environments are being used in sectors as diverse as medicine, the military, and commerce. Specifically, sensor techniques that collect relevant area data via mini-sensors after distributing smart dust in inaccessible areas like forests or military zones have been embraced as the future of information technology. IoT environments that utilize smart dust are composed of the sensor nodes that detect data using wireless sensors and transmit the detected data to <b>middle</b> <b>nodes.</b> Currently, since the sensors used in these environments are composed of mini-hardware, they have limited memory, processing power, and energy, {{and a variety of}} research that aims to make the best use of these limited resources is progressing. This paper proposes a method to utilize these resources while considering energy efficiency, and suggests lightweight mutual verification and key exchange methods based on a hash function that has no restrictions on operation quantity, velocity, and storage space. This study verifies the security and energy efficiency of this method through security analysis and function evaluation, comparing with existing approaches. The proposed method has great value in its applicability as a lightweight security technology for IoT environments...|$|R
40|$|In {{wireless}} {{sensor network}} have safe routing protocol, such as the security-aware ad hoc routing protocol (SAR), {{can be used to}} defend next to black hole and wormhole attacks. The security-aware ad hoc routing protocol is base on on-demand protocol, such as AODV. In SAR, a safety metric is additional into the way request packet, and a dissimilar route detection process is used. Intermediate nodes are given a route request small package with an exacting security metric or confidence level. At <b>middle</b> <b>nodes,</b> if the safety metric or trust level is content, the node will procedure the route ask for packet, and it will broadcast to its neighbors by means of controlled flood. Also use the cluster method. A cluster based routing algorithm to make bigger the lifetime of the network and to preserve a balanced power consumption of nodes. To get hold of it, we add a small slot in a surrounding frame, which is enabling to exchange the residual energy mail between the base station (BS), cluster heads, and nodes. The cluster is or else, the route ask for is dropped. If an end-to-end path with the necessary safety attributes be able to be found, the reason will produce a route request small package with the exact security metric. They have two types of black hole attacks internal and external black hole attacks on the network. Token device to use a safety based data broadcast on the system. Results have take some parameter like throughput, Packet end-to-end delay, network load are to be taken...|$|R
