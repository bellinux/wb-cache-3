18|549|Public
5000|$|... {{observe the}} {{behavior}} of the <b>managed</b> <b>device</b> and software for performance and diagnostic tasks ...|$|E
5000|$|A <b>managed</b> <b>device</b> driver model allows {{drivers for}} many devices {{to be written}} in C# ...|$|E
50|$|An {{agent is}} a network-management {{software}} module that resides on a <b>managed</b> <b>device.</b> An agent has local knowledge of management information and translates {{that information to}} or from an SNMP-specific form.|$|E
5000|$|... #Caption: Live Mesh also {{provided}} the capabilities to <b>manage</b> <b>devices.</b>|$|R
5000|$|Device security: back up, restore, lock, wipe {{and set up}} {{functionality}} restrictions for <b>managed</b> <b>devices.</b>|$|R
5000|$|Settings monitoring: {{setting and}} verifying the {{settings}} of <b>managed</b> <b>devices,</b> gathering diagnostics information and application inventory.|$|R
50|$|A {{managed object}} (sometimes called a MIB object, an object, or a MIB) {{is one of}} any number of {{specific}} characteristics of a <b>managed</b> <b>device.</b> Managed objects {{are made up of}} one or more object instances (identified by their OIDs), which are essentially variables.|$|E
5000|$|... the GUI, BUI or CLI will {{interface}} with a WBEM client {{through a small}} set of application programming interfaces (APIs). This client will find the WBEM server for the <b>managed</b> <b>device</b> (typically on the device itself) and construct an XML message containing the request.|$|E
50|$|Typically {{solutions}} {{include a}} server component, which sends out the management commands to the mobile devices, and a client component, which {{runs on the}} <b>managed</b> <b>device</b> and receives and implements the management commands. In some cases, a single vendor provides both the client and the server, while in other cases the client and server come from different sources.|$|E
5000|$|An SNMPv2 agent {{can act as}} a {{proxy agent}} on behalf of SNMPv1 <b>managed</b> <b>devices,</b> as follows: ...|$|R
5000|$|Provisioning of device settings: {{provisioning}} the <b>managed</b> <b>devices</b> with settings, such as E-mail {{accounts and}} access points.|$|R
5000|$|... 9) Pioneering Delivery of Pay TV Linear Video to Consumer Owned and <b>Managed</b> <b>Devices</b> Over a High Speed Data Connection ...|$|R
50|$|A <b>managed</b> <b>device</b> is {{a network}} node that {{implements}} an SNMP interface that allows unidirectional (read-only) or bidirectional (read and write) access to node-specific information. Managed devices exchange node-specific {{information with the}} NMSs. Sometimes called network elements, the managed devices can be any type of device, including, but not limited to, routers, access servers, switches, cable modems, bridges, hubs, IP telephones, IP video cameras, computer hosts, and printers.|$|E
50|$|The BigFix Agent also {{automatically}} notifies {{the server}} and console {{of changes in}} <b>managed</b> <b>device</b> configuration, providing a real-time view of device status. In addition to a standard array of management services available from BigFix, Inc., customers and developers can create custom policies and services using a published BigFix authoring language. The BigFix Agent runs on Microsoft Windows operating system since Windows 95, Unix, Linux and Mac OS client systems.|$|E
50|$|In the 1990s when {{co-location}} facilities {{became more}} common {{there was a}} need to provide access between dissimilar security zones. The jump server concept emerged to meet this need. The jump server would span the two networks and typically be used in conjunction with a proxy service such as SOCKS to provide access from an administrative desktop to the <b>managed</b> <b>device.</b> As SSH tunneling became common, jump servers became the de facto method of access.|$|E
40|$|In this thesis, we have {{identified}} techniques and approaches that are most commonly encountered in network management systems. We have described availability and performance monitoring techniques. Selection of monitoring technique depends on the complexity of monitored parameters and preliminary established architecture. Network monitoring suggests architecture in which centralized manager collects and analyses data from <b>managed</b> <b>devices.</b> <b>Managed</b> <b>devices</b> expose their network statistics through objects defined within the Management Information Base. Simple Network Management Protocol allowing the manager {{to communicate with the}} managed hosts. Afterwards we analyse network monitoring and graphing tool Cacti. Cacti allows a manager to poll <b>managed</b> <b>devices</b> and graph the gathered data. In the last part we cover the details of establishing network management system in which we monitor local and remote network resources. Cacti has emerged as adaptable tool for monitoring computer networks...|$|R
25|$|RCS is a {{management}} platform that allows operators to remotely deploy exploits and payloads against targeted systems, remotely <b>manage</b> <b>devices</b> once compromised, and exfiltrate data for remote analysis.|$|R
50|$|LANDESK {{software}} {{is used to}} manage over 250 million desktops, servers and mobile devices. Its {{software is}} used to <b>manage</b> <b>devices</b> running Windows, Macintosh and Linux operating systems.|$|R
5000|$|CMIP was {{designed}} {{in competition with}} SNMP, and has far more features than SNMP. For example, SNMP defines only [...] "set" [...] actions to alter {{the state of the}} <b>managed</b> <b>device,</b> while CMIP allows the definition of any type of action. CMIP was {{a key part of the}} Telecommunications Management Network, and enabled cross-organizational as well as cross-vendor network management.On the Internet, however, most TCP/IP devices support SNMP and not CMIP. This is because of the complexity and resource requirements of CMIP agents and management systems. CMIP is supported mainly by telecommunication devices.|$|E
5000|$|... the WBEM server will decode the {{incoming}} request, perform the necessary authentication and authorization checks and then consult the previously defined {{model of the}} <b>managed</b> <b>device</b> to see {{how to handle the}} request. This model provides the power of the architecture: it represents the pivot point of the transaction, with the client simply interacting with the model and the model interacting with the real hardware or software. The model uses the Common Information Model standard; the DMTF has published many models for commonly managed devices and services: IP routers, storage servers, desktop computers, etc.|$|E
40|$|Bring-Your-Own-Device (BYOD) {{implies that}} the same mobile device is used for both work and {{personal}} purposes. This poses a security concern where untrusted user-installed applications might interfere maliciously with corporate ones. Androidâ€™s exist-ing fixed permissions mechanism is not a suitable countermeasure. Malware isolation through virtualization 1 and <b>managed</b> <b>device</b> scans 2 is possible, however a complete so-lution requires a context-specific (work/personal) policy mechanism. Our proposition, BYOD-RV, uses Dynamic Binary Instrumentation (DBI) and Runtime Verification (RV). DBI (in-memory code patching) avoids Android source code changes as typically re-quired by similar approaches, e. g. [3]. RV (runtime monitoring of program correctness properties) enables expressing dynamic policy rules in Java, e. g. [2]...|$|E
50|$|RCS is a {{management}} platform that allows operators to remotely deploy exploits and payloads against targeted systems, remotely <b>manage</b> <b>devices</b> once compromised, and exfiltrate data for remote analysis.|$|R
5000|$|It has {{a single}} web {{interface}} to view all types of devices to perform tasks such as creating and <b>managing</b> groups, <b>managing</b> <b>device</b> controls and activating mobile devices.|$|R
50|$|OBPlayer: Linux {{application}} with GUI for {{logging and}} <b>managing</b> <b>devices</b> connected to transmitters, digital screens and supported devices accessible through a secure http(s) admin panel. Supports Audio over IP Ravenna (networking).|$|R
40|$|This paper {{presents}} {{a framework for}} representing and distributing access control policies in distributed heterogeneous systems. Access control polices follows the RBAC (Role Based Access Control) model proposed by the NIST. The framework {{is based on the}} provisioning strategy defined by IETF, i. e., the RBAC information is represented in terms of a PIB (Policy Information Base) and distributed to the enforcement elements using the COPS-PR protocol. This approach can be explored in several scenarios, for configuring both, network devices and RBAC-aware applications. The provisioning process takes into account the capabilities of the enforcement element, permitting to eliminate and, eventually, adapt the configuration not supported by the <b>managed</b> <b>device</b> or application. 1...|$|E
40|$|Hybrid {{optical and}} packet {{switching}} networks {{are composed of}} multi-service hybrid devices that enable forwarding of data at multiple levels. Large IP flows at the IP level may be therefore moved to the optical level bypassing therefore the per hop routing decisions of the IP level. Such move could be beneficial since congested IP networks could be offloaded; leaving more resources for other smaller IP flows. At the same time, the flows switched at the optical level would experience better QoS thanks to larger bandwidth and negligible jitter. Moving these large flows to the optical level requires the creation of lightpaths to carry them. Currently, two approaches are used for that purpose: direct management and indirect management. With a direct approach, management messages are explicitly issued by the network manager to each <b>managed</b> <b>device</b> (e. g., multi-service hybrid devices). Whereas with an indirect approach, messages are issued by the manager to one <b>managed</b> <b>device</b> that {{is in charge of}} signaling the other ones. In both approaches, the decision of which IP flows will be moved to lightpaths is although taken by network managers. As a result, only IP flows explicitly selected by such managers will take advantage of being transferred over lightpaths. However, it may be that there are also other large IP flows, not known to the manager, that could potentially profit from being moved to the optical level. The objective aimed in this Ph. D. thesis is at investigating the use of self-management principles in hybrid optical and packet switching networks in order to identify which IP flows should be moved to the optical level as well as establish and release lightpaths for such flows...|$|E
40|$|Abstract: We {{present in}} this paper a system to {{configure}} networks. The Verified Network Configuration (Verinec) project aims to manage the complete network from one central XML database. This approach allows to test whether the configuration is usable prior to modify the setup of the real network devices. The distribution of the configuration is handled by the adaption module, a framework which can be extended to support all kinds of services and devices. Applying the configuration to each <b>managed</b> <b>device</b> within the network requires conversion from the Verinec XML database into a format suitable for that device and send the configuration to the device using a protocol supported by that device. In this paper, {{we focus on the}} adaption module. ...|$|E
50|$|For non-X11 <b>managed</b> <b>devices</b> (such as the Mac OS X {{graphics}} display) different programming interfaces must be used. x11vnc {{also provides}} an interface where the user can supply their own input injection program.|$|R
50|$|NMIS can run in both {{physical}} and virtual environments. Smaller networks can be monitored using workstation PCs. Server hardware with 2GB of RAM is usually sufficient for up to 1000 <b>managed</b> <b>devices</b> (even with 32 ports on each). 1000 <b>managed</b> <b>devices</b> may take 20GB of storage. Large numbers of <b>devices</b> can be <b>managed</b> by implementing NMIS on more powerful machines or by leveraging NMIS distributed polling and setting up multiple NMIS pollers in a master/slave design. Ultimately, NMIS is very efficient but the hardware specification of the required server will vary depending on what is being managed, how often information is collected, and how many <b>devices</b> are <b>managed.</b>|$|R
50|$|A network {{management}} station (NMS) executes applications that monitor and control <b>managed</b> <b>devices.</b> NMSs provide {{the bulk of}} the processing and memory resources required for {{network management}}. One or more NMSs may exist on any managed network.|$|R
40|$|Abstract: This {{article has}} as {{objective}} to propose {{the extension of}} the use of the management based on network policies. To do so, it has been created an approach to the distribution of management policies with emphasis on the quality of service. This approach communicates the <b>managed</b> <b>device</b> to the point of decision, requiring corrective actions for the devices, reporting changes in the configuration, registering the managed resources and applying the policies defined for the network management. In this context, the message is defined in XML format, having HTTP as its policies distributor among the participants of the distributed system. As a contribution, this article has allowed more flexibility in the distribution of policies for the devices and the sharing of a logical group of policies to the management of resources and applications emphasized in quality of service. 214 LANOMS 2005 - 4 th Latin American Network Operations and Management Symposiu...|$|E
40|$|Abstract. In {{this paper}} {{we present a}} {{framework}} for specifying policies {{for the management of}} Differentiated Services networks. These policies follow the philosophy of Policy Based Management of multi-service networks. One of the main problem in the management of Differentiated Services networks is the fact that no existing management system meets the requirements of defining policy rules that can change the configuration of the managed devices, based on dynamically triggered network events. Typically existing systems do not support a language for specifying policies but in most cases they define policy rules of the form if (set of conditions) then execute set of actions, only imposed once during the configuration process. In addition, these rules do not define an association with the <b>managed</b> <b>device</b> or set or devices; therefore, the administrator has to manually link each of the a priori well known elements to a set of configuration rules. The framework described here provides the administrator with a flexible way of defining network policy rules for the management of Differentiated Services networks...|$|E
40|$|The {{problem of}} {{electricity}} quality to consumers with non-linear, variable load caused {{the development of}} technical solutions as a <b>managed</b> <b>device</b> controlled filtering compensates - active power filter is discussed. In known scientific papers the issues of energy redistribution in the power circuit filter elements are clarified. The {{purpose of this paper}} is to give analysis of energy processes in a three-phase active power filter using spectral modeling with the presence of poly harmonics mode settings. Based on existing models of active rectifiers the spectral model of the active power filter is developed. For certain conditions for static mode the temporal and spectral dependence of power and energy in the circuit elements is obtained. Analysis of the results revealed that the contours of the device circulating components of high-power compared with the basic harmonic, that circulates between the network and the device, and the fundamental harmonic is absent in the spectrum of the power capacitor. Operation device provides the energy redistribution between phases of the network due to its partial reswitching of reactive element...|$|E
5000|$|Computer Management: A {{group of}} {{utilities}} that help retrieve system information, enable, disable or <b>manage</b> <b>device</b> drivers, Windows services and software that run during computer startup, inspect the event logs of the offline system and manage partitions.|$|R
30|$|Location {{distribution}} {{refers to}} the geographical spreading of <b>managed</b> <b>devices,</b> deployed either in a relatively small area such as a single datacenter or scattered in multiple location such as different and geographically distant departments of the same organizations.|$|R
50|$|Unilever - Vodafone Global Enterprise <b>manages</b> <b>devices,</b> {{connectivity}} and <b>managed</b> mobile {{services for}} Unilever in 63 countries, and advises Unilever on {{the management of}} consumer devices and applications, {{as part of a}} three-year contract which was signed in December 2010.|$|R
