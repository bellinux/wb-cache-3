865|68|Public
5|$|Microsoft Security Essentials (MSE) is an {{antivirus}} software (AV) product that provides protection against {{different types of}} <b>malicious</b> <b>software</b> such as computer viruses, spyware, rootkits and Trojan horses. Before version 4.5, MSE ran on , Windows Vista and Windows 7, but not on Windows 8 and later, which have built-in AV components. MSE 4.5 and later do not run on Windows XP. The license agreement allows home users and small businesses to install and use the product free of charge. It replaces Windows Live OneCare, a discontinued commercial subscription-based AV service, and the free Windows Defender, which until Windows 8 protected users from only adware and spyware.|$|E
5|$|Microsoft Security Essentials is an {{antivirus}} software (AV) product that fights <b>malicious</b> <b>software</b> (malware), including computer viruses, spyware, Trojan horses and rootkits. It replaces Windows Live OneCare, a discontinued commercial subscription-based AV service, {{and the free}} Windows Defender, which until Windows 8 only protected users from adware and spyware. It automatically checks for and downloads the virus definitions it relies on from Microsoft Update, a web-based software service updated three times a day. Users may alternatively download the updates manually from the Microsoft Security Portal website. On 30 September 2011, a faulty definition update caused the product to incorrectly tag Google Chrome as malware. The issue was resolved within three hours. MSE originally ran on Windows XP, Windows Vista and Windows 7, although versions 4.5 and later do not run on Windows XP and Microsoft stopped producing definition updates for Windows XP on 14 July 2015.|$|E
5|$|Ransomware {{is a type}} of <b>malicious</b> <b>software</b> from cryptovirology {{that threatens}} to publish the victim's data or perpetually block access to it unless a ransom is paid. While some simple {{ransomware}} may lock the system in a way which is not difficult for a knowledgeable person to reverse, more advanced malware uses a technique called cryptoviral extortion, in which it encrypts the victim's files, making them inaccessible, and demands a ransom payment to decrypt them. In a properly implemented cryptoviral extortion attack, recovering the files without the decryption key is an intractable problem – and difficult to trace digital currencies such as Ukash and Bitcoin are used for the ransoms, making tracing and prosecuting the perpetrators difficult. Recent Ransomware attack in 2017 has caused a stir in the world as the attack caused many of the internet connected devices to not work and companies spent a large amount to recover from these attacks.|$|E
5000|$|According to {{documents}} leaked by Edward Snowden {{it has been}} sharing hacking techniques with intelligence agencies since at least 2010. In that year they developed a <b>malicious</b> Windows <b>software</b> named [...] "Orca" [...] for preventing malware detection by antivirus software.|$|R
50|$|Critics also {{mention the}} {{increasing}} number of attack programs that online voting systems are greatly susceptible to. <b>Malicious</b> payloads- <b>software</b> data intended to do damage- have become so advanced that they can easily change a voter’s vote without any knowledge to other parties, regardless of voter identification or encryption software.|$|R
40|$|Malwares {{which is}} also known as <b>malicious</b> <b>software’s</b> is {{spreading}} through the exploiting the client side applications such as browsers, plug-ins etc. Attackers implant the malware codes in the user’s computer through web pages; thereby they are also known malicious web pages. Here in the paper, we present the usefulness of controlled environment in the form of client honeypots in detection of malicious web pages through collections of malicious intent in web pages and then perform detailed analysis for validation and confirmation of malicious web pages. First phase is collection of malicious infections through high interaction client honeypot, second phase is validations of the malicious infections embedded into web pages through behavior based analysis. Malwares which infect the client side applications and drop the malwares into user’s computers sometimes overrides the signature based detection techniques; thereby {{there is a need to}} study the behavior of the complete malicious web pages...|$|R
25|$|It creates {{security}} {{holes that}} can be exploited by <b>malicious</b> <b>software</b> such as worms or viruses.|$|E
25|$|Cryptocurrencies such as Bitcoin, {{introduced}} in late 2008, facilitate {{the sale of}} <b>malicious</b> <b>software,</b> making transactions secure and anonymous.|$|E
25|$|A hacker {{broke into}} {{part of the}} HealthCare.gov {{insurance}} enrollment website in July and uploaded <b>malicious</b> <b>software,</b> according to federal officials.|$|E
40|$|We {{propose a}} model for using {{firewall}} log entries of denied inbound Internet traffic for indirect discovery of local IP addresses that have security problems. This method is used successfully to discover two computers on the network of Southern Illinois University which were infected with <b>malicious</b> feral <b>software,</b> {{as well as two}} more IP addresses on the university network with other security problems...|$|R
50|$|Worms {{continue}} to play mixed roles in modern cultures. The current usage of worm {{as a type of}} <b>malicious</b> Internet <b>software</b> is derived from a 1975 science fiction novel, Shockwave Rider. More positive interpretations, based on the concept of the friendly 'bookworm' or mutated forms of the common earthworm, are found in many recent books, especially those written for children.|$|R
50|$|A modern {{computer}} {{operating system}} usually segregates virtual memory into kernel space and user space. Primarily, this separation serves to provide memory protection and hardware protection from <b>malicious</b> or errant <b>software</b> behaviour.|$|R
25|$|Antivirus or {{anti-virus}} software (often abbreviated as AV), sometimes known as anti-malware software, is computer software used to prevent, detect and remove <b>malicious</b> <b>software.</b>|$|E
25|$|Microsoft has {{released}} a removal {{guide for the}} virus, and recommends using the current release of its Windows <b>Malicious</b> <b>Software</b> Removal Tool to remove the virus, then applying the patch to prevent re-infection.|$|E
25|$|In {{order to}} secure a desktop, a Qubes user should take care of {{isolating}} various environments, so that {{if one of the}} components gets compromised, the <b>malicious</b> <b>software</b> would get access to only the data inside that environment.|$|E
50|$|A {{computer}} {{user can}} be tricked or forced into downloading software onto {{a computer that}} is of <b>malicious</b> intent. Such <b>software</b> comes in many forms, such as viruses, Trojan horses, spyware, and worms.|$|R
5000|$|Started in December 2008, Sogou browser {{adopts a}} [...] "dual-core" [...] (Google Chrome's WebKit and Internet Explorer's Trident layout engines) {{techniques}} and it {{connects to the}} cloud to recognize <b>malicious</b> websites and <b>software.</b>|$|R
40|$|In this {{position}} paper, I discuss {{a piece of}} <b>malicious</b> automated <b>software</b> {{that can be used}} by an individual or a group of users for submitting valid random noisy RDF-based data based on predefined schemas/ontologies to Semantic search engines. The result will undermine the utility of semantic searches. I did not implement the whole virus, but checked its feasibility. The open question is whether nature inspired reasoning can address such problems which are more related to information quality aspects...|$|R
25|$|In late 2010, {{the results}} of browser malware testing {{undertaken}} by NSS labs were published. The study looked at the browser's capability to prevent users following socially engineered links of a malicious nature and downloading <b>malicious</b> <b>software.</b> It did not test the browser's ability to block malicious web pages or code.|$|E
25|$|Qubes {{implements}} a Security by Isolation approach. The {{assumption is}} {{that there can be}} no perfect, bug-free desktop environment. Such an environment counts millions of lines of code, billions of software/hardware interactions. One critical bug in any of these interactions may be enough for <b>malicious</b> <b>software</b> to take control over a machine.|$|E
25|$|Because of {{the design}} of the Windows kernel, Kernel Patch Protection cannot {{completely}} prevent kernel patching. This led the computer security providers McAfee and Symantec to say that since KPP is an imperfect defense, the problems caused to security providers outweigh the benefits, because <b>malicious</b> <b>software</b> will simply find ways around KPP's defenses and third-party security software will have less freedom of action to defend the system.|$|E
50|$|On November 23, 2013, the Dutch {{newspaper}} NRC Handelsblad {{reported that}} the Netherlands was targeted by U.S. intelligence agencies {{in the immediate aftermath}} of World War II. This period of surveillance lasted from 1946 to 1968, and also included the interception of the communications of other European countries including Belgium, France, West Germany and Norway. The Dutch Newspaper also reported that NSA infected more than 50,000 computer networks worldwide, often covertly, with <b>malicious</b> spy <b>software,</b> sometimes in cooperation with local authorities, designed to steal sensitive information.|$|R
5000|$|A {{remote access}} trojan (RAT) {{is a piece}} of {{software}} or programming that allows a remote [...] "operator" [...] to control a system as if they have physical access to that system. While desktop sharing and remote administration have many legal uses, [...] "RAT" [...] software is usually associated with criminal or malicious activity. <b>Malicious</b> RAT <b>software</b> is typically installed without the victim's knowledge, often as payload of a Trojan horse, and will try to hide its operation from the victim and from security software.|$|R
40|$|We propose and {{implement}} a cryptographically end-to-end verifiable (E 2 E) remote voting system for absentee voters and report on its deployment in a binding municipal election in Takoma Park, Maryland. Remotegrity is a hybrid mail/internet extension to the Scantegrity in-person voting system, enabling secure, electronic return of vote-by-mail ballots. It provides voters {{with the ability to}} detect unauthorized modifications to their cast ballots made by either <b>malicious</b> client <b>software,</b> or a corrupt election authority—two threats not previously studied in combination. Not only can the voter detect such changes, they can prove it to a third party without giving up ballot secrecy...|$|R
25|$|<b>Malicious</b> <b>software</b> {{used and}} {{spread on the}} Internet {{includes}} computer viruses which copy {{with the help of}} humans, computer worms which copy themselves automatically, software for denial of service attacks, ransomware, botnets, and spyware that reports on the activity and typing of users. Usually, these activities constitute cybercrime. Defense theorists have also speculated about the possibilities of cyber warfare using similar methods on a large scale.|$|E
25|$|Flash drives {{may present}} a {{significant}} security challenge for some organizations. Their small size {{and ease of}} use allows unsupervised visitors or employees to store and smuggle out confidential data with little chance of detection. Both corporate and public computers are vulnerable to attackers connecting a flash drive to a free USB port and using <b>malicious</b> <b>software</b> such as keyboard loggers or packet sniffers.|$|E
25|$|Also, {{because of}} {{the design of the}} Windows kernel, Kernel Patch Protection cannot {{completely}} prevent kernel patching. This has led to additional criticism that since KPP is an imperfect defense, the problems caused to antivirus makers outweigh the benefits because authors of <b>malicious</b> <b>software</b> will simply find ways around its defenses. Nevertheless, Kernel Patching can still prevent problems of system stability, reliability, and performance caused by legitimate software patching the kernel in unsupported ways.|$|E
5000|$|Microsoft's Kernel Patch Protection FAQ further explains: Because {{patching}} replaces kernel code with unknown, untested code, {{there is}} no way to assess the quality or impact of the third-party code...An examination of Online Crash Analysis (OCA) data at Microsoft shows that system crashes commonly result from both <b>malicious</b> and non-malicious <b>software</b> that patches the kernel.|$|R
40|$|Viral {{marketing}} {{is an extremely}} powerful and effective form of internet marketing. Itis {{a new form of}} word-of-mouth through internet. In viral marketing, someone passeson a marketing message to someone else and so on. Viral marketing proposes thatmessages can be rapidly disseminated from consumer to consumer leading to largescale market acceptance. The analogy of a virus is used to described the exponentialdiffusion of information in an electronic environment and should not be confusedwith the negative connotation of a virus that is often associated with <b>Malicious</b> dis-ruptive <b>software</b> programs. The viral spread of information can be compared to theanalogy of a sneeze, which typically releases approximately 2 million particles. Thereare many forms of viral marketing, such as: e-mail, e-books, blog, social networksites, and video...|$|R
50|$|While a <b>malicious</b> user (or <b>software)</b> {{may be able}} {{to evade}} the {{detection}} of a single IDS (NIDS, HIDS, etc.), it becomes exponentially more difficult to get around the defenses when there are multiple protection mechanisms. Prelude comes with a large set of sensors, each of them monitoring different kind of events. Prelude permits alert collection to WAN scale, whether its scope covers a city, a country, a continent or the world.|$|R
25|$|In June 2015, Kaspersky {{reported}} that its own network had been infiltrated by government-sponsored malware. Evidence suggested the malware {{was created by}} the same developers as Duqu and Stuxnet, in order to get intelligence that would help them better avoid detection by Kaspersky in the future. Kaspersky called it Duqu 2.0. The <b>malicious</b> <b>software</b> resided in memory to avoid detection. The hack was believed to have been done by the same group that did Duqu in 2011. It used exploits in Microsoft installer files.|$|E
25|$|Network {{firewalls}} prevent unknown {{programs and}} processes from accessing the system. However, {{they are not}} antivirus systems and make no attempt to identify or remove anything. They may protect against infection from outside the protected computer or network, and limit the activity of any <b>malicious</b> <b>software</b> which is present by blocking incoming or outgoing requests on certain TCP/IP ports. A firewall is designed to deal with broader system threats that come from network connections into the system and is not an alternative to a virus protection system.|$|E
25|$|In 2016, it came {{to light}} that Network Rail had been hacked four times up to July 2016. As most of the rail network in the United Kingdom is analogue, it would not affect anything, but Network Rail have an {{aspiration}} for the digital rail Traffic Management System to go live in 2018. An online security company, who were not commissioned by, or who work for Network Rail, discovered the hacks and declared that whilst the hacks were 'probing and not disruptive,' they could well be full of <b>malicious</b> <b>software</b> in the future.|$|E
40|$|This short paper {{describes}} an attack that exploits the online marketplace’s susceptibility to covert fraud, opaqueness of embedded software, and social engineering to hijack account access and ultimately steal money. The attacker introduces a fatal security flaw into a trusted embedded system (e. g. computer motherboard, network interface card, network router, cell phone), distributes {{it through the}} online marketplace at a plausible bargain, and then exploits the security flaw to steal information. Unlike conventional fraud, consumer risk far exceeds {{the price of the}} good. As proof of concept, the firmware on a wireless home router is replaced by an open source embedded operating system. Once installed, its DNS server is reconfigured to selectively spoof domain resolution. This instance of <b>malicious</b> embedded <b>software</b> is discussed in depth, including implementation details, attack extensions, and countermeasures. 1...|$|R
40|$|Abstract. We present Scratch, Click & Vote remote voting scheme. The {{scheme is}} {{end-to-end}} verifiable {{and allows for}} voting over the Internet. It guarantees se-curity against <b>malicious</b> hardware and <b>software</b> used by a voter; a voter’s com-puter does not get any knowledge about the voter’s choice. Moreover, it can blindly change the voter’s ballot with a small probability only. As a side result, we present a modification of the ThreeBallot that eliminates Strauss’-like attacks on this scheme...|$|R
40|$|<b>Malicious</b> {{circuits}} and <b>software</b> {{present a}} significant security risk, especially in control applications. This work {{is concerned with}} increasing the trustworthiness of control circuitry by reducing its complexity. The security benefits of substituting analog control techniques in place of digital control are analyzed, and both discrete and integrated circuit designs are demonstrated. by Eugene Kuznetsov. Thesis (M. Eng.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2011. Cataloged from PDF version of thesis. Includes bibliographical references (p. 47) ...|$|R
