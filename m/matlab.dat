10000|290|Public
25|$|<b>MATLAB</b> {{supports}} GPGPU acceleration {{using the}} Parallel Computing Toolbox and <b>MATLAB</b> Distributed Computing Server, and third-party packages like Jacket.|$|E
25|$|Its syntax is {{very similar}} to <b>Matlab,</b> and careful {{programming}} of a script will allow it to run on both Octave and <b>Matlab.</b>|$|E
25|$|Octave {{is one of}} {{the major}} free {{alternatives}} to <b>Matlab,</b> others being Scilab and FreeMat. Scilab, however, puts less emphasis on (bidirectional) syntactic compatibility with <b>Matlab</b> than Octave does.|$|E
5000|$|In <b>MATLAB's</b> Optimization Toolbox, the [...] {{function}} uses (among other methods) the BFGS Quasi-Newton method. Many of the constrained {{methods of}} the Optimization toolbox use BFGS and the variant L-BFGS. Many user-contributed quasi-Newton routines are available on <b>MATLAB's</b> file exchange.|$|R
50|$|Rotatable design: α = F1/4 (the design {{implemented}} by <b>MATLAB’s</b> ccdesign function).|$|R
5000|$|<b>MATLAB's</b> Econometrics Toolbox [...] and System Identification Toolbox [...] {{includes}} autoregressive models ...|$|R
25|$|<b>Matlab</b> scripts {{from the}} MathWorks' FileExchange {{repository}} {{are compatible with}} Octave, but can't be used legally due to the Terms of use. While often provided and uploaded by users under an Octave compatible and proper Open source BSD license, the fileexchange's Terms of use prohibit any usage beside MathWorks proprietary <b>Matlab.</b>|$|E
25|$|Figure 7 is {{a screen}} {{shot of the}} <b>Matlab</b> Demo output.|$|E
25|$|Chebfun, an {{open-source}} package, {{written in}} <b>MATLAB,</b> for computing with functions to 15-digit accuracy.|$|E
30|$|We {{can use the}} convex {{quadratic}} programming methods in <b>Matlab’s</b> Optimization Toolbox to solve the above optimization problem.|$|R
40|$|In this paper, {{we first}} {{describe}} a matricial Newton-type algorithm designed {{to solve the}} multivariable spectrum approximation problem. We then prove its global convergence. Finally, we apply this approximation procedure to multivariate spectral estimation, and test its effectiveness through simulation. Simulation shows that, {{in the case of}} short observation records, this method may provide a valid alternative to standard multivariable identification techniques such as <b>Matlab's</b> PEM and <b>Matlab's</b> N 4 SID...|$|R
40|$|In {{this paper}} an effort {{is made to}} {{represent}} the behaviour of a ship propulsion system comprising a Permanent Magnet Synchronous Motor (PMSM) driven by a 6 -pulse driving system using the Direct Torque Control (DTC) control technique. The DTC technique cited is emulated via <b>MATLAB's</b> Simulink toolbox while all study cases are performed successfully in <b>MATLAB's</b> Power System Blockset environment. © 2004 The Institution of Electrical Engineers...|$|R
25|$|The {{example is}} a {{modification}} of one taken from Mathew; Numerical methods using <b>Matlab,</b> 3rd ed.|$|E
25|$|This is the {{traditional}} format for specifying a sparse matrix in <b>MATLAB</b> (via the sparse function).|$|E
25|$|The {{following}} <b>MATLAB</b> code shows {{implementation of}} this approach on the data used in the first example above.|$|E
40|$|A {{challenge}} in using myoelectric signals {{in control of}} motorised prostheses is achieving effective signal pattern recognition and robust classification of intended motions. In this paper, the performance of <b>Matlab's</b> Multi-layer Perceptron (MLP) backpropogation training algorithms in motion classification were assessed. The test and evaluation platform used was 'BioPatRec', a Matlab-based open-source prosthetic control development environment, together with algorithms sourced from <b>Matlab's</b> neural network toolbox. The algorithms were used to interpret multielectrode myoelectric signals for motion classification, {{with the aim of}} finding the best performing algorithm and network model. The results showed that <b>Matlab's</b> trainlm and trainrp algorithms could achieve a higher accuracy than other tested MLP training algorithms (94. 13 ± 0. 037 % and 91. 09 ± 0. 047 %, respectively). Discussion of these results investigates significant features to obtain the highest performance...|$|R
40|$|Assuming no {{knowledge}} of programming, this book presents both programming concepts and <b>MATLAB's</b> built-in functions, providing a perfect platform for exploiting <b>MATLAB's</b> extensive capabilities for tackling engineering problems. It starts with programming concepts such as variables, assignments, input/output, and selection statements, moves onto loops and then solves problems using both the 'programming concept' and the 'power of MATLAB' side-by-side. In-depth coverage is given to input/output, a topic that is fundamental to many engineering applications. Ancillaries available with the text:...|$|R
30|$|We {{evaluate}} {{the performance of}} five machine learning classifiers, including Support Vector Machine (SVM), k-Nearest Neighbor (k-NN), Bagged Decision Trees (<b>Matlab’s</b> Treebagger model), Naive.|$|R
25|$|Kernel SVMs are {{available}} in many machine learning toolkits, including LIBSVM, <b>MATLAB,</b> , SVMlight, , scikit-learn, Shogun, Weka, , , OpenCV and others.|$|E
25|$|Many {{software}} packages, including <b>MATLAB,</b> Microsoft Excel, Mathematica and R, provide optimization routines {{suitable for}} the above problem.|$|E
25|$|C and C++ code can be {{integrated}} into GNU Octave by creating oct files, or using the <b>Matlab</b> compatible MEX files.|$|E
30|$|In both cases, the {{obtained}} over-determined {{systems are}} solved using the <b>MATLAB’s</b> ∖operator that makes use the QR factorization with a column pivoting method.|$|R
30|$|In this section, our {{experiments}} are implemented through <b>MATLAB’s</b> 7.0 standard ODE solver (ode 45). Three simple interval-valued Cauchy problems {{are used to}} examine our theoretical results.|$|R
50|$|In <b>MATLAB's</b> {{programming}} language, the '%' character {{indicates a}} single-line comment. Multi line comments {{are also available}} via %{ and %} brackets and can be nested, e.g.|$|R
25|$|There {{are several}} popular {{numerical}} computing {{applications such as}} <b>MATLAB,</b> TK Solver, S-PLUS, and IDL as well as free and open source alternatives such as FreeMat, Scilab, GNU Octave (similar to <b>Matlab),</b> and IT++ (a C++ library). There are also programming languages such as R (similar to S-PLUS) and Python with libraries such as NumPy, SciPy and SymPy. Performance varies widely: while vector and matrix operations are usually fast, scalar loops may vary in speed by more than an order of magnitude.|$|E
25|$|Octave {{supposedly}} treats incompatibility with <b>Matlab</b> as a bug; therefore, {{it could}} be considered a software clone, which does not infringe software copyright as per Lotus v. Borland court case.|$|E
25|$|Many {{spreadsheet}} {{programs and}} statistics packages, such as QtiPlot, LibreOffice Calc, Microsoft Excel, SAS, SPSS, Stata, DAP, gretl, R, Python, PSPP, <b>Matlab</b> and Minitab, include implementations of Student's t-test.|$|E
40|$|Provide an {{introduction}} and overview of how <b>MATLAB’s</b> calculator mode {{is used to}} implement interactive computations – Learning how real and complex numbers are assigned to variables – Learning how vectors and matrices are assigned values using simple assignment, the color operator, and the linspace and logspace functions – Understanding the priority rules for constructing mathematical expressions – Gaining a general understanding of built-in functions {{and how you can}} learn more about them with <b>MATLAB’s</b> Help facilities – Learning how to use vectors to create a simple line plot based on an equatio...|$|R
50|$|Also through control export mechanism, ADAMS/Control {{can provide}} <b>MATLAB's</b> Control System Toolbox {{with a state}} space model of system under study to be used further for design of controller.|$|R
5000|$|AEV 3070/7f - 2013 - 2014 [...] - An {{artificial}} evolutionary {{analysis of}} environments: Artificial speech and singing synthesis, computer assisted electronics, assisted by <b>Matlabs</b> computational autonomy [...] - study:10 ...|$|R
25|$|Undergraduate alumni founded, or co-founded, {{companies}} such as LCD manufacturer Varitronix, Hotmail, Compaq, and MathWorks (which created <b>Matlab),</b> while graduate students founded, or co-founded, {{companies such}} as Intel, TRW, and the non-profit educational organization, the Exploratorium.|$|E
25|$|Constrained FBA-ready {{metabolic}} {{models can}} be analyzed using software such as the COBRA toolbox(requires <b>MATLAB),</b> SurreyFBA, or the web-based FAME. Additional software packages have been listed elsewhere. A comprehensive review of all such software and their functionalities has been recently reviewed.|$|E
25|$|Electronic {{system-level}} design: This step {{creates the}} user functional specification. The user may {{use a variety}} of languages and tools to create this description. Examples include a C/C++ model, SystemC, SystemVerilog Transaction Level Models, Simulink and <b>MATLAB.</b>|$|E
3000|$|Distribution fitting {{was done}} with <b>MATLAB’s</b> Statistics and Machine Learning Toolbox [32], i.e. the fitdist {{built-in}} function, based on maximum-likelihood parameter estimation. In addition, the Akaike information criterion (AIC) [33], χ [...]...|$|R
5000|$|Dormand-Prince is {{currently}} the default method in <b>MATLAB's</b> [...] solver and is the default choice for the Simulink's model explorer solver. A Fortran free software implementation of the algorithm called [...] is also available.|$|R
30|$|The {{formulated}} neural {{mass model}} can, {{depending on the}} parameters, become a stiff system of ODEs. In that case, <b>Matlab’s</b> ode 23 s is used to for numerical integration, while ode 45 is used otherwise.|$|R
