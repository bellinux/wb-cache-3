1|10000|Public
40|$|We {{examine the}} notion of {{symmetry}} in quantum field theory from a fundamental representation theoretic point of view. This leads us to a generalization {{expressed in terms of}} quantum groups and braided categories. It also unifies the conventional concept of symmetry with that of exchange statistics and the spin-statistics relation. We show how this quantum group symmetry is reconstructed from the traditional (super) group symmetry, statistics and spin-statistics relation. The old question of extending the Poincare group to unify external and internal symmetries (solved by supersymmetry) is reexamined in the new framework. The reason why we should allow supergroups in this case becomes completely transparent. However, the true symmetries are not expressed by groups or supergroups here but by ordinary (not super) quantum groups. We show in this generalized framework that supersymmetry is the <b>most</b> <b>general</b> <b>unification</b> of internal and space-time symmetries provided that all particles are either bosons or fermions. Finally, we demonstrate with some examples how quantum geometry provides a natural setting for the construction of super-extensions, super-spaces, super-derivatives etc...|$|E
40|$|Abstract. Unifiability {{algorithms}} for higher-order logic are algorithms which {{decide the}} unification problem for sub-classes of higher-order logic {{by providing a}} witness. They contrast with unification procedures by deciding unification problems of infinitary nature, which might have infinitely many <b>most</b> <b>general</b> unifiers. <b>Unification</b> procedures for these subclasses return {{a complete set of}} these unifiers and do not terminate. The common practice in automated deduction for higher-order logic is to utilize unification procedures and to force their termination by restricting the size of the generated unifiers. The unifiability algorithms, which are complete for certain sub-classes, allow us to have a more semantical approach. In this paper we claim that the standard resolution calculi for higher-order automated deduction do not take full advantage of the strengths of these algorithms and suggest a new calculus. We prove that this calculus can have an exponential speed-up over the traditional calculi. ...|$|R
30|$|See, {{for example}} [2], for the <b>general</b> theory of <b>unification</b> and {{algorithms}} for computing a <b>most</b> <b>general</b> unifier {{for a set}} of term equalities.|$|R
30|$|Recently, Luo and Srivastava [16] {{introduced}} more <b>general</b> <b>unification</b> (and generalization) of {{the above-mentioned}} three {{families of the}} generalized Apostol-type polynomials.|$|R
40|$|Unification modulo {{the theory}} of Boolean algebras has been {{investigated}} by several autors. Nevertheless, the exact complexity of the decision problem for unification with constants and <b>general</b> <b>unification</b> was not known. In this research note, we show that the decision problem is Π p 2 - complete for unification with constants and PSPACE-complete for <b>general</b> <b>unification.</b> In contrast, the decision problem for elementary unification (where the terms to be unified contain only symbols of the signature of Boolean algebras) is "only" NP-complete...|$|R
40|$|A unifier of {{two terms}} s and t is a {{substitution}} sigma such that ssigma=tsigma and for first-order terms {{there exists a}} <b>most</b> <b>general</b> unifier sigma {{in the sense that}} any other unifier delta can be composed from sigma with some substitution lambda, i. e. delta=sigmacirclambda. This notion can be generalised to E-unificationwhere E is an equational theory, =_E is equality under E andsigmaa is an E-unifier if ssigma =_Etsigma. Depending on the equational theory E, the set of <b>most</b> <b>general</b> unifiers is always a singleton (as above), or it may have more than one, either finitely or infinitely many unifiers and for some theories it may not even exist, in which case we call the theory of type nullary. String unification (or Löb 2 ̆ 7 s problem, Markov 2 ̆ 7 s problem, unification of word equations or Makanin 2 ̆ 7 s problem as it is often called in the literature) is the E-unification problem, where E = f(x,f(y,z)) =f(f(x,y),z), i. e. unification under associativity or string unification once we drop the fs and the brackets. It is well known that this problem is infinitary and decidable. Essential unifiers, as introduced by Hoche and Szabo, generalise the notion of a <b>most</b> <b>general</b> unifier and have a dramatically pleasant effect on the set of <b>most</b> <b>general</b> unifiers: the set of essential unifiers is often much smaller than the set of <b>most</b> <b>general</b> unifiers. Essential <b>unification</b> may even reduce an infinitary theory to an essentially finitary theory. The most dramatic reduction known so far is obtained for idempotent semigroups or bands as they are called in computer science: bands are of type nullary, i. e. there exist two unifiable terms s and t, but the set of <b>most</b> <b>general</b> unifiers is not enumerable. This is in stark contrast to essential unification: the set of essential unifiers for bands always exists and is finite. We show in this paper that the early hope for a similar reduction of unification under associativity is not justified: string unification is essentially infinitary. But we give an enumeration algorithm for essential unifiers. And beyond, this algorithm terminates when the considered problem is finitary...|$|R
40|$|Combinatorial {{interpretation}} of the fibonomial coefficients {{as a number of}} choices of specific finite subsets of an infinite partially ordered set of not binomial type is proposed. This partially ordered set is here defined via characteristic matrix of the corresponding partial order relation. Relevance of the proposal to more <b>general</b> <b>unification</b> treatment is indicated...|$|R
40|$|We {{present a}} <b>general</b> <b>unification</b> {{algorithm}} modulo Presburger Arithmetic for a restricted class of modularly specified theories where function {{symbols of the}} target theory have non arithmetic codomain sorts. Additionally, we comment on conditions guaranteeing decidability of matching and unification problems modulo more general theories than the arithmetic ones, which appear when automated deduction is implemented by combining conditional rewriting techniques and decision algorithms for built-in predicates...|$|R
40|$|We present REGULUS, an Open Source {{environment}} which compiles typed unification grammars into context free grammar language models {{compatible with}} the Nuance Toolkit. The environ- ment includes a large <b>general</b> <b>unification</b> grammar of English and corpus-based tools for creating efficient domainspecific recognisers from it. We will demo applications built using the system, including a speech translator and a command and control system for a simulated robotic domain, and show how the development environment {{can be used to}} edit and extend them...|$|R
40|$|Projet FORMELWe {{extend the}} ML {{language}} by alowing a sorted regular equational theory on types for which unification is decidable and unitary. We {{prove that the}} extension keeps principal typings and subject reduction. A new set of typing rules is proposed so that type generalization is simpler and more efficient. We consider typing problems as <b>general</b> <b>unification</b> problems, which we solve with a formalism of unificands. Unificands naturally deal with sharing between types and {{lead to a more}} efficient type inference algorithm by splitting it into more elementary steps...|$|R
50|$|If the <b>most</b> <b>general</b> unifier {{is used in}} {{condensed}} detachment, {{then the}} logical result is the <b>most</b> <b>general</b> conclusion {{that can be made}} in the given inference with the given second expression. Since any weaker inference you can get is a substitution instance of the <b>most</b> <b>general</b> one, nothing less than the <b>most</b> <b>general</b> unifier is ever used in practice.|$|R
40|$|The {{purpose of}} this paper is not to give an {{overview}} of the state of art in unification theory. It is intended to be a short introduction into the area of equational unification which should give the reader a feeling for what unification theory might be about. The basic notions such as complete and minimal complete sets of unifiers, and unification types of equational theories are introduced and illustrated by examples. Then we shall describe the original motivations for considering unification (in the empty theory) in resolution theorem proving and term rewriting. Starting with Robinson 2 ̆ 7 s first unification algorithm it will be sketched how more efficient unification algorithms can be derived. We shall then explain the reasons which lead to the introduction of unification in non-empty theories into the above mentioned areas theorem proving and term rewriting. For theory unification it makes a difference whether single equations or systems of equations are considered. In addition, one has to be careful with regard to the signature over which the terms of the unification problems can be built. This leads to the distinction between elementary unification, unification with constants, and <b>general</b> <b>unification</b> (where arbitrary free function symbols may occur). Going from elementary <b>unification</b> to <b>general</b> <b>unification</b> is an instance of the so-called combination problem for equational theories which can be formulated as follows: Let E, F be equational theories over disjoint signatures. How can unification algorithms for E, F be combined to a unification algorithm for the theory E cup F...|$|R
5000|$|In <b>general,</b> the <b>unification</b> {{process of}} the two militaries - under the slogan [...] "Armee der Einheit" [...] (or [...] "Army of Unity") - has been seen {{publicly}} as a major success and an example for {{other parts of the}} society.|$|R
40|$|Generic (polymorphic) type-safe {{containers}} are {{the primary}} motivation for generics (in Ada, Eiffel, and recently proposed additions to Java and C#) and templates (in C++). We studied buffer classes and found {{that they could not}} be unified by type parameters. At times, unification required non-type parameters (e. g., parameters representing operators, keywords or algorithmic details) and at other times – the nature of variations was not parametric which called for a more <b>general</b> <b>unification</b> mechanism. Investigation of the reasons behind the observed symptoms revealed that unification problems were caused by “feature combinations”: Other than by type, each class was also affected by yet other features and implementation of various features interacted with classes in rather chaoti...|$|R
50|$|When {{applying}} EBL to NLP, the operationality criteria can be hand-crafted, or can beinferred {{from the}} treebank using either {{the entropy of}} its or-nodesor a target coverage/disambiguation trade-off (= recall/precision trade-off = f-score).EBL {{can also be used}} to compile grammar-based language models for speech recognition, from <b>general</b> <b>unification</b> grammars.Note how the utility problem, first exposed by Minton, was solved by discarding the original grammar/domain theory, and that the quoted articles tend to contain the phrase grammar specialization---quite the opposite of the original term explanation-based generalization. Perhaps the best name for this technique would be data-driven search space reduction.Other people who worked on EBL for NLP include Guenther Neumann, Aravind Joshi, Srinivas Bangalore, and Khalil Sima'an.|$|R
40|$|We {{consider}} the Proca field with dynamical term {{given by the}} exterior derivative {{with respect to the}} <b>most</b> <b>general</b> connection; the <b>most</b> <b>general</b> Proca field equations are given, and a discussion about the propagation and the geometrical properties are presented: it is shown that this generalization is inconsistent. So the standard theory is already the <b>most</b> <b>general</b> Proca Theory possible. Comment: 6 page...|$|R
40|$|The {{most basic}} {{aspects of the}} <b>General</b> Grand <b>Unification</b> Model (GGU-model) are {{delineated}} in [7]. Attempts are made in [3] to illustrate the developmental paradigms associated with event sequences. In this note, the methods demonstrated in [3] are formalized and compared with the developmental paradigms defined formall...|$|R
40|$|AbstractUnification {{problems}} are identified with conjunctions of equations between simply typed λ-terms where free {{variables in the}} equations can be universally or existentially quantified. Tow schemes for simplifying quantifier alternation, called Skolemization and raising (a dual of Skolemization), are presented. In this setting where variables of functional type can be quantified and not all types contain closed terms, the naive generalization of first-order Skolemization has several technical problems that are addressed. The method of searching for pre-unifiers described by Huet is easily extended to the mixed prefix setting, although solving flexible-flexible unification problems is undecidable since types may be empty. Unification problems may have numerous incomparable unifiers. Occasionally, unifiers share common factors and general of these are presented. Various optimizations on the <b>general</b> <b>unification</b> search problem are as discussed...|$|R
40|$|In this paper, we {{describe}} and evaluate an Open Source medical speech translation system (MedSLT) intended for safety-critical applications. The {{aim of this}} system is to eliminate the language barriers in emergency situation. It translates spoken questions from English into French, Japanese and Finnish in three medical subdomains (headache, chest pain and abdominal pain), using a vocabulary of about 250 - 400 words per sub-domain. The architecture is a compromise between fixedphrase translation {{on one hand and}} complex linguistically-based systems on the other. Recognition is guided by a Context Free Grammar Language Model compiled from a <b>general</b> <b>unification</b> grammar, automatically specialised for the domain. We present an evaluation of this initial prototype that shows the advantages of this grammar-based approach for this particular translation task in term of both reliability and use...|$|R
40|$|Unification {{problems}} are identified with conjunctions of equations between simply typed λ-terms where free {{variables in the}} equations can be universally or existentially quantified. Two schemes for simplifying quantifier alternation, called Skolemization and raising (a dual of Skolemization), are presented. In this setting where variables of functional type can be quantified and not all types contain closed terms, the naive generalization of firstorder Skolemization has several technical problems that are addressed. The method of searching for pre-unifiers described by Huet is easily extended to the mixed prefix setting, although solving flexible-flexible unification problems is undecidable since types may be empty. Unification problems may have numerous incomparable unifiers. Occasionally, unifiers share common factors and several of these are presented. Various optimizations on the <b>general</b> <b>unification</b> search problem are as discussed. 1...|$|R
40|$|Abstract: 2 ̆ 2 In {{this paper}} {{we show that}} any system of {{equations}} over a free nilpotent group of class c is either unitary or nullary. In fact, such a system either has a <b>most</b> <b>general</b> solution (akin to the <b>most</b> <b>general</b> solution {{of a system of}} linear diophantine equations), or every solution has a proper generalization. In principle we provide an algorithm for determining whether or not a <b>most</b> <b>general</b> solution exists, and exhibiting it if it does. This requires solving a system of linear diophantine equations for approximately c(k over c) different right hand sides, where k is the number of parameters which occur in a <b>most</b> <b>general</b> solution of the system in the variety of abelian groups. 2 ̆...|$|R
2500|$|The {{assumption}} that free variables are universally quantified {{is what makes}} the application of a <b>most</b> <b>general</b> unifier a sound rule: since [...] means that [...] is true for every possible value of , then [...] is true for the term [...] that the <b>most</b> <b>general</b> unifier replaces [...] with.|$|R
5000|$|... ‘The <b>most</b> <b>general</b> factive stative attitude’, Analysis, 2014. 561-565.|$|R
25|$|Abelian {{categories}} are the <b>most</b> <b>general</b> setting for homological algebra.|$|R
2500|$|The <b>most</b> <b>general</b> {{definition}} of the coefficient of determination is ...|$|R
50|$|BSDF (Bidirectional {{scattering}} distribution function) is the <b>most</b> <b>general</b> function.|$|R
5000|$|The <b>most</b> <b>general</b> and {{fundamental}} formula for Joule heating is: ...|$|R
5000|$|The <b>most</b> <b>general</b> {{definition}} of the coefficient of determination is ...|$|R
5000|$|... #Subtitle level 2: Side-effects {{of using}} the <b>most</b> <b>general</b> type ...|$|R
40|$|For {{dynamical}} triangulations in dimensions d<= 4 the <b>most</b> <b>general</b> {{action has}} two couplings. We {{note that the}} <b>most</b> <b>general</b> action for d= 5 has three couplings. We explore this larger coupling space using Monte Carlo simulations. Initial results indicate evidence for non-trivial phase structure. Comment: 3 page contribution to Lattice' 97 proceeding...|$|R
2500|$|The {{procedure}} [...] specializes the polytype [...] by copying {{the term}} and replacing the bound type variables consistently by new monotype variables. [...] produces a new monotype variable. Likely, [...] has {{to copy the}} type introducing new variables for the quantification to avoid unwanted captures. Overall, the algorithm now proceeds by always making the <b>most</b> <b>general</b> choice leaving the specialization to the unification, which by itself produces the <b>most</b> <b>general</b> result. As noted above, the final result [...] has to be generalized to [...] in the end, to gain the <b>most</b> <b>general</b> type for a given expression.|$|R
2500|$|The <b>most</b> <b>general</b> Laguerre-like polynomials, {{after the}} domain has been shifted ...|$|R
30|$|Clearly, every quasi-contraction mapping is the <b>most</b> <b>general</b> of above mappings.|$|R
5000|$|... "value is the <b>most</b> <b>general</b> {{category}} of the description of reality" ...|$|R
5000|$|The {{science of}} the <b>most</b> <b>general</b> laws of truth (Gottlob Frege).|$|R
5000|$|The <b>most</b> <b>general</b> {{continuous}} form {{is given}} by the differential equation ...|$|R
