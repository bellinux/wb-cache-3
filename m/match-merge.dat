4|1|Public
40|$|A {{data set}} might contain {{multiple}} observations per person. Suppose {{you want to}} keep all observations for a person if at least one observation for that person meets certain criteria. This paper shows how to use PROC SQL to select all observations when any observation is of interest. The first method uses a subquery; the second method uses the GROUP BY and HAVING clauses. The SQL techniques are compared and contrasted with a traditional DATA step <b>match-merge...</b>|$|E
40|$|In {{this paper}} we {{describe}} graph-based parallel algorithms for entity resolution that improve over the map-reduce approach. We compare two approaches to parallelize a Locality Sensitive Hashing (LSH) accelerated, Iterative <b>Match-Merge</b> (IMM) entity resolution technique: BCP, where records hashed together are compared {{at a single}} node/reducer, vs an alternative mechanism (RCP) where comparison load is better distributed across processors especially {{in the presence of}} severely skewed bucket sizes. We analyze the BCP and RCP approaches analytically as well as empirically using a large synthetically generated dataset. We generalize the lessons learned from our experience and submit that the RCP approach is also applicable in many similar applications that rely on LSH or related grouping strategies to minimize pair-wise comparisons...|$|E
40|$|Program {{evaluation}} {{often requires}} the {{linkage of records}} from independently maintained data systems (e. g., substance abuse treatment and criminal justice). Data entry errors (e. g., misspelled names, transposed digits) complicate the linkage task. In this investigation, three record-linkage algorithms (<b>match-merge,</b> common patient identifier, and probabilistic) are used to link recipients of publicly funded outpatient substance abuse treatment to statewide arrest and death data. The impact of record-linkage algorithm on performance indicators, prevalence indicators (i. e., arrest rates, and death rates) and Hazard Ratios derived from a multivariate survival analysis predicting arrests following admission to outpatient substance abuse treatment is evaluated. Choice of algorithm substantially impacted estimates of arrest rates (range: year prior to admission: 39. 8 %- 53. 4 %, year following admission: 24. 7 %- 33. 1). The Hazard Ratio associated with “prior arrest ” {{as a predictor of}} arrest following admission to outpatient substance abuse treatment (HR range:. 20 -. 37, p<. 05) was also influenced by algorithm choice...|$|E
40|$|Are you {{considering}} whether to use a DATA step or PROC SQL step in your next project? This presentation explores {{the similarities and differences}} between DATA step and PROC SQL programming techniques. Topics include IF-THEN-ELSE, SELECT-WHEN, and PROC SQL CASE expressions conditional logic concepts and constructs; and the techniques for constructing effective merges and joins. Attendees explore examples that contrast DATA step versus PROC SQL programming techniques to conduct conditional logic scenarios, one-to-one <b>match-merges</b> and match-joins, and an assortment of inner and outer join programming constructs...|$|R
40|$|In many {{government}} applications we often find that information about entities, such as persons, {{are available in}} disparate data sources such as passports, driving licences, bank accounts, and income tax records. Similar scenarios are commonplace in large enterprises having multiple customer, supplier, or partner databases. Each data source maintains different aspects of an entity, and resolving entities based on these attributes is a well-studied problem. However, in many cases documents in one source reference those in others; e. g., a person may provide his driving-licence number while applying for a passport, or vice-versa. These links define relationships between documents of the same entity (as opposed to inter-entity relationships, which are also often used for resolution). In this paper we describe an algorithm to cluster documents that are highly likely {{to belong to the}} same entity by exploiting inter-document references in addition to attribute similarity. Our technique uses a combination of iterative graph-traversal, locality-sensitive hashing, iterative <b>match-merge,</b> and graph-clustering to discover unique entities based on a document corpus. A unique feature of our technique is that new sets of documents can be added incrementally while having to re-resolve only a small subset of a previously resolved entity-document collection. We present performance and quality results on two data-sets: a real-world database of companies and a large synthetically generated `population' database. We also demonstrate benefit of using inter-document references for clustering in the form of enhanced recall of documents for resolution. Comment: 15 pages, 8 figures, patented wor...|$|E

