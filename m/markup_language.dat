4961|542|Public
5|$|After {{creating}} custom plugins for the 3D {{computer graphics}} software, Burrows {{claimed that the}} team could create and test entire race tracks within five minutes. The custom plugin used for creating tracks consisted of a 450 kilobyte file, which contained polygon subdividing and data on artificial intelligence, effectively cutting down the time to create tracks from six hours to five minutes. In order to the play the game as soon as possible, the team developed the user interface in the XML <b>markup</b> <b>language,</b> which allowed revisions {{to be made for}} the content at any time. However, Burrows recalled that the only downside to converting everything to XML was that the game was always in danger of becoming too large for the PlayStation Portable's Universal Media Disc. The game's cover art was designed by Popgun, who also designed the logos for games released by EA Sports.|$|E
25|$|The {{essence of}} why {{extensible}} markup languages are necessary is explained at <b>Markup</b> <b>language</b> (for example, see <b>Markup</b> <b>language</b> § XML) and at Standard Generalized <b>Markup</b> <b>Language.</b>|$|E
25|$|Extensible Hypertext <b>Markup</b> <b>Language</b> (XHTML) {{is part of}} {{the family}} of XML markup languages. It mirrors or extends {{versions}} of the widely used Hypertext <b>Markup</b> <b>Language</b> (HTML), the language in which Web pages are formulated.|$|E
50|$|Speech {{synthesis}} <b>markup</b> <b>languages</b> are {{distinguished from}} dialogue <b>markup</b> <b>languages.</b> VoiceXML, for example, includes tags related to speech recognition, dialogue management and touchtone dialing, {{in addition to}} text-to-speech markup.|$|R
50|$|Tools such {{as these}} are {{developed}} using <b>markup</b> <b>languages</b> specific to bioinformatics research. Many of these <b>markup</b> <b>languages</b> are freely available for use in software development, such as CellML, NeuroML, and SBML.|$|R
50|$|XHTML {{modularization}} is {{a methodology}} for producing modularized <b>markup</b> <b>languages</b> {{in a number}} of different schema languages (currently DTDs, XML Schema and Relax NG) so that the modules can easily be plugged together to create <b>markup</b> <b>languages.</b>|$|R
25|$|While HTML, {{prior to}} HTML5, {{was defined as}} an {{application}} of Standard Generalized <b>Markup</b> <b>Language</b> (SGML), a flexible <b>markup</b> <b>language</b> framework, XHTML is an application of XML, a more restrictive subset of SGML. XHTML documents are well-formed and may therefore be parsed using standard XML parsers, unlike HTML, which requires a lenient HTML-specific parser.|$|E
25|$|Qt Quick's <b>markup</b> <b>language</b> (available since Qt 4.7) uses JavaScript for its {{application}} logic. Its declarative syntax is also similar to JavaScript.|$|E
25|$|The Amiga Skyline BBS {{software}} {{was the first}} in 1987 featuring a script <b>markup</b> <b>language</b> communication protocol called Skypix which was capable of giving the user a complete graphical interface, featuring rich graphic content, changeable fonts, mouse-controlled actions, animations and sound.|$|E
50|$|User {{interface}} <b>markup</b> <b>languages,</b> {{like most}} <b>markup</b> and programming <b>languages,</b> rely upon sub-application runtimes to interpret and render the markup code as program code {{that can be}} processed and put out in the desired form. In XML-based user interface <b>markup</b> <b>languages,</b> which tend to rely upon a web browser's layout engine as a runtime, most of the code is re-interpreted to the layout engine as JavaScript; this means that JavaScript {{can be used to}} extend the user interface <b>markup</b> <b>languages</b> to extents that are not covered by the present functionality of the layout engine.|$|R
40|$|We {{present an}} {{approach}} for querying collections of heterogeneous linguistic corpora that are an-notated on multiple layers using arbitrary XML-based <b>markup</b> <b>languages.</b> An OWL ontology {{is used to}} homogenise the conceptually different <b>markup</b> <b>languages</b> so that a common querying framework can be established...|$|R
50|$|MathType also {{supports}} the math <b>markup</b> <b>languages</b> TeX, LaTeX and MathML. LaTeX can be entered directly into MathType, and MathType equations in Microsoft Word {{can be converted}} to and from LaTeX. MathType supports copying to and pasting from any of these <b>markup</b> <b>languages.</b>|$|R
25|$|While {{the idea}} of <b>markup</b> <b>language</b> {{originated}} with text documents, there is increasing use of markup languages in the presentation {{of other types of}} information, including playlists, vector graphics, web services, content syndication, and user interfaces. Most of these are XML applications, because XML is a well-defined and extensible language.|$|E
25|$|Since January 2000, all W3C Recommendations for HTML {{have been}} based on XML rather than SGML, using the {{abbreviation}} XHTML (Extensible HyperText <b>Markup</b> <b>Language).</b> The language specification requires that XHTML Web documents must be well-formed XML documents. This allows for more rigorous and robust documents while using tags familiar from HTML.|$|E
25|$|In recent years, {{a number}} of small and largely unstandardized markup {{languages}} have been developed to allow authors to create formatted text via web browsers, for use in wikis and web forums. These are sometimes called lightweight markup languages. Markdown or the <b>markup</b> <b>language</b> used by Wikipedia are examples of such wiki markup.|$|E
50|$|Some {{characteristics}} of the <b>markup</b> <b>languages.</b>|$|R
50|$|Many <b>markup</b> <b>languages</b> such as HTML, MXML, XAML, XSLT {{or other}} {{user-interface}} <b>markup</b> <b>languages</b> are often declarative. HTML, for example, only describes what should {{appear on a}} webpage - it specifies neither control flow rendering a page nor its possible interactions with a user.|$|R
5000|$|Other <b>markup</b> <b>languages</b> {{incorporated}} into existing frameworks are: ...|$|R
25|$|HyperText <b>Markup</b> <b>Language</b> (HTML), {{one of the}} {{document}} formats of the World Wide Web, is an instance of SGML (though, strictly, it does not comply with all the rules of SGML), and follows many of the markup conventions used in the publishing industry in the communication of printed work between authors, editors, and printers.|$|E
25|$|Though the SVG Specification {{primarily}} {{focuses on}} vector graphics <b>markup</b> <b>language,</b> its design includes the basic capabilities of a page description language like Adobe's PDF. It contains provisions for rich graphics, and {{is compatible with}} CSS for styling purposes. SVG has the information needed to place each glyph and image in a chosen location on a printed page.|$|E
25|$|SVG {{has been}} in {{development}} within the World Wide Web Consortium (W3C) since 1999, after six competing proposals for vector graphics languages had been submitted to the consortium during 1998. The early SVG Working Group decided not to develop any of the commercial submissions, but {{to create a new}} <b>markup</b> <b>language</b> that was informed by but not really based on any of them.|$|E
40|$|The {{mathematical}} {{notion of}} “category ” {{in the context}} of <b>markup</b> <b>languages</b> raises the idea of widespread use of reliable automatic translations between <b>markup</b> <b>languages.</b> LATEX profiles, which are dialects of LATEX with a fixed command vocabulary where all macro expansions must be effective in that vocabulary, are suitable domains for defining translations to other profiles and, where sensible, to other <b>markup</b> <b>languages.</b> The construction of reliable translators from several journal-neutral LATEX profiles to many journal-specific LATEX profiles would eliminate the need for technical editing in the production flow for academic journals...|$|R
5000|$|MSML, MSCML: <b>markup</b> <b>languages</b> {{to control}} {{telephony}} media servers.|$|R
5000|$|Main {{differences}} from other User interface <b>markup</b> <b>languages</b> : ...|$|R
25|$|The Systems Biology <b>Markup</b> <b>Language</b> (SBML) is a {{representation}} format, based on XML, for communicating and storing computational models of biological processes. It {{is a free}} and open standard with widespread software support and a community of users and developers. SBML can represent many different classes of biological phenomena, including metabolic networks, cell signaling pathways, regulatory networks, infectious diseases, and many others. It has been proposed as a standard for representing computational models in systems biology today.|$|E
25|$|The first {{language}} {{to make a}} clean distinction between structure and presentation was Scribe, developed by Brian Reid and described in his doctoral thesis in 1980. Scribe was revolutionary {{in a number of}} ways, not least that it introduced the idea of styles separated from the marked up document, and of a grammar controlling the usage of descriptive elements. Scribe influenced the development of Generalized <b>Markup</b> <b>Language</b> (later SGML) and is a direct ancestor to HTML and LaTeX.|$|E
25|$|Syntax {{highlighting}} is {{a feature}} of text editors that are used for programming, scripting, or markup languages, such as HTML. The feature displays text, especially source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a <b>markup</b> <b>language</b> as both structures and syntax errors are visually distinct. Highlighting {{does not affect the}} meaning of the text itself; it is intended only for human readers.|$|E
50|$|The Wireless Application Environment (WAE) space defines application-specific <b>markup</b> <b>languages.</b>|$|R
5000|$|Mathematical <b>markup</b> <b>languages</b> are {{computer}} notations for representing mathematical formulae.|$|R
40|$|We {{describe}} a distributed system architecture {{that supports the}} integration of different front-office trading systems with middle and back-office systems, each {{of which have been}} procured from different vendors. The architecture uses a judicious combination of object-oriented middleware and <b>markup</b> <b>languages.</b> In this combination an object request broker implements reliable trade data transport. <b>Markup</b> <b>languages,</b> particularly XML, are used to address data integration problems. We show that the strengths of middleware and <b>markup</b> <b>languages</b> are complementary and discuss the benefits of deploying middleware and <b>markup</b> <b>languages</b> in a synergistic manner. 1 Introduction An increasing number of distributed systems are not built from scratch but rather integrate legacy systems or commercial off-the-shelf (COTS) components. These components may not have been built to be integrated and are commonly heterogeneous. The heterogeneity may exhibit itself in the use of different programming languages, [...] ...|$|R
25|$|For exchanging the {{extracted}} models – {{in particular}} {{for use in}} predictive analytics– the key standard is the Predictive Model <b>Markup</b> <b>Language</b> (PMML), which is an XML-based language developed by the Data Mining Group (DMG) and supported as exchange format by many data mining applications. As the name suggests, it only covers prediction models, a particular data mining task of high importance to business applications. However, extensions to cover (for example) subspace clustering have been proposed independently of the DMG.|$|E
25|$|Context-free grammars {{arise in}} {{linguistics}} {{where they are}} used to describe the structure of sentences and words in a natural language, and they were in fact invented by the linguist Noam Chomsky for this purpose, but have not really lived up to their original expectation. By contrast, in computer science, as the use of recursively-defined concepts increased, they were used more and more. In an early application, grammars are used to describe the structure of programming languages. In a newer application, they are used in {{an essential part of the}} Extensible <b>Markup</b> <b>Language</b> (XML) called the Document Type Definition.|$|E
25|$|The use of {{parentheses}} is Lisp's most immediately obvious {{difference from}} other programming language families. As a result, students have long given Lisp nicknames such as Lost In Stupid Parentheses, or Lots of Irritating Superfluous Parentheses. However, the S-expression syntax is {{also responsible for}} much of Lisp's power: the syntax is extremely regular, which facilitates manipulation by computer. However, the syntax of Lisp {{is not limited to}} traditional parentheses notation. It can be extended to include alternative notations. For example, XMLisp is a Common Lisp extension that employs the metaobject protocol to integrate S-expressions with the Extensible <b>Markup</b> <b>Language</b> (XML).|$|E
50|$|<b>Markup</b> <b>languages</b> also place {{restrictions}} on where character references can occur.|$|R
50|$|Some <b>markup</b> <b>languages,</b> such as SGML, {{preserve}} {{white space}} as written.|$|R
2500|$|Reference {{material}} for the XML document <b>markup</b> <b>languages</b> defined by the Standard ...|$|R
