57|558|Public
5000|$|In 1904, Case {{introduced}} the first all-steel thresher <b>machine.</b> <b>Case</b> sold their first gasoline tractor that year, {{and established a}} continuous presence in most of Europe when the company won the first place in a plowing contest held in the so-called [...] "old continent". Case at this time developed a wide line of products: threshers, binders, graders, water tanks, plows, buggies, and even automobiles.|$|E
40|$|Abstract Stochastic two-objective {{scheduling}} {{to minimize}} both the expected value and {{the variance of}} total flow time {{is one of the}} most interesting subjects for shop-floor managers. This paper develops a heuristic method for generating a set of nondominated schedules to this two-objective scheduling problem in a parallel <b>machine</b> <b>case,</b> on the basis of the heuristic method proposed for a single <b>machine</b> <b>case</b> by Jung et aZ. (1990). Introducing some new categories of the set of nondominated schedules, this paper proposes an interactive system (ISMSS) for selecting a preferred schedule from among the set of nondominated schedules. 1...|$|E
40|$|Helen Frowe (2006 / 2010) {{contends that}} there is a {{substantial}} moral difference between killing and letting die, arguing that in Michael Tooley's infamous <b>machine</b> <b>case</b> it is morally wrong to flip a coin to determine who lives or dies. Here I argue that Frowe fails to show that killing and letting die are morally inequivalent. However, I believe that she has succeeded in showing that it is wrong to press the button in Tooley's case, where pressing the button will change who lives and dies. I argue that because killing and letting die are morally equivalent {{we have no reason to}} press the button in the <b>machine</b> <b>case.</b> Pressing the button in this case is morally wrong because there is no reason to do it; to press the button is to treat matters of life and death irreverently...|$|E
30|$|The two <b>machining</b> <b>cases</b> {{mentioned}} above {{are described as}} follows.|$|R
5000|$|... #Caption: Elements d1 and a1 {{bear and}} slide on each other, {{creating}} a seal at their interface. One group of parts {{is connected to}} the rotating shaft and the other to the <b>machine's</b> <b>case.</b> The spring keeps the elements tight against each other, maintaining the seal and allowing for wear.|$|R
40|$|The {{answering}} machine paradox has relatively recently sparked some debate regarding Kaplan’s Demonstrative (1977). A popular approach {{to solve the}} {{answering machine}} paradox has been to reject Kaplan’s proper context thesis whilst largely maintaining his framework for indexicals. In this thesis I will firstly present two new answering <b>machine</b> type <b>cases</b> and argue that the existing solutions to the answering machine paradox cannot deal with these cases. Then, I will propose a near-side pragmatic solution to the answering machine paradox that adequately deals with these new answering <b>machine</b> <b>cases</b> {{in a way that}} adheres with our pre-theoretical intuitions...|$|R
40|$|Outline: • Brief {{history of}} {{linguistic}} self-reference in mathematical logic. • Meaning, achievement & applications of machine self-reference. • Self-modeling/self-reflection: segue from <b>machine</b> <b>case</b> {{to the human}} refective component of consciousness (other aspects of the complex phenomenon of consciousness, e. g., awareness and qualia, are not treated). • What use is self-modeling/reference? Lessons from machine cases. Summar...|$|E
40|$|This report summarises {{part of a}} {{research}} programme investigating prototyping methods for real-time systems. Previous work has examined Ada tasking as an animation tool for data flow models {{and the use of}} data flow to model real time system functional requirements. The present report describes work carried out in animating a Vending <b>Machine</b> <b>case</b> study using the sequential programming paradigm...|$|E
40|$|This paper {{presents}} a novel {{idea for the}} general case of the Common Due-Date (CDD) scheduling problem. The problem is about scheduling {{a certain number of}} jobs on a single or parallel machines where all the jobs possess different processing times but a common due-date. The objective of the problem is to minimize the total penalty incurred due to earliness or tardiness of the job completions. This work presents exact polynomial algorithms for optimizing a given job sequence for single and identical parallel machines with the run-time complexities of O(n n) for both cases, where n is the number of jobs. Besides, we show that our approach for the parallel <b>machine</b> <b>case</b> is also suitable for non-identical parallel machines. We prove the optimality for the single <b>machine</b> <b>case</b> and the runtime complexities of both. Henceforth, we extend our approach to one particular dynamic case of the CDD and conclude the chapter with our results for the benchmark instances provided in the OR-library. Comment: Book Chapter 22 page...|$|E
5000|$|... #Caption: Munitionettes <b>machining</b> shell <b>cases</b> in the New Gun Factory, Woolwich Arsenal, London ...|$|R
5000|$|Case CE (USA) — SD (brands the Ammann/Sta <b>machines</b> as <b>Case</b> in the USA ...|$|R
30|$|However, meta-heuristic {{algorithms}} {{have not}} {{been used in the}} context of parallel <b>machines</b> <b>case.</b> We propose, for the first time, three meta-heuristic algorithms for the parallel identical machines scheduling problem with weighted late work criterion and common due date which is denoted by P|d_j=d|Y_w. Three meta-heuristic algorithms include ant colony system algorithm (ACS), genetic algorithm (GA), and simulated annealing (SA).|$|R
30|$|ACS {{algorithm}} {{is one of}} the successful variations of ant colony optimization (ACO) (Dorigo and Gambardella 1997). Recently, ACO methods have been widely used in various scheduling problems, such as single <b>machine</b> <b>case</b> considered by Merkle and Middendorf (2003) and Bauer et al. (1999), job-shop problem (Dorigo et al. 1996; Colorni et al. 1994) and flow-shop case (Stutzle 1998). These research literatures show that ACO methods perform much better than other heuristic algorithms in finding the optimal solution of some benchmark problems (Merkle and Middendorf 2003).|$|E
40|$|This report summarises {{the data}} flow models from {{existing}} real time systems development methodologies, and describes {{some of the}} problems with using them to define real-time system functional requirements. The motivation for this report is to establish a suitable model for prototyping real-time systems. A vending <b>machine</b> <b>case</b> study is used to model various system properties, and Z was used to describe the functional properties. The report shows that there is a case for a new data flow model to define system requirements...|$|E
40|$|A dynamic state {{feedback}} control structure is proposed in this paper. The scheme is conceived as an adaptive controller with the equilibrium in an LgV control law as the uncertain parameter, which allows {{the implementation of the}} controller for systems with unknown equilibrium. A new property of LgV controllers is given, and it is proven that this and other important properties carry on to the proposed scheme. A synchrnous <b>machine</b> <b>case</b> study shows that the proposed scheme may give better results than the LgV controller from which it is derived...|$|E
40|$|This article {{addresses}} {{the problem of}} dynamic sequencing on n identical parallel machines with stochastic arrivals, processing times, due dates and sequence-dependent setups. The system operates under a completely reactive scheduling policy and the sequence of jobs is determined {{with the use of}} dispatching rules. Seventeen existing dispatching rules are considered including standard and setup-oriented rules. The performance of the system is evaluated by four metrics. An experimental study of the system is conducted where the effect of categorical and continuous system parameters on the objective functions is examined. In light of the results from the simulation experiments, a parameterized priority rule is introduced and tested. The simulation output is analyzed using rigorous statistical methods and the proposed rule is found to produce significantly better results regarding the metrics of mean cycle time and mean tardiness in single <b>machine</b> <b>cases.</b> In respect to three <b>machine</b> <b>cases,</b> the proposed rule matches the performance of the best rule from the set of existing rules which were studied in this research for three metrics...|$|R
5000|$|SCO v. IBM (The SCO Group, Inc. vs. International Business <b>Machines,</b> Inc., <b>case</b> number 2:03cv0294, United States District Court for the District of Utah) ...|$|R
30|$|The Throttled load {{balancing}} algorithm is entirely {{based on the}} virtual machine {{and it is a}} dynamic {{load balancing}} algorithm (Tyagi and Kumar 2015). In this algorithm, the user first requests the load balancer to find a suitable virtual machine to perform the task requested. In cloud computing of multiple virtual <b>machine</b> <b>cases,</b> according to the capabilities of the virtual machine to process assignment requests, first pre-assign a maximum number of user requests. When the requested tasks have reached the maximum number of the virtual machine, it will no longer continue to receive tasks.|$|R
40|$|We {{study the}} problem of {{scheduling}} n jobs on several parallel identical machines. An optimal combination of a job schedule and processing-plus-wait (PPW) due dates is to be determined so as to minimize the maximum absolute lateness. The problem is shown to be strongly NP-hard {{if the number of}} machines is variable and ordinary NP-hard if it is a constant greater than one. For the single <b>machine</b> <b>case,</b> the problem is shown to be solvable by a graphical approach in O(nlogn) time. Department of Logistics and Maritime Studie...|$|E
40|$|This paper {{introduces}} a methodology for modeling and analyzing fault-tolerant manufacturing systems {{that not only}} optimizes normal productive processes, but also performs detection and treatment of faults. This approach {{is based on the}} hierarchical and modular integration of Petri Nets. The modularity provides the integration of three types of processes: those representing the productive process, fault detection, and fault treatment. The hierarchical aspect of the approach permits us to consider processes on different levels of detail (i. e. factory, manufacturing cell, or <b>machine).</b> <b>Case</b> studies considering detection and treatment of faults are presented, and a simulation tool is applied for verifying the models...|$|E
40|$|We study {{scheduling}} {{problems when}} jobs can be split and a setup is required before processing each part, {{to minimize the}} weighted sum of completion times. Using a simple splitting strategy and a reduction to an orders scheduling problem we derive a 2 -approximation algorithm for the case with uniform weights and setups, improving upon previous work. We extend this idea to the general identical <b>machine</b> <b>case</b> and conclude by designing a constant factor approximation algorithm when machines are unrelated. Nucleo Milenio Informacion y Coordinacion en Redes ICM/FIC 	 P 10 - 024 F EU-IRSES grant EUSACOU 	 FONDECYT 	 1114057...|$|E
40|$|We {{consider}} the online problem of minimizing the maximum flow-time on related machines. This {{is a natural}} generalization of the extensively studied makespan minimization problem to the setting where jobs arrive over time. Interestingly, natural algorithms such as Greedy or Slow-fit that work for the simpler identical <b>machines</b> <b>case</b> or for makespan minimization on related machines, are not O(1) -competitive. Our main result is a new O(1) -competitive algorithm for the problem. Previously, O(1) -competitive algorithms were known only with resource augmentation, and in fact no O(1) approximation was known even in the offline case...|$|R
40|$|AbstractThis paper {{considers}} ordinal algorithms for parallel machine scheduling with nonsimultaneous machine available times. Two {{objects of}} minimizing the latest job completion time and minimizing the latest machine completion time are studied. For the first objective, we present the optimal algorithms for m = 2, 3, 4 <b>machine</b> <b>cases.</b> For m ≥ 5, we propose an algorithm with competitive ratio 2 - 1 /(m - 1) while the lower bound is 53. For the second objective, the optimal algorithm is also given. Furthermore, {{for a special}} case, an algorithm with significantly improved competitive ratio is given...|$|R
5000|$|The Thinking <b>Machine</b> on the <b>Case</b> (1908), UK title The Professor on the Case ...|$|R
40|$|Results of {{simulations}} {{with all}} movable {{elements of the}} LHC collimation system [1] are discussed for various operation modes. Compared to previous results, the placing of additional collimators reduced the beam losses by a factor 10 in the ideal <b>machine</b> <b>case,</b> i. e. nominal collimators settings for both 450 GeV and 7 TeV beam energies. First results for Beam 2 are also reviewed. The sensitivity of the system to free orbit oscillations is addressed. These results show that it is sufficient to use {{a limited number of}} beam loss monitors (BLMs) for the setup and optimization of the LHC Collimation System...|$|E
40|$|Well-optimized {{intelligent}} control {{of products and}} systems with a substantial energy and/or consumables demand can allow to reduce the use phase impact of these devices and systems significantly. However, depending on the usage patterns and their variability, the system efficiency and tardiness, as well as comfort-impact avoidance trade-off considerations, the effectiveness of such strategies can greatly differ. This contribution describes models for and analyses {{the sensitivity of the}} achievable impact reduction with respect to these factors, thus facilitating use phase oriented eco-design decision making. The observations are illustrated by means of a zone heating and a laser cutting <b>machine</b> <b>case</b> study. SCOPUS: ar. jinfo:eu-repo/semantics/publishe...|$|E
40|$|We {{consider}} {{the problem of}} scheduling a given set of n jobs with equal processing times on m parallel machines so as to minimize the makespan. Each job has a given release date and is compatible to only {{a subset of the}} machines. The machines are ordered and indexed {{in such a way that}} a higher-indexed machine can process all the jobs that a lower-indexed machine can process. We present a solution procedure to solve this problem in 0 (n(2) + mnlogn) time. We also extend our results to the tree-hierarchical processing sets case and the uniform <b>machine</b> <b>case.</b> Department of Logistics and Maritime Studie...|$|E
40|$|There are two {{classical}} and opposite positions about scientific discovery: {{the one that}} conceives scientific discovery activity as fully rational {{and the one that}} conceives scientific discovery activity as fully irrational. In the first <b>case,</b> <b>machines</b> are regarded as able to perform scientific discovery process whereas, in the second <b>case,</b> <b>machines</b> are considered as unable to perform any part of scientific discovery process...|$|R
30|$|A {{total of}} three {{different}} cases are studied in which the Eve machine tries to fully synchronize with the Alice and Bob machines: case 1 deals with the mutual syncing of the Alice and Bob <b>machine</b> outputs, <b>case</b> 2 focuses on syncing solely with Alice <b>machine’s</b> outputs, and <b>case</b> 3 is a direct intercept of the communication channel to sync acting as Alice or Bob. For all three cases, 1000 different iterations of synchronizations run between Alice and Bob using three different learning rules as depicted in Eqs. (3)–(5): Hebbian, anti-Hebbian, and random walk.|$|R
40|$|Introduction: A few {{reports have}} {{documented}} isoflurane leakage causing {{damage to the}} water trap in the Drager Apollo anesthesia <b>machine.</b> This <b>case</b> describes an abnormal capnograph tracing yielding falsely normal end-tidal carbon dioxide tension (EtCO 2) after breakage of the water trap by isoflurane...|$|R
40|$|This paper {{describes}} {{how to take}} advantage of Internet ser-vices and object technology to solve 2 D partial differential equations (PDEs) in a distributed manner. This is accom-plished by means of a distributed object oriented continuous simulation language designed by our research group, called OOCSMP, and a Java (and C++) generating compiler for this language (called C-OOL). We also describe a graphical mesh generator, which produces OOCSMP code. The mesh generator may be invoked from the simulation model al-lowing the generation of domains and meshes during model execution. The simulation of the heating of several moving pieces is shown, in the single <b>machine</b> <b>case,</b> and in the distributed case. ...|$|E
40|$|AbstractConsider {{a company}} that {{manufactures}} perishable goods. The company relies on a third party to deliver goods, which picks up delivery products at regular or irregular times. At each delivery time, {{there is a time}} window that products can be produced to be delivered at that delivery time. The time windows are disjoint. Suppose we have a set of jobs with each job specifying its delivery time, processing time and profit. The company can earn the profit if the job is produced and delivered at its specified delivery time. From the company point of view, we are interested in picking a subset of jobs to produce and deliver so as to maximize the total profit. The unpicked jobs will be discarded without penalty. We consider both the single <b>machine</b> <b>case</b> and the parallel and identical <b>machine</b> <b>case.</b> In this article we consider three kinds of profits: (1) arbitrary profit, (2) equal profit, and (3) profit proportional to its processing time. In the first case, we give a fully polynomial time approximation scheme (FPTAS) for a single machine with running time O(n 3 ϵ). Using the bound improvement technique of Kovalyov, the running time can be further reduced to O(n 2 ϵ+n 2 logn). In the second case, we give an O(nlogn) -time optimal algorithm for a single machine. In the third case, we give an FPTAS for a single machine with running time O(n 2 ϵ). All of our algorithms can be extended to parallel and identical machines with a degradation of performance ratios...|$|E
40|$|International audienceThis paper {{addresses}} the parallel machine scheduling problem {{in which the}} jobs have distinct due dates with earliness and tardiness costs. New lower bounds are proposed for the problem, they can be classed into two families. First, two assignment-based lower bounds for the one-machine problem are generalized for the parallel <b>machine</b> <b>case.</b> Second, a time-indexed formulation {{of the problem is}} investigated in order to derive efficient lower bounds throught column generation or Lagrangean relaxation. A simple local search algorithm is also presented in order to derive an upper bound. Computational experiments compare these bounds for both the one machine and parallel machine problems and show that the gap between upper and lower bounds is about 1. 5 %...|$|E
40|$|Abstract. Modern {{machining}} processes continuously face cost pressures and high quality expectations. To remain competitive a company must continually identify cost reduction opportunities in production, exploit economic opportunities, and continuously improve production processes. A key technology that represents cost saving opportunities related to cooling lubrication, and simultaneously improves the overall performance of cutting operations, is dry machining. The elimination of coolants or {{significant reduction in}} cooling lubricants affects all components of a production system. A detailed analysis and adaptation of cutting parameters, cutting tools, machine tools and the production environment is mandatory to ensure an efficient process and successfully enable dry <b>machining.</b> <b>Case</b> study is shown for examination of cylindricity error and surface roughness of helical milling machined surfaces by environmentally conscious way...|$|R
50|$|As {{a result}} of the {{majority}} ruling in the Butler <b>Machine</b> Tool <b>case,</b> English law continues to approach the issue of the battle of forms from the viewpoint of analysing the communication between the parties to see if it can be discerned into an offer and acceptance.|$|R
40|$|AbstractIn {{this study}} {{the cutting tool}} {{temperature}} that develops during rough turning of hardened cold-work tool steel is modelled {{on the basis of}} experimental data. The data obtained from a series of thermocouples, placed on a PCBN insert, into an anvil, and into a toolholder, were used as the input for the model. An inverse problem was solved, where the heat fluxes and heat transfer coefficients were computed and where the developed temperature field was reconstructed from the experimental readings. The temperature was modelled for the case of new tools, {{as well as for the}} case of its development in the course of tool wear. The <b>machining</b> <b>case</b> involved utilization of a high-cBN content and a binderless PCBN grade, both possessing high thermal conductivity of 110 and 190 W/mK respectively...|$|R
