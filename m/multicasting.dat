2540|10000|Public
5|$|The {{increased}} scrutiny being {{imposed by}} the FCC regarding local marketing, shared services, and joint sales agreements have led to more drastic measures by broadcasting companies attempting to use them in acquisitions; in 2014, two broadcasting companies declared intents to shut acquired stations down entirely and consolidate their programming onto existing stations through <b>multicasting,</b> rather than attempting to use sidecars and sharing agreements or selling them to other parties that would assume full responsibility of their day-to-day operations.|$|E
25|$|The {{protocol}} {{is usually}} {{described in terms}} of a client-server model, but can as easily be used in peer-to-peer relationships where both peers consider the other to be a potential time source. Implementations send and receive timestamps using the User Datagram Protocol (UDP) on port number 123. They can also use broadcasting or <b>multicasting,</b> where clients passively listen to time updates after an initial round-trip calibrating exchange. NTP supplies a warning of any impending leap second adjustment, but no information about local time zones or daylight saving time is transmitted.|$|E
25|$|The {{turn of the}} {{millennium}} introduced digital television to Australia, {{as well as the}} transition to widescreen standard-definition and high-definition television production. Community stations also began to receive permanent transmitter licences, replacing temporary licences that were renewed yearly. At this time it was thought that allowing Commercial <b>Multicasting</b> would be detrimental so the publicly owned networks (ABC and SBS) were the only networks that were allowed to create new digital SD Channels. This was only revised after Digital Television Uptake was not as high as expected in many areas, and from 1 January 2009, Network Ten, Nine and Seven were allowed to create alternative SD channels.|$|E
40|$|In {{order to}} achieve one-to-many data {{delivery}} on the internet, native <b>multicast</b> is used and implemented {{in some parts of}} the Internet. On the other hand, application layer <b>multicast</b> (ALM), which uses P 2 P overlays (overlay <b>multicast,</b> OM), can be used to create <b>multicast</b> trees and deliver the data at the application layer. Despite Native <b>Multicast</b> being more efficient than Application Layer <b>Multicast,</b> it is not deployed widely. A hybrid <b>multicast</b> protocol has been proposed that opportunistically combines overlay <b>multicast</b> protocols and native <b>multicast</b> protocols to create and maintain hybrid <b>multicast</b> trees. The design for hybrid <b>multicast</b> trees leverages the AMT <b>multicast</b> tunneling protocol. It is expected that this hybrid approach will improve both efficiency and availability of <b>multicast.</b> This paper presents a simulation model for the Oversim/Omnet++ simulation framework to evaluate the performance of the hybrid <b>multicast</b> approach. Our model combines both a scalable overlay and a detailed network layer model that includes routers with native <b>multicast</b> support...|$|R
5000|$|SMART IP <b>Multicast</b> is an {{experimental}} protocol {{that enables the}} interdomain transmission of Secure Reliable IP <b>Multicast,</b> thus overcoming the challenges of deploying wide area interdomain IP <b>Multicast</b> transmissions. SMART IP <b>Multicast</b> reduces the complexity of deploying wide area IP <b>Multicast</b> {{in the same way}} MFTP (<b>Multicast</b> File Transfer Protocol) accomplishes this goal for file transfer, namely allowing for security and reliability to have full interoperability. [...] IP <b>Multicast</b> file distribution has been the most successful use of IP <b>Multicast</b> within campus and commercial networks. For file distribution most have used some variant of the experimental protocol MFTP (<b>Multicast</b> File Transfer Protocol). MFTP is both secure and reliable and runs on top of IP <b>Multicast</b> protocol. Like MFTP, SMART <b>Multicast</b> is a wrapper that runs on top of IP <b>Multicast,</b> taking advantage of IP <b>Multicast's</b> efficiency. SMART <b>Multicasts</b> are secure, reliable and provide for bi-directional feedback.|$|R
40|$|Many {{applications}} {{can benefit}} from ubiquitous availability of <b>multicast</b> delivery. Unfortunately IP <b>multicast</b> coverage on the Internet is spotty at best, limited to individual campuses {{and a handful of}} service providers. In response to the slow deployment of IP <b>multicast,</b> a number of end-host <b>multicast</b> mechanisms have been developed. End-host <b>multicast</b> lowers the deployment barrier of <b>multicast</b> technology by moving <b>multicast</b> functionality from routers to hosts. Their performance, however, cannot be as good as that of native IP <b>multicast.</b> We present a framework called Universal <b>Multicast</b> (UM) which integrates end-host <b>multicast</b> with deployed IP <b>multicast</b> islands to achieve ubiquitous <b>multicast</b> delivery. We intend UM to be a general framework that can work with various end-host <b>multicast</b> protocol to build dynamic unicast tunnels to connect IP-multicast enabled “islands. ” The design of UM takes full advantage of deployed IP <b>multicast</b> where available and utilizes end-host <b>multicast</b> where needed. An important feature of the UM design is to allow multiple connecting points per IP <b>multicast</b> island. In this paper we show that when an IP <b>multicast</b> island is large in size, having multiple connecting points can significantly speed up packet delivery and reduce traffic concentration. 1...|$|R
25|$|Although Ten HD was {{initially}} {{expected to be}} the first new commercial television channel in metropolitan areas of Australia since 1988, it was instead beaten to the punch by 7HD. Following the announcement by the Ten Network, Network Seven also announced its previously hidden plans to launch a dedicated HD channel on 15 September 2007 and pushed the launch date forward to 10 October. 7HD was the first dedicated HD multichannel launched, 2 months earlier than the Channel 10 equivalent. The Nine Network's move to a HD channel was considered sluggish by industry insiders, taking until March 2008. The Network was more excited by its plans to introduce a new SD channel in 2009 called GO!, which is when digital <b>multicasting</b> restrictions were scheduled to be lifted from the commercial stations. GO! was released to the public on 9 August, spelling the end of 9HD which was replaced by the previous HD version of Nine.|$|E
2500|$|DR's {{exist for}} the purpose of {{reducing}} network traffic by providing a source for routing updates. The DR maintains a complete topology table of the network and sends the updates to the other routers via multicast. All routers in a multi-access network segment will form a slave/master relationship with the DR. They will form adjacencies with the DR and BDR only. Every time a router sends an update, it sends it to the DR and BDR on the multicast address 224.0.0.6. The DR will then send the update out to all other routers in the area, to the multicast address 224.0.0.5. This way all the routers do not have to constantly update each other, and can rather get all their updates from a single source. [...] The use of <b>multicasting</b> further reduces the network load. [...] DRs and BDRs are always setup/elected on OSPF broadcast networks. [...] DR's can also be elected on NBMA (Non-Broadcast Multi-Access) networks such as Frame Relay or ATM. [...] DRs or BDRs are not elected on point-to-point links (such as a point-to-point WAN connection) because the two routers on either sides of the link must become fully adjacent and the bandwidth between them cannot be further optimized. DR and non-DR routers evolve from 2-way to full adjacency relationships by exchanging DD, Request, and Update.|$|E
5000|$|Netgear routers {{commonly}} offer {{a choice}} of two implementations of RIPv2; these are labelled RIP_2M and RIP_2B. RIP_2M is the standard RIPv2 implementation using <b>multicasting</b> - which requires all routers on the network to support RIPv2 and <b>multicasting,</b> whereas RIP_2B sends RIPv2 packets using subnet broadcasting - making it more compatible with routers that do not support <b>multicasting,</b> including RIPv1 routers.|$|E
40|$|IP <b>Multicast</b> is an {{efficient}} mechanism of delivering {{a large amount}} of data to a group of members over the Internet. Link sharing is achieved by a <b>multicast</b> tree that connects all group members. Mobile IP is the proposed standard for IP mobility support and provides two schemes for mobile hosts to receive <b>multicast</b> packets, either through tunneling from the home agent (called home subscription) or by joining <b>multicast</b> groups in the visited foreign network (called remote subscription). The former compromises the link sharing of IP <b>Multicast</b> and uses sub-optimal routing, while the latter requires the foreign agent to be a <b>multicast</b> router and may incur frequent modifications of <b>multicast</b> trees due to mobile hosts. This paper introduces <b>multicast</b> agents for IP <b>Multicast</b> to mobile hosts. A <b>multicast</b> agent is a <b>multicast</b> router that serves multiple (foreign) networks. A foreign agent in the service area of a <b>multicast</b> agent notifies the <b>multicast</b> agent of the <b>multicast</b> groups that visiting [...] ...|$|R
50|$|IGMP {{operates}} {{between the}} client {{computer and a}} local <b>multicast</b> router. Switches featuring IGMP snooping derive useful information by observing these IGMP transactions. Protocol Independent <b>Multicast</b> (PIM) is then used between the local and remote <b>multicast</b> routers, to direct <b>multicast</b> traffic from the <b>multicast</b> server to many <b>multicast</b> clients.|$|R
40|$|Abstract—We have {{developed}} the <b>Multicast</b> Middleware, a bridge between IP <b>Multicast</b> and a self-organizing Overlay Multi-cast infrastructure, {{in order to make}} IP <b>Multicast</b> available to the end user. We compare the performance of native IP <b>Multicast</b> and IP <b>Multicast</b> tunneled through a P 2 P Overlay <b>Multicast</b> network using the <b>Multicast</b> Middleware. We show that the achievable throughput can be quite high when using Overlay <b>Multicast</b> for data transport together with the IP <b>Multicast</b> API and that the latency introduced by processing (en- and decapsulation) and tunneling the captured packets can be negligible...|$|R
50|$|For example, {{in a local}} network, IP <b>multicasting</b> {{might be}} used. When IP <b>multicasting</b> is disabled, TCP {{can be used as}} transport. When run in the cloud, TCP plus a cloud {{discovery}} protocol would be used and so on...|$|E
50|$|The LMI <b>multicasting</b> {{extension}} allows multicast {{groups to}} be assigned. <b>Multicasting</b> saves bandwidth by allowing routing updates and address-resolution messages {{to be sent}} only to specific groups of routers. The extension also transmits reports {{on the status of}} multicast groups in update messages.|$|E
50|$|Furthermore, MACAW {{might not}} behave {{normally}} in <b>multicasting.</b>|$|E
40|$|Many {{applications}} {{can benefit}} from ubiquitous availability of <b>multicast</b> delivery. Unfortunately IP <b>multicast</b> coverage on the Internet is spotty at best, limited to individual campuses {{and a handful of}} service providers. In response to the slow deployment of IP <b>multicast,</b> a number of end-host <b>multicast</b> mechanisms have been developed. End-host <b>multicast</b> lowers the deployment barrier of <b>multicast</b> technology by moving <b>multicast</b> functionality from routers to hosts. Their performance, however, cannot be as good as that of native IP <b>multicast...</b>|$|R
40|$|In {{this paper}} we present our {{solution}} for providing IP <b>Multicast</b> on end {{systems in the}} Internet. The goal of the proposed solution is not to replace IP <b>Multicast,</b> but to provide an IP <b>Multicast</b> interface to applications on end systems in the current Internet environment, where IP <b>Multicast</b> is not available. Our solution, called <b>Multicast</b> Middleware, is a software, {{which is based on}} using Application Level <b>Multicast</b> (ALM) for transporting IP <b>Multicast</b> traffic. The use of the <b>Multicast</b> Middleware is transparent for applications on end systems, since our <b>Multicast</b> Middleware uses a virtual network interface to intercept native IP <b>Multicast</b> communication. In this paper we also present a performance evaluation of our <b>Multicast</b> Middleware. The results of this evaluation show that our <b>Multicast</b> Middleware is able to provide high bandwidth throughput to applications. This makes our <b>Multicast</b> Middleware a viable solution for supporting multimedia streaming services, etc...|$|R
40|$|IP <b>multicast</b> and overlay <b>multicast</b> {{have been}} {{proposed}} for one-to-many data delivery over the Internet. Compared to overlay <b>multicast,</b> IP <b>multicast</b> is less deployed but can achieve higher delivery efficiency. Researchers hence study how to combine IP <b>multicast</b> with overlay <b>multicast</b> {{in order to achieve}} both high deployability and high delivery efficiency. This combination is called island <b>multicast.</b> In this article we present a comprehensive survey of recent research on island <b>multicast.</b> We investigate the general architecture and key components of island <b>multicast.</b> We then discuss the core issue in island multicast: how to set up delivery connections across multiple <b>multicast</b> domains. We finally discuss open issues for future research...|$|R
5000|$|Dalesa, a {{peer-to-peer}} web cache for LANs (based on IP <b>multicasting).</b>|$|E
5000|$|A sender {{event with}} {{multiple}} connecting lines to receivers represents <b>multicasting.</b>|$|E
5000|$|RFC 1112, Host Extensions for IP <b>Multicasting,</b> S. Deering, August 1989 ...|$|E
40|$|International audienceThe Internet {{research}} community has proposed many routing protocols to support efficient <b>multicast</b> application. However, these protocols were developed for <b>multicast</b> parties {{whose members are}} topologically stationary, and they thus do not support both mobile receivers and mobile sources. Unfortunately, the mobility of the <b>multicast</b> source is a challenging problem to solve. When a <b>multicast</b> source moves from one IP network to another, it obtains a new IP address. However, since IP <b>multicast</b> is receiver-initiated, and the <b>multicast</b> delivery tree is constructed based on the <b>multicast</b> source's address, the <b>multicast</b> traffic cannot be delivered to <b>multicast</b> receiver unless a new delivery tree is built. As a consequence, the <b>multicast</b> routing entities require new <b>multicast</b> routing states and <b>multicast</b> receivers need to be notified whenever the handover occurs. This induces a non-transparent mobility, and leads to session disruption. To overcome these drawbacks, this paper presents a new solution to make <b>multicast</b> source mobility transparent to both <b>multicast</b> receivers and on-tree <b>multicast</b> routers. This solution, called Mobility-aware Rendezvous Point, extends the PIM-SM Rendezvous Point with mobility awareness, and introduces new techniques for the source registration with the Rendezvous Point. Simulation results have proved that the solution avoids the reconstruction of a <b>multicast</b> tree after the handover of the <b>multicast</b> sources...|$|R
40|$|Providing <b>multicast</b> {{service to}} mobile hosts in {{wireless}} mobile networking environments is difficult due to frequent changes of mobile host location and group membership. If a conventional <b>multicast</b> routing protocol {{is used in}} wireless mobile networks, several problems may be experienced since existing <b>multicast</b> routing protocols assume static hosts when they construct the <b>multicast</b> delivery tree. To overcome the problems, several <b>multicast</b> routing protocols for mobile hosts have been proposed. Although the protocols solve several problems inherent in <b>multicast</b> routing proposals for static hosts, they still have problems such as non-optimal delivery path, datagram duplication, overheads resulting from frequent reconstruction of a <b>multicast</b> tree, etc. In this paper, we summarize these problems of <b>multicast</b> routing protocols and propose an efficient <b>multicast</b> routing protocol based on IEFT mobile IP in wireless mobile networks. The proposed protocol introduces a <b>multicast</b> agent, where a mobile host receives a tunneled <b>multicast</b> datagram from a <b>multicast</b> agent located in a network close to it or directly from the <b>multicast</b> router in the current network. While receiving a tunneled <b>multicast</b> datagram from a remote <b>multicast</b> agent, the local <b>multicast</b> agent may start <b>multicast</b> join process, which makes the <b>multicast</b> delivery route optimal. The proposed protocol reduces data delivery path length and decreases the amount of duplicate copies of <b>multicast</b> datagrams. We examined and compared {{the performance of the}} proposed protocol and existing protocols by simulation under various environments and we got an improved performance over the existing proposals...|$|R
40|$|International audienceIn {{order to}} cope with {{challenging}} problems faced by traditional <b>multicast</b> routing protocols, many Branching-Router (BR) based <b>multicast</b> routing schemes with desirable features have been proposed. However, the current BR-based methods still lack efficient <b>multicast</b> management and suffer from a long join latency, leading to a disappointing mobility performance. In this paper, we propose a novel BR-based <b>multicast</b> architecture with a corresponding <b>multicast</b> routing protocol supporting <b>multicast</b> receiver mobility. In the proposed <b>multicast</b> architecture, a new management entity called <b>Multicast</b> Controller (MC) is used to handle most of the <b>multicast</b> management-related tasks, while other routers in the network construct a <b>multicast</b> tree according to the proposed Branching-Router based <b>Multicast</b> routing protocol with Mobility support (BRMM). Besides, the fast handover of <b>multicast</b> service can be supported by BRMM through the pre-establishment of temporary <b>multicast</b> paths. Through extensive simulation and analysis, we show that BRMM outperforms existing protocols and has many other attractive features...|$|R
5000|$|Unicasting or <b>Multicasting</b> {{host state}} in {{external}} data representation (XDR) format using UDP messages.|$|E
50|$|Broadcatching {{is often}} used in {{situations}} where <b>multicasting</b> may be used but is cost prohibitive.|$|E
5000|$|... 802.11 {{wireless}} networks use {{the same}} 01:00:5E:xx:xx:xx and 33:33:xx:xx:xx:xx MAC addresses for <b>multicasting</b> as Ethernet.|$|E
40|$|We propose {{and analyze}} a <b>multicast</b> {{algorithm}} named Dynamic Agent-based Hierarchical <b>Multicast</b> (DAHM) for wireless mesh networks that supports user mobility and dynamic group membership. The objective of DAHM is {{to minimize the}} overall network cost incurred. DAHM dynamically selects <b>multicast</b> routersserving asmulticast agentsforintegrated mobility andmulticast service management, effectively combining backbone <b>multicast</b> routing andlocalunicast routinginto anintegratedalgorithm. Asthenamesuggests, DAHM employs a two-level hierarchical <b>multicast</b> structure. At the upper level is a backbone <b>multicast</b> tree consisting of mesh routers with <b>multicast</b> agents being the leaves. At the lower level, each <b>multicast</b> agent services those <b>multicast</b> group members within its service region. A <b>multicast</b> group member changes its <b>multicast</b> agent when it moves out of the service region of the current <b>multicast</b> agent. The optimal service region size of a <b>multicast</b> agent is a critical system parameter. We propose a model-based approach to dynamically determine the optimal service region size that achieves network cost minimization. Through a comparative performance study, we show that DAHM significantly outperforms two existing baseline <b>multicast</b> algorithms basedonmulticasttreestructureswithdynamicupdatesuponmembermovement and group membership changes...|$|R
40|$|<b>Multicast</b> {{applications}} such as multimedia, medical imaging, digital {{audio and video conferencing}} are bandwidth-intensive. With the advance in optical technology providing abundant bandwidth, it is natural to extend the <b>multicast</b> concept to optical networks in order to gain enhanced performance. This paper provides a comprehensive review of optical <b>multicast</b> techniques, covering the main optical <b>multicast</b> concept, the optical <b>multicast</b> switches, the <b>multicast</b> over single-hop broadcast-and-select networks, the <b>multicast</b> over multi-hop wide area mesh networks, and the related challenging algorithms developed for <b>multicast</b> routing in the optical domain...|$|R
40|$|This paper shows that, for single-hop WDM networks, a <b>multicast</b> {{scheduling}} algorithm {{which always}} tries to partition a <b>multicast</b> transmission into multiple unicast or <b>multicast</b> transmissions {{may not always}} produce lower mean packet delay than a <b>multicast</b> scheduling algorithm which does not partition <b>multicast</b> transmissions. The performance of a <b>multicast</b> scheduling algorithm may depend on the traffic conditions {{and the availability of}} the channel resource in the network. A hybrid <b>multicast</b> scheduling algorithm that can produce good performance for wide ranges of the traffic conditions and the availability of the channel resource in the network is proposed. Depending on the average utilizations of the data channels and the receivers, the proposed hybrid <b>multicast</b> scheduling algorithm dynamically chooses to employ a <b>multicast</b> scheduling algorithm which always tries to partition <b>multicast</b> transmissions or a <b>multicast</b> scheduling algorithm which does not partition <b>multicast</b> transmissions. Extensive simulations are performed to study the performance of the proposed hybrid algorithm. Our simulation results show that the proposed hybrid algorithm produces lower mean packet delay for wide ranges of the load, the maximum <b>multicast</b> group size, the percentage of unicast traffic, and the number of data channels in the network compared with a <b>multicast</b> scheduling algorithm which always tries to partition <b>multicast</b> transmissions and a <b>multicast</b> scheduling which does not partition <b>multicast</b> transmissions...|$|R
50|$|KDTF began {{broadcasting}} its {{digital signal}} on UHF channel 51 on May 14, 2009, <b>multicasting</b> KBNT-CA and XHDTV.|$|E
5000|$|... #Caption: <b>Multicasting</b> {{broadcasts}} {{the same}} {{copy of the}} multimedia over the entire network {{to a group of}} clients ...|$|E
50|$|IP <b>multicasting</b> {{was first}} {{developed}} by Steve Deering while at Stanford University {{for which he}} received the IEEE Internet Award.|$|E
40|$|Abstract—Application-level <b>multicast</b> suffers some {{disadvantages}} {{in terms}} of high <b>multicast</b> delay, overloading at Rendezvous Point (RP) and single-point of failure. In this paper, we propose DINCast to optimize application-level shared-tree <b>multicast.</b> The general idea of DINCast is to form a special logical data loop and use this loop instead of the RP as <b>multicast</b> sources. To demonstrate its effectiveness, we first analyze <b>multicast</b> delay with the inclusion of transmission delay, queuing delay and propagation delay of a typical symmetrical shared-tree <b>multicast.</b> We evaluate three placement schemes of DINCast. Our simulation results show that DINCast is effective in optimizing the <b>multicast</b> delay over the shared-tree <b>multicast</b> and the reduced rate of <b>multicast</b> delay may be up to 50 %. Next, for any <b>multicast</b> tree, we carry out further simulations to optimize <b>multicast</b> delay. The experimental results show that DINCast can achieve better performance than original shared-tree <b>Multicast...</b>|$|R
40|$|Reducing {{forwarding}} state overhead of <b>multicast</b> {{routing protocols}} {{is an important}} issue towards a scalabile global <b>multicast</b> solution. In this paper, we propose a new approach, Dynamic Tunnel <b>Multicast,</b> which utilizes dynamically established tunnels on unbranched links of a <b>multicast</b> distribution tree to eliminate unnecessary <b>multicast</b> forwarding states. Analysis and simulation results show promising reduction in the state overhead of sparse mode <b>multicast</b> routing protocols. Keywords [...] - <b>Multicast,</b> Routing, State reduction, Dynamic tunnel. I. Introduction <b>Multicast</b> service can deliver packets to a set of destinations identified by a <b>multicast</b> group, rather than a single destination. The IP <b>multicast</b> model [3], established in 1988 by Stephen Deering, is an effort to provide <b>multicast</b> service over the Internet. In this model, neither the senders nor the receivers need to know the location of each other, and the membership can evolve dynamically. It is the responsibility of <b>multicast</b> rou [...] ...|$|R
50|$|Dense mode <b>multicast</b> is one {{mode that}} <b>multicast</b> {{can use to}} {{construct}} a tree for sending packets to the <b>multicast</b> subscribers. It {{is the opposite of}} sparse <b>multicast.</b>|$|R
