1|7|Public
50|$|A screen hotspot, in computing, {{provides}} a special {{area on the}} display screen of a computer for hyperlinking or for other GUI-based activity (such as re-direction, pop-up display, <b>macro</b> <b>execution,</b> etc.).|$|E
50|$|Swap around any {{operators}} {{the order}} of which does not impact {{the result of the}} <b>macro’s</b> <b>execution.</b>|$|R
40|$|An {{integrated}} approach for the parallel solution of large sparse systems arisen in finite element computations is presented. The approach includes a three-phase preprocessor and a <b>macro</b> dataflow <b>execution</b> scheme. The three {{phases of the}} preprocessor are: (1) Extracting parallelism {{by means of an}} automatic domain decompose...|$|R
40|$|The {{objective}} of the Advanced Telerobotics System Technology Task is to develop/prototype advanced telerobotics supervisory and shared control to enhance Intra-Vehicular Activity (IVA) teleoperation in the Space Station. The technology provides enhanced telerobotics capabilities while operating within the expected constraints of computation limitations, time delay, and bus bandwidth. A local site operator interface has also been developed for specifying teleoperation and shared control modes as well as supervised autonomous <b>macros</b> for <b>execution</b> at the remote site. The primary {{objective of}} the task is to transfer the advanced technology to appropriate flight centers to enhance the baseline Station capabilities...|$|R
40|$|In the {{theoretical}} {{part of the}} thesis {{the literature on the}} importance of integration of experimental work in teaching chemistry was examined. There were presented the conditions for carrying out the experimental work, safe handling with chemicals and the concern for proper waste disposal. The main focus is put on execution of micro experimental work in teaching chemistry, and it was examined, the development of ideas and a variety of possibilities for micro experiments, evaluation of advantages and disadvantages which have been brought into teaching chemistry with performing experiments. In the experimental part of the thesis three types of experiments were chosen, which are suitable for independant experimental work of pupils. The chosen experiments were tested and upgraded in two versions: the ordinary (<b>macro)</b> experimental <b>execution</b> and execution of micro. The focus was on the comparison between the two types of experimental work; the monitoring of the amount of used chemicals, costs of implementation, the time needed for the completition and availability of laboratory inventory (sufficient number of pupils for pair work). In accordance with the objectives of the curriculum for chemistry in primary school lesson plans for teachers and worksheets for pupils to carry out selected experiments in both versions were made. ...|$|R
40|$|Have {{you been}} asked to revise a {{derivation}} and then several months later asked to revert back to the previous derivation code? Or when a project ends, were you asked to remove it from the network to free up space? What if Archival Software is not an option? This paper presents an “archiving ” macro (%Archive()) which takes {{the contents of a}} directory, including subdirectories, and creates a zip file which contains all files and mirrors the parent’s directory structure. Like magic, your code is saved and easily retrieved! Using an elaborate array of SAS ® functions, an X command, and WinZip®, the archiving <b>macro</b> determines the <b>execution</b> location and the contents of the subdirectories associated with that location. With virtually no specified parameters, anyone can archive and look like a pro while doing it...|$|R
40|$|The SAS macro {{language}} is another language layering {{on top of}} regular SAS code. Used properly, it can make programming easier and more fun. While not every program is improved by using macros–adding another syntax to learn and additional debugging challenges – we gain using macros as code generators, saving repetitive and tedious effort, for passing parameters to avoid hard coding, and to pass code fragments, thereby making certain tasks easier than using regular SAS alone. <b>Macros</b> facilitate conditional <b>execution</b> {{and can be used}} as program modules—standardized and re-useable throughout your organization. We will examine macros and macro variables, statements, and functions. We will introduce interaction between macros and regular SAS language, offer tips on debugging, and the SAS macro options. MACROS The Macros consist of collections of regular SAS program statements, macro variables, macro language statements, and macro functions contained within a %MACRO and a %MEND. The %MACRO statement includes a name and the macro is called using the macro’s name preceded by a “%”...|$|R
40|$|The National Ignition Facility (NIF), {{currently}} under construction at the Lawrence Livermore National Laboratory, is a stadium-sized facility containing a 192 -beam, 1. 8 Megajoule, 500 -Terawatt, ultra-violet laser system {{together with a}} 10 -meter diameter target chamber with room for nearly 100 experimental diagnostics. When completed, NIF will be the world's largest and most energetic laser experimental system, providing an international center to study inertial confinement fusion and physics of matter at extreme densities and pressures. The NIF is operated by the Integrated Computer Control System (ICCS), which is a layered architecture of over 700 lower-level front-end processors attached to nearly 60, 000 control points and coordinated by higher-level supervisory subsystems in the main control room. A shot automation framework has been developed and deployed {{during the past year}} to orchestrate and automate shots performed at the NIF using the ICCS. The Shot Automation framework is designed to automate 4 - 8 hour shot sequences, that includes deriving shot goals from an experiment definition, set up of the laser and diagnostics, automatic alignment of laser beams, and a countdown to charge and fire the lasers. These sequences consist of set of preparatory verification shots, leading to amplified system shots followed by post-shot analysis and archiving. The framework provides for a flexible, model-based work-flow execution, driven by scripted automation called macro steps. The shot director software is the orchestrating component of a very flexible automation layer which allows us to define, coordinate and reuse simpler automation sequences. This software provides a restricted set of shot life cycle state transitions to 26 collaboration supervisors that automate 8 -laser beams (bundle) and a common set of shared resources. Each collaboration supervisor commands approximately 10 subsystem shot supervisors that perform automated control and status verification. Collaboration supervisors translate shot life cycle state commands from shot director into sequences of ''macro steps'' to be distributed to each of its shot supervisors, maintains order of macro steps for each subsystem, and supports collaboration between macro steps. They also manage failure, restarts, and rejoining into the shot cycle (if necessary) and manage auto/manual <b>macro</b> step <b>execution</b> and collaborations between other collaboration supervisors. Each macro step has database-driven verification phases and a scripted perform phase. This provides for a highly flexible framework for performing a variety of NIF shot types. Database tables define the order of work and dependencies (workflow) of macro steps to be performed for a shot. A graphical model editor facilitates the definition and viewing of an execution model. A change manager tool enables ''de-participation'' of individual devices, of entire laser segments (beams, quads, or bundles of beams) or individual diagnostics. This software has been deployed to the NIF facility and is currently being used to support NIF main laser commissioning shots and build-out of the NIF laser. This will be used to automate future target and experimental shot campaigns...|$|R

