14|2|Public
5000|$|... 1991. <b>Meta-level</b> <b>Inference</b> Systems F. van Harmelen. Research Notes in AI. Pitmann, Morgan Kaufmann, London, San Mateo, California, 1991.|$|E
50|$|Van Harmelen's {{research}} interests include artificial intelligence, knowledge representation and the semantic web, approximate reasoning and Medical Protocols. He {{was one of the}} co-designers of the Web Ontology Language (OWL) and the Ontology Inference Layer (OIL), and has published books on <b>meta-level</b> <b>inference,</b> on knowledge-based systems, and on the Semantic Web.|$|E
40|$|We outline a program, PRESS (PR__olog Equation Solving S_ystem) {{for solving}} symbolic, transcendental, non-differentlal {{equations}}. The methods used for solving equations are described, {{together with the}} service facilities. The principal technique, <b>meta-level</b> <b>inference,</b> appears to have applications in the broader field of symbolic and algebraic manipulation...|$|E
40|$|Models for fuzzy {{deductive}} reasoning {{are becoming}} {{important in the}} field of knowledge-based systems. Zadeh suggested a compositional rule of inference, also called Generalized Modus Ponens. In order to study the fine structure of this model, we test seven rules of implication, usually found in the fuzzy literature, and two kinds of compositional rule with several properties which seems to be required by commonsense reasoning. But, as no rule is shown to satisfy these properties, we propose a new model for fuzzy Modus Ponens. The main idea of this model is to find a fuzzy extension of the <b>meta-level</b> rule of <b>inference,</b> in comparison with the object-level extension of the disjunctive syllogism such as the Zadeh's model. It is shown that our model satisfies all the intuitively required properties, and moreover is computationally very easy to apply. SCOPUS: ar. jinfo:eu-repo/semantics/publishe...|$|R
40|$|The {{problem of}} {{observation}} and control for partially observed input-state-output machines is formulated {{in terms of}} a tree of first order logical theories. A set of first order languages for the description of the controlled evolution and state estimation of any given machine M is specified; further, conditional control axioms are formulated so that closed loop control actions occur when specified past observation dependent conditions are fulfilled. In particular, conditional control axioms may include commands that steer the system state from a current partially observed state (estimate) to a target state, if such of sequence of controls can be proven to exist. Starting from a general theory of M at the initial instant, observations on the input-output behaviour of the system at any later instant are accepted by the system as new axioms these are then used together with the previously generated theory to generate the current theory. We use the acronym Cocolog to denote the family of first order conditional observer and controller logics for any given input-state-output system. A semantics is supplied for each Cocolog in terms of interpretations of controlled transitions on a tree indexed by the possible sequences of input-output observations. Extra-logical rules relating members of the family of theories of a Cocolog are then presented in the form of <b>meta-level</b> axioms and <b>inference</b> rules. In this paper consistency and completeness of the first order theories in a Cocolog family are established, decidability is obtained using a unique model property and examples of the operation of a Cocolog logic control system are given...|$|R
40|$|In [Bundy and Sterling 81] we {{described}} how <b>meta-level</b> <b>inference</b> was useful for controlling search and deriving control {{information in the}} domain of algebra. Similar techniques are applicable to the verification of logic programs. A developing meta-language is described, and an explicit proof plan using this language is given. A program, IMPRESS, is outlined which executes this plan...|$|E
40|$|In {{this paper}} we shall {{describe}} a program (MECHO), written in Prolog[14], which solves {{a wide range}} of mechanics problems from statements in both predicate calculus and English. Mecho uses the technique of <b>meta-level</b> <b>inference</b> to control search in natural language understanding, common sense inference, model formation and algebraic manipulation. We argue that this is a powerful technique for controlling search while retaining the modularity of declarative knowledge representations...|$|E
40|$|Describes the ELEKTRA {{reflective}} {{production rule}} interpreter, which differs from other interpreters by providing considerable support for <b>meta-level</b> <b>inference</b> and reflection. Also describes the representations {{employed in the}} system, in which the control problem in production systems can be solved by increasing use of rules. Introduces the reflective properties {{of the system and}} gives examples. Shows that the interpreter on which the entire ELEKTRA system runs can be implemented as ELEKTRA rules...|$|E
40|$|This paper {{describes}} a logical design process model {{and in particular}} abduction in it. We present our model of design processes that consists of abduction, deduction, circumscription, <b>meta-level</b> <b>inference,</b> and multi-world mechanism. In this model, design {{is a process of}} refining descriptions of design objects. Abduction generates object descriptions as a hypothesis, deduction examines validity of the object descriptions proposed by abduction, circumscription maintains knowledge used in abduction and deduction by resolving inconsistency, <b>meta-level</b> <b>inference</b> provides knowledge for abduction, and multi-world mechanism represents evolution of the object descriptions. Since abduction is crucial part to realize synthesis in design, we clarify the role of abduction in design and develop an abductive inference for design. Here we define abduction as a process making integrated hypotheses and theories to explain the given facts. It means that (i) not only hypotheses but also theory to explain facts with hypotheses are important part of explanation, and that (ii) integration should be kept both in hypotheses and in theories. To achieve above features of abduction in a knowledge-based framework, we introduce a segment of explanatory coherence and superposition of proposition. The former shows connectivity of explanations and the latter realizes integration of hypotheses. Since abduction contributes to integration of knowledge, the framework based on abduction gives an answer to deal with variety of knowledge in CAD systems. 1. Introductio...|$|E
40|$|In {{this thesis}} {{we will be}} {{concerned}} with {{a particular type of}} architecture for reasoning systems, known as meta-level architectures. After presenting the arguments for such architectures (chapter 1), we discuss a number of systems in the literature that provide an explicit meta-level architecture (chapter 2), and these systems are compared {{on the basis of a}} number of distinguishing characteristics. This leads to a classification of meta-level architectures (chapter 3). Within this classification we compare the different types of architectures, and argue that one of these types, called bilingual <b>meta-level</b> <b>inference</b> systems, has a number of advantages over the other types. We study the general structure of bilingual <b>meta-level</b> <b>inference</b> architectures (chapter 4), and we discuss the details of a system that we implemented which has this architecture (chapter 5). One of the problems that this type of system suffers from is the overhead that is incurred by the meta-level effort. We give a theoretical model of this problem, and we perform measurements which show that this problem is indeed a significant one (chapter 6). Chapter 7 discusses partial evaluation, the main technique available in the literature to reduce the meta-level overhead. This technique, although useful, suffers from a number of serious problems. We propose two further techniques, partial reflection and many-sorted logic (chapters 8 and 9), which can be used to reduce the problem of meta-level overhead without suffering from these problems...|$|E
40|$|The goal of {{this paper}} is to {{categorise}} the meta-level systems in the literature on the basis of their crucial architectural features, concentrating on the relation between meta-level and object-level interpreter. We will discuss the communica-tion between these two components and we will distinguish a number of typical architectures. After that we will discuss a number of other, independent proper-ties by which these systems can be distinguished, although they are of secondary importance. Subsequently, we will compare the different types of architectures, and on the basis of this comparison we argue in favour of one particular type of meta-level system, the so called bi-lingual <b>meta-level</b> <b>inference</b> systems. 1. ...|$|E
40|$|Abstractâˆ’. Semantic web {{technologies}} and autonomic computing principles are combined {{in this paper}} {{in an attempt to}} design and build a learning design environment that possesses context-aware features. Our approach builds on the features of self-management and organisation of autonomic computing but uses self-configuration as a means to extend a knowledge-based inference through the design of <b>meta-level</b> <b>inference.</b> Thus, the context inference is modelled using a meta-interpreter and self-configuration rules. The details of our approach are presented demonstrating the use of self-configurable inferencing to support the creation and use of context-paths across learning design domain concepts. The paths exploit ontology alignment principles to determine contextual relevance between user learning designs and core system knowledge...|$|E
40|$|Using the {{achievements}} of my research group over the last 30 + years, I provide {{evidence to support the}} following hypothesis: By complementing each other, cooperat-ing reasoning process can achieve much more than they could if they only acted individually. Most of the work of my group has been on pro-cesses for mathematical reasoning and its applica-tions, e. g. to formal methods. The reasoning pro-cesses we have studied include: Proof Search: by <b>meta-level</b> <b>inference,</b> proof planning, abstraction, analogy, symmetry, and reasoning with diagrams. Representation Discovery, Formation and Evolution: by analysing, diagnosing and repairing failed proof and planning attempts, forming and repairing new concepts and conjectures, and forming logical representations of informally stated problems. Â¤I {{would like to thank the}} many colleagues with whom I have worked over the last 30 + years on the research reported in this paper...|$|E
40|$|In this paper, we outline four AI {{systems and}} their formal {{specification}} in Z. Two {{of the systems}} (a blackboard framework and the author's CASSANDRA architecture) are of high complexity and are for predominantly real-time, high-reliability applications; {{the other two are}} production systems of an unconventional type. The first production system (called ELEKTRA) contains extensive facilities for performing <b>meta-level</b> <b>inference.</b> The second extends ELEKTRA with a frame system and organises rules into rulesets for enhanced modularity (its specification is still underway). Both production systems contain control features that can be accessed by rules: both are reflective systems. To date, the four specifications amount to more than 500 A 4 pages, including proofs and explanatory text. The four specifications are related in that solutions to problems encountered in the blackboard and CASSANDRA systems are attempted in the other two specifications. The formal specifications of the se [...] ...|$|E
40|$|The {{general area}} of developing, {{applying}} and studying new and parallel models of computation {{is motivated by}} a need to overcome the limits of current Von Neumann based architectures. A key area of research in understanding how new technology {{can be applied to}} Al problem solving is through using logic languages. Logic programming languages provide a procedural interpretation for sentences of first order logic, mainly using a class of sentence called Horn clauses. Horn clauses are open {{to a wide variety of}} parallel evaluation models, giving possible speed-ups and alternative parallel models of execution. The research in this thesis is concerned with investigating one class of parallel logic language known as Committed Choice Non-Deterministic languages. The investigation considers the inherent parallel behaviour of Al programs implemented in the CCND languages and the effect of various alternatives open to language implementors and designers. This is achieved by considering how various Al programming techniques map to alternative language designs and the behaviour of these Al programs on alternative implementations of these languages. The aim of this work is to investigate how Al programming techniques are affected (qualitatively and quantitatively) by particular language features. The qualitative evaluation is a consideration of how Al programs can be mapped to the various CCND languages. The applications considered are general search algorithms (which focuses on the committed choice nature of the languages); chart parsing (which focuses on the differences between safe and unsafe languages); and <b>meta-level</b> <b>inference</b> (which focuses on the difference between deep and flat languages). The quantitative evaluation considers the inherent parallel behaviour of the resulting programs and the effect of possible implementation alternatives on this inherent behaviour. To carry out this quantitative evaluation we have implemented a system which improves on the current interpreter based evaluation systems. The new system has an improved model of execution and allows severa...|$|E

