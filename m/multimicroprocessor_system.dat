9|7|Public
40|$|Use of Myoelectric signal as {{a control}} signal has found {{numerous}} applications for the disabled. A <b>multimicroprocessor</b> <b>system</b> which is useful for the analysis and identification of myoelectric signals is described. This system is also useful {{for the development of}} a controller which can provide the motion of prosthetic or orthotic limbs. In this paper, the theory, software and hardware design of a tightly coupled <b>multimicroprocessor</b> <b>system</b> with distributed common memory and private memory modules, to compute the values of auto-and crosscorrelation functions, to recover signals buried in noise, to compute cross and auto power spectral density at 128 points simultaneously on the time delay axis or frequency axis, are also described. Using these functions, EMG signals are identified and the motion of artificial limbs controlled...|$|E
40|$|The MuTEAM is a <b>multimicroprocessor</b> <b>system,</b> {{intended}} for embedded real-time applications, whose main characteristics are expandibility, modularity, error confinement robustness. In this paper, the system architecture {{is described in}} some detail, with particular respect to the hardware supporting the required characteristics of fault tolerance and distributed message-oriented operating system...|$|E
40|$|The {{bibliography}} contains citations concerning {{research and}} development {{in the field of}} computer architecture. Design of computer systems, microcomputer components, and digital networks are among the topics discussed. <b>Multimicroprocessor</b> <b>system</b> performance, software development, and aerospace avionics applications are also included. (Contains 50 - 250 citations and includes a subject term index and title list. ...|$|E
40|$|The work {{covers the}} <b>multimicroprocessor</b> <b>systems</b> (MMS) with many {{instruction}} and data stersma. The {{aim is to}} develop and investigate theoretically the new structural and architecture principles, methods and aids for organization of the central part in the <b>multimicroprocessor</b> <b>systems.</b> The theoretical generalization {{and development of the}} models and MMS analysis methods has been carried out. The use of the developed analysis methods and obtained analytical relations enables to overhaul purposively the architectures and to choose the rational structure of MMS. The analysis and synthesis procedures and methodology of the structural organization in MMS are introduced. Application field: digital electronic engineeringAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|In {{the last}} decade we have {{witnessed}} great advances in the integrated circuits technology. Those advances make it possible nowadays for the manufacturing, at reasonable prices of MOS technology memories that are faster than the microprocessors. These memories allow, thus several accesses in each microprocessor cycle. Therefore {{it seems reasonable to}} use the to reduce the memory interference in <b>multimicroprocessor</b> <b>systems.</b> In this paper we present two mathematical models useful in the approximate evaluation of the memory interference. The results for both model concide. We also compare the with experimental valuesobtained by simulation. Postprint (published version...|$|R
40|$|MuTEAM {{constitutes}} a continuing effort {{to investigate the}} entiality of control decentralization {{in the design of}} <b>multimicroprocessor</b> <b>systems.</b> The architecture which has been so far designed and implemented provides a set of mechanisms,in the harware, in the kernel and in programming language, to help the exploitation of decentralized non-hierarchical policies for both resource management and fault treatment. In this paper a possible ED/FT (Error Detection/Fault Treatment) policy is described, and the functionality of a precompiler, for its implementation at a very high level, is detailed. The use of such a tool allows complete transparency to the user of the redundancy which is necessary for a reliable computation...|$|R
40|$|Contextual {{classifiers}} {{are being}} developed as a method to exploit the spatial/spectral context of a pixel to achieve accurate classification. Classification algorithms such as the contextual classifier typically require large amounts of computation time. One {{way to reduce the}} execution time of these tasks is through the use of parallelism. The applicability of the CDC flexible processor system and of a proposed <b>multimicroprocessor</b> <b>system</b> (PASM) for implementing contextual classifiers is examined...|$|E
40|$|Abstract â€” A {{dynamically}} reconfigurable large-scale <b>multimicroprocessor</b> <b>system</b> {{capable of}} operating as {{one or more}} independent SIMD (single instruction stream- multiple data stream) machines and/or MIMD (multiple instruction stream- multiple data stream) machines is described. The system consists of a Parallel Computation Un-it, which contains N processors, N memory modules, and an interconnection network; Q Micro Controll-ers, each controlling N/Q processors; a Memory Management System, to load the N memory modules; and a System Control Unit, to coordinate the other system components. The {{way in which the}} Micro Controllers can form varying size groups of pro-cessors in this partitionable SIMD/MIMD environ-ment is discussed. I...|$|E
40|$|Debugging of {{distributed}} software is approached {{in this paper}} by defining specific classes of program events to be monitored by the user while execution is in progress. An elementary event is {{defined in terms of}} a range condition and an access mode for a memory location. The concept of a compound event is introduced, expressed in terms of either an accumulated event, a sequential event conjunction, a logical event disjunction or an instantaneous event conjunction. On the occurrence of an event, the actions connected with that event will be performed. Possible actions are trace and break traps, event counting and measurement of time intervals. A specific debugger designed for a realtime <b>multimicroprocessor</b> <b>system</b> and based on the event-action model is presented...|$|E
40|$|In {{this paper}} {{we present a}} global {{approach}} for programming distributed <b>multimicroprocessor</b> <b>systems.</b> In this approach, applications are developed as a global parallel program that is independent of the particular hardware architecture, and is represented through an extended Petri net model. The building blocks for the global program are tasks that are implemented using standard programming languages. A highly automated tool is used to allocate the different tasks to processing nodes in a near optimum way, minimizing message traffic in the interconnection network and balancing the execution workload in the different nodes. The tool divides the original extended Petri net into several subnets that are distributed among the different nodes. Tools are also provided to install, execute and monitor the program. Key words: Distributed processing, Programming environment, Multiprocessor systems, Petri nets. I. ...|$|R
40|$|VME is a {{new high}} {{performance}} standard bus for <b>multimicroprocessor</b> <b>systems.</b> Its characteristics originate in the 68000 microprocessor's interface signals. Processors with other interface characteristics can, however, also be used in VME systems. The case study of the interfacing of a 6809 -based subsystem to the VME bus is presented. A mixture of hardware and software {{has been used to}} implement at low cost the matching functions. The 6809 -based subsystem can perform all VME-related functions: bus requester in multiprocessor environments, bus master, interrupt handler, bus slave and interrupter. The last two functions are performed by a dual-port memory included in the subsystem, which is designed to be used as the main processor in small VME systems or as the intelligent peripheral controller in larger VME systems. Anglai...|$|R
40|$|Slave {{microprocessors}} in <b>multimicroprocessor</b> computing <b>system</b> contains modified circuit cards programmed via bus connecting {{master processor}} with slave microprocessors. Enables interactive, microprocessor-based, single-loop control. Confers ability to load and run program from master/slave bus, without need for microprocessor development station. Tristate buffers latch all {{data and information}} on status. Slave central processing unit never connected directly to bus...|$|R
40|$|The {{requirement}} of high dependability {{is one of}} the most important issues which has been raised by the introduction of complex computing systems and by their use in real time application control. In particular, attention has to be focused on the need of suitable and powerful diagnostic tools for enhancing the maintainability of the system. These concepts represent the guideline of the MuTEAM project. MuTEAM is an experimental, distributed <b>multimicroprocessor</b> <b>system</b> developed for the National Computer Science Program of the Italian National Research Council. Two companion papers / 1. 2 / deal with the architectural aspects and operating system kernel of the MuTEAM while in this paper a proposal for embedding self-diagnostic facilities in a <b>multimicroprocessor</b> <b>system</b> and the under lying fault treatment strategy of the MuTEAM is presented. The interest in a self-diagnostic approach is motivated by the fact that: a) it can be made modular and can be fitted to the actual resources in the system; b) it is functionally distributed, since no centralized control is strictly required; c) constitutes a valid solution for an efficient testing by conveniently exploiting the parallelism of multiprocessor systems; d) can be implemented at a sufficiently high level of abstraction and therefore can be considered independent by the used technologies; e) can be used for a periodic diagnosis as an easy maintenance aid, to pinpoint errors caused by latent faults to avoid a possible catastrophic failure of the system caused by the superimposition of many undetected faults; f) can be considered an aid to the online fault detection and diagnosis without the need of interrupting the normal computation of the system (concurrent diagnosis / 3 /); g) they can be fitted to degraded configurations of the system without a complete loss of diagnostic power...|$|E
40|$|The {{applicability}} of parallel processing schemes {{to the implementation}} of a contextual classification algorithm which exploits the spatial and spectral context of a multispectral remote sensing pixel to achieve classification is examined. Two algorithms for classifying each multivariate pixel taking into account the probable classifications of neighboring pixels are presented which make use of a size three horizontally linear neighborhood, and the serial computational complexity of the more efficient algorithm is shown to grow in proportion to the number of pixels and the cube of the number of possible categories. The implementation of the more efficient algorithm on a CDC Flexible Processor system and on a <b>multimicroprocessor</b> <b>system</b> such as the proposed PASM is then discussed. It is noted that the use of N processors to perform the calculations N times faster than a single processor overcomes the principal disadvantage of contexual classifiers, i. e., their computational complexity...|$|E
40|$|MuTEAM is a <b>multimicroprocessor</b> <b>system,</b> being {{developed}} in Pisa under {{the support of}} the National Computer Science Program of the Italian National Research Council / 1 /. The system is composed of several Computer Elements (essentially constituted of a processor and some memory), which are grouped in clusters o The Computer Elements of the same cluster communicate through a shared memory space, which is utilized for obtaining a fast message transmission among processes. The shared space is segmented, and a protection mechanism is provided, which associates an access control list to each segment: the list of a given segment specifies the access rights of each processor of the cluster on that segment. In this paper, the MuTEAM system architecture and protection mechanisms are described in some detail. The provided fault treatment strategy and the operating system kernel are related in / 2 / and / 3 /, respectively...|$|E
40|$|Existing {{hardware}} {{integrated into}} versatile, high-speed control system. Report discusses five global design considerations to integrate array-processor, <b>multimicroprocessor,</b> and host-computer <b>system</b> architectures into versatile, high-speed controllers. Such controllers {{are capable of}} control throughputs as high as 36 MHz for 8 -bit bytes and maintain constant interaction with non-real-time or user environment. Application example, architecture of high-speed, closed-loop controller used to control helicopter vibration actively discussed...|$|R

