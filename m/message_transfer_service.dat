4|3035|Public
50|$|The X.400-series {{recommendations}} {{define the}} technical aspects of the MHS: ITU-T Rec. X.402 | (ISO/IEC 10021-2) defines the overall system architecture of an MHS, ITU-T Rec. X.411 | (ISO/IEC 10021-4) defines the <b>Message</b> <b>Transfer</b> <b>Service</b> (MTS) and its functional component the Message Transfer Agent (MTA), and ITU-T Rec. X.413 | (ISO/IEC 10021-5) defines the Message Store. All ITU-T recommendations provide specific terms for descriptions of system entities and procedures. For example, messages (email) exchanged among people is referred to as Interpersonal Messaging (IPM); electronically structured business documents (e.g., invoices, purchase orders, dispatch advice, etc.) exchanged among trading partners’ computers fall under the EDI protocols.|$|E
40|$|International Telemetering Conference Proceedings / October 20 - 23, 2003 / Riviera Hotel and Convention Center, Las Vegas, NevadaThe Consultative Committee for Space Data Systems (CCSDS) is an {{international}} organization of national space agencies that is branching out to provide new standards to enhanced reuse of spacecraft equipment and software. These Spacecraft Onboard Interface (SOIF) standards will be directed towards a spacecraft architecture, as a distributed system of processors and busses. This paper will review the services that are being proposed for SOIF. These services include a Command and Data Acquisition Service, a Time Distribution Service, a <b>Message</b> <b>Transfer</b> <b>Service,</b> a File Transfer Service, and a CCSDS Packet Service. An Instrument & Subsystem “Plug & Play Service is currently under study, but is included in this paper for completeness...|$|E
40|$|In recent years, XML {{has been}} {{accepted}} as the format of messages for several applications. Prominent examples include SOAP for Web services, XMPP for instant messaging, and RSS and Atom for content syndication. This XML usage is understandable, as the format itself is a well-accepted standard for structured data, and it has excellent support for many popular programming languages, so inventing an application-specific format no longer seems worth the effort. Simultaneously with this XML's rise to prominence {{there has been an}} upsurge in the number and capabilities of various mobile devices. These devices are connected through various wireless technologies to larger networks, and a goal of current research is to integrate them seamlessly into these networks. These two developments seem to be at odds with each other. XML as a fully text-based format takes up more processing power and network bandwidth than binary formats would, whereas the battery-powered nature of mobile devices dictates that energy, both in processing and transmitting, be utilized efficiently. This thesis presents the work we have performed to reconcile these two worlds. We present a <b>message</b> <b>transfer</b> <b>service</b> that we have developed to address what we have identified as the three key issues: XML processing at the application level, a more efficient XML serialization format, and the protocol used to transfer messages. Our presentation includes both a high-level architectural view of the whole <b>message</b> <b>transfer</b> <b>service,</b> as well as detailed descriptions of the three new components. These components consist of an API, and an associated data model, for XML processing designed for messaging applications, a binary serialization format for the data model of the API, and a message transfer protocol providing two-way messaging capability with support for client mobility. We also present relevant performance measurements for the service and its components. As a result of this work, we do not consider XML to be inherently incompatible with mobile devices. As the fixed networking world moves toward XML for interoperable data representation, so should the wireless world also do to provide a better-integrated networking infrastructure. However, the problems that XML adoption has touch all of the higher layers of application programming, so instead of concentrating simply on the serialization format we conclude that improvements need to be made in an integrated fashion in all of these layers...|$|E
40|$|WS-Security {{plays an}} {{important}} role to secure <b>message</b> <b>transferring</b> among <b>services</b> which located on heterogeneous platforms. As two popular web services platforms, Apache Axis 2 and Microsoft. Net, have their own security module respectively (Rampart, WSE). Though these security modules were implemented according to the same WS-Security protocol, there are still some differences which make it difficult to build a secure web services communications between the platforms. This paper introduces the Apache Axis 2 and. Net platforms firstly, and then analyzes their differences of security mechanism on these two platforms. Finally, followed by a typical secure case, a series of steps are designed and tested in order to realize secure web service invocation on heterogeneous platforms...|$|R
5000|$|Within {{ten months}} of FEMA making the government’s design {{specifications}} for this secure interface for <b>message</b> <b>transfer</b> available, wireless <b>service</b> providers choosing {{to participate in}} CMAS must begin development and testing of systems which {{will allow them to}} receive alerts from alert originators and distribute them to their customers. [...] Systems must be fully deployed within 28 months of the December 2009 adoption of such standards and are expected to be delivering alert messages to the public by 2012. [...] Although not mandatory, several wireless providers, including T-Mobile, AT&T, Sprint, and Verizon have announced their willingness to participate in the system. Providers who do not wish to participate must notify their customers. Some phones which are not CMAS-capable may require only a software upgrade; while others may need to be replaced entirely.|$|R
3000|$|... across {{can achieve}} by testing experiment. Packet_in_onei̇ {{is the number}} of <b>messages</b> <b>transferring</b> in one cluster, and Packet_in_acrossi̇ {{is the number of}} <b>messages</b> <b>transferring</b> across clusters, which is {{calculated}} as follows.|$|R
40|$|Spacecraft {{applications}} that interact with on-board sensors, effectors, and major components have traditionally used private interfaces which are tightly {{bound to the}} interface details of the data links connecting these sub-systems. The latest spacecraft, which often include several powerful processors running real time operating systems, highspeed on-board networks, and intelligent peripherals, can support a more layered networked environment. Use of standard interfaces and networked elements is expected to yield reusable software and hardware components. Within CCSDS Panel 1 K we have been developing such on-board interface standards. This paper will present a <b>Message</b> <b>Transfer</b> <b>Service</b> that defines a common API for use within a single spacecraft or among spacecraft flying in a constellation. The Consultative Committee on Space Data Systems (CCSDS) is an international volunteer organization of space agencies and industrial associates interested in mutually developing standard data handling techniques to support space research, including space science and applications. It has, over the years, published a series of standard recommendations for space communications, starting with physical layer modulation and coding, and including link layer and reliable data delivery over near Earth and Deep Space communication distances. Se...|$|E
3000|$|... {{should be}} {{transferred}} across cluster. The number of <b>messages</b> <b>transferring</b> in one cluster Packet_in_onei̇ {{and the number}} of <b>messages</b> <b>transferring</b> across clusters Packet_in_acrossi̇ calculate by super controller based on polling least-connection algorithm.|$|R
2500|$|... 220D - Digital <b>Message</b> <b>Transfer</b> Device Subsystems (Combat-net radio) ...|$|R
50|$|<b>Message</b> <b>Transfer</b> Part 2 User Adaptation Layer (M2UA), RFC 3331.|$|R
50|$|<b>Message</b> <b>Transfer</b> Part 3 User Adaptation Layer (M3UA), RFC 4666.|$|R
50|$|<b>Message</b> <b>Transfer</b> Part 2 (MTP) User Peer-to-Peer Adaptation Layer (M2PA), RFC 4165.|$|R
5000|$|... qmail is {{the only}} broadly {{deployed}} public domain software <b>message</b> <b>transfer</b> agent (MTA).|$|R
500|$|Position {{determination}} and <b>message</b> <b>transfer</b> system employing satellites and stored terrain map, granted June 13, 1989 ...|$|R
500|$|Position {{determination}} and <b>message</b> <b>transfer</b> system employing satellites and stored terrain map, granted October 23, 1990 ...|$|R
500|$|Satellite-based {{position}} determining and <b>message</b> <b>transfer</b> {{system with}} monitoring of link quality, granted May 10, 1988 ...|$|R
5000|$|For SMTP the Exim <b>message</b> <b>transfer</b> agent {{supports}} OCSP stapling in bothclient and server [...] modes.|$|R
5000|$|Position {{determination}} and <b>message</b> <b>transfer</b> system employing satellites and stored terrain map, granted June 13, 1989 ...|$|R
5000|$|Position {{determination}} and <b>message</b> <b>transfer</b> system employing satellites and stored terrain map, granted October 23, 1990 ...|$|R
5000|$|Satellite-based {{position}} determining and <b>message</b> <b>transfer</b> {{system with}} monitoring of link quality, granted May 10, 1988 ...|$|R
50|$|The Internet Engineering Task Force (IETF) defined SIGTRAN {{protocols}} which {{translate the}} common channel signaling paradigm to the IP <b>Message</b> <b>Transfer</b> Part (MTP) level 2 (M2UA and M2PA), <b>Message</b> <b>Transfer</b> Part (MTP) level 3 (M3UA) and Signalling Connection Control Part (SCCP) (SUA). While {{running on a}} transport based upon IP, the SIGTRAN protocols are not an SS7 variant, but simply transport existing national and international variants of SS7.|$|R
5000|$|MMDF, the Multichannel Memorandum Distribution Facility, is a <b>message</b> <b>transfer</b> agent (MTA), a {{computer}} program designed to transmit email.|$|R
40|$|Abstract — In this paper, {{we propose}} a {{light-weight}} asynchronous message progression mechanism for large <b>message</b> <b>transfers</b> in <b>Message</b> Passing Interface (MPI) Rendezvous protocol that is scenario-conscious and consequently overhead-free {{in cases where}} independent message progression naturally happens. Without requiring a dedicated thread, we take advantage of small bursts of CPU to poll for <b>message</b> <b>transfer</b> conditions. The existing application thread is parasitized {{for the purpose of}} getting those small bursts of CPU. Our proposed approach is only triggered when the <b>message</b> <b>transfer</b> would otherwise be deferred to the MPI wait call; and it allows for full message progression, achieving 100 % overlap. It does not add to the memory footprint of the applications, and is effective in improving the communication performance of most of the applications studied in this paper. I...|$|R
50|$|A-Link Concentrator (ALC) - An SP {{that has}} the <b>Message</b> <b>Transfer</b> Part (MTP) {{functionality}} of an STP and {{also serves as a}} CCSSO.|$|R
50|$|As {{a general}} rule, every <b>message</b> <b>transferred</b> in L(n) {{requires}} both a transfer and an acknowledgment on L(n-1). Only L1-L4 are visible on Um.|$|R
50|$|The {{service of}} Phoenix is {{extended}} to WAP, which facilitates news <b>messages</b> <b>transferred</b> through the mobile technology (SMS and MMS). The service is charged.|$|R
40|$|Abstract. We study <b>message</b> <b>transfer</b> in a 2 -d {{communication}} network of regular nodes and randomly distributed hubs. We study both single <b>message</b> <b>transfer</b> and multiple <b>message</b> <b>transfer</b> on the lattice. The average travel time for single messages travelling between source and target pairs of fixed separations shows q-exponential behaviour {{as a function}} of hub density with a characteristic power-law tail, indicating a rapid drop in the average travel time {{as a function of}} hub density. This power-law tail arises {{as a consequence of the}} log-normal distribution of travel times seen at high hub densities. When many messages travel on the lattice, a congestion–decongestion transition can be seen. The waiting times of messages in the congested phase show a Gaussian distribution, whereas the decongested phase shows a log-normal distribution. Thus the waiting time distributions carry the signature of congested or decongested behaviour...|$|R
40|$|AbstractManaging a {{connection}} between two hosts in a network is an important service to provide {{in order to make}} the network useful for many applications. The two main subproblems are the management of serial incarnations of {{a connection}} and the <b>transfer</b> of <b>messages</b> within an incarnation, This paper investigates whether it is necessary for connection management protocols to retain state information across node crashes and between incarnations. The following results were obtained: •When information is not retained across node crashes, incarnation management is not possible at all. •When information is not retained between incarnations, incarnation management is possible if the network is FIFO and not possible if the network is non-FIFO. •When information is not retained across node crashes, <b>message</b> <b>transfer</b> can be accomplished in networks that lose packets if the network is FIFO the protocol is allowed a variable length grace period after a crash during which it need not deliver <b>messages.</b> However, <b>message</b> <b>transfer</b> cannot be accomplished if the network is non-FIFO or the grace period allowed is fixed. •When information is not retained across node crashes, <b>message</b> <b>transfer</b> can he accomplished in networks that do not lose packets if the network is FIFO the protocol need not be FIFO, <b>Message</b> <b>transfer</b> is not possible when the network is non-FIFO and the protocol must be FIFO. •If the network has bounded capacity, then <b>message</b> <b>transfer</b> is possible without using stable storage. This indicates, somewhat surprisingly, that there is a data link initialization protocol that can withstand node crashes without stable storage...|$|R
5000|$|There {{are three}} types of {{information}} <b>transfer</b> <b>services.</b> These are <b>transfer</b> <b>services</b> to and from: ...|$|R
50|$|HEARO is {{the only}} {{publicly}} available implementation of any component of a Common Alerting Protocol-based alert <b>message</b> <b>transfer</b> system. It can also provide NOAA Weather Radio updates.|$|R
40|$|To {{improve the}} {{performance}} of geographically distributed cosimulation, we propose a concept called hierarchically grouped message. The concept improves cosimulation performance, preserving the cosimulation accuracy, by hierarchically grouping <b>messages</b> <b>transferred</b> between simulators {{in a short period}} of simulated time into a single physical message, thereby reducing the number of physical messages. Applying the concept to hybrid and optimistic cosimulation, we can reduce the number of rollbacks as well as the communication overhead accompanying the <b>message</b> <b>transfer.</b> Experimental results show the efficiency of the proposed method for practical examples in an internationally distributed cosimulation environment...|$|R
50|$|Many Mail Handling Software {{products}} bundle {{multiple message}} delivery agents with the <b>message</b> <b>transfer</b> agent component, providing for site customization of {{the specifics of}} mail delivery to a user.|$|R
40|$|The {{overhead}} of copying data {{through the}} central processor by a message passing protocol limits data transfer bandwidth. If the network interface directly transfers the user's memory {{to the network}} by issuing DMA, such data copies may be eliminated. Since the DMA facility accesses the physical memory address space, user virtual memory must be pinned down to a physical memory location before the message is sent or received. If each <b>message</b> <b>transfer</b> involves pin-down and release kernel primitives, <b>message</b> <b>transfer</b> bandwidth will decrease since those primitives are quite expensive. We propose a zero copy <b>message</b> <b>transfer</b> with a pin-down cache technique which reuses the pinneddown area to decrease the number of calls to pin-down and release primitives. The proposed facility has been implemented in the PM low-level communication library on our RWC PC Cluster II, consisting of 64 Pentium Pro 200 MHz CPUs connected by a Myricom Myrinet network, and running NetBSD. The PM achieves 108. 8 MBytes [...] ...|$|R
40|$|Abstract Managing a {{connection}} between two hosts in a network is an important service to provide {{in order to make}} the network useful for many applications. The two main subproblems are the management of serial incarnations of {{a connection}} and the <b>transfer</b> of <b>messages</b> within an incarnation. This paper investigates whether it is necessary for connection management protocols to retain state information across node crashes and between incarnations. The following results were obtained: ffl When information is not retained across node crashes, incarnation management is not possible at all. ffl When information is not retained between incarnations, incarnation management is possible if the network is FIFO and not possible if the network is non-FIFO. ffl When information is not retained across node crashes, <b>message</b> <b>transfer</b> can be accomplished in networks that lose packets if the network is FIFO and the protocol is allowed a variable length grace period after a crash during which it need not deliver <b>messages.</b> However, <b>message</b> <b>transfer</b> cannot be accomplished if the network is non-FIFO or the grace period allowed is fixed. ffl When information is not retained across node crashes, <b>message</b> <b>transfer</b> can be accomplished in networks that do not lose packets if the network is FIFO or the protocol need not be FIFO. <b>Message</b> <b>transfer</b> is not possible when the network is non-FIFO and the protocol must be FIFO...|$|R
50|$|Within the Internet mail architecture, local message {{delivery}} is achieved {{through a process}} of handling messages from the <b>message</b> <b>transfer</b> agent, and storing mail into the recipient's environment (typically a mailbox).|$|R
50|$|SQL Remote: SQL Remote {{technology}} {{is based on}} a store and forward architecture that allows occasionally connected users to synchronize data between SQL Anywhere databases using a file or <b>message</b> <b>transfer</b> mechanism.|$|R
