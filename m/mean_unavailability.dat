1|5|Public
40|$|Safety {{analysis}} {{studies in}} nuclear engineering, more specifically system reliability, usually handle {{a great number}} of components, so that computational difficulties may arise. To face the problem of many component systems a method for simplifying the state transition diagram in Markovian reliability analyses has been proposed, using the edges which can be cut, since these latter have a smaller influence on system failure probability. In order to extend the application of GPT (Generalized Perturbation Theory), this work uses GPT formalism {{to reduce the number of}} states in a transition diagram, not considering the state probability as the integral quantity of interest, but the mean system unavailability instead. Therefore, after simplifying the original diagram, the <b>mean</b> <b>unavailability</b> for the new system was calculated and the results were very close to those of the original diagram integral quantity (giving a relative error of about 2 %), showing that the proposed simplification is quite reasonable and simple to apply...|$|E
40|$|The FRANTIC 5 code is a {{modification}} of the FRANTIC II code for time dependent unavailability analysis. FRANTIC 5 is specially adapted for modeling the aging effects on system and component performance. The FRANTIC 5 code uses the linear aging model, i. e., {{based on the assumption}} that component failure rates increase linearly in time. The constant failure rate and the aging acceleration rate for a component can be changed during the plant life, which allows the creation of different time scales for components as a function of the replacement or any significant maintenance or repair action on the component. FRANTIC 5 preserves most of the unique features of FRANTIC II, for example the modeling of periodic testing. The output from FRANTIC 5 consists of the system <b>mean</b> <b>unavailabilities,</b> tables of the system unavailabilities at designated time points and the system <b>mean</b> <b>unavailabilities</b> between consecutive tests. The code is applied for evaluation of aging effects of the Auxiliary Feedwater System of Arkansas Nuclear Unit 1. The usefulness of the method will depend upon the availability of the component aging data needed to develop the model parameters. "November 1986. "Includes bibliographical referencesPrepared for EG&G Idaho, Inc. special research subcontract no. C 86 - 10094...|$|R
40|$|This article {{presents}} an automatic malfunction detection framework {{based on data}} mining approach to analysis of network event sequences. The considered environment is Long Term Evolution (LTE) for Universal Mobile Telecommunication System (UMTS) with sleeping cell caused by random access channel failure. Sleeping cell problem <b>means</b> <b>unavailability</b> of network service without triggered alarm. The proposed detection framework uses N-gram analysis for identification of abnormal behavior in sequences of network events. These events are collected with Minimization of Drive Tests (MDT) functionality standardized in LTE. Further processing applies dimensionality reduction, anomaly detection with k-nearest neighbor, cross-validation, post-processing techniques and efficiency evaluation. Different anomaly detection approaches proposed in this paper are compared against each other with both classic data mining metrics, such as F-score and receiver operating characteristic curves, and a newly proposed heuristic approach. Achieved results demonstrate that the suggested method {{can be used in}} modern performance monitoring systems for reliable, timely and automatic detection of random access channel sleeping cells. Comment: 26 page...|$|R
40|$|This is the Manchester OWL Corpus (MOWLCorp) in its OWL/XML serialisation. The files sub-directory {{contains}} the actual files. The metadata directory contains csv files with some essential metrics on the ontologies. As can be seen, some files (that were parseable {{once in the}} past), were not parseable anymore on the 20 th January 2015, due to unloadable imports, or updated parsers that were not backwards compatible. This might <b>mean</b> temporary <b>unavailability,</b> or permanent. A more detailed log {{can be found in}} the metadata directory. Find more information on how to use the corpus, and for what kind of research it might be suitable, on [URL]...|$|R
40|$|Legacy {{software}} {{must often}} be reengineered, {{a process that}} involves both reverse and forward engineering. No doubt, {{there is a lack}} of resource requirements, design, or design rationale documentation for legacy software. This lack of resource requirement <b>means</b> an <b>unavailability</b> of traces as well, making reengineering difficult and expensive. In this paper we arise the reengineering task and their issues at Design recovery side. We present the re-engineering project case study reports and share the experiences gained in a largescale industrial reengineering project. We also refer the possible key practices from existing software process called Extreme Programming and their adoptive practices at other side. This is the extension of the work we published in Developer IQ [9]...|$|R
30|$|The {{availability}} A(t) {{according to}} EN 50126 {{is a combination}} of reliability and maintainability. The safety attribute is not included in the railway availability even if both are dependent. In relation to railway safety-related systems, we usually talk about dependability and safety distinctly. A(t) depends on correct position determination, correct function of diagnostics and maintainability M(t) of GNSS system. It can be written as A{t|M(t)}. Availability A{t|M(t)} can be evaluated by <b>means</b> of the <b>unavailability,</b> the probability of incorrect operations U{t|M(t)} under condition that maintainability M(t) is provided (âˆ€ t, M(t)= 1).|$|R

