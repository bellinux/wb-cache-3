360|121|Public
5000|$|<b>Master</b> <b>node</b> - node {{that generates}} {{the clock and}} initiates {{communication}} with slaves.|$|E
50|$|The High Performance Computing (HPC) lab at IIIT-Bh has 12 compute nodes, 1 GPU node, 1 <b>master</b> <b>node,</b> and 1 storage array.|$|E
5000|$|Nodes- There are {{two types}} of nodes, i.e., <b>Master</b> <b>Node</b> and Worker Node. The <b>Master</b> <b>Node</b> executes a daemon Nimbus which assigns tasks to {{machines}} and monitors their performances. On the other hand, the Worker Node runs the daemon called Supervisor which assigns the tasks to other worker node and operates them as per the need. As Storm cannot monitor the state and health of cluster, it deploys ZooKeeper to solve this issue which connects Nimbus with the Supervisors.|$|E
50|$|Distributed job {{processing}} in JobServer is enabled using an agent model where remote nodes communicate {{with a central}} pair (primary/secondary) of <b>master</b> <b>nodes.</b> The <b>master</b> <b>nodes</b> {{are responsible for the}} job scheduling and distribute the {{job processing}} across a cluster of agent nodes.|$|R
40|$|In this paper, {{we propose}} a {{specific}} time synchronization protocol called MSTSP (Master Slave Time Synchronization Protocol). We designed MSTSP based on the master-slave topology {{in order to synchronize}} the time of the heterogeneous sensor nodes. Heterogeneous sensor networks can be used in various risk-associated areas. Time synchronization among the heterogeneous sensor nodes is essential in Ubiquitous Sensor Network systems. In MSTSP, the time-sync <b>master</b> <b>nodes</b> can always be synchronized with the Sink Node of USN, because the sensor nodes which are homogeneous with the Sink <b>Node</b> become time-sync <b>master</b> <b>nodes.</b> And other sensor nodes which differ from the Sink Node must be time-sync slave nodes, which need to belong to one of the specific <b>master</b> <b>nodes.</b> The time-sync <b>master</b> <b>nodes</b> then enable time-sync slave nodes to be synchronized with the sleep periods. The proposed MSTSP is also useful for power saving by maintaining maximum sleep time...|$|R
40|$|Abstract—Most {{large-scale}} sensor {{networks are}} expected to follow a two-tier architecture with resource-poor sensor nodes at the lower tier and resource-rich <b>master</b> <b>nodes</b> at the upper tier. <b>Master</b> <b>nodes</b> collect data from sensor nodes and then answer the queries from the network owner on their behalf. In hostile environments, <b>master</b> <b>nodes</b> may be compromised by the adversary and then instructed to return fake and/or incomplete data in response to data queries. Such application-level attacks are more harmful and difficult to detect than blind DoS attacks on network communications, especially when the query results are the basis for making critical decisions such as military actions. This paper presents three schemes whereby the network owner can verify the authenticity and completeness of fine-grained top-k query results in tired sensor networks, {{which is the first}} work of its kind. The proposed schemes are built upon symmetric cryptographic primitives and force compromised <b>master</b> <b>nodes</b> to return both authentic and complete top-k query results to avoid being caught. Detailed theoretical and quantitative results confirm the high efficacy and efficiency of the proposed schemes. I...|$|R
50|$|Administrators can {{specify a}} list of server hosts each broker can connect to and, {{in the event of}} a failure of the <b>master</b> <b>node,</b> another will be used.|$|E
50|$|A GFS cluster {{consists}} of multiple nodes. These nodes {{are divided into}} two types: one <b>Master</b> <b>node</b> {{and a large number}} of Chunkservers. Each file is divided into fixed-size chunks. Chunk servers store these chunks. Each chunk is assigned a unique 64-bit label by the <b>master</b> <b>node</b> at the time of creation, and logical mappings of files to constituent chunks are maintained. Each chunk is replicated several times throughout the network, with the minimum being three, but even more for files that have high end-in demand or need more redundancy.|$|E
50|$|Democratic network - There {{should be}} no <b>master</b> <b>node.</b> All nodes in the network {{should have the same}} {{communication}} rights so that there is no single point of failure.|$|E
40|$|A {{two-level}} {{finite element}} technique of constructing a frame super-element is introduced {{to reduce the}} computational efforts for solving large scale frame problems. The ordinary finite element method is used first to yield matrices for the beam members. Then the nodal displacements of all the nodes are related to those of {{a small number of}} selected joints (<b>master</b> <b>nodes)</b> in the frame by means of global finite element interpolating functions. Thus the order of the overall matrices is greatly reduced and the frame may be considered as a super-element to be connected to other elements by means of the <b>master</b> <b>nodes.</b> The accuracy of solution may be improved either with finer subdivision or by taking more <b>master</b> <b>nodes</b> inside each super-element. © 1981. link_to_subscribed_fulltex...|$|R
40|$|The {{invention}} is {{a multiple}} interconnected network of intelligent message-repeating remote nodes which employs an antibody recognition message termination process performed by all remote nodes and a remote node polling process performed by other <b>nodes</b> which are <b>master</b> units controlling remote nodes in respective zones {{of the network}} assigned to respective <b>master</b> <b>nodes.</b> Each remote node repeats only those messages originated in the local zone, to provide isolation among the <b>master</b> <b>nodes...</b>|$|R
50|$|The bus is a multi-master bus, {{which means}} that any number of <b>master</b> <b>nodes</b> can be present. Additionally, master and slave roles may be changed between {{messages}} (after a STOP is sent).|$|R
5000|$|In a White Rabbit timing network a {{designated}} timing <b>master</b> <b>node</b> provides timing {{for the entire}} network. The timing master is [...] with an atomic clock and is synchronized with a GPS receiver.|$|E
50|$|Pivotal's Greenplum {{database}} product uses {{massively parallel}} processing (MPP) techniques. Each computer cluster {{consists of a}} <b>master</b> <b>node,</b> standby <b>master</b> <b>node,</b> and segment nodes.All of the data resides on the segment nodes and the catalog information is stored in the master nodes. Segment nodes run one or more segments, which are modified PostgreSQL database instances and are assigned a content identifier. For each table the data is divided among the segment nodes based on the distribution column keys specified by the user in the data definition language. For each segment content identifier there is both a primary segment and mirror segment which are not running on the same physical host. When a query enters the <b>master</b> <b>node,</b> it is parsed, planned and dispatched {{to all of the}} segments to execute the query plan and either return the requested data or insert the result of the query into a database table.The Structured Query Language, version SQL:2003, is used to present queries to the system. Transaction semantics comply with constraints known as ACID.|$|E
5000|$|... "Map" [...] step: Each worker node {{applies the}} [...] "map (...) [...] " [...] {{function}} {{to the local}} data, and writes the output to a temporary storage. A <b>master</b> <b>node</b> ensures that only one copy of redundant input data is processed.|$|E
40|$|We {{consider}} a sensor network {{that is not}} fullytrusted and ask the question how we preserve privacy for the collected data and how we verify the data reply from the network. <b>Master</b> <b>nodes</b> collect datafrom sensor nodes and answer the queries from the network owner. It offers data confidentiality by preventing <b>master</b> <b>nodes</b> from reading hosted data and also enables efficient range-query processing. Previous work on data-centricrouting has shown it to be energy-efficient data disseminationmethod for sensor nets. Toimprove performance, we propose an optimization technique usingBloom filters to reduce the communication cost between sensorsand storage nodes...|$|R
50|$|The game {{revolves}} around Nevin trying {{to free the}} EchoPlast from Paavo by taking control of various <b>Master</b> <b>Nodes</b> and Sync Nodes. To take control of them, the player must complete a puzzle.|$|R
40|$|Abstract－This paper {{presents}} a structural shape optimization algorithm {{based on the}} evolutionary structural optimization (ESO) method in conjunction with element error estimate and adaptive FEM. B-splines are {{used to describe the}} boundary of the design domain; the shape of these B-splines is governed by a set of <b>master</b> <b>nodes</b> which can be taken as the design variables. The optimal shape of the design boundary with constant stress is achieved iteratively by the movement and update of the position of the <b>master</b> <b>nodes</b> based on nodal stress leveling. The result quality, in terms of accuracy and efficiency, is tested and discussed with an analytical solution...|$|R
50|$|The {{following}} {{is an example of}} a complete SuperPascal program, which constructs a pipeline communication structure with 100 nodes. A <b>master</b> <b>node</b> sends an integer token to the first node, this is then passed along the pipeline and incremented at each step, and finally received by the <b>master</b> <b>node</b> and printed out.program pipeline;const len = 100;type channel = *(integer);var left, right: channel; value: integer;procedure node(i: integer; left, right: channel);var value: integer;begin receive(left, value); send(right, value+1)end;procedure create(left, right: channel);type row = array 0..len of channel;var c: row; i: integer;begin c0 := left; clen := right; for i := 1 to len-1 do open(ci); forall i := 1 to len do node(i, ci-1, ci)end;begin open(left, right); parallel send(left, 0) | create(left, right) | receive(right, value) end; writeln('The resulting value is ', value)end.|$|E
50|$|All {{messages}} are {{initiated by the}} master with at most one slave replying to a given message identifier. The <b>master</b> <b>node</b> can also act as a slave by replying to its own messages. Because all communications are initiated by the master {{it is not necessary}} to implement a collision detection.|$|E
50|$|A small Hadoop cluster {{includes}} a single master and multiple worker nodes. The <b>master</b> <b>node</b> {{consists of a}} Job Tracker, Task Tracker, NameNode, and DataNode. A slave or worker node acts as both a DataNode and TaskTracker, though {{it is possible to}} have data-only and compute-only worker nodes. These are normally used only in nonstandard applications.|$|E
40|$|Abstract-We {{consider}} a sensor network {{that is not}} fullytrusted and ask the question how we preserve privacy for the collected data and how we verify the data reply from the network. <b>Master</b> <b>nodes</b> collect datafrom sensor nodes and answer the queries from the network owner. It offers data confidentiality by preventing <b>master</b> <b>nodes</b> from reading hosted data and also enables efficient range-query processing. Previous work on data-centricrouting has shown it to be energy-efficient data disseminationmethod for sensor nets. Toimprove performance, we propose an optimization technique usingBloom filters to reduce the communication cost between sensorsand storage nodes. A wireless sensor network {{is a collection of}} nodes organized into a cooperative network. Each node consists o...|$|R
50|$|Settlements can be {{verified}} easily without running a full network node. A user only {{needs to keep}} {{a copy of the}} block headers of the longest proof-of-work chain, which he can obtain by querying network nodes until he is convinced he has the longest chain, and obtain the Merkle branch linking the transaction to the block it is time stamped in. He cannot check the transaction for himself, but by linking it to a place in the chain, he can see that a network node has accepted it, and blocks added after it further confirm the network has accept edit. Therefore, the verification is reliable as long as honest <b>master</b> <b>nodes</b> control the network, although it is more vulnerable if the network is over powered by an attacker. While network <b>master</b> <b>nodes</b> can verify transactions for themselves, the simplified method can be fooled by an attacker's fabricated transactions {{for as long as the}} attacker can continue to overpower the network. One strategy to protect against this would be to accept alerts from network <b>master</b> <b>nodes</b> when detect an invalid block, prompting the user's software to download the full block and alerted transactions to confirm the inconsistency. Businesses that receive frequent payments will probably still want to run the own nodes for more independent privacy, security and quicker verification.|$|R
30|$|The {{examination}} {{is conducted}} on 12 node Hadoop clusters with two <b>master</b> <b>nodes</b> (Namenode and Job tracker) and 10 slave nodes. Each node has an Intel Core (TM) i 7 - 4770 CPU@ 3.4  GHz having 8  GB RAM. The cluster works on Ubuntu 14.04, Java 1.8. 0 and Hadoop 2.7. 4.|$|R
5000|$|BSD PTYs {{have been}} {{rendered}} obsolete by Unix98 ptys whose naming {{system does not}} {{limit the number of}} pseudo-terminals and access to which occurs without danger of race conditions. [...] is the [...] "pseudo-terminal master multiplexer". Opening it returns a file descriptor of a <b>master</b> <b>node</b> and causes an associated slave node [...] to be created.|$|E
50|$|The High Availability {{environment}} {{can be built}} with 1:N master-slave server nodes. Each slave node communicates with the master via CUBRID Heartbeat protocol. When a <b>master</b> <b>node</b> is unresponsive, {{the first of the}} slave nodes will get promoted to a master role. Replication between nodes can be achieved in one of three modes: synchronous, semi-synchronous, and asynchronous.|$|E
50|$|The reduce {{operations}} operate {{much the}} same way. Because of their inferior properties with regard to parallel operations, the <b>master</b> <b>node</b> attempts to schedule reduce operations on the same node, or in the same rack as the node holding the data being operated on. This property is desirable as it conserves bandwidth across the backbone network of the datacenter.|$|E
40|$|Abstract—Many future {{large-scale}} unattended sensor networks (USNs) {{are expected}} to follow a two-tier architecture with resource-poor sensor nodes at the lower tier and fewer resource-rich <b>master</b> <b>nodes</b> at the upper tier. <b>Master</b> <b>nodes</b> collect data from sensor nodes and then answer the queries from the net-work owner on their behalf. In hostile environments, <b>master</b> and sensor <b>nodes</b> may be compromised by the adversary and return incorrect data in response to data queries. Such application-level attacks are more harmful and difficult to detect than blind denial-of-service attacks on network communications, particu-larly when the query results are the basis for critical decision making. This paper presents a suite of novel schemes to enable verifiable top-k query processing in USNs, {{which is the first}} work of its kind. The proposed schemes are built upon symmetric cryp-tographic primitives and enable the network owner to detect any incorrect top-k query results. Detailed theoretical and simulation results confirm the high efficacy and efficiency of the proposed schemes. Index Terms—Security, top-k query, unattended tiered sensor networks (UTSNs). I...|$|R
50|$|A multi-master bus is a {{computer}} bus {{in which there are}} multiple bus <b>master</b> <b>nodes</b> present on the bus.This is used when multiple nodes on the bus must initiate transfer.For example, direct memory access (DMA) is used to transfer data between peripherals and memory without the need to use the central processing unit (CPU).|$|R
40|$|Threshold {{cryptography}} {{is a novel}} cryptographic technique sharing secret among members. It divides {{a secret}} key into multiple shares by a cryptographic operation. This technique is useful to provide a shared secret key to <b>master</b> <b>nodes</b> in a infrastructure-less mobile ad-hoc network (MANET). As an additional component, Proactive Secret Sharing (PSS) allows a set of nodes holding shares to refresh all shares by generating {{a new set of}} shares for the same secret key from the old shares without reconstructing the secret key. It is necessary to refresh the shares to secure the secret key from threats of exposing the secret key when threshold cryptography is used. In this paper, we discusses the Proactive Secret Sharingscheme in a MANET. In these scheme all share holder <b>nodes</b> (<b>master</b> <b>nodes)</b> synchronize the PSS procedure in a well managed fashion to keep the work consistency. Then we evaluate its performanc...|$|R
5000|$|The Kubernetes Master is {{the main}} {{controlling}} unit of the cluster that manages its workload and directs communication across the system. The Kubernetes control plane consists of various components, each its own process, that can run both on a single <b>master</b> <b>node</b> or on multiple masters supporting high-availability clusters. The various components of Kubernetes control plane are as follows: ...|$|E
50|$|Oracle NoSQL Database is a client-server, sharded, {{shared-nothing}} system. The data in each shard are replicated {{on each of}} the nodes which {{comprise the}} shard. It provides a simple key-value paradigm to the application developer. The major key for a record is hashed to identify the shard that the record belongs to.Oracle NoSQL Database is designed to support changing the number of shards dynamically in response to availability of additional hardware. If the number of shards changes, key-value pairs are redistributed across the new set of shards dynamically, without requiring a system shutdown and restart. A shard is made up of a single electable <b>master</b> <b>node</b> which can serve read and write requests,and several replicas (usually two or more) which can serve read requests. Replicas are kept up to date using streaming replication. Each change on the <b>master</b> <b>node</b> is committed locally to disk and also propagated to the replicas.|$|E
5000|$|A ring {{is formed}} by {{configuring}} a Domain. Each domain {{has a single}} [...] "master node" [...] and many [...] "transit nodes". Each node will have a primary port and a secondary port, both known {{to be able to}} send control traffic to the <b>master</b> <b>node.</b> Under normal operation, the secondary port on the master is blocked for all protected vlans.|$|E
50|$|Conventionally, {{the first}} {{transaction}} in a block is special transactions that starts a new coin {{owned by the}} creator of the block adding an incentive for <b>master</b> <b>nodes</b> to start supporting the network, and provides away to initially distribute coins into circulation, since there is no central authority to issue at the creator. The steady addition of a constant of amount of new coins is analogous to gold miners expending resources to add gold to circulation. In Vic Coin case, it is CPU time and electricity that is expended. The incentive can as well be funded through transaction fees. If the output value of a transaction is less than its input value, the difference is a transaction fee that is added to the incentive value of the block containing the transaction. Once a predetermined number of coins have entered circulation, the incentive can transition entirely to transaction fees and be completely inflation free. The incentive may help encourage <b>master</b> <b>nodes</b> to stay honest. If a greedy attacker is able to assemble more CPU power than all the honest <b>master</b> <b>nodes,</b> the attacker would have to choose between using it to defraud people by stealing back his payments, or using it to generate new coins. He ought to find it more profit able to play by the rules, such rules that favour the attacker with more new coins than everyone else combined, than to undermine the system and the validity of his own wealth.|$|R
30|$|An {{inherent}} {{problem of}} any distributed synchronization procedure is that nodes {{agree on a}} relative time reference, that is, valid only among the considered nodes and has no external tie. Such a relative reference is opposed to a global time reference such as the Coordinated Universal Time, which is provided by GPS for example. Furthermore, as {{the size of the}} network increases, it becomes increasingly difficult to synchronize the entire network in a completely decentralized manner. To avoid this difficulty, in [25] a scenario was considered where only a few nodes have access to a global time reference. The PCO model was extended such that these <b>master</b> <b>nodes</b> impose a global time reference to the entire network, even though the number of <b>master</b> <b>nodes</b> was {{only a small fraction of}} the total number of nodes in the network. Furthermore, the behavior of normal nodes that do not have access to a global time reference is not modified at all.|$|R
40|$|A {{procedure}} previously {{developed for}} the determination of decay rates for self-equilibrated loadings {{at one end of}} a pin-jointed framework consisting of repeated identical cells, wherein the decay factors are the eigenvalues of the single cell transfer matrix, is here further developed and applied to a prismatic continuum beam of general cross-section. A sectional length of beam is treated within ANSYS finite element code as a super element; nodes {{at both ends of the}} section are treated as <b>master</b> <b>nodes</b> and the stiffness matrix relating forces and displacements at these <b>master</b> <b>nodes</b> is constructed within ANSYS. Manipulation of this stiffness matrix within MATLAB gives the transfer matrix from which the eigenvalues and eigenvectors may be readily determined. Accuracy of the method is assessed by treating the plane strain strip, the plane strain sandwich strip, and the rod of circular cross-section, representing a selection of the examples for which exact analytical solutions are available, and is found to be very good in all cases...|$|R
