343|0|Public
2500|$|In the European Union, {{the most}} common {{infrared}} and protocol is [...] "FLAG", a simplified subset of mode C of IEC 61107. In the U.S. and Canada, the favoured infrared protocol is ANSI C12.18. [...] Some industrial meters use a protocol for programmable logic controllers (<b>Modbus</b> or DNP3).|$|E
5000|$|<b>Modbus</b> over TCP/IP or <b>Modbus</b> over TCP or <b>Modbus</b> RTU/IP — This is a <b>Modbus</b> variant that {{differs from}} <b>Modbus</b> TCP in that a {{checksum}} {{is included in}} the payload as with <b>Modbus</b> RTU.|$|E
5000|$|The {{development}} and update of <b>Modbus</b> protocols has been {{managed by the}} <b>Modbus</b> Organization since April 2004, when Schneider Electric transferred rights to that organization. [...] The <b>Modbus</b> Organization is an association of users and suppliers of Modbus-compliant devices that seeks to drive the adoption and evolution of <b>Modbus.</b>|$|E
5000|$|<b>Modbus</b> RTU — This {{is used in}} serial {{communication}} and makes use of a compact, binary representation of the data for protocol communication. The RTU format follows the commands/data with a cyclic redundancy check checksum as an error check mechanism to ensure the reliability of data. <b>Modbus</b> RTU {{is the most common}} implementation available for <b>Modbus.</b> A <b>Modbus</b> RTU message must be transmitted continuously without inter-character hesitations. <b>Modbus</b> messages are framed (separated) by idle (silent) periods.|$|E
5000|$|<b>Modbus</b> TCP/IP or <b>Modbus</b> TCP — This is a <b>Modbus</b> variant {{used for}} {{communications}} over TCP/IP networks, connecting over port 502. It {{does not require}} a checksum calculation, as lower layers already provide checksum protection.|$|E
50|$|<b>Modbus</b> Organization, Inc. is a trade {{association}} for the promotion and development of <b>Modbus</b> protocol.|$|E
50|$|Despite the name, <b>Modbus</b> Plus is not {{a variant}} of <b>Modbus.</b> It is a {{different}} protocol, involving token passing.|$|E
5000|$|The {{following}} is a table of object types provided by a <b>Modbus</b> slave device to a <b>Modbus</b> master device: ...|$|E
5000|$|<b>Modbus</b> over UDP — Some have {{experimented with}} using <b>Modbus</b> over UDP on IP networks, which removes the {{overheads}} required for TCP.|$|E
50|$|Each device {{intended}} to communicate using <b>Modbus</b> {{is given a}} unique address. In serial and MB+ networks, only the node assigned as the Master may initiate a command. On Ethernet, any device can send out a <b>Modbus</b> command, although usually only one master device does so. A <b>Modbus</b> command contains the <b>Modbus</b> address of the device it is intended for (1 to 247). Only the intended device will act on the command, even though other devices might receive it (an exception is specific broadcastable commands sent to node 0, which are acted on but not acknowledged). All <b>Modbus</b> commands contain checksum information, to allow the recipient to detect transmission errors. The basic <b>Modbus</b> commands can instruct an RTU to change the value {{in one of its}} registers, control or read an I/O port, and command the device to send back one or more values contained in its registers.|$|E
5000|$|Versions of the <b>Modbus</b> {{protocol}} {{exist for}} serial port and for Ethernet and other protocols {{that support the}} Internet protocol suite. There are many variants of <b>Modbus</b> protocols: ...|$|E
50|$|Although 4-20 mA {{has been}} the main field {{signalling}} standard, modern DCS systems can also support fieldbus digital protocols, such as Foundation Fieldbus, profibus, HART, <b>Modbus,</b> PC Link etc., and other digital communication protocols such as <b>modbus.</b>|$|E
5000|$|Pemex <b>Modbus</b> — This is an {{extension}} of standard <b>Modbus</b> with support for historical and flow data. It was designed for the Pemex oil and gas company for use in process control and never gained widespread adoption.|$|E
5000|$|<b>Modbus</b> ASCII — This {{is used in}} serial {{communication}} and makes use of ASCII characters for protocol communication. The ASCII format uses a longitudinal redundancy check checksum. <b>Modbus</b> ASCII messages are framed by leading colon (":") and trailing newline (CR/LF).|$|E
5000|$|<b>Modbus</b> Plus (Modbus+, MB+ or MBP) — <b>Modbus</b> Plus is {{proprietary}} to Schneider Electric {{and unlike}} the other variants, it supports peer-to-peer communications between multiple masters. It requires a dedicated co-processor to handle fast HDLC-like token rotation. It uses twisted pair at 1 Mbit/s and includes transformer isolation at each node, which makes it transition/edge-triggered instead of voltage/level-triggered. Special hardware is required to connect <b>Modbus</b> Plus to a computer, typically a card made for the ISA, PCI or PCMCIA bus.|$|E
50|$|Unit {{identifier}} is {{used with}} Modbus/TCP devices that are composites of several <b>Modbus</b> devices, e.g. on Modbus/TCP to <b>Modbus</b> RTU gateways. In such case, the unit identifier tells the Slave Address {{of the device}} behind the gateway. Natively Modbus/TCP-capable devices usually ignore the Unit Identifier.|$|E
5000|$|<b>Modbus</b> support {{provided}} by built-in FreeModBus version 1.5.0.|$|E
50|$|All <b>Modbus</b> {{variants}} {{choose one}} of the following frame formats.|$|E
5000|$|Enron <b>Modbus</b> — This {{is another}} {{extension}} of standard <b>Modbus</b> developed by Enron Corporation with support for 32-bit integer and floating-point variables and historical and flow data. Data types are mapped using standard addresses. The historical data serves {{to meet an}} American Petroleum Institute (API) industry standard for how data should be stored.|$|E
50|$|There {{are simple}} and complex types of {{conversions}} {{depending on the}} application and domain in which this is being used. The simplest and most commonly used conversion is protocol conversion between <b>Modbus</b> RTU and <b>Modbus</b> TCP. In this conversion, there is {{no change in the}} overall framing. Hence it is easy to take the Serial <b>Modbus</b> RTU frame and encapsulate it in a TCP/UDP socket and send it over Ethernet. Since both the protocol framings are the same, except for the actual physical layer transmission, both the application layers will interpret data similarly as long as the communication interfaces are made transparent.|$|E
5000|$|<b>Modbus</b> {{protocol}} itself {{provides no}} security against unauthorized commands or interception of data.|$|E
50|$|DMR-800D C1D2 - A Class 1 Division 2 {{certified}} satellite transceiver {{that allows}} monitoring of assets, processes and environments in hazardous locations. The product includes a RS-485 serial interface for connection to SCADA devices, <b>Modbus</b> protocol interfaces for implementing reporting and telemetry capabilities of remote equipment and discrete input/output feeds for {{monitoring and control}} of local devices not using <b>Modbus.</b>|$|E
5000|$|<b>Modbus</b> is {{a serial}} {{communications}} protocol originally published by Modicon (now Schneider Electric) in 1979 {{for use with}} its programmable logic controllers (PLCs). Simple and robust, it has since become a de facto standard communication protocol {{and is now a}} commonly available means of connecting industrial electronic devices. The main reasons for the use of <b>Modbus</b> in the industrial environment are: ...|$|E
5000|$|Convert JMX, SSH, SNMPv2/SNMPv3, <b>Modbus,</b> rsh, stdout to SNMPv2/SNMPv3, SSH, XMPP, syslog, Hypertext Transfer Protocol ...|$|E
5000|$|BACnet Gateway by Kara Systems, a MBus, <b>Modbus</b> and OneWire Gateway which {{represents}} a BACNet Device ...|$|E
50|$|Some {{conventions}} govern how {{access to}} <b>Modbus</b> entities (coils, discrete inputs, input registers, holding registers) are referenced.|$|E
5000|$|A <b>Modbus</b> {{frame is}} {{composed}} of an Application Data Unit (ADU), which encloses a Protocol Data Unit (PDU): ...|$|E
50|$|The byte {{order for}} values in <b>Modbus</b> data frames is big-endian (MSB, most {{significant}} byte of a value received first).|$|E
50|$|Tridium's {{products}} facilitate {{by integrating}} building management systems using open and proprietary communications protocols such as <b>Modbus,</b> Lonworks and BACnet.|$|E
50|$|SCADA {{protocols}} {{are designed}} to be very compact. Many {{are designed to}} send information only when the master station polls the RTU. Typical legacy SCADA protocols include <b>Modbus</b> RTU, RP-570, Profibus and Conitel. These communication protocols, with the exception of <b>Modbus</b> (<b>Modbus</b> has been made open by Schneider Electric), are all SCADA-vendor specific but are widely adopted and used. Standard protocols are IEC 60870-5-101 or 104, IEC 61850 and DNP3. These communication protocols are standardized and recognized by all major SCADA vendors. Many of these protocols now contain extensions to operate over TCP/IP. Although the use of conventional networking specifications, such as TCP/IP, blurs the line between traditional and industrial networking, they each fulfill fundamentally differing requirements. Network simulation can be used in conjunction with SCADA simulators to perform varisou 'what-if' analyses.|$|E
50|$|Another {{de facto}} {{protocol}} tightly related with <b>Modbus</b> appeared after {{it and was}} defined by PLC brand April Automates, resulting of a collaborative effort of French companies Renault Automation and Merlin Gerin et Cie in 1985:JBUS. Differences between <b>Modbus</b> and JBUS at that time (number of entities, slave stations) are now irrelevant as this protocol almost disappeared with April PLC series which AEG Schneider Automation bought in 1994 and then made them obsolete. However the name JBUS survived to some extent.|$|E
5000|$|<b>Modbus</b> {{transmissions}} must be contiguous, {{which limits}} {{the types of}} remote communications devices to those that can buffer data to avoid gaps in the transmission.|$|E
50|$|The DNP3 {{protocol}} {{has significant}} features {{that make it}} more robust, efficient, and interoperable than older protocols such as <b>Modbus,</b> {{at the cost of}} higher complexity.|$|E
5000|$|Entity {{address is}} the {{starting}} address, a 16-bit value in the data part of the <b>Modbus</b> frame. As such its range goes from 0 to 65,535 ...|$|E
50|$|<b>Modbus</b> enables {{communication}} among many devices {{connected to the}} same network, for example, a system that measures temperature and humidity and communicates the results to a computer. <b>Modbus</b> {{is often used to}} connect a supervisory computer with a remote terminal unit (RTU) in supervisory control and data acquisition (SCADA) systems. Many of the data types are named from its use in driving relays: a single-bit physical output is called a coil, and a single-bit physical input is called a discrete input or a contact.|$|E
5000|$|Consequently, entity number {{does not}} include the entity type. For example, holding {{register}} #40010 in <b>Modbus</b> will be holding register #9, located at address 9 in JBUS.|$|E
