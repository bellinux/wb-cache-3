161|1576|Public
5|$|Male {{care for}} infants has been {{documented}} in ruffed lemur societies. During early development, adult males may guard the nests of <b>multiple</b> <b>core</b> group females, as well as help care for the infants that were likely fathered by other males. During the season when females practice infant stashing, males effectively lighten the reproductive burden of up to several mothers by guarding, huddling, grooming, travelling, playing with and feeding the young.|$|E
25|$|Ideally, <b>multiple</b> <b>core</b> {{sections}} {{are obtained}} and evaluated for adequacy (presence of glomeruli) intraoperatively. A pathologist/pathology assistant divides the specimen(s) for submission for light microscopy, immunofluorescence microscopy and electron microscopy.|$|E
25|$|The most {{simple way}} to make a dry-sand cores is in a dump core box, in which sand is packed into the box and scraped level with the top. A wood or metal plate is then placed over the box, and then the two are flipped over and the core segment falls out of the core box. The core segment is then baked or hardened. <b>Multiple</b> <b>core</b> {{segments}} are then hot glued together or attached by some other means. Any rough spots are filed or sanded down. Finally, the core is lightly coated with graphite, silica, or mica to give a smoother surface finish and greater resistance to heat.|$|E
5|$|Improve ice core chronologies, {{including}} connecting chronologies of <b>multiple</b> <b>cores.</b>|$|R
5000|$|Simultaneous {{multithreading}} by <b>multiple</b> <b>cores</b> and hyper-threading (2× per core).|$|R
5000|$|Improve ice core chronologies, {{including}} connecting chronologies of <b>multiple</b> <b>cores.</b>|$|R
500|$|The {{gameplay}} {{was generally}} well received. Famitsu praised the battle system, {{saying that it}} was friendly towards casual gamers. MacDonald likewise praised the battle system as [...] "one of the best combat systems I've played with in any RPG, Japanese or otherwise". Walton found the battle system fun and enjoyed the amount of side quests, while Dagostino was highly positive about the game's successful efforts in moving away from genre tradition. Juba enjoyed the multiplayer and praised the game for moving away from the genre's traditional battle systems despite faults with their overall implementation, while Robinson found the gameplay suffered from the design goals that had fueled its creation. Castle was positive about the variety of gameplay and tactical elements despite some stiff combat mechanics, but noted the inability to alter difficulty being a point against the game. Wishnov praised the fast pace and variety of the combat, but found that more cumbersome RPG elements and a lack of overall control negatively impacted the experience. GameTrailers generally praised about the way gameplay and combat was handled despite some [...] "clunky" [...] moments, but was less positive the multiplayer option's balance and variety. Edge, while noting <b>multiple</b> <b>core</b> similarities with other games within the genre, found that other elements came together to make it a more fast-paced cinematic experience than other traditional RPGs; Fuller enjoyed the battle system, but thought that it lacked challenge and had difficulties with the camera. Parkin was generally positive about combat, particularly about the blending and gradual growth of character abilities, while Nintendo Power called the battle system [...] "satisfying" [...] and the multiplayer [...] "surprisingly worthwhile". Multiple reviewers commented on the game's linear structure, with opinions ranging from indifferent to negative.|$|E
2500|$|The Core Area of a {{battlefield}} {{is the area}} of direct combat on the battlefield. A Core Area includes critical land where fighting occurred and casualties were sustained. There may be <b>multiple</b> <b>Core</b> Area boundaries on {{a battlefield}}, but all must fall fully within the Battlefield boundary. Of note when drawing Core Area boundaries: ...|$|E
50|$|Multithreaded 64 bit rendering, {{supporting}} <b>multiple</b> <b>core</b> processors.|$|E
50|$|A shared cache {{is where}} it is shared among <b>multiple</b> <b>cores</b> and {{therefore}} can be directly accessed {{by any of the}} cores. Since it is shared, each block in the cache is unique and therefore has more hit rate as there will be no duplicate blocks. However, the cache hit latency is larger as <b>multiple</b> <b>cores</b> try to access the same cache.|$|R
5000|$|Parallel benchmarks: used on {{machines}} with <b>multiple</b> <b>cores,</b> processors or systems consisting of multiple machines ...|$|R
5000|$|OpenMP, i.e. using OpenMP {{to manage}} <b>multiple</b> <b>cores</b> or {{processors}} {{in a single}} compute node, but not MPI.|$|R
50|$|Ideally, <b>multiple</b> <b>core</b> {{sections}} {{are obtained}} and evaluated for adequacy (presence of glomeruli) intraoperatively. A pathologist/pathology assistant divides the specimen(s) for submission for light microscopy, immunofluorescence microscopy and electron microscopy.|$|E
5000|$|Version 10.0 was {{released}} in June 2006. Version 11.0 {{was released}} in October 2007. Version 12 {{was released in}} January 2010. The [...] "Deep" [...] version takes advantage of multiple CPUs or <b>multiple</b> <b>core</b> CPUs. Version 13 was released in 30th October 2016. Version 13 is about 300 Elo better than Version 12.|$|E
5000|$|The Core Area of a {{battlefield}} {{is the area}} of direct combat on the battlefield. A Core Area includes critical land where fighting occurred and casualties were sustained. There may be <b>multiple</b> <b>Core</b> Area boundaries on {{a battlefield}}, but all must fall fully within the Battlefield boundary. Of note when drawing Core Area boundaries: ...|$|E
30|$|Use <b>multiple</b> <b>cores</b> or a GPU {{to compute}} {{shortest}} paths simultaneously, or otherwise parallelize an algorithm [21, 30, 38, 41].|$|R
50|$|Version 1.1 {{released}} in May 2013 added support for multi-threading, accelerating calculations on systems with multiple processors or <b>multiple</b> <b>cores.</b>|$|R
50|$|These SOCs have <b>multiple</b> {{processing}} <b>cores</b> {{but unlike}} the contemporary processor chips (e.g. AMD's Athlon/Phenom and Intel's <b>Core</b> series) these <b>multiple</b> <b>cores</b> are not available in the OS to run applications with symmetric multiprocessing properties, {{there is only one}} core to run the OS and user applications.|$|R
50|$|Male {{care for}} infants has been {{documented}} in ruffed lemur societies. During early development, adult males may guard the nests of <b>multiple</b> <b>core</b> group females, as well as help care for the infants that were likely fathered by other males. During the season when females practice infant stashing, males effectively lighten the reproductive burden of up to several mothers by guarding, huddling, grooming, travelling, playing with and feeding the young.|$|E
50|$|For cyanobactins, the {{precursor}} peptide {{is referred to}} as the E peptide. Minimally, the E peptide requires a leader peptide region, a core (structural) region, and both N-terminal and C-terminal protease recognition sequences. In contrast to most RiPPs, for which a single precursor peptide encodes a single natural product via a lone core peptide, cyanobactin E peptides can contain <b>multiple</b> <b>core</b> regions; multiple E peptides can even be present in a single gene cluster.|$|E
5000|$|A Primary Statistical Area is {{a single}} or <b>multiple</b> <b>Core</b> Based Statistical Area {{that is not a}} {{component}} of a larger statistical area. The United States Office of Management and the Budget currently does not use the term [...] "Primary Statistical Area." [...] Currently, the United States and Puerto Rico have 725 Primary Statistical Areas comprising all 128 Combined Statistical Areas (CSAs) plus the 188 Metropolitan Statistical Areas (MSAs) and 409 Micropolitan Statistical Areas (μSAs) that are not a component of a CSA.|$|E
25|$|Native {{operating}} system support for PPM on multiprocessor systems, including systems using processors with multiple logical threads, <b>multiple</b> <b>cores,</b> or <b>multiple</b> physical sockets.|$|R
50|$|Examples of SISD {{architecture}} are {{the traditional}} uniprocessor machines like older personal computers (PCs; by 2010, many PCs had <b>multiple</b> <b>cores)</b> and mainframe computers.|$|R
5000|$|Concurrent, multi-threaded {{processing}} on <b>multiple</b> <b>cores</b> without locks increases {{performance on}} multi-core platforms, {{such as the}} Intel i7 by approximately seven times. Both products are patent pending.|$|R
50|$|Development {{began in}} 2000 as a {{spin-off}} {{from the main}} Star Ocean series, taking approximately one year to complete. <b>Multiple</b> <b>core</b> staff from earlier Star Ocean titles returned, including producer and scenario designer Yoshiharu Gotanda, and series composer Motoi Sakuraba. The character designs were created by manga artist Mayumi Azuma. The production period proved difficult for the team, with the programmers collapsing from exhaustion. In addition to tri-Ace, developer tri-Crescendo helped with the sound design. Blue Sphere has garnered a positive reception from journalists, and has sold 130,000 copies in Japan as of 2007.|$|E
50|$|A few {{interpreted}} programming languages have implementations (e.g., Ruby MRI for Ruby, CPython for Python) which support threading and concurrency but not parallel {{execution of}} threads, {{due to a}} global interpreter lock (GIL). The GIL is a mutual exclusion lock held by the interpreter that can prevent the interpreter from simultaneously interpreting the applications code on two or more threads at once, which effectively limits the parallelism on <b>multiple</b> <b>core</b> systems. This limits performance mostly for processor-bound threads, which require the processor, and not much for I/O-bound or network-bound ones.|$|E
5000|$|AMD {{processors}} {{up to the}} K8 core always incremented the time-stamp counter every clock cycle. Thus, {{power management}} features were able to change the number of increments per second, and the values {{could get out of}} sync between different cores or processors in the same system. For Windows, AMD provides a utility to periodically synchronize the counters on <b>multiple</b> <b>core</b> CPUs.Since the family 10h (Barcelona/Phenom), AMD chips feature a constant TSC, which can be driven either by the HyperTransport speed or the highest P state. A CPUID bit (...) advertises this.|$|E
40|$|This study {{describes}} about {{a parallel}} {{implementation of the}} deflate loss less compression program is described. The performance of the parallel implementation is compared to the sequential deflate program running on Intel Quad Core processor. The parallel deflate algorithm works by taking the input data and running them through the ZIV-Lempel algorithm simultaneously on <b>multiple</b> <b>cores</b> using threads. The results show that a speedup is achieved by using the parallel deflate program on systems with <b>multiple</b> <b>cores.</b> This will greatly reduce the time taken to compress large amounts of data...|$|R
50|$|CPU {{shielding}} is {{a practice}} where on a multiprocessor system or on a CPU with <b>multiple</b> <b>cores,</b> real-time tasks can run on one CPU or core while non-real-time tasks run on another.|$|R
40|$|Communicated by Susumu Matsumae This paper studies task {{scheduling}} algorithms which schedule {{a set of}} tasks on <b>multiple</b> <b>cores</b> so that the total scheduling length is minimized. Most of the algorithms developed in the past assume that a task is executed on a single core. Unlike the previous algorithms, the algorithms studied in this paper allow a task to be executed on <b>multiple</b> <b>cores.</b> This paper proposes six algorithms. All of the six algorithms are based on list scheduling, but the strategy for priority assignment is different. In our experiments, the six algorithms {{as well as an}} integer linear programming method are evaluated...|$|R
5000|$|A toy {{language}} is a computer programming language that lacks the requirements to create reliable, maintainable computer programs in a production environment. Categorizing a programming language as a toy {{language is}} difficult, however, as the definition is often subjective. Also, a [...] "toy" [...] language is distinguished from domain-specific languages and esoteric programming languages. A [...] "problem domain" [...] {{language is a}} limited programming language made for a specific purpose, such as the PostScript language used in PDF documents, or the limited instruction set used to program the <b>multiple</b> <b>core</b> graphics processing unit in a video card. An [...] "esoteric language" [...] is a programming language designed to test the boundaries of computer programming language design, as a proof of concept, as software art, or as a joke, such as Befunge or LOLCODE.|$|E
50|$|The {{selected}} watersheds have {{to implement}} a system of practices that address nitrogen and phosphorus generation. MRBI approved practices help avoid, trap, and control nutrients from agricultural runoff. <b>Multiple</b> <b>core</b> and supporting conservation practices provide options for producers depending on their location and existing operations. Approved core practices were selected based on what proved to be most important in reducing the downstream loading of nutrients. Core practices include planting cover crops, constructing grassed waterways or riparian forest buffers, and wetland creation or enhancement. The NRCS allowed State Conservationists to choose supporting practices that address the primary water concerns that have developed within that particular state. Supporting practices include pasture and hayland planting, deep tillage in fields, field borders, and constructing a water and sediment control basin. Payment is received as the implementation of core and supporting practices proceed in a selected watershed.|$|E
5000|$|The most {{simple way}} to make dry-sand cores is in a dump core box, in which sand is packed into the box and scraped level with the top. A wood or metal plate is then placed over the box, and then the two are flipped over and the core segment falls out of the core box. The core segment is then baked or hardened. <b>Multiple</b> <b>core</b> {{segments}} are then hot glued together or attached by some other means. Any rough spots are filed or sanded down. Finally, the core is lightly coated with graphite, silica, or mica to give a smoother surface finish and greater resistance to heat.Single-piece cores {{do not need to}} be assembled because they are made in a split core box. A split core box, like it sounds, is made of two halves and has at least one hole for sand to be introduced. For simple cores that have constant cross-sections they can be created on special core-producing extruders. The extrusions are then just cut to the proper length and hardened. More complex single-piece cores can be made in a manner similar to injection moldings and die castings.Types of core ...|$|E
3000|$|... as outputs. Therefore, {{although}} there is much space on the FPGA card to support <b>multiple</b> <b>cores,</b> the interface bandwidth can only support one single core and get a speedup of around 7 times.|$|R
30|$|Reactive stream {{processing}} systems (RSPs) {{are a common}} paradigm in embedded computing. The streaming model behind RSPs makes them well suited for computationally intensive applications where parallel execution on <b>multiple</b> <b>cores</b> is required.|$|R
50|$|A typical {{integrated}} circuit integrates a {{system on a chip}} and further multiplies speed by integrating <b>multiple</b> <b>cores.</b> Due {{to the very}} low power requirements it is a solution even for battery-powered applications.|$|R
