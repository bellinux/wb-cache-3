796|772|Public
25|$|As it is a <b>Monte-Carlo</b> <b>method,</b> {{the error}} of the {{estimator}} can be decomposed into the sum of a bias, and a statistical error. The statistical error is reduced by {{increasing the number of}} paths sampled, or by using variance reduction methods.|$|E
25|$|In mathematics, the walk-on-spheres method (WoS) is a {{numerical}} probabilistic algorithm, or <b>Monte-Carlo</b> <b>method,</b> used mainly {{in order to}} approximate the solutions of some specific boundary value problem for partial differential equations (PDEs). The WoS method was first introduced by M. E. Muller in 1956 to solve Laplace's equation, and was since then generalized to other problems.|$|E
2500|$|In {{computer}} simulations, {{especially in}} {{applications of the}} <b>Monte-Carlo</b> <b>method,</b> it is often desirable to generate values that are normally distributed. The algorithms listed below all generate the standard normal deviates, since a [...] can be generated as , where Z is standard normal. All these algorithms rely {{on the availability of}} a random number generator U capable of producing uniform random variates.|$|E
5000|$|MD-kMC - a {{software}} for simulating atomistic processes using molecular mechanics and kinetic <b>Monte-Carlo</b> <b>methods</b> ...|$|R
40|$|Throughout recent years, <b>Monte-Carlo</b> <b>methods</b> have {{considerably}} improved computer Go programs. In particular, Monte-Carlo Tree Search algorithms such as UCT {{have enabled}} significant advances in this domain. Phantom Go is {{a variant of}} Go which {{is complicated by the}} condition of imperfect information. This article compares four <b>Monte-Carlo</b> <b>methods</b> for Phantom Go in a self-play experiment: (1) Monte-Carlo evaluation with standard sampling, (2) Monte-Carlo evaluation with all-as-first sampling, (3) UCT with late random opponent-move guessing heuristic, and (4) UCT with early probabilistic opponent-move guessing heuristic. Our experimental findings indicate that <b>Monte-Carlo</b> <b>methods</b> can be applied to Phantom Go effectively. Surprisingly, Monte-Carlo Tree Search performs comparable to Monte-Carlo evaluation but not much better. ...|$|R
40|$|We {{address the}} {{classical}} bearings-only tracking problem (BOT) {{for a single}} object, which belongs to the general class of nonlinear filtering problems. Recently, algorithms based on sequential <b>Monte-Carlo</b> <b>methods</b> (particle filtering) have been proposed. As far as performance analysis is concerned, the posterior Cramér-Rao bound (PCRB) provides a lower bound on the mean square error. Classically, under a technical assumption named “asymptotic unbiasedness assumption, ” the PCRB is given by the inverse Fisher information matrix (FIM). The latter is computed using Tichavsk´y’s recursive formula via <b>Monte-Carlo</b> <b>methods.</b> Two major problems are studied here. First, we show that the asymptotic unbiasedness assumption can be replaced by an assumption which is more meaningful. Second, an exact algorithm to compute the PCRB is derived via Tichavsk´y’s recursive formula without using <b>Monte-Carlo</b> <b>methods.</b> This result {{is based on a}} new coordinate system named logarithmic polar coordinate (LPC) system. Simulation results illustrate that PCRB can now be computed accurately and quickly, making it suitable for sensor management applications...|$|R
5000|$|Rostam K. Saeed and Chinar S. Ahmed, Numerical Solution of the System {{of linear}} Volterra Integral Equations of the Second Kind using <b>Monte-Carlo</b> <b>Method,</b> Journal of Applied Science Research ...|$|E
50|$|As it is a <b>Monte-Carlo</b> <b>method,</b> {{the error}} of the {{estimator}} can be decomposed into the sum of a bias, and a statistical error. The statistical error is reduced by {{increasing the number of}} paths sampled, or by using variance reduction methods.|$|E
50|$|Lenders' {{methods of}} {{assessment}} of the inventory value vary. A lender can hire an independent contractor to evaluate borrower's inventory or use averaging, adjusted for a particular industry. For example, Moody's is reportedly applying <b>Monte-Carlo</b> <b>method</b> over inventory price fluctuations within each industry to determine risk free advance rates.|$|E
50|$|Classical <b>Monte-Carlo</b> <b>methods</b> for the {{dynamics}} of electrons {{can be described as}} semi-classical in that the initial conditions are calculated using a fully quantum treatment, but all further treatment is classical.|$|R
50|$|<b>Monte-Carlo</b> <b>methods</b> {{are harder}} to use with American options. This is because, in {{contrast}} to a partial differential equation, the Monte Carlo method really only estimates the option value assuming a given starting point and time.|$|R
40|$|The recent {{research}} of the author and his collaborators on multiscale computational methods is reported, emphasizing main ideas and inter-relations between various fields, and listing the relevant bibliography. The reported areas include: top-efficiency multigrid methods in fluid dynamics; atmospheric data assimilation; PDE solvers on unbounded domains; wave/ray methods for highly indefinite equations; many-eigenfunction problems and ab-initio quantum chemistry; fast evaluation of integral transforms on adaptive grids; multigrid Dirac solvers; fast inverse-matrix and determinant updates; multiscale <b>Monte-Carlo</b> <b>methods</b> in statistical physics; molecular mechanics (including fast force summation, fast macromolecular energy minimization, <b>Monte-Carlo</b> <b>methods</b> at equilibrium and the combination of small-scale equilibrium with large-scale dynamics); image processing (edge detection and segmentation); and tomography. Key words. scientific computation, multiscale, multi-resolution, multigrid, [...] ...|$|R
50|$|RRTs can {{be viewed}} as a {{technique}} to generate open-loop trajectories for nonlinear systems with state constraints. An RRT can also be considered as a <b>Monte-Carlo</b> <b>method</b> to bias search into the largest Voronoi regions of a graph in a configuration space. Some variations can even be considered stochastic fractals.|$|E
50|$|A {{variant of}} the Teknomo-Fernandez {{algorithm}} that incorporates the <b>Monte-Carlo</b> <b>method</b> named CRF has been developed. Two different configurations of CRF were implemented: CRF9,2 and CRF81,1. Experiments on some colored video sequences showed that the CRF configurations outperform the TF algorithm in terms of accuracy. However, the TF algorithm remains more efficient in terms of processing time.|$|E
50|$|In mathematics, the walk-on-spheres method (WoS) is a {{numerical}} probabilistic algorithm, or <b>Monte-Carlo</b> <b>method,</b> used mainly {{in order to}} approximate the solutions of some specific boundary value problem for partial differential equations. The WoS method was first introduced by M. E. Muller in 1956 to solve Laplace's equation, and was since then generalized to other problems.|$|E
40|$|Recently, various authors {{proposed}} <b>Monte-Carlo</b> <b>methods</b> for the computation of American option prices, {{based on}} least squares regression. The {{purpose of this}} paper is to analyze an algorithm due to Longstaff and Schwartz. This algorithm involves two types of approximation. Approximation one: replace the conditional expectations in the dynamic programming principle by projections on a finite set of functions. Approximation two: use Monte-Carlo simulations and least squares regression to compute the value function of approximation one. Under fairly general conditions, we prove the almost sure convergence of the complete algorithm. We also determine the rate of convergence of approximation two and prove that its normalized error is asymptotically Gaussian. American options, optimal stopping, <b>Monte-Carlo</b> <b>methods,</b> least squares regression...|$|R
40|$|AbstractLinear {{complexity}} and linear complexity profile are interesting {{characteristics of a}} sequence for applications in cryptography and <b>Monte-Carlo</b> <b>methods.</b> We introduce some new explicit inversive pseudorandom number generators and prove lower bounds on their linear complexity profile which {{are close to the}} best possible...|$|R
40|$|In {{this paper}} we {{consider}} the modeling of heterogeneous aerosol coagulation where the heterogeneous aerosol particles (called droplets) contain smaller particles (enclosures). Droplets and enclosures coagulate with different collision kernels. We discuss macroscopic modeling and simulation of these processes using both deterministic and <b>Monte-Carlo</b> <b>methods...</b>|$|R
5000|$|In {{computer}} simulations, {{especially in}} {{applications of the}} <b>Monte-Carlo</b> <b>method,</b> it is often desirable to generate values that are normally distributed. The algorithms listed below all generate the standard normal deviates, since a N(μ, σ) can be generated as X [...] μ + σZ, where Z is standard normal. All these algorithms rely {{on the availability of}} a random number generator U capable of producing uniform random variates.|$|E
5000|$|To {{simplify the}} {{description}} of the algorithms it is used [...] below. Therefore, RVNS uses two parameters: [...] and [...] RVNS is useful in very large instances, for which local search is costly. It has been observed that the best value for the parameter k_max is often 2. In addition, the maximum number of iterations between two improvements is usually used as a stopping condition. :RVNS is akin to a <b>Monte-Carlo</b> <b>method,</b> but is more systematic.|$|E
5000|$|The {{more refined}} {{analysis}} of reaction (4) {{was carried out}} by Bates et Morgan. who found that the <b>Monte-Carlo</b> <b>method,</b> Flannery's equation and Langevin's theory can give good results only when the pressure is above 1 atm. This is the norm for lasers. The proposed [...] "tidal" [...] theory agrees with the experimental measurements of Mezyk et al. which is evident in Figure 10. The rate of recombination α for reaction (4) is of the same order of magnitude as α.|$|E
40|$|Abstract. We {{address the}} tension between {{software}} generality and performance {{in the domain of}} simulations based on <b>Monte-Carlo</b> <b>methods.</b> We simultaneously achieve generality and high performance by a novel development methodology and software architecture centred around the concept of a specialising simulator generator. Our approach combines and extends methods from functional programming, generative programming, partial evaluation, and runtime code generation. We also show how to generate parallelised simulators. We evaluated our approach by implementing a simulator for advanced forms of polymerisation kinetics. We achieved unprecedented performance, making <b>Monte-Carlo</b> <b>methods</b> practically useful in an area that was previously dominated by deterministic PDE solvers. This is of high practical relevance, as Monte-Carlo simulations can provide detailed microscopic information that cannot be obtained with deterministic solvers. ...|$|R
40|$|In {{this paper}} we propose a new method, based on the {{conditional}} distribution <b>method</b> in <b>Monte-Carlo</b> <b>methods,</b> to generate the uniform distribution on the domain Tn(a,b) ={(x 1, [...] .,xn) : 0 [less-than-or-equals, slant]ai[less-than-or-equals, slant]xi[less-than-or-equals, slant]bi[less-than-or-equals, slant] 1, 0 [less-than-or-equals, slant]i[less-than-or-equals, slant]n, x 1 + [...] . +xn= 1 }, where a=(a 1, [...] .,an) and b=(b 1, [...] .,bn). By this new method we can easily obtain uniform designs of experiments with mixtures, i. e., to generate a set of points that are uniformly scattered on the domain Tn(a,b). This approach can apply to generation of uniform distributions on various domains, such as convex polyhedron and simplex. These uniform distributions are useful in experimental design, reliability and optimization. Experimental design Conditional distribution <b>method</b> <b>Monte-Carlo</b> <b>methods</b> Uniform design...|$|R
40|$|In [33, 32], fast {{deterministic}} algorithms {{based on}} spectral methods were derived for the Boltzmann collision operator {{for a class}} of interactions including the hard spheres model in dimension three. These algorithms are implemented for {{the solution of the}} Boltzmann equation in dimension two and three, first for homogeneous solutions, then for general nonhomogeneous solutions. The results are compared to explicit solutions, when available, and to <b>Monte-Carlo</b> <b>methods.</b> In particular, the computational cost and accuracy are compared to those of <b>Monte-Carlo</b> <b>methods</b> as well as to those of previous spectral methods. Finally, for inhomogeneous solutions, we take advantage of the great computational efficiency of the method to show an oscillation phenomenon of the entropy functional in the trend to equilibrium, which was suggested in [16]...|$|R
5000|$|Random Fourier Features map {{produces}} a Monte-Carlo approximation to the feature map. <b>Monte-Carlo</b> <b>method</b> {{is considered to}} be randomized. These random features consists of sinusoids [...] randomly drawn from Fourier transform of the kernel to be approximated, where [...] and [...] are random variables. The line is randomly chosen, then the data points are projected on it by the mappings. The resulting scalar is passed through a sinusoid. The product of the transformed points will approximate a shift-invariant kernel. Since the map is smooth, Random Fourier Features work well on interpolation tasks.|$|E
5000|$|The Condensation {{algorithm}} {{seeks to}} solve the problem of estimating the conformation of an object described by a vector [...] at time , given observations [...] of the detected features in the images up to and including the current time. The Condensation Algorithm outputs an estimate to the state [...] conditional probability density [...] by applying a nonlinear filter based on factored sampling and can be thought of as a development of a <b>Monte-Carlo</b> <b>method.</b> [...] is a representation of the probability of possible conformations for the objects based on previous conformations and measurements. The condensation algorithm is a generative model since it models the joint distribution of the object and the observer.|$|E
30|$|The {{third stage}} {{was based on}} the <b>Monte-Carlo</b> <b>method.</b>|$|E
40|$|We {{address the}} tension between {{software}} generality and performance {{in the domain of}} simulations based on <b>Monte-Carlo</b> <b>methods.</b> We simultaneously achieve generality and high performance by a novel development methodology and software architecture centred around the concept of a specialising simulator generator. Our approach combines and extends methods from functional programming, generative programming, partial evaluation, and runtime code generation. We also show how to generate parallelised simulators. We evaluated our approach by implementing a simulator for advanced forms of polymerisation kinetics. We achieved unprecedented performance, making <b>Monte-Carlo</b> <b>methods</b> practically useful in an area that was previously dominated by deterministic PDE solvers. This is of high practical relevance, as Monte-Carlo simulations can provide detailed microscopic information that cannot be obtained with deterministic solvers. © Springer-Verlag Berlin Heidelberg 2008...|$|R
40|$|The Gauss Center {{research}} on multiscale computational methods is reported, emphasizing main ideas and inter-relations between various fields, and listing the relevant bibliography. The reported areas include: top-efficiency multigrid methods in fluid dynamics; atmospheric flows and data assimilation; feedback optimal control; PDE solvers on unbounded domains; wave/ray methods for highly indefinite equations; rigorous quantitative analysis of multigrid; many-eigenfunction problems and ab-initio quantum chemistry; fast evaluation of integral transforms on adaptive grids; multigrid Dirac solvers; fast inverse-matrix and determinant updates; multiscale <b>Monte-Carlo</b> <b>methods</b> in statistical physics; molecular mechanics (including fast force summation, fast macromolecular energy minimization, <b>Monte-Carlo</b> <b>methods</b> at equilibrium, both for macromolecules and for large ensembles of small molecules, {{and the combination}} of small-scale equilibrium with large-scale dynamics); image processing (edge d [...] ...|$|R
40|$|An {{algorithm}} is presented for the efficient and accurate computation of the coefficients of the {{characteristic polynomial of}} a general square matrix. The {{algorithm is}} especially suited {{for the evaluation of}} canonical traces in determinant quantum <b>Monte-Carlo</b> <b>methods.</b> Comment: 8 pages, no figures, to appear in J. Comp. phy...|$|R
40|$|We {{study the}} two-unit standby system with repair and with {{preventive}} maintenance. Preventive maintenance is introduced {{in order to}} make the lifetime of the system longer. Using <b>Monte-Carlo</b> <b>method</b> we simulate the work of the two-unit system and we analyze the influence of different types of preventive maintenance on reliability of the system. <b>Monte-Carlo</b> <b>method</b> enables us to find estimates of various parameters relevant to the system for which there exist no explicit formulas in the literature. ...|$|E
40|$|We {{investigate}} the induced voltage {{due to a}} wire with stochastic geometry above a perfectly conducting ground plane excited by an incident plane wave. An integral equation method together with the method of moments is applied {{to account for the}} full details of the scattering problem. We compute the mean and variance of the induced voltage by means of a <b>Monte-Carlo</b> <b>method.</b> Further, we discuss the convergence rate of the <b>Monte-Carlo</b> <b>method</b> with respect to the ensemble of geometries...|$|E
40|$|Abstract: We {{study the}} two-unit standby system with repair and with {{preventive}} maintenance. Preventive maintenance is introduced {{in order to}} make the lifetime of the system longer. Using <b>Monte-Carlo</b> <b>method</b> we simulate the work of the two-unit system and we analyze the influence of different types of preventive maintenance on reliability of the system. <b>Monte-Carlo</b> <b>method</b> enables us to find estimates of various parameters relevant to the system for which there exist no explicit formulas in the literature...|$|E
40|$|Abstract. In [32, 31], fast {{deterministic}} algorithms {{based on}} spectral methods were derived for the Boltzmann collision operator {{for a class}} of interactions including the hard spheres model in dimension 3. These algorithms are implemented for {{the solution of the}} Boltzmann equation in dimension 2 and 3, first for homogeneous solutions, then for general non homogeneous solutions. The results are compared to explicit solutions, when available, and to <b>Monte-Carlo</b> <b>methods.</b> In particular, the computational cost and accuracy are compared to those of <b>Monte-Carlo</b> <b>methods</b> as well as to those of previous spectral methods. Finally, for inhomogeneous solutions, we take advantage of the great computational efficiency of the method to show an oscillation phenomenon of the entropy functional in the trend to equilibrium, which was suggested in the work [16]...|$|R
40|$|We address {{here the}} {{classical}} bearings-only tracking problem (BOT) {{for a single}} target, issue that belongs to the general class of nonlinear filtering problems. Recently, algorithm-based sequential <b>Monte-Carlo</b> <b>methods</b> (particle filtering) have been proposed. However, Fearnhead has observed that in practice this algorithm diverges. This problem is investigated further in this paper. We show that this phenomenon {{is due to the}} unobservability of the distance between the observer and the target. We propose a new algorithm named hierarchical particle filter which takes into account this aspect of the BOT. We demonstrate that this novel filter architecture largely overperforms the classical one. Moreover, these results are confirmed when considering highly maneuvering target scenarios. Finally, we propose a general architecture based on <b>Monte-Carlo</b> <b>methods</b> for filtering initialization, able to accommodate poor prior and complex constraints...|$|R
25|$|As it is {{commonly}} the case for <b>Monte-Carlo</b> <b>methods,</b> this algorithm performs particularly well when the dimension is higher than , and one only needs a small set of values. Indeed, the computational cost increases linearly with the dimension, whereas the cost of grid dependant methods increase exponentially with the dimension.|$|R
