1520|834|Public
25|$|Image:GNOME System Monitor <b>memory</b> <b>size</b> {{and network}} rate.png|GNOME's system monitor uses IEC prefixes to show <b>memory</b> <b>size</b> and {{networking}} data rate.|$|E
25|$|Early {{computer}} system documentation would specify the <b>memory</b> <b>size</b> with an exact number such as 4096, 8192, or 16384 words of storage. These are all powers of two, and furthermore are small multiples of 210, or 1024. As storage capacities increased, several different methods {{were developed to}} abbreviate these quantities.|$|E
25|$|In the {{definition}} of SDHC cards in version 2.0, the C_SIZE portion of the CSD is 22 bits and it indicates the <b>memory</b> <b>size</b> in multiples of 512KB (the C_SIZE_MULT field is removed and READ_BL_LEN is no longer used to compute capacity). Two bits that were formerly reserved now identify the card family: 0 is SDSC; 1 is SDHC or SDXC; 2 and 3 are reserved. Because of these redefinitions, older host devices do not correctly identify SDHC or SDXC cards nor their correct capacity.|$|E
40|$|In this paper, we {{consider}} the minimization of the longest path length (LPL) for binary decision diagrams (BDDs) and heterogeneous multi-valued decision diagrams (MDDs). Experimental results show that: (1) For many logic functions, node minimization of BDDs also minimizes the LPLs of BDDs. (2) When we use heterogeneous MDDs for representing logic functions and minimize the <b>memory</b> <b>sizes</b> of heterogeneous MDDs, we can reduce both <b>memory</b> <b>sizes</b> and LPLs to 86 % and 72 % of corresponding BDDs, respectively. On the other hand, when the memory limitations are set to the <b>memory</b> <b>sizes</b> of BDDs, the LPLs {{can be reduced to}} 54 % of BDDs...|$|R
5000|$|DISKCACHE (OS/2 only, ignored under DR-DOS 7.02 and higher) : Configures cache <b>memory</b> <b>sizes.</b>|$|R
50|$|Customers of the 370/135 had {{a choice}} of four main <b>memory</b> <b>sizes,</b> ranging from 96K to 256K.|$|R
25|$|The Sansa m200 {{series are}} digital audio players {{that have been}} {{released}} in four models: m230 (512MB), m240 (1GB), m250 (2GB), and m260 (4GB). The players have a built-in FM tuner and microphone, and supports MP3, WMA, WAV, and Audible (.aa) audio file formats. It comes in different colors (one for each <b>memory</b> <b>size)</b> such as blue, black, pink, and gray, and uses a single AAA battery for power. There were four different hardware revisions of this player. The first three revisions used a Telechips TCC770 SoC for a CPU and DSP, and the fourth using a chip developed by Austria Microsystems and also used in the Clip, Fuze and later e200/c200 models.|$|E
25|$|Deep neural {{networks}} can be potentially improved by deepening and parameter reduction, while maintaining trainability. While training extremely deep (e.g., 1 million layers) {{neural networks}} {{might not be}} practical, CPU-like architectures such as pointer networks and neural random-access machines overcome this limitation by using external random-access memory and other components that typically belong to a computer architecture such as registers, ALU and pointers. Such systems operate on probability distribution vectors stored in memory cells and registers. Thus, the model is fully differentiable and trains end-to-end. The key characteristic of these models is that their depth, {{the size of their}} short-term memory, and the number of parameters can be altered independently — unlike models like LSTM, whose number of parameters grows quadratically with <b>memory</b> <b>size.</b>|$|E
25|$|The {{address bus}} of the PowerPC 603 can {{theoretically}} access memory up to 64 MB. However, the operating system's maximum addressable <b>memory</b> <b>size</b> is 37 MB. Furthermore, {{because of the}} ASIC design of the Pippin hardware, the maximum RAM size that can be added is 32 MB. Officially, Bandai produced memory upgrade modules of 2, 4, 8 and 16 MB. The memory chips are soldered onto {{a printed circuit board}} which is placed in a plastic housing, making installation into a Pippin system simple for the end user. Japanese hackers produced an aftermarket 16 MB module, but because the module was much larger than the memory module compartment on the Pippin, installation required removing the logic board from the chassis, and then mounting the large memory module in-between the logic board and chassis.|$|E
50|$|In later {{implementations}} these {{status bits}} evolved {{to keep up}} with growing <b>memory</b> <b>sizes</b> and gained insights.|$|R
40|$|International audienceWe {{consider}} a cache-enabled K-user erasure broadcast channel {{in which a}} server with a library of N files wishes to deliver a requested file to each user k who {{is equipped with a}} cache of a finite memory M k. Assuming that the transmitter has state feedback and user caches can be filled during off-peak hours reliably by decentralized cache placement, we characterize the achievable rate region {{as a function of the}} <b>memory</b> <b>sizes</b> and the erasure probabilities. The proposed delivery scheme, based on the broadcasting scheme proposed by Wang and Gatzianas et al., exploits the receiver side information established during the placement phase. A two-user toy example shows that the cache network with asymmet-ric <b>memory</b> <b>sizes</b> might achieve better sum rate performance than the network with symmetric <b>memory</b> <b>sizes...</b>|$|R
3000|$|The engine {{parameters}} {{like the}} number of bits, <b>memories</b> <b>size</b> and types are parameterized to meet different requirements and higher symbol lengths [...]...|$|R
500|$|The Nord Stage was {{unveiled}} in April 2005 at the Musikmesse music instrument convention in Frankfurt, Germany. A full-range, 88 weighted key version, the Stage 88, began shipping in July 2005; a 76 weighted key version, the Stage 76, was announced at NAMM in January 2006, and a 73 semi-weighted key version, the Stage Compact, started shipping in August 2006.An expanded version, the Nord Stage EX, {{was released in}} November 2008. It included an increased <b>memory</b> <b>size.</b>|$|E
500|$|The console/home {{version of}} Crazy Taxi was {{released}} for the Dreamcast on January 24, 2000. The Dreamcast and the cabinet arcade version share nearly identical processing hardware, and porting {{the game to}} the home console was only made difficult due to the limited internal <b>memory</b> <b>size</b> on the Dreamcast. Sega used Crazy Taxi to show {{the power of the}} Dreamcast's graphical processor, capable of maintaining 60 frame/s throughout play. In addition to the arcade map, this version included the San Francisco-themed city (entitled [...] "Original"), as well as additional mini-games ("Crazy Box") {{that can be used to}} hone the player's taxi handling skills. The new map, much larger than the arcade version, was designed to let the player experience the feeling of [...] "being lost" [...] and allow for exploration, something that could not be done on the arcade version, as well letting [...] "the player enjoy all 3 dimensions." ...|$|E
2500|$|... (At the time, <b>memory</b> <b>size</b> was small, {{and only}} K was in {{widespread}} use.) ...|$|E
50|$|Some earlier {{systems with}} smaller real <b>memory</b> <b>sizes,</b> {{such as the}} SDS 940, used page {{registers}} instead of page tables in memory for address translation.|$|R
5000|$|... eCos was {{designed}} for devices with <b>memory</b> <b>sizes</b> {{in the range of}} a few tens or several hundred kilobytes, or for applications with real-time requirements.|$|R
5000|$|The memory {{consumption}} of a structure {{is at least}} {{the sum of the}} <b>memory</b> <b>sizes</b> of constituent variables. Take the [...] structure below as an example.|$|R
2500|$|CTS and the CLR used in [...]NET Framework also enforce type safety. This {{prevents}} ill-defined casts, wrong method invocations, and <b>memory</b> <b>size</b> issues when accessing an object. This {{also makes}} most CLI languages statically typed (with or without type inference). However, starting with [...]NET Framework 4.0, the Dynamic Language Runtime extended the CLR, allowing dynamically typed languages {{to be implemented}} atop the CLI.|$|E
2500|$|Erik Sandberg-Diment of The New York Times in January 1984 {{stated that}} Macintosh [...] "presages a {{revolution}} in personal computing". Although preferring larger screens and calling the lack of color a [...] "mistake", he praised that the [...] "refreshingly crisp and clear" [...] display and lack of fan noise. While unsure whether it would become [...] "a second standard to Big Blue", Ronald Rosenberg of The Boston Globe wrote in February of [...] "a euphoria that Macintosh will change how America computes. Anyone that tries the pint-size machine gets hooked by its features". Gregg Williams of BYTE that month found the hardware and software design (which it predicted would be [...] "imitated but not copied") impressive, but criticized {{the lack of a}} standard second disk drive. He predicted that the computer would popularize the 3½-inch floppy disk drive standard, that the Macintosh would improve Apple's reputation, and that it [...] "will delay IBM's domination of the personal computer market." [...] Williams concluded that the Macintosh was [...] "the most important development in computers in the last five years. [...] brings us one step closer to the ideal of computer as appliance." [...] In a follow-up article in the May 1984 issue of BYTE, Williams added, [...] "Initial reaction to the Macintosh has been strongly, but not overpoweringly, favorable. A few traditional computer users see the mouse, the windows, and the desktop metaphor as silly, useless frills, and others are outraged at the lack of color graphics, but most users are impressed by the machine and its capabilities. Still, some people have expressed concern about the relatively small 128K-byte RAM (randomaccess read/write <b>memory)</b> <b>size,</b> the lack of any computer language sent as part of the basic unit, and the inconvenience of the single disk drive." ...|$|E
50|$|In {{comparison}} to deferred lighting, {{this technique is}} not very popular due to high <b>memory</b> <b>size</b> and bandwidth requirements. Especially on seventh generation consoles, where graphic <b>memory</b> <b>size</b> and bandwidth are limited and often a bottleneck.|$|E
5000|$|With {{information}} technology, heterogeneous computing {{occurs in}} a network comprising different types of computers, potentially with vastly differing <b>memory</b> <b>sizes,</b> processing power and even basic underlying architecture.|$|R
40|$|This paper {{considers}} Quasi-Reduced ordered Multivalued Decision Diagrams with k bits (QRMDD(k) s) {{to represent}} binary logic functions. Experimental results show {{relations between the}} values of k and the numbers of nodes, the <b>memory</b> <b>sizes,</b> the numbers of memory accesses, and area-time complexity for QRMDD(k). For many benchmark functions, the numbers of nodes and memory accesses for QRMDD(k) s are nearly equal to 1 /k of the corresponding Quasi-Reduced ordered Binary Decision Diagrams (QRBDDs), and the <b>memory</b> <b>sizes</b> and the area-time complexities for QRMDD(k) s are minimum when k = 2 and k = 3 [...] 6, respectivel...|$|R
50|$|Some {{authors were}} {{of the opinion that}} for best portability, only a single {{character}} should be used per data item. However considering the small <b>memory</b> <b>sizes</b> of machines of the day, this technique was considered extremely wasteful.|$|R
50|$|The use {{of program}} {{resources}} like <b>memory</b> <b>size,</b> file descriptors, diskusage {{and creation of}} subprocesses is controlled. Large mail messagesare not kept in memory, so the available <b>memory</b> <b>size</b> does not imposea limit {{on the size of}} mail messages that can be processed, and memoryresources are not wasted unnecessarily.|$|E
5000|$|Split a {{free memory}} slot {{larger than the}} {{requested}} <b>memory</b> <b>size</b> into half ...|$|E
50|$|Memory type: Two 72pin FPM SIMM slots, {{supporting}} a maximum <b>memory</b> <b>size</b> of 256 MiB.|$|E
50|$|The 530 {{supported}} <b>memory</b> <b>sizes</b> of 8 K to 64 K 16-bit words (16 KB to 128 KB) with a {{cycle time}} of 800 ns. The memory protection feature protected the foreground (real-time) program from the background tasks.|$|R
50|$|The D92, D92A, D94 and D98 (also {{known as}} the C92D, C92AD, C94D and C98D respectively) {{variants}} were equipped with slower, but higher-density DRAM memory, allowing increased maximum <b>memory</b> <b>sizes</b> of up to 16 GB, depending on the model.|$|R
50|$|The limited colour {{selections}} {{of the home}} computers of the time (often limited to 8 colours) along with the <b>memory</b> <b>sizes</b> (the VIC-20 version ran in less than 6K of RAM) meant the user experience was limited compared to more modern implementations.|$|R
5000|$|... #Caption: GNOME's system monitor uses IEC prefixes to show <b>memory</b> <b>size</b> and {{networking}} data rate.|$|E
5000|$|RMSIZE (OS/2 only, ignored under DR-DOS 7.02 and higher) : Defines {{the real}} mode <b>memory</b> <b>size.</b>|$|E
5000|$|An {{optional}} suffix digit {{indicating a}} variant device, adding or deleting some analog peripherals. For example, a [...] "1" [...] suffix may indicate {{the addition of}} a comparator or deletion of an ADC. If the <b>memory</b> <b>size</b> is [...] "1", this suffix can be confused with part of the <b>memory</b> <b>size,</b> but no single model is available in both [...] "1" [...] and [...] "10" [...] (or greater) memory sizes.|$|E
5000|$|With rising {{processor}} clock rates, increased <b>memory</b> <b>sizes,</b> {{and improved}} interactive debugging tools, such panel lights gradually lost their usefulness, though today most devices have indicators showing power on/off status, hard disk activity, network activity, and other indicators of [...] "signs of life".|$|R
2500|$|These two styles (K = 1024 and truncation) {{were used}} loosely {{around the same}} time, {{sometimes}} by the same company. In discussions of binary-addressed <b>memories,</b> the exact <b>size</b> was evident from context. (For <b>memory</b> <b>sizes</b> of [...] "41K" [...] and below, {{there is no difference}} between the two styles.) The HP 21MX real-time computer (1974) denoted [...] (which is 192×1024) as [...] "196K" [...] and [...] as [...] "1M", ...|$|R
40|$|Recent {{developments}} within memory-augmented {{neural networks}} have solved sequential problems requiring long-term memory, which are intractable for traditional neural networks. However, current approaches still struggle to scale to large <b>memory</b> <b>sizes</b> and sequence lengths. In this paper we show how access to memory can be encoded geometrically through a HyperNEAT-based Neural Turing Machine (HyperENTM). We demonstrate that using the indirect HyperNEAT encoding allows for training on small memory vectors in a bit-vector copy task and then applying the knowledge gained from such training {{to speed up}} training on larger <b>size</b> <b>memory</b> vectors. Additionally, we demonstrate that in some instances, networks trained to copy bit-vectors of size 9 can be scaled to sizes of 1, 000 without further training. While the task in this paper is simple, these results could open up the problems amendable to networks with external memories to problems with larger memory vectors and theoretically unbounded <b>memory</b> <b>sizes...</b>|$|R
