27|547|Public
5000|$|This same {{technique}} {{is used in}} the R10000 register renaming <b>mapping</b> <b>file,</b> which stores a 6-bit virtual register number for each of the physical registers. In the renaming file, the renaming state is checkpointed whenever a branch is taken, so that when a branch is detected to be mispredicted, the old renaming state can be recovered in a single cycle. (See Register renaming.) ...|$|E
5000|$|Apple's fonts, and the Mac OS Roman {{character}} set, {{include a}} solid Apple logo. One reason for including a trademark in a font {{is that the}} copyright status of fonts and typefaces is a complicated and uncertain matter. Trademark law, on the other hand, is much stronger. Third parties cannot include the Apple logo in fonts without permission from Apple. Apple states in the MacRoman to Unicode <b>mapping</b> <b>file</b> that: ...|$|E
5000|$|In the <b>mapping</b> <b>file</b> example, [...] {{refers to}} the long integer value passed into the query. If the {{parameter}} is a Java object, then values from properties on that object can be inserted into the query using a similar [...] notation. For example, if the parameter class is a [...] which has a property called , then [...] can be replaced with [...] The [...] object is an instance of class [...]|$|E
40|$|Due {{to demand}} for shared memory {{in order to}} {{implement}} databases efficiently, I added the mmap <b>mapped</b> <b>file</b> interface of 4. 2 BSD Unix to Sprite, providing shared memory, <b>file</b> <b>mapping,</b> and user-level control over paging. This report first discusses the design issues for a shared memory and <b>file</b> <b>mapping</b> interface and {{provides an overview of}} the support for these functions in other operating systems. Details of the Sprite virtual memory system and the changes to support shared memory and <b>file</b> <b>mapping</b> are given. Performance measurements show that in this implementation, <b>mapped</b> <b>files</b> have comparable performance to block I/O and are faster than buffered I/O for sequential access. For random access to locally cached files, the relative performance of <b>mapped</b> <b>files</b> versus block I/O depends on the access patterns. Access to files across the network is limited by network transmission time, both for <b>mapped</b> <b>files</b> and block I/O. January 4, 1993 ############### + The work described here was supported [...] ...|$|R
50|$|The J {{programming}} language has supported memory <b>mapped</b> <b>files</b> {{since at least}} 2005. It includes support for boxed array data, and single datatype files. Support can be loaded from 'data/jmf' J's Jdb and JD database engines use memory <b>mapped</b> <b>files</b> for column stores.|$|R
5000|$|In the Microsoft [...]NET runtime, P/Invoke {{can be used}} to use memory <b>mapped</b> <b>files</b> {{directly}} through the Windows API. Managed access (P/Invoke not necessary) to memory <b>mapped</b> <b>files</b> was introduced in version 4 of the runtime (see Memory-Mapped Files). For previous versions, there are third-party libraries which provide managed API's.|$|R
50|$|TuneBuilder's {{technology}} {{was invented by}} Darryl Goede with a U.S. patent granted in 1998. The TuneBuilder patent was further cited in twenty-three subsequent patents. The patent describes the technology as the creation and storage of a mapping/descriptive file that located sections of music stored as digital files. Then in a subsequent process, the <b>mapping</b> <b>file</b> then directed a processor to produce an audio output stream consisting of a new sequence of the sections.|$|E
40|$|Several {{major changes}} in this version: {{taxonomy}} for ITS is updated to newest release from UNITE v 7. 1 11 - 20 - 2016. USEARCH 9 is now supported throughout and defaults {{have been changed to}} use usearch 9 UNOISE 2 algorithm is employed in a 'clustering' module SINTAX algorithm is supported in ufits taxonomy. default hybrid method now uses SINTAX, UTAX, and global alignment to infer the best taxonomy assignment. QIIME-like mapping files can now be used during demultiplexing/pre-processing. If you do not use a <b>mapping</b> <b>file,</b> the scripts will create one for you. The <b>mapping</b> <b>file</b> can be used to add metadata to it and then passed to ufits taxonomy to create a BIOM output file containing all metadata, OTUs, and taxonomy BIOM output of ufits taxonomy is compatible with QIIME, PHINCH, MetaCoMET, PhyloSeq, etc. ufits filter now alerts user if passing a barcode name via -b is not found in OTU tabl...|$|E
40|$|This paper {{discusses}} {{the shortcomings of}} unparameterizable image maps and presents {{a solution to the}} problem through the use of PATH_INFO and textual substitution in the mapping configuration file. After some discussion on why this scheme was chosen instead of the alternatives, two example of actual use are given: passing parameters to the <b>mapping</b> <b>file</b> (1) as a path and (2) as arguments to a CGI script. Both techniques offer convenience and ease of design to the website administrator and we explore these advantages. ...|$|E
50|$|Another pseudo-type—associated with name, {{rather than}} value—is the memory <b>mapped</b> <b>file.</b>|$|R
50|$|MicroStar based its {{arguments}} on the Game Genie case, discussed in Galoob v. Nintendo, arguing {{that both of}} them replaced old values (in the case of N/I, the <b>MAP</b> <b>files</b> in the original game) with new values (N/I's <b>MAP</b> <b>files).</b> They noted that the audiovisual experience was described by the N/I <b>MAP</b> <b>files.</b> Micro Star claimed that N/I <b>MAP</b> <b>files</b> were not derivative works, as they only referred to, but did not contain any art files from D/N-3D, and that as a result, no reproduction of D/N-3D content took place. Micro Star also argued that any use of D/N-3D's protected expression constituted fair use. Micro Star suggested that the court evaluate the fair use claim from the player's perspective, as the player created the derivative work. Finally, Micro Star argued that FormGen had forfeited its rights on the user-created levels by authorizing users to create new levels.|$|R
5000|$|... mmap, a POSIX-compliant Unix {{system call}} that <b>maps</b> <b>files</b> or devices into memory ...|$|R
40|$|The {{diversity}} of applications developed with different programming languages, application/data architectures, database systems and representation of data/information leads to heterogeneity issues. One {{of the problem}} challenges in the problem of heterogeneity is about heterogeneity data in term of semantic aspect. The semantic aspect is about data that has the same name with different meaning or data that has a different name with the same meaning. The semantic data mapping process is the best solution in the current days to solve semantic data problem. There are many semantic data mapping technologies {{that have been used}} in recent years. This research aims to compare and analyze existing semantic data mapping technology using five criteria’s. After comparative and analytical process, this research provides recommendations of appropriate semantic data mapping technology based on several criteria’s. Furthermore, {{at the end of this}} research we apply the recommended semantic data mapping technology to be implemented with the real data in the specific application. The result of this research is the semantic data <b>mapping</b> <b>file</b> that contains all data structures in the application data source. This semantic data <b>mapping</b> <b>file</b> can be used to map, share and integrate with other semantic data mapping from other applications and can also be used to integrate with the ontology language...|$|E
40|$|We {{introduce}} {{a new approach to}} take into account the memory architecture and the memory mapping in High- Level Synthesis for data intensive applications. We formalize the memory mapping as a set of constraints for the synthesis, and defined a Memory Constraint Graph and an accessibility criterion to be used in the scheduling step. We use a memory <b>mapping</b> <b>file</b> to include those memory constraints in our HLS tool GAUT. It is possible, with the help of GAUT, to explore a wide range of solutions, and to reach a good tradeoff between time, power-consumption, and area. Comment: ISBN 0 - 7695 - 2097 -...|$|E
40|$|This is {{an updated}} {{release of a}} Python script (entrez_qiime. py) and {{accompanying}} guidelines (entrez_qiime. pdf) for a workflow to take an input FASTA file generated from the NCBI database (e. g. through an Entrez/gquery search) and generate the id-to-taxonomy <b>mapping</b> <b>file</b> needed to BLAST metabarcode data against those sequences using the QIIME script assign_taxonomy. py. The original version of this workflow script and documentation has been available from the author Chris Baker since at least October 2012. It was uploaded to this GitHub repository and formally released as v 1. 0 essentially unchanged in September 2016. This updated release in October 2016 includes a major change to {{the operation of the}} script. Instead of taking FASTA files with GI numbers as the sequence identifiers, it now takes FASTA files with NCBI accession. version numbers as the sequence identifiers. This change is intended to allow this workflow to continue being used when the NCBI phases out GI numbers in the GenBank, GenPept, and FASTA formats supported by NCBI for sequence records ([URL] In addition to this change: (i) the script now takes either a FASTA file, as before, or a list of accession numbers as input; (ii) the script now only outputs two files - the id-to-taxonomy <b>mapping</b> <b>file</b> as required by qiime, plus a logfile; (iii) sequences in the FASTA file (or list file) that do not appear in the taxonomy database are now included in the output, but with "NA;NA;NA; [...] . " as their taxonomy string. The PDF documentation has also been updated to reflect these changes...|$|E
5000|$|... a {{text file}} {{containing}} information about <b>mapped</b> <b>files</b> and blocks (like heap and stack).|$|R
50|$|The D {{programming}} language supports memory <b>mapped</b> <b>files</b> in its standard library (std.mmfile module).|$|R
40|$|Abstract: In this paper, a data {{acquisition}} subsystem for aluminum reduction cells under reconstruction is designed on memory <b>mapped</b> <b>file</b> and MODBUS, has realized the sampling procedure {{and the main}} control program of real-time data transmission through the memory <b>mapped</b> <b>file,</b> has realized the MODBUS communication between the sampling procedure and the prestage using MSComm control, the system can work stably at present...|$|R
40|$|Abstract. In recent years, {{with the}} {{development}} of computer technology, virtual reality technology has been paid more and more attention. The scene construction is the foundation of the realization of VRML virtual reality interactive work. For large-scale virtual scene, the amount of data and the <b>mapping</b> <b>file</b> network transmission will be very large, the interpretation and execution speed have a great impact. This paper focuses on some key problems in virtual reality modeling language. It expected to solve the VRML scene and large amount of data on the network implementation problems of low efficiency, such as how to baked mapping in VRML; render detail level of scene; segmentation method and how to create a virtual character etc...|$|E
40|$|We {{present a}} {{preliminary}} framework for interaction interoperability in Distributed Virtual Environments (DVEs). The {{goal is to}} allow each user to use a different input devices and interaction techniques and yet collaborate seamlessly. The framework adopts Service Oriented Architecture (SOA) and use a knowledge base {{in the form of}} three ontologies. The ontologies use Web Ontology Language (OWL) to describe input devices, interaction techniques and interaction tasks. In addition, two directories contain application and user profiles. An inference engine searches for the best possible combination of input devices, interaction techniques and tasks. The resulting user’s <b>mapping</b> <b>file</b> is then accessed using web services. Two proof-of-concept framework implementations demonstrate how to develop a new application and how to support a legacy application...|$|E
40|$|We {{introduce}} {{a new approach to}} take into account the mem-ory architecture and the memory mapping in the Behav-ioral Synthesis of Real-Time VLSI circuits. We formalize the memory mapping as a set of constraints for the syn-thesis, and defined a Memory Constraint Graph and an ac-cessibility criterion to be used in the scheduling step. We use a memory <b>mapping</b> <b>file</b> to include those memory con-straints in our HLS tool GAUT. Our scheduling algorithm exhibits a relatively low complexity that permits to tackle complex designs in a reasonable time. Several experiments are performed to demonstrate the efficiency of our method, and to compare GAUT with an industrial behavioral syn-thesis tool. We finally show how to explore, with the help of GAUT, a wide range of solutions, and to reach a good tradeoff between time, power-consumption, and area...|$|E
5000|$|... 1,403 {{structures}} in the PDB have a 3DEM <b>map</b> <b>file</b> deposited in EM Data Bank ...|$|R
5000|$|MapInfo TAB {{format -}} format using TAB, DAT, ID and <b>MAP</b> <b>files</b> (by MapInfo Corporation) ...|$|R
5000|$|MapInfo TAB {{format -}} MapInfo's vector data format using TAB, DAT, ID and <b>MAP</b> <b>files</b> ...|$|R
30|$|We {{carried out}} an InParanoid (Ostlund et al. 2010) {{analysis}} to generate gene family clusters (Shulaev et al. 2011) and thereby identify Arabidopsis genes orthologous to rice. A homolog {{with a score}} of 1.0 was considered a true ortholog and any gene with a score of[*]≥[*] 0.3 was considered a paralog in their decreasing order of homology. The list of 430 curated rice gene interactors was used to query the homology-based gene family cluster data and create a <b>mapping</b> <b>file</b> listing the gene identifiers from both species. Three gene homolog files were created (1) with rice and Arabidopsis orthologs only and (2) two separate files with rice and Arabidopsis paralogs respectively. The files include common gene symbols assigned by TAIR ([URL] and extracted using Gramene Biomart (Spooner et al. 2012). This data {{is used by the}} Pathway GeneSWAPPER tool to either create orthology based projects for another species or enrich the existing species-specific networks by adding paralogs as new interactors.|$|E
40|$|The {{concept of}} memory mapped files reduces the I/O data {{movement}} by <b>mapping</b> <b>file</b> data {{directly to the}} process address space. This is best suitable for the data mining applications which involve accessing large data files. The recent improvement in parallel processor architectures is the multi-core architectures. To get the real benefit from these architectures we have to redesign the existing serial algorithms {{so that they can}} be parallelized on multi-core architectures. OpenMP is an API for parallel programming which make a serial program to run in parallel without much redesigning job. Our main concern in this paper is to evaluate the performance of apriori using linux mmap() function compared to fread() function in both the serial and parallel environments. Experiments are conducted with both simulated and standard datasets on multi-core architectures using openMP threads. Our experiments show that mmap() function gives better results than fread() function with both serial as well as parallel implementations of apriori on dual core...|$|E
30|$|First, sample {{isolation}} and quality control must be performed from multiplexed Standard Flowgram Format (SFF) file or FASTQ files. The four main steps for raw data pre-processing are as follows. (1) Sample demultiplexing: the multiplexed reads {{are assigned to}} samples based on their unique nucleotide barcodes in the <b>mapping</b> <b>file.</b> (2) Primer removal: during demultiplexing, the primer sequences and barcodes have to be removed at the same time. (3) Quality filtering: short or low average quality score reads are removed using customized thresholds, and any sequence with the first nucleotide as “N”or “n” is cut. (4) Denoising and chimera removal: before sequence clustering, denoising and chimera removal are required for 454 and Illumina datasets. In this platform, chimera detection {{is based on the}} USEARCH 6.1 algorithm (Edgar 2010). The above steps are all run by calling QIIME (Caporaso et al. 2010 a, b). Paired-end reads for the Illumina platform are trimmed using Trimmomatic (Bolger et al. 2014). Then, FLASH software (Magoc and Salzberg 2011) is used to assemble the trimmed paired-end reads, and the resulting contigs are compiled into an input file to use for the next sample demultiplexing step.|$|E
5000|$|Unlimited free download, {{directly}} from the app (download limit 10 <b>map</b> <b>files</b> in free version) ...|$|R
5000|$|The Java {{programming}} language provides classes and methods to access memory <b>mapped</b> <b>files,</b> such as [...]|$|R
5000|$|Automatic {{announcement}} of public points of interest, provided the necessary Open Street <b>Map</b> <b>files</b> have been downloaded.|$|R
40|$|In general, {{there are}} two methods to pass on design {{information}} in a petrochemical plant design: the manual data key-in method and the file data transfer method. The manual data key-in method is a basic method to pass on data; but this method is time consuming to assign data in one by one fashion. The file data transfer method is a <b>mapping</b> <b>file</b> data from one program to another program under certain specific function and criteria. This paper starts with {{how to use a}} file data transfer method to create a stress analysis model, and then proposes an approach to transfer the stress analysis result to a structural analysis program by using the Pipe Loadings Transfer Program. In a piping design using 3 D plant design software for modeling, the piping design information can be directly transferred to the stress input file by using point vectors to create a stress analysis model. The concepts of a pipe support vector and a beam vector were introduced to transfer the pipe loadings from stress analysis results to a structural analysis program. The advantages of using a file data transfer method are simple, fast, and accurate...|$|E
30|$|The sffinfo command {{was used}} to extract fasta format (sequence data) and quality (quality scores) files from a raw.sff file with –s and –q options, respectively. The {{following}} steps were {{carried out by the}} QIIME (Quantitative Insights into Microbial Ecology) software package (Caporaso et al. [2011]). Output fasta and quality files were filtered to exclude sequences with lengths (< 150  bp) and quality score (< 50). Raw sequences with uncorrectable barcodes were removed. The remaining sequences were sorted by a <b>mapping</b> <b>file</b> to their relevant samples according to the barcode. The denoised dataset was clustered into operational taxonomic units (OTUs) with 97 % similarity threshold, using the UCLUST algorithm. The representative sequences were selected and aligned with greengenes core set of aligned sequences using Pynast. Taxonomy was assigned using the greengenes database. For OTUs that represented more than 5 % of the sequences for any sample, taxonomic identification at the genus level was determined using basic local alignment search tool (BLAST) to compare the representative sequence for that OTU against the National Center for Biotechnology Information (NCBI) nucleotide non-redundant database. Phylogenetic trees were constructed using the software MEGA v 5 with the neighbor joining criterion, and 1, 000 times of bootstrap resampling was performed to assess the confidence of tree topologies (Kumar et al. [2008]).|$|E
40|$|ChangeLog 2. 1. 0 (2015 - 08 - 06) Update SwissLipids, BRENDA and wikidata Update InChiKey to PRIMARY id Fix designations for KEGG Reactome and PubChem-bioassay Added the InChIKey as DataSource, {{allowing}} at {{some point}} WikiPathways to be searched on InChIKey Added SwissLipids Added more detail {{on how to get}} DataSource's Also compiles the BatchMapper now Added 'Plasmodium falciparum' to the Organism enumeration Added alternative methods that allow getting attributes not just from the data source of the Xref, but from any or all of the data sources in the BridgeDb <b>mapping</b> <b>file</b> Added the regular expression for the Wikidata identifier Added Wikidata as DataSource Preferably take the existing system code, removing use of deprecated methods Added an initial two upgrade notes for BridgeDb 2. 0 Made the method setStrictDataSourceChecking deprecated, indicating it is not regular API and will disappear Introduced a compatibility mode, allowing BridgeDb to silently ignore inconsistencies and contradictions in DataSource registrations, e. g. with old Derby files Added column headers and brief descriptions for datasources QC tool: Now only shows the removed IDs when you run it with '-DshowRemovedIDs=true' More detailed change report (number of new genes added and genes removed) Use the same relative values as with file size changes: as change to the old number of identifiers Also report the full name Updated the QC tool to BridgeDb 2. ...|$|E
30|$|The master {{monitors}} each map task’s {{successful completion}} and notifies reduce {{workers of the}} <b>map</b> <b>file</b> output locations.|$|R
50|$|For Perl {{there are}} a several modules {{available}} for memory <b>mapping</b> <b>files</b> on the CPAN, such as Sys::Mmap and File::Map.|$|R
50|$|The {{major reason}} to choose memory <b>mapped</b> <b>file</b> I/O is performance. Nevertheless, {{there can be}} tradeoffs. The {{standard}} I/O approach is costly due to system call overhead and memory copying. The memory-mapped approach has its cost in minor page faults—when a block of data is loaded in page cache, but is not yet mapped into the process's virtual memory space. In some circumstances, memory <b>mapped</b> <b>file</b> I/O can be substantially slower than standard file I/O.|$|R
