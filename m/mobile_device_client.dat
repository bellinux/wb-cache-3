13|10000|Public
5000|$|O3SIS AG (formerly O3SIS Information Technology AG) {{was founded}} by Bernd Rützel, Ute Heymann and Dirk Dörre in 1996, specializing in carrier-grade mobile {{software}} solutions. 2014 The Gemalto GmbH in Overath (former O3SIS AG) development center will be closed on 30 September.2010 New Living Mobility product suites presented for next generation mobile communication, data protection and sharing of personal data and media 2009 O3SIS AG is acquired by Gemalto2008 New company divisions [...] "Enterprise" [...] and [...] "Retail" [...] with tailored products introduced 2007 O3SIS start roll out of its market leading <b>mobile</b> <b>device</b> <b>Client</b> strategy to enable Synchronisation and Push Mail on Windows Mobile, Blackberry, iPhone and other smartphones 2007 O3SIS introduces Over-The-Air Backup & Restore and Push Mail on PocketPC and Windows Mobile Smartphones 2006 o2 Germany is first mobile operator to deploy a fully fledged Communication Center based on the O3SIS Unified Mobile Applications platform (UMA) 2005 Worldwide marketing of O3SIS' Over The Air Data Synchronisation Services 2004 Vodafone Germany is the first mobile operator to offer O3SIS Over The Air (OTA) Backup & Restore services of personal addresses to its customers in Germany 2001 New product [...] "XPAnywhere" [...] presented for seamless synchronisation of contacts and calendar as well as transfer of files from PC to mobile phones 2000 Introducing first Mobile E-mail with T-Motion UK 2000 Launch Wireless Companion and [...] "Untereschbach.com" [...] - first [...] "Wireless Village" [...] of the world 1999 Launch of famous [...] "YourWap.com" [...] portal for personal communication via Internet and Mobile Phones 1996 o3sis AG - company founded ...|$|E
40|$|Includes bibliographical {{references}} (p. 42). Mobile {{devices are}} replacing laptops and traditional computers. These devices are used {{not just for}} communication but also for multimedia applications such as listening to music, watching videos, and playing games. Thus the storage space available on these devices limits how much multimedia files {{can be used on}} the device and the user is constantly removing files to make space to add new ones. Addition of extra storage space either by increasing internal storage by manufacturers or addition of SD cards only serves to temporarily alleviate the problem until we run out of space again. There is a need to permanently solve this problem and integration to cloud based storage elegantly solves this problem. Cloud Based File System solves this problem by providing anytime/ anywhere access to the unlimited storage of a "cloud" to the Mobile Device users. To show feasibly of concept, Cloud Based File System App is implemented, which consists of Cloud Server app and <b>Mobile</b> <b>Device</b> <b>Client</b> app. The Cloud Server app is implemented using JAVA and it does not have a user interface and it runs on your "cloud". <b>Mobile</b> <b>Device</b> <b>Client</b> app is an ANDROID app which runs on your Mobile Device, implemented using android programming. This app provides the Mobile Device users with the facility to read, open, edit and save Cloud files from a Mobile Device. The biggest advantage of this app for mobile users is anytime/anywhere access to their Cloud files which provides a way towards efficient learning for students, and business agility for corporate professionals...|$|E
40|$|Abstract—In {{this paper}} we propose a novel {{approach}} for searching eCommerce products using a mobile phone, illustrated by a prototype eCoMobile. This approach aims to globalize the mobile search by integrating the concept of user multilinguism into it. To show that, we particularly deal with English and Arabic languages. Indeed the mobile user can formulate his query on a commercial product in either language (English/Arabic). The description of his information need on commercial products relies on the ontology that represents the conceptualization of the product catalogue knowledge domain defined in both English and Arabic languages. A query expressed on a <b>mobile</b> <b>device</b> <b>client</b> defines the concept that corresponds to the name of the product followed by a set of pairs (property, value) specifying the characteristics of the product. Once a query is submitted it is then communicated to the server side which analyses it and in its turn performs a...|$|E
50|$|System Center <b>Mobile</b> <b>Device</b> Manager <b>client</b> {{is located}} in ROM. All device {{management}} activities are centrally managed from the server side.|$|R
40|$|Considering the {{limitations}} of <b>mobile</b> <b>devices</b> like low bandwidth, less computation power, minimumstorage capacity etc {{it is not possible}} to store whole data for 3 D visualization on <b>mobile</b> <b>devices.</b> Therefore to minimize the load of <b>mobile</b> <b>devices</b> there is use of server in case of remote 3 D visualizationon <b>mobile</b> <b>devices</b> (<b>clients).</b> For 3 D visualization on <b>mobile</b> <b>devices</b> various techniques are used at serverside as well as at mobile side for different purpose. Some techniques directly provides 3 D visualizationand some techniques are indirectly responsible for 3 D visualization on <b>mobile</b> <b>devices.</b> Remotevisualization on <b>mobile</b> <b>devices</b> includes various parameters and aspects in different technique...|$|R
30|$|In the {{proposed}} scheme, we suppose small <b>mobile</b> <b>devices</b> as <b>clients.</b> The clients only have poor electronic power provided by servers {{and can only}} perform light calculations.|$|R
40|$|This paper {{discusses}} {{the potential benefits}} of applicationspecific power management through remote task execution. Power management is of particular importance for mobile devices that have to rely on battery power for extended periods of time. Image processing is a class of applications important in mobile environments. Image processing can be used in autonomousrobot navigation, target acquisition/classification, keyboard-less input, and aerial surveillance (Micro Air Vehicles), just to mention a few. Experimental results on an image processing application, namely a human face detection and recognition system, indicate the power savings that can be achieved for this important class of applications. We discuss a compilation strategy that generates two versions of the initial application, one to be executed on the <b>mobile</b> <b>device</b> (<b>client),</b> and the other on a machine connected to the mobile device via a wireless network (server). The client and server codes {{have to be able to}} deal with dis [...] ...|$|E
30|$|The native {{application}} resolves some of {{the wireless}} networks limitations such as low-bandwidth and unreliability, understands the user definitions, and reads some mobile devices context in order to adjust the dynamic content downloaded from the Web Service. This solution combines ubiquitous information in {{both sides of the}} provided system. On the server side, it calculates image quality, number of items to download, and text format. On the <b>mobile</b> <b>device</b> (<b>client)</b> side, it decides what, how and how many news information or images will be downloaded. This ubiquitous collaboration between mobile device and Web Service is a new approach of intelligent applications that brings out the betterment of two worlds—the server-side power and the client-side context, location, and sensor awareness [2]. Moreover, for journalists and all the news related professionals, {{it is important to know}} if a mobile device is just a Web page extension or a new way of communication, more specifically—the seventh way of communication [3].|$|E
40|$|Interactive {{visualization}} of volume models in standard mobile devices is a challenging present problem with increasing interest from new application fields like telemedicine. The complexity of present volume models in medical applications is continuously increasing, therefore increasing {{the gap between}} the available models and the rendering capabilities in low-end mobile clients. New and efficient rendering algorithms and interaction paradigms are required for these small platforms. In this paper, we propose a transfer function-aware compression and interaction scheme, for client-server architectures with visualization on standard mobile devices. The scheme is block-based, supporting adaptive ray-casting in the client. Our two-level ray-casting allows focusing on small details on targeted regions while keeping bounded memory requirements in the GPU of the client. Our approach includes a transfer function-aware compression scheme based on a local wavelet transformation, together with a bricking scheme that supports interactive inspection and levels of detail in the <b>mobile</b> <b>device</b> <b>client.</b> We also use a quantization technique that takes into account a perceptive metrics of the visual error. Our results show that we can have full interaction with high compression rates and with transmitted model sizes that can be of the order of a single photographic image. Postprint (published version...|$|E
50|$|DynaComware fonts can {{be found}} in Chinese software, {{embedded}} and <b>mobile</b> <b>devices.</b> Major <b>clients</b> for DynaComware products include Microsoft, Apple Daily News, Panasonic, PC HOME, the Taiwanese government, and Longhua Technical University.|$|R
50|$|A large {{range of}} <b>client</b> <b>devices</b> can connect to a Secure Global Desktop Server, {{including}} Microsoft Windows PCs, Solaris desktops, Apple Macintoshes, Linux PCs, thin clients {{such as those}} from Sun and Wyse, and <b>mobile</b> <b>devices.</b> The <b>client</b> requires only a web browser with a Java Runtime Environment installed.|$|R
50|$|Impress Remote is an {{open source}} {{presentation}} remote control app for LibreOffice on <b>mobile</b> <b>devices.</b> The <b>client</b> allows interacting with slideshow presentations from a <b>mobile</b> <b>device,</b> including slide previews, speaker notes, timer, stop watch, pointer, going directly to a given slide, blank screen and more (depending on the mobile version).|$|R
40|$|Abstract—The {{need for}} the {{systematic}} collection and use of epidemiological data, together with the undergoing modernization of the public healthcare system in Serbia, has motivated us to develop Dr Warehouse, an extensible intelligent software system for the collection, presentation, and analysis of data from epidemiological and public healthcare sources. The central point {{of the system is}} a data warehouse where medical data about registered disease cases and relevant demographic data are being collected. Through a web application and <b>mobile</b> <b>device</b> <b>client,</b> different categories of users may access data that are of interest to them, perform built-in analyses, or test their own epidemiological hypotheses. Dr Warehouse is expected to provide intuitive visualization of epidemiological data, facilitate discovery of epidemiological knowledge, and support modelling of epidemic dynamics. We discuss our motives for building such a system, the architecture of the system, our choices regarding data modelling, and the built-in functionalities. We implemented a foundation for different analyses that are expected to provide valuable insights if properly adapted and used in practice: investigation of diagnosis change over time, forecasts based on data mining, and compartmental models of disease dynamics. Keywords-business intelligence, public healthcare, epidemiological analysis, absenteeism, disease outbreak prediction. I...|$|E
40|$|A {{seamless}} {{infrastructure for}} information access and data processing is the backbone {{for the successful}} development and deployment of the envisioned ubiquitous/mobile applications of the near future. The development of such an infrastructure is a challenge due to the resourceconstrained nature of the mobile devices, {{in terms of the}} computational power, storage capacities, wireless connectivity and battery energy. With spatial data and locationaware applications widely recognized as being significant beneficiaries of mobile computing, this paper examines an important topic with respect to spatial query processing from the resource-constrained perspective. Specifically, when faced with the task of answering different locationbased queries on spatial data from a mobile device, this paper investigates the benefits of partitioning the work between the resource-constrained <b>mobile</b> <b>device</b> (<b>client)</b> and a resource-rich server, that are connected by a wireless network, for energy and performance savings. This study considers two different scenarios, one where all the spatial data and associated index can fit in client memory and the other where client memory is insufficient. For each of these scenarios, several work partitioning schemes are identified. It is found that work partitioning is a good choice from both energy and performance perspectives in several situations, and these perspectives can have differential effects on the relative benefits of work-partitioning techniques. ...|$|E
40|$|This paper {{discusses}} {{the potential benefits}} of applicationspecific power management through remote task execution. Power management is crucial for mobile devices that have to rely on battery power for extended periods of time. Image processing and understanding is a class of applications that is important in mobile environments. Image processing can be used in autonomous robot navigation, target acquisition/classification, keyboard-less input, and aerial surveillance (Micro Air Vehicles), just to mention a few. Experimental results on an image processing application, namely a human face detection and recognition system, indicate the power savings that can be achieved for this important class of applications. We discuss a compilation strategy that generates two versions of the initial application, one to be executed on the <b>mobile</b> <b>device</b> (<b>client),</b> and the other on a machine connected to the mobile device via a wireless network (server). The client and server codes {{have to be able to}} deal with disconnection events. Our proposed compilation strategy uses checkpointing techniques to allow the client to monitor program progress on the server, and to request checkpoint data in order to reduce the performance penalty in case of a possible server and/or network failure. The reported results have been obtained by actual power measurements on three client systems, (1) th...|$|E
5000|$|Enterprise-level {{licensing}} and royalty accounting services for digital media services, <b>mobile</b> <b>device</b> and carrier <b>clients</b> and content owners including via BPO and SaaS models.|$|R
40|$|We {{present a}} {{narrative}} theory-based approach to data mining that generates cohesive stories from a Wikipedia corpus. This approach {{is based on}} a data mining-friendly view of narrative derived from narratology, and uses a prototype mining algorithm that implements this view. Our initial test case and focus is that of field-based educational tour narrative generation, for which we have successfully implemented a proof-of-concept system called Minotour. This system operates on a client-server model, in which the server mines a Wikipedia database dump to generate narratives between any two spatial features that have associated Wikipedia articles. The server then delivers those narratives to <b>mobile</b> <b>device</b> <b>clients.</b> 1...|$|R
50|$|Cloud {{computing}} architectures {{consist of}} front-end platforms called clients or cloud clients. These clients are servers, fat (or thick) clients, thin clients, zero <b>clients,</b> tablets and <b>mobile</b> <b>devices.</b> These <b>client</b> platforms {{interact with the}} cloud data storage via an application (middleware), via a web browser, or through a virtual session.|$|R
40|$|Mobile {{devices such}} as Personal Digital Assistants (PDAs) or smart phones are rapidly {{increasing}} their graphics and networking capabilities. However, real-time rendering of large terrains is still a challenging task to accomplish in such limited devices. In this paper we describe the principles involved {{in the design and}} development of a scalable client-server architecture for hybrid rendering of terrains over wireless networks on mobile devices. We have developed a hybrid adaptive streaming and rendering method based on a server-client approach. The rendering workload is distributed between a server and the clients and the terrain is partitioned into the close-range geometry and the background. The close-range geometry is downloaded from the database and rendered on the mobile client, and the background is portrayed as a view-dependent panoramic impostor and rendered by the server on demand then it is sent on request to the server for display. The system architecture is organized in three levels: the main server, the panorama server and the <b>mobile</b> <b>device</b> <b>client.</b> This architecture provides support for efficient delivery of geometry and impostors to mobile clients according to their capabilities. As a proof of concept, we have implemented a prototype and carried out exhaustive experiments considering different network scenarios and different number of connected clients. The analysis of the server workload and response times shows that our architecture achieves a great scalability and performance even when using low-end mobile devices. Postprint (published version...|$|E
40|$|Contemporary mobile {{sets are}} not used just for making calls and sending messages. They are {{increasingly}} being used in Mobile Cloud Computing (MCC) to store sensitive and critical information {{as well as to}} access sensitive data using the Internet via Cloud Service Provider (CSP). MCC is combination of Cloud Computing (CC) and mobile communication. Using MCC helps to decrease running cost and expansion of mobile applications. One of the important challenges in MCC is security and privacy. Furthermore, authentication {{plays an important role in}} preserving security and privacy of shared information in MCC. In fact, the majority of mobile handsets use inherently weak authentication mechanisms, based upon passwords and Personal Identification Number(PINs). But it is not secure way for authenticating users because of its limitation, as well as it is difficult to confirm that the demand is from the rightful owner. This study focus on a type of behavioral biometric authentication that is called Keystroke Dynamic Authentication (KDA) to identify mobile users and improve the authentication mechanism in cloud server. There are different parameters of measuring keystrokes, we defined keystrokes duration as an attribute to identify user. For implementing this method, we use Android SDK development. It includes mobile device emulator, Android Virtual Device (AVD) that helps to develop and test Android applications without using a physical device. Test of the the application is based on three different approaches (client side, local server, cloud server). In the first approach, experimental results is obtained from <b>mobile</b> <b>device</b> (<b>client</b> side) shows that this method works 94 % correctly. In the second approach, application is connected to the php server and obtained results show that the application can works 96 : 15 %correctly. In the last approach, obtained results from cloud server (google drive) show that the application can work 95 : 34 % correctly. The important point in these approaches is that, the username and password were known for people cooperate in testing the proposed application. In addition, KDA is based on unique characteristics of users (here keystrokes duration) and it is hard to pretend as legible user. Therefore, applying KDA in mobile set helps to improve security and privacy of authentication...|$|E
40|$|The {{aim of the}} master’s thesis was to {{implement}} in the C++ language a software solution of the localization of the mobile phone with Symbian OS in the GSM network. The intended purpose of this solution would be especially the phone localization {{in the case of}} its theft or loss. A familiarization with the development process of the Symbian platform and understanding the features of the Symbian version of the C++ language preceded the realization itself, because the Symbian C++ has an original style of the memory manipulation and error handling. The Symbian C++ basic principles and its features used in the implemented software are described in the second chapter of the text part, the first chapter deals with the history and version structuring of the Symbian OS. In the third part of the text is described the created software. The realized solution consists of three parts – server application PhoneLocServer for a <b>mobile</b> <b>device,</b> <b>client</b> application PhoneLocClient for a PC and the web-located part. The server was developed for the Symbian OS in the C++ language in the IDE Carbide. c++ and was tested in the S 60 3 rd edition SDK MR emulator and on the real device Nokia N 73. It is a GUI-less application running in the background, which is run automatically after a smartphone start-up. It controls the incoming SMS over the socket listening and the messages addressed to itself processes before a user can notice them. The control messages body is comprised of a prefix, which identifies them, a password, a sending period value and a state to which application should change. After the receiving of the control SMS server verifies the SMS sender through the use of his telephone number and the password. It compares these values with the data stored for the given IMEI on the web server. If the verification succeeds, the server runs a timer with the period known from the control SMS and on the callback of this timer are transferred the data describing current phone location and state via HTTP protocol to the web server. The GSM localization method “Cell ID” is used for the location determination. After the client user asks for the start of loading the data, he must answer the password and the observed phone’s IMEI and he is verified through the use of the web server again. If the verification succeeds, the periodic download of the server data starts and from the first downloaded file is found out the upload period. Download then continues till the time the client detects the end of sending by the server part or till the client user stops the download himself. The client was developed in the C++ language in the C++ Builder environment. It requires a Windows OS and internet connection for its right function. The web server mediates communication between the server and the client, stores the data for user verification and makes possible the server-side upload by the help of a simple PHP script. In all the used web server directories is present the. htaccess file to improve its security, e. g. it denies the directory listing in a web browser...|$|E
30|$|The <b>mobile</b> {{wireless}} <b>devices</b> (laptops, PDA devices, Smart phones, etc.) {{are commonly}} used with internet connection which is available almost everywhere and anytime these days. The connection speed {{of the two most}} common standards GPRS and WiFi varies from hundreds of kilobits to several megabits per second. In case of corporate information systems or some other types of facility management, zoological or botanical gardens, libraries, or museums information systems, the WiFi infrastructure network is often used to connect <b>mobile</b> <b>device</b> <b>clients</b> to a server. Unfortunately, the theoretical maximum connection speed is only achievable on laptops where high-performance components are used (in comparison to <b>mobile</b> <b>devices).</b> Other <b>mobile</b> <b>devices</b> like family PDAs or Smart phones have low-performance components due to a very limited space. The limited connection speed represents a problem for online systems using large artefacts data files. It is not possible to preload these artefacts before the <b>mobile</b> <b>device</b> is used in remote access state. This problem was found as a very important point. The rest of this paper specifies the problem and suggests a possible solution.|$|R
40|$|Cellular {{networks}} are heterogeneous networks with {{two different types}} of nodes: base stations/antennas (that act as servers) and <b>mobile</b> <b>devices</b> (<b>clients).</b> Clients are connected to base stations by radio links. Fixed frequencies are assigned to base stations to enable links to clients. Clients, on the other hand, continuously scan frequencies in search of a reachable base station. Consider a client that is within the reception range of two base stations. If these two base stations are assigned the same frequency, then mutual interference occurs and the links between the client and each of these conflicting base stations are rendered too noisy to be used. A base station may serve a client provided that the reception is strong enough and tha...|$|R
50|$|Voices.com has a store {{function}} that provides prices for {{different kinds of}} voice services, such as commercials or voicemail messages. It also has a library of articles to educate users about the voice acting industry and trends in the field. The site offers freelancers in more than 100 languages. Beside each freelancer's name {{there is a small}} sample of the person's voice that employers can listen to. In May 2012 the website launched an app for iPad and iPhone devices, followed by the release of an app for Android devices in January 2013, both allowing job seekers to interact with potential employers directly over their <b>mobile</b> <b>devices.</b> <b>Clients</b> that have worked with Voices.com include ESPN, PBS, The History Channel, Reader’s Digest, NBC, DreamWorks Animation, Sony, and Greer & Associates.|$|R
40|$|We {{introduce}} a novel infrastructure supporting automatic updates for dynamic content browsing on resource constrained <b>mobile</b> <b>devices.</b> Currently, the <b>client</b> {{is forced to}} continuously poll for updates from potentially different data sources, such as, e-commerce, on-line auctions, stock and weather sites, to stay up to date with potential changes in content. We employ a pair of proxies, located on the mobile client and on a fully-connected edge server, respectively, to minimize the battery consumption caused by wireless data transfers {{to and from the}} <b>mobile</b> <b>device.</b> The <b>client</b> specifies her interest in changes to specific parts of pages by highlighting portions of already loaded web pages in her browser. The edge proxy polls the web servers involved, and if relevant changes have occurred, it aggregates the updates as one batch to be sent to the client. The proxy running on the mobil...|$|R
5000|$|In 2013, {{the company}} {{launched}} DreamFactory Services Platform (DSP) to connect mobile apps to enterprise back-end infrastructures in the cloud. It provides a standards-based service palette {{and can be}} installed on any cloud or enterprise datacenter. The company operates as a software-as-a-service model, developing tools that address the movement of enterprise applications without lock-in restrictions across <b>mobile</b> <b>devices.</b> DreamFactory <b>clients</b> include enterprise technology companies, Web development agencies, and independent developers.|$|R
40|$|<b>Mobile</b> <b>devices</b> {{are used}} for {{conveying}} important information. Opportunity exist to introduce users to different application of resource constraint <b>mobile</b> <b>device</b> Currently, the <b>client</b> is forced to continuously poll for updates from potentially different data sources, such as, e-commerce, on-line auctions, stock and weather sites, to stay up to date with potential changes in content. We employ a pair of proxies, located on the mobile client and on a fully-connected edge server, respectively, to minimize the battery consumption caused by wireless data transfers {{to and from the}} <b>mobile</b> <b>device.</b> The <b>client</b> specifies his interest in changes to specific parts of pages by highlighting portions of already loaded web pages in her browser. The edge proxy polls the web servers involved, and if relevant change have occurred, it aggregates the updates as one batch to be sent to the client. The proxy running on the <b>mobile</b> <b>device</b> can pull these updates from the edge proxy, either on-demand or periodically, or can listen for pushed updates initiated by the edge proxy. We also use SMS messages to indicate available updates and to inform the user of which pages have changed...|$|R
40|$|Push message delivery, where {{a client}} {{maintains}} an ``always-on'' {{connection with a}} server {{in order to be}} notified of a (asynchronous) message arrival in real-time, is increasingly being used in Internet services. The key message in this paper is that push message delivery on the World Wide Web is not scalable for servers, intermediate network elements, and battery-operated <b>mobile</b> <b>device</b> <b>clients.</b> We present a measurement analysis of a commercially deployed WWW push email service to highlight some of these issues. Next, we suggest content-based optimization to reduce the always-on connection requirement of push messaging. Our idea is based on exploiting the periodic nature of human-to-human messaging. We show how machine learning can accurately model the times of a day or week when messages are least likely to arrive; and turn off always-on connections these times. We apply our approach to a real email data set and our experiments demonstrate that the number of hours of active always-on connections can be cut by half while still achieving real-time message delivery for up to 90 % of all messages. Comment: 6 pages, also visit [URL]...|$|R
50|$|Typically {{solutions}} {{include a}} server component, which sends out the management commands to the <b>mobile</b> <b>devices,</b> and a <b>client</b> component, which {{runs on the}} managed device and receives and implements the management commands. In some cases, a single vendor provides both the client and the server, while in other cases the client and server come from different sources.|$|R
40|$|Complex event {{detection}} over data streams {{has become}} ubiquitous through {{the widespread use}} of sensors, wireless connectivity and the wide variety of end-user <b>mobile</b> <b>devices.</b> Typically, event detection is carried out by a central server executing continuous queries. In this demonstration, we focus on the case where users with <b>mobile</b> <b>devices</b> submit continuous queries (for event detection) to a data stream management server which disseminates the results to the users over a shared broadcast medium. In order to minimize the overall energy consumption of the <b>mobile</b> <b>devices</b> (<b>clients),</b> we have proposed operator placement algorithms that split the processing of each continuous query between the centralized server and the requesting mobile clients, thus trading off energy consumption for communication energy consumption for computation. Speciﬁcally, in this demonstration, we present an interactive graphical interface to the inner workings of our three proposed operator placement algorithms, whereby attendees are able to investigate various query plans and the decisions that the algorithms make, as well as visualize the results of these algorithms in terms of client power consumption and response time. Besides being able to step through an algorithm’s execution as it considers various operator placement decisions, attendees are able to experiment with different scenarios by customizing the parameters of the query workloads (e. g., changing the selectivities and projectivities of the operators) or the client’s proﬁle (e. g., power consumed per unit of time of processing) and examine the impact...|$|R
40|$|Abstract: User {{preference}} of budget requirement for usage cost of bandwidth consumption to access cloud server’s infrastructure resources more like augmentation {{is becoming a}} concern in domain of mobile cloud computing. The bandwidth cost concerns recently has captured attention to researchers, IT professionals, and Academia; due to increase of demands (in bandwidth, congestion, latency) and utilization cost of accessing cloud resources became essential concern to <b>mobile</b> <b>device</b> <b>clients</b> how must be need to very accurate forecasting their bandwidth cost {{in order to determine}} the true cost of using the cloud, which leaves end users with no clear of their budget decision making. In the mean time mobile augmentation cloud based seem to be savior and beneficial for improving performance and energy saving of resource poor <b>mobile</b> <b>devices.</b> But hurt of bandwidth cost may cause only group of clients be able to access cloud resources, this may impact the overall energy consumption of <b>mobile</b> <b>devices</b> through which could impend trustworthiness and ultimately degrading the quality of service satisfactory experience to mobile device-clients and cloud provider. The aim of this paper is to investigate the utilization cost based on available bandwidth consumption of achievable rate throughput or speed for <b>mobile</b> <b>devices</b> utilizing resources of the contents running in the remote servers through augmentation. We have proposed an exemplary flowchart model of the methodology, algorithm, algorithm, and problem through mathematical expression to demonstrate and assess the augmentation decision, mobile augmentation cloud based feasibility and the utilization cost (bandwidth cost) and effect bandwidth cost on energy consumption in mobile augmentation cloud based for <b>mobile</b> <b>devices.</b> The findings and recommendations for future studies are presented...|$|R
5000|$|... gvSIG Mobile aims at {{broadening}} gvSIG execution platforms to a {{range of}} <b>mobile</b> <b>devices,</b> in order to give an answer to the needs {{of a growing number of}} mobile solutions users, who wish to use a GIS on different types of devices.So far, gvSIG Mobile is a Geographic Information System, as well as a Spatial Data Infrastructures <b>client</b> for <b>mobile</b> <b>devices.</b> Such a <b>client</b> is also the first one licensed under open source.gvSIG Mobile is known for: ...|$|R
30|$|The first service authenticates {{the user}} {{who wants to}} enter the system from a login and {{password}} defined in the database to prevent misuse of the service. The second service builds the O/D matrix from several initial filters. Such filters are applied into frames provided by the sensor, for instance, eliminating redundant data and bad data. These filters work according to flow estimation, {{which is based on}} three parameters given by the user (path, start date, and final date). The last service allows users to consult the matrix O/D from the above parameters from a <b>mobile</b> <b>device,</b> a <b>client</b> application, or a web application.|$|R
40|$|Abstract: The new {{generation}} of Internet applications which permit the development of activities of electronic commerce are characterized by the inclusion of two new elements: mobility and wireless connections. In this paper is summarized the process developed {{in the implementation of}} a commercial mobile software prototyp emphasizing the management of the data, the XML support and the possibility of generating adaptable content to different types of <b>mobile</b> <b>devices</b> and web <b>clients...</b>|$|R
40|$|The {{power of}} {{ubiquitous}} computing lies {{not just in}} constant access, but also in tailoring of information based upon location. In this paper we describe an architecture that supports tailoring of information and applications for their environment. This environment includes the <b>mobile</b> <b>client</b> <b>device,</b> its location, the available bandwidth, and any soft real-time constraints...|$|R
50|$|Sciforma, {{previously}} named PSNext, is {{an enterprise}} Project and Portfolio Management (PPM) software developed by Sciforma Corporation. Sciforma Corporation is an American software {{company based in}} San Jose, California. It is a Java web based cross-platform solution. It provides integration of portfolio, project, resource and document management and is completely configurable. The current software version is Sciforma 7.0. This version adds Single sign-on and an HTML5 interface enabling access from <b>mobile</b> <b>devices</b> or thin <b>clients.</b>|$|R
