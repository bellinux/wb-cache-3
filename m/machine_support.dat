75|1701|Public
25|$|Robert Smith, John Gibson, Aaron Sloman: 'POPLOG's {{two-level}} virtual <b>machine</b> <b>support</b> for interactive languages', in Research Directions in Cognitive Science Volume 5: Artificial Intelligence, Eds D. Sleeman and N. Bernsen, Lawrence Erlbaum Associates, pp 203–231, 1992.|$|E
500|$|During 1895, Hanna journeyed east to {{meet with}} {{political}} bosses such as Senators Matthew Quay of Pennsylvania and Thomas Platt of New York. When Hanna returned to Canton, he informed McKinley that the bosses would guarantee his nomination in exchange for control of local patronage. [...] McKinley was unwilling {{to make such a}} deal, and Hanna duly undertook to gain the former governor's nomination without <b>machine</b> <b>support.</b>|$|E
5000|$|Gavin Russom - Fun <b>Machine</b> <b>support,</b> {{synthesizer}}, synthesizer support ...|$|E
5000|$|... cap capabilities, display which power {{management}} features the <b>machine</b> <b>supports</b> ...|$|R
5000|$|The second {{generation}} of the Microsoft Hyper-V virtual <b>machine</b> <b>supports</b> virtualized UEFI.|$|R
50|$|The {{computer}} could {{function as}} a multi-station <b>machine,</b> <b>supporting</b> up to 4 users in 7 terminals.|$|R
5000|$|... #Caption: Support Vector <b>Machine.</b> <b>Support</b> vectors (dashed lines) {{are created}} to {{maximize}} the separation between two groups.|$|E
50|$|In early 1935, Agnes Driscoll led {{the attack}} on the Japanese M-1 cipher machine (also known to the U.S. as the ORANGE machine), used to encrypt the {{messages}} of Japanese naval attaches around the world. At the same time she sponsored the introduction of early <b>machine</b> <b>support</b> for cryptanalysis against Japanese naval code systems.|$|E
50|$|Flange mounts—Very {{strong and}} rigid, but have little {{tolerance}} for misalignment. Experts recommend cap end mounts for thrust loads and rod end mounts where major loading puts the piston rod in tension. Three types are head rectangular flange, head square flange or rectangular head. Flange mounts function optimally when the mounting face attaches to a <b>machine</b> <b>support</b> member.|$|E
30|$|Compare {{the number}} of {{available}} virtual <b>machines</b> <b>supporting</b> game modes at HA levels, in each cloud nodes.|$|R
5000|$|... the <b>machine</b> <b>supports</b> Java 1.6. AWT and Swing are {{partially}} supported. IKVM uses OpenJDK as {{its class}} library.|$|R
50|$|IIc <b>machines</b> <b>supported</b> the 16-color double hi-resolution {{graphics}} mode {{and from a}} software standpoint were identical to the IIe.|$|R
5000|$|Other {{improvements}} included for a refurbishment of the children's play area; new hard landscaping, footpaths {{and better}} lighting; CCTV cameras; outdoor gym equipment including a rowing <b>machine,</b> <b>support</b> bars and wall bars {{improvements to the}} stream and lake including new bridges; and new planting and landscaping including for semi-mature native oak, birch, alder, black poplar, and other native woodland trees and ornamental shrubs.|$|E
50|$|During 1895, Hanna journeyed east to {{meet with}} {{political}} bosses such as Senators Matthew Quay of Pennsylvania and Thomas Platt of New York. When Hanna returned to Canton, he informed McKinley that the bosses would guarantee his nomination in exchange for control of local patronage. McKinley was unwilling {{to make such a}} deal, and Hanna duly undertook to gain the former governor's nomination without <b>machine</b> <b>support.</b>|$|E
5000|$|Shifting ... Most {{parts of}} the JTAG state <b>machine</b> <b>support</b> two stable states used to {{transfer}} data. Each TAP has an instruction register (IR) and a data register (DR). The size of those registers varies between TAPs, and those registers are combined through TDI and TDO to form a large shift register. (The size of the DR {{is a function of}} the value in that TAP's current IR, and possibly of the value specified by a SCAN_N instruction.) There are three operations defined on that shift register: ...|$|E
50|$|All IBM System p5 and IBM eServer p5 <b>machines</b> <b>support</b> DLPAR (Dynamic Logical Partitioning) with Virtual I/O and Micro-partitioning.|$|R
50|$|Zmacs also {{supports}} buffers and modes. Zmacs also uses the window {{system of the}} Lisp <b>Machine</b> with <b>support</b> for mouse and windows. Zmacs supports unlimited backup of files, since the file system of the Lisp <b>Machine</b> <b>supports</b> file versions. It is not compatible with GNU Emacs and its Emacs Lisp.|$|R
50|$|Aestiva Array - The HTML/OS Virtual <b>machine</b> <b>supported</b> by the HTML/OS kernel which {{includes}} a web-based desktop, web-based file manager, and HTML/OS programming tools.|$|R
50|$|According to Apple, Leopard {{contains}} over 300 {{changes and}} enhancements over its predecessor, Mac OS X Tiger, covering core operating system components {{as well as}} included applications and developer tools. Leopard introduces a significantly revised desktop, with a redesigned Dock, Stacks, a semitransparent menu bar, and an updated Finder that incorporates the Cover Flow visual navigation interface first seen in iTunes. Other notable features include support for writing 64-bit graphical user interface applications, an automated backup utility called Time <b>Machine,</b> <b>support</b> for Spotlight searches across multiple machines, and the inclusion of Front Row and Photo Booth, which were previously included with only some Mac models.|$|E
5000|$|Pollard {{announced}} his candidacy for Governor of Virginia in 1915, but the Democratic primary was a three-way race, with the Prohibitionists endorsing Ellyson (because of his <b>machine</b> <b>support,</b> despite his lukewarm support for Prohibition), {{rather than let}} the [...] "wet" [...] Westmoreland Davis win. Davis nonetheless won the primary with 44% of the vote, and Ellyson garnered 27,811 votes to Pollard's 22, 436 votes. Disappointed and fearful that his political campaign had ruined his law practice, but unable to secure a federal appointment, Pollard volunteered with the Young Men's Christian Association and moved to Europe in 1918. He talked about the war's goals and assisted American soldiers abroad for 18 months.|$|E
5000|$|In October of 2015, {{ten years}} after the {{original}} FreeNAS release, FreeNAS 10 ALPHA was released, providing a preview of what would become FreeNAS Corral [...] GA [...] on March 15th, 2017. FreeNAS Corral introduced a new [...] graphical user interface, [...] command-line interface, [...] underlying [...] middleware, [...] container [...] management system and virtual machine management system. FreeNAS Corral departs from FreeNAS by providing not only [...] NAS [...] functionality but also [...] hyper-converged [...] functionality thanks to its integrated virtual <b>machine</b> <b>support.</b> However, on April 12th 2017 iXsystems announced that FreeNAS Corral would instead be relegated to being a 'Technology Preview', citing issues such as [...] "general instability, lack of feature parity with 9.10 (Jails, iSCSI, etc), and some users experiencing lower performance than expected" [...] and the departure of the project lead. Instead, {{the decision was made to}} revert to the existing 9.10 code and bring Corral features to 9.10.3 and further.|$|E
40|$|International audienceIn {{this paper}} we prove the (constant) {{competitiveness}} of an online algorithm for scheduling jobs on multiple <b>machines,</b> <b>supporting</b> a mechanism of penalties for the scheduler/ operator. Our context (online, multiple <b>machines,</b> <b>supporting</b> parameterizable penalties) is more general {{than in previous}} existing works. The main contribution of our paper is the (non trivial) analysis of our algorithm. Moreover, with our parameterizable penalties, the operator can find a trade-off between the attractiveness of its system and its own profit (gained with non canceled scheduledjobs) ...|$|R
5000|$|System info - this module {{provides}} {{information about the}} runtime system, such as the Operating System kind, type and version {{and whether or not}} the <b>machine</b> <b>supports</b> multiprocessing.|$|R
50|$|To {{work with}} {{existing}} fax machines, all iFax <b>machines</b> <b>support</b> standard faxing (requiring a regular phone line). Alternatively, an iFax {{can be used}} in conjunction with a fax gateway.|$|R
50|$|The {{relative}} {{security of}} cloud computing services is a contentious issue {{that may be}} delaying its adoption. Physical control of the Private Cloud equipment is more secure than having the equipment off site and under someone else's control. Physical control {{and the ability to}} visually inspect data links and access ports is required in order to ensure data links are not compromised. Issues barring the adoption of cloud computing are {{due in large part to}} the private and public sectors' unease surrounding the external management of security-based services. It is the very nature of cloud computing-based services, private or public, that promote external management of provided services. This delivers great incentive to cloud computing service providers to prioritize building and maintaining strong management of secure services. Security issues have been categorised into sensitive data access, data segregation, privacy, bug exploitation, recovery, accountability, malicious insiders, management console security, account control, and multi-tenancy issues. Solutions to various cloud security issues vary, from cryptography, particularly public key infrastructure (PKI), to use of multiple cloud providers, standardisation of APIs, and improving virtual <b>machine</b> <b>support</b> and legal support.|$|E
40|$|In this paper, {{a system}} {{identification}} method for linear regression models based on {{support vector machine}} is proposed. It is shown through a numerical example that the proposed identification method is robust for input-output data with outlier. Key Words: support vector <b>machine,</b> <b>support</b> vector regression, system identification, regularization 1...|$|E
40|$|We {{describe}} refactoring for Erlang programs, {{and work}} in progress to build two tools to give <b>machine</b> <b>support</b> for refactoring systems written in Erlang. We comment {{on some of the}} peculiarities of refactoring Erlang programs, and describe in some detail a number of refactorings characteristic of Erlang. 1...|$|E
5000|$|Several emulators of Acorn <b>machines</b> <b>support</b> UEF natively, to {{read and}} write tape data (at {{original}} speed or faster) and store state snapshots. Examples include ElectrEm, BeebEm and B-Em.|$|R
50|$|A514 steels {{are used}} where a weldable, machinable, very high {{strength}} steel is required to save weight or meet ultimate strength requirements. It is normally used as a structural steel in building construction, cranes, or other large <b>machines</b> <b>supporting</b> high loads.|$|R
40|$|This thesis {{presents}} {{research into}} the construction of persistent programming systems. Much of the thesis {{is concerned with the}} design and implementation of persistent programming languages, in particular PS-algol and Napier. Both languages <b>support</b> <b>machine</b> independent vector and raster graphics data types. Napier provides an environment mechanism that enables the incremental construction and binding of programs. Napier has a powerful type system featuring parametric polymorphism and abstract data types. The <b>machine</b> <b>supporting</b> Napier, the Persistent Abstract Machine, is investigated. The <b>machine</b> <b>supports</b> an efficient implementation of parametric polymorphism and abstract data types. The Persistent Abstract Machine has a layered architecture in which permits experimentation into language implementation and store design. The construction of compilers in a persistent environment is explored. A flexible compiler architecture is developed. With it, a family of compilers may be constructed a [...] ...|$|R
40|$|Abstract- Recently, {{data mining}} and time series {{prediction}} in financial forecasting has received much research attention. Many techniques {{are used in}} prediction on stock and fund trend, volatility, etc. In this paper, two technique of neural network is compared, namely, Support Vector <b>Machine</b> (<b>Support</b> Vector Machine, SVM) and MLP for considerin...|$|E
40|$|Abstract. Successful {{representation}} and markup languages {{find a good}} balance between giving the user freedom of expression, enforcing the fundamental semantic invariants of the modeling framework, and allowing <b>machine</b> <b>support</b> for the underlying semantic structures. MKM formats maintain strong invariants while trying to be foundationally unconstrained, which makes the induced design problem particularly challenging. In this situation, it is standard practice to define a minimal core language together with a scripting/macro facility for syntactic extensions that map into the core language. In practice, such extension facilities are either fully unconstrained (making invariants and <b>machine</b> <b>support</b> difficult) or limited to the object level (keeping the statement and theory levels fixed). In this paper we develop a general methodology for extending MKM representation formats at the statement level. We show the utility (and indeed necessity) of statement-level extension by redesigning the OMDoc format into a minimal, regular core language (strict OMDoc) and an extension (pragmatic OMDoc) that maps into strict OMDoc. ...|$|E
40|$|Modern agile {{software}} engineering practices encourage programmers to refactor their code frequently. Consequently, modern integrated development environments incorporate <b>machine</b> <b>support</b> for refactoring; such <b>machine</b> <b>support</b> {{takes the form}} of automatic program transformations that atomically preserve program behaviour. This approach to refactoring is useful, but limits the approach in two ways: first, existing refactoring tools enforce that each individual step preserves behaviour – which can be too restrictive. Secondly, such tools cannot permit behaviour-enhancing changes, even though such changes are both desirable and automable. We present an extension to refactoring that addresses both of the above limitations, by (1) relaxing behaviour-preservation checks to occur only after sequences of transformations rather than before each individual transformation, and by (2) permitting users to accept rather than to correct some of the behavioural changes that accumulate during such transformation sequences. We evaluate our approach, which we call “program metamorphosis”, by applying it to the task of structural and nominal transformations of Standard ML programs. We find that our approach (1) can effectively assist programmers in the refactoring process whilst eliminating the aforementioned shortcomings of traditional refactoring systems, (2) can be implemented efficiently, and (3) fully subsumes traditional refactoring...|$|E
50|$|<b>Machines</b> <b>supporting</b> the {{architecture}} {{have been sold}} under the brand System/390 (S/390) {{from the beginning of}} the 1990s. The 9672 implementations of System/390 were the first high-end IBM mainframe architecture implemented first with CMOS CPU electronics rather than the traditional bipolar logic.|$|R
50|$|There {{are other}} sets of {{semantics}} available to represent state diagrams. For example, there are tools for modeling and designing logic for embedded controllers. These diagrams, like Harel's original state <b>machines,</b> <b>support</b> hierarchically nested states, orthogonal regions, state actions, and transition actions.|$|R
50|$|Since most newer <b>{{machines}}</b> <b>support</b> Advanced Configuration and Power Interface (ACPI) which subsumes the MPS functionality, MPS has for {{the most}} part been supplanted by ACPI. MPS can still be useful on machines or with operating systems that do not support ACPI.|$|R
