5|0|Public
5000|$|... 1931: The Tabulating Machine Company's first {{punched card}} machine that could multiply, the 600 <b>Multiplying</b> <b>Punch.</b> [...] Their first {{alphabetical}} accounting machine - {{although not a}} complete alphabet, the Alphabetic Tabulator Model B was quickly followed by the full alphabet ATC.|$|E
5000|$|... 1931: The first Hollerith {{punched card}} machine that could multiply, the first Hollerith {{alphabetical}} accounting machineThe Hollerith 600 <b>Multiplying</b> <b>Punch.</b> [...] The first Hollerith alphabetical accounting machine - {{although not a}} complete alphabet, the Alphabetic Tabulator Model B was quickly followed by the full alphabet ATC.|$|E
50|$|The IBM 601 <b>Multiplying</b> <b>Punch</b> was a {{unit record}} machine that could read two numbers from a punched card and punch their product in a blank {{field on the}} same card. The factors could be up to eight decimal digits long. The 601 was {{introduced}} in 1931 {{and was the first}} IBM machine that could do multiplication.|$|E
50|$|In 1931, IBM {{introduced}} the model 600 <b>multiplying</b> <b>punch.</b> The ability to divide became commercially available after World War II. The earliest of these calculating punches were electromechanical. Later models employed vacuum tube logic. Electronic modules developed for these units {{were used in}} early computers, such as the IBM 650. The Bull Gamma 3 calculator could be attached to tabulating machines, unlike the stand-alone IBM calculators.|$|E
5000|$|In 1931, IBM {{produces}} the IBM 601 Multiplying Punch; {{it is an}} electromechanical machine that could read two numbers, up to 8 digits long, from a card and punch their product onto the same card. In 1934, Wallace Eckert used a rigged IBM 601 <b>Multiplying</b> <b>Punch</b> to automate the integration of differential equations. In 1936, Alan Turing publishes [...] "On Computable Numbers, With an Application to the Entscheidungsproblem". John von Neumann, pioneer of the digital computer and of computer science, in 1945, writes the incomplete First Draft of a Report on the EDVAC. In 1962, Kenneth E. Iverson developed an integral part notation that became known as Iverson Notation for manipulating arrays that he taught to his students, and described in his book A Programming Language. In 1970, E.F. Codd proposed relational algebra as a relational model of data for database query languages. In 1971, Stephen Cook publishes [...] "The complexity of theorem proving procedures" [...] In the 1970s within computer architecture, Quote notation was developed for a representing number system of rational numbers. Also in this decade, the Z notation (just like the APL language, long before it) uses many non-ASCII symbols, the specification includes suggestions for rendering the Z notation symbols in ASCII and in LaTeX. There are presently various C mathematical functions (Math.h) and numerical libraries. They are libraries used in software development for performing numerical calculations. These calculations can be handled by symbolic executions; analyzing a program to determine what inputs cause each part of a program to execute. Mathematica and SymPy are examples of computational software programs based on symbolic mathematics.|$|E

