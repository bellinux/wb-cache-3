1|8|Public
40|$|As we know, the {{datasets}} {{related to}} social networks are increasing. There are different procedures to analyze {{these types of}} datasets; one of these procedures is clustering which makes communities of social data. Random walk is a process which can find communities in a network, in other words when a random walk is used, it scans the nodes in some steps; it begins with an initial node and based on a random process progresses to neighboring nodes. In this paper an algorithm is proposed which aims to finding communities {{in a way that}} <b>modularity</b> <b>factor</b> increases, for this goal, random walks with random local search agent are combined. Experimental results show that the proposed method gives better modularity in comparison with other algorithms...|$|E
40|$|A {{letter report}} {{issued by the}} Government Accountability Office with an {{abstract}} that begins "In 2004, the Army began transforming its force into modular brigade-based units, thus expanding the number of units available for deployment and creating new command and support units. The Army is transforming while engaged in the Global War on Terrorism and developing other high-cost capabilities. This prompted congressional concern about the affordability of Army plans. Thus, under the Comptroller General's statutory authority, GAO examined the Army's restructuring. This report addresses (1) the extent of change in costs and areas of uncertainty that could affect those costs, (2) the Army's plan for funding <b>modularity</b> and <b>factors</b> that may affect affordability, and (3) whether the Army has an adequate approach to track modularity obligations. ...|$|R
40|$|Two {{important}} factors hinder {{our ability to}} address large pIanning problems. On one hand, our understanding of planning is not independent from specific planning frameworks. On the other hand, current planning fraxneworks lack <b>modularity,</b> a key <b>factor</b> for "divide and conquer" approaches to large problems. This paper addresses the formal definition of planning, points out some limit&tions of the current planning frameworks, and describes a new planning framework that overcomes these limitations...|$|R
40|$|Common {{features}} of transcriptional regulation in multicellular organisms are the modular and combinatorial structure of cis-acting DNA sequences and trans-acting proteins. Promoters represent the cis-acting regulatory elements and consist of proximal and basal elements positioned near the transcriptional initiation site and enhancers, {{which can be}} located far from the transcriptional initiation site. These elements, especially enhancers, are in turn each composed of multiple modules or transcription factor binding sites that are arranged in combinations that specify a given pattern of transcriptional regulation. Transcription factors are also modular, frequently consisting of transcriptional activation domains, which interact with other proteins in the transcriptional machinery, and DNA-binding domains, which tether the activation domain to the appropriate promoter. The <b>modularity</b> of transcription <b>factors</b> is flexible; activation and DNA-binding modules can be exchanged between transcription factors, thereby creating chimeric molecules with new regulatory properties (Brent and Ptashne 1985) ...|$|R
40|$|Having {{a network}} of fast {{charging}} stations seems {{necessary in order to}} make EVs more attractive and to achieve larger uptake of them. Currently, 50 kW quick chargers that can charge a typical EV in about an hour are commercially available. However, a 240 kW fast charging level which can charge a typical EV in 10 minutes has been introduced in standards. It is expected that this high power fast chargers will be available in near future. A charging station must supply charging power in multi-megawatt levels when multiple EVs are being fast charged simultaneously. Here, charging station topology plays a crucial role in enabling future growth and providing fast charging with best quality of service, lowest cost and minimum grid impact. This paper presents a topological survey of charging stations available in the literature. Various charging station topologies are presented, compared and evaluated based on grid support, power density, <b>modularity</b> and other <b>factors...</b>|$|R
40|$|The {{concept of}} {{modularity}} has gained recently a growing {{attention in the}} management literature {{as a key to}} explain the contemporary trends of industrial dynamics. A stronger exploitation of external «networkbased» economies with respect to internal «bureaucracy-based» economies {{is one of the major}} consequences of the diffusion of flexible production systems and of modular architectures for products. To explain this connection, in this paper a model is presented which tries to explain the co-evolution of technology and organization as the outcome of a complex evolutionary process. In particular, through a set of exploratory agent-based simulations we try to show the existence of qualitatively different dynamic processes in coincidence of different phases and specific conditions of product and technology development, as well as the existence of a relationship between this dynamics and other competitive factors, determining a wide set of structurally different dynamical patterns in coincidence of different combinations of <b>factors.</b> <b>modularity,</b> modular networks...|$|R
40|$|Abstract: 2 ̆ 2 Two {{important}} factors hinder {{our ability to}} address large planning problems. On one hand, our understanding of planning is not independent from specific planning frameworks. On the other hand, current planning frameworks lack <b>modularity,</b> a key <b>factor</b> for 2 ̆ 7 divide and conquer 2 ̆ 7 approaches to large problems. This paper addresses the formal definition of planning, points out some limitations of the current planning frameworks, and describes a new planning framework that overcomes these limitations. Our formal definition relies on {{the hypothesis that the}} problem solver 2 ̆ 7 s model world is a dynamical system. On this basis, we can clearly separate the knowledge about how the world works from the heuristic knowledge needed to solve problems quickly. Our definition is also independent from any particular planning representation framework. Our analysis of modularity indicates which features can support it in a planning framework. We describe how these features are implemented in the HSTS planning framework, a general purpose facility integrated in the HSTS scheduling architecture. Its effectiveness to address complex 2 ̆ 7 real world 2 ̆ 7 domains has been successfully demonstrated on the problem of building executable observation schedules for the Hubble Space Telescope. 2 ̆...|$|R
40|$|Innovation can be {{defines as}} the {{introduction}} of new things, ideas or ways of doing something that has been introduced or discovered. Innovation has recently been regarded as an important factor for firms to develop and maintain their competitive edge. It is important for firms to identify the key factors for promoting a firm’s product and process innovation. These factors include entrepreneurship paradigm, business strategy,organizational learning and knowledge management. Modularity come from the word of module. According to Baldwin et al., (2000), module can be define as the structural elements that match among themselves but do not suitable connected with the elements that outside from their units. From here, we can said that module is a self-contained subassembly and can connects to other modules which have same interfaces. Modular can contain a large range of valueadded and complexity ranging from simple which is disposable modules. The use of this modules can facilitate the design of production systems as well as customized configuration of finished product. competitive performance relates to the outcomes of cost, quality, flexibility, and cycle time. This study focuses on the effects of product modularity on various dimensions of competitive performance; which are cost, quality, flexibility, and cycle time. The objective {{of this study is to}} examine the relationship between competitive performance of product <b>modularity</b> and innovative <b>factor</b> influencing its adoption among manufacturing firms in Northern region of Malaysia. Thus, there are six research questions to be answered in this study, what are the role and the impact of modularization, what is the effect of product modularity on various dimensions of competitive performance which is cost, quality, flexibility and cycle tim...|$|R
40|$|XIV, 313 p.; 24 cmLibro ElectrónicoThinking Forth is a {{book about}} the {{philosophy}} of problem solving and programming style, applied to the unique programming language Forth. Published first in 1984, it could be among the timeless classics of computer books, such as Fred Brooks' The Mythical Man-Month and Donald Knuth's The Art of Computer Programming. Many software engineering principles discussed here have been rediscovered in eXtreme Programming, including (re) <b>factoring,</b> <b>modularity,</b> bottom-up and incremental design. Here you'll find all of those and more - such as the value of analysis and design - described in Leo Brodie's down-to-earth, humorous style, with illustrations, code examples, practical real life applications, illustrative cartoons, and interviews with Forth's inventor, Charles H. Moore as well as other Forth thinkers. If you program in Forth, this is a must-read book. If you don't, the fundamental concepts are universal: Thinking Forth is meant for anyone interested in writing software to solve problems. The concepts go beyond Forth, but the simple beauty of Forth throws those concepts into stark relief. So flip open the book, and read all about the philosophy of Forth, analysis, decomposition, problem solving, style and conventions, factoring, handling data, and minimizing control structures. But be prepared: {{you may not be able}} to put it down. This book has been scanned, OCR'd, typeset in LaTeX, and brought back to print (and your monitor) by a collaborative effort under a Creative Commons license. [URL] Philosophy of Forth An Armchair History of Software Elegance; The Superficiality of Structure; Looking Back, and Forth; Component Programming; Hide From Whom?; Hiding the Construction of Data Structures; But Is It a High-Level Language?; The Language of Design; The Language of Performance; Summary; References Analysis The Nine Phases of the Programming Cycle; The Iterative Approach; The Value of Planning; The Limitations of Planning; The Analysis Phase; Defining the Interfaces; Defining the Rules; Defining the Data Structures; Achieving Simplicity; Budgeting and Scheduling; Reviewing the Conceptual Model; References Preliminary Design/Decomposition Decomposition by Component; Example: A Tiny Editor; Maintaining a Component-based Application; Designing and Maintaining a Traditional Application; The Interface Component; Decomposition by Sequential Complexity; The Limits of Level Thinking; Summary; For Further Thinking; Detailed Design/Problem Solving Problem-Solving Techniques; Interview with a Software Inventor; Detailed Design; Forth Syntax; Algorithms and Data Structures; Calculations vs. Data Structures vs. Logic; Solving a Problem: Computing Roman Numerals; Summary; References; For Further Thinking Implementation: Elements of Forth Style Listing Organization; Screen Layout; Comment Conventions; Vertical Format vs. Horizontal Format; Choosing Names: The Art; Naming Standards: The Science; More Tips for Readability; Summary; References Factoring Factoring Techniques; Factoring Criteria; Compile-Time Factoring; The Iterative Approach in Implementation; References Handling Data: Stacks and States The Stylish Stack; The Stylish Return Stack; The Problem With Variables; Local and Global Variables/Initialization; Saving and Restoring a State; Application Stacks; Sharing Components; The State Table; Vectored Execution; Using DOER/MAKE; Summary; References Minimizing Control Structures What’s So Bad about Control Structures?; How to Eliminate Control Structures; A Note on Tricks; Summary; References; For Further Thinking Forth’s Effect on Thinking Appendix A Overview of Forth (For Newcomers); Appendix B Defining DOER/MAKE; Appendix C Other Utilities Described in This Book; Appendix D Answers to “Further Thinking” Problems; Appendix E Summary of Style Conventions; Inde...|$|R

