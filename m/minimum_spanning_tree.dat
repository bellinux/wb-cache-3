2309|6066|Public
5|$|If all edge weights of an {{undirected graph}} are positive, then the minimax {{distances}} between pairs of points (the maximum edge weights of minimax paths) form an ultrametric; conversely every finite ultrametric space comes from minimax distances in this way. A data structure constructed from the <b>minimum</b> <b>spanning</b> <b>tree</b> allows the minimax distance between any pair of vertices to be queried in constant time per query, using lowest common ancestor queries in a Cartesian tree. The {{root of the}} Cartesian tree represents the heaviest <b>minimum</b> <b>spanning</b> <b>tree</b> edge, {{and the children of}} the root are Cartesian trees recursively constructed from the subtrees of the <b>minimum</b> <b>spanning</b> <b>tree</b> formed by removing the heaviest edge. The leaves of the Cartesian tree represent the vertices of the input graph, and the minimax distance between two vertices equals the weight of the Cartesian tree node that is their lowest common ancestor. Once the <b>minimum</b> <b>spanning</b> <b>tree</b> edges have been sorted, this Cartesian tree can be constructed in linear time.|$|E
5|$|Due to the matroid {{structure}} of pseudoforests, minimum-weight maximal pseudoforests {{may be found}} by greedy algorithms similar to those for the <b>minimum</b> <b>spanning</b> <b>tree</b> problem. However, Gabow and Tarjan found a more efficient linear-time approach in this case.|$|E
5|$|In an undirected graph, a widest path may {{be found}} as the path between the two {{vertices}} in the maximum spanning tree of the graph, and a minimax path {{may be found}} as the path between the two vertices in the <b>minimum</b> <b>spanning</b> <b>tree.</b>|$|E
50|$|More generally, if {{the edge}} weights {{are not all}} {{distinct}} then only the (multi-)set of weights in <b>minimum</b> <b>spanning</b> <b>trees</b> is certain to be unique; {{it is the same}} for all <b>minimum</b> <b>spanning</b> <b>trees.</b>|$|R
40|$|Models of Computation 4 - 2 - 3 Merge Trees 4 - 2 - 4 Precedence Trees for Multiprocessor Scheduling 4 - 3 <b>Minimum</b> <b>Spanning</b> <b>Trees</b> 4 - 4 Geometric <b>Minimum</b> <b>Spanning</b> <b>Trees</b> 4 - 5 Acyclic Digraphs 4 - 5 - 1 Bill of Materials (Topological Sorting) 4 - 5 - 2 Deadlock Avoidance (Cycle Testing) 4 - 5 - 3 PERT (Longest Paths) 4 - 5 - 4 Optimal Register Allocation (Tree Labelling) 4 - 6 Fibonacci Heaps and <b>Minimum</b> <b>Spanning</b> <b>Trees</b> References and Further Reading Exercises 5 Depth First Search 5 -...|$|R
50|$|The above {{algorithm}} {{guarantees the}} existence of shortest-path <b>trees.</b> Like <b>minimum</b> <b>spanning</b> <b>trees,</b> shortest-path trees in general are not unique.|$|R
5|$|A matroid is a {{mathematical}} structure in which certain sets of elements are defined to be independent, {{in such a}} way that the independent sets satisfy properties modeled after the properties of linear independence in a vector space. One of the standard examples of a matroid is the graphic matroid in which the independent sets are the sets of edges in forests of a graph; the matroid structure of forests is important in algorithms for computing the <b>minimum</b> <b>spanning</b> <b>tree</b> of the graph. Analogously, we may define matroids from pseudoforests.|$|E
25|$|Optimal {{spanning}} tree problems {{have also been}} studied for finite sets of points in a geometric space such as the Euclidean plane. For such an input, a {{spanning tree}} is again a tree that has as its vertices the given points. The quality of the tree is measured {{in the same way}} as in a graph, using the Euclidean distance between pairs of points as the weight for each edge. Thus, for instance, a Euclidean <b>minimum</b> <b>spanning</b> <b>tree</b> is the same as a graph <b>minimum</b> <b>spanning</b> <b>tree</b> in a complete graph with Euclidean edge weights. However, it is not necessary to construct this graph in order to solve the optimization problem; the Euclidean <b>minimum</b> <b>spanning</b> <b>tree</b> problem, for instance, can be solved more efficiently in O(nlogn) time by constructing the Delaunay triangulation and then applying a linear time planar graph <b>minimum</b> <b>spanning</b> <b>tree</b> algorithm to the resulting triangulation.|$|E
25|$|An {{alternative}} {{model for}} generating spanning trees randomly but not uniformly is the random minimal spanning tree. In this model, {{the edges of}} the graph are assigned random weights and then the <b>minimum</b> <b>spanning</b> <b>tree</b> of the weighted graph is constructed.|$|E
5000|$|... The {{original}} {{reference for}} Jarnik's algorithm for <b>minimum</b> <b>spanning</b> <b>trees.</b>|$|R
50|$|The naive {{algorithm}} {{for single}} linkage clustering {{is essentially the}} same as Kruskal's algorithm for <b>minimum</b> <b>spanning</b> <b>trees.</b> However, in single linkage clustering, the order in which clusters are formed is important, while for <b>minimum</b> <b>spanning</b> <b>trees</b> what matters is the set of pairs of points that form distances chosen by the algorithm.|$|R
40|$|Abstract. In {{this paper}} we {{consider}} bi-criteria geometric optimization problems, in particular, the minimum diameter <b>minimum</b> cost <b>spanning</b> <b>tree</b> {{problem and the}} minimum radius <b>minimum</b> cost <b>spanning</b> <b>tree</b> prob-lem {{for a set of}} points in the plane. The former problem is to construct a <b>minimum</b> diameter <b>spanning</b> <b>tree</b> among all possible <b>minimum</b> cost <b>spanning</b> <b>trees,</b> while the latter is to construct a minimum radius span-ning tree among all possible <b>minimum</b> cost <b>spanning</b> <b>trees.</b> The graph-theoretic <b>minimum</b> diameter <b>minimum</b> cost <b>spanning</b> <b>tree</b> (MDMCST) problem and the minimum radius <b>minimum</b> cost <b>spanning</b> <b>tree</b> (MRM-CST) problem {{have been shown to be}} NP-hard. We will show that the geometric version of these two problems, GMDMCST problem and GMRMCST problem are also NP-hard. We also give two heuristic algo-rithms, one MCST-based and the other MDST-based for the GMDMCST problem and present some experimental results. ...|$|R
25|$|In the {{following}} decades, {{the problem was}} studied by many researchers from mathematics, computer science, chemistry, physics, and other sciences. In the 1960s however a new approach was created, that instead of seeking optimal solutions, one would produce a solution whose length is provably bounded by a multiple of the optimal length, {{and in doing so}} create lower bounds for the problem; these may then be used with branch and bound approaches. One method of doing this was to create a <b>minimum</b> <b>spanning</b> <b>tree</b> of the graph and then double all its edges, which produces the bound that the length of an optimal tour is at most twice the weight of a <b>minimum</b> <b>spanning</b> <b>tree.</b>|$|E
25|$|In {{order to}} {{minimize}} the cost of power networks, wiring connections, piping, automatic speech recognition, etc., people often use algorithms that gradually build a spanning tree (or many such trees) as intermediate steps {{in the process of}} finding the <b>minimum</b> <b>spanning</b> <b>tree.</b>|$|E
25|$|Like {{the general}} TSP, Euclidean TSP is NP-hard in either case. With {{rational}} coordinates and discretized metric (distances rounded {{up to an}} integer), the problem is NP-complete. With rational coordinates and the actual Euclidean metric, Euclidean TSP {{is known to be}} in the Counting Hierarchy, a subclass of PSPACE. With arbitrary real coordinates, Euclidean TSP cannot be in such classes, since there are uncountably many possible inputs. However, Euclidean TSP is probably the easiest version for approximation. For example, the <b>minimum</b> <b>spanning</b> <b>tree</b> of the graph associated with an instance of the Euclidean TSP is a Euclidean <b>minimum</b> <b>spanning</b> <b>tree,</b> and so can be computed in expected O (n log n) time for n points (considerably less than the number of edges). This enables the simple 2-approximation algorithm for TSP with triangle inequality above to operate more quickly.|$|E
40|$|While in {{the last}} years much {{theoretical}} work about external memory <b>minimum</b> <b>spanning</b> <b>trees</b> was done, the practical realization of the designed algorithms was neglected. It is the goal of my Bachelor thesis to fill this gap, i. e., we will show that the computation of <b>minimum</b> <b>spanning</b> <b>trees</b> of very large graphs i...|$|R
50|$|Andrew Yao {{used these}} graphs to {{construct}} high-dimensional Euclidean <b>minimum</b> <b>spanning</b> <b>trees.</b>|$|R
40|$|In {{this paper}} we present the Subtraction Algorithm that computes for every {{classical}} <b>minimum</b> cost <b>spanning</b> <b>tree</b> game a population monotonic allocation scheme. As {{a basis for}} this algorithm serves a decomposition theorem that shows that every <b>minimum</b> cost <b>spanning</b> <b>tree</b> game can be written as nonnegative combination of <b>minimum</b> cost <b>spanning</b> <b>tree</b> games corresponding to 0 - 1 cost functions. It {{turns out that the}} Subtraction Algorithm is closely related to the famous algorithm of Kruskal for the determination of <b>minimum</b> cost <b>spanning</b> <b>trees.</b> For variants of the classical <b>minimum</b> cost <b>spanning</b> <b>tree</b> games we show that population monotonic allocation schemes do not necessarily exist. ...|$|R
25|$|This {{function}} {{arises in}} more precise {{analyses of the}} algorithms mentioned above, and gives a more refined time bound. In the disjoint-set data structure, m represents the number of operations while n represents the number of elements; in the <b>minimum</b> <b>spanning</b> <b>tree</b> algorithm, m represents the number of edges while n represents the number of vertices.|$|E
25|$|In certain {{fields of}} graph theory {{it is often}} useful to find a <b>minimum</b> <b>spanning</b> <b>tree</b> of a {{weighted}} graph. Other optimization problems on spanning trees have also been studied, including the maximum spanning tree, the minimum tree that spans at least k vertices, the spanning tree with the fewest edges per vertex, the spanning tree with {{the largest number of}} leaves, the spanning tree with the fewest leaves (closely related to the Hamiltonian path problem), the minimum diameter spanning tree, and the minimum dilation spanning tree.|$|E
25|$|A {{minimum weight}} {{basis of a}} graphic matroid is a <b>minimum</b> <b>{{spanning}}</b> <b>tree</b> (or minimum spanning forest, if the underlying graph is disconnected). Algorithms for computing minimum spanning trees have been intensively studied; it is known how {{to solve the problem}} in linear randomized expected time in a comparison model of computation, or in linear time in a model of computation in which the edge weights are small integers and bitwise operations are allowed on their binary representations. The fastest known time bound that has been proven for a deterministic algorithm is slightly superlinear.|$|E
40|$|Abstract. We {{present a}} new {{approach}} for designing external graph algorithms {{and use it to}} design simple external algorithms for computing connected compo-nents, <b>minimum</b> <b>spanning</b> <b>trees,</b> bottleneck <b>minimum</b> <b>spanning</b> <b>trees,</b> and maxi-mal matchings in undirected graphs and multi-graphs. Our I/O bounds compete with those of previous approaches. Unlike previous approaches, ours is purely functional—without side effects—and is thus amenable to standard checkpoint-ing and programming language optimization techniques. This is an important practical consideration for applications that may take hours to run. ...|$|R
40|$|A <b>minimum</b> cost <b>spanning</b> <b>tree</b> game {{is called}} ultrametric if the cost {{function}} {{on the edges}} of the underlying network is ultrametric. We show that every ultrametric <b>minimum</b> cost <b>spanning</b> <b>tree</b> game is a cost allocation game on a rooted tree. It follows that there exist optimal algorithms for computing the Shapley value, the nucleolus and the egalitarian allocation of the ultrametric <b>minimum</b> cost <b>spanning</b> <b>tree</b> games...|$|R
50|$|Random <b>minimum</b> <b>spanning</b> <b>trees</b> of grid graphs may be {{used for}} {{invasion}} percolation models of liquid flow through a porous medium, and for maze generation.|$|R
500|$|However, the single-linkage {{clustering}} can {{be found}} more efficiently by an alternative algorithm that computes the <b>minimum</b> <b>spanning</b> <b>tree</b> of the input distances using Prim's algorithm, and then sorts the <b>minimum</b> <b>spanning</b> <b>tree</b> edges and uses this sorted list to guide the merger of pairs of clusters. Within Prim's algorithm, each successive <b>minimum</b> <b>spanning</b> <b>tree</b> edge {{can be found}} by a sequential search through an unsorted list of the smallest edges connecting the partially constructed tree to each additional vertex. This choice saves {{the time that the}} algorithm would otherwise spend adjusting the weights of vertices in its priority queue. Using Prim's algorithm in this way would take time [...] and space , matching the best bounds that could be achieved with the nearest-neighbor chain algorithm for distances with constant-time calculations.|$|E
500|$|A {{spanning}} tree {{may be defined}} as a set of edges that, together with all of the vertices of the graph, forms a connected and acyclic subgraph. But, by cut-cycle duality, if a set [...] of edges in a planar graph [...] is acyclic (has no cycles), then the set of edges dual to [...] has no cuts, from which it follows that the complementary set of dual edges (the duals of the edges that are not in [...] ) forms a connected subgraph. Symmetrically, if [...] is connected, then the edges dual to the complement of [...] form an acyclic subgraph. Therefore, when [...] has both properties – it is connected and acyclic – {{the same is true for}} the complementary set in the dual graph. That is, each {{spanning tree}} of [...] is complementary to a spanning tree of the dual graph, and vice versa. Thus, the edges of any planar graph and its dual can together be partitioned (in multiple different ways) into two spanning trees, one in the primal and one in the dual, that together extend to all the vertices and faces of the graph but never cross each other. [...] In particular, the <b>minimum</b> <b>spanning</b> <b>tree</b> of [...] is complementary to the maximum spanning tree of the dual graph. However, this does not work for shortest path trees, even approximately: there exist planar graphs such that, for every pair of a spanning tree in the graph and a complementary spanning tree in the dual graph, at least one of the two trees has distances that are significantly longer than the distances in its graph.|$|E
2500|$|However, {{the best}} known lower bound for the {{parametric}} <b>minimum</b> <b>spanning</b> <b>tree</b> problem is (n (k)), where [...] is the inverse Ackermann function, an even weaker bound than that for the k-set problem. For more general matroids, Dey's O(nk1/3) upper bound has a matching lower bound.|$|E
40|$|We study three {{representations}} of hierarchies of partitions: dendrograms (direct representations), saliency maps, and <b>minimum</b> <b>spanning</b> <b>trees.</b> We provide a new bijection between saliency maps and hierarchies based on quasi-flat zones {{as used in}} image processing and characterize saliency maps and <b>minimum</b> <b>spanning</b> <b>trees</b> as solutions to constrained minimization problems where the constraint is quasi-flat zones preservation. In practice, these results form a toolkit for new hierarchical methods where one can choose the most convenient representation. They also invite us to process non-image data with morphological hierarchies...|$|R
50|$|There may {{be several}} <b>minimum</b> <b>spanning</b> <b>trees</b> {{of the same}} weight; in particular, if all the edge weights of a given graph are the same, then every <b>spanning</b> <b>tree</b> of that graph is minimum.|$|R
40|$|AbstractIn this paper, {{we examine}} a bi-objective road and pipe network design for crude oil {{transport}} in the Sfax region in Tunisia. In particular, we {{search for the}} <b>minimum</b> <b>spanning</b> <b>trees</b> (MST) that connect the different oil fields with the port of La Skhirra. In {{the determination of the}} <b>minimum</b> <b>spanning</b> <b>trees,</b> two objectives are taken into account, i. e. accident risk and construction costs. By using an improved ɛ-constraint resolution technique, the Pareto optimal combinations of risk and cost are found. Results indicate that the network solutions by pipe outperform the solutions by road. When the <b>minimum</b> <b>spanning</b> <b>trees</b> for the two extremes on the Pareto curves, i. e. the cost minimum and risk minimum, are compared, one could note considerable differences in the links that form the MST. This implies that policy makers have an important role in deliberating between costs and risks...|$|R
2500|$|The {{number of}} scatter plots {{that need to}} be {{investigated}} increases with the square of the number of markers measured (or faster since some markers need to be investigated several times for each group of cells to resolve high-dimensional differences between cell types that appear to be similar in most markers). To address this issue, principal component analysis has been used to summarize the high-dimensional datasets using a combination of markers that maximizes the variance of all data points. However, PCA is a linear method and is not able to preserve complex and non-linear relationships. More recently, two dimensional <b>minimum</b> <b>spanning</b> <b>tree</b> layouts have been used to guide the manual gating process. [...] Density-based down-sampling and clustering was used to better represent rare populations and control the time and memory complexity of the <b>minimum</b> <b>spanning</b> <b>tree</b> construction process. More sophisticated dimension reduction algorithms are yet to be investigated.|$|E
2500|$|For instance, {{the same}} O(nk1/3) upper bound holds for {{counting}} {{the number of}} different minimum spanning trees formed in a graph with n edges and k vertices, when the edges have weights that vary linearly with a parameter [...] This parametric <b>minimum</b> <b>spanning</b> <b>tree</b> problem has been studied by various authors and can be used to solve other bicriterion spanning tree optimization problems.|$|E
2500|$|To make a graph into an Eulerian graph, one {{starts with}} the <b>minimum</b> <b>spanning</b> <b>tree.</b> Then all the {{vertices}} of odd order must be made even. So [...] a matching for the odd degree vertices must be added which increases the order of every odd degree vertex by one. This leaves us with a graph where every vertex is of even order which is thus Eulerian. Now we can adapt the above method to give Christofides' algorithm, ...|$|E
40|$|Mutual {{information}} <b>minimum</b> <b>spanning</b> <b>trees</b> {{are used}} to explore nonlinear dependencies on Brazilian equity network in the periods from June 2015 to January 2016 and from January 2016 to September 2016, corresponding to the government transition from President Dilma Rousseff to the current President Michel Temer, respectively. <b>Minimum</b> <b>spanning</b> <b>trees</b> from mutual information and linear correlation between stocks returns were obtained and compared. Mutual information <b>minimum</b> <b>spanning</b> <b>trees</b> present higher degree of robustness and evidence of power law tail in the weighted degree distribution, indicating more risk in terms of volatility transmission than it is expected by the analysis based on linear correlation. In particular, a remarkable increase of stock returns nonlinear dependencies indicates that Michel Temer's period is more risky in terms of volatility transmission network structure. Also, we found evidence of network structure and stock performance relationship. Comment: 21 pages, 5 figures, and 2 table...|$|R
40|$|International audienceWe study three {{representations}} of hierarchies of partitions: dendrograms (direct representations), saliency maps, and <b>minimum</b> <b>spanning</b> <b>trees.</b> We provide a new bijection between saliency maps and hierarchies based on quasi-flat zones {{as used in}} image processing and characterize saliency maps and <b>minimum</b> <b>spanning</b> <b>trees</b> as solutions to constrained minimization problems where the constraint is quasi-flat zones preservation. In practice, these results form a toolkit for new hierarchical methods where one can choose the most convenient representation. They also invite us to process non-image data with morphological hierarchies...|$|R
40|$|Based on {{the graphic}} theory and {{improved}} genetic algorithm,an improved genetic algorithm {{to search the}} <b>minimum</b> <b>spanning</b> <b>trees</b> is given. The algorithm uses binary code to represent the problem of <b>minimum</b> <b>spanning</b> <b>trees.</b> It designs the corresponding fitness function,operator and few controlling strategies to improve its speed and evolutionary efficiency. Only one solution can be gotten with running traditional al-gorithem atone time. The new algorithm can get a set of the solutions with higher probability in a shorter time. The experiment shows {{that it has a}} better performance than traditional methods...|$|R
