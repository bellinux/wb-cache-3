1|10000|Public
40|$|The article delineates {{the forms}} and {{mechanisms}} of accountability in Ghana’s District Assemblies (DAs) and probes their efficacy in the current decentralization policy. It provides empirical data on how accountability relationships have improved or not improved local democracy in Ghana. The DAs were created to be pillars of grassroots governance. The devolution of power to the DAs aimed at enhancing a system of local public <b>monitoring</b> <b>and</b> <b>checks</b> on their elected representatives. This was justified that local representatives would be more accessible to the local populace and could be held at close range for their policies and actions than distant national political leaders. The paper notes that the challenges of local accountability are many but they stem from the tendency {{of the central government}} to recentralize power by placing grassroots leaders under its influence. The practice of appointing the DCE and thirty percent members of the DAs, and the upward reporting mechanism reflect a growing culture of central controls in order to side step the autonomy of the DAs. The most apposite remedy for overcoming weak grassroots accountability lies in reform measures that allow the direct election of all officials of the DAs by the local populace...|$|E
40|$|Abstract. We {{consider}} <b>monitoring</b> <b>and</b> <b>checking</b> formally specified {{properties in}} a network. We are {{addressing the problem}} of deploying the checkers on different network nodes that provide correct <b>and</b> efficient <b>checking.</b> We present the DMaC system that builds upon two bodies of work: the <b>Monitoring</b> <b>and</b> <b>Checking</b> (MaC) framework, which provides means to <b>monitor</b> <b>and</b> <b>check</b> running systems against formally specified requirements, and declarative networking, a declarative domain-specific approach for specifying and implementing distributed network protocols. DMaC uses a declarative networking system for both specifying network protocols and performing checker execution. High-level properties are automatically translated from safety property specifications in the MaC framework into declarative networking queries and integrated {{into the rest of}} the network for monitoring the safety properties. We evaluate the flexibility and efficiency of DMaC using simple but realistic network protocols and their properties. ...|$|R
40|$|Abstract. We {{describe}} Java-MaC, {{a prototype}} {{implementation of the}} <b>Monitoring</b> <b>and</b> <b>Checking</b> (MaC) architecture for Java programs. The MaC architecture provides assurance that the target program is running correctly {{with respect to a}} formal requirements specification by <b>monitoring</b> <b>and</b> <b>checking</b> the execution of the target program at run-time. MaC bridges the gap between formal verification, which ensures the correctness of a design rather than an implementation, and testing, which does not provide formal guarantees about the correctness of the system. Use of formal requirement specifications in run-time <b>monitoring</b> <b>and</b> <b>checking</b> is the salient aspect of the MaC architecture. MaC is a lightweight formal method solution which works as a viable complement to the current heavyweight formal methods. In addition, analysis processes of the architecture including instrumentation of the target program, <b>monitoring,</b> <b>and</b> <b>checking</b> are performed fully automatically without human direction, which increases the accuracy of the analysis. Another important feature of the architecture is the clear separation between monitoring implementation-dependent low-level behaviors <b>and</b> <b>checking</b> high-level behaviors, which allows the reuse of a high-level requirement specification even when the target program implementation changes. Furthermore, this separation makes the architecture modular and allows the flexibility of incorporating third party tools into the architecture. The paper presents an overview of the MaC architecture and a prototype implementation Java-MaC...|$|R
5000|$|The NFR Engine {{when working}} in either [...] eDirectory or Active Directory {{connects to the}} {{directory}} via a Directory Services Interface (DSI) <b>and</b> thus can <b>monitor</b> <b>and</b> <b>check</b> file permissions.|$|R
50|$|Separation {{of powers}} — a presidential system {{establishes}} {{the presidency and}} the legislature as two parallel structures. This allows each structure to <b>monitor</b> <b>and</b> <b>check</b> the other, preventing abuses of power.|$|R
40|$|AbstractThe MaC {{system has}} been {{developed}} to provide assurance that a target program is running correctly with respect to formal requirements specification. This is achieved by <b>monitoring</b> <b>and</b> <b>checking</b> {{the execution of the}} target program at run-time. MaC bridges the gap between formal verification, which ensures the correctness of a design rather than an implementation, and testing, which only partially validates an implementation. One weakness of the MaC system is that it can detect property violations but cannot provide any feedback to the running system. To remedy this weakness, the MaC {{system has been}} extended with a feedback capability. The resulting system is called MaCS (<b>Monitoring</b> <b>and</b> <b>Checking</b> with Steering). The feedback component uses the information collected during <b>monitoring</b> <b>and</b> <b>checking</b> to steer the application back to a safe state after an error occurs. We present a case study where MaCS is used in a control system that keeps an inverted pendulum upright. MaCS detects faults in controllers and performs dynamic reconfiguration of the control system using steering...|$|R
40|$|AbstractWe {{describe}} Java-MaC, {{a prototype}} {{implementation of the}} <b>Monitoring</b> <b>and</b> <b>Checking</b> (MaC) architecture for Java programs. The MaC architecture provides assurance about the correct execution of target programs at run-time. <b>Monitoring</b> <b>and</b> <b>checking</b> is performed based on a formal specification of system requirements. MaC bridges the gap between formal verification, which ensures the correctness of a design rather than an implementation, and testing, which only partially validates an implementation. Java-MaC provides a lightweight formal method solution as a viable complement to the current heavyweight formal methods. An {{important aspect of the}} architecture is the clear separation between monitoring implementation-dependent low-level behaviors <b>and</b> <b>checking</b> high-level behaviors against a formal requirements specification. Another salient feature is automatic instrumentation of executable codes. The paper presents an overview of the MaC architecture and a prototype implementation Java-MaC...|$|R
2500|$|The {{concepts}} {{of government and}} country are confused and exchangeable in the proposed document. In a democratic country, citizens are empowered {{with the right to}} <b>monitor</b> <b>and</b> <b>check</b> the government. [...] The proposed enactment of Article 23 makes opposing the government the same as opposing the country.|$|R
5000|$|Monitoring/enforcement — {{including}} fishing call-in/call-out {{to federal}} authorities, 24/7 vessel <b>monitoring</b> <b>and</b> random <b>checks</b> by enforcement officers.|$|R
50|$|Additional {{data were}} {{collected}} with technological improvements including remote video monitoring of Dubai beaches, sediment sampling and analysis, near shore directional wave and current recordings and intensive measurement exercises at selected locations using Acoustic Doppler Current Profiler (ADCP) equipment. This way {{they were able to}} do a constant <b>monitor</b> <b>and</b> <b>check</b> on the continuously changing environmental conditions along the coast of Dubai.|$|R
50|$|In {{addition}} to the prime payload, Wilcutt also activated the Commercial Protein Crystal Growth Experiment, the Cosmic Radiation Effects <b>and</b> Activation <b>Monitor,</b> <b>and</b> <b>checked</b> on the mouse-ear cress seedlings growing in the CHROMEX-05 experiment. The crew successfully engineered an in-flight maintenance procedure to get additional cooling air to the CPCG apparatus after higher than desired temperatures were noted by crystal growth sensors.|$|R
40|$|International audienceAbstract {{constraint}} specifications - such as interoperability contracts - of {{the behavior}} of a system are frequently stated as requirements during early design phases. During the development process, these abstract specifications get refined until one reaches a deployable implementation. Especially in systems with components being dynamically added or replaced, it is critical that the constraints stated are met by the running system. The size of abstract constraint specifications is typically very small compared to the final implementation. In this paper, we sketch a process, where abstract constraint specifications are used as a basis for runtime <b>monitors</b> <b>and</b> <b>checks.</b> These <b>monitors</b> <b>and</b> <b>checks</b> ensure that in cases of deviations from the original specification, the system takes compensating actions such as turning the system into a safe state. We particularly focus on systems where components can be exchanged, added or removed during runtime. We discuss a concrete application scenario: The usage of specification-based monitors for OSGi-based services in the domain of home automation...|$|R
40|$|Ratification imposes {{specific}} obligations {{on a state}} to incorporate human rights into national laws, to amend legislation, to promote, protect and fulfill human rights and prevent {{violations of human rights}} through its policies and practices. It also agreed to submit periodical reports on measures taken in fulfillment of its commitments, and to set up machineries to <b>monitor</b> <b>and</b> <b>check</b> violations. Human rights, Bangladesh, laws, violations, government, state...|$|R
40|$|This paper {{describes}} {{the development of}} a <b>monitoring</b> <b>and</b> assertion <b>checking</b> tool, MAC, which supports monitoring of symbolic execution traces generated by the Modechart Toolset, permitting testing of specifications early in the design phase and providing a mechanism for evaluating properties of the system on a particular execution trace. This approach avoids the many of the difficulties of run-time <b>monitoring</b> <b>and</b> testing such as interference and the probe affect. <b>Monitoring</b> <b>and</b> assertion <b>checking</b> capabilities are provided by the automatic translation of assertions in a declarative language (such as Real Time Logic) into monitoring fragments, written in Modechart, which augment the original specification to perform <b>monitoring</b> <b>and</b> assertion <b>checking</b> during simulation. 1 Introduction Ensuring that embedded real-time systems meet their prescribed specifications is a growing challenge that faces the industry in the coming decade. The distributed nature of these systems introduces additiona [...] ...|$|R
40|$|We {{propose a}} {{run-time}} <b>monitoring</b> <b>and</b> <b>checking</b> architecture for network protocols called Network Event Recognition (NER). Our architecture {{is based on}} passively monitoring the packet trace produced by a protocol implementation <b>and</b> <b>checking</b> it for properties written in a formal specification language, NERL. We describe the requirements for NERL and how these impact design and implementation options. Finally we outline our prototype implementation of NERL and discuss three case studies that illustrate the requirements {{and the use of}} NERL at di#erent protocol layers...|$|R
40|$|The bachelor´s {{thesis is}} focused on {{specification}} of receivables management in a corporate enterprise. Based on results of analysis of receivables management system in the mentioned corporation, there are my own recommended actions for the corporation in the preventing, recording and debt recovery to reduce amount of latereceivables or unpaid receivables after due date and the thesis also suggests more effective way of <b>monitoring</b> <b>and</b> <b>checking</b> the receivables...|$|R
40|$|We {{propose a}} {{run-time}} <b>monitoring</b> <b>and</b> <b>checking</b> architecture for network protocols called Network Event Recognition. Our framework {{is based on}} passively monitoring the packet trace produced by a protocol implementation <b>and</b> <b>checking</b> it for proper-ties written in a formal specication language, NERL. In this paper, we describe the design requirements for NERL. We show how the unique requirements of network protocol <b>monitoring</b> impact design <b>and</b> implementation options. Finally we out-line our prototype implementation of NERL and discuss two case studies: checking the correctness of network protocol simulations and privacy issues in packet-mode surveillance. ...|$|R
40|$|In the {{physical}} education, i. e. in the teaching, out-teaching and extra-scholar working process, {{apart from the}} <b>monitoring,</b> <b>checking</b> <b>and</b> estimation of the students’ health level, their mobility abilities, sport-technical knowledge and achievements, {{it is also important}} the <b>monitoring</b> <b>and</b> <b>checking</b> of the effects of that working process in respect of the erudition values of the students. The erudition-social characteristics of the students, noted by the teacher during the work in all of the organizational working forms of {{the physical}} education, coordinated with the others contents of estimation, will improve the estimation process. On the basis of those knowledge we suggest the estimation model of the erudition-social characteristics of the high school (gymnasium) students of the physical education...|$|R
25|$|As part of Operation Enduring Freedom, the Combined Joint Task Force - Horn of Africa was {{established}} in Djibouti. It serves to <b>monitor</b> <b>and</b> <b>check</b> the spread of terrorism, as well as deal with piracy. It has also undertaken humanitarian missions in the region, but it has no mandate towards the conflict in Somalia. The US denies any direct military operations in Somalia, or in neighboring Kenya, and stated {{that it has no}} intention of deploying troops to Somalia.|$|R
25|$|The LOE prescribes the {{formation}} of a mandatory IC to <b>monitor</b> <b>and</b> <b>check</b> the ownership <b>and</b> executive powers. Members of the IC must minimally possess professional qualifications or accounting/auditing work experience, and cannot be related to members of the ownership or executive bodies. This ensures impartiality and prevents conflict of interests. However, in SCs, while members of the IC cannot hold any managerial positions in the company, they are allowed to own company shares or be a general employee of the Company.|$|R
40|$|This paper {{deals with}} the {{application}} of a shadow method which enables the <b>monitoring</b> <b>and</b> <b>checking</b> of a state of surface geometry. The data obtained from the measurement of the surface topography are analysed and simultaneously interpreted with a view to increase quality. Analysis of data from the surface enables us to formulate our ideas about the mechanism of the surface establishment created by Abrasive Waterjet (AWJ) cutting. Further, the creation of a parameters database of surface geometry irregularities is emphasised...|$|R
50|$|The LOE prescribes the {{formation}} of a mandatory IC to <b>monitor</b> <b>and</b> <b>check</b> the ownership <b>and</b> executive powers. Members of the IC must minimally possess professional qualifications or accounting/auditing work experience, and cannot be related to members of the ownership or executive bodies. This ensures impartiality and prevents conflict of interests. However, in SCs, while members of the IC cannot hold any managerial positions in the company, they are allowed to own company shares or be a general employee of the Company.|$|R
40|$|Abstract: In {{this paper}} we {{describe}} a technique for <b>monitoring</b> <b>and</b> <b>checking</b> temporal logic assertions augmented with real-time and time-series constraints, or Metric Temporal Logic Series (MTLS). The method {{is based on}} Remote Execution <b>and</b> <b>Monitoring</b> (REM) of temporal logic assertions. We describe the syntax and semantics of MTLS <b>and</b> a <b>monitoring</b> technique based on alternating finite automata that is efficient for a large set of frequently used formulae and is also an on-line technique. We investigate the run-time data-structure size for several interesting assertions taken from the Kansas State specification patterns...|$|R
40|$|We {{present an}} {{approach}} to enhance fault-tolerance of real-time systems through steering. Steering means external alteration of the system's behavior {{in response to a}} deviation from requirements. The steering tech-nique is embedded into a framework of <b>monitoring</b> <b>and</b> <b>checking</b> (MaC). MaC allows the users to perform run-time analysis of the current execution of a system with respect to formally specied requirements. We describe our current and future work on steering, including the language to specify steering actions and system instru-mentation that enables steering. A prototype imple-mentation for <b>monitoring</b> <b>and</b> steering of Java pro-grams is also presented. ...|$|R
40|$|This paper {{deals with}} new {{procedures}} based on vibroacoustic techniques to diagnose power MV/LV transformers. The normally operating machines can be <b>monitored</b> <b>and</b> <b>checked</b> from a remote, dedicated diagnostic center where information is received {{directly from the}} field. The diagnostic method adepte and the experimental test results are reported. Tests have been performed either in the laboratory or directly in the field on transformers in normal operating conditions. The laboratory tests related the transformer vibrations to internal anomalies. The suggested <b>monitoring</b> <b>and</b> diagnostic system allows to usefully schedule preventative maintenance, reduce costs and {{improve the quality of}} power distribution...|$|R
40|$|Neglecting {{network port}} scans {{could result in}} {{unavoidable}} consequences. Network attackers continuously <b>monitor</b> <b>and</b> <b>check</b> communication ports looking for any open port. To protect computers and networks, computers need to be safeguarded against applications that aren't required by any function currently in use. To accomplish this, the available ports and the applications utilizing them should be determined. This paper attempts to evaluate eight port scanning tools based on fifteen criterions. The criteria were reached after fully testing each tool. The outcomes of the evaluation process are discussed...|$|R
40|$|The {{advances}} in technology have made academic cheating far too easy for learners. Furthermore, the World-Wide-Web has brought about a widespread culture of easy-access {{to all sorts of}} information, thus reducing the need for learners to perform diligent research or study. E-learning systems would then need to incorporate the <b>monitoring</b> <b>and</b> <b>checking</b> for student expressions of reading and writing, while guiding them towards learning the rightful skills. This paper describes the architecture and design of an integrated Copy-Paste system aimed at addressing these concerns...|$|R
30|$|Finally, regular {{follow-up}} of these injuries {{is important for}} <b>monitoring</b> of rehabilitation <b>and</b> <b>checking</b> for possible complications.|$|R
40|$|We {{describe}} the <b>Monitoring</b> <b>and</b> <b>Checking</b> (MaC) framework which assures the correctness {{of the current}} execution at run-time. Monitoring is performed based on a formal specication of system requirements. MaC bridges the gap between formal specication and verication, which ensures the correctness of a design rather than an implementation, and testing, which partially validates an implementation. An {{important aspect of the}} framework is a clear separation be-tween implementation-dependent description of <b>monitored</b> objects <b>and</b> high-level requirements speci cation. Another salient feature is automatic instrumentation of executable code. The paper presents an overview of the framework and two languages to specify <b>monitoring</b> scripts <b>and</b> requirements, and brie y explain our on-going prototype implementation. ...|$|R
40|$|We {{describe}} Java-MaC, {{a prototype}} {{implementation of the}} <b>Monitoring</b> <b>and</b> Check-ing (MaC) architecture for Java programs. The MaC architecture provides assur-ance about the correct execution of target programs at run-time. <b>Monitoring</b> <b>and</b> <b>checking</b> is performed based on a formal specication of system requirements. MaC bridges the gap between formal verication, which ensures the correctness of a design rather than an implementation, and testing, which only partially validates an im-plementation. Java-MaC provides a lightweight formal method solution as a viable complement to the current heavyweight formal methods. An {{important aspect of the}} architecture is the clear separation between monitoring implementation-dependent low-level behaviors <b>and</b> <b>checking</b> high-level behaviors against a formal requirements speci cation. Another salient feature is automatic instrumentation of executable codes. The paper presents an overview of the MaC architecture and a prototype implementation Java-MaC. ...|$|R
40|$|This paper {{describes}} {{the software and}} performances of the calorimetric trigger of the L 3 experiment at LEP. Many software programs are necessary to operate the trigger system. The most important are the pedestal program, the initialization program <b>and</b> the <b>monitor</b> <b>and</b> <b>check</b> programs. The trigger algorithms depend on parameters, like the energy thresholds, which are selected via software, according to physics requests or beam conditions. The figure of merit of the trigger is expressed by the rate of accepted events, which represents its rejection power, in comparison with its efficiency in accepting genuine e+e- interactions...|$|R
40|$|The {{purpose of}} the Dual Compile Strategy is to {{increase}} our trust in the Compute Engine during its execution of instructions. This is accomplished by introducing a heterogeneous Monitor Engine that checks {{the execution of the}} Compute Engine. This leads to the production of a second and custom set of instructions designed for monitoring the execution of the Compute Engine at runtime. This use of multiple engines differs from redundancy in that one engine is working on the application while the other engine is <b>monitoring</b> <b>and</b> <b>checking</b> in parallel instead of both applications (and engines) performing the same work at the same time...|$|R
40|$|Abstract—This paper {{deals with}} new {{procedures}} based on vibro-acoustic techniques to diagnose power medium-voltage/low-voltage (MV/LV) transformers. The normal operating machines can be <b>monitored</b> <b>and</b> <b>checked</b> from a remote, dedicated diagnostic center where information is received {{directly from the}} field. The diagnostic method adopted and the experimental test results are reported. Tests have been performed either in the laboratory or directly in the field on transformers in normal operating con-ditions. The laboratory tests related the transformer vibrations to internal anomalies. The suggested <b>monitoring</b> <b>and</b> diagnostic system allows one to usefully schedule preventative maintenance, reduce costs, and {{improve the quality of}} power distribution. Index Terms—Acoustic recognition techniques, power distribu-tion systems, power transformer diagnostic. I...|$|R
50|$|Patients should {{continue}} to have regular eye examinations so that physicians can <b>monitor</b> pressure levels <b>and</b> <b>check</b> whether medicines are working.|$|R
40|$|The {{article is}} the {{reflection}} of the practical experience. Some questions about the student training in the process of teaching English, the forms of control that are useful for teaching the linguistic subjects, didactic monitoring that is oriented to the process of studying languages are considered in the article. The main aim of the author is to create the model of didactic <b>monitoring</b> <b>and</b> <b>check</b> the efficiency of monitoring in the process of teaching and studying English. The author offers a model of didactic monitoring. In the frame of the model she carries out the complex methods of control of the all kinds of the students’ language activities, the author also offers a complex method of collection, analysis and processing information in the sphere of teaching English with the aim to correct the process of teaching. Purpose is to create the model of didactic <b>monitoring</b> <b>and</b> <b>check</b> the efficiency of monitoring in the process of teaching and studying English. Methodology: studying and analysis of the pedagogical, psychological, philosophical, methodical literature; analysis of the teaching programs and plans; pedagogical analysis of English tasks and tests; questioning of teachers and students; pilot control of the model of didactic monitoring. Results. The results of the work were used to develop a mechanism for introduction of didactic monitoring as a source of complex control in the process of teaching English. Practical implications are the process of teaching foreign languages at educational establishments of different kinds. DOI:  [URL] </p...|$|R
40|$|A {{run-time}} {{monitoring technique}} {{has become a}} promising methodology for higher system assurance by validating a current execution trace with regard to a given requirement specification. To formalize and understand the computational nature of run-time monitoring {{is a key to}} utilize this valuable technique. In this paper, we formalize the notion of run-time monitoring of reactive systems in terms of ω-languages. Then, we introduce our prototype for run-time analysis of reactive systems, called <b>Monitoring</b> <b>and</b> <b>Checking</b> (MaC) architecture. Finally, we show that the class of languages specified by MEDL, which is a requirement specification language of the MaC architecture, is exactly the class of monitorable languages...|$|R
