188|301|Public
25|$|Data paths are {{typically}} {{the areas of}} your design where <b>multiple</b> <b>bits</b> are processed in parallel with each bit being modified {{the same way with}} maybe some influence from adjacent bits. Example structures that make up data paths are Adders, Subtractors, Counters, Registers, and Muxes.|$|E
5000|$|Parallel ports send <b>multiple</b> <b>bits</b> at {{the same}} time over several sets of wires.|$|E
5000|$|The Word Context Test {{measures}} verbal modality, deductive reasoning, {{integration of}} <b>multiple</b> <b>bits</b> of information, hypothesis testing, and flexibility of thinking ...|$|E
50|$|It is {{important}} to check each memory location periodically, frequently enough, before <b>multiple</b> <b>bit</b> errors within the same word are too likely to occur, because the one bit errors can be corrected, but the <b>multiple</b> <b>bit</b> errors are not correctable, {{in the case of}} usual (as of 2008) ECC memory modules.|$|R
5000|$|The {{initial state}} {{of the system is}} [...] After {{applying}} <b>multiple</b> <b>bit</b> Hadamard gate operation on each of the registers separately, the {{state of the}} first register is ...|$|R
25|$|In {{addition}} to light, mentioned above, semiconductor diodes {{are sensitive to}} more energetic radiation. In electronics, cosmic rays and other sources of ionizing radiation cause noise pulses and single and <b>multiple</b> <b>bit</b> errors.|$|R
50|$|If <b>multiple</b> <b>bits</b> are set, {{then where}} there is a {{conflict}} CTIA/GTIA outputs a black pixel—Note that black means actual black, not simply the background color, COLBK.|$|E
50|$|Instead of FPGAs (field-programmable gate arrays) having {{single bit}} {{configurable}} logic blocks (CLBs), rDPAs have <b>multiple</b> <b>bits</b> wide (for instance, 32 bit path width) reconfigurable datapath units (rDPUs).|$|E
50|$|Using a mask, <b>multiple</b> <b>bits</b> in a Byte, nibble, word (etc.) {{can be set}} either on, off or {{inverted}} from on to off (or vice versa) in {{a single}} bitwise operation.|$|E
40|$|Abstract — This paper {{presents}} a design methodology for mul-tiple bit error detection and correction in Galois field arithmetic circuits {{such as the}} bit parallel polynomial basis (PB) multipliers over GF(2 m). These multipliers are crucial {{in most of the}} cryptographic hardware designs and hence it is essential to ensure that they are not vulnerable to security threats. Security threats arising from injected soft (transient) faults into a cryptographic circuit can expose the secret information, e. g. the secret key, to an attacker. To prevent such soft or transient fault related attacks, we consider fault tolerance as a method of mitigation. Most of the current fault tolerant schemes are only <b>multiple</b> <b>bit</b> error detectable but not <b>multiple</b> <b>bit</b> error correctable. Keeping this in view, we present a <b>multiple</b> <b>bit</b> error correction scheme based on the BCH codes, with an efficient bit-parallel Chien search module. This paper details the design procedure as well as the hardware implementation specs. Comparison with existing methods demonstrate improved area, and reduced delay performances. I...|$|R
40|$|This paper {{presents}} differential {{fault analysis}} of the MICKEY family of stream ciphers, one of the winners of eStream project. The current attacks are of the best performance among all the attacks against MICKEY ciphers reported till date. The number of faults required with respect to state size is about 1. 5 times the state size. We obtain linear equations to determine state bits. The fault model required is reasonable. The fault model is further relaxed without reproducing the faults and allowing <b>multiple</b> <b>bit</b> faults. In this scenario, more faults are required when reproduction is not allowed whereas, {{it has been shown}} that the number of faults remains same for <b>multiple</b> <b>bit</b> faults...|$|R
40|$|In this paper, we {{demonstrate}} {{the effects of}} mutual coupling on embedded radiation efficiency, correlation, diversity gain, and MIMO efficiency for single and <b>multiple</b> <b>bit</b> streams in rich isotropic multipath (RIMP) environment by using parallel dipoles and a compact wideband four-port antenna as examples...|$|R
50|$|Most {{computer}} languages {{support the}} setting {{and testing of}} single or <b>multiple</b> <b>bits</b> in combination for use as truth indicators and usually up to 256 different combinations of conditions can be tested for with just a single instruction on one byte.|$|E
50|$|Bit arrays can be {{used for}} the {{allocation}} of memory pages, inodes, disk sectors, etc. In such cases, the term bitmap may be used. However, this term is frequently used to refer to raster images, which may use <b>multiple</b> <b>bits</b> per pixel.|$|E
50|$|Data paths are {{typically}} {{the areas of}} your design where <b>multiple</b> <b>bits</b> are processed in parallel with each bit being modified {{the same way with}} maybe some influence from adjacent bits. Example structures that make up data paths are Adders, Subtractors, Counters, Registers, and Muxes.|$|E
40|$|We {{experimentally}} {{investigate and}} quantify performance improvement, accounting for <b>multiple</b> <b>bit</b> intervals' joint statistics in filtered equalized on-off keying OC- 192 fiber-optic links relying on Viterbi-algorithm-based sequence detection. We {{demonstrate that the}} penalty associated with narrow filtering can be alleviated {{for the most part}} with an appropriate detection approach...|$|R
40|$|Abstract: In {{this paper}} multirate DS/CDMA systems for {{multimedia}} applications are discussed. Several modulation schemes for handling <b>multiple</b> <b>bit</b> rates in DS/CDMA are described. An overview of multiuser detectors {{in general and}} successive interference cancellation (IC) schemes for multirate schemes in particular is given. Numerical bit error probability results are summarized for some examples...|$|R
30|$|In [81], a Wyner-Ziv coding {{technique}} is applied for <b>multiple</b> <b>bit</b> rate video streaming, {{which allows the}} server to dynamically change the transmitted stream according to available bandwidth. More specifically, in the proposed scheme, a switching stream is coded using Wyner-Ziv coding. At the decoder side, the switch-to frame is reconstructed by taking the switch-from frame as side information.|$|R
50|$|Attackers {{may make}} use of several methods to reduce the entropy present in a {{randomized}} address space, ranging from simple information leaks to attacking <b>multiple</b> <b>bits</b> of entropy per attack (such as by heap spraying). There is little {{that can be done}} about this.|$|E
50|$|A {{variable}} {{is a single}} piece of data. It may consist of one bit, <b>multiple</b> <b>bits</b> or words. A value may be assigned in the variable definition. Variables may hold a constant or changing value. Data types include integers, fix point, floating point, Hollerith character strings, status or Booleans.|$|E
5000|$|In {{computer}} science, a mask is {{data that}} is used for bitwise operations, particularly in a bit field. Using a mask, <b>multiple</b> <b>bits</b> in a byte, nibble, word etc [...]. can be set either on, off or inverted from on to off (or vice versa) in a single bitwise operation.|$|E
30|$|The low {{compression}} ratio for the intention cannot provide much space for data embedding so that many early schemes {{were based on}} lossless compression technique [31, 33]. We have proposed a new technique for reversible data hiding based on efficient compression algorithm, which is slightly better as compared to binary arithmetic coding method with <b>multiple</b> <b>bit</b> planes (CDMBP).|$|R
40|$|Analogous to {{multiple}} symbol differential detection of quadrature phase-shift-keying, a <b>multiple</b> <b>bit</b> differential detection scheme is described for offset QPSK that also exhibits continuous improvement {{in performance with}} increasing observation interval. Being derived from maximum-likelihood (ML) considerations, the proposed scheme is purported {{to be the most}} power efficient scheme for such a modulation and detection method...|$|R
40|$|<b>Multiple</b> <b>bit</b> upsets due to radiation-induced soft {{errors are}} a major concern in {{nanoscale}} technology nodes. Once such er-rors occur in the configuration frames of an FPGA device, they permanently affect the functionality of the mapped design. The combination of error correction schemes and configuration scrubbing is an efficient approach to avoid such permanent er-rors. Existing solutions exploit coding techniques with consid-erably high overhead to protect configuration frames against <b>multiple</b> <b>bit</b> upsets. In this paper, we propose a generic scrub-bing scheme which reconstructs the erroneous configuration frame based {{on the concept of}} erasure codes. Our proposed scheme does not require any changes to the FPGA architec-ture. Experimental results on a Xilinx Virtex- 6 FPGA device show that the proposed scheme achieves error recovery cov-erage of 99. 30 % with only 3 % resource occupation while the mean time to repair is comparable with previous schemes. 1...|$|R
50|$|The {{more general}} term pixmap {{refers to a}} map of pixels, where each one may store more than two colors, thus using more than one bit per pixel. Often bitmap is used for this as well. In some contexts, the term bitmap implies one bit per pixel, while pixmap is used for images with <b>multiple</b> <b>bits</b> per pixel.|$|E
5000|$|A [...] "parity track" [...] {{was present}} on the first {{magnetic}} tape data storage in 1951. Parity in this form, applied across multiple parallel signals, {{is known as a}} transverse redundancy check. This can be combined with parity computed over <b>multiple</b> <b>bits</b> sent on a single signal, a longitudinal redundancy check. In a parallel bus, there is one longitudinal redundancy check bit per parallel signal.|$|E
5000|$|Each rDPU can be {{configured}} {{to perform}} an individual function. These rDPUs and interconnects can be programmed after the manufacturing process by the customer/designer (hence the term [...] "reconfigurable") so that the rDPA can perform whatever complex computation is needed. Because rDPUs are <b>multiple</b> <b>bits</b> wide (for instance, 32 bits), we talk about coarse-grained reconfigurability - in contrast to FPGAs with single-bit wide configurable logic blocks, called fine-gained reconfigurable.|$|E
40|$|In a {{proposed}} coding-and-modulation scheme, a high-rate binary data stream would be processed as follows: 1. The input bit stream would be demultiplexed into <b>multiple</b> <b>bit</b> streams. 2. The <b>multiple</b> <b>bit</b> streams would be processed simultaneously into a high-rate outer Hamming code that would comprise multiple short constituent Hamming codes a distinct constituent Hamming code for each stream. 3. The streams would be interleaved. The interleaver {{would have a}} block structure that would facilitate parallelization for high-speed decoding. 4. The interleaved streams would be further processed simultaneously into an inner two-state, rate- 1 accumulator code that would comprise multiple constituent accumulator codes - a distinct accumulator code for each stream. 5. The resulting bit streams would be mapped into symbols to be transmitted by use of a higher-order modulation - for example, M-ary phase-shift keying (MPSK) or quadrature amplitude modulation (QAM). The novelty of the scheme lies in the concatenation of the multiple-constituent Hamming and accumulator codes and the corresponding parallel architectures of the encoder and decoder circuitry (see figure) needed to process the <b>multiple</b> <b>bit</b> streams simultaneously. As {{in the cases of}} other parallel-processing schemes, one advantage of this scheme is that the overall data rate could be much greater than the data rate of each encoder and decoder stream and, hence, the encoder and decoder could handle data at an overall rate beyond the capability of the individual encoder and decoder circuits...|$|R
50|$|CPU based {{solutions}} {{are known to}} be much more flexible, particularly when encoding must be done concurrently in <b>multiple</b> formats, <b>multiple</b> <b>bit</b> rates and resolutions (multi-screen video), and possibly with additional features on container format support, advanced integrated advertising features, etc. CPU based software solution generally makes it much easier to load balance multiple concurrent encoding sessions within the same CPU.|$|R
40|$|Conventional error {{correcting}} code (ECC) schemes used in {{memories and}} caches cannot correct double bit errors caused by a single event upset (SEU). As memory density increases, <b>multiple</b> <b>bit</b> upsets in nearby cells become more frequent. A methodology is proposed here for deriving an {{error correcting code}} through heuristic search that can detect and correct the most likely double bit errors in a memory while minimizing the miscorrection probability of the unlikely double bit errors. A key feature of the proposed ECC is that it uses {{the same number of}} check bits as the conventional single error correcting/double error detecting (SEC-DED) codes commonly used, and has nearly identical syndrome generator/encoder area and timing overhead. Hence, there is very little additional cost to using the proposed ECC. The proposed ECC can be used instead of or in addition to bit interleaving to provide greater flexibility for optimizing a memory layout and/or provide better protection from <b>multiple</b> <b>bit</b> upsets. It is also useful for small memories, e. g., content addressable memory or register files, where interleaving is not possible. 1...|$|R
50|$|A {{parallel}} port {{is a type}} of interface found on computers (personal and otherwise) for connecting peripherals. The name refers to the way the data is sent; {{parallel port}}s send <b>multiple</b> <b>bits</b> of data at once, in parallel communication, as opposed to serial interfaces that send bits one at a time. To do this, parallel ports require multiple data lines in their cables and port connectors, and tend to be larger than contemporary serial ports which only require one data line.|$|E
50|$|The Reed-Solomon code {{properties}} {{discussed above}} make them especially well-suited to applications where errors occur in bursts. This {{is because it}} does not matter to the code how many bits in a symbol are in error — if <b>multiple</b> <b>bits</b> in a symbol are corrupted it only counts as a single error. Conversely, if a data stream is not characterized by error bursts or drop-outs but by random single bit errors, a Reed-Solomon code is usually a poor choice compared to a binary code.|$|E
5000|$|For a Boolean function, the {{sensitivity}} of [...] at , denoted , {{is the number of}} single-bit changes in [...] that change the value of [...] The sensitivity is then defined to be the maximum value of {{the sensitivity}} at [...] across all values of [...] The block sensitivity, , is likewise defined by looking at flipping <b>multiple</b> <b>bits</b> simultaneously. Although most commonly examined boolean functions satisfy , the Sensitivity Conjecture that [...] has proven to be difficult to prove, causing mathematicians to consider the question of constructing examples of functions that exhibit large gaps between the two quantities.|$|E
25|$|Many SPI chips only support {{messages}} that are <b>multiples</b> of 8 <b>bits.</b> Such chips can not interoperate with the JTAG or SGPIO protocols, {{or any other}} protocol that requires {{messages that}} are not <b>multiples</b> of 8 <b>bits.</b>|$|R
40|$|International audienceThis paper {{presents}} tLIFTING, an open-source fault simulator able {{to perform}} both logic and fault simulations for stuck-at faults, Single/Multiple Event Transient (SET/MET), and Single Event Upset (SEU) and <b>Multiple</b> <b>Bit</b> Upset (MBU) on digital circuits described in Verilog. tLIFTING allows delay-annotated simulation and it can deals with Standard Delay Format (SDF) files. It provides several features for accurate selection of fault location, time and period, with extensive log results meaningful for research purposes...|$|R
5000|$|It {{works by}} {{detecting}} a user's bandwidth and CPU capacity {{in real time}} and adjusting {{the quality of a}} video stream accordingly. It requires the use of an encoder which can encode a single source video at <b>multiple</b> <b>bit</b> rates. The player client switches between streaming the different encodings depending on available resources. [...] "The result: very little buffering, fast start time and a good experience for both high-end and low-end connections." ...|$|R
