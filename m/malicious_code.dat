979|221|Public
5|$|The SecuROM {{software}} {{also caused}} some virus scanners and malware detector {{to believe the}} software was malicious. 2K Games assured players that the software installation process did not install any <b>malicious</b> <b>code</b> or rootkit However, players observed {{that some of the}} SecuROM software was not fully removed on uninstallation of the game.|$|E
25|$|Security Analysis of the Palm Operating System and its Weaknesses Against <b>Malicious</b> <b>Code</b> Threats, Joe Grand and Mudge, 10th Usenix Security Symposium, Washington, D.C., August 2001.|$|E
25|$|Another defense {{approach}} is to use automated tools that will remove XSS <b>malicious</b> <b>code</b> in web pages, these tools use static analysis and/or pattern matching methods to identify malicious codes potentially and secure them using methods like escaping.|$|E
40|$|<b>Malicious</b> <b>codes</b> {{are serious}} threat to our society. The {{presented}} work discusses various aspects of technological level, detection, mitigation, identification and Classification of <b>malicious</b> <b>codes.</b> Detection method depicts how various antivirus technologies get used to fight with complex encrypting, decrypting and nature changing virus activities. Antivirus approach consists of waiting {{for a number of}} computers to be infected, detecting the virus, designing a solution, delivering and deploying a solution...|$|R
40|$|Mathematical {{models have}} been {{utilized}} to help understand the epidemic spreading of <b>malicious</b> <b>codes</b> (e. g., computer virus and worms). However, existing such models are either adapted from the ones developed to capture the epidemic spreading of biologically infectious diseases in homogeneous systems, or suitable only for a very specific class of heterogeneous systems. In this paper we present an attempt at building an analytic model of epidemic spreading of <b>malicious</b> <b>codes</b> in arbitrary heterogeneous systems...|$|R
40|$|Abstract — Smartphone {{has formed}} a new market and {{introduced}} a new environment. They have an operating system like PCs, enabling free installation and removal of application programs. As the number of Smartphone users is increasing, more personal information is also exposed to <b>malicious</b> <b>codes.</b> There are problem of modification and deletion of files, battery consumption, and information leakage due to <b>malicious</b> <b>codes.</b> As the needs of Smartphone antivirus solutions are increasing, the antivirus solutions should be evaluated with quality characteristics. In this paper, we propose an effective evaluation method for functionality and performance of Smartphone antivirus solutions, and the best practices for evaluation...|$|R
25|$|Some browsers include partial {{protection}} against reflected XSS attacks, {{in which the}} attacker provides a URL including malicious script. However, even users of those browsers are vulnerable to other XSS attacks, such as those where the <b>malicious</b> <b>code</b> is stored in a database. Only correct design of Web applications on the server side can fully prevent XSS.|$|E
25|$|In May 2016, it was {{reported}} that dozens of Danish HTTPS-protected websites belonging to Visa Inc. were vulnerable to attacks allowing hackers to inject <b>malicious</b> <b>code</b> and forged content into the browsers of visitors. The attacks worked because the TLS implementation used on the affected servers incorrectly reused random numbers (nonces) that are intended be used only once, ensuring that each TLS handshake is unique.|$|E
25|$|The {{support staff}} and a {{developer}} (the main developers left Second Life development/were barred from further development) of the Emerald project left {{to work on}} a new viewer project, Phoenix (simply a rebranded Emerald), that did not contain any <b>malicious</b> <b>code.</b> The Phoenix team are now the developers behind Firestorm Viewer and work closely alongside Linden Lab, holding bi-weekly joint meetings with all third party viewers.|$|E
30|$|In this paper, we {{analyze the}} {{structure}} of the two representative Android-based code-hiding tools, Bangcle and DexProtector, and then introduce a method and procedure for extracting the hidden original code. We also present experimental results of applying these tools on sample <b>malicious</b> <b>codes.</b>|$|R
50|$|Level 1/4 {{describes}} {{a situation where}} there are no threats of <b>malicious</b> <b>coding</b> or exploits that can affect the global network. The only precautions needed are basic security systems that can detect and remove simple bugs that are of no serious threat.|$|R
40|$|This paper {{introduces}} differential susceptible e-epidemic model S_i IR (susceptible class- 1 for virus (S 1) - susceptible class- 2 for worms (S 2) -susceptible class- 3 for Trojan horse (S 3) – infectious (I) – recovered (R)) for {{the transmission}} of <b>malicious</b> <b>codes</b> in a computer network. We derive the formula for reproduction number (R 0) to study the spread of <b>malicious</b> <b>codes</b> in computer network. We show that the Infectious free equilibrium is globally asymptotically stable and endemic equilibrium is locally asymptotically sable when reproduction number is less than one. Also an analysis has been made {{on the effect of}} antivirus software in the infectious nodes. Numerical methods are employed to solve and simulate the system of equations developed...|$|R
25|$|Malware {{can also}} be problem for wikis, as users can add links to sites hosting <b>malicious</b> <b>code.</b> For example, a German Wikipedia article about the Blaster Worm was edited to include a {{hyperlink}} to a malicious website. Users of vulnerable Microsoft Windows systems who followed the link would be infected. A countermeasure {{is the use of}} software that prevents users from saving an edit that contains a link to a site listed on a blacklist of malware sites.|$|E
25|$|A new attack led {{to further}} reorganization. A <b>malicious</b> <b>code,</b> {{which would allow}} an adversary to {{download}} critical defense information, spread across the DoD's classified and unclassified networks in 2008. As JTF-GNO synchronized efforts to disinfect and protect over 2.5 million computers in 3,500 DoD organizations spanning 99 countries, Defense Secretary Robert Gates endorsed {{the idea of a}} new sub-unified command under USSTRATCOM that would recombine offensive and defensive computer network operations. Established 21 May 2010, U.S. Cyber Command was fully operational on Oct. 31, 2010. JTF-GNO and JFCC-NW were disestablished.|$|E
25|$|There is {{evidence}} that a smart TV is vulnerable to attacks. Some serious security bugs have been discovered, and some successful attempts to run <b>malicious</b> <b>code</b> to get unauthorized access were documented on video. There {{is evidence}} {{that it is possible}} to gain root access to the device, install malicious software, access and modify configuration information for a remote control, remotely access and modify files on TV and attached USB drives, access camera and microphone. There have also been concerns that hackers may be able to remotely turn on the microphone on a smart TV and be able to eavesdrop on private conversations.|$|E
50|$|Level 4/4 {{describes}} {{a situation where}} a known threat {{in the form of}} <b>malicious</b> <b>coding</b> or an exploit is currently underway and is heavily affecting the global network. Taking measures against a threat of this level will most likely affect and cause hardships for the global computing infrastructure.|$|R
40|$|Botnet is {{a network}} of {{machines}} infected by malware support the command and control structure that makes it different from other <b>malicious</b> <b>codes.</b> In this paper our motto is to study various issues related to evolution evol and detection of botnets {{as well as to}} study about botnet tracking tools. Keywords- Botnet, Command and Control...|$|R
30|$|Crowdroid [9] is a {{lightweight}} client application, which collects applications’ kernel system call sequences and uploads {{them to the}} server, wherein the frequency of system call {{is used as a}} feature and <b>malicious</b> <b>codes</b> are detected by k-nearest neighbors (KNN) algorithm. Crowdroid can detect malwares with identical names and version numbers, but with different malicious behaviors.|$|R
25|$|Exploiting the {{behavior}} of a buffer overflow is a well-known security exploit. On many systems, the memory layout of a program, or the system as a whole, is well defined. By sending in data designed to cause a buffer overflow, it is possible to write into areas known to hold executable code, and replace it with <b>malicious</b> <b>code.</b> Buffers are widespread in operating system (OS) code, so it is possible to make attacks that perform privilege escalation and gain unlimited access to the computer's resources. The famed Morris worm used this as one of its attack techniques.|$|E
25|$|However, {{the kind}} of {{heuristic}} used by early AV engines was totally different from those used today. The first product with a heuristic engine resembling modern ones was F-PROT in 1991. Early heuristic engines were based on dividing the binary in different sections: data section, code section (in a legitimate binary, it usually starts always from the same location). Indeed, the initial viruses re-organized {{the layout of the}} sections, or overrode the initial portion of section in order to jump to {{the very end of the}} file where <b>malicious</b> <b>code</b> was located—only going back to resume execution of the original code. This was a very specific pattern, not used at the time by any legitimate software, which represented an elegant heuristic to catch suspicious code. Other kinds of more advanced heuristics were later added, such as suspicious section names, incorrect header size, regular expressions, and partial pattern in-memory matching.|$|E
500|$|Graham Cluley, a {{technology}} consultant from Sophos, said, [...] "We {{have no way}} of knowing if it was written by the FBI, and even if we did, we wouldn’t know whether it was being used by the FBI or if it had been commandeered by a third party". Another reaction came from Marc Maiffret, chief technical officer and cofounder of eEye Digital Security, [...] "Our customers are paying us for a service, to protect them from all forms of <b>malicious</b> <b>code.</b> It is not up to us to do law enforcement's job for them so we do not, and will not, make any exceptions for law enforcement malware or other tools." ...|$|E
40|$|Abstract — In this paper, {{we propose}} an endpoint-based joint network-host anomaly {{detection}} technique to detect selfpropagating <b>malicious</b> <b>codes.</b> Our proposed technique {{is based on}} the observation that on any endpoint there exists very high correlation between benign network sessions and the keystrokes that trigger these sessions. Specifically, users generally use a few keystrokes to trigger most of the benign network sessions. On the other hand, malicious sessions originating from a compromised endpoint will not have the session-keystroke correlation. We leverage this observation in a novel information-theoretic framework that characterizes the session-keystroke correlation in terms of their mutual information. Changes in session-keystroke mutual information are used to detect <b>malicious</b> <b>codes</b> in an automated and real-time fashion. To evaluate the proposed anomaly detector, we use actual traffic and keystroke data collected on benign and infected endpoints. We show that the proposed anomaly detector provides almost 100 % detection with negligible false-alarm rates and significantly surpasses the accuracy of existing techniques. I...|$|R
40|$|The {{easy access}} and wide {{usage of the}} Internet make it more {{convenient}} for technical research and information exchange. However, <b>malicious</b> <b>codes,</b> such as Code Red, Nimda, SQL Slammer and W 32 /Blaster, also occur more frequently and severely than ever. These self-propagating <b>malicious</b> <b>codes</b> can invade network and paralyze normal network operation. These Internet worms could, {{in a very short}} time, cause great damage to network and information infrastructure. Therefore, Internet worms have become vital threats to network and security management. In this paper, we present a pro-active responding scheme to deal with Internet worms. Based on this scheme, we designed and implemented a pro-active defending system against Internet worms. This pro-active defending system will monitor network traffic, detect hosts with abnormal network behavior and isolate these hosts from the managed network. The results show that it can efficiently mitigate the impact caused by Internet worms and stop the widespreading of Internet worms. 1...|$|R
5000|$|<b>Malicious</b> Mobile <b>Code</b> Runtime Monitoring System and Methods filed February 11, 2015; issued June 25, 2015 ...|$|R
2500|$|Active {{anti-virus}} software {{can interfere with}} a firmware update process. [...] Any writeable firmware in the computer can be infected by <b>malicious</b> <b>code.</b> [...] This is a major concern, as an infected BIOS could require the actual BIOS chip to be replaced to ensure the <b>malicious</b> <b>code</b> is completely removed. [...] Anti-virus software is not effective at protecting firmware and the motherboard BIOS from infection. In 2014, security researchers discovered that USB devices contain writeable firmware which can be modified with <b>malicious</b> <b>code</b> (dubbed [...] "BadUSB"), which {{anti-virus software}} cannot detect or prevent. [...] The <b>malicious</b> <b>code</b> can run undetected on the computer and could even infect the operating system prior to it booting up.|$|E
2500|$|The {{number and}} sophistication of cyber attacks {{is on the}} rise. [...] The {{computers}} of South Korea's nuclear plant operator (KHNP) were hacked in December 2014. The cyber attacks involved thousands of phishing emails containing <b>malicious</b> <b>code,</b> and information was stolen.|$|E
2500|$|The {{number and}} sophistication of cyber attacks {{is on the}} rise. [...] Stuxnet is a {{computer}} worm discovered in June 2010 that {{is believed to have}} been created by the United States and Israel to attack Iran's nuclear facilities. [...] It switched off safety devices, causing centrifuges to spin out of control. The computers of South Korea's nuclear plant operator (KHNP) were hacked in December 2014. The cyber attacks involved thousands of phishing emails containing <b>malicious</b> <b>code,</b> and information was stolen.|$|E
40|$|This {{bachelor}} thesis {{deals with}} honeypot tools and adapting a Linux operating system into such tool. The thesis presents general categories of <b>malicious</b> <b>codes</b> and current trends in this area. The thesis also presents an existing honeypot tool Honeyd and its features. Next there are introduced tools and techniques to monitor a Linux system, compared the selected virtualization technology and explained {{the process of}} creating a virtual Linux honeypot...|$|R
50|$|The {{number and}} sophistication of cyber attacks {{is on the}} rise. Stuxnet is a {{computer}} worm discovered in June 2010 that {{is believed to have}} been created by the United States and Israel to attack Iran's nuclear facilities. It switched off safety devices, causing centrifuges to spin out of control. The computers of South Korea's nuclear plant operator (KHNP) were hacked in December 2014. The cyber attacks involved thousands of phishing emails containing <b>malicious</b> <b>codes,</b> and information was stolen.|$|R
40|$|A common {{view for}} the {{preferable}} positions of thwarting worm propagation {{is at the}} highly connected nodes. However, in certain conditions, such as when some popular users (highly connected nodes in the network) have more vigilance on the <b>malicious</b> <b>codes,</b> this {{may not always be}} the truth. In this letter, we propose a measure of betweenness and closeness to locate the most suitable positions for slowing down the worm propagation. This work provides practical values to the defense of topological worms. <br /...|$|R
2500|$|... /NOEXECUTE={OPTIN|OPTOUT|ALWAYSON|ALWAYSOFF} [...] This {{option is}} only {{available}} on 32-bit versions of Windows when running on processors supporting Data Execution Prevention (DEP). It enables DEP, {{which results in}} the memory manager marking pages containing data as no-execute so that they cannot be executed as code. This can be useful for preventing <b>malicious</b> <b>code</b> from exploiting buffer overflow bugs with unexpected program input in order to execute arbitrary code. No-execute protection is always enabled on 64-bit versions of Windows on processors that support no-execute protection. There are several options the user can specify with this switch: ...|$|E
2500|$|Work in 2008 has {{increased}} NMCI's {{ability to respond}} to security issues and the program was the first network to implement fully the Department of Defense information assurance standards in both classified and unclassified environments. Among the enhancements were the deployment of Websense content filtering, an information assurance tool designed to inspect and block inbound Web traffic containing <b>malicious</b> <b>code</b> with little impact to the user. According to NMCI public affairs, [...] "Websense allows the Network Operational Commands to set a tailored blocking policy by content such as gambling, hate speech or adult content, rather than blocking specific sites or URLs only. This allows the network operators to block sites much more efficiently and outsources the fight against the growing amount of inappropriate content." ...|$|E
2500|$|Three {{constraints}} on Einstein that the DHS {{is trying to}} address are {{the large number of}} access points to U.S. agencies, the low number of agencies participating, and the program's [...] "backward-looking architecture". An OMB [...] "Trusted Internet Connections" [...] initiative was expected to reduce the government's 4,300 access points to 50 or fewer by June 2008. After agencies reduced access points by over 60% and requested more than their target, OMB reset their goal to the latter part of 2009 with the number to be determined. A new version of Einstein was planned to [...] "collect network traffic flow data in real time and also analyze the content of some communications, looking for <b>malicious</b> <b>code,</b> for example in e-mail attachments." [...] The expansion is known to be one of at least nine measures to protect federal networks.|$|E
30|$|A misuse-based {{intrusion}} detection technique uses {{a database of}} known signatures and patterns of <b>malicious</b> <b>codes</b> and intrusions to detect well-known attacks [59]. Network packet overload, {{the high cost of}} signature matching, and the large number of false alarms are three disadvantages of misuse-based IDSs [60]. In addition, the severe memory constraints in some types of networks, such as WSNs, result in low performance of misuse-based IDSs because of their need to store a large database of attack signatures [61].|$|R
30|$|Officially in Venezuela {{there are}} no reports of {{economic}} losses caused for cybercrime. It is taboo; no bank or company wants its customers to learn about their vulnerabilities. Either way, Venezuela {{is no stranger to}} cybernetic crime around the world. All companies in the country have been victims of some kind of cyber crime. Cyber <b>malicious</b> <b>codes</b> could affect critical infrastructure facilities in the country: electrical, communications, financial, defense, among others. Therefore Venezuela requires urgent measures to introduce an interdisciplinary framework for addressing this emerging reality, as are other countries doing so.|$|R
30|$|Researchers {{have already}} {{confirmed}} the great characteristics of virtualization technologies from the security perspective. The most notable characteristic is {{a feature that}} ensures isolation between virtual machines that are run concurrently on the same physical system [4], and {{the isolation of the}} hypervisor responsible for managing the virtual machines from the virtualized operating systems. The perfect isolation of the virtual machines and the hypervisor managing them provides a secure framework in which the security system continues to run correctly even when numerous <b>malicious</b> <b>codes</b> exist in the virtual machines.|$|R
