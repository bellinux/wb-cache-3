3|10|Public
50|$|The {{format of}} a <b>macro</b> (<b>subroutine)</b> call may be {{illustrated}} by the following example. Macro A in this example adds the two parameters passed to it from the main program, and returns the sum {{on the top of}} the stack.|$|E
40|$|During {{the past}} years, the {{distributed}} computing approach {{has become very}} popular due to various advantages over centralized approach. In the distributed approach, the execution of a process has reduced and also it requires low cost for installation. Many of the researchers are using the modeling approach for solution of the software and hardware architecture research problems. The most popular approach of modeling is known as Unified Modeling Language based on the object-oriented technology. In the present work, a method of deadlock detection is explained for the newly proposed static step topology for the distributed network. In the step topology, the processes are taken as a task, sub task, <b>macro,</b> <b>subroutine,</b> etc which are executed in reflexive and symmetric manners when the systems are interconnected to each other under distributed environment and avoidance technique is also presented for the same. The deadlock detection technique is presented through a UML class model. </p...|$|E
40|$|We {{conducted}} {{a comparison of}} three DPOAE protocols, testing cubic 2 F 1 - F 2 distortion products, in order to define the most feasible protocol for a universal hearing screening programme. The protocols used asymmetrical stimulus intensities (L 1 > L 2) with a frequency ratio of 1. 22, in the following format: (P 1), L 1 = 60, L 2 = 50 dB SPL; (P 2), L 1 = 65, L 2 = 55 dB SPL; and (P 3), L 1 = 75, L 2 = 65 dB SPL. Linear TEOAE responses evoked by click stimuli of 75 dB p. e. SPL were used as controls of the normal cochlear function. Five 2 F 1 - F 2 frequencies, 1. 5, 2. 0, 3. 0, 4. 0, 5. 0 kHz, were tested with a ILO- 92 <b>macro</b> <b>subroutine.</b> The project included randomly selected recordings from 1, 200 well-baby nursery (WBN) infants (age 48 hours) and 50 very low birth weight NICU infants. Statistical analyses comparing the signal-to-noise ratios (S/N), at the predefined F 2 frequencies, indicated that the P 1 and P 2 DPOAE protocols perform similarly. Significant S/N differences were observed in the P 3 to P 2 and P 3 to P 1 data-set comparisons. DPOAE scoring criteria were estimated from the P 3 data set, using one-sided distribution-free tolerance boundaries. The scoring criteria for a 'pass' were estimated as a minimum S/N of 6. 0, 7. 0 and 6. 0 dB at 2. 0, 3. 0 and 4. 0 kHz respectively. In terms of feasibility, the P 3 protocol generated responses in 98 % of the WBN and 76 % of the NICU infants. All three DPOAE protocols demonstrated smaller time-recording requirements than the TEOAE standard. The false-positive ratio for the NICU infants was estimated as 8 %...|$|E
40|$|Development and {{evolution}} of Microsoft Office and Microsoft Windows shells is based in general on the special methodology of Software creation and implementation such as <b>macros,</b> <b>subroutine,</b> custom commands and specialized features; this methodology of Microsoft Software shells is analyzed. The universal methodology of Adaptable Software creation is proposed. Present result evaluates from [Tod- 08. 1] which is a evolution of the Fulbright research project no. 22131 “Societal Information Systems’ Adaptable Tools“ performed in the University of Omaha at Nebraska, USA in the 1997 / 1998 academic year [Tod- 98]...|$|R
40|$|This paper {{describes}} the dotplot data visualization technique {{and its potential}} for contributingto the identification of design patterns. Pattern languages {{have been used in}} architectural design and urban planning to codify related rules-of-thumb for constructing vernacular buildings and towns. When applied to software design, pattern languages promote reuse while allowing novice designers to learn from the insights of experts. Dotplots have been used in biology to study similarity in genetic sequences. When applied to software, dotplots identify patterns that range in abstraction from the syntax of programming languages to the organizational uniformity of large, multi-component systems. Dotplots are useful for design by successive abstraction [...] -replacing duplicated code with <b>macros,</b> <b>subroutines,</b> or classes. Dotplots reveal a pervasive design pattern for simplifying algorithms by increasing the complexity of initializations. Dotplots also reveal patterns of wordiness in languages [...] -one [...] ...|$|R
50|$|Wilkes is also {{credited}} {{with the idea of}} symbolic labels, <b>macros</b> and <b>subroutine</b> libraries. These are fundamental developments that made programming much easier and paved the way for high-level programming languages. Later, Wilkes worked on an early timesharing systems (now termed a multi-user operating system) and distributed computing. Toward the end of the 1960s, Wilkes also became interested in capability-based computing, and the laboratory assembled a unique computer, the Cambridge CAP.|$|R
25|$|Markup is {{embedded}} in text and provides instructions for programs that are to process the text. Well-known examples include troff, TeX, and PostScript. It is expected that the processor will run through the text from beginning to end, following the instructions as encountered. Text with such markup is often edited with the markup visible and directly manipulated by the author. Popular procedural-markup systems usually include programming constructs, so <b>macros</b> or <b>subroutines</b> can be defined and invoked by name.|$|R
40|$|SIMUL_R is a {{compiler}} directed simulation {{language for}} continous systems. It provides special features {{for the use}} of different models for the same system in one program, discrete-events, table-functions, automatic solution of systems with algebraic loops. The runtime-interpreter of SIMUL_R offers several meta-commands, as 'while', 'until', 'for', 'if', <b>macros</b> and <b>subroutines</b> (also recursive). SIMUL_R includes a huge grafic-library (e. g. 3 D- and moving graphics). BAPS is a preprocessor for SIMUL_R, which offers the possibility of using bondgraph-models; CAPS provides compartment-models. GOMA is an optimization-preprocessor for ACSL...|$|R
50|$|Frame technology's frame macros {{have their}} own command syntax but can also contain text in any language. Each frame is both a generic {{component}} in a hierarchy of nested subassemblies, and a procedure for integrating itself with its subassembly frames (a recursive process that resolves integration conflicts in favor of higher level subassemblies). The outputs are custom documents, typically compilable source modules. Frame technology can avoid the proliferation of similar but subtly different components, {{an issue that has}} plagued software development since the invention of <b>macros</b> and <b>subroutines.</b>|$|R
40|$|During {{the past}} years, {{distributed}} computing approach is most popular approach {{among the other}} computing approaches. In this approach, the execution time of the processes has been reduced and the setup cost of distributed systems is very low. The process is defined as subtasks, <b>subroutines,</b> <b>macro’s</b> etc. In the present work, a static interconnection of the computer systems is defined and called as the static step topology. By {{the use of this}} topology, N numbers of hand-held devices and other computer systems may be attached. As the size of network increases, the space complexities are computer by varying the length of the cable segments. Node failures are also computed in the static step topology. A Unified Modeling Language (UML) is used to demonstrate the dynamic execution of process in step topology and represented through sequence diagram...|$|R
40|$|In {{the current}} scenario, {{distributed}} computing approach is most popular approach for computing the processes known as subtasks, <b>subroutines,</b> <b>macro’s</b> etc due to low cost involvement and minimum execution time. In the present work, the computer systems are attached {{with the help}} of static interconnection through step topology in which one machine is working as server and Endian operating system is loaded on the server. A Unified Modeling Language (UML) is used to demonstrate the model of working of Endian operating system. The performance of Endian operating system in terms of firewall execution is monitored for the various user identification controlled connected by Internet Protocol (IP Version 4) where the users are connected through static topology. The loading and balancing are also performed by Endian operating system for transferring of data from one machine to another machine and results are depicted in terms of tables and graphs...|$|R
40|$|Several {{techniques}} {{have been developed}} for allowing genetic programming systems to produce programs that make use of <b>subroutines,</b> <b>macros,</b> and other modular program struc-tures. A recently proposed technique, based on the“tagging” and tag-based retrieval of blocks of code, has been shown to have novel and desirable features, but this was demonstrated only {{within the context of the}} PushGP genetic programming system. Following a suggestion in the GECCO- 2011 publi-cation on this technique we show here how tag-based mod-ules can be incorporated into a more standard tree-based ge-netic programming system. We describe the technique in de-tail along with some possible extensions, outline arguments for its simplicity and potential power, and present results obtained using the technique on problems for which other modularization {{techniques have}} been shown to be useful. The results are mixed; substantial benefits are seen on the lawnmower problem but not on the Boolean even- 4 -parity problem. We discuss the observed results and directions for future research...|$|R

