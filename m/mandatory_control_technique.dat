0|10000|Public
40|$|LOMAC is a {{security}} enhancement for Linux kernels. LOMAC demonstrates {{that it is}} possible to apply <b>Mandatory</b> Access <b>Control</b> <b>techniques</b> to standard Linux kernels already deployed in the field, and to do so in a manner that is simple, compatible, and largely invisible to the traditional Linux user. The LOMAC Loadable Kernel Module protects the integrity of critical system processes and files from viruses, worms, Trojan horses, and malicious remote users. It is compatible with standard Linux 2. 2 kernels and applications, and seeks to provide useful protection without site-specific configuration. LOMAC is designed to be a form of MAC that typical users can live with...|$|R
40|$|Abstract. For decades, secure {{operating}} systems have incorporated <b>mandatory</b> access <b>control</b> (MAC) <b>techniques.</b> Surprisingly, mobile-code platforms {{such as the}} Java Virtual Machine (JVM) and the. NET Common Language Runtime (CLR) have largely ignored these advances and have implemented a far weaker security that does not reliably track ownership and access permissions for individual data items. We have implemented a system that adds MAC to an existing JVM at the granularity of objects. Our system maintains a strict separation between mechanism and policy, thereby allowing {{a wide range of}} policies to be enforced. Moreover, our implementation is independent of any specific JVM, and will work with any JVM that supports the JVM Tools Interface. ...|$|R
40|$|For decades, secure {{operating}} systems have incorporated <b>mandatory</b> access <b>control</b> (MAC) <b>techniques.</b> Surprisingly, mobile-code platforms {{such as the}} Java Virtual Machine (JVM) and the. NET Common Language Runtime (CLR) have largely ignored these advances and have implemented a far weaker security that does not reliably track ownership and access permissions for individual data items. We have implemented a system that adds MAC to an existing JVM at the granularity of objects. Our system maintains a strict separation between mechanism and policy, thereby allowing {{a wide range of}} policies to be enforced. In preliminary benchmarks, we find that the run-time overhead of tracking MAC tags for every object is around 30 %. Three important trends have been recently emerging in the field of trustworthy computing. At the application level, more and more code is now being targeted at high-level language runtimes and virtual machines that execute some form of safe, platform-independent bytecode. The most prevalent examples of this are the Java virtual machine[1], and the more recent. NET common languag...|$|R
50|$|From a purist perspective, SELinux {{provides}} {{a hybrid of}} concepts and capabilities drawn from <b>mandatory</b> access <b>controls,</b> <b>mandatory</b> integrity <b>controls,</b> role-based access control (RBAC), and type enforcement architecture. Third-party tools enable one to build a variety of security policies.|$|R
40|$|This paper {{discusses}} {{the realization of}} <b>mandatory</b> access <b>control</b> in role-based protection systems. Starting from the basic definitions of roles, their application in security and the basics {{of the concept of}} <b>mandatory</b> access <b>control,</b> we develop a scheme of role-based protection that realizes <b>mandatory</b> access <b>control.</b> The basis of this formulation develops from the recognition that roles can be seen as facilitating access to some given information context. By handling each of the role contexts as independent security levels of information, we simulate mandatory access by imposing the requirements of <b>mandatory</b> access <b>control.</b> Among the key considerations, we propose a means of taming Trojan horses by imposing acyclic information flow among contexts in role-based protection systems. The acyclic information flows and suitable access rules incorporate secrecy which is an essential component of <b>mandatory</b> access <b>control.</b> Keywords Security level, information flow, <b>mandatory</b> access <b>control,</b> r [...] ...|$|R
50|$|After the stage, the UCI {{proceeded}} to randomly check five riders' bicycles for hidden motors {{as a part}} of the <b>mandatory</b> <b>control</b> efforts. All passed inspection as nothing was found.|$|R
50|$|Following the attacks, SWIFT {{announced}} a new regime of <b>mandatory</b> <b>controls</b> required of all banks using the system. SWIFT will inspect member banks for compliance, and inform regulators and other banks of noncompliance.|$|R
40|$|This paper {{analyzes}} farmers 2 ̆ 7 {{attitudes toward}} competing agricultural policies. The empirical work utilizes data on Iowa farmers 2 ̆ 7 opinions of four policies: continuing the current program, targeting benefits to fiscally stressed farmers, <b>mandatory</b> <b>controls,</b> and decoupling. The {{results show that}} a farmer 2 ̆ 7 s financial situation, size and type of operation, education, and farm experience significantly influence his opinions. Attitudes toward <b>mandatory</b> <b>controls</b> and targeting are most sensitive, and attitudes toward continuation of the current program are least sensitive to changes in economic characteristics. Strong identifiable camps of both support and opposition are found for each policy except the current program...|$|R
50|$|The trial {{ended with}} the {{conviction}} of all the defendants, including the builders, the engineer, a fixer and the chief of town's technical office. A new law {{was approved by the}} Parliament, improving building safety and forcing <b>mandatory</b> <b>control</b> by the Civic Engineers Corps.|$|R
5000|$|Incomes {{policies}} {{vary from}} [...] "voluntary" [...] wage and price guidelines to <b>mandatory</b> <b>controls</b> like price/wage freezes. One variant is [...] "tax-based incomes policies" [...] (TIPs), where a government fee is imposed on those firms that raise prices and/or wages {{more than the}} controls allow.|$|R
5000|$|Smack (Simplified <b>Mandatory</b> Access <b>Control</b> Kernel) is a Linux kernel {{security}} module {{that protects}} data and process interaction from malicious manipulation using {{a set of}} custom <b>mandatory</b> access <b>control</b> rules, with simplicity as its main design goal. It has been officially merged since the Linux 2.6.25 release.|$|R
40|$|The high {{penetration}} of distributed generation (DG) into distribution networks (DN) has highlighted {{the necessity to}} develop proper <b>control</b> <b>techniques</b> to supply customers with high power quality levels and to offer ancillary services to the distribution system operators (DSOs). This paper supposes an unbalanced DN in which the importance of applying voltage control strategies is largely justified in literature. In particular, we present a strategy that offers the <b>mandatory</b> voltage <b>control</b> ancillary service, able to avoid active power production curtailments, using the minimum reactive power for the regulation. Validation of the proposed control has been conducted on the IEEE 13 -bus distribution system and the obtained results are encouraging...|$|R
5000|$|<b>Mandatory</b> Access <b>Control</b> (MAC) over {{selected}} {{subjects and}} objects ...|$|R
40|$|It is {{proposed}} {{an approach to}} development of <b>mandatory</b> access <b>control</b> in originally discrete DBMS MySQL based on DP-models. It is performed analysis of the existent access control mechanisms in this DBMS, it is described DP-model of MySQL, and it is implemented <b>mandatory</b> access <b>control</b> mechanism based on this model...|$|R
50|$|In 2007, the Simplified <b>Mandatory</b> Access <b>Control</b> Kernel was introduced.|$|R
40|$|Flavescence dorée and the <b>mandatory</b> <b>control</b> of its vector Scaphoideus titanus pose {{important}} {{problems in}} organic vineyards. The goal of our field {{studies conducted in}} the Ticino {{was to develop a}} pest control strategy conform to the guidelines of organic production. Insecticides containing pyrethrin were the only organic products showing an efficacy higher than 90...|$|R
40|$|Abstract –This paper {{deals with}} the level control of coupled tanks system using sliding mode control. A {{standard}} sliding mode <b>control</b> <b>technique</b> is proposed for the system. To reduce the chattering problem associated with the standard sliding mode <b>control</b> <b>technique</b> integral sliding mode <b>control</b> (ISMC) <b>technique</b> is proposed. The proposed <b>control</b> <b>techniques</b> guarantee the asymptotic stability of the closed loop system. To illustrate the developed <b>control</b> <b>techniques</b> {{the performance of the}} system is verified by MATLAB software. The simulation results indicate that the proposed <b>control</b> <b>techniques</b> work well. Index Terms- Standard Sliding mode control; Integral sliding mode control (ISMC); Level control; Coupled tank...|$|R
40|$|In {{response}} to the strawman document [9] we propose that trust be treated as synonymous with integrity rather than synonymous with confidence. We also propose that <b>mandatory</b> <b>controls</b> be taken to mean controls based on properties of the object and/or the subject. Label-based <b>mandatory</b> <b>controls</b> are then a special case of this more general notion. The TCSEC [11] presents criteria for establishing prescribed levels of confidence in trusted systems with particular objectives. We consider how these criteria might be generalized to a broader context. Finally regarding architectures for trusted systems we suggest enhancements to the current security kernel approach. 1 INTRODUCTION This paper discusses three interrelated topics pertaining to data integrity. In the spirit of this workshop the concepts are not presented as final, definitive or absolute. They do raise many interesting questions which must be confronted, {{in one form or}} another; even if the terminology suggested here needs modifi [...] ...|$|R
5000|$|Astra Linux OS {{developed}} for Russian Army {{has its own}} <b>mandatory</b> access <b>control.</b>|$|R
40|$|The {{article of}} record as {{published}} {{may be found}} at [URL] paper discusses two optical beam control testbeds developed at the Spacecraft Research and Design Center, Naval Postgraduate School, to evaluate and develop <b>control</b> <b>techniques</b> for jitter and adaptive optics control. The first testbed, a Jitter Control Testbed is used to develop <b>control</b> <b>techniques</b> for optical beam jitter. In the second testbed, the Adaptive Optics Testbed, adaptive optics <b>control</b> <b>techniques</b> are used to control the surfaces of a segmented mirror {{with the objective of}} minimizing aberrations in the images. This paper will also discuss the evaluation of different <b>control</b> <b>techniques</b> used in jitter and adaptive optics control. This paper discusses two optical beam control testbeds developed at the Spacecraft Research and Design Center, Naval Postgraduate School, to evaluate and develop <b>control</b> <b>techniques</b> for jitter and adaptive optics control. The first testbed, a Jitter Control Testbed is used to develop <b>control</b> <b>techniques</b> for optical beam jitter. In the second testbed, the Adaptive Optics Testbed, adaptive optics <b>control</b> <b>techniques</b> are used to control the surfaces of a segmented mirror with the objective of minimizing aberrations in the images. This paper will also discuss the evaluation of different <b>control</b> <b>techniques</b> used in jitter and adaptive optics control. This paper discusses two optical beam control testbeds developed at the Spacecraft Research and Design Center, Naval Postgraduate School, to evaluate and develop <b>control</b> <b>techniques</b> for jitter and adaptive optics control. The first testbed, a Jitter Control Testbed is used to develop <b>control</b> <b>techniques</b> for optical beam jitter. In the second testbed, the Adaptive Optics Testbed, adaptive optics <b>control</b> <b>techniques</b> are used to control the surfaces of a segmented mirror with the objective of minimizing aberrations in the images. This paper will also discuss the evaluation of different <b>control</b> <b>techniques</b> used in jitter and adaptive optics control. This paper discusses two optical beam control testbeds developed at the Spacecraft Research and Design Center, Naval Postgraduate School, to evaluate and develop <b>control</b> <b>techniques</b> for jitter and adaptive optics control. The first testbed, a Jitter Control Testbed is used to develop <b>control</b> <b>techniques</b> for optical beam jitter. In the second testbed, the Adaptive Optics Testbed, adaptive optics <b>control</b> <b>techniques</b> are used to control the surfaces of a segmented mirror with the objective of minimizing aberrations in the images. This paper will also discuss the evaluation of different <b>control</b> <b>techniques</b> used in jitter and adaptive optics control. This paper discusses two optical beam control testbeds developed at the Spacecraft Research and Design Center, Naval Postgraduate School, to evaluate and develop <b>control</b> <b>techniques</b> for jitter and adaptive optics control. The first testbed, a Jitter Control Testbed is used to develop <b>control</b> <b>techniques</b> for optical beam jitter. In the second testbed, the Adaptive Optics Testbed, adaptive optics <b>control</b> <b>techniques</b> are used to control the surfaces of a segmented mirror with the objective of minimizing aberrations in the images. This paper will also discuss the evaluation of different <b>control</b> <b>techniques</b> used in jitter and adaptive optics control...|$|R
5000|$|Oracle Label Security is an {{implementation}} of <b>mandatory</b> access <b>control</b> in the Oracle DBMS.|$|R
5000|$|Use of an {{operating}} system with <b>Mandatory</b> Access <b>Controls</b> (MAC) such as SE Linux ...|$|R
40|$|This work {{is engaged}} in access control {{mechanism}} in GNU/Linux operating systems. At first discretionary and <b>mandatory</b> access <b>control</b> are compared and examine basic technologies based on <b>mandatory</b> access <b>control.</b> More closely is focused on project SELinux, whose generation of new rules is explained. Within the thesis is made application for logging evaluation and for writing new Type Enforcement rules...|$|R
40|$|<b>Mandatory</b> access <b>control</b> {{models have}} {{traditionally}} been employed as a robust security mechanism in multilevel security environments such as military domains. In traditional mandatory models, the security classes associated with entities are context-insensitive. However, context-sensitivity of security classes and flexibility of access control mechanisms may be required especially in pervasive computing environments. To this aim, we propose a context-aware <b>mandatory</b> access <b>control</b> model (CAMAC) capable of dynamic adaptation of access control policies to context, and of handling context-sensitive class association, in addition to preservation of confidentiality and integrity as specified in traditional <b>mandatory</b> access <b>control</b> models. In order to prevent any ambiguity, a formal specification of the model and its elements such as context predicates, context types, level update rules, and operations is required. High expressiveness of the model allows specification of the traditional <b>mandatory</b> access <b>control</b> models such as BLP, Biba, Dion, and Chinese Wall. The model {{can also be considered}} as an information flow control model with context-sensitive association of security classes...|$|R
40|$|The {{mandatory}} security {{behavior of}} the IX kernel is specified semiformally. The security policy and the label mechanisms and checks that implement the policy are given, as are arrangements for privilege, private paths, and auditing. The security behavior of special files and of all system calls, new and old, is described. Covert channels are illustrated. 1. Introduction In a multilevel secure operating system all data files have security classification labels. <b>Mandatory</b> <b>controls</b> assure that no combination of computer programs may copy data from a file into another with a lesser label. Thus the normal flow of data is up: as data move from place to place, the classification label must not decrease {{as a result of}} negligent or unauthorized action. However, certain privileged programs are allowed to copy data down, that is, to declassify or downgrade data. We describe a simple, but thorough, way to add <b>mandatory</b> <b>controls</b> to a UNIXÒ operating system without severely impairing the basic nat [...] ...|$|R
40|$|AbstractDifferent from {{traditional}} access control technologies, such as discretionary access <b>control,</b> <b>mandatory</b> access <b>control,</b> role-based access control, trust-based access control can {{solve the problem}} of uncertainty, risk and vulnerability coming from authorization. In this paper, strict definition and formal description of trust-based access control is defined...|$|R
50|$|<b>Mandatory</b> Integrity <b>Control</b> is {{implemented}} {{through a new}} type of ACE on a security descriptor.|$|R
5000|$|Foreign intervention. Democracies {{have often}} been imposed by {{military}} intervention, for example in Japan and Germany after WWII. In other cases, decolonization sometimes facilitated the establishment of democracies that were soon replaced by authoritarian regimes. For example, Syria, after gaining independence from French <b>mandatory</b> <b>control</b> {{at the beginning of}} the Cold War, failed to consolidate its democracy,so it eventually collapsed and was replaced by a Ba'athist dictatorship.|$|R
40|$|In {{virtualization}} environment, {{the communication}} and resource sharing between virtual machines can {{be protected by}} <b>mandatory</b> access <b>control</b> mechanism to guarantee {{the isolation of the}} virtual machines. The safety of the <b>mandatory</b> access <b>control</b> framework depends on whether the security sensitive operations are protected by the security check functions completely. In this paper, we present a novel method to verify the safety of the Xen security modules framework. We implement our method on the Xen 4. 01 source code and evaluate the results. While our work in this paper focuses on the verification of Xen security modules, which can be used to analyze other <b>mandatory</b> access <b>control</b> framework analogous with it as well. © 2011 IEEE...|$|R
40|$|AbstractA {{nonlinear}} <b>control</b> <b>technique</b> {{is used to}} {{controls the}} duty ratio (T) of a switch in switching converters. i. e., an improved one cycle <b>control</b> <b>technique</b> which is conceptual {{to the concept of}} technique of one cycle control. This one cycle control method gives firmness to the source side disturbances, but this technique shows infirmness with the load side disturbances. The proposed new improved one cycle <b>control</b> <b>technique</b> rectifies the drawbacks of one cycle <b>control</b> <b>technique.</b> It strongly rejects both source side disturbances and load side disturbances. Simulations with the buck converter results using MATLAB are given to verify the proposed work. To implement and demonstrate the feasibility of this new <b>control</b> <b>technique</b> over the disturbance, an experimental buck converter prototype has been designed, built, and tested...|$|R
40|$|Commodity {{applications}} {{can pose}} {{a serious threat}} to users’ confidential information when they do not have sufficient security features or are configured improperly. This problem is difficult due to the unavailability of these applications’ source code, which renders the techniques such as compiler-level security enhancement hard to apply. Existing solutions rely on either system-call level control, which is often too coarse-grained, or instruction-level dataflow tracking, which is too expensive to operate online. In this paper, we present a new solution called Leapfrog which retrofits binary executables with <b>mandatory</b> dataflow <b>control.</b> Our <b>technique</b> enables a “patched” application to perform fine-grained dataflow control at a performance penalty which in many cases can be neglected. This is achieved through a novel technique that tracks sensitive data flows only at a small set of program locations: each location uses the program’s internal state and pre-computed conditions to predict the path the data flows will go through and the next location they will reach. As a result, the sensitive data can be followed until they are to be sent out to the Internet, where they are controlled according to security policies. Such dataflow tracking and control is supported by an offline analysis which identifies the execution paths for processing sensitive data and the conditions for the data to propagate along these paths. We further mitigate the coverage concern of this analysis through enforcing a security policy that disallows highly sensitive data to be processed by unknown execution paths without disrupting a program’s operations. Leapfrog works on multithreaded applications and can attach code to an application without functionally altering its executable files. Our evaluations show that our technique effectively protects sensitive information in misconfigured applications and those with security flaws, and also incurs a small runtime overhead...|$|R
50|$|Tomoyo Linux (stylised as TOMOYO Linux) is a Linux kernel {{security}} module which implements <b>mandatory</b> access <b>control</b> (MAC).|$|R
40|$|This paper {{discusses}} two optical beam control testbeds {{developed at}} the Spacecraft Research and Design Center, Naval Postgraduate School, to evaluate and develop <b>control</b> <b>techniques</b> for jitter and adaptive optics control. The first testbed, a Jitter Control Testbed is used to develop <b>control</b> <b>techniques</b> for optical beam jitter. In the second testbed, the Adaptive Optics Testbed, adaptive optics <b>control</b> <b>techniques</b> are used to control the surfaces of a segmented mirror {{with the objective of}} minimizing aberrations in the images. This paper will also discuss the evaluation of different <b>control</b> <b>techniques</b> used in jitter and adaptive optics control. I...|$|R
40|$|This paper {{develops}} a {{theoretical and empirical}} methodology to analyze public attitudes toward competing public policies. The model is applied to data on Iowa farmers 2 ̆ 7 opinions of four agricultural policies: continuing the current program, targeting benefits to fiscally stressed farmers, <b>mandatory</b> acreage <b>controls,</b> and shifting to a free market. The results show that a farmer 2 ̆ 7 s financial situation, size and type of operation, education, and farm experience significantly influence his opinions. Attitudes toward <b>mandatory</b> <b>controls</b> and targeting are most sensitive, and attitudes toward continuation of the current program are least sensitive to changes in economic characteristics. Strong identi fiable camps of both support and opposition are found for each policy except the current program...|$|R
50|$|Trusted Solaris is a security-evaluated {{operating}} {{system based on}} Solaris by Sun Microsystems, featuring a <b>mandatory</b> access <b>control</b> model.|$|R
40|$|Concurrency {{control is}} an {{integral}} part of a database system. Devising a concurrency <b>control</b> <b>technique</b> that has a low lost opportunity cost and a low restart cost is a hard problem. The interconnection network in a distributed database system can act as a powerful coordination mechanism by providing certain useful properties. We identify several such useful network properties, and present a new family of concurrency <b>control</b> <b>techniques</b> that are built on top of these properties. Network-aided concurrency <b>control</b> <b>techniques</b> use network properties to keep the lost opportunity cost and restart cost low. Our thesis is that network properties can be exploited to achieve efficient concurrency control of transactions. We also contribute to the evaluation of concurrency <b>control</b> <b>techniques,</b> both analytically and through simulation. Traditional analytical models fail when trying to model certain kinds of workloads. We present a new analytical modelling technique that overcomes the limitations of traditional models. We also show that current perception of the relative merits of concurrency <b>control</b> <b>techniques</b> is flawed. Timestamp ordering concurrency <b>control</b> <b>techniques</b> have been perceived as poor performers until now. We show that two timestamp ordering techniques — a traditional technique and a network-aided technique — perform better than the most popular concurrency <b>control</b> <b>technique</b> for a wide range of conditions. ...|$|R
