9456|1970|Public
5|$|USB {{mice and}} {{keyboards}} {{can usually be}} used with older computers that have PS/2 connectors {{with the aid of}} a small USB-to-PS/2 adapter. For mice and keyboards with dual-protocol support, an adaptor that contains no logic circuitry may be used: the hardware in the USB keyboard or mouse is designed to detect whether it is connected to a USB or PS/2 port, and communicate using the appropriate protocol. Converters also exist that connect PS/2 keyboards and mice (usually one of each) to a USB port. These devices present two HID endpoints to the system and use a <b>microcontroller</b> to perform bidirectional data translation between the two standards.|$|E
25|$|As a first example, {{consider}} an anti-lock braking system, directed by a <b>microcontroller</b> chip. The <b>microcontroller</b> {{has to make}} decisions based on brake temperature, speed, and other variables in the system.|$|E
25|$|Enhancements for <b>microcontroller</b> applications. The MCU ASE (application-specific extension) {{has been}} {{developed}} to extend the interrupt controller support, reduce the interrupt latency and enhance the I/O peripheral control function typically required in <b>microcontroller</b> system designs.|$|E
50|$|Texas Instruments {{embedded}} processors include TMS320 DSPs, OMAP system-on-a-chip, DaVinci system-on-a-chip, Sitara applications processors, Hercules <b>microcontrollers,</b> MSP432 <b>microcontrollers,</b> Wireless connectivity <b>microcontrollers,</b> and Tiva/Stellaris <b>microcontrollers.</b> It also enables debugging {{on several}} subsystems such as Ducati, IVA Accelerator and PRU-ICSS.|$|R
50|$|A {{large part}} of Atmel's revenue is from <b>microcontrollers.</b> These include the AVR 8- and 32-bit <b>microcontrollers,</b> ARM {{architecture}} microprocessors, and ARM-based flash <b>microcontrollers.</b> In addition Atmel still makes <b>microcontrollers</b> that use the 8051 architecture, albeit improved to do single-cycle instructions. Supporting the <b>microcontrollers</b> is the Atmel Studio 7 integrated development environment which Atmel offers for free. They also provide an Atmel Software Framework.|$|R
5000|$|Silicon Laboratories Pipelined 8-bit 8051 <b>Microcontrollers</b> and mixed-signal ARM-based 32-bit <b>microcontrollers</b> ...|$|R
25|$|USB {{mass storage}} {{controller}} a small <b>microcontroller</b> {{with a small}} amount of on-chip ROM and RAM.|$|E
25|$|Jumpers {{and test}} pins – for testing during the flash drive's {{manufacturing}} or loading code into its <b>microcontroller.</b>|$|E
25|$|With {{the basic}} idea outlined, Hayes and Sirkis gave Heatherington the go-ahead to build a {{prototype}} by adding a <b>microcontroller</b> to an otherwise lightly modified version of their existing 300 bit/s hardware. Sirkis was particularly interested in using the 1MHz PIC <b>microcontroller,</b> which were available for only US$1 a piece. After six months {{of trying to get}} the modem working with the PIC, Heatherington gave up and demanded they use the 8MHz Zilog Z8 instead, a US$10 part. Sirkis acquiesced, and a working prototype was soon complete.|$|E
50|$|The {{earliest}} <b>microcontrollers</b> used mask ROM {{to store}} firmware. Later <b>microcontrollers</b> (such {{as the early}} versions of the Freescale 68HC11 and early PIC <b>microcontrollers)</b> had quartz windows that allowed ultraviolet light in to erase the EPROM.|$|R
50|$|In 2012, {{worldwide}} {{sales of}} 8-bit <b>microcontrollers</b> were around $4 billion, while 4-bit <b>microcontrollers</b> also saw significant sales.|$|R
40|$|This work {{deals with}} {{overview}} of the <b>microcontrollers</b> which are usable for the controllers based on the modem control algorithms. In this paper are described necessities of the self tuning controllers. In our applications, we are focused to the <b>microcontrollers</b> Motorola and National Semiconductor that are commonly used for process control. <b>Microcontrollers</b> {{were divided into two}} categories: 8 -bit and 16 -bit. In the part of the work dedicated to 8 -bit <b>microcontrollers,</b> the properties of M 68 HC 08 (Motorola) and COP 8 (National Semiconductor) are described. The part, which deals with 16 -bit <b>microcontrollers,</b> contains description of M 68 HC 16 (Motorola) and CR 16 (National Semiconductor). Finally has been evaluated CPU performance of selected <b>microcontrollers</b> in clock cycles needed for factorial computation...|$|R
25|$|The {{electric}} current produced by this reaction {{is measured by}} a <b>microcontroller,</b> and displayed as an approximation of overall blood alcohol content (BAC) by the Alcosensor.|$|E
25|$|KEIL Software, {{a leading}} {{developer}} of software development tools for the <b>microcontroller</b> (MCU) market, including 8051 and C16x platforms. Arm also acquired the engineering team of PowerEscape.|$|E
25|$|As in {{the block}} diagram, the meter has a power supply, a {{metering}} engine, a processing and communication engine (i.e. a <b>microcontroller),</b> and other add-on modules such as RTC, LCD, communication ports/modules and so on.|$|E
50|$|Parallax {{produced}} {{a series of}} PICmicro-like <b>microcontrollers</b> known as the Parallax SX. It is currently discontinued. Designed to be architecturally similar to the PIC <b>microcontrollers</b> used in the original versions of the BASIC Stamp, SX <b>microcontrollers</b> replaced the PIC in several subsequent versions of that product.|$|R
50|$|Parallax SX is a {{discontinued}} line of <b>microcontrollers</b> {{that was}} marketed by Parallax, from a design by Ubicom. Designed to be architecturally {{similar to the}} PIC <b>microcontrollers</b> used in the original versions of the BASIC Stamp, SX <b>microcontrollers</b> replaced the PIC in several subsequent versions of that product.|$|R
40|$|The aim of {{this paper}} is to present {{overview}} of the <b>microcontrollers</b> which are usable for the controllers based on the modem control algorithms. In this paper are described necessities of the self tuning controllers. In our applications, we are focused to the <b>microcontrollers</b> Motorola and National Semiconductor that are commonly used for process control. <b>Microcontrollers</b> were divided into two categories: 8 -bit and 16 -bit. In the part of the work dedicated to 8 -bit <b>microcontrollers,</b> the properties of M 68 HC 08 (Motorola) and COP 8 (National Semiconductor) are described. The part, which deals with 16 -bit <b>microcontrollers,</b> contains description of M 68 HC 16 (Motorola) and CR 16 (National Semiconductor). Finally has been evaluated CPU performance of selected <b>microcontrollers</b> in clock cycles needed for factorial computation...|$|R
25|$|No {{support for}} unaligned memory accesses in the {{original}} version of the architecture. ARMv6 and later, except some <b>microcontroller</b> versions, support unaligned accesses for half-word and single-word load/store instructions with some limitations, such as no guaranteed atomicity.|$|E
25|$|The Nunchuk can be {{connected}} to any <b>microcontroller</b> capable of I²C (e.g., Arduino's Atmel AVR), where the accelerometer, joystick and buttons data may be accessed. Todbot has created the Wiichuck, an adapter to facilitate connecting the Nunchuk to an Arduino board.|$|E
25|$|Because of {{the high}} {{potential}} energy density and the nonlinear discharge and charging response of the cell, a <b>microcontroller</b> and other safety circuitry is sometimes used along with voltage regulators to manage cell operation and prevent rapid discharge.|$|E
40|$|Bachelor's thesis {{deals with}} problematics of serial communication, {{specially}} of serial asynchronous communication of <b>microcontrollers</b> from HC 08 family. Thesis includes analysis of SCI module, which provides serial asynchronous communication of <b>microcontrollers.</b> On {{a basis of}} the analysis the software solution of UART (sUART) for <b>microcontrollers</b> from HC 08 family, which have no SCI module, was created. SUART interface was successfully tested by communication with a computer using RS- 232 interface {{as well as by}} communication between several <b>microcontrollers...</b>|$|R
40|$|<b>Microcontrollers</b> and {{microprocessors}} {{are distinct}} in that, {{to be able}} to use a microprocessor, one has to integrate peripheral components like memory chip or data transmitters-receivers, while <b>microcontrollers</b> have integrated all the necessary components for an autonomous operation. There is no need for additional external part because all the required ones are already incorporated in <b>microcontroller’s</b> capsule. Thus using <b>microcontrollers</b> on device construction it can be saved time and space, in terms of geometrical dimensions. The present paper describes an application regarding driving and controlling a automatic guided vehicle using <b>microcontrollers.</b> The kinematic curvature is performed using two guiding wheels that have immobile shafts and distinct velocities...|$|R
50|$|Numerous <b>microcontrollers</b> {{have been}} {{developed}} for embedded systems use. General-purpose microprocessors are also used in embedded systems, but generally require more support circuitry than <b>microcontrollers.</b>|$|R
25|$|Many {{electronic}} ballasts {{are controlled}} by a <b>microcontroller</b> or similar, and these are sometimes called digital ballasts. Digital ballasts can apply quite complex logic to lamp starting and operation. This enables functions such as testing for broken electrodes and missing tubes before attempting to start, auto detect tube replacement, and auto detection of tube type, such that a single ballast {{can be used with}} several different tubes, even those that operate at different arc currents, etc. Once such fine grained control over the starting and arc current is achievable, features such as dimming, and having the ballast maintain a constant light level against changing sunlight contribution are all easily included in the embedded <b>microcontroller</b> software, and can be found in various manufacturers' products.|$|E
25|$|In 2011 AGE Labs {{embedded}} PS/2 {{keyboard controller}} unit, based on Microchip <b>microcontroller,</b> into its GR8BIT do-it-yourself machine. Its firmware is developed to directly convert PS/2 scan codes to the MSX keyboard scan codes, thus is fully transparent to the applications, allowing using designed controller unit with different MSX-compatible machines and for different localization setups.|$|E
25|$|The same {{argument}} applies when hardware {{of this type}} uses an embedded <b>microcontroller</b> or other small processor. Often, smaller code results when representing numbers internally in BCD format, since a conversion from or to binary representation can be expensive on such limited processors. For these applications, some small processors feature BCD arithmetic modes, which assist when writing routines that manipulate BCD quantities.|$|E
5000|$|In 2002, about 55% of all CPUs sold in {{the world}} were 8-bit <b>microcontrollers</b> and microprocessors.Over two billion 8-bit <b>microcontrollers</b> were sold in 1997, and {{according}} to Semico, over four billion 8-bit <b>microcontrollers</b> were sold in 2006. [...] More recently, Semico has claimed the MCU market grew 36.5% in 2010 and 12% in 2011.|$|R
50|$|In April 2009, Microchip Technology {{announced}} the nanoWatt XLP <b>Microcontrollers</b> (With World’s Lowest Sleep Current).Microchip Technology had {{sold more than}} 6 billion <b>microcontrollers</b> as of 2009.|$|R
40|$|Abstract. Contactless {{cards are}} smart cards with {{microprocessor}} cores. Their applications of are very popular, such as public transports, access control, cashless payment, campus solution and so on. Reader {{is an essential}} part for smart card applications. It can identify cards, read/write data on cards. <b>Microcontrollers</b> are common hardware for embedded applications. With <b>microcontrollers,</b> the readers of contactless cards will be smart and easy to be used. In this paper, smart cads, contactless cards, readers, <b>microcontrollers</b> and design of a reader with <b>microcontrollers</b> are discussed...|$|R
25|$|Open-source <b>microcontroller</b> (Arduino) and single-board {{computer}} (Raspberry Pi) platforms have kick-started {{public interest}} in hackerspaces and initiated a maker culture all over the world. Social transformations are expected as collaborative innovation through cost-effective manufacturing facilities using 3D printing, laser cutting and CNC machining which are already helping home-based entrepreneurs to rapidly prototype crowdsourced products and measure product attractivity through crowdfunding mechanisms.|$|E
25|$|In 2014, OpenBCI {{released}} an eponymous open source brain-computer interface after a successful kickstarter campaign in 2013. The basic OpenBCI has 8 channels, expandable to 16, and supports EEG, EKG, and EMG. The OpenBCI {{is based on}} the Texas Instruments ADS1299 IC and the Arduino or PIC <b>microcontroller,</b> and costs $399 for the basic version. It uses standard metal cup electrodes and conductive paste.|$|E
25|$|Historically, pinball {{machines}} have employed a central fixed I/O board {{connected to the}} primary CPU controlled by a custom <b>microcontroller</b> platform running an in-house operating system. For {{a variety of reasons}} that include thermal flow, reliability, vibration reduction and serviceability, I/O electronics have been located in the upper backbox of the game, requiring significant custom wiring harnesses to connect the central I/O board to the playfield devices.|$|E
5000|$|CR16 {{was used}} in several National Semiconductor <b>microcontrollers,</b> and since 2001 {{integrated}} <b>microcontrollers</b> were available having built-it flash memory. Since 2007 CR16-based IP was available to licensing ...|$|R
5000|$|The {{original}} {{market demand}} for a simplified board implementation is no longer as relevant for <b>microcontrollers.</b> Single-board <b>microcontrollers</b> are still important, but have shifted their focus to: ...|$|R
50|$|In {{the early}} 1990s, {{upmarket}} machines incorporated <b>microcontrollers</b> for the timing process. These proved reliable and cost-effective, so many cheaper machines now also incorporate <b>microcontrollers</b> rather than electromechanical timers.|$|R
