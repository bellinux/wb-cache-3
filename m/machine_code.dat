1725|558|Public
5|$|Psyco is a {{just-in-time}} specialising compiler that integrates with CPython and transforms bytecode to <b>machine</b> <b>code</b> at runtime. The emitted code is specialised {{for certain}} data types and is faster than standard Python code.|$|E
5|$|HipHop Virtual Machine (HHVM) {{developed}} at Facebook and available as open source, it converts PHP code into a high-level bytecode (commonly {{known as an}} intermediate language), which is then translated into x86-64 <b>machine</b> <b>code</b> dynamically at runtime by a just-in-time (JIT) compiler, resulting in up to 6× performance improvements.|$|E
5|$|MU5 was {{designed}} to be about 20 times faster than Atlas, and was optimised for running compiled programs rather than hand-written <b>machine</b> <b>code,</b> something that contemporary computers were unable to do efficiently. A major factor in the MU5's much-improved performance over its predecessors was its incorporation of associative memory, which greatly speeded up access to its main store.|$|E
5000|$|Fireside Phoenix EP. (<b>Machine</b> <b>Codes</b> CODE x10) Digital Release 2017 ...|$|R
5000|$|EPNOM BYMON EP (with Peter Green) (<b>Machine</b> <b>Codes</b> CODE E) 1996 ...|$|R
5000|$|Beyond The Box EP (with Peter Green) (<b>Machine</b> <b>Codes</b> CODE D) 1995 ...|$|R
5|$|Software was {{distributed}} through print media; magazines and books. The reader would type the BASIC program listing {{into the computer}} by hand, run it, and could save it to tape for later use. Software distributed in this way was in general simpler and slower than its assembly language counterparts. Magazines printed long lists of checksummed hexadecimal digits with <b>machine</b> <b>code</b> games or tools.|$|E
5|$|Enterprising programmers {{were able}} to produce games for the ZX81 using nothing more than text {{characters}} and the machine's limited text semigraphics. Some ZX81 games achieved lasting fame, such as 3D Monster Maze, a tense first-person perspective game that involved the player escaping a labyrinth with a Tyrannosaurus rex in pursuit. Written in a combination of BASIC and <b>machine</b> <b>code,</b> its innovative design led it to be hailed as the first home computer 3D game and a landmark {{in the history of}} computer and video games.|$|E
5|$|The ZX Spectrum {{enjoyed a}} very strong {{community}} early on. Several dedicated magazines were released including Sinclair User (1982), Your Spectrum (1983), rebranded as Your Sinclair in 1986, and CRASH (1984). Early on they were very technically oriented with type-in programs and <b>machine</b> <b>code</b> tutorials. Later on they became almost completely game-oriented. Several general contemporary computer magazines covered the ZX Spectrum in more or less detail. They included Computer Gamer, Computer and Video Games, Computing Today, Popular Computing Weekly, Your Computer and The Games Machine.|$|E
5000|$|Shen Circuits (Veil of the Spirits) EP. (<b>Machine</b> <b>Codes,</b> CODE 1110) Digital Release 2016 ...|$|R
50|$|In {{addition}} to the visual and audio information, there are board games in different languages (including a giant Scrabble board), {{as well as an}} Enigma <b>machine</b> (<b>coding</b> <b>machine</b> used in the Second World War).|$|R
40|$|This {{script is}} {{arranged}} {{based on the}} research purposed to know the best alternative for PT Air Mancur between repairing of Filling and Packaging Sachet Machine, Honey Liquid Filler Machine, Auto strip Packaging <b>Machine,</b> <b>Coding</b> <b>Machine</b> Daichi DH- 7, Ribbon Mixer Material Sus 304 Machine, Filling Sachet Machine, Honey Stick <b>Machine,</b> <b>Coding</b> <b>Machine,</b> Tank and Mixer Machine, Conveyor Machine, and Gear and Pump Brand Machine or buy for each of this machines. The basic method of the research is decrypting method and implementation by case study method. This research is done in PT Air Mancur. This location research is selected on purpose because PT Air Mancur is a factory that processing plant medicine becomes an herb product more than 40 years, this company doesn’t pay attention for feasibility analysis if economic age of machines finished, and data that needed for this research is available. Based on infestations criteria Pay Back Period (PBP), Net Present Value (NPV), Profitability Index (PI), and Internal Rate of Return (IRR) are know that all of investation alternatives and feasible to do. But then, the infestation alternative for buy for new Filling and Packaging Sachet Machine, Honey Liquid Filler Machine, Auto strip Packaging <b>Machine,</b> <b>Coding</b> <b>Machine</b> Daichi DH- 7, Ribbon Mixer Material Sus 304 Machine, Filling Sachet Machine, Honey Stick <b>Machine,</b> <b>Coding</b> <b>Machine,</b> Tank and Mixer Machine, Conveyor Machine, and Gear and Pump Brand Machine is the best alternative. This decision is taken based on value of infestation criteria NPV and PI for buying new machine alternative is more than value infestation criteria NPV and PI for repairing machine alternative. In expectation, this alternative give more benefit than repairing the old machine. The result of this research show that the reasonable alternative is buy for new machine of Filling and Packaging Sachet Machine, Honey Liquid Filler Machine, Auto strip Packaging <b>Machine,</b> <b>Coding</b> <b>Machine</b> Daichi DH- 7, Ribbon Mixer Material Sus 304 Machine, Filling Sachet Machine, Honey Stick <b>Machine,</b> <b>Coding</b> <b>Machine,</b> Tank and Mixer Machine, Conveyor Machine, and Gear and Pump Brand Machine. From the research result suggested that PT Air Mancur should choose buying infestation alternative for new machine prioritized for Filling and Packaging Machine, Honey Liquid Filler Machine, and Auto strip Packaging Machine because these machines are the oldest (17 years old). PT Air Mancur should give attention for the economic age of machines. All this time this company operated machines although the economic age of machine is finished. This research showed that repairing old machine as an effort for elongate machine’s economic age is an unprofitable alternative than buy new machine...|$|R
5|$|In December 1974 Bill Gates was {{a student}} at Harvard University and Paul Allen worked for Honeywell in Boston. They saw the Altair 8800 {{computer}} in the January 1975 issue of Popular Electronics and knew it was powerful enough to support a BASIC interpreter. They wanted {{to be the first to}} offer BASIC for the Altair computer, and the software development tools they had previously created for their Intel 8008 microprocessor based Traf-O-Data computer would give them a head start. While their friend, Paul Gilbert, was building the computer, Allen wrote a program that ran on a DEC PDP-10 time-sharing computer that simulated the 8008 system. He also modified DEC's macro assembler to produce the <b>machine</b> <b>code</b> for the 8008 microprocessor. The Traf-O-Data software could be written and debugged before the computer hardware was complete.|$|E
25|$|Shellcode is {{commonly}} written in <b>machine</b> <b>code.</b>|$|E
25|$|Unlike {{more modern}} APL compilers, this product {{produced}} <b>machine</b> <b>code</b> that would execute {{only in the}} interpreter environment, {{it was not possible}} to eliminate the interpreter component. The compiler could compile many scalar and vector operations to <b>machine</b> <b>code,</b> but it would rely on the APL interpreter's services to perform some more advanced functions, rather than attempt to compile them. However, dramatic speedups did occur, especially for heavily iterative APL code.|$|E
5000|$|In the manga series Project ARMS a boy {{infected}} with intelligent nano <b>machines</b> <b>code</b> named white rabbit is granted superior speed and jumping ability.|$|R
40|$|Shows that, {{using the}} {{dynamical}} variable pointer, one can implement a natural link between BASIC variables and binary data, giving powerful features to BASIC's interpreter in data acquisition systems. A <b>machine</b> <b>coded</b> program written for data logging can {{get access to}} BASIC variables and directly transfers data to them without suffering the interpreter's slow speed. BASIC programs just use them as any other variables. A manifold user's call, giving control to different <b>machine</b> <b>coded</b> programs without having to change the user's address as usual. (0 refs) ...|$|R
50|$|The <b>machine</b> <b>codes</b> in our mobile phones, or {{a simple}} ZigBee {{bracelet}} ZigBee {{can serve as}} both pagers and master keys with which to obtain services from the Intelligent Street.|$|R
25|$|For efficiency, Prolog code is {{typically}} compiled to abstract <b>machine</b> <b>code,</b> often {{influenced by the}} register-based Warren Abstract Machine (WAM) instruction set. Some implementations employ abstract interpretation to derive type and mode information of predicates at compile time, or compile to real <b>machine</b> <b>code</b> for high performance. Devising efficient implementation methods for Prolog code is a field of active research in the logic programming community, and various other execution methods are employed in some implementations. These include clause binarization and stack-based virtual machines.|$|E
25|$|IF..GOTO. A form {{found in}} {{unstructured}} languages, mimicking a typical <b>machine</b> <b>code</b> instruction, would jump to (GOTO) a label or line number when the condition was met.|$|E
25|$|Assembly {{language}} is converted into executable <b>machine</b> <b>code</b> by a utility program {{referred to as}} an assembler. The conversion process {{is referred to as}} assembly, or assembling the source code. Assembly time is the computational step where an assembler is run.|$|E
40|$|This paper {{describes}} in technical detail the Kansas Event Data System (KEDS) and summarizes our experience in coding Reuters {{data for the}} Middle East. The components of KEDS are first described; this discussion is intended to provide sufficient detail about the program that one could develop a more sophisticated machine-coding system based on our research. We then discuss {{a number of problems}} we have encountered in <b>machine</b> <b>coding,</b> focusing on the Reuters data source and the KEDS program itself. The paper concludes with a discussion of future approaches to <b>machine</b> <b>coding</b> in event data research and other potential applications of the technology...|$|R
5000|$|An {{important}} {{class of}} collective effects may be summarized {{in terms of}} the beams response to an [...] "impedance". An important job is thus the computation of this impedance for the <b>machine.</b> <b>Codes</b> for this computation include ...|$|R
50|$|Packaging {{machines}} are machines that complete {{stages of the}} packaging process. Examples include filling machines, sealing machines, wrapping machines, strapping machines, labelling <b>machines</b> and <b>coding</b> <b>machines.</b>|$|R
25|$|Just in time compilers pre-compile {{computer}} programs just before execution. For example, the Java virtual machine Hotspot contains a Just In Time Compiler which selectively compiles Java bytecode into <b>machine</b> <b>code</b> - but only code which Hotspot predicts {{is likely to}} be used many times.|$|E
25|$|In the past, APL {{compilation}} {{was regarded}} as a means to achieve execution speed comparable to other mainstream languages, especially on mainframe computers. Several APL compilers achieved some levels of success, though comparatively little of the development effort spent on APL over the years went to perfecting compilation into <b>machine</b> <b>code.</b>|$|E
25|$|When I was 11, I won 50 {{pounds in}} a {{competition}} for writing this program that made sound on a ZX81. You couldn't make sound on a ZX81, but I played around with <b>machine</b> <b>code</b> and found some codes that retuned the TV signal {{so that it}} made this really weird noise when you turned the volume up.|$|E
5000|$|Compilers for stack {{machines}} are simpler and quicker to build than compilers for other <b>machines.</b> <b>Code</b> generation is trivial and independent of prior or subsequent code. For example, given an expression x+y*z+u, the corresponding syntax tree would be: ...|$|R
50|$|Simulation of <b>machine</b> {{language}} <b>code</b> {{and implementation}} of assembler.|$|R
40|$|For instruction-level pamllel machines, it is es-sential to extmct pamllelly {{executable}} {{instructions from}} a progmm by code scheduling. I n this pa-per, we propose a new code scheduling technique using on extension of PDG. This technique p a d-lelizes non-numerical progmms, producing better <b>machine</b> <b>codes</b> than these created by percolation scheduling. ...|$|R
25|$|The game {{took two}} years to write and {{started out as a}} 3D arcade game without the trading element. It was written in <b>machine</b> <b>code</b> using {{assembly}} language, giving much care to maximum compactness of code. The last part added was the 3D radar display fitted into the last few unused bytes in their computer.|$|E
25|$|For example, the {{instruction}} below tells an x86/IA-32 processor to move an immediate 8-bit value into a register. The binary code for this instruction is 10110 {{followed by a}} 3-bit identifier for which register to use. The identifier for the AL register is 000, so the following <b>machine</b> <b>code</b> loads the AL register with the data 01100001.|$|E
25|$|A {{computer}} program in execution is normally treated as being {{different from the}} data the program operates on. However, in some cases, this distinction is blurred when a {{computer program}} modifies itself. The modified computer program is subsequently executed {{as part of the}} same program. Self-modifying code is possible for programs written in <b>machine</b> <b>code,</b> assembly language, Lisp, C, COBOL, PL/1, and Prolog.|$|E
5000|$|Many in {{the user}} {{community}} recall the 1620 being {{referred to as}} CADET, jokingly meaning [...] "Can't Add, Doesn't Even Try", referring {{to the use of}} addition tables in memory rather than dedicated addition circuitry.For an explanation of all three known interpretations of the <b>machine's</b> <b>code</b> name see the section on the machine's development history.|$|R
50|$|The 7600 was an {{architectural}} landmark, {{and most of}} its features are still standard parts of computer design. It is a reduced instruction set computer with a 15-bit instruction word containing a six-bit operation code. There are only 64 <b>machine</b> <b>codes,</b> including a no operation code, with no fixed-point multiply or divide operations in the central processor.|$|R
5000|$|He is {{also known}} as The Kosmik Kommando, Universal Indicator, Chimera, <b>Machine</b> <b>Codes,</b> Space Avenge. He was the first artist other than Richard D. James to release a project on Rephlex. His clear vinyl [...] "Kosmik Kommando EP" [...] was the 3rd release and was given a {{catalogue}} number CAT007 on account of his interest in James Bond. In addition, the Universal Indicator records released on Rephlex are amongst the most collectible recordings in the history of techno music. Mike Dred established the <b>Machine</b> <b>Codes</b> record label in 1990 and also recorded for R&S Records and R&S Records offshoot Diatomyc from 1992 to 1997. From 1994 to 1999, he collaborated extensively with the electro-acoustic artist Peter Green and also produced a one-off collaboration with techno producer Dr. Fernando. In 2012 he recorded the Overmind LP for De:Tuned in Antwerp and has contributed to both sought after De:Tuned Box Set compilations.|$|R
