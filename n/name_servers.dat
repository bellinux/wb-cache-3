337|617|Public
25|$|The Domain Name System is {{maintained}} by a distributed database system, which uses the clientâ€“server model. The nodes of this database are the <b>name</b> <b>servers.</b> Each domain {{has at least}} one authoritative DNS server that publishes information about that domain and the <b>name</b> <b>servers</b> of any domains subordinate to it. The top of the hierarchy is served by the root <b>name</b> <b>servers,</b> the servers to query when looking up (resolving) a TLD.|$|E
25|$|For COM and NET domain names, a thin {{registry}} {{model is}} used. The domain registry (e.g., VeriSign) holds basic WHOIS data (i.e., registrar and <b>name</b> <b>servers,</b> etc.) One {{can find the}} detailed WHOIS (registrant, <b>name</b> <b>servers,</b> expiry dates, etc.) at the registrars.|$|E
25|$|In theory, {{authoritative}} <b>name</b> <b>servers</b> {{are sufficient}} for {{the operation of the}} Internet. However, with only authoritative <b>name</b> <b>servers</b> operating, every DNS query must start with recursive queries at the root zone of the Domain Name System and each user system would have to implement resolver software capable of recursive operation.|$|E
50|$|The first {{variant of}} DNS cache {{poisoning}} involves redirecting the <b>name</b> <b>server</b> of the attacker's domain to the <b>name</b> <b>server</b> {{of the target}} domain, then assigning that <b>name</b> <b>server</b> an IP address specified by the attacker.|$|R
30|$|Domains {{and their}} {{mappings}} are also administered hierarchically; the mappings of each domain foo.bar {{are provided by}} a <b>name</b> <b>server,</b> managed by {{the owner of the}} domain. The <b>name</b> <b>server</b> of a domain foo.bar is identified via a DNS mapping of type NS, from the domain name to the domain name of the <b>name</b> <b>server,</b> which could be subdomain, e.g,. ns 1.foo.bar, or not, e.g., ns.goo.net. Mappings of a domain name, e.g., x.foo.bar, are trusted only if received from a <b>name</b> <b>server</b> of that domain or of a parent domain, e.g., the <b>name</b> <b>server</b> of foo.bar orof bar.|$|R
5000|$|... nsupdate is a {{computer}} network maintenance utility used by network administrators to request the <b>name</b> <b>server</b> of a DNS zone to update its database. The <b>name</b> <b>server</b> might be local to a domain or, with appropriate authentication and permission provided by DNSSEC, an internet <b>name</b> <b>server.</b>|$|R
25|$|The Domain Name System delegates the {{responsibility}} of assigning domain names and mapping those names to Internet resources by designating authoritative <b>name</b> <b>servers</b> for each domain. Network administrators may delegate authority over sub-domains of their allocated name space to other <b>name</b> <b>servers.</b> This mechanism provides distributed and fault tolerant service and was designed to avoid a single large central database.|$|E
25|$|Domain name resolvers {{determine}} the domain <b>name</b> <b>servers</b> {{responsible for the}} domain name in question by a sequence of queries starting with the right-most (top-level) domain label.|$|E
25|$|Every DNS zone must be {{assigned}} {{a set of}} authoritative <b>name</b> <b>servers.</b> This set of servers is stored in the parent domain zone with name server (NS) records.|$|E
50|$|In this case, the <b>name</b> <b>server</b> {{providing}} the delegation must also provide {{one or more}} IP addresses for the authoritative <b>name</b> <b>server</b> mentioned in the delegation. This information is called glue. The delegating <b>name</b> <b>server</b> provides this glue {{in the form of}} records in the additional section of the DNS response, and provides the delegation in the authority section of the response. A glue record is a combination of the <b>name</b> <b>server</b> and IP address.|$|R
40|$|The UniTree <b>Name</b> <b>Server</b> (UNS) is one {{of several}} servers which make up the UniTree storage system. The <b>Name</b> <b>Server</b> is {{responsible}} for mapping names to capabilities Names are generally human readable ASCII strings of any length. Capabilities are unique 256 -bit identifiers that point to files, directories, or symbolic links. The <b>Name</b> <b>Server</b> implements a UNIX style hierarchical directory structure to facilitate name-to-capability mapping. The principal task of the <b>Name</b> <b>Server</b> is to manage the directories which make up the UniTree directory structure. The principle clients of the <b>Name</b> <b>Server</b> are the FTP Daemon, NFS and a few UniTree utility routines. However, the <b>Name</b> <b>Server</b> is a generalized server and will accept messages from any client. The {{purpose of this paper is}} to describe the internal workings of the UniTree <b>Name</b> <b>Server.</b> In cases where it seems appropriate, the motivation for a particular choice of algorithm as description of the algorithm itself will be given...|$|R
2500|$|In this case, the <b>name</b> <b>server</b> {{providing}} the delegation must also provide {{one or more}} IP addresses for the authoritative <b>name</b> <b>server</b> mentioned in the delegation. This information is called glue. [...] The delegating <b>name</b> <b>server</b> provides this glue {{in the form of}} records in the additional section of the DNS response, and provides the delegation in the authority section of the response. A glue record is a combination of the <b>name</b> <b>server</b> and IP address.|$|R
25|$|Some large ISPs have {{configured}} their DNS servers {{to violate}} rules, such as by disobeying TTLs, or by indicating that a domain name {{does not exist}} just because one of its <b>name</b> <b>servers</b> does not respond.|$|E
25|$|For proper {{operation}} of its domain name resolver, a network host is configured {{with an initial}} cache (hints) of the known addresses of the root <b>name</b> <b>servers.</b> The hints are updated periodically by an administrator by retrieving a dataset from a reliable source.|$|E
25|$|Typically, such caching DNS servers also {{implement}} the recursive algorithm necessary {{to resolve a}} given name starting with the DNS root through to the authoritative <b>name</b> <b>servers</b> of the queried domain. With this function implemented in the name server, user applications gain efficiency in design and operation.|$|E
25|$|An {{authoritative}} <b>name</b> <b>server</b> is a <b>name</b> <b>server</b> {{that only}} gives answers to DNS queries from data {{that has been}} configured by an original source, for example, the domain administrator or by dynamic DNS methods, in contrast to answers obtained via a query to another <b>name</b> <b>server</b> that only maintains a cache of data.|$|R
50|$|In the {{following}} variants, the entries for the server ns.target.example would be poisoned and redirected to the attacker's <b>name</b> <b>server</b> at IP address w.x.y.z. These attacks {{assume that the}} <b>name</b> <b>server</b> for target.example is ns.target.example.|$|R
50|$|Support for the NAMESERVER {{protocol}} {{has been}} deprecated, {{and may not}} be available in the latest implementations of all UNIX operating systems. The Domain Name System (DNS) has replaced the ARPA Host <b>Name</b> <b>Server</b> Protocol and the DARPA Trivial <b>Name</b> <b>Server.</b>|$|R
25|$|This {{mechanism}} {{would place}} a large traffic {{burden on the}} root servers, if every resolution on the Internet required starting at the root. In practice caching is used in DNS servers to off-load the root servers, and as a result, root <b>name</b> <b>servers</b> actually are involved in {{only a fraction of}} all requests.|$|E
25|$|<b>Name</b> <b>servers</b> in {{delegations}} {{are identified}} by name, {{rather than by}} IP address. This means that a resolving name server must issue another DNS request {{to find out the}} IP address of the server to which it has been referred. If the name given in the delegation is a subdomain of the domain for which the delegation is being provided, there is a circular dependency.|$|E
25|$|The Internet {{maintains}} {{two principal}} namespaces, the domain name hierarchy and the Internet Protocol (IP) address spaces. The Domain Name System maintains the domain name hierarchy and provides translation services {{between it and}} the address spaces. Internet <b>name</b> <b>servers</b> and a communication protocol implement the Domain Name System. A DNS name server is a server that stores the DNS records for a domain; a DNS name server responds with answers to queries against its database.|$|E
30|$|The {{implication}} of high coresidence rate {{is that a}} failure or a DoS attack against {{the availability of the}} <b>name</b> <b>server</b> or the network hosting it impacts the availability of all of the zones hosted on it. An attack against a <b>name</b> <b>server,</b> e.g., exploiting a vulnerability in a DNS software or in the operating system can enable the attacker to take control over the <b>name</b> <b>server</b> and inject records into the zone files hosted on it. We also find that high coresidence increases loss and failures.|$|R
2500|$|RFC 4892, Requirements for a Mechanism Identifying a <b>Name</b> <b>Server</b> Instance ...|$|R
5000|$|GbDns is a compact, easy-to-install DNSSEC <b>name</b> <b>server</b> for Microsoft Windows.|$|R
25|$|Some resolvers may {{override}} TTL values, as {{the protocol}} supports caching {{for up to}} 68 years or no caching at all. Negative caching, i.e. the caching of the fact of non-existence of a record, is determined by <b>name</b> <b>servers</b> authoritative for a zone which must include the Start of Authority (SOA) record when reporting no data of the requested type exists. The value of the minimum field of the SOA record and the TTL of the SOA itself is used to establish the TTL for the negative answer.|$|E
25|$|ICANN {{publishes the}} {{complete}} list of TLDs, TLD registries, and domain name registrars. Registrant information associated with domain names is maintained in an online database accessible with the WHOIS service. For most {{of the more than}} 290 country code top-level domains (ccTLDs), the domain registries maintain the WHOIS (Registrant, <b>name</b> <b>servers,</b> expiration dates, etc.) information. For instance, DENIC, Germany NIC, holds the DE domain data. Since about 2001, most Generic top-level domain (gTLD) registries have adopted this so-called thick registry approach, i.e. keeping the WHOIS data in central registries instead of registrar databases.|$|E
25|$|The DNS {{resolver}} {{will almost}} invariably have a cache (see above) containing recent lookups. If the cache {{can provide the}} answer to the request, the resolver will return the value in the cache to the program that made the request. If the cache does not contain the answer, the resolver will send the request to one or more designated DNS servers. In the case of most home users, the Internet service provider to which the machine connects will usually supply this DNS server: such a user will either have configured that server's address manually or allowed DHCP to set it; however, where systems administrators have configured systems to use their own DNS servers, their DNS resolvers point to separately maintained <b>name</b> <b>servers</b> of the organization. In any event, the name server thus queried will follow the process outlined above, until it either successfully finds a result or does not. It then returns its results to the DNS resolver; assuming it has found a result, the resolver duly caches that result for future use, and hands the result back to the software which initiated the request.|$|E
5000|$|Camponotus maculatus hongkongensissubspecies {{name not}} listed on Hymenoptera <b>Name</b> <b>Server</b> v1.5 ...|$|R
5000|$|Authoritative <b>name</b> <b>server</b> (master and slave) {{with full}} AXFR/IXFR/DNS notify/TSIG support ...|$|R
5000|$|RFC 4892, Requirements for a Mechanism Identifying a <b>Name</b> <b>Server</b> Instance ...|$|R
2500|$|Internet service {{providers}} [...] typically provide recursive and caching <b>name</b> <b>servers</b> for their customers. In addition, many home networking routers implement DNS caches and recursors to improve efficiency {{in the local}} network.|$|E
2500|$|To provide {{resilience}} in {{the event}} of computer or network failure, multiple DNS servers are usually provided for coverage of each domain. At the top level of global DNS, thirteen groups of root <b>name</b> <b>servers</b> exist, with additional [...] "copies" [...] of them distributed worldwide via anycast addressing.|$|E
2500|$|TYPE is {{the record}} type. It {{indicates}} {{the format of}} the data and it gives a hint of its intended use. For example, the A record is used to translate from a domain name to an IPv4 address, the NS record lists which <b>name</b> <b>servers</b> can answer lookups on a DNS zone, and the MX record specifies the mail server used to handle mail for [...] a domain specified in an e-mail address.|$|E
25|$|Monolith Innovations, as {{a domain}} <b>name</b> <b>server,</b> was {{popular in the}} mid-1990s.|$|R
50|$|Place {{name and}} co-ordinates {{verified}} using GEOnet <b>Names</b> <b>Server,</b> National Geospatial-Intelligence Agency.|$|R
5000|$|GEOnet <b>Names</b> <b>Server,</b> {{a similar}} {{database}} for locations outside the United States ...|$|R
