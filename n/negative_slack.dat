24|7|Public
5000|$|... float or slack is {{a measure}} of the excess time and {{resources}} available to complete a task. It is the amount of time that a project task can be delayed without causing a delay in any subsequent tasks (free float) or the whole project (total float). Positive slack would indicate ahead of schedule; <b>negative</b> <b>slack</b> would indicate behind schedule; and zero slack would indicate on schedule.|$|E
5000|$|The slack {{associated}} with each connection {{is the difference between}} the required time and the arrival time. A positive slack s at some node implies that the arrival time at that node may be increased by s, without affecting the overall delay of the circuit. Conversely, <b>negative</b> <b>slack</b> implies that a path is too slow, and the path must be sped up (or the reference signal delayed) if the whole circuit is to work at the desired speed.|$|E
40|$|Physical {{synthesis}} optimizations {{and engineering}} change orders typically change {{the locations of}} cells, resize cells or add more cells to the design after global placement. Unfortunately, those changes usually lead to wirelength increases; thus another pass of optimizations to further improve wirelength, timing and routing congestion characteristics is required. Simple wirelength-driven detailed placement techniques could be useful in this scenario. While such techniques can help to reduce wirelength, ones without careful timing constraint considerations might degrade the timing characteristics (worst <b>negative</b> <b>slack,</b> total <b>negative</b> <b>slack,</b> etc) and/or introduce more electrical violations (exceeding maximum output load constraints and maximum input slew constraints). In this paper, we propose a new detailed placement paradigm, which use a set of pin-based timing and electrical constraints in detailed placement {{to prevent it from}} degrading timing or violating electrical constraints while reducing wirelength, thus dubbed as Hippocrates: FIRST-DO-NO-HARM optimizations. Our experimental results show great promises. By honoring these constraints, our detailed placement technique not only reduces total wirelength (TWL), but also significantly improves timing, achieving 37 % better total <b>negative</b> <b>slack</b> (TNS) ...|$|E
40|$|We {{present a}} timing and {{crosstalk}} driven router for the chip assembly task that is applied between global and detailed routing. Our new approach aims {{to process the}} crosstalk and timing constraints by ordering nets and tuning wire spacing in a quantitative way. Our graph-based optimizer preroutes wires on the global routing grids incrementally in two stages- net order assignment and space relaxation. The timing delay of each critical path is calculated taking into account interconnect coupling capacitance. The objective {{is to reduce the}} delays of critical nets with <b>negative</b> timing <b>slack</b> values, by tuning net ordering and adding extra wire spacing. It shows a remarkable 8. 4 - 25 % delay reduction for MCNC benchmarks for wire geometric ratio= 2. 0, against a 33 % delay reduction if interconnect interference disappear. ...|$|R
40|$|Transparent exopolymer {{particles}} (TEP) {{are widely}} recognized to promote sediment aggregation in eutrophic environments. Flocculation in presence of TEP of various suspended sediment concentrations of material sampled {{on the bank}} of the Cam River was quantified at the laboratory for turbulence level consistent with slack water and mid ebb conditions measured in the Cam River estuary during dry season of 2009. Stickiness and concentrations of TEP were let to naturally fluctuate by incubation (aging in the dark) for up to nine days. We found that the impact of turbulence on overall buoyancy of TEP-governed aggregation was always opposite between slack water and mid ebb conditions for any duration of incubation; always <b>negative</b> for <b>slack</b> water conditions but for 126 hours of incubation and significantly negative for mid ebb conditions but for 126 hours of incubation. Suspended sediment concentration (SSC) consistently limited aggregates buoyancy, negative or positive. We propose a conceptual model that relates measured and inferred parameters to observed hydrosedimentary processes...|$|R
40|$|Problem statement: Identifying {{critical}} {{tasks in}} a project network is easily done when task times are deterministic, but doing so under stochastic task times is problematic. The few methods that have been proposed contain serious drawbacks which lead to identifying critical tasks incorrectly, leaving project managers without the means to (1) identify and rank the most probable sources of project delays, (2) assess the magnitude of each source of schedule risk, and (3) identify which tasks represent the best opportunities for successfully addressing schedule risk? Approach: In this study we considered the problem of identifying the sources of schedule risk in a stochastic project network. We developed general expressions for determining a tasks late starting and ending time distributions. We introduced the concept of stochastic slack and develop a number of metrics that help a project manager directly identify and estimate the magnitude of sources of schedule risk. Finally, we compared critical tasks identified using the activity criticality index to those found using stochastic slack metrics. Results: We have demonstrated that a task may have non-zero probability of <b>negative</b> stochastic <b>slack</b> and that expected total slack for a task may be negative. We also found that while the activity criticality index is effective for calculating {{the probability that a}} task is on a critical path, the stochastic slack based metrics discussed in this paper are better predictors {{of the extent to which}} a delay in a task will result {{in a project}} delay. Conclusion/Recommendations: Project managers should consider using stochastic slack based metrics for assessing project risk and establishing the most likely project schedule outcomes. Given the calculation complexity associated with theoretically exact stochastic slack metrics, effective heuristics are required...|$|R
40|$|In {{this work}} we improve {{top-down}} min-cut placers in the con-text of timing closure. Using {{the concept of}} boosting factors, we adjust net weights according to net spans, so as to reduce the quadratic wirelength. Our method is generic and does not involve any timing analysis during or prior to placement. In essence, we skew the netlength distribution produced by a min-cut placer so as to decrease the number of long nets, with minimal impact on the overall wirelength. Empirically this approach does not significantly affect runtime, but reduces the worst <b>negative</b> <b>slack</b> and total <b>negative</b> <b>slack</b> of industrial benchmarks by up to 70 % compared to Capo [5] and a leading industrial placer. 1...|$|E
40|$|In this paper, MOD 16 up counter {{has been}} {{implemented}} using Cadence front end tools. Verilog RTL {{has been used}} for writing the code of counter. The functionality of counter has been tested by writing the testbench of counter and observing its output waveform. Synthesized circuit and gate level netlist is generated by the synthesis tool. It also gives area, power and timing report which is satisfactory for the current design. Finally, physical design of counter is done which includes stages like floorplanning, power planning, placement, clock tree synthesis and routing. Setup time and hold time violations have been checked after routing stage. Total <b>negative</b> <b>slack</b> and worst <b>negative</b> <b>slack</b> {{have been found to be}} zero. Total power dissipation is 11767. 597 nW and total area occupied by 13 cells of synthesized circuit is 88. 200 units...|$|E
40|$|Abstract—Through-silicon via (TSV) {{fabrication}} causes {{tensile stress}} around TSVs {{which results in}} significant carrier mobility variation in the devices in their neighborhood. Keep-out zone (KOZ) is a conservative way to prevent any devices/cells from being impacted by the TSV-induced stress. However, owing to already large TSV size, large KOZ can significantly reduce the placement area available for cells, thus requiring larger dies which negate improvement in wirelength and timing due to 3 D integration. In this paper, we study the impact of KOZ dimension on stress, carrier mobility variation, area, wirelength, and performance of 3 D ICs. We demonstrate that, instead of requiring large KOZ, 3 D-IC placers must exploit TSV stress-induced carrier mobility variation to improve the timing and area objectives during placement. We propose a new TSV stress-driven force-directed 3 D placement that consistently provides placement result with, on average, 21. 6 % better worst <b>negative</b> <b>slack</b> (WNS) and 28. 0 % better total <b>negative</b> <b>slack</b> (TNS) than wirelength-driven placement. I...|$|E
40|$|The {{objective}} {{of this research is}} to know the effect of Budgetary Participation, Asymmetry Information, Budget Emphasis and Comitment Organization to budgetary slack at SKPD govermental of Bengkulu City. This research used Quesioner in data collection. The sampling method used in this study is porposive sampling of structural echelon III and IV in unit of government of Bengkulu city that are certainly involved in the budgeting process. The result showed that {{at the beginning of the}} study hypothesis was rejected because of budgetary participation has a positive effect on budgetary slack. This means more higher budgeting participation in govermental of Bengkulu city, budgetary slack is also will be increasing. As for the other hypothesis is accepted, because the second hyphothesis research results showed the information asymmetry has a positive effect on budgetary slack. Similary for the third hypothesis is also accepted, where the budget emphasis has a positive impact on budgetary slack. The fourth hypothesis is accepted, because the results showed that comitment organization has <b>negative</b> on budgetary <b>slack.</b> Based on F test the fifth hypothesis is also accepted which are budgetary participation, asymmetry information, budget emphasis and comitment organization are simultaneous effect on budgetary slack...|$|R
40|$|AbstractDue to {{the nature}} of coal bed, slack coal {{production}} is inevitable in gas recovery sby water drainage. When coalbed methane (CBM) wells are reentered after low energy exploitation and shut-in, the <b>negative</b> effect of <b>slack</b> coal production on productivity of CBM is irreversible. In this paper, the CBM occurrence characteristics and multi-lateral horizontal well trajectory in the Qinshui Basin, Shanxi Province, were analyzed. In the multi-lateral horizontal wells, the expected gas production rate could not be reached and the production rate after shut-in maintenance could not restore to the level before shut-in. The reason for these issues is that migration pathways in the reservoirs are blocked by slack coal deposits, while formation water and slack coal deposit accumulated at the troughs of horizontal sections enlarge the resistance for gas to flow into the bottom hole. Furthermore, three key technologies to deal with slack coal blockage were proposed. Firstly, CBM horizontal well trajectory should follow the principle of keeping the wellbores smooth and updip instead of being “wavy”, on the premise of guaranteeing CBM drilling rate. Secondly, the cavities of production wells, as an important part of multi-lateral horizontal wells, are capable of settling sand, and can be used for gas–liquid–solid separation. And thirdly, a tree-like horizontal well with its main hole set on stable seam top or floor, provides a stable well flushing passage for coal powder. This research provides a useful attempt in solving the problem of slack coal production in gas recovery by water drainage...|$|R
40|$|This {{dissertation}} {{is comprised}} of three essays that seek to enlighten the conditions that determine whether investments with highly variable potential payoffs serve as legitimate strategic investments or manifestations of agency problems. The first essay focuses on organizational slack, which may be beneficial to firms attempting to be innovators, but harmful to firms with agency problems. It is argued that exogenous industry uncertainty will magnify both the positive and <b>negative</b> manifestations of <b>slack.</b> Empirical tests confirm that slack is a critical moderator of both investment behavior and firm value for firms attempting to be innovators, and that uncertainty magnifies the value of slack. However, results regarding the potential agency costs of slack did not generally support the hypotheses. The second essay focuses on growth options, which {{can be an important}} factor in influencing investment decisions. It is argued that growth options will be most valuable to firms competing on the basis of innovation, and to firms already operating in related industries. However, since {{it is very difficult to}} precisely calculate the value of real options, it will be difficult for outsiders to evaluate the wisdom of investments in growth options. Thus, although investments in growth options can potentially have great strategic value, they may also serve as convenient vehicles for over-investment in firms with agency problems. Empirical tests confirm that these firm level characteristics influence not only the probability of investing in growth options, but also the market 2 ̆ 7 s reaction to those investments. The third essay argues that growth options will dissuade firms from exiting industries in which they compete. Consistent with the second essay, it is argued that growth options will be more valuable to firms competing on the basis of innovation, and hence these firms will be less inclined to exit an industry with valuable growth options. However, in firms prone to agency problems, managers can easily exaggerate the value of growth options in order to justify remaining in an industry even when exit is warranted. Empirical tests confirm that both of these types of firms are more sensitive to the dissuasive influence of growth options on exit. ...|$|R
40|$|Global {{interconnects}} are a bottleneck in today’s high-performance deep sub-micron designs. In this paper, {{we propose}} a modification to the top-down min-cut placement algorithm {{to reduce the}} number of global interconnects. Our method is generic and does not involve any timing analysis during or prior to placement. In essence, we skew the netlength distribution produced by a min-cut placer so as {{to reduce the number}} of long nets, with minimal impact on the overall wirelength. Empirically this approach has a negligible impact on placement runtime, but leads to a significant reduction in the number of global interconnects. The fewer interconnects translate to about 25 % savings in the number of buffers required for signal integrity and electrical sanity, and also improve timing as measured by the worst <b>negative</b> <b>slack</b> and total <b>negative</b> <b>slack</b> of industrial benchmarks by up to 70 % compared to traditional min-cut placement flow (e. g., Capo 8. 7 [9]) 1. I...|$|E
40|$|As we {{increasingly}} use {{advanced technology}} nodes to design integrated circuits (ICs), physical designers and electronic design automation (EDA) providers are facing multiple challenges, firstly, to honor all physical constraints coming with cutting-edge technologies and, secondly, to achieve expected quality of results (QoR). An advanced technology {{should be able}} to bring better performances with minimum cost whatever the complexity. A high effort to develop out-of-the-box optimization techniques is more than needed. In this paper, we will introduce a new routing technique, with the objective to optimize timing, by only acting on routing topology, and without impacting the IC Area. In fact, the self-aligned double patterning (SADP) technology offers an important difference on layer resistance between SADP and No-SADP layers; this property will be taken as an advantage to drive the global router to use No-SADP less resistive layers for critical nets. To prove the benefit on real test cases, we will use Mentor Graphics’ physical design EDA tool Nitro-SoC™ and several 7 nm technology node designs. The experiments show that worst <b>negative</b> <b>slack</b> (WNS) and total <b>negative</b> <b>slack</b> (TNS) improved up to 13 % and 56 %, respectively, compared to the baseline flow...|$|E
40|$|Double {{patterning}} lithography (DPL) is {{a likely}} resolution enhancement technique for IC production in 32 nm and below technology nodes. However, DPL {{gives rise to}} two independent, uncorrelated distributions of linewidth on a chip, resulting in a ‘bimodal ’ linewidth distribution {{and an increase in}} performance variation. [13] suggested that new physical design mechanisms could reduce harmful covariance terms that contribute to this performance variation. In this paper, we propose new bimodal-aware timing analysis and optimization methods to improve timing yield of standardcell based designs that are manufactured using DPL. Our first contribution is a DPL-aware approach to timing modeling, based on detailed analysis of cell layouts. Our second contribution is an ILP-based maximization of ‘alternate ’ mask coloring of instances in timing-critical paths, to minimize harmful covariance and performance variation. Third, we propose a dynamic programming-based detailed placement algorithm that solves mask coloring conflicts and can be used to ensure “double patterning correctness ” after placement or even after detailed routing, while minimizing the displacement of timing-critical cells with manageable ECO impact. With a 45 nm library and open-source design testcases, our timing-aware recoloring and placement optimizations together achieve up to 232 ps (resp. 36. 22 ns) reduction in worst (resp. total) <b>negative</b> <b>slack,</b> and 78 % (resp. 65 %) reduction in worst (resp. total) <b>negative</b> <b>slack</b> variation. 1...|$|E
40|$|Grid-warping i s {{a recent}} {{placement}} strategy {{based on a}} novel physical analogy: rather than move the gates to optimize their location, it elas-tically deforms {{a model of the}} 2 -D chip surface on which the gates have been coarsely placed via a standard quadratic solve. In this pa-per, we introduce a timing-driven gnd-warping formulation that in-corporates slack-sensitivity-baed net weighting. Given inevitable concerns about wirefength and runtime degradation in any timing-driven scheme, we also incorporate a more efficient net model and an integrated local improvement (“rewarping”) step. An implementation ofthese ideas, WARP 2, can improve worst-case <b>negative</b> <b>slack</b> by 37 % on average, with very modest increases in wirelength and runtime...|$|E
40|$|Abstract — Spare cells {{rewiring}} is {{a technique}} used to fix defects or deficiencies after the placement stage. It is traditionally done by manual work but becomes extremely hard nowadays. In this paper, we propose a spare cells selection algorithm consisting of two phases to optimize timing of the circuit by rewiring spare cells. In the first phase, we apply gate sizing and buffer insertion to all timing violated paths to fix timing violations. In the second phase we further fix timing violations by extracting timing critical parts and applies technology remapping to them. Experimental results based on five industrial benchmarks show that our algorithm can fix up to 99. 82 % of the total <b>negative</b> <b>slack.</b> The runtime is very short and linear to the gate count. The performance proves that our algorithm is efficient and effective. I...|$|E
40|$|Abstract—The {{impact of}} {{physical}} synthesis on design performance is increasing as process technology scales. Current physical synthesis flows generally perform {{a series of}} individual netlist transformations based on local timing conditions. However, such optimizations lack sufficient perspective or scope to achieve timing closure in many cases. To address these issues, we develop an integrated transformation system that performs multiple optimizations simultaneously on larger design partitions than existing approaches. Our system, SPIRE, combines physically-aware register retiming, along with a novel form of cloning and register placement. SPIRE also incorporates a placement-dependent static timing analyzer (STA) with a delay model that accounts for buffering and is suitable for physical synthesis. Empirical results on 45 nm microprocessor designs show 8 % improvement in worstcase slack and 69 % improvement in total <b>negative</b> <b>slack</b> after an industrial physical synthesis flow was already completed. I...|$|E
40|$|Abstract—A {{methodology}} {{is proposed}} {{to exploit the}} interdependence between setup- and hold-time constraints in static timing analysis (STA). The methodology consists of two phases. The first phase includes the interdependent characterization of sequential cells, resulting in multiple constraint pairs. The second phase includes an efficient algorithm that exploits these multiple pairs in STA. The methodology improves accuracy by removing optimism and reducing unnecessary pessimism. Furthermore, the tradeoff between setup and hold times is exploited to significantly reduce timing violations in STA. These benefits are validated using industrial circuits and tools, exhibiting up to 53 % {{reduction in the number}} of constraint violations as well as up to 48 % reduction in the worst <b>negative</b> <b>slack,</b> which corresponds to a 15 % decrease in the clock period. Index Terms—Constraint characterization, hold time, library characterization, setup–hold interdependence, setup time, static timing analysis (STA), timing constraint, timing violation. I...|$|E
40|$|Net {{weighting}} {{is a key}} {{technique in}} large scale timing driven placement, which {{plays a crucial role}} for deep submicron physical synthesis and timing closure. A popular way to assign net weight is based on the slack of the nets, trying to minimize the worst <b>negative</b> <b>slack</b> (WNS) for the entire circuit. While WNS is an important optimization metric, another figure of merit (FOM), defined as the total slack difference compared to a certain slack threshold for all timing end points, is of equivalent importance to measure the overall timing closure result for highly complex modern ASIC and microprocessor designs. In this paper, we perform a comprehensive analysis of the slack and FOM sensitivities to the net weight, and propose a new net weighting scheme based on the slack and FOM sensitivities. Such sensitivity analysis implicitly takes potential physical synthesis effect into consideration. Experiment results on a set of industrial circuits are promising for both stand-alone timing driven placement and physical synthesis afterwards. Categories and Subject Descriptor...|$|E
40|$|The clock {{trees of}} {{high-performance}} synchronous circuits have many clock logic cells (e. g., clock gating cells, multiplexers and dividers) {{in order to}} achieve aggressive clock gating and required performance across a wide range of operating modes and conditions. As a result, clock tree structures have become very complex and difficult to optimize with automatic clock tree synthesis (CTS) tools. In advanced process nodes, CTS becomes even more challenging due to on-chip variation (OCV) effects. In this paper, we present a new CTSmethodology that optimizes clock logic cell placements and buffer insertions in the top level of a clock tree. We formulate the top-level clock tree optimization problem as a linear program that minimizes a weighted sum of timing slacks, clock uncertainty and wirelength. Experimental results in a commercial 28 nm FDSOI technology show that our method can improve post-CTS worst <b>negative</b> <b>slack</b> across all modes/corners by up to 320 ps compared to a leading commercial provider’s CTS flow. 1...|$|E
40|$|In {{the modern}} deep-submicron Very Large Integrated Circuit(VLSI) design flow intercon- nect delays are {{becoming}} major limiting factor for timing closure. Traditional placement algorithms such as routability-driven placement (improves routability) and wirelength- driven placement (reduces total wirelength) {{are no longer}} sufficient to close timing. To this end, timing-driven placement {{plays a crucial role}} in reducing the interconnect delay through timing critical paths (paths with timing violations/negative slacks) of the design and thereby achieving specific performance/clock frequency. In the placement flow, timing information about the design can be incorporated during global placement and/or incremental/detailed placement. Although, over the years, there has been significant advances in the quality of the global placement, there is a growing need for high performance incremental timing-driven placement {{due to the lack of}} accurate interconnect information during global placement. Moreover, incremental timing-driven placement is essential to recover timing while preserving the other optimization objectives such as total wirelength, routing congestion, and so forth which are optimized at the early stages of the design flow. This thesis proposes a simple, yet efficient, incremental timing-driven placement algo- rithm that seeks to find optimized locations for standard cells so that the total <b>negative</b> <b>slack</b> of the design can be maximized. Our algorithm consists two stages: (1) Global Move which positions standard cells inside a critical bounding box to eliminate timing violations on timing critical nets; and (2) Local Move which provides further timing improvement by finely adjusting the current locations of the standard cells within a local region. We evaluate our algorithm using ICCAD- 2014 timing-driven placement contest bench- marks. The results show that, on average, our technique eliminates 94 % and 30 % of the late and early total negative slacks, respectively, and, 82 % and 27 % of the late and early worst negative slacks, respectively, under short and long displacement constraints. The 1 st-place team of the contest improves late and early total negative slacks by 90 % and 39 %, respectively, and improves late and early worst <b>negative</b> <b>slack</b> by 76 % and 32 %, re- spectively. Taking into account both timing violation improvement and the placement quality (i. e., other objectives), on average, we outperform the 1 st-place team by 3 % in terms of the ICCAD- 2014 contest quality score and our technique is 4. 6 × faster in terms of runtime...|$|E
40|$|Abstract — Net {{weighting}} {{is a key}} {{technique in}} timing driven placement (TDP), which {{plays a crucial role}} for deep submiron VLSI physical synthesis and timing closure. A popular way to assign net weight is based on its slack, such that the worst <b>negative</b> <b>slack</b> (WNS) of the entire circuit may be minimized. While WNS is an important optimization metric, another figure of merit (FOM), defined as the total slack difference compared to a certain slack threshold for all timing end points, is of equivalent importance to measure the overall timing closure result for highly complex modern ASIC and microprocessor designs. Moreover, to optimally assign net weight for timing closure, the effect of net weighting on timing should be carefully studied. In this paper, we perform a comprehensive analysis of the wire length, slack and FOM sensitivities to the net weight, and propose a new net weighting scheme based on those sensitivities. Such sensitivity analysis implicitly takes potential physical synthesis effect into consideration. The experiments on a set of industrial circuits show promising results for both stand-alone timing driven placement and physical synthesis afterwards...|$|E
40|$|Linear {{programming}} (LP) based {{methods are}} attractive for solving the placement problem {{because of their}} ability to model Half-Perimeter Wirelength (HPWL) and timing. However, it has been technically difficult to model overlaps in LP. This difficulty in modeling overlaps restricted the domain of LP-based methods to incremental placers, where LP is used to calculate the optimal locations of a small subset of cells with no regard to overlaps. In this paper, we enlarge the scope of LP-based methods from just operating on a small subset of cells to operating on all cells of a functional block circuit. We show how to model, reduce and prevent overlaps in LP-based placement flows. We use our ideas to construct (1) a global optimal whitespace allocator, and (2) a global overlap remover and cell spreader. We also modify our methods to fit in a timing-driven placement flow. Compared to our default industrial flow, our results show an improvement by an average of 7. 64 % in wirelength, and by an average of 21 % in total <b>negative</b> <b>slack.</b> Furthermore, we conduct a benchmarking study, where we surprisingly show that academic placers fail to consistently produce good results on relatively small functional blocks...|$|E
40|$|Timing-driven {{placement}} is {{a critical}} step in nanometerscale physical synthesis. To improve design timing on a global scale, net-weight based global timing-driven placement is a commonly used technique. This paper shows that such an approach can improve timing, but often degrades wire length and routability. Another problem with existing timing-driven placers is inconsistencies {{in the definition of}} timing closure. Approaches using linear programming are forced to make assumptions about the timing models that simplify the problem. To truly do timing-driven placement, the placer must be able to make queries to a real timing analyzer with incremental capabilities. This paper describes an incremental timing-driven placer called ITOP. Using accurate timing from an industrial static timer, ITOP integrates incremental timing closure optimizations like buffering and repowering within placement to improve design timing without degrading wire length and routability. Experimental results on a set of optimized industrial circuit netlists show that ITOP significantly outperforms conventional net-weight based timing-driven placement. In particular, on average, it obtains an improvement of over 47. 45 %, 9. 88 % and 5 % in the worst slack, total <b>negative</b> <b>slack</b> and wire length as compared to the conventional flow...|$|E
40|$|Spare cells {{rewiring}} is {{a technique}} used to fix defects or deficiencies after the placement stage. It is traditionally done by manual work but becomes extremely hard nowadays. In this thesis, we propose the first spare cells selection algorithm consisting of two phases to optimize timing of the circuit by rewiring spare cells. In the first phase, we apply gate sizing and buffer insertion to all timing violated paths to fix timing violations. In the second phase we further fix timing violations by extracting timing critical parts and apply technology remapping to them. Ex-perimental results based on five industrial benchmarks show that our algorithm can fix up to 99. 82 % of the total <b>negative</b> <b>slack,</b> and the runtime is very short. The experimental results show that our algorithm is efficient and effective. ii Acknowledgements First, I {{would like to thank}} my thesis advisor, Dr. Yao-Wen Chang, for his guidance in the past two years. His tireless instruction leads to my achievement. I have also learned lots abilities about technical researching, specialized presentation, academic discussion and survey methodology. He also provides plenty of suggestions and encouragement when I was pursuing my master degree. The success of this thesis is totally owing to him. Second, I want to thank Mr. Jyh-Herng Wang and Mr. Wang-Jin Chen. They propose this research topic and help me very much. Third, I also want to express my appreciation to all members of the Electroni...|$|E
40|$|Now days {{a number}} of {{processors}} are available with a lot kind of feature from different industries. A processor with similar kind of architecture of the current processors only missing the memory stuffs like the RAM and ROM has been designed here {{with the help of}} Verilog style of coding. This processor contains architecturally the program counter, instruction register, ALU, ALU latch, General Purpose Registers, control state module, flag registers and the core module containing all the modules. And a test module is designed for testing the processor. After the design of the processor with successful functionality, the processor is synthesized with 180 nm technology. The synthesis is performed with the data path optimization like the selection of proper adders and multipliers for timing optimization in the data path while the ALU operations are performed. During synthesis {{how to take care of}} the worst <b>negative</b> <b>slack</b> (WNS), how to include the clock gating cells, how to define the cost and path groups etc. have been covered. After the proper synthesis we get the proper net list and the synthesized constraint file for carrying out the physical design. In physical design the steps like floor-planning, partitioning, placement, legalization of the placement, clock tree synthesis, and routing etc. have been performed. At all the stages the static timing analysis is performed for the timing meet of the design for better performance in terms of timing or frequency. Each steps of physical design are discussed with special effort towards the concepts behind the step. Out of all the steps of physical design the clock tree synthesis is performed with some improvement in the performance of the clock tree by creating a symmetrical clock tree and maintaining more common clock paths. A special algorithm has been framed for creating a symmetrical clock tree and thereby making the power consumption of the clock tree low...|$|E
40|$|Abstract — High {{performance}} circuits {{are facing}} increasingly severe signal integrity problems due to crosstalk noise and crosstalk noise awareness {{has become an}} integral part of static timing analysis (STA). Existing crosstalk noise aware STA methods compute noise induced delay uncertainty on a net by net basis and in a pessimistic way, without considering the overlap bounds of the victim and aggressor timing windows and realistic delay impact on early and late signal arrival times. Since crosstalk induced delay on indivudial nets contribute cumulatively on data and clock paths, even small amounts of pessimism in computation can add up to produce several unrealistic timing violations. Unlike glitch noise analysis where noise often attenuates during propagation, quality of delay noise analysis is severely affected by any pessimism in noise estimation and can unnecessarily cost valuable silicon and design resources for fixing unreal violations. In this paper, we propose two temporal techniques to reduce pessimism in crosstalk noise aware STA. The first method, “effective delay noise”, is a net based method where the exact overlap points of victim and aggressor timing windows are considered to obtain the part of delay noise that actually impacts early and late signal arrival times. The second method, “path based delay noise”, is a path based method where the reduced arrival uncertainty of the nets of a given path are utilized for pessimism reduction. We also propose a novel “uncertainty propagation ” technique as part of the second method, which results in an iteration free crosstalk noise aware STA of the path with significantly reduced pessimism. The two techniques are combined in a proposed methodology that is compatible with existing industrial static timing analyzers with very little computational overhead compared to the traditional noise aware STA and a significant improvement in eliminating unreal violations. The proposed techniques resulted in 77 % reduction of worst case <b>negative</b> <b>slack</b> and 57 % reduction in the number of failing paths in the setup analysis of a 90 nm industrial design. I...|$|E
40|$|Li, Liang. Thesis (M. Phil.) [...] Chinese University of Hong Kong, 2009. Includes bibliographical {{references}} (leaves 57 - 61). Abstract also in Chinese. Abstract [...] - p. iAcknowledgement [...] - p. ivChapter 1 [...] - Introduction [...] - p. 1 Chapter 1. 1 [...] - Background [...] - p. 1 Chapter 1. 1. 1 [...] - Partitioning [...] - p. 1 Chapter 1. 1. 2 [...] - Floorplanning and Placement [...] - p. 2 Chapter 1. 1. 3 [...] - Routing [...] - p. 2 Chapter 1. 1. 4 [...] - Compaction [...] - p. 3 Chapter 1. 2 [...] - Motivations [...] - p. 3 Chapter 1. 3 [...] - Problem Formulation [...] - p. 4 Chapter 1. 3. 1 [...] - Properties of OARSMT [...] - p. 4 Chapter 1. 4 [...] - Progress on the Problem [...] - p. 4 Chapter 1. 5 [...] - Contributions [...] - p. 5 Chapter 1. 6 [...] - Thesis Organization [...] - p. 6 Chapter 2 [...] - Literature Review on OARSMT [...] - p. 8 Chapter 2. 1 [...] - Introduction [...] - p. 8 Chapter 2. 2 [...] - Previous Methods [...] - p. 9 Chapter 2. 2. 1 [...] - OARSMT [...] - p. 9 Chapter 2. 2. 2 [...] - Shortest Path Problem with Blockages [...] - p. 13 Chapter 2. 2. 3 [...] - OARSMT with Delay Minimization [...] - p. 14 Chapter 2. 2. 4 [...] - OARSMT with Worst <b>Negative</b> <b>Slack</b> Maximization [...] - p. 14 Chapter 2. 3 [...] - Comparison [...] - p. 15 Chapter 3 [...] - Heuristic Method [...] - p. 17 Chapter 3. 1 [...] - Introduction [...] - p. 17 Chapter 3. 2 [...] - Our Approach [...] - p. 18 Chapter 3. 2. 1 [...] - Handling of Multi-pin Nets [...] - p. 18 Chapter 3. 2. 2 [...] - Propagation [...] - p. 20 Chapter 3. 2. 3 [...] - Backtrack [...] - p. 23 Chapter 3. 2. 4 [...] - Finding MST [...] - p. 26 Chapter 3. 2. 5 [...] - Local Refinement Scheme [...] - p. 26 Chapter 3. 3 [...] - Experimental Results [...] - p. 28 Chapter 3. 4 [...] - Summary [...] - p. 28 Chapter 4 [...] - Exact Method [...] - p. 32 Chapter 4. 1 [...] - Introduction [...] - p. 32 Chapter 4. 2 [...] - Review on GeoSteiner [...] - p. 33 Chapter 4. 3 [...] - Overview of our Approach [...] - p. 33 Chapter 4. 4 [...] - FST with Virtual Pins [...] - p. 34 Chapter 4. 4. 1 [...] - Definition of FST [...] - p. 34 Chapter 4. 4. 2 [...] - Notations [...] - p. 36 Chapter 4. 4. 3 [...] - Properties of FST with Virtual Pins [...] - p. 36 Chapter 4. 5 [...] - Generation of FST with Virtual Pins [...] - p. 46 Chapter 4. 5. 1 [...] - Generation of FST with Two Pins [...] - p. 46 Chapter 4. 5. 2 [...] - Generation of FST with 3 or More Pins [...] - p. 48 Chapter 4. 6 [...] - Concatenation of FSTs with Virtual Pins [...] - p. 50 Chapter 4. 7 [...] - Experimental Results [...] - p. 52 Chapter 4. 8 [...] - Summary [...] - p. 53 Chapter 5 [...] - Conclusion [...] - p. 55 Bibliography [...] - p. 6...|$|E

