255|224|Public
5|$|The Windows Push <b>Notification</b> <b>Service</b> (WNS) was {{designed}} as a successor to the Microsoft Push <b>Notification</b> <b>Service</b> (MPNS), which was only supported natively on the Windows Phone 8 Operating System. Developers can still use the MPNS on apps that are installed on newer versions of Windows Mobile (Windows Phone 8 or Windows Phone 8.1), but only if the Windows application was already registered to use the MPNS and has been converted to a Microsoft Silverlight application and modified to re-target the new platform.|$|E
5|$|Miamisburg-based Teradata is the world's largest data {{warehousing}} and enterprise analytics company, and Richfield-based OEConnection is the world's largest online automotive parts exchange, or OPSX. One Call Now, headquartered in Troy, is the nation's largest information <b>notification</b> <b>service</b> {{and part of}} INC Magazine's fastest-growing companies list {{three years in a}} row, while OneCommand, headquartered in Mason, is the nation's leading integrated and automated, personalized communications firm.|$|E
5|$|The {{architecture}} of the Windows Push <b>Notification</b> <b>Service</b> {{is similar to that}} of its predecessor, in that it consists of servers and interfaces that generate, maintain, store, and authenticate unique identifiers (called Channel URI Identifiers) for all devices that register to use the service. When a device enrolls to receive data and notification information using the WNS, it first sends a device registration request to WNS network. The WNS network acknowledges the request, and responds with the device's unique Channel URI Identifier. Typically, the device will then send its identifier to a server owned by the developer so that it can be stored and used for sending notifications. When the app developer wishes to transmit a notification or other WNS data to the device, it will transmit a POST request to the WNS network. The network will acknowledge and authenticate the request. If the authentication succeeds, the data to be transmitted is enqueued and then sent to the device from the WNS network using the Channel URI Identifier.|$|E
5000|$|When <b>notification</b> <b>services</b> {{are used}} for {{emergency}} notification, they are often called Emergency Mass <b>Notification</b> <b>Services</b> (EMNS). <b>Notification</b> <b>services</b> and emergency <b>notification</b> <b>services</b> can provide {{a wide range of}} options, including: ...|$|R
50|$|Finally, <b>Notification</b> <b>Services</b> can {{communicate}} {{with a wide variety}} of Microsoft, third-party, and custom-built event providers and delivery protocols, enabling <b>Notification</b> <b>Services</b> to communicate with existing systems in heterogeneous environments.|$|R
25|$|Originally {{introduced}} as a post-release add-on for SQL Server 2000, <b>Notification</b> <b>Services</b> was bundled {{as part of}} the Microsoft SQL Server platform for the first and only time with SQL Server 2005. SQL Server <b>Notification</b> <b>Services</b> is a mechanism for generating data-driven notifications, which are sent to <b>Notification</b> <b>Services</b> subscribers. A subscriber registers for a specific event or transaction (which is registered on the database server as a trigger); when the event occurs, <b>Notification</b> <b>Services</b> can use one of three methods {{to send a message to}} the subscriber informing about the occurrence of the event. These methods include SMTP, SOAP, or by writing to a file in the filesystem. <b>Notification</b> <b>Services</b> was discontinued by Microsoft with the release of SQL Server 2008 in August 2008, and is no longer an officially supported component of the SQL Server database platform.|$|R
500|$|Windows Push <b>Notification</b> <b>Service</b> (commonly {{referred}} to as Windows <b>Notification</b> <b>Service</b> or WNS) is a <b>notification</b> <b>service</b> developed by Microsoft for all devices running Microsoft Windows platforms. It allows for developers to send push data ("toast" [...] and [...] "tile" [...] updates) to Windows and Universal Windows Platform [...] applications which implement the feature. Designed as a successor to the Microsoft Push <b>Notification</b> <b>Service,</b> it was first supported on Windows 8 and subsequently on Windows Phone 8.1 upon its release.|$|E
50|$|Amazon Simple <b>Notification</b> <b>Service</b> (SNS) is a <b>notification</b> <b>service</b> {{provided}} {{as part of}} Amazon Web Services. It provides a low-cost infrastructure for the mass delivery of messages, predominantly to mobile users.|$|E
5000|$|In 2003, Mantara commercialised Elvin, a {{light-weight}} event <b>notification</b> <b>service.</b>|$|E
40|$|Abstract — Mobile <b>notification</b> <b>services</b> {{typically}} do not {{adapt to a}} user’s physical context {{in terms of the}} mode of communication used for output. Implementations of these services are also not generally extensible and support only the service for which they were designed. This paper discusses {{the development and implementation of}} a model for adaptive mobile <b>notification</b> <b>services</b> which includes multimodality and context awareness and is extensible. Index Terms — Context awareness, Mobile <b>notification</b> <b>services,</b> Adaptive model...|$|R
50|$|To design, {{code and}} test {{all of the}} {{components}} {{that make up a}} robust <b>Notification</b> <b>Services</b> Application-such as <b>notification</b> scheduling, failure detection, retry logic, time zone management, notification grouping, and queue management, adding <b>Notification</b> <b>Services</b> to software applications can be a daunting task.|$|R
40|$|Distributed <b>notification</b> <b>services</b> allow {{consumers}} and publishers of notifications {{to interact with}} different <b>notification</b> <b>services.</b> However, such a distributed infrastructure {{makes it difficult to}} share notifications between consumers when consumers are allowed to specify Quality of Service levels. In this paper, we present a chained negotiation engine, enabling distributed <b>notification</b> <b>services</b> to support negotiation and to reuse existing subscriptions. We demonstrate the benefit to the system as a whole by reducing load on service providers and enabling content to be shared. ...|$|R
50|$|Apple Push <b>Notification</b> <b>Service</b> (commonly {{referred}} to as Apple <b>Notification</b> <b>Service</b> or APNs) is a platform <b>notification</b> <b>service</b> created by Apple Inc. that enables third party application developers to send notification data to applications installed on Apple devices. The notification information sent can include badges, sounds, newsstand updates, or custom text alerts. It was first launched with iOS 3.0 on June 17, 2009. APNs support for local applications was later added to the Mac OS X API beginning {{with the release of}} Mac OS X 10.7 ("Lion"). Support for website notifications was later added with the release of Mac OS X 10.9 ("Mavericks").|$|E
5000|$|Apple Push <b>Notification</b> <b>Service</b> - Send over-the-air alerts, such as news updates {{or social}} {{networking}} status changes, using Apple's Push <b>Notification</b> <b>service</b> to applications that support APNS. APNS allows Mac OS X Lion and iOS clients to receive push changes to {{items such as}} mail, calendar and contacts from a configured OS X Lion Server.|$|E
5000|$|... toast {{notifications}} sent by apps and app developers {{using the}} Microsoft Push <b>Notification</b> <b>Service.</b>|$|E
5000|$|... several {{messaging}} technologies, specifically <b>Service</b> Broker and <b>Notification</b> <b>Services</b> ...|$|R
5000|$|SQL Server <b>Notification</b> <b>Services</b> is a {{platform}} developed by Microsoft {{for the development}} and deployment of notification applications based on SQL Server Technology and the Microsoft [...]NET Framework. <b>Notification</b> <b>Services</b> offers a scalable server engine on which to run notification applications, with multi-server capability-providing flexibility and scalability for deploying applications.|$|R
40|$|Abstract. Integrating {{context-aware}} <b>notification</b> <b>services</b> to {{ubiquitous computing}} systems aims at {{the provision of}} the right information to the right users, at the right time, in the right place, and on the right device, and constitutes a significant step towards {{the realization of the}} Ambient Intelligence vision. In this paper, we present FlexConf, a semantics-based system that supports location-based, personalized <b>notification</b> <b>services</b> for the assistance of conference attendees. Its special features include an ontology-based representation model, rule-based context-aware reasoning, and a novel positioning system for indoor environments. Key words: context awareness, location-based <b>services,</b> <b>notification</b> <b>services,</b> context ontology, rule-based reasoning...|$|R
5000|$|Amazon Simple <b>Notification</b> <b>Service</b> (SNS) {{provides}} a hosted multi-protocol [...] "push" [...] messaging for applications.|$|E
50|$|This model {{uses the}} OGC Web <b>Notification</b> <b>Service</b> to send update {{notifications}} to registered clients.|$|E
50|$|The <b>notification</b> <b>service</b> {{equipment}} may {{be owned}} by the sender, or may owned by a service provider.|$|E
50|$|SMSDirect, {{founded in}} 2008, focuses on SMS <b>notification</b> <b>services.</b> It owns a {{complete}} set of tools necessary for providing SMS <b>notification</b> <b>services,</b> from web interface for independent work and working through a personal account manager up to an API for integration with internal systems (HTTP/XML API, SMPP 3.4). Today, the company provides integrated direct <b>notification</b> and advertising <b>services</b> using various technological channels, such as voice (IVR system), SMS, e-mail, USSD.|$|R
5000|$|Change {{detection}} and <b>notification</b> <b>services</b> {{can be categorized}} by the software architecture they use. Two principal approaches can be distinguished: ...|$|R
50|$|<b>Notification</b> <b>Services</b> was {{designed}} {{to ease the pain}} of developing and deploying notification applications that generate personalized, timely information to subscribers.|$|R
50|$|Pass {{changes can}} be pushed via the Apple Push <b>Notification</b> <b>Service</b> by the pass provider, or {{manually}} updated by the user themselves.|$|E
5000|$|Elvin {{has left}} the building: A publish/subscribe <b>notification</b> <b>service</b> with quenching, 1997, Bill Segall and David Arnold, Proceedings AUUG97, Brisbane Australia, September 1997.|$|E
50|$|The Windows Push <b>Notification</b> <b>Service</b> (WNS) was {{designed}} as a successor to the Microsoft Push <b>Notification</b> <b>Service</b> (MPNS), which was only supported natively on the Windows Phone 8 Operating System. Developers can still use the MPNS on apps that are installed on newer versions of Windows Mobile (Windows Phone 8 or Windows Phone 8.1), but only if the Windows application was already registered to use the MPNS and has been converted to a Microsoft Silverlight application and modified to re-target the new platform.|$|E
50|$|PENS (Package Exchange <b>Notification</b> <b>Services)</b> is {{a content}} update {{notification}} protocol standard {{created by the}} AICC (Aviation Industry Computer-Based Training Committee).|$|R
40|$|Event <b>notification</b> <b>services</b> {{are used}} in various {{applications}} such as digital libraries, stock tickers, traffic control, or facility management. However, to our knowledge, a common semantics of events in event <b>notification</b> <b>services</b> has not been defined so far. In this paper, we propose a parameterized event algebra which describes the semantics of composite events for event notification systems. The parameters serve {{as a basis for}} flexible handling of duplicates in both primitive and composite events. 1...|$|R
50|$|Some {{may argue}} that <b>notification</b> <b>services</b> have become {{integral}} to open tenders and the process. <b>Notification</b> <b>services</b> are often the main form of communication to the client that a new tender is available. People closely linked with the providing end user, may receive communication directly, but {{with the growth of}} the notification industry, this is becoming unlikely. Procurement software sometimes incorporates the tendering data into packages to make the information more accessible for suppliers interested in various tenders.|$|R
50|$|This release added UDDI Integration, Clustering Support, {{business}} Profile, configuration profiles, binary document support, Policy support Extensions, Load Documents Wizard, Binary Document Support, Eclipse User Interface, email <b>notification</b> <b>Service.</b>|$|E
5000|$|... 4. The MIHF in {{the mobile}} device determines {{that the best}} signal {{strength}} comes from a WiMAX access point, and passes that information to its IP layer, using the Event <b>Notification</b> <b>Service.</b>|$|E
50|$|In Windows 2000, Microsoft {{introduced}} balloon help-like passive pop-up notifications, {{tied to the}} notification area of {{the task}} bar. Notifications get queued when user is away or screensaver is running, and get shown when the user resumes activity. They remain on screen for nine seconds while fading out if the user appears to ignore them. Microsoft also adopted similar notifications for its other software such as Windows Phone using the Microsoft Push <b>Notification</b> <b>Service,</b> Internet Explorer 7 and later, Microsoft Outlook, Microsoft Security Essentials, as well as Windows 8 and Windows 10 using the Windows <b>Notification</b> <b>Service.</b>|$|E
50|$|The <b>notification</b> <b>services</b> {{are also}} useful for {{developers}} to implement their own software applications. Calendar reminders and change events are published to a Java Message Service using Sun Java System Message Queue.|$|R
50|$|SQL Server <b>Notification</b> <b>Services</b> {{was one of}} {{the many}} {{components}} that comprised Microsoft SQL Server. It was first released in Microsoft SQL Server 2000 Service Pack 2 (2003). An enhanced release shipped in SQL Server 2005.It was discontinued and removed from SQL Server 2008, although SQL Server 2005 SP3 allows for the <b>Notification</b> <b>Services</b> components to be run against the SQL Server 2008 Database Engine.It has been replaced by StreamInsight which first shipped as a component of SQL 2008 R2. StreamInsight is a separate install and not visible {{as a part of a}} regular SQL Server setup.|$|R
50|$|However, two <b>notification</b> <b>services</b> {{similar to}} those {{available}} for physical delivery are available for e-mail. One is called Delivery Status Notifications or DSNs, {{and the other is}} termed Message Disposition Notifications or MDNs.|$|R
