4|6|Public
50|$|Like ProxmapSort, bucket sort {{generally}} {{operates on}} a list of <b>n</b> <b>numeric</b> inputs between zero and some maximum key or value M and divides the value range into n buckets each of size M/n. If each bucket is sorted using insertion sort, ProxmapSort and bucket sort can be shown to run in predicted linear time. However, the performance of this sort degrades with clustering (or too few buckets with too many keys); if many values occur close together, they will all fall into a single bucket and performance will be severely diminished. This behavior also holds for ProxmapSort: if the buckets are too large, its performance will degrade severely.|$|E
3000|$|Specifically, {{we define}} the D-MIAT {{algorithm}} as follows. We assume that <b>n</b> <b>numeric</b> attributes {{exist in the}} dataset, which are denoted A 1 …A [...]...|$|E
40|$|Abstract. A {{statistical}} database (SDB) is {{a database}} {{that is used}} to return statistical information derived from the records to user queries for statistical data analysis. Sometimes, by correlating enough statistics, confidential data (stored in a SDB) about an individual can be inferred. Examples of confidential information stored in a SDB might be salaries or data concerning the medical history of individuals. An important problem is to provide security to SDB against the disclosure of confidential information. A statistical database is said to be secure if no protected data can be inferred from the available queries. One of the security-control methods suggested in the literature consists of query restriction: the security problem is to limit the use of the SDB, introducing a control mechanism, such that no protected data can be obtained from the available queries. Chin and Ozsoyoglu [7] introduced a control mechanism, called Audit Expert, where only SUM queries, that is only certain sums of individual records, are available for the users. This SUM query model leads to several challenging optimization problems. Assume there are <b>n</b> <b>numeric</b> records {z 1, [...] ., zn} stored in a database. A natural problem is to maximize the number of answerable SUM queries, that is the number of subset sums of {z 1, [...] ., zn} (possibly with some additional constraints) that can be returned, such that non...|$|E
5000|$|In the {{examples}} below an X represents an alphabetic character and an <b>N</b> represents a <b>numeric</b> character {{that are part}} of the primary designator. Likewise, an x represents an alphabetic character and an <b>n</b> represents a <b>numeric</b> character {{that are part of}} a sub-designator. Here are valid generalized examples of SIGADs: ...|$|R
50|$|In Macau, {{there are}} two types of ID cards: Permanent Resident Identity Card (BIRP) and Non-Permanent Resident Identity Card (BIRNP). The {{identification}} number has 8-digit standard format: NNNNNNN(N), where <b>N</b> is a <b>numeric</b> digit 0-9. The first <b>numeric</b> digit <b>N</b> has special meaning, and it can be one of the following digits: '1', '5' or '7'.|$|R
40|$|The {{paper was}} {{presented}} on Oct. 10 {{and will be}} published in a special issue of Journal of Cellular Automata. There was some useful discussion following on the presentation, including amazement that I had computed some of the results by hand rather than using a computer. This paper considers binary valued additive cellular automata rules acting on cylinders of size n in terms of circulant matrices and roots of unity. The purpose is to illustrate some of the possibilities of such an approach. Means of determining maximum tree heights and cycle periods are given, together with a method of computing conditions for states to be fixed points or to lie on cycles of given periods. The anomalous shifts that lead to maximum cycle periods being smaller than predicted for certain cylinder sizes are explained and it is shown that the set of all rules on cylinders of odd size n will have specific spectra of cycle periods determined by the prime decomposition of <b>n.</b> Finally, <b>numeric</b> properties of the n-th roots of unity when coupled with mod(2) arithmetic are exploited to group additive rules acting on a cylinder of size n into classes having the same eigenvalues for their circulant matrix representations...|$|R
40|$|A {{statistical}} database (SDB) is {{a database}} {{that is used}} to return statistical information derived from the records to user queries for statistical data analysis. Sometimes, by correlating enough statistics, confidential data (stored in a SDB) about an individual can be inferred. Examples of confidential information stored in a SDB might be salaries or data concerning the medical history of individuals. An important problem is to provide security to SDB against the disclosure of confidential information. A statistical database is said to be secure if no protected data can be inferred from the available queries. One of the security-control methods suggested in the literature consists of query restriction: the security problem is to limit the use of the SDB, introducing a control mechanism, such that no protected data can be obtained from the available queries. Chin and Ozsoyoglu [7] introduced a control mechanism, called Audit Expert, where only SUM queries, that is only certain sums of individual records, are available for the users. This SUM query model leads to several challenging optimization problems. Assume there are <b>n</b> <b>numeric</b> records {z 1, [...] ., zn} stored in a database. A natural problem is to maximize the number of answerable SUM queries, that is the number of subset sums of {z 1, [...] ., zn} (possibly with some additional constraints) that can be returned, such that none of numbers zi (or sums of subsets with the size not exceeding a specified number) can be inferred from these queries. In this paper we give tight bounds for this number under constraints on size and dimension of query subsets...|$|E
40|$|The {{purpose of}} this article is to study the {{eigenvalues}} u_ 1 ^ t=e^itθ_ 1, [...] .,u_N^ t=e^itθ_N of U^t where U is a large N× N random unitary matrix and t> 0. In particular we are interested in the typical times t for which all the eigenvalues are simultaneously close to 1 in different ways thus corresponding to recurrence times in the issue of quantum measurements. Our strategy consists in rewriting the problem as a random matrix integral and use loop equations techniques to compute the first orders of the large N asymptotic. We also connect the problem to the computation of a large Toeplitz determinant whose symbol is the characteristic function of several arc segments of the unit circle. In particular in the case of a single arc segment we recover Widom's formula. Eventually we explain why the first return time is expected to converge towards an exponential distribution when <b>N</b> is large. <b>Numeric</b> simulations are provided along the paper to illustrate the results. Comment: 55 pages, 10 figures, Results and presentation significantly improved. Typos corrected. Accepted in Random Matrices: Theory and Application...|$|R
40|$|Before we can mine data, it is {{important}} to first find a suitable data representation that facilitates computational analysis. For example, for complex data like text, sequences, images, and so on, we must typically extract or construct a suitable set of attributes or features, so that we may represent the data instances as vectors in a suitable d-dimensional real space Rd. That is, given a data instance x (e. g., a sequence), we need to find a mapping φ, sothatφ(x) ∈ Rd is the vector representation of x. Weuse the term feature space to refer to the d-dimensional space of mapped vectors φ(x). This mapping facilitates the probabilistic and geometric view-points of data, and allow us to analyze the complex data instances via numeric analysis methods. Eveninthe case when the input data is already {{in the form of a}} data matrix, ifwewishtodiscover non-linear relationships, then we have to find a non-linear mapping φ, sothatφ(x) represents a vector in the new non-linear feature space. Thus givenasetofdata instances xi, andgiventhemappingfunctionφ, wecantransformtheinputdatainto a <b>n</b> × d <b>numeric</b> data matrix {φ(xi) } n i= 1,whereφ(xi) is a vector in the d-dimensional feature space. Example 5. 1 (Sequence Features) : Consider a dataset of DNA sequences over the alphabet Σ={A, C, G, T}. Onesimplefeaturespaceistorepresenteachsequence in terms of the probability distribution over symbols in Σ. For example, if x = ACAGCAGT A, sincethesymbolA occurs 4 times, C and G occur twice, and T occurs once, we hav...|$|R
40|$|Title/Topic: JM 1 /software defect {{prediction}} 	Sources: 	 		Creators: NASA, then the NASA Metrics Data Program 		Contacts: 		 			Mike Chapman, Galaxy Global Corporation (Robert. Chapman@ivv. nasa. gov) + 1 - 304 - 367 - 8341; 			Pat Callis, NASA, NASA {{project manager for}} MDP (Patrick. E. Callis@ivv. nasa. gov) + 1 - 304 - 367 - 8309 		 		 	 	 	Past usage: 	 		How Good is Your Blind Spot Sampling Policy?; 2003; Tim Menzies and Justin S. Di Stefano; 2004 IEEE Conference on High Assurance Software Engineering ([URL] 		 			Results: 			 				Very simple learners (ROCKY) perform as well in this domain as more sophisticated methods (e. g. J 48, model trees, model trees) for predicting detects 				Many learners have very low false alarm rates. 				Probability of detection (PD) rises with effort and rarely rises above it. 				High PDs are associated with high PFs (probability of failure) 				PD, PF, effort can change significantly while accuracy remains essentially stable 				With two notable exceptions, detectors learned from one data set (e. g. KC 2) have nearly they same properties when applied to another (e. g. PC 2, KC 2). Exceptions: 				 					LinesOfCode measures generate wider inter-data-set variances; 					Precision’s inter-data-set variances vary wildly 				 				 			 			 		 		 		“Assessing Predictors of Software Defects”, T. Menzies and J. DiStefano and A. Orrego and R. Chapman, 2004, Proceedings, workshop on Predictive Software Models, Chicago, Available from [URL] 		 			Results: 			 				From JM 1, Naive Bayes generated PDs of 25 % with PF of 20 % 				Naive Bayes out-performs J 48 for defect detection 				When learning on more and more data, little improvement is seen after processing 300 examples. 				PDs are much higher from data collected below the sub-sub-system level. 				Accuracy is a surprisingly uninformative measure of success for a defect detector. Two detectors with the same accuracy can have widely varying PDs and PFs. 			 			 		 		 	 	 	Relevant information: 	 		JM 1 is written in “C” and is a real-time predictive ground system: Uses simulations to generate predictions 		Data comes from McCabe and Halstead features extractors of source code. These features were defined in the 70 s {{in an attempt to}} objectively characterize code features that are associated with software quality. The nature of association is under dispute. Notes on McCabe can be found here and notes on Halstead can be found here. These metrics are widely used for {{defect prediction}} purposes, a quick tutorial on defect prediction is given here. 	 	 	Number of instances: 10885 	Number of attributes: 22 (5 different lines of code measure, 3 McCabe metrics, 4 base Halstead measures, 8 derived Halstead measures, a branch-count, and 1 goal field). 	Attribute Information: 	 		loc : numeric, McCabe’s line count of code 		v(g) : numeric, McCabe “cyclomatic complexity” 		ev(g) : numeric, McCabe “essential complexity” 		iv(g) : numeric, McCabe “design complexity” 		<b>n</b> : <b>numeric,</b> Halstead total operators + operands 		v : numeric, Halstead “volume” 		l : numeric, Halstead “program length” 		d : numeric, Halstead “difficulty” 		i : numeric, Halstead “intelligence” 		e : numeric, Halstead “effort” 		b : numeric, Halstead 		t : numeric, Halstead’s time estimator 		lOCode : numeric, Halstead’s line count 		lOComment : numeric, Halstead’s count of lines of comments 		lOBlank : numeric, Halstead’s count of blank lines 		lOCodeAndComment: numeric 		uniq_Op : numeric, unique operators 		uniq_Opnd : numeric, unique operands 		total_Op : numeric, total operators 		total_Opnd : numeric, total operands 		branchCount : numeric, the flow graph 		defects : {false,true}, module has/has not one or more reported defects 	 	 	Missing attributes: none 	Class Distribution: the class value (defects) is discrete 	 		false: 2106 = 19. 35 % 		true: 8779 = 80. 65 % 	 	 Comments on the Data Martin Shepperd | August 19 th, 2011 at 10 : 52 am I’ve realised this version of the dataset differs from the version available from the NASA MDP website. The following tabulates the differences for all 13 NASA datasets: {{{ Dataset n cases p features CM 1 – NASA 505 40 CM 1 – Promise 498 21 JM 1 – NASA 10878 21 JM 1 – Promise 10885 21 KC 1 – NASA 2107 21 KC 1 – Promise 2109 21 KC 3 – NASA 458 40 KC 3 – Promise 458 39 MC 1 – NASA 9466 39 MC 1 – Promise 9466 38 MC 2 – NASA 161 40 MC 2 – Promise 161 39 MW 1 – NASA 403 40 MW 1 – Promise 403 37 PC 1 – NASA 1107 40 PC 1 – Promise 1109 21 PC 2 – NASA 5589 40 PC 2 – Promise 5589 36 PC 3 – NASA 1563 40 PC 3 – Promise 1563 37 PC 4 – NASA 1458 40 PC 4 – Promise 1458 37 PC 5 - NASA 17186 39 PC 5 – Promise 17186 38 KC 4 - NASA 125 40 KC 2 – Promise 522 22 }}} Therefore researchers are strongly advised to indicate which version of these files they are using! Martin ShepperdAugust 19 th, 2011 at 10 : 54 am: It is also puzzling how features such as loc can contain values like 1. 1 (see feature 1, case 1). Martin ShepperdAugust 20 th, 2011 at 7 : 03 am: Sorry small error — the two versions of this dataset have the following sizes: {{{ Version, Cases(n), Features(p) JM 1 – NASA, 10878, 24 JM 1 – Promise, 10885, 22 }}...|$|R

