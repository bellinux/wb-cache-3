0|10000|Public
40|$|One of {{the main}} {{objectives}} of Grid computing is the abstraction from the hardware infrastructure as well as hiding implementation details of software components from the user. A modern Grid infrastructure should enable the user <b>not</b> only <b>to</b> <b>execute</b> single <b>tasks</b> on specified hardware resources but also <b>to</b> compose and <b>execute</b> complex Grid applications o...|$|R
40|$|The {{purpose of}} {{security}} in ad hoc grid environments is to sup-port secure execution of tasks on shared resources {{and to protect the}} resources from malicious user actions. The mechanisms of au-thentication and authorization commonly used in traditional grid environments are <b>not</b> sufficient <b>to</b> cover all security requirements arising from the decentralized nature of the ad hoc grid. How-ever, the concept of trust management is capable to solve the se-curity issues by incorporating trust into the process of decision making whether or <b>not</b> <b>to</b> <b>execute</b> a user’s <b>task</b> on a selected re-source. The quality of made decisions is dependent on a correct assessment and representation of trustworthiness assigned to the potentially collaborating parties. In most cases the value of trust-worthiness is derived at least from direct trust and recommenda-tions, but other factors as risk, uncertainty, context dependant in-formation and attributes characterizing the task and the shared re-source {{should be included in the}} derived value as well. This paper presents an overview of the trust evaluation process and provides a specification of parameters relevant for an accurate trust evaluation. General Terms Ad hoc grid computing, grid entity trust evaluatio...|$|R
40|$|In {{article on}} basis of {{published}} and archival documents, research literature estimations given by an illegal press of Siberian organizations of PSR, to {{various aspects of}} activity of III State Duma per 1907 - 1912 are considered. On the basis of studying illegal editions of socialists-revolutionaries author has found out their position in relation to elections in Duma of third convocation. In article illegal editions of Siberian socialists-revolutionaries, describing social and party structure of the deputy case, prominent representatives of different fractions, and their behavior within precincts of parliament are quoted. The maintenance of editions of Siberian socialists-revolutionaries, various parties of legislative activity of III Duma, devoted to estimations is in detail stated: statement of state budget, agrarian and working legislation, etc. Estimations of socialists-revolutionaries to P. A. Stolypin’s agrarian transformations are resulted. The reasons of accrued indifferent attitude of population to activity of III Duma are opened. In article it is drawn a conclusion, that Siberian socialists-revolutionaries in illegal press III Dumas dominated over it conservative ideas have adequately enough estimated social and party structure, progovernmental orientation of majority of deputies, slipping to right positions of cadets. In opinion of members of PSR, Russian parliament practically did not represent broad masses of population. Esser’s authors considered not productive legislative activity of Duma, fairly marking, that III Duma has <b>not</b> managed <b>to</b> <b>execute</b> main <b>task</b> – <b>to</b> express political will of population in form of legislation. Therefore in all editions socialists-revolutionaries called citizens to struggle for Constituent assembly which, in their opinion, could resolve all national needs...|$|R
5000|$|Effective use {{of memory}} (conventional, {{as well as}} extended/expanded) - caching data tables and {{particularly}} indexes, which caused Paradox <b>to</b> <b>execute</b> <b>tasks</b> very quickly {{in contrast to the}} explicit skills required for xBase performance optimisation.|$|R
30|$|The Abstract Task Graph (ATaG) [19] {{with its}} DART runtime system [20] allows <b>to</b> <b>execute</b> <b>task</b> graphs in a {{distributed}} manner. The task graph is compiled during runtime and {{adapted to the}} configuration of the network. DART also imposes high requirements on the hardware.|$|R
40|$|Abstract – We {{propose a}} way to {{represent}} the environment by storing observations taken in that environment, together with their task-related ‘values’. This representation allows for robots being taught by human instructors based on rewards and punishments. We show that the robot is able <b>to</b> learn <b>to</b> <b>execute</b> different <b>tasks.</b> The results of training can be interpreted to gain understanding about {{the environment in which}} the robot has to operate. So instead of first modeling the environment and using this <b>to</b> <b>execute</b> the <b>task,</b> we first start by learning <b>to</b> <b>execute</b> the <b>task</b> and use this to obtain knowledge about the environment...|$|R
40|$|User-Macro-Interface {{computer}} program provides interactive interface enabling human operator to plan tasks for multiple-arm telerobot, cause robot <b>to</b> <b>execute</b> <b>tasks,</b> and monitor robot. Enables operator to specify that robot <b>execute</b> various <b>tasks</b> and subtasks under various mixtures of manual or automatic control. Well suited for use where environment of task poorly modeled or unplanned or task unexpected...|$|R
40|$|Energy {{consumption}} {{is an issue}} in grid computing. There has been substantial research into grid resource allocation, but little research on energy aware resource allocation. We propose that altering the resource allocation mechanism to incorporate node power and performance data can make a substantial difference to both the time taken <b>to</b> <b>execute</b> <b>tasks</b> and the energy consumed by the grid. This paper examines the use of three simple economic resource allocation mechanisms through simulation. We discover that different mechanisms perform better under different circumstances, and that changing the resource allocation mechanism to incorporate the power and performance information of individual nodes {{can result in a}} substantial difference to the time taken <b>to</b> <b>execute</b> <b>tasks,</b> and over time can make a marked difference to the total energy consumption of the grid resource...|$|R
3000|$|To {{what extent}} are English {{teachers}} academically and professionally ready <b>to</b> <b>execute</b> assessment-related <b>tasks?</b> [...]...|$|R
5000|$|Determine the {{authority}} of users: Check if the current user is permitted <b>to</b> <b>execute</b> the <b>task.</b>|$|R
25|$|Making {{a plan to}} {{complete}} tasks in a rigid schedule format might not work for everyone. There is no hard-and-fast rule to follow such a process {{if it turns out}} to be counter-productive. Instead of scheduling, it may be better <b>to</b> <b>execute</b> <b>tasks</b> in a flexible, unstructured schedule which has time slots for only necessary activities.|$|R
40|$|Societies {{are formed}} as {{collaborative}} structures <b>to</b> <b>execute</b> <b>tasks</b> which are <b>not</b> possible or are difficult for individuals alone. There are many type of biological societies, but societies formed by machines or robots are still rare. The concept offers, however, interesting possibilities especially in applications where {{a long term}} fully autonomous operation is needed and/or the {{work to be done}} can be executed in a parallel way by a group of individuals. The paper introduces the basic control and communication structures of robot societies by using a model society. Also a mini-scaled mobile robot which is under construction to be multiplied for the corresponding physical society demonstrator is introduced. Simulation results illustrating the behaviour of the model society are given. Possible applications in waste treatment and process monitoring and cleaning are considered. 1. INTRODUCTION Societies are formed as collaborative structures <b>to</b> <b>execute</b> <b>tasks</b> which are <b>not</b> possible or are d [...] ...|$|R
3000|$|..., then {{it starts}} {{trying to get}} tasks from class ti− 1, ti− 2, etc. If {{there are no more}} tasks, it means that all job tasks are being (or have been already) executed. By {{enforcing}} faster resources <b>to</b> <b>execute</b> larger <b>tasks</b> first, and slow resources <b>to</b> <b>execute</b> smaller <b>tasks</b> first, the probability of large tasks being scheduled to slow resources is reduced, and the job execution tends to finish faster.|$|R
40|$|Peer-to-peer (P 2 P) {{computing}} gains {{more and}} more momentum, and would level the difference between clients and servers. At the same time end devices become {{more and more}} powerful enabling them <b>to</b> <b>execute</b> more sophisticated <b>tasks.</b> Hence it is desirable to leverage these potential resources, by being able <b>to</b> <b>execute</b> <b>tasks</b> on external devices. As mobile agent technology proved to be an effective means for dynamic distributed computing, it seems logical to combine the benefits of both worlds. This paper discusses how a mobile agent platform (enago Mobile) can be built on a P 2 P infrastructure (JXTA) ...|$|R
30|$|<b>To</b> <b>execute</b> a <b>task,</b> a human first {{constructs}} {{a mental}} plan of {{a sequence of}} actions that ends with {{the conclusion of the}} task [23]. Three types of failures may occur in this process: mistakes, lapses and slips. Mistake is a failure in constructing a suitable plan <b>to</b> <b>execute</b> the <b>task,</b> then the plan is not correct. Lapses and slips are failures in the execution of a correct plan. Lapses occur when the worker forgets to perform one action of the plan. Finally, slips occur when the worker performs incorrectly an action of the plan. A diversity of faults can generate such failures, for example: lack of knowledge or time <b>to</b> <b>execute</b> the <b>task,</b> and stochastic cognitive variability such as variability of attention.|$|R
40|$|Abstract. Developing swarm {{robotics}} systems for real-time applica-tions is a challenging mission. Task deadlines {{are among the}} kind of constraints which characterize a large set of real applications. This paper focuses on devising and analyzing a task allocation strategy that allows {{swarm robotics}} systems <b>to</b> <b>execute</b> <b>tasks</b> characterized by soft deadlines and to minimize {{the costs associated with}} missing the task deadlines...|$|R
50|$|Zeke is an {{artificial}} intelligence project led by Hub Culture. It uses an Ethereum blockchain to store and reference unstructured data {{and is being}} used <b>to</b> <b>execute</b> <b>tasks</b> for members. In January 2017, Hub Culture announced the first tasks {{to be completed by}} Zeke, including the world's first AI to AI focused event, at the Hub Culture Innovation Campus in Bermuda.|$|R
40|$|Societies {{are formed}} as {{collaborative}} structures <b>to</b> <b>execute</b> <b>tasks</b> which are <b>not</b> possible or are difficult for individuals alone. There are {{many types of}} biological societies formed by animals, but societies formed by machines or robots are still rare. This paper introduces {{the concept of an}} application oriented robot society formed by autonomous underwater robots. This bacterium robot society is a generic concept with many potential applications. As an example of such application we present a scenario, where robot society serves as a mobile distributed sensor instrument inside a process plant. 1. Introduction Societies are formed as collaborative structures <b>to</b> <b>execute</b> <b>tasks</b> which are <b>not</b> possible or are difficult for individuals alone. In some cases societies can be seen also as alternatives to large size more complex individuals. There are many types of biological societies formed by animals, but societies formed by machines or robots are still rare. The related research activity is, [...] ...|$|R
5000|$|Task Planner: Based on Spring and Quartz. Enable {{the option}} <b>to</b> <b>execute</b> {{deferred}} <b>tasks</b> based on predefined time schedule rules.|$|R
30|$|Scheduling tasks {{is based}} on master-workers pattern [8]. This pattern has two kinds of entities: one master and several workers. The master send tasks to the workers that execute them and return the results back to the master. However, having all tasks in a grid being managed by only one master {{could not be a}} {{scalable}} solution. Moreover, if the master fails, all the system could be compromised. In GridTS, there is not one but several masters—called brokers—that get jobs from their users, decompose them in tasks, and make available these tasks in tuple space to the grid resources. When a resource finishes <b>executing</b> a <b>task,</b> it gives the result to the broker, through tuple space, that assembles all results and returns them to the user. All communication between brokers and resources are decoupled, i.e., it is done exclusively through the tuple space. On master-workers pattern, the master knows the slaves and the number of them that are available <b>to</b> <b>execute</b> <b>tasks.</b> Differently, in GridTS, brokers do not know which and even the number of resources that are available <b>to</b> <b>execute</b> <b>tasks.</b>|$|R
50|$|General Description. Combat divers {{provide the}} Army with the {{capability}} of performing combat engineer tasks underwater. They generally conduct tasks {{as part of the}} combined arms team; however, if required, they have the ability <b>to</b> <b>execute</b> <b>tasks</b> independently. Combat divers are combat engineers who perform combat diving as a secondary duty. They are grouped into mission-specific teams when a task is identified and ordered, to support operations.|$|R
3000|$|... (3) Experiments on hexapod robots are {{implemented}} <b>to</b> <b>execute</b> different <b>tasks.</b> These results indicate {{the capabilities of}} the robots developed in our research group.|$|R
50|$|In self-reconfiguring modular robot, {{modularity}} {{refers to}} the ability of the robotic system to automatically achieve different morphologies <b>to</b> <b>execute</b> the <b>task</b> at hand.|$|R
30|$|When the {{processor}} {{is running the}} operations of a task, it can <b>not</b> be stopped <b>to</b> <b>execute</b> any other <b>task.</b> For this reason, it’s desirable <b>not</b> <b>to</b> include too many operations in one task in order to share {{the processor}} by all the modules of the application. All tasks have same execution priority.|$|R
3000|$|... [...]. The {{length of}} each task is known and it varies between tasks. Input {{corresponds}} to the input data needed <b>to</b> <b>execute</b> the <b>task</b> τ [...]...|$|R
50|$|While PPPs as {{described}} in the literature as being used <b>to</b> <b>execute</b> public <b>tasks</b> in general, in PSPP the scope is narrowed to specifically social topics.|$|R
40|$|Introduction: Traditionally, {{assessment}} in axial Spondyloarthritis (aSpA) includes {{the evaluation of}} the capacity <b>to</b> <b>execute</b> <b>tasks,</b> conceptualized as physical function. The role of physical activity, defined as movement-related energy expenditure, is largely unknown and almost exclusively studied using patient-reported outcome measures. The aims of this observational cross-sectional study are to compare physical activity between patients with aSpA and healthy controls (HC) and to evaluate the contribution of disease activity to physical activity differences between groups...|$|R
40|$|Developing swarm {{robotics}} systems for real-time applications is a challenging mission. Task deadlines {{are among the}} kind of constraints which characterize a large set of real applications. This paper focuses on devising and analyzing a task allocation strategy that allows {{swarm robotics}} systems <b>to</b> <b>execute</b> <b>tasks</b> characterized by soft deadlines and to minimize {{the costs associated with}} missing the task deadlines. © 2014 Springer International Publishing Switzerland. SCOPUS: cp. kSCOPUS: cp. kinfo:eu-repo/semantics/publishe...|$|R
40|$|AbstractThis paper {{introduces}} a stochastic scheduling problem. In this problem a directed acyclic graphs (DAG) represents the precedence relations among m tasks that n workers are scheduled <b>to</b> <b>execute.</b> The {{question is to}} find a schedule Σ such that if tasks are assigned to workers according to Σ, the expected time needed <b>to</b> <b>execute</b> all the <b>tasks</b> is minimized. The time needed <b>to</b> <b>execute</b> <b>task</b> t by worker w is a random variable expressed by a negative exponential distribution with parameter λwt and each <b>task</b> can be <b>executed</b> by more than one worker at a time. In this paper, we will prove that the problem in its general form is NP-hard, but when the DAG width is constant, we will show that the optimum schedules can be found in polynomial time...|$|R
40|$|Traditionally, {{assessment}} in axial Spondyloarthritis (aSpA) includes {{the evaluation of}} the capacity <b>to</b> <b>execute</b> <b>tasks,</b> conceptualized as physical function. The role of physical activity, defined as movement-related energy expenditure, is largely unknown and almost exclusively studied using patient-reported outcome measures. The aims of this observational cross-sectional study are to compare physical activity between patients with aSpA and healthy controls (HC) and to evaluate the contribution of disease activity to physical activity differences between groups. status: publishe...|$|R
40|$|This chapter {{addresses}} computing strategies {{designed to}} enable field mobile robots <b>to</b> <b>execute</b> <b>tasks</b> requiring effective autonomous traversal of natural outdoor terrain. The primary {{focus is on}} computer vision-based perception and autonomous control. Hard computing methods are combined with apphed soft computing strategies {{in the context of}} three case studies associated with real-world robotics tasks including planetary surface exploration and land survey or reconnaissance. Each case study covers strategies implemented on wheeled robot research prototypes designed for field operations...|$|R
3000|$|... 3) Average {{overhead}} is {{the average}} time required <b>to</b> <b>execute</b> a <b>task</b> under simulation. The bigger the average overhead, the more likely the task will be missed before the stopping time.|$|R
40|$|A Problem Solving Agent (PSA) has {{the ability}} <b>to</b> <b>execute</b> a finite set of tasks in an {{application}} domain. The Capability-based activity specification and decomposition (CapBasED), composed of an execution and monitoring module, is presented. Each of the system's PSA has its competence defined {{by a set of}} capabilities <b>to</b> <b>execute</b> <b>tasks,</b> with each task requiring a certain competence from the PSAs for its execution. The dependencies between tasks can either be of data or control dependency, temporal dependency, or external dependency. These dependents are expressed by events (system, external, temporal). The novel features of the CapBasED are discussed...|$|R
50|$|A {{real time}} clock alarm is a feature {{that can be used}} to allow a {{computer}} to 'wake up' after shut down <b>to</b> <b>execute</b> <b>tasks</b> every day or on a certain day. It can sometimes be found in the 'Power Management' section of a motherboard's BIOS setup. However, newer BIOS setups do not include an RTC alarm option, although it can still be set from within user applications. Wake On LAN, Wake on ring, and IPMI functions could also be used to start a computer after it is turned off.|$|R
40|$|Abstract The {{ability of}} reusing {{existing}} task execution plans {{is an important}} step towards autonomous behavior. Today, the reuse of sophisticated services allowing robots to act autonomous is usually limited to identical robot platforms and to very similar application scenarios. The approach presented in this paper proposes a way to mitigate this limitation by storing and reusing task plans on a global accessible database. We describe the task execution engine for the RoboEarth project [26] to demonstrate its ability <b>to</b> <b>execute</b> <b>tasks</b> in a flexible and reliable way. ...|$|R
40|$|Abstract. In multi-robot system, {{cooperation}} is needed <b>to</b> <b>execute</b> <b>tasks</b> efficiently. The {{purpose of this}} study is to realize cooperation among multiple robots using interactive communication. An important role of communication in multi-robot system is to make it possible to control other robots by intention transmission. We consider that multi-robot system can be more and more adaptive by treating communication as action. In this report, we adopt action adjustment function to achieve cooperation between robots. We also run some computer simulations of collision avoidance as an example of cooperative task, and discuss the results...|$|R
