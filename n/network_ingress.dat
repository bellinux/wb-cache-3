24|29|Public
50|$|Another {{proposed}} solution is <b>network</b> <b>ingress</b> filtering, which rejects the attacking packets {{on the basis}} of the forged source address.|$|E
5000|$|<b>Network</b> <b>ingress</b> {{filtering}} is a [...] "good neighbor" [...] {{policy which}} relies on cooperation between ISPs for their mutual benefit.|$|E
50|$|The best current {{practices}} for <b>network</b> <b>ingress</b> filtering are documented by the Internet Engineering Task Force in BCP 38 and BCP 84, which {{are defined by}} RFCs 2827 and 3704, respectively.|$|E
40|$|Abstract—To {{reduce the}} impact of large-sized, high-rate (α) {{transfers}} on real-time flows, a Hybrid Network Traffic Engi-neering System (HNTES) was proposed in earlier work. HNTES is an intra-domain solution that enables the automatic identifi-cation of α flows at a provider <b>network’s</b> <b>ingress</b> routers, and redirects these flows to traffic-engineered QoS-controlled virtual circuits. The purpose of this work {{is to determine the}} best QoS mechanisms for the virtual circuits used in this application. Our findings are that a no-policing, two-queues solution with weighted fair queueing and priority queueing is both sufficient and the best for this application. It allows for the dual goals of reduced delay/jitter in real-time flows, and high-throughput for the α flows, to be met. Keywords—policing; scheduling; high-speed networks; traffic-engineering; virtual-circuit networks I...|$|R
40|$|We {{consider}} the following issues related to robust network routing in a highly dynamic and changing traffic environment: What network routing should an Internet Service Provider use so as to (i) accommodate users demanding "good" service while being unpredictable in the traffic {{that they would like}} to send to different destinations, (ii) minimize the amount of "overprovisioning" that needs to be done in the network in order to make "best effort networking better" without resorting to sophisticated traffic prediction and management mechanisms, (iii) operate the network efficiently with mostly static routing configurations and without dynamic routing adjustments to avoid congestion due to drastic changes in traffic flows between a <b>network's</b> <b>ingress</b> and egress routers. Achieving these goals has been difficult and has led to networks being very much overprovisioned in order to avoid the management complexity of implementing traffic management schemes that adapt network routing to changed traffic demands. In this pape...|$|R
5000|$|... 802.1X-2001 defines two {{logical port}} {{entities}} for an authenticated port—the [...] "controlled port" [...] and the [...] "uncontrolled port". The controlled port is manipulated by the 802.1X PAE (Port Access Entity) to allow (in the authorized state) or prevent (in the unauthorized state) <b>network</b> traffic <b>ingressing</b> and egressing to/from the controlled port. The uncontrolled port {{is used by}} the 802.1X PAE to transmit and receive EAPOL frames.|$|R
5000|$|<b>Network</b> <b>ingress</b> {{filtering}} is {{a packet}} filtering technique {{used by many}} Internet service providers {{to try to prevent}} source address spoofing of Internet traffic, and thus indirectly combat various types of net abuse by making Internet traffic traceable to its source.|$|E
5000|$|The 6in4 {{protocol}} has {{no security}} features, thus {{one can easily}} inject IPv6 packets by spoofing the source IPv4 address of a tunnel endpoint and sending {{it to the other}} endpoint. This problem can partially be solved by implementing <b>network</b> <b>ingress</b> filtering (not near the exit point but close to the true source) or with IPsec.|$|E
5000|$|Belenky and Ansari, outline a {{deterministic}} packet marking scheme. They {{describe a}} more realistic topology for the Internet - that is composed of LANs and ASs with a connective boundary - and attempt to put a single mark on inbound packets {{at the point of}} <b>network</b> <b>ingress.</b> Their idea is to put, with random probability of [...]5, the upper or lower half of the IP address of the ingress interface into the fragment id field of the packet, and then set a reserve bit indicating which portion of the address is contained in the fragment field. By using this approach they claim to be able to obtain 0 false positives with [...]99 probability after only 7 packets.|$|E
40|$|Abstract The {{differentiated}} services (DiffServ, [1]) expedited forwarding (EF, [2]) per-hop behavior (PHB) {{is targeted}} on applications which need strict guarantees on end-to-end delay and very low loss probability. It makes EF PHB an appropriate choice for loss-free timely delivery of delay and loss intolerant traffic. It {{is expected that}} the substantial part of such traffic will be generated by video-on-demand (VoD) services. In order to provide transmission service {{which is based on}} EF PHB to VoD traffic, several traffic conditioning functions have to be implemented within the DiffServ <b>ingress</b> <b>network</b> nodes. These conditioning functions are based on traffic profiles. In this paper we show how to compute EF PHB traffic profiles for VoD traffic, which are based on simple token bucket mechanism. Further, a tandem queuing network that models the process of EF traffic treatment within the DiffServ <b>ingress</b> <b>network</b> node is considered. Based on this, the simple analytical approach for worst-case delay evaluation of the EF traffic treatment within the DiffServ <b>ingress</b> <b>network</b> node is presented. Finally, under several assumptions the DiffServ domain’s end-to-end worst-case delay of VoD traffic is evaluated. ...|$|R
40|$|Abstract. Call {{admission}} {{control is a}} principal component for QoS delivery in IP networks. It determines {{the extent to which}} network resources are utilized. It determines also whether QoS are actually delivered or not. Continuing {{on the steps of the}} existing approaches, we introduce a distributed and scalable {{admission control}} scheme to provide end-to-end statistical QoS guarantees in Differentiated Services (DiffServ) networks. This scheme is based on the passive monitoring of aggregate traffic at the core routers, and active probing of network state between the different edge routers. Thus, we have simulated a DiffServ network where different users are provided different service classes. In this network, the back ground (BG or BE) flows are characterized by Poisson process, however the Expedited Forwarding (EF) flows are generated by Exponential and Pareto ON-OFF sources. Afterward, we have evaluated the admission mechanism employed at the different <b>network</b> <b>ingresses</b> by measuring the network utilization at the network bottlenecks, and the effect of this mechanism on the accepted number of EF flows and their delay budget. ...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2000). All Rights Reserved. Resource Reservation Protocol (RSVP) signaling {{may be used to}} request Quality of Service (QoS) services and enhance the manageability of application traffic’s QoS in a differentiated service (diff-serv or DS) network. When using RSVP with DS networks it is useful to be able to carry carry Differentiated Services Code Points (DSCPs) in RSVP message objects. One example of this is the use of RSVP to arrange for the marking of packets with a particular DSCP upstream from the DS <b>network’s</b> <b>ingress</b> point, at the sender or at a previous network’s egress router. The DCLASS object is used to represent and carry DSCPs within RSVP messages. This document specifies the format of the DCLASS object and briefly discusses its use. 1...|$|R
40|$|Measurements {{related to}} {{security}} are {{being carried out}} on many sites on the Internet at <b>network</b> <b>ingress</b> points, between specific points on the Internet, and across the wide area Internet. The goals range from identifying sources of and possibly filtering unwanted traffic, to characterizing {{and coming up with}} new mechanisms for deterring attacks. Most of the measurements do not systematically consider adversarial traffic aimed at their measurement system. We explore the role adversaries can play and present a taxonomy on the potential impact of unwanted traffic on measurement systems. Our goal is to both enhance the robustness of such systems and spur development of tools that can alter the playing field by increasing the cost to adversaries. ...|$|E
40|$|Abstract. It is {{important}} to understand delay bounds of an individual flow in the Internet in order to provide real-time applications such as Voice over IP (VoIP). In this paper, we study the deterministic bounds on edge-to-edge delay of a flow in a Differentiated Service (DiffServ) net-work domain with FIFO aggregation and class-based Guaranteed-Rate (GR) scheduler which provides guaranteed performance with rate reser-vation for a traffic class. We derive edge-to-edge delay bounds of a flow as a function of service rate allocated for a traffic class and leaky-bucket parameters adopted for flows at the <b>network</b> <b>ingress,</b> and information about joining and leaving flows. The resulting bounds are less than pre-viously derived delay bounds, especially in the case where the burstiness of aggregated traffic is high and the edge-to-edge path is long. ...|$|E
40|$|In this paper, we {{consider}} the problem of detecting an intruding packet in a communication network. Detec-tion is accomplished by sampling {{a portion of the}} pack-ets transiting selected network links (or router interfaces). Since sampling entails incurring network costs for real-time packet sampling and packet examination hardware, we would like to develop a network packet sampling strat-egy to effectively detect network intrusions while not ex-ceeding a given total sampling budget. We consider this problem in a game theoretic framework, where the in-truder picks paths (or the <b>network</b> <b>ingress</b> point if only shortest path routing is possible) to minimize chances of detection and where the network operator chooses a sam-pling strategy to maximize the chances of detection. We formulate the game theoretic problem, and develop sam-pling schemes that are optimal in this game theoretic set-ting. I...|$|E
50|$|One {{technique}} of DDoS attacks {{is to use}} misconfigured third-party networks that allow amplification of spoofed UDP packets. Proper configuration of <b>network</b> equipment, enabling <b>ingress</b> filtering and egress filtering, as documented in BCP 38 and RFC 6959, prevents amplification and spoofing, thus {{reducing the number of}} relay networks available to attackers.|$|R
40|$|We {{study how}} the {{emerging}} packet-switched networks can efficiently carry traffic from prerecorded multimedia sources. Toward this end we first develop call admission policies for statistically multiplexing prerecorded sources over a bufferless transmission link. We develop a stochastic model which captures the random {{phases of the}} sources. We then apply large deviation theory to our model to develop admission rules. The accuracy of the large deviation approximation is verified with simulation experiments employing importance sampling techniques. ^ We next present a high-performance prefetching protocol for the delivery of prerecorded VBR video from a server across a packet-switched network to {{a large number of}} clients. The protocol requires (1) that each client have a small amount of memory dedicated to the application; (2) that there is one bottleneck shared link between the server and the clients. The server chooses prefetched frames according to a join-the-shortest-queue (JSQ) policy. We also develop a variation of the the JSQ prefetching protocol that allows for multiple servers that are distributed deeper into the network. ^ We finally study call admission control and traffic management of regulated multimedia traffic. We develop a refined call admission control procedure for buffered multiplexers. This procedure involves searching over the buffered multiplexers 2 ̆ 7 buffer-bandwidth tradeoff curve and finding the most adversarial traffic pattern of the regulated sources. Importantly, we show that on-off is not the most adversarial traffic pattern of leaky bucket constraint sources. We next propose a traffic management scheme for multimedia traffic which consists of smoothers at the <b>network</b> <b>ingresses</b> and bufferless statistical multiplexing within the network. We explicitly characterize the smoothers that maximize the connection carrying capacity of the network. We develop call admission rules for our smoothing/bufferless multiplexing scheme that are based on the assumption of adversarial traffic at the smoother outputs. ...|$|R
40|$|We present Gatekeeper, a {{distributed}} {{rate control}} mechanism that supports network link bandwidth guarantees for multiple co-located tenants in a virtualized datacenter. Gatekeeper provides network performance isolation across tenants by enforcing link bandwidth allocations for both egress and <b>ingress</b> <b>network</b> traffic at each physical host. Experiments on our Xen-based implementation of Gatekeeper in a datacenter cluster demonstrate effective control of link bandwidth for both TCP and UDP traffic, {{and for a}} Hadoop-based application running concurrently with streaming workloads...|$|R
40|$|This paper {{studies the}} {{performance}} of TCP transport protocol over an optical burst-switched (OBS) wavelength division multiplexed (WDM) wide-area network. Typically, an OBS network consists of optical core routers and electronic edge routers connected by WDM links. At the <b>network</b> <b>ingress</b> nodes, IP packets are assembled into bursts that are routed through the core network and disassembled at the network egress nodes. This paper presents the affects of the OBS network characteristics and parameters on TCP's delay and throughput performance: (i) Burstification (burst-assembly and disassembly) delays, (ii) Databurst scheduling and (iii) Variation of burst packet parameters (i. e. burst size, burst timeouts), and (iv) burst drop probability). Detailed results based on an ns 2 -based simulator, that has been extended to incorporate WDM and OBS networking, are presented...|$|E
40|$|Making end-systems {{accountable}} for the congestion they cause, will give an incentive to control one’s con-gestion appropriate. re-ECN is a new Transmission Control Protocol (TCP) mechanism to expose the ex-pected congestion on a network path. Based on such an announcement, the amount of congestion one end-system is allowed to introduce into the network can be limited. Therefore, a policer at <b>network</b> <b>ingress</b> is proposed which drops packets in congestion situa-tions, if no so called congestion credits are available. However, this will only allow to limit congestion of upstream traffic. If data is requested by a client, the server {{will not be able}} to decide about an appropri-ate data handling as the intention of the client is not known. To address this problem an architecture to transfer congestion credits from the client-side po-licer to the server-side policer could be used. This allows the server application to send with a higher data rate in congestion situations and hence give a higher priority to a respective data transmission. ...|$|E
40|$|Efficient network {{provisioning}} mechanisms supporting service differentiation {{and automatic}} capacity dimensioning {{are important for}} the realization of a differentiated service Internet. In this paper, we extend our prior work on edge provisioning [71 to interior nodes and core networks including algorithms for: (i) dynamic node provisioning and (ii) dynamic core provisioning. The dynamic node provisioning algorithm prevents transient violations of service level agreements by self-adjusting per-scheduler service weights and packet dropping thresholds at core routers, reporting persistent service level violations to the core provisioning algorithm. The dynamic core provisioning algorithm dimensions traffic aggregates at the <b>network</b> <b>ingress</b> taking into account fairness issues not only across different traffic aggregates, but also within the same aggregate whose packets take different routes in a core IP network. We demonstrate through analysis and simulation that our model is capable of delivering capacity provisioning in an efficient manner providing quantitative delay-bounds with differentiated loss across per-aggregate service classes...|$|E
30|$|However, {{with the}} {{increasing}} security threats to the enterprise networks, the security designers {{began to realize that}} conventional firewalls can only filter inbound traffic would not protect the networks from internal threats. Ingress filtering [34] is now an important security component that prevents attacks from malicious nodes that physically reside inside the <b>network</b> boundaries. When <b>ingress</b> filtering is implemented on an edge router's interface, the router will not forward IP packets received on that interface unless the packet's source address matches the interface network prefix.|$|R
50|$|Packet {{filtering}} is one {{defense against}} IP spoofing attacks. The gateway to a <b>network</b> usually performs <b>ingress</b> filtering, which is blocking of packets {{from outside the}} network with a source address inside the network. This prevents an outside attacker spoofing the address of an internal machine. Ideally the gateway would also perform egress filtering on outgoing packets, which is blocking of packets from inside the network with a source address that is not inside. This prevents an attacker within the network performing filtering from launching IP spoofing attacks against external machines.|$|R
40|$|Fixed mobile {{convergence}} (FMC) {{based on}} the 3 GPP IP Multimedia Subsystem (IMS) {{is considered one of}} the most important communication technologies of this decade. Yet this all-IP-based network technology brings about the growing danger of security vulnerabilities in communication and data services. Protecting IMS infrastructure servers against malicious exploits poses a major challenge due to the huge number of systems that may be affected. We approach this problem by proposing an architecture for an autonomous and self-sufficient monitoring and protection system for devices and infrastructure inspired by network intrusion detection techniques. The crucial feature of our system is a signature-less detection of abnormal events and zero-day attacks. These attacks may be hidden in a single message or spread across a sequence of messages. Anomalies identified at any of the <b>network</b> domain’s <b>ingresses</b> can be further analyzed for discriminative patterns that can be immediately distributed to all edge nodes in the network domain. ...|$|R
40|$|We study {{a simple}} rate control scheme for a multiclass queuing network for which {{customers}} are partitioned into distinct flows that are queued separately at each station. The control scheme discards customers that {{arrive to the}} <b>network</b> <b>ingress</b> whenever {{any one of the}} flow's queues throughout the network holds more than a specified threshold number of customers. We prove that if the state of a corresponding fluid model tends to a set where the flow rates are equal to target rates, then there exist sufficiently high thresholds that make the long-term average flow rates of the stochastic network arbitrarily close to these target rates. The same techniques could be used to study other control schemes. To illustrate the application of our results, we analyze a network resembling a 2 -input, 2 -output communications network switch. Comment: Published in at [URL] the Annals of Applied Probability ([URL] by the Institute of Mathematical Statistics ([URL]...|$|E
40|$|Abstract—Rule-based packet {{classification}} {{is a powerful}} method for identifying traffic anomalies, with network security as a key application area. While popular systems like Snort are used in many network locations, comprehensive deployment across Tier- 1 service provider networks is costly due {{to the need for}} high-speed monitors at many <b>network</b> <b>ingress</b> points. Since ISPs already collect flow statistics ubiquitously, can we use it for detecting the same anomalies as the packet based rules in spite of aggregation and absence of payload information? We exploit correlations between packet and flow level information via a machine learning (ML) approach to associate packet level alarms with a feature vector derived from flow records on the same traffic. We describe a system architecture for network-wide flowalarming and describe the steps required to establish a proofof-concept. We evaluate prediction accuracy of candidate ML algorithms on actual packet traces. The duration of prediction effectiveness is an issue for ML approaches and more so in resource intensive network applications. Initial results show little impairment of performance over periods of one or two weeks...|$|E
40|$|We {{consider}} stochastic {{guarantees for}} networks with aggregate scheduling, in particular, Expedited Forwarding (EF). Our approach {{is based on}} the assumption that a node can be abstracted by a service curve, and the input flows are regulated individually at the <b>network</b> <b>ingress.</b> Both of these assumptions are inline with EF [1], [2]. For a service curve node, we derive bounds on the complementary distributions of the steady-state backlog and backlog as seen by packet arrivals. We also give a bound on the long-run loss ratio for a service curve node where the buffer size is too small to guarantee loss-free operation. For a Packet Scale Rate Guarantee node [3], [1], we use the delay from backlog bound to obtain a probabilistic bound on the delay. Our analysis is exact under the given assumptions. Our results should help us to understand the performance of networks with aggregate scheduling, and provide the basis for dimensioning such networks. Keywords [...] - Expedited Forwarding, Differentiated Services, Aggregate Scheduling, Statistical Multiplexing, Stochastic QoS, Service Curve, Packet Scale Rate Guarantee, Queueing, Loss Ratio, Network Calculus I...|$|E
40|$|Achieving an {{admission}} control strategy for CoS networks covering both intra-domain and end-to-end operation {{is still an}} open issue. This paper discusses how AC {{can be carried out}} without adding significant complexity to the network control plane and proposes a distributed service-oriented AC model for these networks. The model only involves the network edge nodes leaving the <b>network</b> core unchanged. <b>Ingress</b> nodes perform implicit or explicit service-dependent AC based on both QoS and SLSs utilization metrics, obtained through edge-to-edge online monitoring performed at egress nodes. From an end-to-end perspective, the flow request is used both for AC and available service computation. Relevant aspects of the model interrelated areas and implementation key points are also discussed...|$|R
40|$|This {{document}} {{describes an}} NSIS QoS Model for networks {{that use the}} Resource Management in Diffserv (RMD) concept. RMD is a technique for adding admission control and preemption function to Differentiated Services (Diffserv) networks. The RMD QoS Model allows devices external to the RMD network to signal reservation requests to edge nodes in the RMD <b>network.</b> The RMD <b>Ingress</b> edge nodes classify the incoming flows into traffic classes and signals resource requests for the corresponding traffic class along the data path to the Egress edge nodes for each flow. Egress nodes reconstitute the original requests and continue forwarding them along the data path towards the final destination. In addition, RMD defines notification functions to indicate overload situations within the domain to the edge nodes...|$|R
40|$|This {{document}} {{describes a}} Next Steps in Signaling (NSIS) Quality-of- Service (QoS) Model for networks {{that use the}} Resource Management in Diffserv (RMD) concept. RMD is a technique for adding admission control and preemption function to Differentiated Services (Diffserv) networks. The RMD QoS Model allows devices external to the RMD network to signal reservation requests to Edge nodes in the RMD <b>network.</b> The RMD <b>Ingress</b> Edge nodes classify the incoming flows into traffic classes and signals resource requests for the corresponding traffic class along the data path to the Egress Edge nodes for each flow. Egress nodes reconstitute the original requests and continue forwarding them along the data path towards the final destination. In addition, RMD defines notification functions to indicate overload situations within the domain to the Edge nodes...|$|R
40|$|A common {{assumption}} made {{in traffic}} matrix (TM) modeling and estimation is independence of a packet’s <b>network</b> <b>ingress</b> and egress. We {{argue that in}} real IP networks, this assumption should not and does not hold. The fact that most traffic consists of two-way exchanges of packets means that traffic streams flowing in opposite directions {{at any point in}} the network are not independent. In this paper we propose a model for traffic matrices based on independence of connections rather than packets. We argue that the independentconnection (IC) model is more intuitive, and has a more direct connection to underlying network phenomena than the gravity model. To validate the IC model, we show that it fits real data better than the gravity model and that it works well as a prior in the TM estimation problem. We study the model’s parameters empirically and identify useful stability properties. This justifies the use of the simpler versions of the model for TM applications. To illustrate the utility of the model we focus on two such applications: synthetic TM generation and TM estimation. To {{the best of our knowledge}} this is the first traffic matrix model that incorporates properties of bidirectional traffic. ...|$|E
40|$|International audienceTelecommunication {{networks}} are generally dimensioned {{to provide services}} with small delays and high throughput during peak-periods. Due to the sizable difference in the network utilization between the peak and off-peak periods {{as well as the}} requirements of robust performance in face of both traffic burstiness and various types of network failures, these {{networks are}} significantly over-dimensioned for the average network loads. In this paper, we propose to use this extra capacity for supporting a deferrable traffic class with some guarantees on its end-to-end delays. Using the Software-Defined Networking (SDN) capabilities for controlling the <b>network</b> <b>ingress</b> rates of the deferrable traffic class in real time, we ensure that such a service would remain transparent to existing delay-sensitive traffic. To estimate the available capacities for the deferrable service, we analyze large deviations for the proposed traffic model. Starting from an initial network designed for delay-sensitive traffic, one can readily "overlay" a new network for the deferrable service at no extra cost. This overlaid network has the same topology as the original one, and its link capacities can be directly computed from the characteristics of the existing traffic, the original link capacities, and the end-to-end delay tolerances...|$|E
40|$|A {{large number}} of {{products}} implementing aggregate buffering and scheduling mechanisms have been developed and deployed, and still more are under development. With the rapid increase in the demand for reliable end-to-end QoS solutions, it becomes increasingly {{important to understand the}} implications of aggregate scheduling on the resulting QoS capabilities. This document studies the bounds on the worst case delay in a network implementing aggregate scheduling. A lower bound on the worst case delay is derived. It is shown that in a general network configuration the delays achieved with aggregate scheduling are very sensitive to utilization and can in general be quite high. It is also shown that for a class of network configurations described in the paper it is possible to give an upper bound that provides reasonable worst case delay guarantees for reasonable utilization numbers. These bounds are a function of network utilization, maximum hop count of any flow, and the shaping parameters at the <b>network</b> <b>ingress.</b> It is also argued that for a general network configuration and utilization numbers which are independent on the maximum hop count, an upper bound on delay, if it exists, must be a function of the number of nodes and/or the number of flows in the network...|$|E
40|$|International audienceThe Locator/Identifier Separation Protocol (LISP) was {{specified}} a {{few years}} ago by the Internet Engineering Task Force (IETF) to enhance the Internet architecture with novel inbound control capabilities. Such capabilities are particularly needed for multihomed networks that dispose of multiple public IP routing locators for their IP networks, and that are willing to exploit them in a better way than what possible with the legacy Border Gateway Protocol (BGP) [8]. In this work, we specify how to enhance the LISP routing system to perform egress control too. Our goal is to give the highest possible routing optimization degree to LISP <b>networks,</b> so that <b>ingress</b> and egress traffic engineering strategies can be jointly performed, without requiring coordination between LISP and BGP. We design the enhancement to the LISP router system, specify the required protocol extensions, open sourcing the code and proving the overhead and the achievable gains by experimentation...|$|R
40|$|In {{this paper}} we {{investigate}} {{the problem of}} scalable admission control for real-time traffic in sink-tree networks employing per-aggregate resource management policies, like MPLS or DiffServ. Every traffic flow entering the <b>network</b> at an <b>ingress</b> node, and flowing towards a given egress node, specifies its leaky-bucket parameters and a required delay bound for traversing the network. We propose an algorithm that admits a new flow if a guarantee can be given that the required delay bound, besides those of other already established flows, are not exceeded. We identify properties of sink-tree networks based on which we considerably reduce {{the complexity of the}} proposed algorithm, and we show that the latter approaches the theoretical lower bound on the worst case complexity of any algorithm working under the same hypotheses. Finally, we show that the algorithm lends itself to a distributed implementation, thus allowing for better scalability...|$|R
40|$|A {{method and}} a {{computer}} program for reducing jitter in IP packet transmission in a Diffserv <b>network</b> having <b>ingress</b> and egress Border Routers and using premium service, expedited forwarding and source route option, recognize incoming packets which have firm jitter requirements. The program verifies if a recognized packet has an entry in the forwarding cache for its IP destination address. If affirmative, the identified packet {{is sent to the}} next hop. If not, the program checks to see if a route table entry exists for the specified destination address. If affirmative, the route table entry is stored in the forwarding cache, and the packet is sent on its way. Otherwise, the program uses special filters to extract and select the shortest and fastest path to an egress border router to match the destination address; a list of selected router addresses is inserted as part of a source route option. All intermediate routers receiving a packet with the strict source route option set will forward the packet to the first address in the strict source option list. Subsequent packets which follow after the recognized packet and are bound to the same destination address will be sent in the same path as the identified first packet with the source route option turned off. The method ensures reduced jitter for packets having firm jitter requirements in a network using either static or dynamic routing. The invention also teaches a memory and an algorithm using the method...|$|R
