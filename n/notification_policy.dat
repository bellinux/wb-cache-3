20|45|Public
50|$|Some {{claim that}} the {{national}} partner <b>notification</b> <b>policy</b> would be unnecessary, for it is already required to have partner notification programs {{in order to receive}} funds from the CDC for HIV prevention and Control. The Ryan White Care Act Amendments of 1996 also requires states to notify a spouse of a known HIV-infected patient that he or she may have been exposed to HIV and should seek testing. In addition, some criticize the belief that the Bill includes a sense of the Congress urging states to criminalize the intentional transmission of HIV.|$|E
3000|$|This GroupsInterval [...] {{policy is}} {{evaluated}} in two scenarios: i) following a pull for some target to be located, ii) when a location event {{is produced by}} Jano’s core and a <b>notification</b> <b>policy</b> determines the potential location disclosure of some target.|$|E
30|$|Policies are {{instantiated}} {{by means}} of a pull or a push operation invoked on the Queries API (as shown in Fig.  7) resulting in the instantiation of either: i) a location policy as the one presented in Fig.  9, or ii) a <b>notification</b> <b>policy</b> as the one presented in Fig.  10.|$|E
30|$|Jano sends {{notifications}} {{based on}} the evaluation of <b>notification</b> <b>policies</b> associated to users. Using SPL, <b>notification</b> <b>policies</b> can be specified with different conditions, adapted to {{the site where the}} location service is used.|$|R
30|$|The Policy Enforcer evaluates {{access control}} and <b>notification</b> <b>{{policies}}.</b> Access control policies are evaluated for each pull request made through the Queries API (see next item) while <b>notification</b> <b>policies</b> are evaluated {{when a new}} location event is generated.|$|R
3000|$|Each policy {{goes through}} the SPL compiler, which {{produces}} an enforceable policy {{in the form of}} a Java class. Instances of these classes, with proper initialization, are attached to each target, as access control or <b>notification</b> <b>policies,</b> i.e., to the accessControlPolicies [...] or the <b>notification</b> <b>Policies</b> [...] properties in Fig.  2, respectively.|$|R
40|$|UM Healthcare {{reducing}} expenses, Winship reports [...] UM curators approve parental <b>notification</b> <b>policy</b> {{for students}} [...] Leadership Development Program seeks nominees [...] State appropriations expected to decline for next fiscal year [...] Task force to examine achievement gap in schools [...] Alumni Alliance gives awards for oustanding service [...] UMKC project could help startup ventures out of science [...] College savings {{plan is the}} MO$T...|$|E
30|$|The Notification Distributor {{receives}} {{events from}} the Location Manager and {{interacts with the}} Policy Enforcer (see next item) {{to know if there}} are users to be notified of a given event. As a consequence, the Policy Enforcer will evaluate each <b>notification</b> <b>policy.</b> If, for a certain notification request, a notification is needed, the Notification Distributor is responsible for doing so, using the previously configured communication channels for the user being notified.|$|E
30|$|Events {{surviving}} the filtering are then checked for every <b>notification</b> <b>policy,</b> but only its domain of applicability (that will rule {{out most of}} them), and not the entire policy evaluation. This imposes less overhead than maintaining, for each individual policy, an additional dedicated bloom filter (implying the calculation of several hashing functions), as applicability conditions are usually a simple test that accounts for {{only a fraction of}} the overall policy evaluation processing. Whenever the coverage of entities involved in policies is enlarged (due to loading of a new policy), an updated digest is sent to the Location Manager.|$|E
30|$|In {{both cases}} (i.e., access control and <b>notification</b> <b>{{policies}}),</b> {{the actions of}} the Policy Enforcer are governed by policies specified and enforced using SPL, with extensions described in the next section. These policies depend on current and past interactions with Jano, e.g. location requests and location events. Users of Jano need not learn SPL, because Jano provides a library with a pre-defined set of location access control and <b>notification</b> <b>policies,</b> and policy templates or idioms. Users, then, only have to parameterize them according to their needs using a web-based interface (described in Sect.  4.5).|$|R
30|$|<b>Notification</b> <b>Policies</b> {{are used}} by the Notification Distributor to {{evaluate}} the need and the authorization for a push response, i.e., a notification. This evaluation happens, at most, once for each time the Location Manager generates a location event. In the previously presented scenario, in which Alice is interested on a book she ordered, each time the book enters or leaves a place, the <b>notification</b> <b>policies</b> of Alice are evaluated {{to determine if a}} notification must be sent (or not).|$|R
30|$|<b>Notification</b> <b>policies</b> {{are used}} to decide {{about the need for}} a notification. They are {{associated}} to a user when a push request is made.|$|R
30|$|When the Notification Distributor (see Fig.  7) {{receives}} a location event stating that Bob has arrived at inesc/floor 6, it will contact the Policy Enforcer, {{with the objective}} of knowing who wants to be notified. For this, a new SPL event is built, where author is Bob, action is Arrive and targetPlace is inesc/floor 6. Then, this event is used to evaluate each user pending notification policies. If the <b>notification</b> <b>policy</b> determines that a notification should be sent and the access control policy of the moving target allows it, a communication channel (e.g., web service, e-mail, etc.), previously configured by the user, will be used to send the notification.|$|E
40|$|Existing Internet {{protocols}} rely on cooperative {{behavior of}} end users. We present a control-theoretic algorithm to counteract uncooperative users which change their congestion control schemes to gain larger bandwidth. This algorithm rectifies uncooperative users; that is, {{forces them to}} comply with their fair share, by adjusting the prices fed back to them. It is to be implemented {{at the edge of}} the network (e. g. by ISPs), and can be used with any congestion <b>notification</b> <b>policy</b> deployed by the network. Our design achieves a separation of time-scales between the network congestion feedback loop and the price-adjustment loop, thus recovering the fair allocation of bandwidth upon a fast transient phase. ...|$|E
30|$|Jano’s {{scalability}} regarding {{evaluation of}} notification policies is further illustrated in Fig.  19 b, detailing the percentage slowdown of <b>notification</b> <b>policy</b> evaluation {{as the number}} of concurrent events increases tenfold, each time, from 10 up to 1, 000, against serial execution. The slowdown observed is never smaller than 25  % but is always under 100  %, being most of the time between 40 and 80  %. This shows that when the load is increased by a factor of 1, 000, policy evaluation times do not even double, which demonstrates the scalability of Jano notification policies evaluation under load. Once again, these slowdowns represent absolute times under 50  ms, within the latency constrains for interactivity and perceptual tasks [5, 8].|$|E
30|$|The results {{presented}} in Fig.  19 a show the evaluation time (in logarithmic scale) of the <b>notification</b> <b>policies.</b> We {{can see that}} as more <b>notification</b> <b>policies</b> need to be enforced, the average evaluation time does increase, although roughly in a linear fashion {{with the number of}} polices. We recall that 50 active policies is nonetheless a rather large number (compared to others found in literature [29]), representing up to 50, 000 concurrent policy evaluations, and that even then, all times are below 50  ms.|$|R
30|$|The Queries API (for query and {{administration}} purposes) {{is used by}} other services or applications to get instant locations and configure the access control and <b>notification</b> <b>policies.</b>|$|R
30|$|The {{next section}} gives a {{description}} of SPL, focusing on the language elements relevant to Jano, and those newly introduced (e.g., regarding policy awareness). Section 4 presents examples of history-based access control <b>policies</b> and <b>notification</b> <b>policies,</b> showing the generality and expressiveness of Jano’s location policies.|$|R
40|$|Abstract — Existing Internet {{protocols}} rely on cooperative {{behavior of}} end users. We present a control-theoretic algorithm to counteract uncooperative users which change their congestion control schemes to gain larger bandwidth. This algorithm rectifies uncooperative users; that is, {{forces them to}} comply with their fair share, by adjusting the prices fed back to them. It is to be implemented {{at the edge of}} the network (e. g. by ISPs), and can be used with any congestion <b>notification</b> <b>policy</b> deployed by the network. Our design achieves a separation of time-scales between the network congestion feedback loop and the price-adjustment loop, thus recovering the fair allocation of bandwidth upon a fast transient phase. I...|$|E
40|$|Abstract—Existing Internet {{protocols}} rely on cooperative {{behavior of}} end users. We present a control-theoretic algorithm to counteract uncooperative users which change their congestion control schemes to gain larger bandwidth. This algorithm rectifies uncooperative users; that is, {{forces them to}} comply with their fair share, by adjusting the prices fed back to them. It is to be implemented {{at the edge of}} the network (e. g., by ISPs), and can be used with any congestion <b>notification</b> <b>policy</b> deployed by the network. Our design achieves a separation of time-scales between the network congestion feedback loop and the price-adjustment loop, thus recovering the fair allocation of bandwidth upon a fast transient phase. Index Terms—Network congestion control, singular-perturbations, uncooperative flow control. I...|$|E
40|$|In {{a network}} {{which does not}} {{differentiate}} among users, the equilibrium rate for any user is primarily decided by the congestion control being used. By changing their congestion control schemes, “uncooperative” users can gain more than {{their fair share of}} bandwidth, at the cost of cooperative users. We present a control-theoretic algorithm to counteract uncooperative users by adjusting the prices fed back to them. This algorithm is implemented {{at the edge of the}} network (e. g. by ISPs), and can be used with any congestion <b>notification</b> <b>policy</b> deployed by the network. Our design achieves a separation of time-scales between the network congestion feedback loop and the price-adjustment loop, thus recovering the fair allocation of bandwidth upon a fast transient phase...|$|E
30|$|In {{order to}} enhance the {{usability}} of Jano, a web-based GUI runs {{on top of the}} Jano API, using the ASP.NET platform. Using this GUI, a non-SPL expert user can make not only location requests but also select and provide the necessary parameters for his access control and <b>notification</b> <b>policies.</b>|$|R
30|$|The {{qualitative}} {{evaluation of}} Jano {{was done by}} implementing several location applications using different location technologies (e.g., wifi, GPS, RFID) demonstrating Jano’s capability to deal with location technology heterogeneity. One of the most representative use cases is described in this section along with two applications in which a wide set of access control and <b>notification</b> <b>policies</b> were used.|$|R
30|$|Jano {{provides}} an efficient and adaptable Rule Handler, named SPL Policy Enforcer, that enforces both Access Control <b>Policies</b> and <b>Notification</b> <b>Policies.</b> These policies are associated to persons, objects and places. They regulate if a pull or push response, can be given, controlling {{the disclosure of}} location information. The Policy Enforcer applies access control policies after a common policy is enforced. This common policy gives the opportunity for the site administrator to enforce a set of common global rules; for example, “mail objects can only be localized by their receivers and if the object has already left the distribution department”.|$|R
40|$|This article {{presents}} a literature {{review of the}} empirical evaluations of sex offender registration and community <b>notification</b> <b>policy,</b> commonly known as Megan’s Law. A background of the social problem that stimulated the policy formation of Megan’s Law is provided. Literature searches presented 12 empirical evaluations on different aspects of Megan’s Law. These evaluations focused on stakeholder, client-centered, goal-oriented, and process evaluations. Many sex offenders found some value to Megan’s Law in both deterring future abuse and when DNA collection was used in reducing false accusations. Implementation of this policy varied both within states and between states. Community members generally support the policy’s concept. Goal-oriented evaluations are not supportive of the policy’s effectiveness. Sugges-tions for future evaluative research on this policy are given...|$|E
40|$|The {{purpose of}} this study was to examine the attitudes and {{perceptions}} of parents through an assessment of their feelings concerning parental notification polices. Participants in this study were selected from a sampling pool of parents that were members of parent associations at 64 college and university campuses throughout the country identified as having a parental <b>notification</b> <b>policy.</b> The project consisted of 5 parents from midwestern universities that were asked a variety of questions concerning: the child's collegiate development, benefits of parental notification, the role of the federal government, and financial dependence stipulations. The interpretation of qualitative data revealed that parents were in favor of parental notification policies and saw the implementation of these policies as a positive step by universities to utilize parental involvement in curbing student misconduct. Department of Educational StudiesThesis (M. A. ...|$|E
40|$|This paper {{outlines}} {{the importance of}} maintaining a failure mode and effects analysis (FMEA) and points out the relevance of this process for concurrent engineering. To maintain an FMEA means twice: first, to preserve or even improve the correctness of the data and second, to keep it up to date. A <b>notification</b> <b>policy</b> is proposed that provides support for conducting the necessary changes and notifies other persons to whom these changes may be of interest. Several knowledge bases support this process. They are briefly introduced and their contribution is described. 1 Introduction Failure mode and effects analysis (FMEA) is an important method for preventive quality assurance. It involves the investigation and assessment of all causes and effects of all potential failure modes on a system in the earliest development phases [1]. If an FMEA 1 is performed properly, the resulting documents contain a lot {{of knowledge about the}} design and manufacturing of the products of a company which is [...] ...|$|E
40|$|We {{present a}} study of bounded deferral, <b>notification</b> <b>policies</b> that defer {{incoming}} alerts for a bounded time if a user is busy when alerts arrive. We first review empirical studies that highlight the value of pursuing {{a deeper understanding of}} bounded-deferral policies. Then, we present a general decision-theoretic formulation of bounded deferral. We introduce families of functions that are expressive yet enable optimization of deferral times based on the outcome of simple tests. ...|$|R
30|$|More important, {{these results}} {{illustrate}} {{the performance of}} Jano when events have to be processed against {{at least one of}} the <b>notification</b> <b>policies.</b> This does not take into account the effect of the filtering mechanism, based on using bloom filters (described in Sect.  4.3), that minimizes the number of events to be considered. As already mentioned, this mechanism ensures that only those events needing to be further processed (because they are relevant for active policies) do have to be considered.|$|R
3000|$|Another {{example of}} history-based {{policies}} is policy OnlyOutsideMailRoom, also presented in Fig.  6. It {{takes into account}} the location event leave (pe.action =“Leave”). If this policy is applied to a mail object (the target [...]), this means that such object can only be located after leaving the mail distribution room (pe.targetPlace = [...] "MailRoom"). In addition to the examples previously described, Sect.  4.1 shows examples of history-based <b>notification</b> <b>policies</b> where location events (i.e., arrive and leave) are considered to decide whether a notification is needed.|$|R
40|$|The aim of {{this study}} was to test the {{hypothesis}} that South Carolina’s sex offender registration and <b>notification</b> <b>policy</b> influenced juvenile sex offense case plea bargains. Two types of plea bargains were examined: initial sex offense charges amended to nonsex offense charges and amended to lower severity charges. Comparison analyses were conducted with juvenile assault and robbery offense cases. Archival data on cases involving 19, 215 male youth charged with sex, assault, and/or robbery offenses between 1990 and 2004 informed analyses. Of these youth, 2, 991 were charged with one or more sex offense, 16, 091 were charged with one or more assault offense, and 2, 036 were charged with at one or more robbery offense. Generalized estimating equations (GEE) were used to model changes in the probabilities of plea bargain outcomes across three time intervals: before policy implementation (1990 to 1994), after initial policy implementation (1995 to 1998), and after implementation of a revised policy that included online registration requirements (1999 to 2004). Results indicate significant increases in the probability of plea bargains for sex offense case...|$|E
40|$|OBJECTIVE: To compare partner {{notification}} {{practice and}} outcomes at a provincial and a metropolitan clinic. DESIGN: Prospective study, following standardisation of partner <b>notification</b> <b>policy.</b> SETTINGS: Sheffield Department of Genitourinary Medicine, Royal Hallamshire Hospital and Jefferiss Wing Centre for Sexual Health, St Mary's Hospital, London. SUBJECTS: Consecutive patients with culture positive gonorrhoea between October 1994 and March 1996 who were interviewed by a health adviser. RESULTS: In Sheffield, 235 cases reported 659 outstanding contacts, of whom 129 (20 %) were subsequently screened, and 65 (50 %) had gonorrhoea. At St Mary's 510 cases reported 2176 outstanding contacts, of whom 98 (5 %) {{were known to}} have been screened, and 53 (54 %) had gonorrhoea. Patient or provider referral agreements appeared more productive in Sheffield, where 60 % resulted in contact attendance, compared with 13 % at St Mary's. Provider referral was used more frequently in Sheffield, for 44 % of referrals, compared with 1 % at St Mary's. Multivariate analysis showed that partner notification was less effective for casual and short term (< 7 days) partnerships in both centres, and for homosexual men at St Mary's. CONCLUSION: Partner notification outcomes were better in the provincial setting where contact attendance could be recorded more reliably and provider referral was used more extensively. The high proportion of contacts who remained untraced in both settings indicates the need for complementary screening and prevention initiatives. ...|$|E
40|$|Objectives: To elicit {{community}} {{preferences for}} colorectal cancer (CRC) screening by faecal occult blood test (FOBT) using discrete choice modeling (DCM). To provide policymakers with {{information that would}} assist them in designing the future national screening program. Methods: 301 participants in central Sydney, aged 50 to 70 years, at 'average' risk of CRC, participated in a face-to-face discrete choice study interview in which screening profiles were posed to derive estimates for preferences for CRC FOBT screening. Results: Three characteristics were varied in our screening profiles, namely: benefit (CRC deaths prevented); potential harm (false positive induced colonoscopy); and <b>notification</b> <b>policy</b> (of test result). Ninety-four respondents (32 %) did not trade off CRC deaths prevented for any reduction in harms. Twelve per cent always chose no screening. The remaining 56 % traded benefits and harms. These latter respondents (n= 164) were willing to accept 853 (false positive induced) colonoscopies for one CRC death prevented. Conclusions: While survival was all that mattered for just over one-third of the sample and 12 % would choose no screening, the remaining individuals were prepared to trade CRC deaths prevented against other characteristics. CRC screening will not receive unqualified community support, irrespective of harms. Implications: In any future national CRC screening program, consideration of these insights about community assessment of benefits, harms, costs and other characteristics of CRC screening is warranted. No Full Tex...|$|E
40|$|Since the {{inception}} of the Higher Education Reauthorization Act of 1998 by the United States Congress, there has been limited research conducted on parental <b>notification</b> <b>policies</b> on campuses of Higher Education concerning alcohol and drug offenses committed by students. This study surveyed parents of incoming freshmen at the University of North Texas regarding their perceptions of Parental <b>Notification</b> <b>policies</b> and their perceptions of underage alcohol offenses by gender, age, ethnicity, and parental status. The relationship between parental notification and underage alcohol offenses was also examined. This study, conducted in the summer of 2002, at the University of North Texas had 539 respondents. An instrument developed to determine parental perceptions of underage alcohol use and parental notification consisted of 20 dichotomous questions. Chi-square tests of independence were used to analyze the data because it could calculate the relationships between two sets of nominal data. Data show that most parents want to be notified in all situations involving underage alcohol offenses and their offspring. Generally, parents do not believe their offspring will use alcohol underage as they enter college and that they are not binge drinkers. Females want to be notified about their student's underage alcohol offenses at a higher rate than males. Males want to be notified at a higher rate than females if using alcohol jeopardizes housing or enrollment in school for their student. Native Americans have great concern for their students in all areas of alcohol use and binge drinking. Parents should stay actively involved in the lives of their offspring as they attend institutions of higher education as well as stay involved with the University community in which their student attends...|$|R
50|$|Many {{factors may}} explain colleges' failure to {{implement}} the NIAAA's recommendations to control underage drinking on campus: a lack of university funding, a lack of time, a perceived lack of authority or jurisdiction within the community, or even {{a lack of interest}} {{on the part of the}} university, many universities even see the program as a waste of resources. Whatever the reasons may be, a multitude of options are available should colleges choose to institute programs to decrease instances of underage drinking on campus. These options include, but are not limited to, alcohol education programs, social norms campaigns, substance-free housing, individual interventions, parental <b>notification</b> <b>policies,</b> disciplinary procedures for alcohol-related violations, and amnesty policies to protect the health and safety of students.|$|R
40|$|Abstract: We {{describe}} {{a study on}} the influence of instant messaging (IM) on ongoing computing tasks. The study both replicates and extends earlier work on the cost of sending notifications at different times and the sensitivity of different tasks to interruption. We investigate alternative hypotheses about the nature of disruption for a list evaluation task, an activity identified as being particularly costly to interrupt. Our findings once again show the generally disruptive effects of IM, especially during fast, stimulus-driven search tasks. In addition, we show that interruptions coming early during a search task are more likely to result in the user forgetting the primary task goal than interruptions that arrive later on. These findings have implications for the design of user interfaces and <b>notification</b> <b>policies</b> that minimize the disruptiveness of notifications...|$|R
