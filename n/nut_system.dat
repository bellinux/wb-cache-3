22|23|Public
5000|$|... #Caption: A {{straight}} bore plastic stopcock without the female joint. Note its washer and <b>nut</b> <b>system</b> for attaching to its female joint.|$|E
50|$|In Malaysia, {{he retired}} from the race {{following}} problems with a new captive wheel <b>nut</b> <b>system</b> that the team had introduced {{at the beginning of the}} season.|$|E
50|$|The {{suspension}} was independent at {{the front}} using coil springs while at the rear was a live axle and half elliptic leaf springs. The steering gear used a worm and <b>nut</b> <b>system.</b>|$|E
40|$|The present work is an {{introductory}} {{research in the}} application of knowledge-based techniques in network management. The goal is to apply knowledge-based tools in local net work operations management. The interface between the knowledge-based tools and network software has been tested on examples of file transfer and transformation. Application of reflection in network management is outlined. The <b>NUT</b> programming <b>system</b> {{has been used as a}} programming tool which supports reflection and provides high-level graphic interface...|$|R
40|$|A {{floating}} <b>nut</b> retention <b>system</b> {{includes a}} <b>nut</b> {{with a central}} aperture. An inner retainer plate has an opening which is fixedly aligned with the nut aperture. An outer retainer member is formed of a base plate having an opening and a surface adjacent to a surface of the inner retainer plate. The outer retainer member includes a securing mechanism for retaining the inner retainer plate adjacent to the outer retainer member. The securing mechanism enables the inner retainer plate to float {{with respect to the}} outer retainer number, while simultaneously forming a bearing surface for inner retainer plate...|$|R
50|$|Formerly, {{the main}} chutes were {{released}} from the SRB at impact using a parachute release <b>nut</b> ordnance <b>system</b> (residual loads in the main chutes would deploy the parachute attach fittings with floats tethered to each fitting). The current design keeps the main chutes attached during water impact (initial impact and slapdown). Salt Water Activated Release (SWAR) devices are now incorporated into the main chute riser lines to simplify recovery efforts and reduce damage to the SRB. The drogue deployment bag/pilot parachutes, drogue parachutes and frustums, each main chute, and the SRBs are buoyant and are recovered.|$|R
50|$|The Ibanez Pro-Line {{series was}} a line of guitars {{produced}} by Hoshino Gakki and sold under the Ibanez brand. The series was introduced in 1985 and sold through 1986. It was a pro-level line of guitars and bass guitars and the first series of guitars designed and manufactured by Ibanez to use their V-5 pickups. The Pro-line series also used the company's Pro Rock'R tremolo bridge and TOPLOK locking <b>nut</b> <b>system.</b>|$|E
5000|$|Invader: A [...] "super strat" [...] style design; the Invader {{typically}} has a humbucker in bridge position; the 2010 {{model features}} two dual blade pickups (one at {{neck and the}} other in the middle position); there is also a split coil function. Some use a Kahler bridge locking vibrato system with a locking nut; Floyd Rose (also with locking <b>nut</b> <b>system)</b> and the G&L dual fulcrum are also options. The Invader XL has two humbuckers.|$|E
5000|$|In 2007, the Super-Vee company {{developed}} a double-locking vibrato system that requires no {{modifications to the}} body or neck of the guitar. This system received a patent for its [...] "Blade" [...] technology {{which is based on}} what they call [...] "frictionless action". This type of action removes the contact pivot point that all other vibrato systems rely on aiming to eliminate wear irregularities that cause tuning instability. Super-Vee also received a patent for their side-locking <b>nut</b> <b>system,</b> which does not require instrument modifications.|$|E
50|$|In {{the late}} 1970s Midway {{contracted}} Dave Nutting Associates {{to design a}} video display chip {{that could be used}} in all of their videogame systems, from standup arcade games, to a home computer <b>system.</b> The <b>system</b> <b>Nutting</b> delivered was used in most of Midway's classic arcade games of the era, including Gorf and Wizard of Wor.|$|R
40|$|A {{machine vision}} system was {{developed}} to separate stained pistachio nuts, which comprise about 5 % of the California crop, from unstained nuts. Stained nuts have lower consumer acceptance and higher incidences of aflatoxin contamination. The machine vision system {{may be used as}} an automated quality control device to detect stained <b>nuts.</b> The <b>system</b> was tested on three different pistachio process streams: the bichromatic colour sorter reject stream (floaters and sinkers) and the manually sorted small nut shelling stock stream (floaters). The system had a minimum overall error rates of 13 % for the sinker bichromatic reject stream, 14 % for the floater bichromatic sorter reject stream and 15 % for the floater small shelling stock stream...|$|R
5000|$|There are {{secondary}} advertisements {{that are}} similar to the final part of the original advertisements. They feature the man sitting in a social setting, surrounded by beautiful young women, conveying a short opinion to the viewer on certain subjects, such as bar <b>nuts,</b> the two-party <b>system,</b> self-defense, trophy wives, and [...] "bromance". He then finishes the advertisement by holding a Dos Equis beer and saying, [...] "Stay thirsty, my friends." ...|$|R
5000|$|Steering is by a worm and <b>nut</b> <b>system,</b> its box {{raised to}} give a {{comfortable}} rake to the steering wheel. There are just the four brakes, one on each wheel [...] They are not compensated. The brakes are operated by rods. There is a hand lever by the driver's right which controls the rear brakes alone. The aluminium brake shoes are adjusted for wear by a wedge which opens or closes a fulcrum {{on one end of}} the shoe. The brake drums are enclosed.|$|E
5000|$|The Prodigy series {{featured}} two {{single coil}} pickups and one humbucker at bridge position (sometimes {{referred to as}} a [...] "Fat Strat" [...] configuration). The body shape was {{similar to that of the}} Stratocaster; however, it featured an offset body, sharper body edges, and a smaller headstock. The Prodigy was relatively different from Fender's HM Stratocaster since it used Leo Fender's classic Synchronized tremolo system. The Prodigy II was introduced in 1992 with the Kahler locking tremolo & <b>nut</b> <b>system</b> instead; this model also featured Fender/Schaller tuners and black hardware.|$|E
50|$|The August 1935 {{announcement}} from Daimler {{was that}} the coachwork of the standard saloons was redesigned. The swept tail of the new six-light saloon now covered the spare wheel. The new bodies were appreciably wider. The special independent assembly of the radiator and front wings {{was applied to the}} Fifteen as previously applied to the new Daimler Light Twenty announced on the 12 July 1935.A number of important improvements were made to the front part of the chassis though it retained the same dimensions. Suspension and steering were changed. To reduce fore and aft movement as much as possible the front springs were lengthened and made more supple in order to bring their periodicity nearer that of the rear springs. Steering was changed to the worm and <b>nut</b> <b>system.</b> The steering column was made adjustable for reach. Centralised automatic chassis lubrication and easy jacking facilities were now installed.|$|E
50|$|The guitar {{models of}} the regular line come with {{approximately}} similar features and various pick-up configurations. The bodies are semi-hollow with a backplate and come with either a Gotoh 510UB hardtail bridge, a Gotoh GE-103B tune-o-matic bridge or a Schaller LP tremolo bridge. The glued in necks feature 22 medium jumbo frets, a 25.5” scale length and a 1-11/16” Tune-X Tuning <b>System</b> <b>nut.</b> Almost each Flaxwood guitar bears a Finnish name representing its main personality and characteristics.|$|R
40|$|This paper {{discusses}} {{a specific}} feature of structural synthesis of programs. Using regular data structures enables {{to optimize the}} method of structural synthesis of programs for several particular cases. The method for program construction described here is implemented in the <b>NUT</b> programming <b>system.</b> 1 Introduction Automatic program construction from logical specifications {{is a way to}} obtain reliable software. Structural synthesis of programs is a method to transform formal specifications into effective programs via automatic proving of solvability of the problem [1, 2]. This technique can be also treated as satisfying functional constraint network using value propagation [3]. The method is powerful under certain conditions (see [3]) but for several particular cases it can be optimized. In this paper cases involving regular data structures like arrays, sequences, vectors etc. are discussed. The approach is motivated by a number of applications where such data structures appear. In thi [...] ...|$|R
5000|$|In 2006, Charles C. Cornelius and Shawn P. Lawlor {{received}} a patent for a cage-less recirculating roller screw system. [...] As {{with the traditional}} recirculating roller screw system, rollers disengage from the screw when they come upon an axial groove in {{the wall of the}} <b>nut.</b> The <b>system</b> differs in that the rollers are continually engaged by the nut, and the axial groove of the nut is threaded. Non-helical threads in the axial groove of the nut return the roller to its axial starting position (after completion of an orbit). Non-circular compression rings, or cam rings, at opposite ends of the rollers (roller axles) apply constant pressure between rollers and nut, synchronizing roller rotation and thrusting the rollers into the nut's axial groove. Lacking ring gears and roller cage, cage-less recirculating roller screws can be relatively efficient and, as a result, permit higher dynamic capacities for some screw shaft diameters.|$|R
50|$|Stopcocks {{are often}} parts of {{laboratory}} glassware such as burettes, separatory funnels, Schlenk flasks, and columns used for column chromatography. The stopcock is a smooth tampered plug or rotor with a handle, which fits into a corresponding ground glass female joint. The stationary female joint is designed {{such that it}} joins two or more pieces of glass tubing. The stopcock has holes bored through it which allow the tubes attached to the female joint to be connected or separated with partial turns of the stopcock. Most stopcocks are solid pieces with linear bores although some are hollow with holes to simple holes that can line up the joints tubing. The stopcock is held together with the female joint with a metal spring, plastic plug retainer, a washer and <b>nut</b> <b>system,</b> {{or in some cases}} vacuum. Stopcocks plugs are generally made out of ground glass or an inert plastic like PTFE. The ground glass stopcocks are greased to create an airtight seal and prevent the glass from fusing. The plastic stopcocks are at most lightly oiled.|$|E
40|$|One of {{the main}} factors of the {{vitality}} of a software system is its extendability and possibility to connect it to other software systems. In this particular case we are focusing at a knowledge-based software environment, the <b>NUT</b> <b>system,</b> where these two factors are of special importance. In knowledgebased software engineering the main goal is to efficiently exploit existing knowledge about a problem domain. This knowledge can exist implicitly {{in the form of}} computer programs developed during the longer time and collected into program libraries. In this paper we describe two interfaces added to the <b>NUT</b> <b>system,</b> which enable to extend the system with native code libraries and co-operate with a Tcl/Tk programming environment. 4 Contents Abstract............................................................................. 3 Contents....................................... [...] . ...|$|E
40|$|The deep {{semantics}} of {{a scheme}} {{is defined as}} a set of programs derivable from the scheme. A uniform way of representing deep semantics of schemes is introduced based on the usage of a program synthesizer. An implementation of structural synthesis of programs in the <b>NUT</b> <b>system</b> and visual tools built on top of it are described. A visual compositional programming technique based on these tools is demonstrated on a number of examples. 1. Department of Teleinformatics, Royal Institute of Technology, Kista, Sweden 2 1. Introduction A visual programming tool is described in this paper which is intended for compositional programming. It can be, first of all, used for developing problem-oriented visual languages in engineering domains. Visual compositional programming can be considered as an extension of visual object-oriented programming thoroughly discussed in [1]. The extension lies in different encapsulation of objects and different usage of classes which is inherent to the <b>NUT</b> <b>system</b> [ [...] ...|$|E
40|$|We {{describe}} two exotic {{systems of}} classical mechanics: the McIntosh-Cisneros-Zwanziger ('MICZ') Kepler system, of motion of a charged particle {{in the presence}} of a modified dyon; and Gibbons and Manton's description of the slow motion of well-separated solitonic ('BPS') monopoles using Taub <b>NUT</b> space. Each <b>system</b> is characterized by the conservation of a Laplace-Runge-Lenz vector, and we use elementary vector techniques to show that each obeys a subtly different variation on Kepler's three laws for the Newton/Coulomb two-body problem, including a new modified Kepler third law for BPS monopoles. Comment: 15 page...|$|R
40|$|The {{development}} of the market of a product needs a wide knowledge of consumption and marketing practices relevant. This paper issue is to analyze the cashew <b>nuts</b> commercialization <b>system</b> in Bantè and Savalou regions {{in order to identify}} strengths and weaknesses relevant to the cashew nuts chain organisation. The study is based on new institutional economics and contestable markets theories. The Structure Conduct Performance paradigm and the channel approach were used. Different statistical analyses were made to test hypotheses. It appears that the cashew nuts market, even though almost contestable, is an oligopsonic market. The prime collect of cashew nuts is done by women, in majority. One assists to a standardisation process of measure tools. The marketing chain is simple and in favor of a vertical organisation. Nevertheless, the lack of producers and buyers organisations, the information asymmetry, and the lack of suitable financial sources constitute the mains constraints to the market efficiency. ...|$|R
40|$|AbstractDue to {{the amount}} of {{compounds}} involved in the biodiesel production, liquid–liquid equilibrium data are essential in order to predict the proportions in which these compounds exist and subsequently proceed with a more efficient purification and aid {{in the design of the}} reactor and ponds. In this study, biodiesel was obtained through the basic transesterification of Brazil nut (Bertholletia excelsa) oil with methanol. Afterwards, the phase equilibrium behavior of this Brazil <b>nut</b> biodiesel+methanol+glycerol <b>system</b> was determined at T= 303. 15 and 323. 15 K and atmospheric pressure. The solubility curves were determined by the cloud-point method in isothermal conditions. The liquid-phases compositions were measured by determining their refractive index and densities. The Othmer–Tobias correlation was used to ascertain the quality of the experimental tie-lines. The results were correlated with the NRTL and UNIQUAC activity coefficient models. The calculated data showed good agreement with the experimental results, yielding a mean quadratic deviation in the composition of 1. 49 % and 1. 18 % using NRTL at 303. 15 and 323. 15 K, respectively, and 1. 85 % and 1. 97 % using UNIQUAC at 303. 15 and 323. 15 K, respectively...|$|R
40|$|Software {{engineering}} is a knowledge-intensive activity, {{and there have}} continuously been attempts to use knowledge-based techniques in software development (or forward engineering). The possibility to employ knowledge -based techniques in software reengineering (and reverse engineering {{as a part of}} it) needs to be investigated. The reengineering of an existing software system starts with recovering the design of the system from the design documentation or, most often, from the source code. Understanding a program code is at present still complicated. To facilitate it, the SoftSpy architecture for performing experiments with object-oriented software reverse {{engineering is}} suggested and presented. Its implementation in the <b>NUT</b> <b>system</b> is shown. The results of experiments dealing with the visualisation of some aspects of the software code are also presented and discussed. 4 Contents Abstract................................................ [...] ...|$|E
40|$|This {{document}} {{presents the}} Distributed Programming Toolkit rNUT users' guide and reference pages. The rNUT toolkit {{is an extension}} of the <b>NUT</b> <b>System</b> version 2. 7 developed at KTH in June 1994. It consists of a library librnut and a daemon nutd. The library librnut contains low level NUT routines which provide support for building a system of collaborative NUT processes running on the Parallel Virtual Machine, PVM. To support interprocess communication, librnut contains routines for exchanging classes, scripts and objects between NUT processes. The daemon nutd is an executable code which is used to manage NUT process spawning and display connections. The synchronization and communication mechanism of rNUT is based on the Extended Dataflow Actor model, EDA, developed at KTH. 4 Contents 1 Introduction........................................................................ 5 1. 1 Scope and Purpose of this Document [...] . ...|$|E
40|$|The aim {{of program}} {{analysis}} and visualisation (PA&V) {{is to help}} the programmer understand a program by means of graphical presentations of different aspects of the program. Program analysis and visualisation systems can be classified according to the specification method of visualisation, e. g. in what way can the user of the system specify his own visualisers. In the article three specification methods (predefinition, annotation and declaration) are discussed and some example systems are presented. Particular attention is paid to the declarative specification method, thus, in addition, knowledge-based program analysers are discussed. Increased understandability and modifiability are argued to be the main advantages of declarative PA&V systems. The general discussion is continued by a short presentation of a case study, where the declarative and synthesisable visualisation in the <b>NUT</b> <b>system</b> is discussed. Keywords: program analysis, program understanding, program visualisation, declarat [...] ...|$|E
40|$|Chord {{recognition}} from symbolic data {{is a complex}} task, due to its strong context dependency and {{the large number of}} possible combinations of the intervals which the chords are made of, specially when dealing with dissonances, such as 7 ths, 9 ths, 13 ths and suspended chords. None of the current approaches deal with such complexity. Most of them consider only simple chord patterns, in the best cases, including sevenths. In addition, when considering symbolic data captured from a MIDI guitar, we need to deal with non quantized and noisy data, which increases the difficulty of the task. The current symbolic approaches deal only with quantized data, with no automatic technique to reduce noise. This paper proposes a new approach to recognize chords, from symbolic MIDI guitar data, called COCHONUT (Complex Chords <b>Nutting).</b> The <b>system</b> uses contextual harmonic information to solve ambiguous cases, integrated with other techniques, such as decision theory, optimization, pattern matching and rule-based recognition. The results are encouraging and provide strong indications that the use of harmonic contextual information, integrated with other techniques, can actually improve the results currently found in literature...|$|R
40|$|The Clementine {{spacecraft}} {{was developed}} under the 'faster, better, cheaper' theme. The constraints {{of a low}} budget coupled with an unusually tight schedule forced many departures from the normal spacecraft development methods. This paper discusses technical lessons learned about several of the mechanisms on the Clementine spacecraft as well as managerial lessons learned for the entire mechanisms subsystem. A quick overview of the Clementine mission is included; the mission schedule and environment during the mechanisms releases and deployment are highlighted. This paper then describes the entire mechanisms subsystem. The design and test approach and key philosophies for a fast-track program are discussed during {{the description of the}} mechanisms subsystem. The mechanism subsystem included a marman clamp separation <b>system,</b> a separation <b>nut</b> separation <b>system,</b> a solar panel deployment and pointing system, a high gain antenna feed deployment system, and two separate sensor cover systems. Each mechanism is briefly discussed. Additional technical discussion is given on the marman clamp design, the sensor cover designs, and the design and testing practices for systems driven by heated actuators (specifically paraffin actuators and frangibolts). All of the other mechanisms were of conventional designs and will receive less emphasis. Lessons learned are discussed throughout the paper as they applied to the systems being discussed. Since there is information on many different systems, this paper is organized so that information on a particular topic can be quickly referenced...|$|R
40|$|Abstract. Improving the {{straightness}} {{accuracy of}} bending workpieces becomes an urgent {{problem for the}} development of bending equipment with large size and high precision. In order to obtain the characteristics of slider deformation, a three-dimensional finite element model was developed according to the mechanic characteristics of large-scale press brake and obtained the small deformation using FEM (finite element method). The numerical results are in good agreement with the experimentation. Then based on the simulation results we design a large-scale mechanical crowning system through which the press brake could be automatically compensated in the bend direction by means of a CNC (Computer Numerical Control) -powered motor and could also be compensated for local parts by adjusting the side screw <b>nuts</b> manually. The <b>system</b> has been successfully applied in production and its accuracy was increased 33 % compared with the traditional ones. It is proved that the present investigation can provide a technical support and reliable system for the improvement of accuracy of the press brakes...|$|R
40|$|NUT is a {{programming}} system for knowledge-based programming with facilities for automatic program synthesis. The system allows to specify computational problems in OO style. Concepts and objects {{can be treated}} in NUT as functional constraint networks. Constraint satisfaction problems are solved using algorithms for automatic program synthesis described earlier for the PRIZ system. 1. 1 Introduction The <b>NUT</b> <b>system</b> is the most advanced representative {{of the family of}} {{programming system}}s called PRIZ. This family includes systems PRIZ ES, Solver, MicroPRIZ, ExpertPRIZ, NUT etc., which have been developed in the last 20 years in the Institute of Cybernetics of the Estonian Academy of Sciences. All these systems support a knowledge-based programming style and they have been successfully used to solve engineering problems as well as in scientific investigations of AI. The NUT language was outlined as an extension of an object-oriented programming language with features of automatic program sy [...] ...|$|E
40|$|This paper {{introduces}} declarative reflection schemata {{and describes}} implementation tools for it. The keywords are planning and inference, i. e. a declarative (nonprocedural) description of self must exist and {{be used for}} making inferences about the future activities of the reflective system and about consequences of these activities. The <b>NUT</b> <b>system</b> {{is used as a}} platform for intelligent agents with reflection. NUT processes running in a network are agent shells filled with knowledge in the form of NUT packages. A knowledge-based technique supported by automatic synthesis of programs is used for declarative reflection: a reflection schema with a model of self managed by daemons is implemented using run-time compilation/decompilation of classes and metaprogramming with productions. Keywords: Declarative reflection; Intelligent agents; Metaprogramming. 1. 0 Introduction We use a concept of declarative reflection in order to distinguish a reflection where actions are planned and performed d [...] ...|$|E
40|$|Specification {{language}} of NUT has been recently extended with functions for distributed computing. This extension {{can be used}} for developing a collection of control structures for parallel compositional programming. The purpose of this thesis is to support distributed and coarse grained parallel computing in the <b>NUT</b> <b>system,</b> {{on the basis of the}} rNUT distributed programming toolkit. This work consists of two parts. In the first part an idea of an environment for domain-specific parallel programming is proposed. The proposed environment consists of a library of control structures, designed as classes in NUT, using the rNUT toolkit. A set of experimental control structures and their related applications have been implemented. In the second part an approach to a graphical language for parallel programming in NUT has been proposed. The proposed language simplifies parallel programming in NUT by using the expressiveness of the graphical language. An experimental implementation of the graphica [...] ...|$|E
40|$|The aim of {{this study}} was to develop and {{characterize}} a Brazil <b>nut</b> oil microemulsion <b>system</b> and determine the effect of this microemulsion on the superoxide release in human phagocytes. The microemulsion was formulated using distilled water, Brazil nut as the oily phase, Sorbitan monooleate, Polysorbate 80, and butan- 1 -ol. Hydrophile-lipophile balance of Brazil nut oil was determined, pseudoternary diagrams were prepared, and microemulsion diagram regions were preselected. Preliminary and accelerated stability tests, rheological characterization and dynamic light scattering were performed. The immunomodulatory effect of the microemulsion on the interactions with leukocytes was determined by superoxide release. The developed formulations were classified as oil-in-water, showed a Newtonian profile, with linear viscosity and droplet sizes of 46. 9; 66. 5 and 34. 3 nm. When we assessed the interaction of the microemulsion of Brazil nut oil with phagocytes, we observed an increase in superoxide release. Our findings indicate that the developed formulation improved the immunomodulatory activity of the Brazil nut oil, proving to be a natural product option for future applications, in particular for infectious diseases...|$|R
40|$|A {{separation}} {{system was}} designed for the X- 38 experimental crew return vehicle program to allow the Deorbit Propulsion Stage (DPS) to separate from the X- 38 lifting body during reentry operations. The configuration chosen was a spring-loaded plunger, known as the Bolt Retractor Subsystem (BRS), that retracts {{each of the six}} DPS-to-lifting body attachment bolts across the interface plane after being triggered by a separation <b>nut</b> mechanism. The <b>system</b> was designed to function on the ground in an atmospheric environment as well as in space. The BRS provides the same functionality as that of a completely pyrotechnic shear separation system that would normally be considered ideal for this application, but at a much lower cost. This system also could potentially be applied to future space station crew return vehicles. The design goal of 40 ms retraction time was successfully met in a series of demonstrations performed at the NASA Marshall Space Flight Center s Pyrotechnic Shock Facility (PSF) and Flight Robotics Laboratory (FRL). It must be emphasized that a full-scale test series was not performed on the BRS due to program schedule and cost constraints...|$|R
40|$|A novel {{concept to}} {{generate}} miniature shockwaves in a safe, repeatable, and controllable manner in laboratory confinements using an in situ oxyhydrogen generator {{has been proposed}} and demonstrated. This method proves to be more advantageous than existing methods because there is flexibility to vary strength of the shockwave, {{there is no need}} for storage of high pressure gases, and there is minimal waste disposal. The required amount of oxyhydrogen mixture is generated using alkaline electrolysis that produces hydrogen and oxygen gases in stoichiometric quantity. The rate of oxyhydrogen mixture production for the newly designed oxyhydrogen generator is found to be around 8 ml/s experimentally. The oxyhydrogen generator is connected to the driver section of a specially designed 10 mm square miniature shock tube assembly. A numerical code that uses CANTERA software package is used to predict the properties of the driver gas in the miniature shock tube. This prediction along with the 1 -D shock tube theory is used to calculate the properties of the generated shockwave and matches reasonably well with the experimentally obtained values for oxyhydrogen mixture fill pressures less than 2. 5 bars. The miniature shock tube employs a modified tri-clover clamp assembly to facilitate quick changing of diaphragm and replaces the more cumbersome <b>nut</b> and bolt <b>system</b> of fastening components. The versatile nature of oxyhydrogen detonation-driven miniature shock tube opens up new horizons for shockwave-assisted interdisciplinary applications. Published by AIP Publishing...|$|R
