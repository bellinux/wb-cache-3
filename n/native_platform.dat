44|105|Public
2500|$|Xwt, a GUI toolkit that maps API {{calls to}} <b>native</b> <b>platform</b> calls of the {{underlying}} platform, exposing one unified API across different platforms and making possible for the graphical user interfaces to have native look and feel on different platforms. It enables building GUI-based [...] desktop applications that run on multiple platforms, without having to customizing code for different platforms. Xwt API is mapped {{to a set of}} native controls on each supported platform. Features that are not available on specific platforms are emulated by using native widgets, which is referred to as hosting in the Xwt context. Xwt was partially used as GUI toolkit (beside GTK#) {{in the development of the}} Xamarin Studio. Supported [...] "backend" [...] engines are: WPF engine and Gtk engine (using Gtk#) on Windows, Cocoa engine (using MonoMac) and Gtk engine (using Gtk#) on Mac OS X, and Gtk engine (using Gtk#) on Linux.|$|E
50|$|IRIX 6.3 or 6.5.x (<b>native</b> <b>platform).</b>|$|E
5000|$|The acronym EGL is an initialism, which {{starting}} from EGL version 1.2 refers to Khronos <b>Native</b> <b>Platform</b> Graphics Interface. Prior to version 1.2, {{the name of}} the EGL specification was OpenGL ES <b>Native</b> <b>Platform</b> Graphics Interface. X.Org development documentation glossary defines EGL as [...] "Embedded-System Graphics Library".|$|E
40|$|Abstract – The {{computing}} power of smartphones is increasing as time goes. However, {{the proliferation of}} multiple different types of operating platforms affected interoperable smartphone applications development. Thus, the cross-platform development tools are coined. Literature showed that smartphone applications developed with the <b>native</b> <b>platforms</b> have better user experience than the cross-platform counterparts. However, comparative evaluation of usability of cross-platform applications on the deployment platforms is not studied yet. In this work, we evaluated usability of a crossword puzzle developed with PhoneGap on Android, Windows Phone, and BlackBerry. The evaluation was conducted focusing on the developer’s adaptation effort to <b>native</b> <b>platforms</b> and the end users. Thus, we observed that usability of the cross-platform crossword puzzle is unaffected on the respective <b>native</b> <b>platforms</b> and the SDK require only minimal configuration effort. In addition, we observed the prospect of HTML 5 and related web technologies to enhance usability in composing Web APIs for smartphone applications...|$|R
5000|$|First Smartomation is {{a process}} {{automation}} solution that uses non-invasive technology to integrate diverse applications on their <b>native</b> <b>platforms.</b> The aim of FirstSmartomation is to boost agent productivity, increase accuracy and enhance customer experience.|$|R
50|$|Several AJAX-based <b>native</b> widget <b>platforms</b> {{are also}} {{available}} for mobile devices.|$|R
50|$|Another notable {{feature is}} the use of {{reflection}} to handle native API end points. Rather than require separate binding layers between NativeScript and each mobile platform API, NativeScript uses reflection to gain information and metadata about the <b>native</b> <b>platform</b> APIs. New features added to any <b>native</b> <b>platform</b> API are available immediately.|$|E
5000|$|... #Subtitle level 2: Direct {{access to}} <b>native</b> <b>platform</b> APIs and Controls ...|$|E
5000|$|EGL - {{a similar}} {{cross-platform}} interface between OpenGL ES or VG {{and the underlying}} <b>native</b> <b>platform</b> window system ...|$|E
5000|$|CMUCL: Originally from Carnegie Mellon University, now {{maintained}} as {{free and}} open-source software {{by a group}} of volunteers. CMUCL uses a fast native-code compiler. It is available on Linux and BSD for Intel x86; Linux for Alpha; Mac OS X for Intel x86 and PowerPC; and Solaris, IRIX, and HP-UX on their <b>native</b> <b>platforms.</b>|$|R
25|$|Some {{incorrectly}} ported {{games or}} game engines have acceleration and interpolation curves which unintentionally produce excessive, irregular, or even negative acceleration when {{used with a}} mouse instead of their <b>native</b> <b>platform's</b> non-mouse default input device. Depending on how deeply hardcoded this misbehavior is, internal user patches or external 3rd-party software {{may be able to}} fix it.|$|R
50|$|Airpush {{acquired}} Hubbl, a New York City-based {{developer of}} <b>native</b> advertising <b>platforms,</b> in October 2013. Hubbl was acquired for $15 million.|$|R
5000|$|EGL, an {{interface}} between Khronos rendering APIs such as OpenGL ES or OpenVG {{and the underlying}} <b>native</b> <b>platform</b> window system ...|$|E
5000|$|Nemerle {{can take}} {{advantage}} of <b>native</b> <b>platform</b> libraries. The syntax is very similar to C#'s and other [...]NET languages. Here is the simplest example: ...|$|E
50|$|WinRT is a <b>native</b> <b>platform</b> and {{supports}} any native C++ code. A C++ developer can reuse existing native C/C++ libraries {{with the only}} {{need to use the}} language extensions when writing code that is interfacing with the runtime.|$|E
50|$|In 2013 ClickSoftware {{successfully}} integrated it’s software {{with the}} <b>native</b> salesforce1 <b>platform</b> making its products {{available on the}} salesforce app exchange.|$|R
50|$|In {{addition}} to its founding Alliance Partners, UKCloud has since announced a Cloud <b>Native</b> Cloud <b>platform,</b> based upon RedHat's Openstack, and an Oracle cloud platform.|$|R
5000|$|In-Genius: a <b>native,</b> in-memory <b>platform</b> for {{real-time}} {{insight and}} intelligent action on Big Data. General availability {{is planned for}} the third quarter of calendar 2013 ...|$|R
50|$|The Vulkan Window System Integration (WSI) {{does for}} Vulkan what EGL does for OpenGL ES. EGL {{is used by}} OpenGL ES {{programs}} to interface with the <b>native</b> <b>platform</b> windowing system. EGL handles context management, surface binding and rendering synchronization.|$|E
5000|$|Xwt, a GUI toolkit that maps API {{calls to}} <b>native</b> <b>platform</b> calls of the {{underlying}} platform, exposing one unified API across different platforms and making possible for the graphical user interfaces to have native look and feel on different platforms.|$|E
50|$|The {{developers}} of Codename One define it as a <b>native</b> <b>platform</b> but clarify that native widgets {{are usually not}} used to render the user interfaces of Codename One applications, this allows for great portability but has also come under fire by some critics of the lightweight approach.|$|E
5000|$|Platform-dependent {{look and}} feels: Look and feels that {{aim to be}} the closest as {{possible}} to the <b>platform</b> <b>native</b> GUI. The fidelity to the native look-and-feel theming has been improved in recent Java versions by leveraging the <b>platform</b> <b>native</b> GUI theming library when possible ...|$|R
50|$|LockerDome’s <b>native</b> ad <b>platform</b> optimizes ROI in real time. LockerDome's {{publishing}} platform powers {{content for}} thousands of brands and media companies, reaching an audience of millions.|$|R
5000|$|In J2SE 1.2, the Swing toolkit largely {{superseded}} the AWT's widgets. In {{addition to}} providing a richer set of UI widgets, Swing draws its own widgets (by using Java 2D to call into low-level subroutines in the local graphics subsystem) instead of relying on the operating system's high-level user interface module. Swing provides the option of using either the <b>native</b> <b>platform's</b> [...] "look and feel" [...] or a cross-platform look and feel (the [...] "Java Look and Feel") that looks the same on all windowing systems.|$|R
50|$|Generic Buffer Management (GBM) is an API which {{provides}} a mechanism for allocating buffers for graphics rendering tied to Mesa. GBM {{is intended to be}} used as a <b>native</b> <b>platform</b> for EGL on drm or openwfd. The handle it creates can be used to initialize EGL and to create render target buffers.|$|E
50|$|WGL or Wiggle is an API between OpenGL and the {{windowing}} system interface of Windows. WGL {{is analogous to}} EGL, which is an interface between rendering APIs such as OpenCL, OpenGL, OpenGL ES or OpenVG and the <b>native</b> <b>platform,</b> {{as well as to}} CGL, which is the OS X interface to OpenGL.|$|E
5000|$|In {{the first}} quarter of 2013, ironSource {{acquired}} Israeli advertising technology and network company AfterDownload Ltd. for $28 million to expand its integrated distribution, installation and value-building tools for software developers, publishers and advertisers. The company also utilizes the C.A.S.T. <b>native</b> <b>platform,</b> kudosKit [...] appreciation platform, which brings mobile application developers distribution and engagement services.|$|E
5000|$|InMobi {{launched}} their <b>native</b> advertising <b>platform</b> in 2014. <b>Native</b> advertising mimics {{the environment in}} which the ad is displayed thereby making it less intrusive to the end consumer.|$|R
50|$|Despite {{the fact}} that these compilers are no longer of any {{commercial}} value, the native Aztec C Compilers for these platforms are still as usable as they ever were on their respective <b>native</b> <b>platforms,</b> and the MS-DOS Aztec C cross-development compilers for these platforms work under Windows XP. This means that a C programmer-enthusiast can create programs in an emulator or in the Windows environment then run them on an emulator or transfer them to a real (but obsolete) target computer using a serial cable or some other means.|$|R
40|$|Mobile {{platform}} {{development has}} lately become a technological war zone with extremely dynamic and fluid movement, {{especially in the}} smart phone and tablet market space. This Synthesis lecture is {{a guide to the}} latest developments of the key mobile platforms that are shaping the mobile platform industry. The book covers the three currently dominant <b>native</b> <b>platforms</b> [...] iOS, Android and Windows Phone [...] along with the device-agnostic HTML 5 mobile web platform. The lecture also covers location-based services (LBS) which can be considered as a platform in its own right. The lecture utilizes a samp...|$|R
5000|$|EGL is an {{interface}} between Khronos rendering APIs (such as OpenGL, OpenGL ES or OpenVG) {{and the underlying}} <b>native</b> <b>platform</b> windowing system. EGL handles graphics context management, surface/buffer binding, rendering synchronization, and enables [...] "high-performance, accelerated, mixed-mode 2D and 3D rendering using other Khronos APIs." [...] EGL is managed by the non-profit technology consortium Khronos Group.|$|E
50|$|The second BiennaleOnline {{will launch}} in 2017.The BiennaleOnline {{attracted}} more than 400.000 visitors since its launch in April 2012. The success the BiennaleOnline {{led to the}} decision to present the exhibition on its <b>native</b> <b>platform</b> separate from ART+. In 2014 ART+ modified its business model to focus solely on facilitating secure ownership and trade of media art online.|$|E
50|$|Dolphin Browser is a {{freeware}} mobile browser for the Android and iOS {{operating systems}} developed by MoboTap. It {{was one of}} the first alternative browsers for the Android platform that introduced support for multi-touch gestures. Dolphin Browser uses the Webkit engine and its <b>native</b> <b>platform</b> rendering abilities, which allows for a small disk footprint. It can also run Adobe Flash on Android.|$|E
5000|$|<b>Native</b> {{advertising}} <b>platforms</b> {{are classified}} into two categories, {{commonly referred to}} as [...] "open" [...] and [...] "closed" [...] platforms, but hybrid options are also utilized with some frequency.|$|R
50|$|InMobi {{features}} 80 {{of the top}} 100 AdAge brands {{on their}} network, through which it provides a huge database for publishers to use their <b>native</b> advertising <b>platform</b> to monetize users.|$|R
40|$|In the {{evolution}} towards BIM Level 3 and beyond, D-Studio is developing middleware technology for integration and automation. While initial projects mostly focused on client- specific solutions, the middleware technology is currently evolving {{into a more}} flexible and generic technology. The back-end consists of small communication add-ins, which turn desktop BIM applications in live servers, using web technologies to make them accessible for client and other applications. The article discusses current and new solutions, leveraging this approach to produce a more robust and open access to model data, while leveraging <b>native</b> <b>platforms</b> as much as possible. status: publishe...|$|R
