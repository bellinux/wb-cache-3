1|566|Public
40|$|In {{this thesis}} we propose {{and explore the}} Overlay Distribution Network (ODN) concept as an alternative, more cost {{effective}} and more flexible deployment approach for Content Distribution Networks (CDN). Currently CDNs are established by deploying a dedicated server infrastructure spanning the Internet, which is prohibitively expensive. With ODN, we propose to lease transport and server resources from server and network providers to establish an overlay network of virtual servers and connecting virtual links, which is then used to deliver content {{in a similar manner}} to traditional CDNs. Such deployment strategy is expected to be less costly and could allow content network topologies and capacities to be adjusted on-the-fly according to demand. The aim of this thesis is to address the research issues that arise {{as a result of this}} new deployment approach. One of the major issues considered is ODN provisioning, which involves topology planning, resource dimensioning and content replica placement. ODN provisioning is significantly different from and more complex than its traditional CDN counterpart due to the nature of the shared infrastructure environment. ODN provisioning would not only have a different optimization objective but also require topology planning, resource dimensioning and content replica placement problems, which are currently addressed independently, to be addressed jointly. To address this ODN provisioning challenge, we develop a provisioning framework that could be used to formulate ODN provisioning models that meet these new requirements. ODN provisioning models for a number of key content distribution applications, including web content distribution, pay-per-view content distribution and live streaming multimedia distribution, are then developed and studied. The models are formulated as mixed integer linear programming optimizations that aim to determine the optimal ODN topology, capacity and content replication pattern, which deliver satisfactory service performance at the minimum cost or maximum profit. As the above ODN provisioning models belong to the NP (<b>Non-deterministic</b> <b>Polynomial)</b> <b>class</b> of problems, they have extremely high complexity and cannot be solved efficiently for realistically large networks. To tackle this difficulty we develop heuristics that aim to find near optimal solutions with less computation effort. Experimental results show that our proposed heuristics are efficient and able find solutions reasonably close to the optimal (within 36 % for the web ODN provisioning problem and 20 % for the pay-per-view and live streaming multimedia ODN provisioning problems). Our study also demonstrates that provisioning could become significantly inefficient if the heuristics were not designed properly. For example in the web content ODN provisioning problem, a greedy heuristic adapted from existing CDN replica placement heuristics could produce ODN topologies up to 2. 5 times more costly compared to a Lagrangian heuristic designed based the problem formulation structure. As part of the ODN provisioning study, we also explore the use of content clustering within the ODN provisioning process. By grouping similar content items together into clusters, which are then considered as a single item during provisioning, content clustering would help reduce provisioning complexity and allow the provisioning models to handle problems with significantly larger number of content items. We show that clustering methods previously developed for CDNs do not work well in the ODN environment. Thus we propose a new hierarchical clustering scheme, where content items are clustered based on first delivery resource requirements and then spatial demand distribution. Experimental results demonstrate that this clustering scheme has significant performance improvements over the existing ones. In this thesis we also look into the future and study the ability of the ODN to support applications that require QoS network paths among servers. To enable better support for such applications, we propose to enhance the ODN architecture with switching capabilities that allow ODN owners to control the flow of traffic within their ODN backbone. We examine and demonstrate the benefits of such capabilities using both quantitative and qualitative studies and then develop a shared switch architecture that could be used to provide such support in a shared infrastructure environment...|$|E
40|$|We present {{authorized}} quantum computation, {{where only}} a user with a non-cloneable quantum authorization key can perform a unitary operation created by an authenticated programmer. The {{security of our}} authorized quantum computation {{is based on the}} quantum computational complexity problem of forging the keys from an obfuscated quantum gate sequence. Under the assumption of the existence of a sufficiently-random gate shuffling algorithm, the problem is shown to be in the NQP (<b>Non-deterministic</b> Quantum <b>Polynomial)</b> -hard <b>class</b> by reducing it to a NQP-Complete problem, the exact non-identity check problem. Therefore, our authorized quantum computation can be computationally secure against attacks using quantum computers...|$|R
50|$|On {{the other}} hand, {{unambiguous}} <b>non-deterministic</b> <b>polynomial</b> time is suspected to be strictly less expressive than <b>non-deterministic</b> <b>polynomial</b> time.|$|R
5000|$|AM is {{contained}} in NP/poly, the class of decision problems computable in <b>non-deterministic</b> <b>polynomial</b> time with a polynomial size advice. The proof is a variation of Adlemans theorem.|$|R
3000|$|Since solving (2) is an <b>non-deterministic</b> <b>polynomial</b> (NP)-hard problem [2], many {{approximation}} {{techniques have}} been proposed to recover x. Basis pursuit (BP) [3], {{which is based on}} the l [...]...|$|R
30|$|These {{types of}} {{problems}} are called <b>non-deterministic</b> <b>polynomial</b> hard (NP-hard), which cannot be solved using a polynomial algorithm. In such problems, the required time for {{solving the problem}} increases exponentially as the dimension of the problem grows.|$|R
40|$|Genetic Algorithms are {{evolutionary}} {{algorithms used}} to solve <b>non-deterministic</b> <b>polynomial</b> time problems generally known as np-problems. The search {{space of the}} problems are too large to be solve by conventional approaches. The basic idea of Genetic approach is analogous to biological evolution where only th...|$|R
5000|$|UNIQUE-SAT is {{the problem}} of {{determining}} whether a formula has exactly one assignment. It is complete for US, the complexity class describing problems solvable by a <b>non-deterministic</b> <b>polynomial</b> time Turing machine that accepts when there is exactly one nondeterministic accepting path and rejects otherwise.|$|R
3000|$|The iMTSP is an {{improved}} multi-travelling salesman problem, which {{belongs to the}} <b>non-deterministic</b> <b>polynomial</b> (NP) problems. The computational complexity of our proposed algorithm is mainly contained in the clustering algorithm and the multi-objective genetic algorithm, with the latter playing the dominant role. The overall complexity of our algorithm is O(mN [...]...|$|R
40|$|Abstract – We present polygraphic programs, a {{subclass}} of Albert Burroni’s polygraphs, as a computational model, {{showing how}} these objects {{can be seen}} as first-order functional programs. We prove that the model is Turing complete. We use polygraphic interpretations, a termination proof method introduced by the second author, to characterize polygraphic programs that compute in polynomial time. We conclude with a characterization of polynomial time functions and <b>non-deterministic</b> <b>polynomial</b> time functions. ...|$|R
40|$|A {{sound and}} {{complete}} algorithm for nominal unification of higher-order expressions with a recursive let is described, and shown {{to run in}} <b>non-deterministic</b> <b>polynomial</b> time. We also explore specializations like nominal letrec-matching for plain expressions and for DAGs and determine the complexity of corresponding unification problems. Comment: Pre-proceedings {{paper presented at the}} 26 th International Symposium on Logic-Based Program Synthesis and Transformation (LOPSTR 2016), Edinburgh, Scotland UK, 6 - 8 September 2016 (arXiv: 1608. 02534...|$|R
40|$|International audienceContext {{unification}} (CU) is {{the famous}} open problem of solving context equations for trees. We distinguish a new decidable fragment of CU - well-nested CU - and present a new unification algorithm that solves well-nested context equations in <b>non-deterministic</b> <b>polynomial</b> time. We show that minimal well-nested solutions of context equations can be composed from the material present in the equation. This surprising property is highly wishful when modeling natural language ellipsis in CU...|$|R
40|$|Abstract. Context {{unification}} (CU) is {{the open}} problem of solving context equations for trees. We distinguish a new decidable variant of CU – well-nested CU – and present a new unification algorithm that solves well-nested context equations in <b>non-deterministic</b> <b>polynomial</b> time. We show that minimal well-nested solutions of context equations can be composed from the material {{present in the}} equation (see Theorem 1). This property is wishful when modeling natural language ellipsis in CU. ...|$|R
40|$|The class UP of `ultimate {{polynomial}} time' problems over C is introduced; {{it contains}} the <b>class</b> P of <b>polynomial</b> time problems over C. The τ-Conjecture for polynomials implies that UP {{does not contain}} the <b>class</b> of <b>non-deterministic</b> <b>polynomial</b> time problems definable without constants over C. This latest statement implies that P NP over C. A notion of `ultimate complexity' of a problem is suggested. It provides lower bounds for the complexity of structured problems...|$|R
3000|$|... 1. In solving our problem, the MDC has its {{own unique}} optimal data {{acquisition}} position in each segment, but this position is not the common representative point of a segment {{as it is in}} other work. In light of the above, we term the above problem the improved multi-travelling salesman problem (iMTSP). It is clear that iMTSP is a <b>non-deterministic</b> <b>polynomial</b> (NP) problem. If every city is abstracted into a single point, iMTSP is degenerated into a common MTSP.|$|R
40|$|We present {{separation}} {{results on}} genuinely (or strongly) time bounded sequential, parallel and non-deterministic complexity classes defined by RAMs with fixed set of arithmetic operations. In particular, we separate non-uniform polynomial time from non-uniform parallel polynomial {{time for the}} set of operations f+; Γ; g (answering a question of [M 88]), and uniform deterministic polynomial time from uniform <b>non-deterministic</b> <b>polynomial</b> time for the set of operations f+; Γ; DIV c g, where DIV c denotes a restricted integer division operation...|$|R
50|$|Advice classes can {{be defined}} for other {{resource}} bounds instead of P. For example, taking a <b>non-deterministic</b> <b>polynomial</b> time Turing machine with an advice of length f(n) gives the complexity class NP/f(n). If we are allowed an advice of length 2n, we {{can use it to}} encode whether each input of length n is contained in the language. Therefore, any boolean function is computable with an advice of length 2n and advice of more than exponential length is not meaningful.|$|R
30|$|In {{the actual}} {{splitting}} process, each transmission {{line of the}} power system has a possibility to be cut off. Therefore, the SOSB step can be mapped to a 0 - 1 integer programming problem. But as the system scale increases, the computational efforts of the splitting strategy present an exponential growth [9] since the corresponding problem is an <b>non-deterministic</b> <b>polynomial</b> (NP) hard problem. In order to achieve a solution quickly, the recent research {{can be divided into}} the following two categories according to the objective functions.|$|R
40|$|A {{sound and}} {{complete}} algorithm for nominal unification of higher-order expressions with a recursive let is described, and shown {{to run in}} <b>non-deterministic</b> <b>polynomial</b> time. We also explore specializations like nominal letrec-matching for plain expressions and for DAGs and determine their complexity. © Springer International Publishing AG 2017. This research has been partially founded by the MINECO/FEDER projects RASO (TIN 2015 - 71799 -C 2 - 1 -P) and LoCoS (TIN 2015 - 66293 -R) and the UdG project MPCUdG 2016 / 055. Peer Reviewe...|$|R
40|$|We present polygraphic programs, a {{subclass}} of Albert Burroni's polygraphs, as a computational model, {{showing how}} these objects {{can be seen}} as first-order functional programs. We prove that the model is Turing complete. We use polygraphic interpretations, a termination proof method introduced by the second author, to characterize polygraphic programs that compute in polynomial time. We conclude with a characterization of polynomial time functions and <b>non-deterministic</b> <b>polynomial</b> time functions. Comment: Proceedings of TERMGRAPH 2007, Electronic Notes in Computer Science (to appear), 12 pages, minor changes from previous versio...|$|R
30|$|A lot of {{research}} {{has been carried out}} in the field of logistics, from the traveling salesman problem to complex dynamic routing problems. Among the prominent problems in distribution and logistics, the vehicle routing problem and its extensions have been widely studied for many years, mainly because of their applications in real world logistics and transportation problems. The VRP has been proven to be a <b>non-deterministic</b> <b>polynomial</b> time problem ([Bodin & Golden 1981]). This means that the time of the VRP solution grows exponentially with increasing the distribution points.|$|R
40|$|We define {{polynomial}} time computable operator. Our definition generalizes Cook's definition to arbitrary function inputs. <b>Polynomial</b> <b>classes</b> are {{defined in terms}} of these operators; the properties of these classes are investigated. Honest <b>polynomial</b> <b>classes</b> are generated by runnina time. They posses a modified Ritchie-Cobham property. A <b>polynomial</b> <b>class</b> is a complexity class iff it is honest. Starting from the observation that many results about subrecursive classes hold for all reducibility relations (e. g. primitive recursive in, elementary recursive in), which were studied so far, we define abstract subrecursive reducibility relation. Many results hold for all abstract subrecursive reducibilities...|$|R
30|$|Vehicle routing {{problems}} (VRPs) have {{a significant}} role in logistics and distribution industries. VRPs include problems in which a fleet of vehicles presents service from one or several depots to different geographically located customers so that the total cost of transportation is minimized. It has been proven that vehicle routing problems are categorized as <b>non-deterministic</b> <b>polynomial</b> (NP)-hard problems ([Lenstra and Rinnooy Kan 1981]; [Mingozzi et al. 1999]) and that exact solution methods are not practical in a large scale due to high computational cost since most of the procedures have focused on using heuristics and meta-heuristics.|$|R
40|$|International audienceWe {{present a}} <b>non-deterministic</b> <b>polynomial</b> time {{procedure}} {{to decide the}} problem of insecurity, {{in the presence of}} a bounded number of sessions, for cryptographic protocols containing explicit destructor symbols, like decryption and projection. These operators are axiomatized by an arbitrary convergent rewrite system satisfying some syntactic restrictions. This approach, with parameterized semantics, allows us to weaken the security hypotheses for verification, i. e. to address a larger class of attacks than for models based on free algebra. Our procedure is defined by an inference system based on basic narrowing techniques for deciding satisfiability of combinations of first-order equations and intruder deduction constraints...|$|R
40|$|Quantum {{computers}} {{are believed to}} perform high-speed calculations, compared with conventional computers. However, the quantum computer solves NP (<b>non-deterministic</b> <b>polynomial)</b> problems at a high speed only when a periodic function {{can be used in}} the process of calculation. To overcome the restrictions stemming from the quantum algorithm, we are studying the emulation by a LSI (large scale integrated circuit). In this report, first, it is explained why a periodic function is required for the al-gorithm of a quantum computer. Then, it is shown that the LSI emulator can solve NP problems at a high speed without using a periodic function...|$|R
40|$|The {{problem of}} allocating {{components}} to {{a printed circuit}} board (PCB) assembly line, which has several nonidentical placement machines in series, is formulated as a minimax-type integer programming (IP) model in this paper. In order to achieve the best production throughput, the objective of the model is to minimize the cycle time of the assembly line. The IP model is proven to be NP-complete (<b>non-deterministic</b> <b>polynomial),</b> so a genetic algorithm (GA) is developed for the cycle time determination problem in this paper. Finally, the efficiency of the genetic algorithm is illustrated by a numerical example. Department of Industrial and Systems Engineerin...|$|R
5000|$|... can {{be decided}} in <b>non-deterministic</b> <b>polynomial</b> time as follows. Given input , verify that it has the form [...] and reject if it does not. If it has the correct form, {{simulate}} M(x). The simulation takes non-deterministic [...] time, which is polynomial {{in the size of}} the input, [...] So, [...] is in NP. By the assumption P = NP, there is also a deterministic machine DM that decides [...] in polynomial time. We can then decide L in deterministic exponential time as follows. Given input , simulate [...] This takes only exponential time {{in the size of the}} input, [...]|$|R
40|$|In {{computer}} vision many problems are of <b>non-deterministic</b> <b>polynomial</b> time complexity. One {{of these problems}} is graph matching. Suboptimal solutions have been proposed to efficiently do graph matching. This thesis investigates the use of unsupervised learning to cluster structured graph data in polynomial time. Clustering was done on attributed graph nodes and attributed graph node-arc-node triplets, and meaningful results were demonstrated. Self-organizing maps and the minimum message length program Snob were used. These clustering results may help a suboptimal graph matcher arrive at an acceptable solution at an acceptable time. The thesis proposes some methods to do so, but implementation is future work. </p...|$|R
40|$|The joint {{scheduling}} problem of tasks and network communication is a <b>non-deterministic</b> <b>polynomial</b> hard(NP-hard) {{problem in the}} optical grid. In order to further extend the list scheduling, an iterative scheduling algorithm was proposed to optimize the scheduling length. Firstly, an initial task list was sorted according to the priority called bottom level of each task. Then the scheduling order was modified according to the updated time-weight of tasks by estimating the actual communication cost between tasks. The simulation {{results show that the}} proposed iterative scheduling algorithm can effectively improve the scheduling length in the majority of the cases, especially for data-intensive applications in task scheduling...|$|R
40|$|Mobile robots are {{increasingly}} used in automated industrial environments. There are also other applications like planet exploration, surveillance, landmine detection, etc. In all these applications, {{in order that}} the mobile robots perform their tasks, collision-free path planning is a prerequisite. This article {{provides an overview of}} the research progress in path planning of a mobile robot for off-line as well as on-line environments. Commonly used classic and evolutionary approaches of path planning of mobile robots have been addressed. Review shows that evolutionary optimization algorithms are computationally efficient and hence {{are increasingly}} being used in tandem with classic approaches while handling <b>Non-deterministic</b> <b>Polynomial</b> time hard (NP-hard) problems. Also, challenges involved in developing a computationally efficient path planning algorithm are addressed...|$|R
40|$|Abstract: The {{unbalanced}} assignment problem (UAP) is to optimally {{resolve the}} problem of assigning n jobs to m individuals (m < n), such that minimum cost or maximum profit obtained. It is a vitally important <b>Non-deterministic</b> <b>Polynomial</b> (NP) complete problem in operation management and applied mathematics, having numerous real life applications. In this paper, we present a new parallel DNA algorithm for solving the unbalanced assignment problem using DNA molecular operations. We reasonably design flexible-length DNA strands representing different jobs and individuals, take appropriate steps, and get the solutions of the UAP in the proper length range and O(mn) time. We extend the application of DNA molecular operations and simultaneity to simplify {{the complexity of the}} computation...|$|R
40|$|AbstractA free semigroup with {{involution}} (FSI) {{is essentially}} the set of words over a given alphabet plus an operator which reverses words. The paper introduces equations in FSI and {{show that they are}} the right objects to deal with when studying the complexity of equations in free groups. On these lines, we generalize to FSI several results valid for word equations, like the overlapping lemma, the 2 O(|E|) -bound on the exponent of periodicity of minimal solutions, and the NP-hard lower bound. The main result of the paper is the reduction of the problem of satisfiability of equations in free groups to the satisfiability of equations in FSI by a <b>non-deterministic</b> <b>polynomial</b> time transformation...|$|R
40|$|Article dans revue scientifique avec comité de lecture. internationale. International audienceWe {{study the}} effect of {{polynomial}} interpretation termination proofs of deterministic (resp. non-deterministic) algorithms defined by confluent (resp. non-confluent) rewrite systems over data structures which include strings, lists and trees, and we classify them according to the interpretations of the constructors. This leads {{to the definition of}} six function classes which turn out to be exactly the deterministic (resp. <b>non-deterministic)</b> <b>polynomial</b> time, linear exponential time and linear doubly exponential time computable functions when the class is based on confluent (resp. non-confluent) rewrite systems. We also obtain a characterisation of the linear space computable functions. Finally, we demonstrate that functions with exponential interpretation termination proofs are super-elementary...|$|R
40|$|The {{unbalanced}} assignment problem (UAP) is to optimally {{resolve the}} problem of assigning n jobs to m individuals (m < n), such that minimum cost or maximum profit obtained. It is a vitally important <b>Non-deterministic</b> <b>Polynomial</b> (NP) complete problem in operation management and applied mathematics, having numerous real life applications. In this paper, we present a new parallel DNA algorithm for solving the unbalanced assignment problem using DNA molecular operations. We reasonably design flexible-length DNA strands representing different jobs and individuals, take appropriate steps, and get the solutions of the UAP in the proper length range and O(mn) time. We extend the application of DNA molecular operations and simultaneity to simplify {{the complexity of the}} computation...|$|R
25|$|A {{decision}} problem is in NP {{if it can}} be solved by a <b>non-deterministic</b> algorithm in <b>polynomial</b> time.|$|R
40|$|A widely studied <b>non-deterministic</b> <b>polynomial</b> time (NP) hard {{problem lies}} in finding a route between the two nodes of a graph. Often {{meta-heuristics}} algorithms such as $A^{*}$ are employed on graphs {{with a large number}} of nodes. Here, we propose a deep recurrent neural network architecture based on the Sequence- 2 -Sequence (Seq 2 Seq) model, widely used, for instance in text translation. Particularly, we illustrate that utilising a context vector that has been learned from two different recurrent networks enables increased accuracies in learning the shortest route of a graph. Additionally, we show that one can boost the performance of the Seq 2 Seq network by smoothing the loss function using a homotopy continuation of the decoder's loss function...|$|R
