221|390|Public
500|$|In an {{electrical}} <b>network</b> <b>diagram,</b> limited to linear systems, {{there are three}} passive elements: resistance, inductance, and capacitance; and two active elements: the voltage generator, and the current generator. [...] The mechanical analogs of these elements {{can be used to}} construct a mechanical <b>network</b> <b>diagram.</b> [...] What the mechanical analogs of these elements are depends on what variables are chosen to be the fundamental variables. [...] There is a wide choice of variables that can be used, but most commonly used are a power conjugate pair of variables (described below) and the pair of Hamiltonian variables derived from these.|$|E
500|$|Variations {{of these}} analogies {{are used for}} {{rotating}} mechanical systems, such as in electric motors. [...] In the impedance analogy, instead of force, torque is made analogous to voltage. [...] It is perfectly possible that both versions of the analogy are needed in, say, a system that includes rotating and reciprocating parts, in which case a force-torque analogy is required within the mechanical domain and a force-torque-voltage analogy to the electrical domain. [...] Another variation is required for acoustical systems; here pressure and voltage are made analogous (impedance analogy). [...] In the impedance analogy, {{the ratio of the}} power conjugate variables is always a quantity analogous to electrical impedance. [...] For instance force/velocity is mechanical impedance. [...] The mobility analogy does not preserve this analogy between impedances across domains, but it does have another advantage over the impedance analogy. [...] In the mobility analogy the topology of networks is preserved, a mechanical <b>network</b> <b>diagram</b> has the same topology as its analogous electrical <b>network</b> <b>diagram.</b>|$|E
500|$|In {{some cases}} it is {{possible}} to continue using a topological <b>network</b> <b>diagram</b> even when components needing a distributed element analysis are present. [...] In the electrical domain, a transmission line, a basic distributed element component, can be included in the model with the introduction of the additional element of electrical length. [...] The transmission line is a special case because it is invariant along its length and hence the full geometry need not be modelled. [...] Another way of dealing with distributed elements is to use a finite element analysis whereaby the distributed element is approximated by a large number of small lumped elements. [...] Just such an approach was used in one paper to model the cochlea of the human ear. [...] Another condition required of electrical systems for the application of the lumped element model is that no significant fields exist outside the component since these can couple to other unrelated components. [...] However, these effects can often be modelled by introducing some virtual lumped elements called strays or parasitics. [...] An analog of this in mechanical systems is vibration in one component being coupled to an unrelated component.|$|E
5000|$|... #Caption: Some symbols for {{elements}} used on mechanical <b>network</b> <b>diagrams</b> ...|$|R
5000|$|Current {{environment}} or system description with <b>network</b> <b>diagrams,</b> if any ...|$|R
5000|$|... #Caption: System Architect with Heatmap, BPMN and <b>Network</b> <b>Diagrams</b> Open and Browsed ...|$|R
2500|$|After {{the value}} <b>network</b> <b>diagram</b> has been prepared, {{it can be}} used to perform three {{complementary}} analyses: ...|$|E
2500|$|This {{representation}} is preferred {{because when the}} parameters are used to represent a cascade of two-ports, the matrices are written {{in the same order}} that a <b>network</b> <b>diagram</b> would be drawn, that is, left to right. [...] However, a variant definition is also in use, ...|$|E
2500|$|Being {{geographical}} presented {{restrictions in}} this early map; to enable sufficient clarity of {{detail in the}} crowded central area of the map, the extremities of the District and Metropolitan lines were omitted, so a full <b>network</b> <b>diagram</b> was not provided. The problem of truncation remained {{for nearly half a}} century. Although all of the western branches of the District and Piccadilly lines were included {{for the first time in}} 1933 with Harry Beck's first proper Tube map, the portion of the Metropolitan line beyond [...] did not appear until 1938 and the eastern end of the District line did not appear until the mid-1950s.|$|E
2500|$|Computer <b>network</b> <b>diagrams,</b> {{depictions of}} the nodes and {{connections}} in a computer network ...|$|R
5000|$|Outputs: Project Schedule <b>Network</b> <b>diagrams,</b> Activity List Updates, Activity Attributes updates, Request Changes ...|$|R
50|$|Sun Microsystems manuals {{published}} in the 1980s named the computers in their <b>network</b> <b>diagrams</b> Zaphod, Beeble and Brox.|$|R
2500|$|A {{drawing of}} a graph or <b>network</b> <b>diagram</b> is a {{pictorial}} representation of the vertices and edges of a graph. This drawing {{should not be confused}} with the graph itself: very different layouts can correspond to the same graph. [...] In the abstract, all that matters is which pairs of vertices are connected by edges. [...] In the concrete, however, the arrangement of these vertices and edges within a drawing affects its understandability, usability, fabrication cost, and aesthetics. The problem gets worse, if the graph changes over time by adding and deleting edges (dynamic graph drawing) and the goal is to preserve the user's mental map.|$|E
5000|$|The cluster diagram figures a cluster, {{such as a}} <b>network</b> <b>diagram</b> figures a network, a {{flow diagram}} a process or {{movement}} of objects, and a tree diagram an abstract tree. But all these diagrams can be considered interconnected: A <b>network</b> <b>diagram</b> {{can be seen as}} a special orderly arranged kind of cluster diagram. A cluster diagram is a mesh kind of <b>network</b> <b>diagram.</b> A [...] {{can be seen as a}} [...] type of <b>network</b> <b>diagram,</b> and a tree diagram a tree type of <b>network</b> <b>diagram.</b>|$|E
5000|$|The {{software}} is instructed to draw <b>network</b> <b>diagram</b> using maximum node repulsion. This encourages cluster formation. Around 5 clusters are {{identified in the}} <b>network</b> <b>diagram,</b> both visually and using the cluster identification algorithms supplied with the software (e.g. Newnan Girvan sub-groups) ...|$|E
5000|$|A {{number of}} {{software}} tools exist to generate computer <b>network</b> <b>diagrams.</b> Broadly, {{there are three}} types of tools that help create network maps and diagrams: ...|$|R
5000|$|Arrow diagramming method (ADM) is a <b>network</b> <b>diagramming</b> {{technique}} in which activities {{are represented by}} arrows. [...] ADM {{is also known as}} the activity-on-arrow (AOA) method.|$|R
5000|$|Inputs: Organizational process assets, Project scope Statement, Activity list, Activity attributes, project Schedule <b>Network</b> <b>diagrams,</b> Activity {{resource}} requirements, Resource calendars, Activity duration estimates, {{project management}} plan, risk register ...|$|R
5000|$|... #Caption: <b>Network</b> <b>Diagram</b> of Central Elevated Walkway (Admiralty System) ...|$|E
5000|$|... #Caption: An {{example of}} a multi-entity, multi-network, dynamic <b>network</b> <b>diagram</b> ...|$|E
5000|$|... #Caption: A {{map of the}} Supertram <b>network.</b> <b>Diagram</b> of the Supertram network ...|$|E
40|$|When {{teaching}} concurrency, using a process-oriented language, it {{is often}} introduced through a visual representation of programs {{in the form of}} process <b>network</b> <b>diagrams.</b> These diagrams allow the design of and abstract reasoning about programs, consisting of concurrently executing communicating processes, without needing any syntactic knowledge of the eventual implementation language. Process <b>network</b> <b>diagrams</b> are usually drawn on paper or with general-purpose diagramming software, meaning the program must be implemented as syntactically correct program code before it can be run. This paper presents POPed, an introductory parallel programming tool leveraging process <b>network</b> <b>diagrams</b> as a visual language for the creation of process-oriented programs. Using only visual layout and connection of pre-created components, the user can explore process orientation without knowledge of the underlying programming language, enabling a ''processes first'' approach to parallel programming. POPed has been targeted specifically at basic robotic control, to provide a context in which introductory parallel programming can be naturally motivated...|$|R
40|$|Objective Voronoi {{diagrams}} {{are important}} in many fields {{in a series of}} sciences. <b>Network</b> Voronoi <b>diagrams</b> are useful to investigate dominance regions in a grid street system or a radial-circular street system. However, all generators may have different effect. To deal with a <b>network</b> Voronoi <b>diagram</b> with varied functions of generators, it must be worth formulating a power <b>network</b> Voronoi <b>diagram.</b> Method Adding weight value on generators, which is used to indicate factors related to are difficult to construct when the position relation of generators.   Results A new concept of power <b>network</b> Voronoi <b>diagram</b> are proposed. In accordance with discrete construction method, achieved the construction of power <b>network</b> Voronoi <b>diagram.</b> Conclution The application example shows that the algorithm is both simple and useful, and it is of high potential value in practice.  Power <b>network</b> Voronoi <b>diagram</b> both perfected the theory about Voronoi diagrams, and extended the range of applications of Voronoi diagrams...|$|R
40|$|Abstract. When {{teaching}} concurrency, using a process-oriented language, it {{is often}} introduced through a visual representation of programs {{in the form of}} process <b>network</b> <b>diagrams.</b> These diagrams allow the design of and abstract reasoning about programs, consisting of concurrently executing communicating processes, without needing any syntactic knowledge of the eventual implementation language. Process <b>network</b> <b>diagrams</b> are usually drawn on paper or with general-purpose diagramming software, meaning the program must be implemented as syntactically correct program code before it can be run. This paper presents POPed, an introductory parallel programming tool leveraging process <b>network</b> <b>diagrams</b> as a visual language for the creation of process-oriented programs. Using only visual layout and connection of pre-created components, the user can explore process orientation without knowledge of the underlying programming language, enabling a “processes first ” approach to parallel programming. POPed has been targeted specifically at basic robotic control, to provide a context in which introductory parallel programming can be naturally motivated...|$|R
5000|$|... #Caption: <b>Network</b> <b>diagram</b> view {{of sample}} project opened in Rillsoft Project 6 ...|$|E
5000|$|... #Caption: <b>Network</b> <b>diagram</b> with {{feedback}} loops {{to generate}} switch-like activation of anaphase.|$|E
50|$|Simulations, or Missions as IMPRINT {{refers to}} them, contain a task network called a <b>Network</b> <b>Diagram.</b> The <b>network</b> <b>diagram</b> {{contains}} {{a series of}} tasks connected by paths which determine control flow. System objects called entities flow through the system to create a simulation. IMPRINT also includes more low level features such as global variables and subroutines called macros.|$|E
5000|$|Miscellaneous editors such as for JSD (process {{structure}} and <b>network</b> <b>diagrams),</b> recursive process graphs and transaction decomposition tables. These editors {{are no longer}} updated but they will remain available within TCM.|$|R
50|$|Dia has a {{modular design}} with several shape {{packages}} available for different needs: flowchart, <b>network</b> <b>diagrams,</b> circuit diagrams, and more. It does not restrict symbols and connectors from various categories from being placed together.|$|R
5000|$|... yEd {{can be used}} to draw many {{different}} types of <b>diagrams,</b> including flowcharts, <b>network</b> <b>diagrams,</b> UMLs, BPMN, mind maps, organization charts, and entity-relationship diagrams. yEd also allows the use of custom vector and raster graphics as diagram elements.|$|R
5000|$|... #Caption: A {{computer}} <b>network</b> <b>diagram</b> {{of clients}} communicating with a server via the Internet.|$|E
5000|$|... #Caption: A social <b>network</b> <b>diagram</b> {{displaying}} friendship ties among {{a set of}} Facebook users.|$|E
5000|$|... #Caption: Figure 3: <b>Network</b> <b>diagram</b> with {{feedback}} loops {{to generate}} switch-like activation of anaphase ...|$|E
40|$|We {{investigate}} the cognitive impact of various layout features-symmetry, alignment, collinearity, axis alignment and orthogonality - on {{the recall of}} <b>network</b> <b>diagrams</b> (graphs). This provides insight into how people internalize these diagrams and what features should or shouldn't be utilised when designing static and interactive network-based visualisations. Participants were asked to study, remember, and draw {{a series of small}} <b>network</b> <b>diagrams,</b> each drawn to emphasise a particular visual feature. The visual features were based on existing theories of perception, and the task enabled visual processing at the visceral level only. Our results strongly support the importance of visual features such as symmetry, collinearity and orthogonality, while not showing any significant impact for node-alignment or parallel edges. </p...|$|R
40|$|The {{peculiarities of}} {{application}} of nodal method {{in the construction}} of large and complex industrial systems, the principles of the spatial division of the object on the technological, building and public spaces, the basic documents on the use of nodal method. As an example, we consider the use of nodal method in the construction machinery manufacturing enterprises. To this end, provides a general description of space planning and designs of single-floor and multi-floors buildings of this industry, the composition of industrial complexes and sub complexes engineering, their basic units and plots, schemes interlinkages units and energy supply. It includes steps for the development of complex aggregated <b>network</b> <b>diagrams</b> <b>network</b> <b>diagrams</b> and working with the justification of continuous work flow...|$|R
40|$|This chapter {{focuses on}} two {{somewhat}} fundamentally related ways to elicit knowledge structure, <b>network</b> <b>diagrams</b> (usually as concept maps), and essays (see Chapter 4, this volume). Because {{of the utility}} of the proven Pathfinder Network approach and its well-established research base, we developed softwar...|$|R
