3|2|Public
40|$|Abstract. When {{integrating}} numerous {{in-car information}} and assistance systems, a consistent way of spatial distance presentation for drivers is required. A common practice is to use discrete textual information (e. g. 500 meters) in combination with a graphical bar representing relative spatial information. Hitherto there exists no design consistency with respect to bars for distance illustration. Contemporary solutions differ in terms of movement direction (upward vs. downward), composition type (decreasing vs. increasing), or alignment (horizontal vs. vertical). We conducted a driving simulator experiment to investigate user preferences, perceived location, and eye gaze data for a meaningful subset of bars in a dynamic scenario. When approaching a traffic event (road works), {{one out of four}} vertical bar alternatives indicated the current distance. Subsequently, the associated horizontal bar type (decreasing or increasing) visualized the driver’s spatial progress within the road works section. Our results indicate, that drivers prefer upwards-moving approach bars and progress bars decreasing from left to right. Eye-tracking data supports usage of decreasing bars instead of increasing bars. Accordingly, we elaborated an initial version of design guidelines for bars representing relative spatial information for local events. On this basis we implemented approach and progress indicators, which were adopted for <b>numerous</b> <b>use-cases</b> in a large field operational test for Vehicle- 2 -X Communication...|$|E
40|$|Part 1 : Long and Short Papers (Continued) International audienceWhen {{integrating}} numerous {{in-car information}} and assistance systems, a consistent way of spatial distance presentation for drivers is required. A common practice is to use discrete textual information (e. g. 500 meters) in combination with a graphical bar representing relative spatial information. Hitherto there exists no design consistency with respect to bars for distance illustration. Contemporary solutions differ in terms of movement direction (upward vs. downward), composition type (decreasing vs. increasing), or alignment (horizontal vs. vertical). We conducted a driving simulator experiment to investigate user preferences, perceived location, and eye gaze data for a meaningful subset of bars in a dynamic scenario. When approaching a traffic event (road works), {{one out of four}} vertical bar alternatives indicated the current distance. Subsequently, the associated horizontal bar type (decreasing or increasing) visualized the driver’s spatial progress within the road works section. Our results indicate, that drivers prefer upwards-moving approach bars and progress bars decreasing from left to right. Eye-tracking data supports usage of decreasing bars instead of increasing bars. Accordingly, we elaborated an initial version of design guidelines for bars representing relative spatial information for local events. On this basis we implemented approach and progress indicators, which were adopted for <b>numerous</b> <b>use-cases</b> in a large field operational test for Vehicle- 2 -X Communication...|$|E
40|$|In 2007 we {{introduced}} jSCSI 1. 0 [1] to the public. The use case was to access block-patterns directly from Java without any third party JNI [2] invoked software. In the last 2 years we explored the capabilities to assimilate multithreading in jSCSI. The {{goal was to}} leverage the outstanding features of the new Java multithreading extension introduced with Java 5 /Java 6 and incorporate them into our proven block-level accessing framework. Today, we present the next incarnation of jSCSI 1. 0, jSCSI 2. 0 which yields significant performance improvements by utilizing Java’s advanced multithreading capabilities. We show that our Java based implementation of a low-level architecture {{is not only a}} proposing alternative in terms of performance but also in the ease-of-use compared to common JNI-invoked system calls. Therefore, we argue that jSCSI 2. 0 is not only a platform independent implementation of the iSCSI protocol [3], but also a fast and robust proof for implementing low-level applications in Java. 1 History and Background of jSCSI iSCSI [3] offers an easy way to access distributed storage devices in a block based manner. As there are <b>numerous</b> <b>use-cases</b> for iSCSI there exist numerous iSCSI initiators and iSCSI targets and their number is still rapidly growing. Nevertheless, the usage of iSCSI is restricted on the operating system level. This result...|$|E
30|$|An initial {{promise of}} SDR was {{seamless}} interworking with {{a plethora of}} technologies through software-defined adaptations. The vision of CRNs, on the other hand, has evolved from the foundations of SDRs and aims to provide users with seamless holistic experience that integrates potentially heterogeneous technologies. The interplay of cognitive radios with the SDN architecture {{appears to be a}} viable and promising hybrid technology {{that can be used to}} create programmable wireless networks. We refer to this hybrid technology as ‘software-defined cognitive wireless networking’ (SCWN). <b>Numerous</b> interesting <b>use-cases</b> can plausibly emerge if we synergize the mainly centralized operational paradigm of SDNs with the mainly distributed operational paradigm of CRs. While the emphasis of SDN architecture has been on the separation of control and data planes, it is worth exploring if a combined SDN and CR architecture can help realize the vision of programmable wireless networks having a ‘knowledge plane’ as envisioned by Clark et al.[186].|$|R
40|$|This paper {{describes}} {{development of}} cognitive self-managed networks {{according to the}} vision of the Future Internet networks being developed in the Self-NET project. The project develops and prototypes architecture and solutions for realising a vision on Internet evolution based on integration of cognition and autonomics in self-managed networks demonstrated in <b>numerous</b> and diverse <b>use-cases</b> developed. The topics presented in this paper show theoretical foundation for building and understanding cognition and self-management and resulting practical realisation and incremental development of them. These include principles of self-managed architecture, path to development of cognition in self-managed networks and logical architecture for inclusion of those concepts. Their resolving and definition demonstrate the practical side of applying diverse available work on the topics and provide a focus for their understanding and development...|$|R

