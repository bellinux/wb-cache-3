11|116|Public
50|$|Castalia is a {{simulator}} for Wireless Sensor Networks (WSN), Body Area Networks {{and generally}} networks of low-power embedded devices. It {{is based on}} the OMNeT++ platform and used by researchers and developers to test their distributed algorithms and/or protocols in a realistic wireless channel and radio model, with a realistic node behaviour especially relating to access of the radio. Castalia uses the lognormal shadowing model as one of the ways to model average path loss, which has been shown to explain empirical data in WSN. It also models temporal variation of path loss in an effort to capture fading phenomena in changing environments (i.e., the nodes or parts of the environment are moving). Castalia's temporal variation modeling is designed to be fitted to measured data instead of making specific assumptions on the creation of fast fading. Other features of Castalia include: physical process modeling, sensing device bias and noise, <b>node</b> <b>clock</b> drift, and several MAC and routing protocols implemented.|$|E
30|$|The single-hop TTS {{focuses on}} {{providing}} synchronization points (sync-points), {{which can be}} used to estimate the <b>node</b> <b>clock</b> phase and skew, instead of the approach to calculate the offsets directly.|$|E
40|$|In this paper, {{we present}} a method to {{significantly}} reduce sensor <b>node</b> <b>clock</b> drift by utilizing the on-board tempera-ture sensor found within a node’s microcontroller. We char-acterize the relationship between temperature and oscillator frequency, then create a clock drift model using this char-acterization. The model is then installed into a TinyOS virtual timer component. We show that this modified timer exhibits order of magnitude improved timing accuracy...|$|E
40|$|Abstract. One of the {{simplest}} protocols for clock synchronization in wireless ad hoc and sensor networks is the converge-to-max protocol, which has the simple logic of adjusting each <b>node’s</b> <b>clock</b> {{to be at least}} as large as any neighbor’s. This paper examines the converge-to-max protocol, showing it to be stabilizing even when <b>node</b> <b>clocks</b> have skew, bounded domains, and dynamic communication links. ...|$|R
3000|$|Ganeriwal et al. [7] {{designed}} a prediction-based algorithm to model long-term clock skew between two sensor <b>node</b> <b>clocks</b> t [...]...|$|R
30|$|This {{high level}} of {{accuracy}} can only be maintained at a expensive energy cost, since the <b>node</b> <b>clocks</b> can drift up to 80 μ s per second. For instance, in 60 seconds the clocks may drift up to 4810 μ s.|$|R
3000|$|... or vice versa. Note that instantaneously {{correcting}} the offset between two clocks is relatively simple by running for instance a pairwise synchronization protocol. However, {{because of the}} effect of the clock skew, the two clocks drift after the initial synchronization. Therefore, to keep the clock drift under a required upper bound, all the related schemes in Section 2.2 propose to resynchronize frequently. Instead, to reduce the frequency of re-synchronization and, thus, the energy consumption of sensor nodes, we propose to predict the clock skew of each sensor <b>node</b> <b>clock.</b>|$|E
40|$|It is {{well known}} that a common notion of time in {{distributed}} systems can be used to ensure additional properties such as real-time behavior or the identification of the order of events. As large-scale hardware testbeds for such systems are neither efficient nor easy to manage, discrete event simulations (DES) can be used to model such networks. However, to ensure an exact behavior of such simulations, high precise models of the local clocks are also needed: the driving oscillators have to be modeled in a way that a DES simulation of a free-running <b>node</b> <b>clock</b> shows the same Allan deviation as the simulated counterpart. This paper shows an approach to find a corresponding model for a simulator using white noise and a filter with the same power density spectrum as real-world oscillators...|$|E
40|$|Abstract- In {{the contest}} of the {{standard}} IEEE 1588, protocol for the synchronization of the <b>node</b> <b>clock</b> in Distributed System (DS), is of fundamental importance to assess {{the effectiveness of the}} synchronization. On the basis of this consideration, the aspect taken into account in the paper concerns the different measurement techniques pointed out in literature to evaluate the time delay occurring in (i) the DS among the synchronized node clocks, (ii) the telecommunication network respect to the reference clock, and (iii) the hardware and software path involved by the arrival of the command at the synchronized node and the execution of the relative action. The intent is to furnish a critical analysis of the measurement techniques, and to highlight the advantages and the limitation in the practical evaluation of the time delay. I...|$|E
30|$|Time {{synchronization}} {{is a key}} {{service in}} WSNs for a diversity of purposes; including data fusion, power management, positioning, message integrity, coordination of future actions, and timestamping of sensed events. However, sensor <b>node</b> <b>clocks</b> have arbitrary starting offsets and nondeterministic fluctuating skews.|$|R
40|$|Time {{synchronisation}} {{is crucial}} for distributed systems, and particularly for Wireless Sensor Networks (WSNs), where each node is executing concurrent operations to achieve a real-time objective. However, synchronisation is quite difficult to achieve in WSNs, due to the unpredictable deployment conditions and to physical effects like thermal stress, that cause drifts in the local <b>node</b> <b>clocks.</b> As a result, state-of-the-art synchronisation schemes do not guarantee monotonicity of the <b>nodes</b> <b>clock,</b> or are relying on external hardware assistance. In this paper we present FLOPSYNC- 2, a scheme to synchronise the <b>clocks</b> of multiple <b>nodes</b> in a WSN, requiring no additional hardware, {{and based on the}} application of control-theoretical principles. The scheme guarantees low overhead, low power consumption and synchronisation with clock monotonicity. We propose an implementation of FLOPSYNC- 2 on top of the microcontroller operating system Miosix, and prove the validity of our claims with several-days-long experiments on an eight-hop network. The experimental results show that the average <b>clock</b> difference among <b>nodes</b> is limited to a hundred of ns, with a sub-μs standard deviation. By introducing a suitable power model, we also prove that synchronisation is achieved with a sub-μA consumption overhead...|$|R
40|$|We {{present some}} impossibility {{as well as}} {{feasibility}} results on clock synchronization in wireline or wireless networks. We consider a network of n <b>nodes</b> with affine <b>clocks,</b> where one <b>node</b> is taken as a reference, and each other <b>node’s</b> <b>clock</b> is described by a skew (relative speedup {{with respect to the}} reference clock), and an offset (say) at time 0 with respect to the reference clock. In order to establish impossibility results, we allow for noiseless communication of messages that may contain any information that the transmitting node knows about current or past packets that the node has sent or received. The synchronization problem consists of estimating all the unknown parameters, skews and offsets of all the clocks, as well as the delays of all the communication links...|$|R
40|$|We {{introduce}} Space-Time Routing (STR), a {{new approach}} to routing in mobile ad hoc networks. In STR, the age of routing state is considered jointly with the distance to the destination. We give a general description of STR, which can accommodate various temporal (age) and spatial (distance) metrics. Our formulation of STR describes a family of routing algorithms, parameterized by a choice of <b>node</b> <b>clock</b> scheme, a neighbor-distance function and a binding spatio-temporal metric which allows the algorithm to compare potential routes taking into account both their age and their distance to the destination. We discuss possible instantiations of a Space-Time Routing protocol. In particular, we review FRESH (FResher Encounter SearcH), a routing algorithm using temporal information only, and GREP (Generalized Route Establishment Protocol), a routing protocol which uses jointly spatial and temporal information about routes. We discuss a third STR algorithm using only physical notions of space and time, and nally show that STR provides loop-free routes...|$|E
40|$|Abstract: Recent {{advances}} in technology have made low cost and low power wireless sensors a reality. Time synchronization may {{play a key role}} in wireless sensor networks. In this paper, The AORBS (accurate On-demand Reference Broadcast Synchronization Protocol) mainly made two improvements on the basis of typical RBS algorithm. Firstly, the <b>node</b> <b>clock</b> is not synchronized with the natural frequency at all time, and the synchronization algorithm will take effect only after an event of interest has happened. Waste is reduced since the system avoids performing synchronization at times when it is not necessary. Furthermore the algorithm achieves the drift compensation by using Taylor expansion but not the linear regression method, greatly reducing the computation cost and improving the synchronization accuracy. As shown in our experimental results: the improved algorithm is more efficient and can be applied to a variety of scopes and types of wireless sensor networks. Copyright © 2013 IFSA...|$|E
40|$|Position {{information}} {{is one of}} the key requirements for wireless sensor networks (WSNs). Since GPS receivers have drawbacks when used in low-power sensor nodes, mainly due to latency in position recovery and limited access to GPS satellites in indoor- type scenarios, extracting the position information by means of the network itself, so- called positioning or localization, has been considered an eective solution for the posi- tioning problem. The goal of this thesis is to design and develop approaches, algorithms, and benchmarks for the positioning problem for WSNs. The contributions of the thesis, which appear in the appended papers, are as follows: Paper A develops an eavesdropping technique for positioning multiple target nodes in a cooperative wireless sensor network in the presence of unknown turnaround times. That is, a number of reference or target nodes (secondary nodes) can listen to both sig- nals transmitted by the target and an active (primary) node. The maximum likelihood estimator (MLE) and a theoretical lower bound as well as a suboptimal ecient linear estimator are derived for the problem. Numerical results conrm a considerable im- provement for the proposed technique compared to conventional approaches, especially for low signal-to-noise ratios. Paper B studies a self-positioning problem based on TDOA measurements in the presence of unknown target <b>node</b> <b>clock</b> skew. Since the optimal MLE poses a dicult global optimization problem, two suboptimal estimators followed by a ne-tuning approach are investigated in this paper. Numerical results show that the suboptimal estimators asymptotically attains the Cramer-Rao lower bound. Paper C investigates the single target node localization problem based on received signal strength measurements in the presence of unknown channel parameters. Using approximations, the problem is rendered to a low complex problem and a simple technique is employed to solve the problem. The proposed technique shows a good trade-o between accuracy and complexity compared to the existing approaches. Paper D studies the possibility of up- per bounding the position error for range-based positioning algorithms in wireless sensor networks. It is argued that in certain situations when the measured distances between sensor nodes have positive errors, the target node is conned to a closed bounded con- vex set, which can be derived from the measurements. In particular, the upper bounds are formulated as nonconvex optimization problems, and relaxation techniques are em- ployed to approximately solve the nonconvex problems. Simulation results show that the proposed bounds are reasonably tight in many situations, especially for non-line-of- sight conditions. Finally, Paper E deals with identifying the feasible sets in cooperative positioning and proposes an iterative technique to cooperatively outer-approximate the feasible sets containing the locations of the target nodes. Simulation results show that the proposed technique converges after a small number of iterations...|$|E
30|$|Attack Detection Time: The attack {{detection}} {{time is the}} delay between the attack occurs {{and when it is}} detected. The detection of flooding attack [39],[40] is based on detection of increase in a client <b>node's</b> <b>clock</b> inter-arrival times. Figure 7 shows the detection delay for FireCol and ColShield. The ColShield can detect the start of the attack within one {{detection time}} interval and end of an attack within two detection time periods. The proposed method can achieve more accurate detection with a shot latency. When the percentage of local IPDS increases, the attack detection time is less.|$|R
40|$|To my {{adviser and}} my family ii We present {{fundamental}} impossibility results on clock synchronization in wireline or wireless networks, and sharply characterize what is feasible. We consider a network of n <b>nodes</b> with affine <b>clocks,</b> with one <b>node</b> designated as a reference. Each other <b>node’s</b> <b>clock</b> is described by a skew (relative speedup {{with respect to the}} reference clock), and an offset at time 0 (say) with respect to the reference clock. In order to establish impossibility results, we allow for noiseless communi-cation of messages, that may contain any information that the transmitting node knows about or from current or past packets that it has sent or received. The syn-chronization problem consists of estimating all the unknown parameters, skews and offsets of all the clocks, as well as the delays of all the communication links. All unknown parameters are assumed to be time-invariant, for sharply delineating impossibility results...|$|R
30|$|Although {{timing and}} carrier {{synchronization}} {{are necessary for}} successful communication, they cannot provide a common notion of time across distributed <b>nodes.</b> <b>Clock</b> synchronization {{is the process of}} achieving and maintaining coordination among independent local clocks to provide a common notion of time across the network. Some wireless networks, such as worldwide interoperability for microwave access (WiMAX), are synchronized to the global positioning system (GPS) [12]. Others, e.g., Bluetooth, wireless fidelity (Wi-Fi), and Zigbee rely on a beacon strategy, where all nodes in the network follow the same time reference given by a master node broadcasting a reference signal [12]. For recent surveys on clock synchronization, please see [21 – 25].|$|R
40|$|This {{research}} {{is devoted to}} investigate the coordination in the time domain of the operations executed by the Measurement Instrument (MI) connected to the nodes of the Distributed Measurement System (DMS) by Hardware Interface (HI). On {{the basis of the}} synchronization procedures of the node clocks of the DMS presented in the literature, the HIs can work on a synchronized modality. Nevertheless, the hardware and software architecture of the path involved in the communication HI-MI can randomly time delay the commands. Often in the DMS the PC is used as HI. In this case two different aspects are taken into account: (i) the characterization of the hardware connection PCMI offering the minimum time delay, and (ii) the criteria to modify and to set up the software to reduce the random time delay occurring in the processing steps performed into the PC. The results of the research performed highlights that the main cause of random time delay is the concurrency of the processes running in the PC. In particular, the delay depends on: (i) number of concurrent processes, (ii) their priority, (iii) behavior of the kernel managing the concurrency. In order to overcome the delay caused, the HI based on the Programmable Logic Device (PLD) is taken into account and proposed in the place of the PC. From the analysis of the operations executed on the PLD, operating conditions are shown, making random variation of the synchronization time delay of the MI to the <b>node</b> <b>clock.</b> In order to detect the causes of the random variation, the polling cycle is taken into account and analyzed. From this analysis the model of the uncertainty affecting the synchronization time delay is pointed out in order to evaluate the effects of each cause affecting the trigger check. The result of this evaluation furnishes: (i) information to point out the adequate strategy to reduce the random time variation of the detection of the trigger condition, and (ii) requirements to completely avoid the polling cycle. The experimental tests performed by using implemented embedded HI assess the efficacy of the presented HI to achieve sub-microsecond synchronization accuracy, according to the standard IEEE 1588. VIII In the research the problem of the stand alone MIs is also taken into account. In some cases, indeed, synchronized measurement procedures must be performed in places where the node of the DMS are not reachable, or not convenient to reach, by wired or wireless connections. For this reason {{it is not possible to}} use standard synchronization protocol to synchronize the MIs. In these cases the use of the Personal Digital Assistant (PDA) is proposed to physically bring the common sense of time to the stand alone MI. In order to achieve synchronization accuracy in the order of sub-microsecond, it is presented the conjunct use of the PDA and the proper embedded HI. This solution meets the advantages of both the devices. The PDA permits the advantages of the high level programming languages in order to interface the MI and collect the data. The embedded HI guarantees high synchronization accuracy on the basis of the deterministic behavior of the proposed hardware architecture. Experimental tests confirm the suitability of the proposed solution to the requirements of the standard IEEE 1588 Dottorato di Ricerca in Ingegneria dei Sistemi ed Informatica, XXI Ciclo, 2009 Università della calabri...|$|E
50|$|The cost of HSR is that nodes require {{hardware}} support (FPGA or ASIC) {{to forward}} or discard frames within microseconds. This cost is compensated because no Ethernet switches are required. Hardware support is anyhow needed when the <b>node</b> supports <b>clock</b> synchronization or security.|$|R
40|$|Clocks on {{wireless}} sensor nodes {{experience a}} natural drift. This clock skew is unique for each node as {{it depends on}} the clocks manufacturing characteristics. Clock skew can be used as unique node identifier which is, among other applications, useful for node authentication. We describe how clock skew of a <b>node’s</b> <b>clock</b> can be measured directly on a node by utilising the available high precision radio transceiver clock. We detail an implementation of this proposed local clock skew tracking method for the Zolertia Z 1 platform. We determine the required sampling effort to accurately determine clock skew. We also discuss how clock skew measurements can be aligned with existing transceiver operations in order to avoid an increase in energy consumption...|$|R
3000|$|..., {{then the}} sensor <b>nodes</b> use the <b>clock</b> estimations for synchronizing. Otherwise, the sensors keep exchanging time {{observations}} each S [...]...|$|R
40|$|The {{paradigm}} of information exchange provides {{a basis for}} nodes in a network to stay uptodate with the recent information in the network. In this paradigm, nodes cooperate to share their current information with each other. We present a simple and uniform schema for building information exchange protocols that are stabilizing, in the following strong sense. Starting from arbitrary state, the protocols reach within bounded real-time a state wherefrom all nodes remain uptodate with the recent information in the network. The ability to stabilize in bounded time is achieved by using timing-based actions. The timing constraints on these actions can be systematically adapted to suit a variety of network loads, delay requirements, and scheduling restrictions and to tolerate out-of-phase and drift-prone <b>node</b> <b>clocks.</b> Our schema also tolerates any number of topological changes in the network. Moreover, it accommodates information that is time-varying {{as well as it}} does information th [...] ...|$|R
40|$|Several {{previous}} works have experimentally shown that communication ranges of sensors are not regular disks. Rather, they follow probabilistic models. Yet, many current connectivity maintenance protocols assume the disk communication model for convenience {{and ease of}} analysis. In addition, current protocols do not provide any assessment {{of the quality of}} communication between nodes. In this paper, we take a first step in designing connectivity maintenance protocols for more realistic communication models. We propose a distributed connectivity maintenance protocol that explicitly accounts for the probabilistic nature of communication links and achieves a given target communication quality between nodes. Our protocol is simple to implement, and we demonstrate its robustness against random node failures, inaccuracy of node locations, and imperfect time synchronization of <b>node</b> <b>clocks</b> using extensive simulations. We compare our protocol against others in the literature and show that it activates fewer number of nodes, consumes much less energy, and significantly prolongs the network lifetime. We extend our connectivity protocol to provide probabilistic coverage as well, where the sensing ranges of sensors follow probabilistic models. I...|$|R
40|$|Clock {{synchronization}} {{between any}} two nodes in a Wireless Sensor Network (WSNs) is generally accomplished through exchanging messages and adjusting clock offset and skew parameters of each <b>node?s</b> <b>clock.</b> To cope with unknown network message delays, the clock offset and skew estimation schemes {{have to be}} reliable and robust in order to attain long-term synchronization and save energy. A joint clock offset and skew estimation scheme is studied and developed based on the Gaussian Mixture Kalman Particle Filter (GMKPF). The proposed estimation scheme is {{shown to be a}} more flexible alternative than the Gaussian Maximum Likelihood Estimator (GMLE) and the Exponential Maximum Likelihood Estimator (EMLE), and to be a robust estimation scheme in the presence of non-Gaussian/nonexponential random delays. This study also includes a sub optimal method called Maximum Likelihood-like Estimator (MLLE) for Gaussian and exponential delays. The computer simulations illustrate that the scheme based on GMKPF yields better results in terms of Mean Square Error (MSE) relative to GMLE, EMLE, GMLLE, and EMLLE, when the network delays are modeled as non-Gaussian/non-exponential distributions or as a mixture of several distributions...|$|R
40|$|Abstract- This paper {{presents}} a zero-skew gated clock routing technique for VLSI circuits. The gated clock tree has masking gates at the internal <b>nodes</b> of the <b>clock</b> tree, which are selectively turned {{on and off}} by the gate control signals during the active and idle times of the circuit modules to reduce switched capacitance of the clock tree. The clock tree topology is constructed based on the locations and the activation frequencies of the modules and whereas {{the locations of the}} internal <b>nodes</b> of the <b>clock</b> tree (and hence the masking gates) are determined using a dynamic programming approach followed by a gate reduction heuristic. 1...|$|R
40|$|Abstract. Considering {{the limited}} bandwidth, delay {{and the flow}} of mutual association, the greater the flow, the delay lags the more obvious; when flow close to saturation, delay will become very serious. According to the PTP local clock offset {{correction}} mechanism; this paper proposed an adaptive routing algorithm based on through node flow congestion forecast message. The method based on least squares support vector machine on the discharge time series online regression estimate future period of time <b>clock</b> <b>node</b> network flow value, from this investigation <b>clock</b> <b>node</b> congestion degree index, so the choice of adaptability PTP since the minimum delay routing, improve the synchronous message delivery success rate, reduce the complex network of synchronous accuracy vulnerable data flow congestion hysteresis effect...|$|R
40|$|There is a {{fast growing}} {{interest}} in exploiting Wireless Sensor Networks (WSNs) for tracking the boundaries and predicting the evolution properties of diffusive hazardous phenomena (e. g. wildfires, oil slicks etc.) often modeled as “continuous objects”. We present a novel distributed algorithm for estimating and tracking the local evolution characteristics of continuous objects. The hazard’s front line is approximated {{as a set of}} line segments, and the spatiotemporal evolution of each segment is modeled by a small number of parameters (orientation, direction and speed of motion). As the hazard approaches, these parameters are re-estimated using adhoc clusters (triplets) of collaborating sensor nodes. Parameters updating is based on algebraic closed-form expressions resulting from the analytical solution of a Bayesian estimation problem. Therefore, it can be implemented by microprocessors of the WSN nodes, while respecting their limited processing capabilities and strict energy constraints. Extensive computer simulations demonstrate the ability of the proposed distributed algorithm to estimate accurately the evolution characteristics of complex hazard fronts under different conditions by using reasonably dense WSNs. The proposed in-network processing scheme does not require sensor <b>node</b> <b>clocks</b> synchronization and is shown to be robust to sensor node failures and communication link failures, which are expected in harsh environments...|$|R
30|$|Instead {{of using}} {{received}} signal strength, other preemptive protocols use GPS {{to obtain the}} position and speed of the nodes and compute the link expiration time (LET), i.e., the predicted amount of time during which the link will remain active [11]. When the LET of a link falls below a defined threshold, a route recovery procedure is started. This approach requires a GPS receiver on each <b>node</b> and <b>clock</b> synchronization, thus limiting its application in real deployments. In addition, this solution is only aware of link degradation due to mobility.|$|R
30|$|As {{an issue}} for consideration, delay {{tomography}} burdens source and destination <b>nodes</b> with <b>clock</b> synchronization between them. A packet route delay, which is required in the formulation, can be known from the transmission time at a source node and the reception time at a destination <b>node,</b> so precise <b>clock</b> synchronization between them seems essential and unavoidable, {{but it is difficult}} in reality. In wireless sensor networks, the electronic components of nodes are sometimes too untrustable to meet the requirement of clock synchronization in terms of precision and complexity [16, 17]. Global positioning system (GPS) may provide precise clock synchronization among wireless nodes [18], but all nodes cannot be equipped with GPS receivers. Network time protocol (NTP) [19] is applicable and several methods using the medium access control layer (MAC) time stamp [20 – 22] have been proposed for clock synchronization, but they require all nodes to exchange packets specialized for clock synchronization. It must be more energy-efficient to accomplish active delay tomography without the use of such specialized packets.|$|R
50|$|To {{the right}} a 5 node {{calendar}} cluster is shown where each node communicates {{with every other}} node in the cluster {{and there is no}} single point of failure. Although each <b>node</b> has a <b>clock</b> the clock is not used for setting the time directly but as a metronome to ensure that the nodes “beat” at the same time.|$|R
40|$|Time {{synchronization}} {{is crucial}} for wireless sensor networks (WSNs), where operations often rely on time ordering of events. WSNs are deployed in different scenarios, and therefore their timing requirements are often related to the peculiar characteristics of the specific environment they have to act in. Synchronization is anyway always an issue: transactional applications need monotonicity of the nodes' clocks to avoid time reversal, ultralow power applications call for minimal overhead to allow for low-duty-cycle operation, applications facing extreme environments have to maintain the needed precision {{in the presence of}} unforeseen thermal drift, and so on. Specially, control applications on battery-powered devices, where timing is an issue and low-power operation is highly desired, benefit from synchronization. However, to date, the problem of synchronization has been differently faced depending on the application domain. This paper proposes a general {{solution to the problem of}} synchronization in WSNs, which seamlessly integrates with the radio stack. In addition, it guarantees monotonic and continuous <b>node</b> <b>clocks</b> with low overhead for the infrastructure. The solution is based on a decentralized control scheme that is stable and robust to thermal stress, without the need for temperature measurements. The control scheme is simulated and implemented on real WSN nodes. The efficiency of the scheme is evaluated with simulations and experiments, providing insights on the maximum synchronization error between nodes, on the communication overhead, and on the limited nodes' power consumption. The solution is also compared with state-of-the-art alternatives...|$|R
40|$|Systems {{and methods}} for rapid Byzantine-fault-tolerant self-stabilizing clock {{synchronization}} are provided. The systems and methods {{are based on}} a protocol comprising a state machine and a set of monitors that execute once every local oscillator tick. The protocol is independent of specific application specific requirements. The faults are assumed to be arbitrary and/or malicious. All timing measures of variables are based on the <b>node's</b> local <b>clock</b> and thus no central clock or externally generated pulse is used. Instances of the protocol are shown to tolerate bursts of transient failures and deterministically converge with a linear convergence time with respect to the synchronization period as predicted...|$|R
40|$|A self-stabilizing {{network in}} the form of an arbitrary, non-partitioned digraph {{includes}} K nodes having a synchronizer executing a protocol. K- 1 monitors of each node may receive a Sync message transmitted from a directly connected node. When the Sync message is received, the logical clock value for the receiving node is set to between 0 and a communication latency value (gamma) if the clock value is less than a minimum event-response delay (D). A new Sync message is also transmitted to any directly connected <b>nodes</b> if the <b>clock</b> value is greater than or equal to both D and a graph threshold (T(sub S)). When the Sync message is not received the synchronizer increments the clock value if the clock value is less than a resynchronization period (P), and resets the clock value and transmits a new Sync message to all directly connected <b>nodes</b> when the <b>clock</b> value equals or exceeds P...|$|R
40|$|This paper {{presents}} a zero-skew gated clock routing technique for VLSI circuits. Gated clock trees include masking gates at the internal <b>nodes</b> of the <b>clock</b> tree, which are selectively turned {{on and off}} by the gate control signals during the active and idle times of the circuit modules to reduce the switched capacitance of the clock tree. We construct a clock tree topology based on the locations and the activation frequencies of the modules, while {{the locations of the}} internal <b>nodes</b> of the <b>clock</b> tree (and hence the masking gates) are determined using a dynamic programming approach followed by a gate reduction heuristic. This work assumes that the gates are turned on/off by a centralized controller. Therefore, the additional power and routing area incurred by the controller and the gate control signal routing are examined. Various tradeoffs between power and area for different design options and module activities are discussed and detailed experimental results are presented. Finally, good design practices for implementing the gated clocks are suggested...|$|R
40|$|This paper {{presents}} the design, implementation {{and evaluation of}} the PinPoint location determination system. Pin-Point is a distributed algorithm that enables a set of n nodes to determine the RF propagation delays between every pair of nodes, from which the inter-node distances and hence the spatial topology can be readily determined. PinPoint does not require any calibration of the area of interest and thus is rapidly deployable. Unlike existing time-of-arrival techniques, PinPoint does not require an infrastructure of accurate clocks (e. g., GPS) nor does it incur the o(n 2) message exchanges of “echoing ” techniques. PinPoint can work with nodes having inexpensive crystal oscillator clocks, and incurs a constant number of message exchanges per node to determine the location of n <b>nodes.</b> Each <b>node’s</b> <b>clock</b> is assumed to run reliably but asynchronously {{with respect to the}} other nodes, i. e., they can run at slightly different rates because of hardware (oscillator) inaccuracies. PinPoint provides a mathematical way to compensate for these clock differences in order to arrive at a very precise timestamp recovery that in turn leads to a precise distance determination. Moreover, each node is able to determine the clock characteristics of other nodes in its neighborhood allowing network synchronization. We present a prototype implementation for Pin-Point and discusses the practical issues in implementing the mathematical framework and how PinPoint handles the different sources of error affecting its accuracy. Evaluation of the prototype in typical indoor and outdoor environments shows that PinPoint gives an average accuracy of four to si...|$|R
