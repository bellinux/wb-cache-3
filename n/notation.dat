10000|7723|Public
5|$|The latter <b>notation</b> generalizes {{to yield}} the <b>notation</b> f for the nth {{derivative}} of f – this <b>notation</b> is most useful when {{we wish to}} talk about the derivative as being a function itself, as in this case the Leibniz <b>notation</b> can become cumbersome.|$|E
5|$|In formal competition, {{each player}} {{is obliged to}} record each move as it is played in a chess <b>notation</b> in order to settle {{disputes}} about illegal positions, overstepping time control, and making claims of draws by the fifty-move rule or repetition of position. Algebraic chess <b>notation</b> is the accepted standard for recording games today. There are other systems such as ICCF numeric <b>notation</b> for international correspondence chess and the obsolete descriptive chess <b>notation.</b> The current rule is that a move must {{be made on the}} board before it is written on paper or recorded with an electronic device.|$|E
5|$|Most teeth have {{identifiable}} {{features that}} distinguish them from others. There are several different <b>notation</b> systems {{to refer to}} a specific tooth. The three most common systems are the FDI World Dental Federation <b>notation,</b> the universal numbering system, and Palmer <b>notation</b> method. The FDI system is used worldwide, and the universal is used widely in the United States.|$|E
40|$|This paper {{shows how}} to define an {{operational}} semantics of those graphical <b>notations</b> {{that are used}} during requirements analysis and design. An abstract syntax using syntax graphs is given to describe the <b>notations</b> uniformly, followed by the formal description of a possible semantics by semantic bases. Finally, a calculus of operations is proposed to integrate the definition of different <b>notations.</b> By describing these semi-formal <b>notations</b> in a formal manner the <b>notations</b> become more precise. Furthermore it is made possible to write tools to interpret the <b>notations</b> operationally...|$|R
5000|$|Identify {{traditional}} <b>notations</b> for the concepts, or invent usable <b>notations.</b>|$|R
40|$|Rigorous formal {{methods and}} {{intuitive}} graphical <b>notations</b> can greatly enhance {{the development of}} complex computer systems. Formal methods guarantee non-ambiguity and support powerful analysis techniques. Intuitive graphical <b>notations</b> facilitate the communications between engineers preventing errors due to misunderstandings. Unfortunately, tools and techniques based on formal methods do not usually support adequate graphical <b>notations</b> � while tools and methods based onpowerful graphical <b>notations</b> often lack formal foundations. This paper proposes a technique that allows kernel formalisms to be accessed through powerful graphical <b>notations.</b> The proposed technique allows graphical <b>notations</b> to be tailored {{to the needs of}} the speci c application domain. This paper focuses on the tool support. ...|$|R
5|$|Stamper did {{not learn}} to read or write {{traditional}} musical <b>notation,</b> creating his own numerical <b>notation.</b>|$|E
5|$|The right-to-left <b>notation</b> is {{the same}} <b>notation</b> that is used for {{composition}} of functions.|$|E
5|$|The text-based Portable Game <b>Notation</b> (PGN), {{which is}} {{understood}} by chess software, {{is based on}} short form English language algebraic <b>notation.</b>|$|E
40|$|Graph-based <b>notations</b> form a {{significant}} subclass of visual languages. Studies {{of the use}} of such <b>notations</b> in practice have shown that users often employ pragmatic aspects, such as layout, to capture important domain information. Moreover this pragmatic information can support and guide reasoning over such representations. However, typical formalisations of graph-based <b>notations</b> often pay scant regard to such pragmatic considerations. This paper highlights an algebraic account of graph-based <b>notations</b> which is sensitive to relevant layout information. We illustrate, with examples taken from software engineering practice, how this algebra both captures pragmatic aspects of graphs and supports direct reasoning over their structure. Keywords: graphs, pragmatics, algebra, visual <b>notations,</b> software engineering Graph-based <b>notations</b> form {{a significant}} subclass of visual languages, particularly in computer science and many engineering domains. Typical formalisations of such <b>notations</b> ofte [...] ...|$|R
5000|$|In {{set theory}} and computability theory, Kleene's [...] is a {{canonical}} {{subset of the}} natural numbers when regarded as ordinal <b>notations.</b> It contains ordinal <b>notations</b> for every recursive ordinal, that is, ordinals below Church-Kleene ordinal, [...] Since [...] is the first ordinal not representable in a computable system of ordinal <b>notations</b> the elements of [...] {{can be regarded as}} the canonical ordinal <b>notations.</b>|$|R
5000|$|There are two {{conflicting}} <b>notations</b> for fixed point. Both <b>notations</b> {{are written}} as Qm.n, where: ...|$|R
5|$|A {{few players}} still prefer {{descriptive}} <b>notation,</b> {{but it is}} no longer recognized by FIDE.|$|E
5|$|Euler's <b>notation</b> {{is useful}} for stating and solving linear {{differential}} equations.|$|E
5|$|Floating point {{numbers are}} also {{stored in a}} platform-specific range. They can be {{specified}} using floating point <b>notation,</b> or two forms of scientific <b>notation.</b> PHP has a native Boolean type {{that is similar to}} the native Boolean types in Java and C++. Using the Boolean type conversion rules, non-zero values are interpreted as true and zero as false, as in Perl and C++.|$|E
25|$|In {{this article}} the {{historical}} <b>notations</b> {{are placed on}} the left, and modern <b>notations</b> on the right.|$|R
40|$|In this paper, we {{consider}} the problem of embedding formal <b>notations.</b> In particular, we describe our experiences of automating the embedding of Z specifications into the <b>notations</b> of the PVS and HOL theorem provers. This paper is motivated by our experiences of constructing a prototype tool for embedding formal <b>notations</b> and its use in automating an embedding of Z and AMN into the <b>notations</b> of PVS and HOL...|$|R
40|$|Abstract. To be able {{to build}} {{effective}} DSLs, these DSLs must not just use language concepts that are aligned with their respective domain, but also use <b>notations</b> that correspond closely to established domain <b>notations</b> – and those are often not purely textual or graphical. The underlying lan-guage workbench must support these <b>notations,</b> and combining different <b>notations</b> in a single editor must be supported as well in order to support the coherent definitions of systems that use several DSLs. In this paper we provide an overview over the <b>notations</b> supported by JetBrains MPS. MPS is a language workbench that uses a projectional editor, which, by its very nature, can deal with many different notational styles, including text, prose, math tables and graphics. The various supported <b>notations</b> are illustrated with examples from real-world systems...|$|R
5|$|For complex numbers w and z with , the <b>notation</b> w'z is {{ambiguous}} {{in the same}} sense that log w is.|$|E
5|$|The Games of Wilhelm Steinitz, {{first world}} chess {{champion}} by Sid Pickard (in Algebraic <b>notation)</b> , Pickard & Son publishers in 1995.|$|E
5|$|The {{algebraic}} chess <b>notation</b> for chess {{can be used}} {{to record}} moves in bughouse games.|$|E
25|$|Slavic neume <b>notations</b> ("Znamenny Chant") are on {{the whole}} even more {{difficult}} to decipher and transcribe than Byzantine or Gregorian neume <b>notations.</b>|$|R
30|$|Throughout the paper, {{we follow}} the <b>notations</b> used in [2]. For the sake of completeness, we recall some basic definitions, <b>notations</b> and results.|$|R
30|$|Open {{image in}} new window using King’s approach. First, we recall some {{definitions}} and <b>notations</b> of q-calculus. Such <b>notations</b> {{can be found}} in[14].|$|R
5|$|This {{choice of}} basis, and the <b>notation,</b> is {{standard}} in the mathematical literature.|$|E
5|$|This <b>notation</b> {{means that}} one wicket was lost while 79 runs were scored.|$|E
5|$|Angles in polar <b>notation</b> are {{generally}} expressed in either degrees or radians (2 rad being equal to 360°). Degrees are traditionally used in navigation, surveying, and many applied disciplines, while radians {{are more common}} in mathematics and mathematical physics.|$|E
5000|$|Software {{visualization}} <b>notations</b> are <b>notations</b> {{which offer}} a graphical {{representation of the}} program, normally generated by reverse-engineering the source code of the program.|$|R
5000|$|Some X-bar <b>notations</b> use a double-prime (standing {{in for a}} double-bar) to {{indicate}} a phrasal level, indicated in most <b>notations</b> by [...] "XP".|$|R
5000|$|Several <b>notations</b> for {{describing}} motifs are in use {{but most of}} them are variants of standard <b>notations</b> for regular expressions and use these conventions: ...|$|R
5|$|Besides {{the basic}} moves of the pieces, rules also govern the {{equipment}} used, time control, conduct and ethics of players, accommodations for physically challenged players, and recording of moves using chess <b>notation.</b> Procedures for resolving irregularities {{that can occur}} during a game are provided as well.|$|E
5|$|Euler's <b>notation</b> uses a {{differential}} operator D, which {{is applied to}} a function f to give the first derivative Df. The second derivative is denoted D2f, and the nth derivative is denoted D'n'f.|$|E
5|$|Hexadecimal is a base-16 {{numeral system}} {{used in the}} fields of {{computer}} programming and mathematics. The key is an ordinary number most widely known by its hexadecimal representation; in decimal <b>notation,</b> it is 13,256,278,887,989,457,651,018,865,901,401,704,640.|$|E
5000|$|... common {{metamodel}} {{to unify}} the diverse business process definition <b>notations</b> {{that exist in the}} industry containing semantics compatible with leading business process modeling <b>notations.</b>|$|R
30|$|We {{adopt the}} {{following}} <b>notations</b> and assumptions {{to develop the}} mathematical model of the proposed problem. Additional <b>notations</b> and assumptions will be given out when required.|$|R
5000|$|User studies {{demonstrated}} {{very early}} that users prefer verbal search systems {{as opposed to}} systems based on classification <b>notations.</b> This {{is one example of}} a principle derived from empirical studies of users. Adherents of classification <b>notations</b> may, of course, still have an argument: That <b>notations</b> are well-defined and that users may miss important information by not considering them.|$|R
