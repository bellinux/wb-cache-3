31|32|Public
25|$|A <b>nested</b> <b>stack</b> {{automaton}} allows full access, {{and also}} allows stacked values to be entire sub-stacks {{rather than just}} single finite symbols.|$|E
2500|$|<b>Nested</b> <b>stack</b> automata (have {{been used}} to solve the word problem for groups) ...|$|E
5000|$|A <b>nested</b> <b>stack</b> {{automaton}} {{is capable}} of recognizing an indexed language, {{and in fact the}} class of indexed languages is exactly the class of languages accepted by one-way nondeterministic <b>nested</b> <b>stack</b> automata.|$|E
50|$|When automata {{are allowed}} to re-read their input ("two-way automata"), <b>nested</b> <b>stacks</b> do not result in {{additional}} language recognition capabilities, compared to plain stacks.|$|R
40|$|Abstract. Higher-order pushdown systems generalize pushdown {{systems by}} using higher-order <b>stacks,</b> which are <b>nested</b> <b>stacks</b> of stacks. In this article, we {{consider}} parity games defined by higher-order pushdown systems {{and provide a}} k-Exptime algorithm to compute finite representations of positional winning strategies for both players for games defined by level-k higher-order pushdown automata. Our result is based on automata theoretic techniques exploiting the tree structure corresponding to higher-order stacks and their associated operations. ...|$|R
40|$|We {{implemented}} several multilabel classification algorithms in {{the machine}} learning package mlr. The implemented methods are binary relevance, classifier chains, <b>nested</b> <b>stacking,</b> dependent binary relevance and stacking, {{which can be used}} with any base learner that is accessible in mlr. Moreover, there is access to the multilabel classification versions of randomForestSRC and rFerns. All these methods can be easily compared by different implemented multilabel performance measures and resampling methods in the standardized mlr framework. In a benchmark experiment with several multilabel datasets, the performance of the different methods is evaluated. Comment: 18 pages, 2 figures, to be published in R Journal; reference correcte...|$|R
5000|$|<b>Nested</b> <b>stack</b> automata (have {{been used}} to solve the word problem for groups) ...|$|E
50|$|Gilman and Shapiro used <b>nested</b> <b>stack</b> automata {{to solve}} the word problem in certain groups.|$|E
50|$|<b>Nested</b> <b>stack</b> automata {{should not}} be {{confused}} with embedded pushdown automata, which have less computational power.|$|E
50|$|Fourspine {{sticklebacks}} {{are largely}} solitary, {{spending most of}} their time near the bottom of lakes. Their diet consists of microscopic invertebrates and plankton. Fourspine stickleback generally breed at one year of age, though some individuals may survive to breed at age two. Their breeding season lasts from April until late July, often breeding {{at the same time and}} location as three other stickleback species (threespine, ninespine, and blackspotted stickleback). Males establish territories and construct nests out of vegetation either on the bottom or on underwater structures, and may construct as many as five <b>nests</b> <b>stacked</b> in a tiered effect. Once he has attracted a female and fertilized her eggs, the male will watch over the nest until the eggs hatch. Females may produce several clutches of eggs per year.|$|R
40|$|A new {{definition}} of Embedded Push-Down Automata is provided. We prove this {{new definition}} preserves the equivalence with tree adjoining languages and we provide a tabulation framework to execute any automaton in polynomial time {{with respect to}} the length of the input string. 1. Introduction Embedded Push-Down Automata (EPDA) were defined in (Vijay-Shanker, 1988) as an extension of Push-Down Automata that accept exactly the class of Tree Adjoining Languages. They can also be seen as a level- 2 automata in a progression of linear iterated pushdowns involving <b>nested</b> <b>stacks</b> (Weir, 1994). An EPDA consists of a finite state control, an input tape and a stack made up of non-empty stacks containing stack symbols. A transition can consult the state, the input string and the top element of the top stack and then change the state, read a character of the input string and replace the top element by a finite sequence of stack elements to give a new top stack, and new stacks can be placed above and [...] ...|$|R
40|$|The {{spacesuit}} water membrane evaporator (SWME) {{is being}} developed to perform the thermal control function for advanced spacesuits {{to take advantage of}} recent advances in micropore membrane technology in providing a robust heat-rejection device that is potentially less sensitive to contamination than is the sublimator. Principles of a sheet membrane SWME design were demonstrated using a prototypic test article that was tested in a vacuum chamber at JSC in July 1999. The Membrana Celgard X 50 - 215 microporous hollow fiber (HoFi) membrane was selected after recent contamination tests as the most suitable candidate among commercial alternatives for HoFi SWME prototype development. A design that grouped the fiber layers into stacks, which were separated by small spaces and packaged into a cylindrical shape, was developed into a full-scale prototype consisting 14, 300 tube bundled into 30 stacks, each of which are formed into a chevron shape and separated by spacers and organized into three sectors of ten <b>nested</b> <b>stacks.</b> Vacuum chamber testing has been performed characterize heat rejection as a function of inlet water temperature and water vapor backpressure and to show contamination resistance to the constituents expected to be found in potable water produced by the distillation processes. Other tests showed the tolerance to freezing and suitability to reject heat in a Mars pressure environment...|$|R
5000|$|... #Caption: A <b>nested</b> <b>stack</b> {{automaton}} has {{the same}} devices as a pushdown automaton, but has less restrictions for using them.|$|E
50|$|Indexed {{languages}} are {{a class of}} formal languages discovered by Alfred Aho; they are described by indexed grammars and can be recognized by <b>nested</b> <b>stack</b> automata.|$|E
5000|$|In automata theory, a <b>nested</b> <b>stack</b> {{automaton}} is {{a finite}} automaton {{that can make}} use of a stack containing data which can be additional stacks. [...] Like a stack automaton, a <b>nested</b> <b>stack</b> automaton may step up or down in the stack, and read the current symbol; in addition, it may at any place create a new stack, operate on that one, eventually destroy it, and continue operating on the old stack. This way, stacks can be nested recursively to an arbitrary depth; however, the automaton always operates on the innermost stack only.|$|E
40|$|This paper uses a {{configuration}} space (c-space) based {{method to}} compute interference-free configuration for stacking polyhedral sheet metal parts. This work forms the interference analysis module of a stacking planner developed by us. Parts in a stack should {{not interfere with}} each other and should also satisfy stability, grasping and stacking plan feasibility related constraints. We present two techniques to speed up the expensive step of c-space obstacle computation. The first technique identifies orientation intervals (for a convex pair of solids) within which the topology of face-edge-vertex graph of an obstacle stays the same. Within this interval, c-space obstacle geometry for one orientation can be extrapolated from obstacle geometry for another orientation. Our experiments show that extrapolation takes an order of magnitude less than the time taken to compute an obstacle from scratch. The second technique computes near optimal interference-free positions for a discrete orientation without having to compute the complete c-space obstacle. Our experiments show that for complex sheet metal parts, less than 0. 1 % of the convex component pairs are evaluated in order to compute an interference-free configuration. We describe a configuration space based method to compute a list of interference-free configurations that can be tested to see if they satisfy the above mentioned constraints. The cost function is a weighted sum of components that penalize floor space utilization and height of c. g. of parts. The algorithm is able to pick <b>nested</b> <b>stacks</b> that tend to be stable and compact without having to explicitly enumerate features that can be nested. It is also able to accommodate flange...|$|R
40|$|The {{spacesuit}} water membrane evaporator (SWME) {{is being}} developed to perform thermal control for advanced spacesuits and {{to take advantage of}} recent advances in micropore membrane technology. This results in a robust heat-rejection device that is potentially less sensitive to contamination than is the sublimator. The current design was based on a previous design that grouped the fiber layers into stacks, which were separated by small spaces and packaged into a cylindrical shape. This was developed into a full-scale prototype consisting of 14, 300 tube bundled into 30 stacks, each of which is formed into a chevron shape and separated by spacers and organized into three sectors of 10 <b>nested</b> <b>stacks.</b> The new design replaced metal components with plastic ones, eliminated the spacers, and has a custom built flight like backpressure valve mounted {{on the side of the}} SWME housing to reduce backpressure when fully open. A number of tests were performed in order to improve the strength of the polyurethane header that holds the fibers in place while the system is pressurized. Vacuum chamber testing showed similar heat rejection as a function of inlet water temperature and water vapor backpressure was similar to the previous design. Other tests pushed the limits of tolerance to freezing and showed suitability to reject heat in a Mars pressure environment with and without a sweep gas. Tolerance to contamination by constituents expected to be found in potable water produced by distillation processes was tested in a conventional way by allowing constituents to accumulate in the coolant as evaporation occurs. For this purpose, the SWME cartridge has endured an equivalent of 30 EVAs exposure and demonstrated acceptable performance decline...|$|R
40|$|ABSTRACT. In {{this paper}} {{we present a}} {{detailed}} study of the spectral/ergodic properties of threeinterval exchange transformations. Our approach is mostly combinatorial, and relies on the diophantine results in Part I and the combinatorial description in Part II. We define a recursive method of generating three sequences of <b>nested</b> Rokhlin <b>stacks</b> which describe the system from a measuretheoretic {{point of view and}} which in turn gives an explicit characterization of the eigenvalues. We obtain necessary and sufficient conditions for weak mixing which, in addition to unifying all previously known examples, allow us to exhibit new examples of weakly mixing three-interval exchanges. Finally we give affirmative answers to two questions posed by W. A. Veech on the existence of threeinterval exchanges having irrational eigenvalues and discrete spectrum. 1...|$|R
50|$|An {{embedded}} pushdown automaton or EPDA is a {{computational model}} for parsing languages generated by tree-adjoining grammars (TAGs). It {{is similar to}} the context-free grammar-parsing pushdown automaton, except that instead of using a plain stack to store symbols, it has a stack of iterated stacks that store symbols, giving TAGs a generative capacity between context-free grammars and context-sensitive grammars, or a subset of the mildly context-sensitive grammars.Embedded pushdown automata {{should not be confused with}} <b>nested</b> <b>stack</b> automata which have more computational power.|$|E
5000|$|The term [...] "pushdown" [...] {{refers to}} the fact that the stack can be {{regarded}} as being [...] "pushed down" [...] like a tray dispenser at a cafeteria, since the operations never work on elements other than the top element. A stack automaton, by contrast, does allow access to and operations on deeper elements. Stack automata can recognize a strictly larger set of languages than pushdown automata.A <b>nested</b> <b>stack</b> automaton allows full access, and also allows stacked values to be entire sub-stacks rather than just single finite symbols.|$|E
5000|$|Functional {{programming}} data structures {{often use}} polymorphic recursion to simplify type error checks and solve problems with nasty [...] "middle" [...] temporary solutions that devour memory in more traditional data {{structures such as}} trees. In the two citations that follow, Okasaki (pp. 144-146) gives a CONS example in Haskell wherein the polymorphic type system automatically flags programmer errors. The recursive aspect is that the type definition assures that the outermost constructor has a single element, the second a pair, the third a pair of pairs, etc. recursively, setting an automatic error finding {{pattern in the data}} type. Roberts (p. 171) gives a related example in Java, using a Class to represent a stack frame. The example given is a solution to the Tower of Hanoi problem wherein a stack simulates polymorphic recursion with a beginning, temporary and ending <b>nested</b> <b>stack</b> substitution structure.|$|E
40|$|Layer nesting was {{investigated}} in five harness satin weave textile composite laminates under static compression loading. Two carbon/epoxy material systems, AS 4 / 3501 - 6 and IM 7 / 8551 - 7 A were considered. Laminates were fabricated with three idealized <b>nesting</b> cases: <b>stacked,</b> split-span and diagonal. Similar compression strength reductions due {{to the effects of}} idealized nesting were identified for each material. The diagonal nesting geometry produced the largest reduction in static strength when compared to the compression strength of a conventional textile composite. All three nesting cases produced reductions in strength and ultimate strain due to the effects of idealized nesting. Finite element results showed consistent strength reduction trends for the idealized nesting cases, however the magnitudes of compressive strengths were overpredicted...|$|R
5000|$|The {{pieces are}} four sided pyramids that can <b>nest</b> and <b>stack</b> with pipping from 1 to 3 at the base. A {{group of three}} pyramids of each size is called a [...] "trio." [...] Each [...] "stash" [...] or set of Icehouse pieces {{consists}} of five trios, or fifteen pyramids (variously called pieces, pyramids, or minions) of the same color and five of each three sizes: five large 3-point pyramids (called [...] "queens" [...] in some games), five medium 2-point pyramids (sometimes called [...] "drones"), and five small 1-point pyramids (or [...] "pawns"). The <b>stacked</b> and <b>nested</b> feature is not used in the original Icehouse game, but is taken advantage of {{in some of the}} other Icehouse-based games listed below.|$|R
40|$|In {{this paper}} {{we present a}} {{detailed}} study of the spectral/ergodic properties of threeinterval exchange transformations. Our approach is mostly combinatorial, and relies on the diophantine results in Part I and the combinatorial description in Part II. We define a recursive method of generating three sequences of <b>nested</b> Rokhlin <b>stacks</b> which describe the system from a measuretheoretic {{point of view and}} which in turn gives an explicit characterization of the eigenvalues. We obtain necessary and sufficient conditions for weak mixing which, in addition to unifying all previously known examples, allow us to exhibit new interesting examples of weakly mixing three-interval exchanges. Finally we give affirmative answers to two long standing questions posed by W. A. Veech on the existence of three-interval exchanges having irrational eigenvalues and discrete spectrum. 1...|$|R
40|$|K-extended basic macro grammars are introduced, where K is any {{class of}} {{languages}}. The class B(K) of languages generated by such grammars is investigated, {{together with the}} class LB(K) of languages generated by the corresponding linear basic grammars. For any full semi-AFL K, B(K) is a full AFL closed under iterated LB(K) -substitution, but not necessarily under substitution. For any machine type D, the stack controlled machine type corresponding to D is introduced, denoted S(D), and the checking-stack controlled machine type CS(D). The data structure of this machine is a stack which controls a pushdown of data structures from D. If D accepts K, then S(D) accepts B(K) and CS(D) accepts LB(K). Thus the classes B(K) are characterized by stack controlled machines and the classes LB(K), i. e., the full hyper-AFLs, by checking-stack controlled machines. A full basic-AFL is a full AFL K such that B(K) C K. Every full basic-AFL is a full hyper-AFL, but not vice versa. The class of OI macro languages (i. e., indexed languages, i. e., <b>nested</b> <b>stack</b> automaton languages) is a full basic-AFL, properly containing the smallest full basic-AFL. The latter is generated by the ultrabasic macro grammars and accepted by the <b>nested</b> <b>stack</b> automata with bounded depth of nesting (and properly contains the stack languages, the ETOL languages, i. e., the smallest full hyper-AFL, and the basic macro languages). The full basic-AFLs are characterized by bounded <b>nested</b> <b>stack</b> controlled machines...|$|E
40|$|Abstract. Accessible groups whose word {{problems}} are accepted by a deterministic <b>nested</b> <b>stack</b> automaton with limited erasing are virtually free. 1. Introduction. During {{the past several}} years combinatorial group theory has received an infusion of ideas both from topology and from the theory of formal languages. The resulting interplay between groups, the geometry of their Cayley diagrams, and associated formal languages has led to several developments includin...|$|E
40|$|Macro grammars and {{context-free}} tree grammars {{are discussed}} in which a bound is put (dynamically or statically) on the nesting-depth of nested calls of nonterminals. The dynamic and static restrictions are closely related (and both {{are related to the}} <b>nested</b> <b>stack</b> automaton with bounded nesting of stacks). The corresponding classes of tree languages have derivation bounded contextfree languages as path-languages. Macro languages exist which cannot be generated by nesting-depth bounded macro grammars...|$|E
5|$|Mingulay {{has a large}} seabird population, and is an {{important}} breeding ground for razorbills (9,514 pairs, 6.3% of the European population), guillemots (11,063 pairs) and black-legged kittiwakes (2,939 pairs). shags (694 individuals), fulmar (11,626 pairs), puffins (2,072 pairs), storm petrel, common terns, Arctic terns, bonxies and various species of gull also nest in the sea-cliffs. Manx shearwaters <b>nested</b> on Lianamul <b>stack</b> until the late 18th century, when they were driven away by puffins, and tysties have also been recorded there.|$|R
40|$|Some {{algorithmic}} {{patterns are}} difficult to express in OpenMP. In this paper, we use a simple sorting algorithm to illustrate problems with recursion and the avoidance of busy waiting. We compare several solution approaches with respect to programming expense and performance: <b>stacks,</b> <b>nesting</b> and a workqueue (for recursion), as well as condition variables and the sched yield–function (for busy waiting). Enhancements of the OpenMP–specification are suggested where we saw the need. Performance measurements are included to backup our claims. 1...|$|R
50|$|Mingulay {{has a large}} seabird population, and is an {{important}} breeding ground for razorbills (9,514 pairs, 6.3% of the European population), guillemots (11,063 pairs) and black-legged kittiwakes (2,939 pairs). shags (694 individuals), fulmar (11,626 pairs), puffins (2,072 pairs), storm petrel, common terns, Arctic terns, bonxies and various species of gull also nest in the sea-cliffs. Manx shearwaters <b>nested</b> on Lianamul <b>stack</b> until the late 18th century, when they were driven away by puffins, and tysties have also been recorded there.|$|R
40|$|We {{construct}} the representations of Cayley graphs of wreath products using finite automata, pushdown automata and <b>nested</b> <b>stack</b> automata. These representations are {{in accordance with}} the notion of Cayley automatic groups introduced by Kharlampovich, Khoussainov and Miasnikov and its extensions introduced by Elder and Taback. We obtain the upper and lower bounds for a length of an element of a wreath product in terms of the representations constructed. Comment: Final version, to appear in the International Journal of Foundations of Computer Scienc...|$|E
40|$|We {{investigate}} co-indexed groups, that is groups whose co-word problem (all words defining nontrivial elements) is an indexed language. We {{show that}} all Higman-Thompson groups {{and a large}} class of tree automorphism groups defined by finite automata are co-indexed groups. The latter class {{is closely related to}} dynamical systems and includes the Grigorchuk 2 -group and the Gupta-Sidki 3 -group. The co-word problems of all these examples are in fact accepted by <b>nested</b> <b>stack</b> automata with certain additional properties, and we establish various closure properties of this restricted class of co-indexed groups, including closure under free products...|$|E
40|$|International audienceWe {{consider}} {{the problem of}} symbolic reachability analysis of higher-order context-free processes. These models are generalizations of the context-free processes (also called BPA processes) where each process manipulates a data structure which {{can be seen as}} a <b>nested</b> <b>stack</b> of stacks. Our main result is that, for any higher-order context-free process, the set of all predecessors of a given regular set of configurations is regular and effectively constructible. This result generalizes the analogous result which is known for level 1 context-free processes. We show that this result holds also in the case of backward reachability analysis under a regular constraint on configurations. As a corollary, we obtain a symbolic model checking algorithm for the temporal logic E(U,X) with regular atomic predicates, i. e., the fragment of CTL restricted to the EU and EX modalities...|$|E
50|$|Mingulay {{and nearby}} Berneray became a Site of Special Scientific Interest in 1983.Mingulay {{has a large}} seabird population, and is an {{important}} breeding ground for razorbills (9,514 pairs, 6.3% of the European population), guillemots (11,063 pairs) and black-legged kittiwakes (2,939 pairs). Shags (694 individuals), fulmar (11,626 pairs), puffins (2,072 pairs), storm petrel, common terns, Arctic terns, bonxies and various species of gull also nest in the sea-cliffs. Manx shearwaters <b>nested</b> on Lianamul <b>stack</b> until the late 18th century, when they were driven away by puffins, and tysties have also been recorded there.|$|R
50|$|Little {{penguins}} can breed as isolated pairs, in colonies, or semi-colonially. Nests {{are situated}} {{close to the}} sea in burrows excavated by the birds or other species, or in caves, rock crevices, under logs or in or {{under a variety of}} man-made structures including <b>nest</b> boxes, pipes, <b>stacks</b> of wood or timber, and buildings. They are monogamous within a breeding season, and share incubation and chick rearing duties. They are the only species of penguin capable of producing more than one clutch of eggs per breeding season, but few populations do so.|$|R
40|$|In the Ainsa basin, the Castissent {{sequence}} {{has been}} subdivided {{in two different}} composite depositional sequences: Castissent- 1 (Cs- 1) and Castissent- 2 (Cs- 2). This study focuses on {{the lower part of}} Cs- 1, where the Fosado Channel Complex lies. Cs- 1 was deposited synchronously with a high-deformation phase in the Pyrenean orogeny (Upper Ypresian to Lower Lutetian), with strong tectonic reactivation of the South-Central Pyrenean Unit; sediments were affected by the Atiart thrust (east) and later on by Los Molinos thrust (west). So far, the knowledge about Cs- 1 was mainly its stratigraphic position within the Torla turbidite system, its physical correlation with the fluvio-deltaic feeding system of Castissent Fm. s. s., as well as its facies detail of the uppermost individual channel (the Fosado channel, s. s.), which {{has been used as a}} facies model for channel margin settings. Nevertheless, its high resolution stratigraphic study, its facies associations and architecture, still remains unknown in detail. Therefore, it has been possible to map and redefine the extension of the Atiart unconformity in the hanging wall of Los Molinos thrust. This 3 rd order sequence boundary at the base of Cs- 1 separates: (1) a lower mud-dominated unit, with a high content in debris flow deposits and fine-grained turbidites; and (2) the upper unit, mainly composed by a channel-overbank complex (channel-levee), forming sandy packages belonging to highly-heterogeneous channels. In the stacking pattern of the Fosado complex two main growing stages have been identified: Cs- 1 a and Cs- 1 b. Cs- 1 a displays a relatively high percentage of sand content in individual channels; on the contrary, Cs- 1 b is a mud-dominated unit, mainly composed by fine-grained channels and their related overbank deposits. This last unit would be the lowermost part of the slope fan related with the Castissent deltas. Consequently, the study has focused on the channel complex of Cs- 1 a unit, where a stacking pattern with unconformities is described and has led to organize it hierarchically in five 4 th-order sequences (high resolution seismic scale). Each channel group shows a <b>nested</b> <b>stacking</b> pattern, with hyperconcentrated flow deposits at the base, and lateral and vertical accretion (up to 200 x 20 m), which is probably indicative of large-scale high-sinuosity channels...|$|R
