16|3|Public
25|$|ICMP scan - determines if a host {{responds}} to ICMP requests, such as echo (ping), <b>netmask,</b> etc.|$|E
25|$|In IPv4, on-link {{determination}} for an IP {{address is}} given simply by the address and <b>netmask</b> configuration, as the address cannot be disassociated from the on-link prefix. For IPv6, however, on-link determination {{is different in}} detail and requires the Neighbor Discovery Protocol (NDP). IPv6 address assignment to an interface carries no requirement of a matching on-link prefix and vice versa, {{with the exception of}} link-local addresses.|$|E
2500|$|... 192.168.0.0, <b>netmask</b> 255.255.255.0 {{is written}} as 192.168.0.0/24 ...|$|E
50|$|NIS+ also manages {{several other}} types of data: NFS mounts (auto_master, auto_home), network booting and other {{parameters}} (bootparams, ethers, <b>netmasks,</b> netgroup, networks, protocols, rpc, services), security access (cred), aliases, and timezone.|$|R
50|$|A VIP address {{can be used}} {{to provide}} nearly {{unlimited}} mobility. For example, if an application has an IP address on a physical subnet, that application can be moved only to a host on that same subnet. VIP addresses can be advertised with full <b>netmasks</b> (unsubnetted), so its application can be moved anywhere on the reachable network without changing addresses.|$|R
40|$|IP address lookup is a {{fundamental}} task for Internet routers, due to {{the rapid growth of}} both traffic and links capacity. Many algorithms have been proposed to improve lookup performance in terms of memory consumption, search speed and update complexity. Due to the presence of wildcards and <b>netmasks,</b> such algorithms adopt several techniques to deal with longest prefix matching. However, the analysis of lookup tables reveals that the first 16 bits of forwarding rules are almost always specified. Therefore, more powerful exact-matching schemes {{can be applied to the}} first half of addresses. This paper presents a routing lookup accelerator (RLA) which allows the lookup of the first 16 bits to be sped up. The target is an efficient scheme to be implemented in small and fast memories of recent hardware platforms. Specifically, since in several forwarding tables the distribution of the first 16 bits is characterized by empty gaps as well as pronounced peaks, we propose to divide the address space in different ranges and to encode each address only as a difference with respect to a given address chosen as reference for that range. Then, a hybrid direct-addressing / multibit trie scheme is used for each range. As RLA is orthogonal to all other schemes, any other lookup algorithm can be used to perform longest prefix matching on the remaining bits...|$|R
5000|$|The column Network Destination and <b>Netmask</b> {{together}} {{describe the}} Network id as mentioned earlier. For example, destination 192.168.0.0 and <b>netmask</b> 255.255.255.0 {{can be written}} as network id 192.168.0.0/24.|$|E
5000|$|... 192.168.0.0, <b>netmask</b> 255.255.255.0 {{is written}} as 192.168.0.0/24 ...|$|E
50|$|ICMP scan - determines if a host {{responds}} to ICMP requests, such as echo (ping), <b>netmask,</b> etc.|$|E
50|$|The IPX network {{number is}} conceptually {{identical}} to the network part of the IP address (the parts with <b>netmask</b> bits set to 1); the node number has the same meaning as the bits of IP address with <b>netmask</b> bits set to 0. The {{difference is that the}} boundary between network and node part of address in IP is variable, while in IPX it is fixed. As the node address is usually {{identical to the}} MAC address of the network adapter, the Address Resolution Protocol is not needed in IPX.|$|E
50|$|Today, {{remnants}} of classful network concepts function {{only in a}} limited scope as the default configuration parameters of some network software and hardware components (e.g. <b>netmask),</b> and in the technical jargon used in network administrators' discussions.|$|E
50|$|In IPv4, on-link {{determination}} for an IP {{address is}} given simply by the address and <b>netmask</b> configuration, as the address cannot be disassociated from the on-link prefix. For IPv6, however, on-link determination {{is different in}} detail and requires the Neighbor Discovery Protocol (NDP). IPv6 address assignment to an interface carries no requirement of a matching on-link prefix and vice versa, {{with the exception of}} link-local addresses.|$|E
50|$|On large LANs, DNS servers {{may provide}} better nameserver {{functionality}} than NIS or LDAP can provide, leaving just site-wide identification information for NIS master and slave systems to serve. However, some functionssuch as {{the distribution of}} <b>netmask</b> information to clients, {{as well as the}} maintenance of e-mail aliasesmay still be performed by NIS or LDAP. NIS maintains an NFS database information file as well as so called maps.|$|E
50|$|Instead, {{for every}} address to allocate, the {{variable}} (host) part is {{written on a}} wooden peg with waterproof marker. The user would then attach it to the cable connecting that device to the network. The peg {{is accompanied by a}} leaflet with further information such as the static (net) part of the IP address, the <b>netmask,</b> the default gateway, DNS servers, and often also their MAC addresses to prevent ARP spoofing. Different subnets, such as LAN and WLAN are distinguished by different colors used to write on the pegs.|$|E
40|$|Network {{configuration}} is {{the assignment}} of network parameters necessary for a device to integrate the network, examples being: an IP address, <b>netmask,</b> the IP address of the gateway, etc [...] . In the case of Mobile Ad hoc NETworks (MANETs), the connectivity of nodes is highly dynamic and a central administration or configuration by the user is very difficult. This paper presents an autoconfiguration solution for ad hoc networks running the widely implemented version of OLSR routing protocol, the 2003 RFC 3626 [1]. This solution {{is based on an}} efficient Duplicate Address Detection (DAD) algorithm, which takes advantage of the genuine optimization of the OLSR routing protocol. The proposed autoconfiguration algorithm is proved to operate correctly in a multiple interfaces OLSR network...|$|E
30|$|Techniques {{based on}} complex data structures, such as trees or graphs, {{can be used}} instead of using a linear list. The more complex the data structure, the more memory and {{preprocessing}} are needed. The less complex the data structure, the less the technique will be flexible and high performing. For instance, rules can be grouped using their target <b>netmask,</b> but this is meaningless for application layer rules, for multicast rules, or when a node that has a certain resource to be filtered roams to a new network. Moreover, with a mesh network made of thousands of nodes, {{there are thousands of}} netmasks, so filtering is still cumbersome. This gets even worse with networks based on IPv 6 addresses. Both these approaches are hardly applicable when the rules do not match IP addresses and TCP/UDP ports but layer- 7 data inside a packet.|$|E
40|$|A mobile ad hoc network (MANET) is a multi-hop {{wireless}} network capable of autonomous operation. The mobility of MANET nodes {{can lead to}} frequent and unpredictable topology changes. Most MANET literature assumes that network related information of a node (such as its IP address, <b>netmask,</b> etc.) is configured statically, prior to the node joining the MANET. However, not all nodes have IP addresses permanently assigned to them. Such nodes rely on a centralized server and use a {{dynamic host configuration protocol}}, like DHCP [1], to acquire an IP address. Such a solution cannot be employed in MANETs due to the unavailability of any centralized DHCP server. In this paper, we first present a survey of possible solutions approaches, and discuss their limitations. Then, we present a distributed dynamic host configuration protocol designed to configure nodes in a MANET. We show that the proposed protocol works correctly and does not have the limitations of earlier approaches. Finally, we evaluate the performance of the solution through simulation experiments, and conclude with a discussion of related security issues...|$|E
40|$|There {{will be a}} need to {{configure}} nodes with multiple radios, as ad hoc networks are being deployed. The applications tend to have high bandwidth requirements. At the same time, the deployment scenario may result in range requirements {{that can not be}} met by Super High Frequency (SHF) or Very High Frequency (VHF) radios. An alternative is then to use multiple radios, where the radios differentiate in transmission range, bandwidth or by other radio characteristics. The aim of this dissertation is therefore to study various techniques to utilize heterogeneous radio networks, and for improved packet delivery within various configurations of mobile ad-hoc networks. Wireless mobile ad hoc networks are commonly referred to as autonomous networks where the involved nodes organize themselves. The operations of ad hoc networks are neither requiring a preplanned infrastructure nor wired base-stations. A node is free to move, join or leave the network randomly. The nodes use their own wireless interfaces to both originate traffic, receive traffic and to convey traffic. Hence an ad hoc network consists of nodes collaborating in establishing a network enabling communication between the nodes. Routing in heterogeneous radio networks was both the starting point, and the last work carried out in this dissertation. The work started by analyzing the Ad-hoc On Demand distance Vector (AODV) in a dual radio network environment. One radio was configured with high bandwidth, but a short transmission range, whereas the other was configured with low bandwidth and a long transmission range. The aim of this work was to investigate whether short-range but high bandwidth links would increase the overall capacity of the network. High bandwidth links were first studied by delaying route requests over long transmission range and low bandwidth links. Additional delay was also used to balance the traffic load. By delaying the route requests over the long range links, an improved utilization of the radio resources was demonstrated. The results show an increased packet delivery ratio compared to the commonly used shortest path routing methodology. The proactive routing protocol Optimized Link State Routing protocol (OLSR) was also analyzed in a heterogeneous radio network setting. It was demonstrated that the overall traffic throughput increased when the routing took into consideration the observed traffic load. It was concluded that long transmission range and low bandwidth links were preferable at low traffic load, while high bandwidth links were preferable at high traffic load. At low traffic load, the low bandwidth radios provide sufficient bandwidth and consistent routes. However, the low bandwidth radios did not provide sufficient capacity at high traffic loads. The cost of the increased utilization of high capacity radios was more inconsistent route entries. Hence, low capacity radios were preferably used at low traffic load, while high capacity radios should be used to reduce the load over the low capacity radios. The work also addressed various techniques for improved packet delivery under different network configurations and traffic load. Due to node mobility, stale route entries cause packet loss. The performed study showed that by changing the traditional queuing method, and by providing packets a second chance, an improved packet delivery was achieved. The change in queue methodology consisted of assigning the next-hop address after queuing instead of before queuing. A second chance was also provided to the otherwise lost packets by alternative routing. As a result, the otherwise lost packets due to mobility were preserved. The alternative queue method was also carried out in an experimental test-bed using Linux software routers. The simulation and test-bed results showed similar trends, but deviated {{in terms of the number}} of lost packets. The test-bed did also disclose some common protocol miss configurations. Broadcast is commonly used for the dissemination of control packets. In order to receive the broadcast packets, the interfaces are traditionally configured with a <b>netmask</b> wide enough to receive these packets. This miss configuration resulted in data packets being tried transmitted, though no 32 bits route entry was available. Upon a missed 32 bits route entry, the packets were forwarded due to the longest prefix match, which was the interface <b>netmask.</b> Hence, data packets were not experiencing route error when broadcast was used for the dissemination of the control packets. PhD i informasjons- og kommunikasjonsteknologiPhD in Information and Communications Technolog...|$|E

