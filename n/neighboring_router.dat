12|74|Public
5000|$|... "RD (Reported Distance)": The metric to a {{destination}} as advertised by a <b>neighboring</b> <b>router.</b> RD {{is used to}} calculate the FD, and to determine if the route meets the [...] "feasibility condition".|$|E
50|$|The main {{disadvantage}} of poison reverse {{is that it}} can significantly increase the size of routing announcements in certain fairly common network topologies, but it allows for the improvement of the overall efficiency of the network in case of faults.Split horizon states that if a <b>neighboring</b> <b>router</b> sends a route to a router, the receiving router will not propagate this route back to the advertising router on the same interface.|$|E
50|$|Path vector routing is {{used for}} inter-domain routing. It is similar to {{distance}} vector routing. Path vector routing assumes that one node (there can be many) in each autonomous system acts {{on behalf of the}} entire autonomous system. This node is called the speaker node. The speaker node creates a routing table and advertises it to neighboring speaker nodes in neighboring autonomous systems. The idea is the same as distance vector routing except that only speaker nodes in each autonomous system can communicate with each other. The speaker node advertises the path, not the metric, of the nodes in its autonomous system or other autonomous systems.Path vector routing is discussed in RFC 1322; the path vector routing algorithm is somewhat similar to the distance vector algorithm in the sense that each border router advertises the destinations it can reach to its <b>neighboring</b> <b>router.</b> However, instead of advertising networks in terms of a destination and the distance to that destination, networks are advertised as destination addresses and path descriptions to reach those destinations. A route is defined as a pairing between a destination and the attributes of the path to that destination, thus the name, path vector routing, where the routers receive a vector that contains paths to a set of destinations.The path, expressed in terms of the domains (or confederations) traversed so far, is carried in a special path attribute that records the sequence of routing domains through which the reachability information has passed.|$|E
50|$|A router {{receives}} explicit Join/Prune {{messages from}} those <b>neighboring</b> <b>routers</b> that have downstream group members.|$|R
5000|$|In {{wireless}} routing, inter-flow interference {{refers to}} the interference between <b>neighboring</b> <b>routers</b> competing for the same busy channel.|$|R
5000|$|Periodically checks if a {{route is}} {{available}} and propagates routing changes to <b>neighboring</b> <b>routers</b> if any changes have occurred.|$|R
40|$|Routing {{protocols}} {{have been}} extended {{over time to}} use cryptographic mechanisms to ensure that data received from a <b>neighboring</b> <b>router</b> has not been modified in transit and actually originated from an authorized <b>neighboring</b> <b>router.</b> The cryptographic mechanisms defined to date and described in this document rely on a digest produced with a hash algorithm applied to the payload encapsulated in the routing protocol packet. This document outlines some {{of the limitations of}} the current mechanism, problems with manual keying of these cryptographic algorithms, and possible vectors for the exploitation of these limitations. Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Interne...|$|E
40|$|An Interface Identifier (ID) Hello Option for PIM This {{document}} {{defines a}} new PIM Hello option to advertise an Interface Identifier {{that can be}} used by PIM protocols to uniquely identify an interface of a <b>neighboring</b> <b>router.</b> Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|E
40|$|BGP) {{introduces}} severe vulnerabilities for Internet routing including active malicious {{attacks and}} unintended misconfigura-tions. Although various secure BGP solutions have been proposed, {{the complexity of}} security enforcement and data-plane attacks still remain open problems. We propose TBGP, a trusted BGP scheme aiming to achieve high authenticity of Internet routing with a simple and lightweight attestation mechanism. TBGP introduces a set of route update and withdrawal rules that, if correctly enforced by each router, can guarantee the authenticity and integrity of route information that is announced to other routers in the Internet. To verify this enforcement, an attestation service running on each router provides interfaces for a <b>neighboring</b> <b>router</b> to challenge the integrity of its routing stack, enforced rules, and the attestation service itself. If this attestation succeeds, the <b>neighboring</b> <b>router</b> updates its routing table or announces the route to its neighbors, following the same rules. Thus, a router on a routing path only needs to verify one neighbor’s routing status {{to ensure that the}} route information is valid. Through this, TBGP builds a transitive trust relationship among all routers on a routing path. We implement a prototype of TBGP to investigate its prac-ticality. In our implementation, we use identity-based signature (IBS) and trusted computing (TC) techniques to further reduce the complexity of security operations. Our security analysis and performance study shows that TBGP can achieve the security goals of BGP with significantly better convergence performance and lower computation overhead than existing secure BGP solutions...|$|E
40|$|To reduce energy {{consumption}} of lightly loaded routers, operators are increasingly incentivized to use Adaptive Link Rate (ALR) policies and techniques. These techniques typically save energy by adapting link service rates or by identifying opportune times to put interfaces into low-power sleep/idle modes. In this paper, {{we present a}} trace-based analysis of the impact that a router implementing these techniques has on the <b>neighboring</b> <b>routers.</b> We show that policies adapting the service rate at larger time scales, either by changing the service rate of the link interface itself or by changing which redundant heterogeneous link is active, typically have large positive effects on <b>neighboring</b> <b>routers,</b> with the downstream routers being able to achieve up-to 30 % additional energy savings due to the upstream routers implementing ALR policies. Policies that save energy by temporarily placing the interface in a low-power sleep/idle mode, typically has smaller, but positive, impact on <b>neighboring</b> <b>routers.</b> Best are hybrid policies that {{use a combination of}} these two techniques. The hybrid policies consistently achieve the biggest energy savings, and have positive cascading effects on surrounding routers. Our results show that implementation of ALR policies can contribute to large-scale positive domino incentive effects, as they further increase the potential energy savings seen by those <b>neighboring</b> <b>routers</b> that consider implementing ALR techniques, while satisfying performance guarantees on the routers themselves...|$|R
40|$|Wireless Sensor Network (WSN) {{has been}} widely {{considered}} {{as one of the}} most important category of networks. One of the applications of WSN is in Emergency Management Systems. Environmental monitoring systems, especially nuclear plants require transmission of emergency information in a dynamic manner. A conventional centralized management system may not be able to cope with huge number of sensors, rapidly changing topology and cannot assure the real-time transmission of emergency information. Decentralized System is presented to solve these problems. In Decentralized System, emergency information is distributed to the <b>neighboring</b> <b>routers</b> where each router transmits the emergency information to the sink by mutual coordination. In this paper, Decentralized System is proposed for the transmission of multiple emergency information with the coordination of <b>neighboring</b> <b>routers</b> without transmission collision between the routers. ...|$|R
50|$|Both IS-IS and Open Shortest Path First (OSPF) are {{link state}} protocols, and both {{use the same}} Dijkstra {{algorithm}} for computing the best path through the network. As a result, they are conceptually similar. Both support variable length subnet masks, can use multicast to discover <b>neighboring</b> <b>routers</b> using hello packets, and can support authentication of routing updates.|$|R
40|$|Abstract — Three-dimensional (3 D) {{integration}} and Network-on-Chip (NoC) are both proposed {{to tackle the}} on-chip intercon-nect scaling problems, and extensive research efforts have been de-voted to the design challenges of combining both. Through-silicon via (TSV) {{is considered to be}} the most promising technology for 3 D integration, however, TSV pads distributed across planar lay-ers occupy significant chip area and result in routing congestions. In addition, the yield of 3 D integrated circuits decreased dramat-ically as the number of TSVs increases. For symmetric 3 D mesh NoC, we observe that the TSVs ’ utilization is pretty low and adja-cent routers rarely transmit packets via their vertical channels (i. e. TSVs) at the same time. Based on this observation, we propose a novel TSV squeezing scheme to share TSVs among <b>neighboring</b> <b>router</b> in a time division multiplex mode, which greatly improves the utilization of TSVs. Experimental results show that the pro-posed method can save significant TSV footprint with negligible performance overhead. ...|$|E
40|$|What is Internet? Internet is a {{hierarchical}} network composed of communication de-vices, the routers, interconnected with point-to-point links. The interconnection between the Autonomous systems composes {{the top level}} of the hierarchy. An autonomous sys-tem (AS) is basically a local network with a gateway to the outside (for instance, the local network of an university). Autonomous systems are of various types or, more precisely, belong to different domains (Stub domains, Transit domains, or Multi-homed domains). Basically, Transit domains interconnect Stub domains. The graph we will consider is the graph whose nodes are the ASs and whose edges are the link between them. Links between autonomous systems are unknown: network companies keep their net-work structure secret. This motivates the need of a model: because the real network is unknown, one needs a model to design algorithms or calibrate structures for the Internet. What {{do we know about}} the Internet topology? Measurements of Internet topology are mostly done using BGP tables or traceroutes. BGP tables are routing tables stored in routers to route the messages: it contains where to route (to which <b>neighboring</b> <b>router)</b> what according to its destination. Unfortunately the tables are mostly private (for th...|$|E
40|$|We {{propose a}} routing {{protocol}} for wireless networks. Wireless routing protocols allow hosts within a network {{to have some}} knowledge of the topology in order {{to know when to}} forward a packet (via broadcast) and when to drop it. Since a routing protocol forms the backbone of a network, it is a lucrative target for many attacks, all of which attempt to disrupt network traffic by corrupting routing tables of neighboring routers using false updates. Secure routing protocols designed for wired networks (such as S-BGP) are not scalable in an ad-hoc wireless environment because of two main drawbacks: (1) the need to maintain knowledge about all immediate neighbors (which requires a discovery protocol), and (2) the need to transmit the same update several times, one for each neighbor. Although information about neighbors is readily available in a fairly static and wired network, such information is often not updated or available in an ad-hoc wireless network with mobile devices. Our protocol is a variant of S-BGP called SS-BGP and allows a single broadcast for routing updates without having the {{need to be aware of}} every <b>neighboring</b> <b>router.</b> The protocol is based on a novel authentication primitive called Enhanced Chain Signatures (ECS). Comment: Extended versio...|$|E
5000|$|Topology table {{contains}} the metric (cost information) of all routes to any destination within the autonomous system. This information is received from <b>neighboring</b> <b>routers</b> {{contained in the}} Neighbor table. The primary (successor) and secondary (feasible successor) routes to a destination will be determined with {{the information in the}} topology table. Among other things, each entry in the topology table {{contains the}} following: ...|$|R
40|$|Network-on-chip (abbreviated as NoC) is {{emerging}} as a very reasonable and efficient answer for connecting the numerous cores in a System-on-Chip (abbreviated as SoC). <b>Neighboring</b> <b>routers</b> are connected through unidirectional communication channels in conventional Network-on-Chip architectures. Due to the uneven and unpredictable nature of traffic patterns in NoC, in one channel overflow might occur due to intense traffic in one direction but the other unidirectional channel is idle, hence causing performance degradation, loss of data and incompetent resource utilization. Bidirectional NoC (BiNoC) {{is used as a}} cure for this problem. It uses bidirectional channels to connect <b>neighboring</b> <b>routers</b> and supports recomputation of channel direction according to traffic demand during runtime by using CDC (channel direction control) protocol. Objective of this project is to design a packet switched Bidirectional NoC (BiNoC) having features like wormhole flow control, XY routing algorithm and 2 -D mesh topology. The design architecture is coded using VHDL and simulated using Xilinx ISE tools...|$|R
30|$|ColShield {{effectiveness}} {{relies on}} the collaboration between different IPDS. The ColShield cannot be enabled on all routers. The IPDS are routers that perform detection and forward messages to the <b>neighboring</b> <b>routers</b> and the global IPDS. An IPDS communicates with neighboring IPDS only for signaling collaborative information. Thus only 20 % of communication overhead is caused in the network which {{does not affect the}} performance of the network.|$|R
40|$|Abstract. The Hello {{protocol}} in OSPF allows each router in {{a network}} to check whether it can exchange messages with neighboring routers in its network. This check is carried out by making each router periodically send hello messages to every <b>neighboring</b> <b>router</b> in the network. Associated with the Hello protocol are two time periods: the hello period and the dead period. The hello period is the time period between sending two successive hello messages to the same neighbor. The dead period is the time period after which a router can declare a neighbor dead if during this period the router does not receive any hello messages from that neighbor. The original Hello protocol restricts the hello and dead periods to be fixed over time and to be identical in all routers. Simulation {{studies have shown that}} these restrictions contribute to network instabilities and even to network collapse. To improve network stability, we present a flexible Hello protocol where the hello and dead periods change over time and become consistent (rather than identical) in all routers. To ensure the fault-tolerance of our Hello protocol, the protocol is designed to be stabilizing. That is, when started from an arbitrary initial state, the protocol converges to a legitimate state, and remains in legitimate states throughout the remainder of its execution. 1...|$|E
40|$|The Hello {{protocol}} in OSPF allows each router in {{a network}} to check whether it can exchange messages with neighboring routers in its network. This check is carried out by making each router periodically send hello messages to every <b>neighboring</b> <b>router</b> in the network. Associated with the Hello protocol are two time periods: the hello period and the dead period. The hello period is the time period between sending two successive hello messages to the same neighbor. The dead period is the time period after which a router can declare a neighbor dead if during this period the router does not receive any hello messages from that neighbor. The original Hello protocol restricts the hello and dead periods to be fixed over time and to be identical in all routers. Simulation {{studies have shown that}} these restrictions contribute to network instabilities and even to network collapse. To improve network stability, we present a flexible Hello protocol where the hello and dead periods change over time and become consistent (rather than identical) in all routers. To ensure the fault-tolerance of our Hello protocol, the protocol is designed to be stabilizing. That is, when started from an arbitrary initial state, the protocol converges to a legitimate state, and remains in legitimate states throughout the remainder of its execution. This work is supported by DARPA under contract F 30602 - 00 -C- 019...|$|E
50|$|This {{difference}} {{shows up}} in the initial behavior and mechanisms of the two protocols. Dense Mode uses a fairly simple approach to handle IP multicast routing. The source initially broadcasts to every router directly connected to it. These <b>neighboring</b> <b>routers</b> further forward the data to their neighbors. When a router does not wish to receive this group's data (if no other <b>neighboring</b> PIM <b>routers</b> are present and no host is interested in the group), it sends a Prune message to indicate its lack of interest. Upon receiving a Prune message, the router will modify its state so that it will not forward those packets out that interface. If every interface on a router is pruned, the router will also be pruned.|$|R
50|$|The IP routing {{protocols}} {{in use today}} are based on one of two algorithms: distance vector or link state. Distance vector algorithms broadcast routing information to all <b>neighboring</b> <b>routers.</b> Link state {{routing protocols}} build a topographical map of the entire network based on updates from neighbor routers, and then use the Dijkstra algorithm to compute the shortest path to each destination. Metrics used {{are based on the}} number of hops, delay, throughput, traffic, and reliability.|$|R
2500|$|Each OSPF router {{within a}} network {{communicates}} with other <b>neighboring</b> <b>routers</b> on each connecting interface {{to establish the}} states of all adjacencies. Every such communication sequence is a separate conversation identified by the pair of router IDs of the communicating neighbors. RFC 2328 specifies the protocol for initiating these conversations (Hello Protocol) and for establishing full adjacencies (Database Description Packets, Link State Request Packets). During its course, each router conversation transitions through a maximum of eight conditions defined by a state machine: ...|$|R
40|$|Abstract—In Content Centric Network, caching and forward-ing schemes {{can affect}} the {{performance}} of the whole network. The original caching and forwarding schemes are simple, but these schemes have some drawbacks. Firstly, the original caching scheme stores the same content on several <b>neighboring</b> <b>routers</b> along the request path. This redundant caching does not use the limited storage space available to the routers efficiently. Secondly, the original forwarding scheme in which the data requests are flooded to <b>neighboring</b> <b>routers,</b> also degrades {{the performance of the}} network. In this paper, we aim to solve the issues of using cache space of each router efficiently and forwarding the data requests effectively. In this proposal, we divided an Autonomous System (AS) in several groups of routers to cache the popular contents. Routers in a group cooperatively store the data and forward the Interest in order to increase the network performance. To improve the cache hit, the group of routers only store the popular contents and reduce the duplicate content without effecting the redundancy. We used Consistent Hashing to reduce overlapping contents and forward the request efficiently. The content popularity prediction algorithm assists the routers to store the popular contents that pass through them. Finally, we evaluated the performance of our proposed scheme by using a chunk level simulator...|$|R
40|$|Routing {{protocols}} are {{key elements}} of modern communication networks. Currently deployed dynamic routing protocols {{that are used to}} propagate network topology information to the <b>neighboring</b> <b>routers</b> are Routing Information Protocol (RIP), Enhanced Interior Gateway Routing Protocol (EIGRP), and the Open Shortest Path First (OSPF) protocol. The choice of the right routing protocol depends on a number of parameters. In this paper, we use OPNET Modeler to analyze the performance of RIP, EIGRP, and the OSPF protocols, which are commonly deployed in Internet Protocol (IP) networks. We designed various simulation scenarios to compare their performance. 1...|$|R
5000|$|The {{outgoing}} interfaces {{point to}} the <b>neighboring</b> downstream <b>routers</b> that have sent Join/Prune messages toward the RP {{as well as the}} directly connected hosts which have requested membership to group G.|$|R
40|$|This paper {{presents}} a scalable mechanism, Fast Routing Table Recovery (FRTR), for detecting and correcting route inconsistencies between <b>neighboring</b> BGP <b>routers.</b> A periodic update approach, used by most routing protocols, is considered infeasible {{due to the}} large size of today’s global routing table. In FRTR <b>neighboring</b> <b>routers</b> periodically exchange Bloom filter digests of the routing state to detect any potential routing inconsistency. The digests can also facilitate efficient recovery after a BGP session reset. FRTR achieves a low bandwidth overhead by using small digests, and achieves strong consistency by “salting ” the digests with random seeds to overcome Bloom filter’s false-positive drawback. Our analysis and simulation results show that, with one round of message exchange, FRTR can detect and recover over 91 % of random errors that the current BGP would have missed and the overhead can be as low as 1. 3 % of a full routing table exchange. With salted digests FRTR can detect all the errors with a probability close to 100 % after a few rounds of exchanges...|$|R
40|$|Power {{consumption}} {{is a critical}} issue in interconnection network design, driven by power-related design constraints, such as thermal and power delivery design. Usually, off-line worst-case power analysis is used in network design to guarantee safe on-line operation, which not only increases system cost but also constrains network performance. In this work, we present an on-line mechanism, called PowerHerd, which can dynamically regulate network power consumption, and guarantee that network peak power constraints are not exceeded. PowerHerd is a distributed approach [...] within the interconnection network, each router dynamically maintains a local power budget, controls its local power dissipation, and exchanges spare power resources with its <b>neighboring</b> <b>routers</b> to optimize network performance...|$|R
50|$|Link State Packet (LSP) is {{a packet}} of {{information}} generated by a network router in a link state routing protocol that lists the router's neighbors. Link state packet can also be further defined as special datagrams that determine the names of and the cost or distance to any <b>neighboring</b> <b>routers</b> and associated networks. They are used to efficiently determine what the new neighbor is, if a link failure occurs, {{and the cost of}} changing a link if the need arises. LSPs are queued for transmission, and must time out at about the same time. They must be acknowledged, and can be distributed throughout the network, but cannot use the routing database.|$|R
40|$|Abstract—Tracing attack packets {{to their}} sources, known as IP traceback, is an {{important}} step to counter distributed denialof-service (DDoS) attacks. In this paper, we propose a novel packet logging based (i. e., hash-based) traceback scheme that requires an order of magnitude smaller processing and storage cost than the hash-based scheme proposed by Snoeren et al. [1], thereby being able to scalable to much higher link speed (e. g., OC- 768). The baseline idea of our approach is to sample and log a small percentage (e. g., 3. 3 %) of packets. The challenge of this low sampling rate is that much more sophisticated techniques need to be used for traceback. Our solution is to construct the attack tree using the correlation between the attack packets sampled by <b>neighboring</b> <b>routers.</b> The scheme using naive independent random sampling does not perform well due to the low correlation between the packets sampled by <b>neighboring</b> <b>routers.</b> We invent a sampling scheme that improves this correlation and the overall efficiency significantly. Another major contribution of this work is that we introduce a novel information-theoretic framework for our traceback scheme to answer important questions on system parameter tuning and the fundamental trade-off between the resource used for traceback and the traceback accuracy. Simulation results based on realworld network topologies (e. g. Skitter) match very well with results from the information-theoretic analysis. The simulation results also demonstrate that our traceback scheme can achieve high accuracy, and scale very well to a large number of attacker...|$|R
40|$|Tracing attack packets {{to their}} sources, known as IP traceback, is an {{important}} step to counter distributed denial-of-service (DDoS) attacks. In this paper, we propose a novel packet logging based (i. e., hash-based) traceback scheme that requires an order of magnitude smaller processing and storage cost than the hash-based scheme proposed by Snoeren et al. [29], thereby being able to scalable to much higher link speed (e. g., OC- 768). The baseline idea of our approach is to sample and log a small percentage (e. g., 3. 3 %) of packets. The challenge of this low sampling rate is that much more sophisticated techniques need to be used for traceback. Our solution is to construct the attack tree using the correlation between the attack packets sampled by <b>neighboring</b> <b>routers.</b> The scheme using naive independent random sampling does not perform well due to the low correlation between the packets sampled by <b>neighboring</b> <b>routers.</b> We invent a sampling scheme that improves this correlation and the overall ef- ciency signi cantly. Another major contribution of this work is that we introduce a novel information-theoretic framework for our traceback scheme to answer important questions on system parameter tuning and the fundamental trade-o between the resource used for traceback and the traceback accuracy. Simulation results based on real-world network topologies (e. g. Skitter) match very well with results from the information-theoretic analysis. The simulation results also demonstrate that our traceback scheme can achieve high accuracy, and scale very well to a large number of attackers (e. g., 5000 +) ...|$|R
40|$|In recent years, various {{non-linear}} {{phenomena of}} the Internet have been discovered. For instance, {{it is reported}} that congestion of a <b>router</b> propagates to <b>neighboring</b> <b>routers</b> like a wave. Several researches on congestion propagation among routers have been performed. However, in these researches, cause of congestion propagation and condition that congestion propagation occurs have not been sufficiently investigated. In this paper, we reveal a cause of congestion propagation, and also investigate under what conditions congestion propagation is observed. Consequently, we show that speed of congestion propagation {{is affected by the}} bandwidth and the propagation delay of links, and that periodicity of congestion propagation becomes less obvious as randomness of network traffic increases. ...|$|R
40|$|Keywords: Congestion Propagation, TCP (TransmissionControl Protocol), Router, Nonlinear Phenomena, Ring Network AbstractIn recent years, various {{non-linear}} {{phenomena of}} the Internet have been discovered. For instance, {{it is reported}} that conges-tion of a <b>router</b> propagates to <b>neighboring</b> <b>routers</b> like a wave. Several researches on congestion propagation among routershave been performed. However, in these researches, cause of congestion propagation and condition that congestion propa-gation occurs have not been sufficiently investigated. In this paper, we reveal a cause of congestion propagation, and alsoinvestigate under what conditions congestion propagation is observed. Consequently, we show that speed of congestionpropagation {{is affected by the}} bandwidth and the propagation delay of links, and that periodicity of congestion propagationbecomes less obvious as randomness of network traffic increases...|$|R
2500|$|OSPF {{supports}} complex networks {{with multiple}} routers, including backup routers, to balance traffic load on multiple {{links to other}} subnets. <b>Neighboring</b> <b>routers</b> in the same broadcast domain or {{at each end of}} a point-to-point telecommunications communicate with each other via the OSPF protocol. Routers form adjacencies when they have detected each other. This detection is initiated when a router identifies itself in a Hello protocol packet. Upon acknowledgment, this establishes a two-way state and the most basic relationship. The routers in an Ethernet or Frame Relay network select a Designated Router (DR) and a Backup Designated Router (BDR) which act as a hub to reduce traffic between routers. OSPF uses both unicast and multicast transmission modes to send [...] "Hello" [...] packets and link state updates.|$|R
40|$|Abstract: To {{improve the}} {{performance}} of the network by implementing the best routing protocols. The purpose of routing algorithms is to make decisions for the router concerning the best path for data. Routing algorithms are to compute its decision’s depends on routing protocol information. Routing protocols collects certain information about a variety of networks and routers from the surrounding environments. Every router has memory to store the information about the networks. In the paper we focus on to provide an efficient path, the routing scheme we propose that the combination of “Traditional link state routing algorithm ” (LSA) and routing protocols. Its main objective is by using special packet we reduce the delay and bandwidth in between the <b>neighboring</b> <b>routers...</b>|$|R
40|$|Abstract—We {{propose a}} {{methodology}} to infer edge-to-edge achieved transfer throughput using link utilization counts. Our method treats {{variations in the}} link utilization time-series as possible transfer starting or ending events. Iteratively following these variations to the <b>neighboring</b> <b>routers,</b> we then identify the path the transfer traversed through the monitored network. Our evaluation shows that this method can identify events larger than 3 Mbit/sec and longer than 2 minutes in duration with more than 95 % recall. Additionally, we show that event detection is strongly correlated with the traffic in the busiest router in the path. We discuss how a number of applications such as throughput prediction and DDoS attack source detection can use the inferred information. Keywords-throughput inference; edge-to-edge; SNMP; network performance monitoring. I...|$|R
