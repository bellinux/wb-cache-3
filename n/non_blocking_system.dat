0|3619|Public
40|$|International audienceWe provide {{models of}} safe {{controllers}} both for potentially <b>blocking</b> and <b>non</b> <b>blocking</b> controlled <b>systems.</b> To obtain algorithms for these problems, {{we make the}} use of abstract interpretation techniques which provide over-approximations of the transitions set to be disabled. To our knowledge, with the hypotheses taken, the improved version of our algorithm provides a better solution than what was previously proposed in the literature. Our tool SMACS allowed us to make an empirical validation of our methods to show their feasibility and usability...|$|R
40|$|Abstract — We propose {{algorithms}} for {{the synthesis}} of statefeedback controllers through partial observation of infinite state systems modelled by Symbolic Transition Systems. We provide models of safe controllers both for potentially <b>blocking</b> and <b>non</b> <b>blocking</b> controlled <b>systems.</b> To obtain algorithms for these problems, we use abstract interpretation techniques which provide over-approximations of the transitions set to be disabled. To our knowledge, with the hypotheses taken, the improved version of our algorithm provides a better solution than what was previously proposed in the literature. Our tool SMACS allowed us to make an empirical validation of our methods to show their feasibility and usability...|$|R
40|$|International audienceWe {{consider}} {{a system of}} n processes with ids not a priori known, that are drawn from a large space, potentially unbounded. How can these n processes communicate to solve a task? We show that n a priori allocated Multi-Writer Multi-Reader (MWMR) registers are both needed and sufficient to solve any read-write wait free solvable task. This contrasts with the existing possible solution borrowed from adaptive algorithms that require Θ(n 2) MWMR registers. To obtain these results, the paper shows how the processes can <b>non</b> <b>blocking</b> emulate a <b>system</b> of n Single-Writer Multi-Reader (SWMR) registers on top of n MWMR registers. It is impossible to do such an emulation with n[*]−[*] 1 MWMR registers. Furthermore, we want to solve a sequence of tasks (potentially infinite) that are sequentially dependent (processes need the previous task's outputs {{in order to proceed}} to the next task). A <b>non</b> <b>blocking</b> emulation might starve a process forever. By doubling the space complexity, using 2 n[*]−[*] 1 rather than just n registers, the computation is wait free rather than <b>non</b> <b>blocking...</b>|$|R
5000|$|Clos network a <b>non</b> <b>blocking</b> {{crossover}} {{switch that}} needs fewer than N² switches ...|$|R
40|$|This paper {{presents}} {{a case study}} about the applicability and usage of <b>non</b> <b>blocking</b> collective operations. These operations provide the ability to overlap communication with computation and to avoid unnecessary synchronization. We introduce our NBC library, a portable low-overhead implementation of <b>non</b> <b>blocking</b> collectives on top of MPI- 1. We demonstrate the easy usage of the NBC library with the optimization of a conjugate gradient solver with only {{minor changes to the}} traditional parallel implementation of the program. The optimized solver runs up to 34 % faster and is able to overlap most of the communication. We show that there is, due to the overlap, no performance difference between Gigabit Ethernet and InfiniBand TM for our calculation...|$|R
5000|$|Block system: Automatic <b>block</b> <b>system</b> (except Tsuchizaki-Akitakō section (gearing <b>block</b> <b>system))</b> ...|$|R
5000|$|Computer-based Semi-Automatic <b>Block</b> <b>System</b> MPB is {{designed}} to substitute outdated relay semi-automatic <b>block</b> <b>systems</b> on low-intensity traffic sections. MPB is used for equipment of new sections {{as well as for}} rehabilitation and upgrading of existing semiautomatic <b>block</b> <b>systems.</b>|$|R
40|$|A {{crossbar}} is {{the central}} element {{in the design of}} a <b>non</b> <b>blocking</b> switching fabric. The most common implementation of a crossbar proposed in the litterature uses a <b>non</b> <b>blocking</b> multistage network based on elementary k Θ k switches where usual values of k are small (2 to 4). Generally, such elementary switches allow only unidirectional routing. In this paper we present the design semi-custom arbitrary bidirectional n Θ n synchronous crossbar macro-block that can be used both for complete or multistage emulation crossbar based router architectures. Several points related to the feasibility are pointed out: logical design, layout generation and performances. 1 Introduction It is known that networking of computing systems has been and still is an important research and industrial activity. Examples of networking range from sample standard bus coupling for few processors based systems, to broad band ISDN coupling of geographically distant computer systems [8]. Novel architectu [...] ...|$|R
50|$|To {{understand}} basic railway operation, {{please see}} {{articles on the}} signalling <b>block</b> <b>system</b> or Understanding the railway <b>block</b> <b>system.</b>|$|R
50|$|This snippet of Go code {{performs}} {{similarly to}} the XC code. First the channel c is created, then a goroutine is spawned which sends 42 through the channel. When {{the number is}} put in the channel x is set to 42. Go allows channels to buffer contents, as well as <b>non</b> <b>blocking</b> receiving {{through the use of}} a select block.|$|R
50|$|The <b>block</b> <b>system</b> {{is based}} on {{breaking}} a line into blocks. The blocks on a line between two stations {{are part of the}} <b>block</b> <b>system.</b>|$|R
40|$|Purpose. Development of formalized {{description}} of automatic <b>block</b> <b>system</b> of numerical code {{based on the}} analysis of characteristic failures of automatic <b>block</b> <b>system</b> and procedure of its maintenance. Methodology. For this research a theoretical and analytical methods have been used. Findings. Typical failures of the automatic <b>block</b> <b>systems</b> were analyzed, as well as basic reasons of failure occur were found out. It was determined that majority of failures occurs due to defects of the maintenance system. Advantages and disadvantages of the current service technology of automatic <b>block</b> <b>system</b> were analyzed. Works that can be automatized by means of technical diagnostics were found out. Formal {{description of}} the numerical code of automatic <b>block</b> <b>system</b> as a graph in the state space of the system was carried out. Originality. The state graph of the numerical code of automatic <b>block</b> <b>system</b> {{that takes into account}} gradual transition from the serviceable condition to the loss of efficiency was offered. That allows selecting diagnostic information according to attributes and increasing the effectiveness of recovery operations {{in the case of a}} malfunction. Practical value. The obtained results of analysis and proposed the state graph can be used as the basis for the development of new means of diagnosing devices for automatic <b>block</b> <b>system,</b> which in turn will improve the efficiency and service of automatic <b>block</b> <b>system</b> devices in general...|$|R
5000|$|The Lot and <b>Block</b> <b>system</b> {{is perhaps}} the {{simplest}} of the three main survey systems to understand. For a legal description in the Lot and <b>Block</b> <b>system</b> a description must identify: ...|$|R
40|$|Multistage {{interconnection}} networks (MINs) {{are used}} to connect N inputs to N outputs. They are mainly used to connect processor to processor and for processor to memory in distributed and shared memory environment. The MINs are broadly divided into three categories <b>Blocking</b> <b>Non</b> <b>Blocking</b> and Rearrangeable networks. A new improved Arbitrary size Benes network has been proposed in this to improve the permutation capabilities and {{to reduce the cost}} o...|$|R
50|$|The set of {{orbits of}} the G-set X {{is an example}} of a <b>block</b> <b>system.</b> The {{corresponding}} equivalence relation is the smallest G-invariant equivalence on X such that the induced action on the <b>block</b> <b>system</b> is trivial.|$|R
5000|$|In 1967, {{the method}} of working between Crianlarich and [...] was changed to the Scottish Region Tokenless <b>Block</b> <b>system.</b> In August 1985, {{the method of}} working between Crianlarich and Rannoch reverted to the {{electric}} token <b>block</b> <b>system.</b>|$|R
40|$|In this paper, tall discrete-time linear {{systems with}} multirate outputs are studied. In particular, {{we focus on}} their zeros. In systems and control {{literature}} zeros of multirate systems are defined as those of their corresponding time-invariant <b>blocked</b> <b>systems.</b> Hence, the zeros of tall <b>blocked</b> <b>systems</b> resulting from <b>blocking</b> of linear <b>systems</b> with multirate outputs are mainly explored in this work. We specifically investigate zeros of tall <b>blocked</b> <b>systems</b> formed by <b>blocking</b> tall multirate linear systems with generic parameter matrices. It is demonstrated that tall <b>blocked</b> <b>systems</b> generically have no finite nonzero zeros; however, they may have zeros at the origin or at infinity depending on the choice of blocking delay and the input, state and output dimensions. Comment: This is draft of the paper submitted for possible publication in IEEE Transactions on Automatic Contro...|$|R
50|$|The {{partition}} into singleton sets is a <b>block</b> <b>system</b> and if X is non-empty {{then the}} partition into one set X {{itself is a}} <b>block</b> <b>system</b> as well (if X is a singleton set then these two partitions are identical). A transitive (and thus non-empty) G-set X {{is said to be}} primitive if it has no other <b>block</b> <b>systems.</b> For a non-empty G-set X the transitivity requirement in the previous definition is only necessary in the case when |X|=2 and the group action is trivial.|$|R
50|$|The {{system of}} working is Absolute <b>Block</b> <b>System.</b>|$|R
40|$|Abstract. This {{paper is}} devoted to robust control design for block multilinked {{nonlinear}} dynamical systems. Transformation of the <b>block</b> <b>system</b> to the single <b>block</b> <b>system</b> is proposed. For the considered <b>block</b> <b>systems</b> function of Lyapunov is designed. It is proved {{if the number of}} controls is equal to or more than the number of state variables of the block, then in the given area the closed-loop system conditions of stability followed controllability conditions. Control design accounts limitations of controls and state variables. Modeling results for nonlinear objects control systems are presented...|$|R
50|$|Signalling <b>block</b> <b>systems</b> {{enable the}} safe and {{efficient}} operation of railways to avoid collisions between trains. <b>Block</b> <b>systems</b> {{are used to}} control trains between stations and yards and not normally within them. Any <b>block</b> <b>system</b> is defined by its associated physical equipment and by {{the application of a}} relevant set of rules. Some systems involve the use of signals while others do not. Some systems are specifically designed for single track railways for which a danger exists of both head-on and rear-end collision, as opposed to double track, whose main danger is rear-end collision.|$|R
40|$|This paper {{deals with}} a {{possibility}} of a modeling of a <b>block</b> <b>system.</b> A created modeling tool contains a graphic editor of a track section configuration and a graphic editor of control algorithms, which serves on a writing of behavior algorithms of exterior devices of the <b>block</b> <b>system.</b> In order to the modeling of the <b>block</b> <b>system</b> was possible general models of basic exterior devices and a programming language for the writing of control algorithms to a source code form had to be created. It describes a work with {{different parts of the}} modeling tool and their possibilities on a selected example of an automatic block. The paper also describes an ability of to simulate a modeled <b>block</b> <b>system</b> activity and an ability to simulate the movement of the train in track sectio...|$|R
40|$|Abstract — Nowadays, {{clusters}} and grids {{are made of}} more and more computing nodes. The programming of multi-processes applications is the most often achieved through message passing. The increase {{of the number of}} processes implies that theses applications need to use a fault tolerant message passing library. In this paper, we present two implementations of fault tolerant protocols based on MPICH, a blocking one and a <b>non</b> <b>blocking</b> one. We then compare their efficiency and the overhead induced during a failure-free execution. I...|$|R
40|$|We study testing preorders for an {{asynchronous}} {{version of}} CCS called TACCS, where message emission is <b>non</b> <b>blocking.</b> We first give a labelled transition system semantics for this language, which includes both {{external and internal}} choice operators. By applying the standard denitions of may and must testing to this semantics we obtain two behavioural preorders based on asynchronous observations, ! and. We present alternative behavioural characterisations of these preorders, which are subsequently used to obtain equational theories for the finite fragment of the language...|$|R
5000|$|... #Subtitle level 2: National URL {{filtering}} and <b>blocking</b> <b>system</b> ...|$|R
5000|$|... {{adopt the}} <b>block</b> <b>system</b> of {{signalling}} on any passenger railway; ...|$|R
50|$|The {{methods of}} {{signalling}} operation at Crow Nest Junction is the track circuit <b>block</b> <b>system</b> (TCB) to Warrington {{power signal box}} in the Hindley direction & the track circuit <b>block</b> <b>system</b> (TCB) to Manchester Piccadilly signalling control centre on both lines (via Lostock Junction & Bolton and via Atherton to Windsor Bridge Junction).|$|R
40|$|AbstractNow days, averting {{collision}} of trains is a chief issue in railway sector. The prime cause for {{this problem is}} improper signaling for trains due to faulty working of sensors or result of decision making systems responsible for signaling. There are many systems incorporated for railway signaling such as Absolute <b>Block</b> <b>System,</b> Automatic <b>Blocking</b> <b>system,</b> Following Train system, and one train only system and pilot guard <b>system.</b> Generally Automatic <b>Blocking</b> <b>system</b> is preferred in railway sectors. Nonetheless, the system is still completely efficient for avoiding {{collision of}} trains. The proposed system comes with the solution for this problem to avoid chance of collision...|$|R
5000|$|... #Caption: <b>System</b> Building <b>Blocks</b> (<b>System</b> Module) 1103 hex-inverter card (both sides) ...|$|R
40|$|Network on Chip is {{efficient}} on-chip communication architecture for {{system on}} chip architectures. It enables the integration {{of a large number}} of computational and storage blocks on a single chip. The router is the basic element of NoC. The router architecture can be used for building a NoC with standard topology with low latency and high speed. In this paper, we implement and analyze a 3 x 3 mesh network configuration with routers which can support simultaneous routing requests, with <b>blocking</b> and <b>non</b> <b>blocking</b> inputs...|$|R
40|$|Abstract This paper {{describes}} {{the development of}} a 4 -point diagonally implicit block method for solving first order Ordinary Differential Equations (ODEs) using variable step size. This method will estimate the solutions of Initial Value Problems (IVPs) at four points simultaneously. The method developed is suitable for the numerical integration of non stiff and mildly stiff differential systems. The performances of the 4 -point block method are compared in terms of maximum error and total number of steps to the <b>non</b> <b>block</b> method 1 PVSO...|$|R
40|$|Abstract—Two point fully {{implicit}} block {{method of}} variable step size is developed for solving directly the second order system of Ordinary Differential Equations (ODEs). This method will estimate the solutions of Initial Value Problems (IVPs) at two points simultaneously. The method developed {{is suitable for}} the numerical integration of non stiff and mildly stiff differential systems. Numerical results are given to compare {{the efficiency of the}} developed method to the existence <b>non</b> <b>block</b> method. Index Terms—Block method, higher order odes, numerical method, two point block. I...|$|R
40|$|This paper {{describes}} {{the development of}} a 4 -point diagonally implicit block method for solving first order Ordinary Differential Equations (ODEs) using variable step size. This method will estimate the solutions of Initial Value Problems (IVPs) at four points simultaneously. The method developed is suitable for the numerical integration of non stiff and mildly stiff differential systems. The performances of the 4 -point block method are compared in terms of maximum error and total number of steps to the <b>non</b> <b>block</b> method 1 PVSO...|$|R
40|$|We study testing preorders for an {{asynchronous}} {{version of}} CCS called TACCS, where message emission is <b>non</b> <b>blocking.</b> We rst give a labelled transition system semantics for this language, which includes both {{external and internal}} choice operators. By applying the standard denitions of may and must testing to this semantics we obtain two behavioural preorders based on asynchronous observations, ! may and ! must. We present alternative behavioural characterisations of these preorders, which are subsequently used to obtain equational theories for the finite fragment of the language...|$|R
40|$|MPI {{uses the}} concept of communicators to connect groups of processes. It {{provides}} nonblocking collective operations on communicators to overlap communication and computation. Flexible algorithms demand flexible communicators. E. g., a process can work on different subproblems within different process groups simultaneously, new process groups can be created, or {{the members of a}} process group can change. Depending on the number of communicators, the time for communicator creation can drastically increase the running time of the algorithm. Furthermore, a new communicator synchronizes all processes as communicator creation routines are blocking collective operations. We present RBC, a communication library based on MPI, that creates range-based communicators in constant time without communication. These RBC communicators support (<b>non)</b> <b>blocking</b> point-to-point communication as well as (<b>non)</b> <b>blocking</b> collective operations. Our experiments show that the library reduces the time to create a new communicator by a factor of more than 400 whereas the running time of collective operations remains about the same. We propose Schizophrenic Quicksort, a distributed sorting algorithm that avoids any load imbalances. We improved the performance of this algorithm by a factor of 15 for moderate inputs by using RBC communicators. Finally, we discuss different approaches to bring nonblocking (local) communicator creation of lightweight (range-based) communicators into MPI...|$|R
50|$|BYU's {{building}} <b>block</b> <b>system</b> abbreviates the Creamery on Ninth East as CONE.|$|R
