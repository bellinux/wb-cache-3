103|2|Public
25|$|Compared to {{dedicated}} semiconductor foundries (such as TSMC and UMC) without in-house design services, Fujitsu/Samsung charge two- to three-times {{more per}} manufactured wafer. For low to mid volume applications, a design service foundry offers lower overall pricing (through subsidisation of the licence fee). For high volume mass-produced parts, {{the long term}} cost reduction achievable through lower wafer pricing reduces the impact of ARM's NRE (<b>Non-Recurring</b> <b>Engineering)</b> costs, making the dedicated foundry a better choice.|$|E
25|$|In 2012, AMD's then CEO Rory Read began {{a program}} to offer semi-custom designs. Rather than AMD simply {{designing}} and offering a single product, potential customers could work with AMD to design a custom chip based on AMD's intellectual property. Customers pay a <b>non-recurring</b> <b>engineering</b> fee for design and development, and a purchase price for the resulting semi-custom products. In particular, AMD noted their unique position of offering both x86 and graphics intellectual property. These semi-custom designs would have design wins as the APUs in the Playstation 4 and Xbox One and the subsequent PlayStation 4 Pro, Xbox One S, and Xbox One X. Financially, these semi-custom products would represent {{a majority of the}} company's revenue in 2016. In November 2017, AMD and Intel announced that Intel would market a product, combining in a single package an Intel Core CPU, a semi-custom AMD Radeon GPU, and HBM2 memory.|$|E
5000|$|... goTenna has {{received}} various <b>non-recurring</b> <b>engineering</b> grants from entities like Google and the U.S. Department of Defense, which provide non-dilutive capital {{for the research}} and development of new products.|$|E
40|$|This paper {{describes}} {{the development of}} a cost estimating methodology for predicting the cost of engineering design effort during the conceptual stages of product development. The research was carried out within a large European aerospace manufacturer whose traditional costing practices had become outdated. The main objective was to generate a suite of technical Cost Estimating Relationships (CERs) that integrate both quantitative and qualitative, <b>non-recurring</b> airframe <b>engineering</b> input, for the design process. Both the quantitative and qualitative design activities were separated during the CER development. At the end of the development process they were integrated to produce a final CER. The results demonstrate that these newly generated CERs can predict future design effort required, based on the typically limited product definition at the conceptual design stage...|$|R
50|$|Using the {{information}} from these studies, the United States Navy concluded that a new submarine design would be the least expensive option that {{would be capable of}} meeting all of the technical requirements. Maintenance schedules and maintenance costs, including what would have been a required mid-life refueling, detracted from both the modified Virginia-class, and updated Ohio-class design options. The new boat design is planned to incorporate technology and components from both the Ohio and Virginia submarine classes where possible as a cost saving measure. Also, the nuclear core of the new design is planned to be a life-of-ship core, meaning {{that there will be no}} mid-life refueling required as is required with the Ohio class submarines. It is estimated that in fiscal year 2010 dollars, the first boat of the new class will cost $6.2 billion in construction costs with an additional $4.2 billion in <b>non-recurring</b> design and <b>engineering</b> costs. The Navy has a goal of reducing the average cost of ships 2 through 12 in the class to $4.9 billion each (year 2010 dollars). The total lifecycle cost of the entire class is estimated at $347 billion. The high cost of the submarines is expected to cut deeply into Navy shipbuilding.|$|R
50|$|However, {{like most}} VLSI designs, {{the total cost}} is higher for one large chip than for the same {{functionality}} distributed over several smaller chips, because of lower yields and higher <b>non-recurring</b> <b>engineering</b> costs.|$|E
50|$|The {{disadvantages}} of full-custom design can include increased manufacturing and design time, increased <b>non-recurring</b> <b>engineering</b> costs, more complexity in the computer-aided design (CAD) system, {{and a much}} higher skill requirement {{on the part of}} the design team.|$|E
5000|$|The cost of {{designing}} {{and developing a}} complex integrated circuit is quite high, normally in the multiple {{tens of millions of}} dollars. [...] This only makes economic sense if production volume is high, so the <b>non-recurring</b> <b>engineering</b> (NRE) costs are spread across typically millions of production units.|$|E
5000|$|Due to {{the rapid}} {{advances}} in technology, many new devices are developed using new materials and processes, and design calendar time is limited due to <b>non-recurring</b> <b>engineering</b> constraints, plus time to market concerns. Consequently, {{it is not possible}} to base new designs on the reliability of existing devices.|$|E
50|$|Advantages of FPGAs {{include the}} ability to re-program {{in the field to}} fix bugs, and may include a shorter time to market and lower <b>non-recurring</b> <b>engineering</b> costs. Vendors can also take a middle road by {{developing}} their hardware on ordinary FPGAs, but manufacture their final version as an ASIC so that it can no longer be modified after the design has been committed.|$|E
50|$|Field-programmable gate arrays (FPGA) are {{the modern-day}} {{technology}} {{for building a}} breadboard or prototype from standard parts; programmable logic blocks and programmable interconnects allow the same FPGA {{to be used in}} many different applications. For smaller designs or lower production volumes, FPGAs may be more cost effective than an ASIC design even in production. The <b>non-recurring</b> <b>engineering</b> (NRE) cost of an ASIC can run into the millions of dollars.|$|E
50|$|Compared to {{dedicated}} semiconductor foundries (such as TSMC and UMC) without in-house design services, Fujitsu/Samsung charge two- to three-times {{more per}} manufactured wafer. For low to mid volume applications, a design service foundry offers lower overall pricing (through subsidisation of the licence fee). For high volume mass-produced parts, {{the long term}} cost reduction achievable through lower wafer pricing reduces the impact of ARM's NRE (<b>Non-Recurring</b> <b>Engineering)</b> costs, making the dedicated foundry a better choice.|$|E
50|$|Gate-array {{design is}} a {{manufacturing}} method {{in which the}} diffused layers, i.e. transistors and other active devices, are predefined and wafers containing such devices are held in stock prior to metallizationâ€”in other words, unconnected. The physical design process then defines the interconnections of the final device. For most ASIC manufacturers, this consists of from two {{to as many as}} nine metal layers, each metal layer running perpendicular to the one below it. <b>Non-recurring</b> <b>engineering</b> costs are much lower, as photolithographic masks are required only for the metal layers, and production cycles are much shorter, as metallization is a comparatively quick process.|$|E
5000|$|Many {{companies}} offer standardized turbine generator packages in the approximate size range of 200 kW to 10 MW. These [...] "water to wire" [...] packages simplify {{the planning and}} development of the site since one vendor looks after most of the equipment supply. Because <b>non-recurring</b> <b>engineering</b> costs are minimized and development cost is spread over multiple units, the cost of such package systems is reduced. While synchronous generators capable of isolated plant operation are often used, small hydro plants connected to an electrical grid system can use economical induction generators to further reduce installation cost and simplify control and operation.|$|E
50|$|Contemporary field-programmable gate arrays (FPGAs) {{have large}} {{resources}} of logic gates and RAM blocks to implement complex digital computations. As FPGA designs employ very fast I/Os and bidirectional data buses, {{it becomes a}} challenge to verify correct timing of valid data within setup time and hold time. Floor planning enables resource allocation within FPGAs to meet these time constraints. FPGAs {{can be used to}} implement any logical function that an ASIC could perform. The ability to update the functionality after shipping, partial re-configuration of a portion of the design and the low <b>non-recurring</b> <b>engineering</b> costs relative to an ASIC design (notwithstanding the generally higher unit cost), offer advantages for many applications.|$|E
5000|$|Pure, logic-only gate-array {{design is}} rarely {{implemented}} by circuit designers today, having been replaced {{almost entirely by}} field-programmable devices, such as field-programmable gate arrays (FPGAs), which can be programmed by the user and thus offer minimal tooling charges <b>non-recurring</b> <b>engineering,</b> only marginally increased piece part cost, and comparable performance. Today, gate arrays are evolving into structured ASICs that consist of a large IP core like a CPU, DSP unit, peripherals, standard interfaces, integrated memories SRAM, and a block of reconfigurable, uncommited logic. This shift is largely because ASIC devices are capable of integrating such large blocks of system functionality and [...] "system-on-a-chip" [...] requires far more than just logic blocks.|$|E
50|$|<b>Non-recurring</b> <b>engineering</b> (NRE) {{refers to}} the {{one-time}} cost to research, design, develop and test a new product. When budgeting for a new product, NRE must be considered to analyze if a new product will be profitable. Even though a company will pay for NRE on a project only once, NRE costs can be prohibitively high and the product will need to sell well enough to produce a return on the initial investment. NRE is unlike production costs, which must be paid constantly to maintain production of a product. It {{is a form of}} fixed cost in economics terms. Once a system is designed any number of units can be manufactured without increasing NRE cost.|$|E
50|$|In 2012, AMD's then CEO Rory Read began {{a program}} to offer semi-custom designs. Rather than AMD simply {{designing}} and offering a single product, potential customers could work with AMD to design a custom chip based on AMD's intellectual property. Customers pay a <b>non-recurring</b> <b>engineering</b> fees for design and development, and a purchase price for the resulting semi-custom products. In particular, AMD noted their unique position of offering both x86 and graphics intellectual property. These semi-custom designs would have design wins as the APUs in the Playstation 4 and Xbox One and the subsequent PlayStation 4 Pro, Xbox One S, and Xbox One X. Financially, these semi-custom products would represent {{a majority of the}} company's revenue in 2016.|$|E
50|$|In the mid-1980s, a {{designer}} would choose an ASIC manufacturer and implement their design using the design tools {{available from the}} manufacturer. While third-party design tools were available, there was not an effective link from the third-party design tools to the layout and actual semiconductor process performance characteristics of the various ASIC manufacturers. Most designers ended up using factory-specific tools to complete the implementation of their designs. A solution to this problem, which also yielded a much higher density device, was the implementation of standard cells. Every ASIC manufacturer could create functional blocks with known electrical characteristics, such as propagation delay, capacitance and inductance, that could also be represented in third-party tools. Standard-cell design is the utilization of these functional blocks to achieve very high gate density and good electrical performance. Standard-cell design fits between Gate Array and Full Custom design {{in terms of both}} its <b>non-recurring</b> <b>engineering</b> and recurring component cost.|$|E
5000|$|PLCs {{are well}} adapted {{to a range}} of {{automation}} tasks. These are typically industrial processes in manufacturing where the cost of developing and maintaining the automation system is high relative to the total cost of the automation, and where changes to the system would be expected during its operational life. PLCs contain input and output devices compatible with industrial pilot devices and controls; little electrical design is required, and the design problem centers on expressing the desired sequence of operations. PLC applications are typically highly customized systems, so the cost of a packaged PLC is low compared to the cost of a specific custom-built controller design. On the other hand, in the case of mass-produced goods, customized control systems are economical. This is due to the lower cost of the components, which can be optimally chosen instead of a [...] "generic" [...] solution, and where the <b>non-recurring</b> <b>engineering</b> charges are spread over thousands or millions of units.|$|E
40|$|As {{embedded}} system designs become increasingly more complex, {{the use of}} real-time operating systems (RTOS) becomes essential to meet time-to-market pressures and to contain <b>non-recurring</b> <b>engineering</b> costs. However, an RTOS consumes precious CPU cycles {{in return for the}} services it provides. Further, the RTOS is typically treated as a pure software entity and is subject only to mino...|$|E
40|$|A {{standardized}} spacecraft {{has long}} been a topic of discussion in the space community. Several vendors and customers have pursued the development of a standardized spacecraft to: a) achieve cost savings by minimizing <b>non-recurring</b> <b>engineering</b> for production vehicles, b) achieve operational savings by standardizing the tracking, telemetry and control (TT 2 Ì† 6 C) functions, and c) improve schedule performance by being able to launch predictably and on need...|$|E
40|$|Many {{aerospace}} sensor platforms have a fixed opto-mechanical layout due to harsh environmental conditions. This {{design decision}} results in tight opto-mechanical tolerances. Computational optics is {{a technology that}} is currently used in the commercial market, but {{has yet to be}} implemented in the defense industry. By using this methodology, the system will aim to reduce production cost by investing in <b>non-recurring</b> <b>engineering</b> (NRE) investments. This project aims to implement a proof of concept of computational optics to improve image quality while increasing depth of focus using wavefront coding...|$|E
40|$|The {{development}} and deployment of network-centric operations and warfare (NCOW) to integrate and connect the militaryâ€™s many separate networks relies on high-speed packet transport and optical networking. Alteraâ€™s 28 -nm Stratix Â® V FPGAs combine the flexibility needed {{to adapt to}} changing network standards and support legacy network interfaces and protocols, while offering the ASIC-like performance traditionally required for these applications. This unprecedented combination of technological advances enables advanced network developers to implement and deploy military capabilities in a secure and flexible manner while dramatically reducing <b>non-recurring</b> <b>engineering</b> (NRE) and critical time to mission...|$|E
40|$|Abstract: Customization {{is central}} to meeting the unique size, weight, power, and {{execution}} constraints of emerging and future embedded systems. However, future High Performance Embedded Computing (HPEC) systems must face the twin challenges of escalating <b>non-recurring</b> <b>engineering</b> costs and time-to-market windows. This paper first presents {{an overview of the}} current landscape of customization techniques for embedded systems followed by a strategy for large gains in design productivity from cross-fertilization between the domains of optimizing compiler technology and traditional design automation. Recent results with a prototype system being constructed at CREST are presented in support of this promising direction of researc...|$|E
40|$|As {{real-time}} {{and integrated}} systems become increasingly sophisticated, {{issues related to}} development life cycles, <b>non-recurring</b> <b>engineering</b> costs, and poor synergy between development teams will arise. The Handbook of Research on Embedded Systems Design provides insights from the computer science community on integrated systems research projects {{taking place in the}} European region. This premier references work {{takes a look at the}} diverse range of design principles covered by these projects, from specification at high abstraction levels using standards such as UML and related profiles to intermediate design phases. This work will be invaluable to designers of embedded software, academicians, students, practitioners, professionals, and researchers working in the computer science industry. ...|$|E
40|$|Abstract â€” A Structured Application-specific Integrated Circuit (SASIC) is a {{programmable}} fabric {{in which}} a small set of masks are customized for a particular application, serving to reduce the associated <b>non-recurring</b> <b>engineering</b> cost (NRE). In this paper we describe {{the implementation of a}} SASIC logic cell which is programmable via a single metal layer. A SASIC fabric prototype is fabricated and all implemented functions are verified on silicon. Experimental measurement verifies correct operation of our SASIC with a clock frequency of over 250 MHz. Keywords-application specific integrated circuits; digital integrated circuits; field programmable gate arrays I. INTORDUCTION Application-specific integrated circuits (ASICs) and field programmable gate arrays (FPGAs) are the two main technologies for implementing digital designs. ASICs hav...|$|E
40|$|High-level {{synthesis}} (HLS) tools dramatically {{reduce the}} <b>non-recurring</b> <b>engineering</b> cost of creating specialized hardware accel-erators. Existing HLS tools {{are successful in}} synthesizing efficient accelerators for program kernels with regular memory accesses and simple control flows. For other programs, however, these tools yield poor performance because they invoke computation units for instructions sequentially, without exploiting parallelism. To ad-dress this problem, this paper proposes Coarse-Grained Pipelined Accelerators (CGPA), an HLS framework that utilizes coarse-grained pipeline parallelism techniques to synthesize efficient spe-cialized accelerator modules from irregular C/C++ programs with-out requiring any annotations. Compared to the sequential method, CGPA shows speedups of 3. 0 xâ€“ 3. 8 x for 5 kernels from programs in different domains. 1...|$|E
40|$|Field-Programmer Gate Arrays (FPGAs) is {{a device}} which is {{included}} into Programmable logic devices. FPGAs {{is different from}} General-Purpose Microprocessor in term of its logical flexibility. Microprocessor has the integrated hardware. FPGAs (Field-Programmable Gate Arrays) Spartan- 3 E is designed particularly to fulfill the need of high rate application design; the low cost with a gate system is about 100. 000 â€“ 1. 6 million. Furthermore, FPGAs Spartan- 3 E can be escaped from ASICs problem, such as NRE (<b>Non-Recurring</b> <b>Engineering)</b> value and long time delay. FPGAs {{can be used as}} lift controller, its delay time control is determined based on the position of every lift, but the exact time setting is needed to make the lift run well...|$|E
40|$|The {{continuously}} widening {{gap between}} the <b>Non-Recurring</b> <b>Engineering</b> (NRE) and Recurring Engineering (RE) costs of producing Integrated Circuit (IC) products {{in the past few}} decades gives high incentives to unauthorized cloning and reverse-engineering of ICs. Existing IC Digital Rights Management (DRM) schemes often demands high overhead in area, power, and performance, or require non-volatile storage. Our goal is to develop a novel Intellectual Property (IP) protection technique that offers universal protection to both Application-Specific Integrated Circuits (ASIC) and Field-Programmable Gate-Arrays (FPGAs) from unauthorized manufacturing and reverse engineering. In this paper we show a proof-of-concept implementation of the basic elements of the technique, as well as a case study of applying the anti-cloning technique to a nontrivial FPGA design...|$|E
40|$|Abstract â€” The {{exponential}} {{increase of}} CMOS circuit complexity along {{the last decades}} has lead to two growing problems. The increasing <b>Non-recurring</b> <b>Engineering</b> (NRE) costs of ASICs or System-on-Chips are becoming only affordable to the highest volume applications. Additionally the design methodologies have not kept pace with the rising complexity leading to a rising design productivity gap. Research into reconfigurable architectures and NoC (Network-on-Chip) communication systems have shown paths for mitigating these problems for lower volume applications. In this paper, we present the European Integrated Project MORPHEUS (IST 027342). It advocates an innovative approach of heterogeneous, dynamically reconfigurable SoCs consisting of accelerators of various reconfiguration granularity connected by a NoC and supported by an integrated toolset for spatial and sequential design. The power {{of this approach is}} demonstrated with four applications from the industrial environment...|$|E
40|$|Abstractâ€”FPGA {{structures}} {{are widely used}} due to early time-to-market and reduced <b>non-recurring</b> <b>engineering</b> costs in comparison to ASIC designs. Interconnections {{play a crucial role}} in modern FPGAs, because they dominate delay, power and area. Multiple-valued logic allows the reduction of the number of signals in the circuit, hence can serve as a mean to effectively curtail the impact of interconnections. In this work we propose a new FPGA structure based on a low-power quaternary voltage-mode device. The most important characteristics of the proposed architecture are the reduced fanout, low number of wires and switches, and the small wire length. We use a set of FIR lters as a demonstrator of the bene ts of the quaternary representation in FPGAs. Results show a signi cant reduction on power consumption with small timing penalties. I...|$|E
40|$|Abstract. Designing custom {{solutions}} {{has been}} central to meeting a range of stringent and specialized needs of embedded computing, along such dimensions as physical size, power consumption, and performance that includes real-time behavior. For this trend to continue, we must find ways to overcome the twin hurdles of rising <b>non-recurring</b> <b>engineering</b> (NRE) costs and decreasing time-to-market windows by providing major improvements in designer productivity. This paper presents compiler directed design space exploration {{as a framework for}} articulating, formulating, and implementing global optimizations for embedded systems customization, where the design space is spanned by parametric representations of both candidate compiler optimizations and architecture parameters, and the navigation of the design space is driven by quantifiable, machine independent metrics. This paper describes the elements of such a framework and an example of its application. ...|$|E
40|$|Rapidly {{increasing}} {{design and}} manufacturing <b>non-recurring</b> <b>engineering</b> (NRE) costs are prompting {{a shift in}} electronic design from hardwired application specific integrated circuits (ASICs) {{to the use of}} software on programmable platforms. However, in order to minimize the power and performance overhead of such processors, we are seeing the introduction of domain or application specific processors such as network and communication processors. The design of such specialized processors requires software development tools such as simulators and compilers. In order to quickly develop these tools for multiple design points under consideration, it is highly desirable to have them synthesized from formal processor descriptions written in Architecture Description Languages (ADLs). In this paper, we present the Mescal Architecture Description Language (MADL). MADL features a two-layer structure, a core layer and an annotation layer. The core layer is based on...|$|E
40|$|Abstractâ€”in this {{technical}} paper explains how {{a reliable and}} an authentic wireless communication could be easily developed between a mobile phone and microcontroller using GSM (Global System for Mobile Communication) MODEM (Modulator-Demodulator). This {{technical paper}} explains GSM based e-notice board which can be widely used for multitude of applications including educational sector, traffic control, banks, public advertisements, stoke exchanges etc. Moreover we can also learn as well as modify some of the common applications of GSM MODEM as per the requirements {{and needs of the}} user. Here we will learn the hardware behind the picture. In addition to this I will tell you how to upgrade the software resulting low NRE (<b>Non-Recurring</b> <b>Engineering)</b> cost as well as low time-to-market. This technical paper plays a vital role in the state-of-the-art scenario where market window is relentlessly shrinking and really need pocket-friendly and authentic products...|$|E
40|$|We {{describe}} an approach for application-specific processor design {{based on an}} extendible microprocessor core. Core-based design allows to derive application-specific instruction processors from a common base architecture with low <b>non-recurring</b> <b>engineering</b> cost. The results of this application-specific customization of a common base architecture are families of related and largely compatible processor families. These families can share support tools and even binary compatible code which has been written for the common base architecture. Critical code portions are customized using the application-specific instruction set extensions. We describe a hardware/software co-design methodology {{which can be used}} with this design approach. The presented approach uses the processor core to allow early evaluation of ASIP design options using rapid prototyping techniques. We demonstrate this approach with two case studies, based on the implementation and evaluation of application-specific processor extensions for Prolog program execution, and memory prefetching for vector and matrix operations. ...|$|E
