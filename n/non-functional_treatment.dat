1|1|Public
40|$|Introduction: Endoscopic surgery of {{pituitary}} adenoma is {{a rapidly}} developing surgical procedure {{in the field}} of neurosurgery, with known limitations and advantages. The aim {{of this study was to}} evaluate the results of this technique for treatment of a group of patients with pituitary adenoma. Materials and Methods: In the present study, 26 patients with the diagnosis of pituitary adenoma, who were considered for endoscopic operation between 2002 - 2005 in Sina and Amir Alam hospitals, were included. The following data were registered: age, sex, symptoms of disease, findings of neurological exam, adenoma type (functional versus <b>non-functional),</b> <b>treatment</b> outcome and complications of the procedure and duration of hospital stay. Results: Twenty six patients (14 male and 11 female) included in the study. Most of them were in the 3 - 6 decades of life. They included 11 non-functional adenoma, 9 GH-producing adenomas, 3 ACTH secreting adenomas and 3 cases with prolactinomas. Seven patients had complications of the operation (reversible in 6 patients and fatal in 1) and 6 of them had recurrence of the tumor during the 2 -year follow up. Conclusion: Endoscopic surgery is an invaluable method for treatment of pituitary adenoma, and factors such as decreased complications and duration of hospital stay further adds to its popularity. ...|$|E
40|$|Disregarding {{non-functional}} properties is {{an important}} project risk. They {{have to be taken}} into consideration throughout the systemâ€™s life cycle. Particularly, they must be considered as early as possible in the design phase. Especially in the area of component-based software development {{it is also important to}} be able to separate functional and <b>non-functional</b> requirements. Pervasive <b>treatment</b> of nonfunctional properties allows reusing components in previously uncovered environments. In this paper we present an approach that aims at treating non-functional aspects of a system all the way from design time models to runtime enforcement and Quality of Service (QoS) guarantees. In particular, this includes transformation of nonfunctional property specifications from a human-readable in a machine-readable form, scheduling of component usage, and resource reservation...|$|R

