53|32|Public
40|$|Abstract. In {{this paper}} we {{consider}} the optimistic approach of the non-repudiation protocols. We study a <b>non-repudiation</b> <b>protocol</b> with off-line trusted third party and we keep on with {{the definition of the}} multi-party non-repudiation, compare it to multi-party fair exchange and show some fundamental differences between these two problems. Finally, we generalize our protocol and propose a multi-party <b>non-repudiation</b> <b>protocol</b> with off-line trusted third party. ...|$|E
40|$|A fair <b>non-repudiation</b> <b>protocol</b> {{should not}} give the sender of a message an {{advantage}} over the receiver, or vice versa. We will present a fair <b>non-repudiation</b> <b>protocol</b> that requires a Trusted Third Party but attempts to minimize its involvement in {{the execution of the}} protocol. We will draw particular attention to the nonstandard use of encryption in our protocol and discuss some aspects of its formal verification. 1...|$|E
40|$|In {{this paper}} we {{consider}} the optimistic approach of the non-repudiation protocols. We study a <b>non-repudiation</b> <b>protocol</b> with off-line trusted third party and we keep on with {{the definition of the}} multi-party non-repudiation, compare it to multi-party fair exchange and show some fundamental differences between these two problems. Finally, we generalize our protocol and propose a multi-party <b>non-repudiation</b> <b>protocol</b> with off-line trusted third party. 3 rd International Conference on Information Security and Cryptology. Springer-Verlag. Seoul, Korea. SCOPUS: cp. kinfo:eu-repo/semantics/publishe...|$|E
50|$|These {{characteristics}} {{can be used}} {{to construct}} many other (sometimes surprising) cryptographic protocols and applications, such as digital cash, password-authenticated key agreement, multi-party key agreement, time-stamping services, <b>non-repudiation</b> <b>protocols,</b> etc.|$|R
40|$|In this paper, {{we report}} on a recent work for the {{verification}} of <b>non-repudiation</b> <b>protocols.</b> We propose a verification method {{based on the idea}} that <b>non-repudiation</b> <b>protocols</b> are best modeled as games. To formalize this idea, we use alternating transition systems, a game based model, to model protocols and alternating temporal logic, a game based logic, to express requirements that the protocols must ensure. This method is automated by using the model-checker Mocha, a model-checker that supports the alternating transition systems and the alternating temporal logic. Several optimistic protocols are analyzed using Mocha. CONCUR' 01 info:eu-repo/semantics/publishe...|$|R
40|$|The {{date of receipt}} and {{acceptance}} will be inserted by the editor Abstract In this paper we introduce the concept of multi-party <b>non-repudiation</b> <b>protocols.</b> We define the aims of multi-party <b>non-repudiation</b> <b>protocols,</b> compare them to multi-party fair exchange and show some fun-damental differences. We present two protocols, the first one using an online trusted third party and the second one using an offline trusted third party. We also show how to modify each of these protocols {{in order to provide}} confidentiality. The definitions and the resulting protocols are more general than the only comparable work, a multi-party certified e-mail <b>protocol.</b> Key words <b>Non-repudiation,</b> fair exchange, group communications. ...|$|R
40|$|The {{date of receipt}} and {{acceptance}} will be inserted by the editor Abstract We analyzed two non-repudiation protocols and found some new attacks on the fairness and termination property of these protocols. Our attacks are enabled by several inherent design weaknesses, which also apply to other non-repudiation protocols. To prevent these attacks, we propose generic countermeasures that considerably strengthen the design and implementation of non-repudiation protocols. The application of these countermeasures is finally shown by our {{construction of a new}} fair <b>non-repudiation</b> <b>protocol.</b> Key words Security protocols, fair <b>non-repudiation,</b> <b>protocol</b> design, protocol analysis...|$|E
40|$|A <b>non-repudiation</b> <b>protocol</b> of Zhou and Gollmann [18] {{has been}} {{mechanically}} verified. A <b>non-repudiation</b> <b>protocol</b> gives each party {{evidence that the}} other party indeed participated, evidence sufficient to present to a judge {{in the event of}} a dispute. We use the theorem-prover Isabelle [10] and model the security protocol by an inductive definition, as described elsewhere [1, 12]. We prove the protocol goals of validity of evidence and of fairness using simple strategies. A typical theorem states that a given piece of evidence can only exist if a specific event took place involving the other party...|$|E
40|$|Abstract. We {{develop a}} model of {{parametric}} probabilistic transition Systems (PPTSs), where probabilities associated with transitions may be parameters. We show how to find instances of the parameters that satisfy a given property and instances that either maximize or minimize the probability of reaching a certain state. As an application, we model a probabilistic <b>non-repudiation</b> <b>protocol</b> with a PPTS. The theory we develop allows us to find instances that maximize {{the probability that the}} protocol ends in a fair state (no participant has an advantage over the others). Keywords: Discrete-time Markov chains; Parameters; Reachability; Probabilistic <b>non-repudiation</b> <b>protocol</b> 1...|$|E
40|$|Aimed at {{the problem}} of the {{fairness}} analysis for multiparty nonrepudiation protocols, a new formal analysis method based on improved strand space is presented. Based on the strand space theory, signature operation is added; the set of terms, the subterm relation and the set of penetrator traces are redefined and the assumption of free encryption is extended in the new method. The formal definition of fairness in multi-party <b>non-repudiation</b> <b>protocols</b> is given and the guideline to verify it based on improved strand space is presented. Finally, the fairness of multi-party <b>non-repudiation</b> <b>protocols</b> is verified with an example of Kremer-Markowitch protocol, which indicates that the new method is suitable for analyzing the fairness of multiparty nonrepudiation protocols...|$|R
40|$|Abstract:- The {{increasing}} {{usage of}} internet-based services, such as certified e-mails, electronic payment of goods, and non-repudiation require development of security protocols for fair exchange. Non-repudiation is a security service concerned with preventing a denial {{by one of}} the principals involved in a communication of having participated in {{all or part of the}} communication. This paper discusses the reasoning on security properties of <b>non-repudiation</b> <b>protocols.</b> A case study incorporating the verification of two online <b>non-repudiation</b> security <b>protocols</b> is presented. The results of the analysis highlight the usefulness of formal verification to increase confidence in the correctness of security protocols...|$|R
40|$|BPEL {{provides}} a language for the formal specification of business processes and business interaction protocols. In business transactions non-repudiation {{is a serious}} security issue in which any involved party denies having participated in a transaction. In this paper we propose and verify novel <b>non-repudiation</b> <b>protocols</b> for business transactions {{in a number of}} scenarios and specify them in BPEL. Our proposed protocols fulfill the requirements of security, fairness, protection and timeliness. 1...|$|R
40|$|Fairness {{may be a}} {{desirable}} property of a nonrepudiation service. Protocols can achieve fairness through the involvement of a trusted third party but {{the extent of the}} trusted third party's involvement can vary between protocols. Hence, {{one of the goals of}} designing an efficient <b>non-repudiation</b> <b>protocol</b> is to reduce the work load of the trusted third party. In this paper we present a variant of our fair <b>non-repudiation</b> <b>protocol</b> [15], where the trusted third party will be involved only in case that one party cannot obtain the expected non-repudiation evidence from the other party. This variant is efficient in an environment where the two parties are likely to resolve communications problems between themselves...|$|E
40|$|The paper {{applies the}} theory of {{communicating}} sequential processes (CSP) to the modelling and analysis of a <b>non-repudiation</b> <b>protocol.</b> Non-repudiation protocols differ from authentication and key-exchange protocols in that the participants require protection from each other, rather than from an external hostile agent. This means that the kinds of properties that are required of such a protocol, {{and the way it}} needs to be modelled to enable analysis, are different to the standard approaches taken to the more widely studied class of protocols and properties. A <b>non-repudiation</b> <b>protocol</b> proposed by Zhou and Gollmann (1996) is analysed within this framework, and this highlights some novel considerations that are required for this kind of protoco...|$|E
40|$|We are {{interested}} in describing timed systems that exhibit probabilistic behaviors. To this purpose, we define a model of probabilistic timed automata and give a concept of weak bisimulation together with an algorithm to decide it. We use this model for describing and analyzing a probabilistic <b>non-repudiation</b> <b>protocol</b> in a timed setting. ...|$|E
40|$|We use a PVS {{embedding}} of {{the stable}} failures model of CSP to verify <b>non-repudiation</b> <b>protocols,</b> {{allowing us to}} prove the correctness of properties {{that are difficult to}} analyze in full generality with a model checker. The PVS formalization comprises a semantic embedding of CSP and a collection of theorems and proof rules for reasoning about non-repudiation properties. The well-known Zhou-Gollmann protocol is analyzed within this framework. © Springer-Verlag Berlin Heidelberg 2007...|$|R
40|$|Abstract—Non-repudiation in {{e-commerce}} {{has recently}} gained {{a lot of}} interest but its successor brother, non-repudiation in m-commerce, is still at the start. In this paper, we propose an extension of existing mobile payment models to introduce an extended mobile payment service (EMPS) model, which is based on assumptions about the cooperation between mobile network operators and financial institutions to deal with different payment amounts ranging from micro to macro payment. The novel model focuses on enhancement of non-repudiation problem. Fair <b>non-repudiation</b> <b>protocols</b> are developed for not only payment phase but also other phases in a typical m-commerce transaction, including price negotiation and content delivery. Joint signatures method is used in protocols to overcome the limitations in mobile handheld device capability and to reduce the trust dependence totally on the payment service. As with the proposed <b>non-repudiation</b> <b>protocols,</b> EMPS plays the role of a semi-trusted third party and is an indispensable factor for creating the fairness property. Nonrepudiation analyses of these protocols are also conducted besides some guidelines for ensuring non-repudiation in m-commerce. Index Terms—Communication system security, M-commerce security, non-repudiation, semi-trusted 3 rd party, payment model. I I...|$|R
40|$|Cryptographic {{protocols}} {{often fail}} to meet their design objectives for very subtle reasons. Formal analysis is useful to provide additional evidence regarding soundness of cryptographic protocols. Nonrepudiation services protect the transacting parties against any false denial that a particular event or action has taken place, in which evidence will be generated, collected and maintained to enable the settlement of disputes. Such type of security services {{turn out to be}} increasingly important due to the explosive growth of electronic businesses carried on the Internet. In this paper, we formalize the goals of non-repudiation services, and use the SVO logic to discuss what may be needed for the verification of <b>non-repudiation</b> <b>protocols.</b> Keywords: <b>non-repudiation,</b> cryptographic <b>protocol,</b> formal method, security modelling 1 Introduction It has been evident {{for a number of years}} that cryptographic protocols {{often fail to}} meet their design objectives for very subtle reasons. Although som [...] ...|$|R
40|$|Abstract. An {{approach}} to protocol analysis using asynchronous product automata (APA) {{and the simple}} homomorphism verification tool (SHVT) is demonstrated on several variants of the well known Zhou-Gollmann fair <b>non-repudiation</b> <b>protocol.</b> Attacks on these protocols are presented, that, to our knowledge, have not been published before. Finally, an improved version of the protocol is proposed. ...|$|E
40|$|We {{define a}} {{probabilistic}} {{model for the}} analysis of a <b>Non-Repudiation</b> <b>protocol</b> that guarantees fairness, without resorting to a trusted third party, by means of a probabilistic algorithm. By using the PRISM model checker, we estimate the probability for a malicious user to break the non-repudiation property, depending on various parameters of the protocol. ...|$|E
40|$|An {{approach}} to protocol analysis using asynchronous product automata (APA) {{and the simple}} homomorphism verification tool (SHVT) is demonstrated on several variants of the well known Zhou-Gollmann fair <b>non-repudiation</b> <b>protocol</b> and on two more recent optimistic fair non-repudiation protocols. Attacks on all these protocols are presented and an improved version of the Zhou-Gollmann protocol is proposed...|$|E
40|$|We {{describe}} a calculus that is specific to <b>non-repudiation</b> <b>protocols.</b> The calculus uses the correspondence assertion of Woo and Lam, that is, {{if there is}} a non-repudiation of receipt there should be a corresponding non-repudiation of origin. The main contribution of this work lies in the way we model input and output and hence captures non-repudiation properties. The calculus is a subset of the Pi calculus. The basic constructs are modified in order to handle properties of non-repudiation. We offer a formal syntax and an operational semantics of the calculus. We show the usefulness of the calculus by describing Zhou optimistic protocol...|$|R
40|$|Only {{very little}} is known about the {{automatic}} analysis of cryptographic protocols for game-theoretic security properties. In this paper, we therefore study decidability and complexity of the model checking problem for AMC-formulas over infinite state concurrent game structures induced by cryptographic protocols and the Dolev-Yao intruder. We show that the problem is NEXPTIME-complete when making reasonable assumptions about protocols and for an expressive fragment of AMC, which contains, for example, all properties formulated by Kremer and Raskin in fair ATL for contract-signing and <b>non-repudiation</b> <b>protocols.</b> We also prove that our assumptions on protocols are necessary to obtain decidability, unless other restrictions are imposed on protocols. ...|$|R
40|$|IEEE Communication Society; IEEE Engineering Management Society; Shanghai Jiaotong University, China; Wuhan University, ChinaThis paper proposes an {{approach}} of automated design of <b>non-repudiation</b> security <b>protocols</b> from the abstract level that uses logic-based rules. The search strategy adopts the genetic algorithm {{which is a}} meta-heuristic search method. During the searching...|$|R
40|$|A fair <b>non-repudiation</b> <b>protocol</b> {{should not}} give the sender of a message an {{advantage}} over the receiver, or vice versa. We will present a fair <b>non-repudiation</b> <b>protocol</b> that requires a Trusted Third Party but attempts to minimize its involvement in {{the execution of the}} protocol. We will draw particular attention to the nonstandard use of encryption in our protocol and discuss some aspects of its formal verification. 1. Introduction Accountability is an important aspect of information security. In a distributed communication environment, we may therefore want to prevent entities from denying that they have sent or received certain messages. The goal of a non-repudiation service is to collect, maintain, make available, and validate irrefutable evidence regarding the transfer of a message from the originator to the recipient, possibly involving the service of a trusted third party called the Delivery Agent. We distinguish between the following non-repudiation services [8]. ffl Non-repudiat [...] ...|$|E
40|$|With {{the phenomenal}} {{growth of the}} Internet and open {{networks}} in general, security services, such as non-repudiation, become crucial to many applications. Nonrepudiation services must ensure that when Alice sends some information to Bob over a network, neither Alice nor Bob can deny having participated in a part or the whole of this communication. Therefore a fair <b>non-repudiation</b> <b>protocol</b> has to generate non-repudiation of origin evidences intended to Bob, and non-repudiation of receipt evidences destined to Alice. In this paper, we clearly define the properties a fair <b>non-repudiation</b> <b>protocol</b> must respect, and give {{a survey of the}} most important non-repudiation protocols without and with trusted third party (TTP). For the later ones we discuss the evolution of the TTP's involvement and, between others, describe the most recent protocol using a transparent TTP. We also discuss some ad-hoc problems related to the management of non-repudiation evidences...|$|E
40|$|A <b>non-repudiation</b> <b>protocol</b> {{enables the}} fair {{exchange}} of an electronic message and an irrefutable digital receipt between two mistrusting parties over the Internet. That is, {{at the end}} of any execution instance of such a protocol, either both parties obtain their expected items or neither party does. In this paper, we first argue that it is really meaningful in practice to exploit generic fair non-repudiation protocols with transparent off-line trusted third party (TTP). Namely, in those protocols, each involved party could use any secure digital signature algorithm to produce non-repudiation evidences; and the issued evidences are the same regardless of whether the TTP is involved or not. Then, we present such a fair <b>non-repudiation</b> <b>protocol</b> to overcome some limitations and shortcomings in previous schemes. Technical discussions are provided to show that our protocol is not only secure but also the most efficient solution, compared with existing non-repudiation protocols. In addition, some potential extensions are also pointed out...|$|E
40|$|Due to the {{explosive}} growth of electronic businesses carried on the Internet, nonrepudiation services {{turn out to be}} increasingly important. Non-repudiation services protect the transacting parties against any false denial that a particular event or action has taken place, in which evidence will be generated, collected and maintained to enable the settlement of disputes. Several fair <b>non-repudiation</b> <b>protocols</b> have been proposed, which support non-repudiation of origin and non-repudiation of receipt while neither the originator nor the recipient can gain an advantage by quitting prematurely or otherwise misbehaving during a transaction. However, a critical issue on how to maintain the validity of non-repudiation evidence efficiently during and after a transaction was not considered. This paper uses the idea of evidence chaining to address such a problem. Keywords: fair non-repudiation, validity of evidence, evidence chaining, dispute resolution 1 Introduction Due to the expl [...] ...|$|R
40|$|<b>Non-repudiation</b> <b>protocols</b> have an {{important}} role in many areas where secured transactions with proofs of participation are necessary. Formal methods are clever and without error, therefore using them for verifying such protocols is crucial. In this purpose, we show how to partially represent non-repudiation as a combination of authentications on the Fair Zhou-Gollmann protocol. After discussing its limits, we define a new method based on the handling of the knowledge of protocol participants. This method is very general and is of natural use, as it consists in adding simple annotations, like for authentication problems. The method is very easy to implement in tools able to handle participants knowledge. We have implemented it in the AVISPA Tool and analyzed the optimistic Cederquist-Corin- Dashti protocol, discovering two unknown attacks. This extension of the AVISPA Tool for handling non-repudiation opens a highway to the specification of many other properties, without any more change in the tool itself...|$|R
40|$|In {{this paper}} we study the {{overhead}} introduced by secure functions in considering two models of <b>non-repudiation</b> <b>protocols.</b> The models are specified using the Markovian process algebra PEPA. The basic model {{suffers from the}} well known state space explosion problem when tackled using Markov chain analysis. Following previous study of performance modelling on security protocols, mean value analysis and fluid flow approximation based on ordinary differential equations (ODEs) have been chosen as efficient analysis techniques. Mean value analysis is an efficient exact method for deriving a limited set of metrics for large numbers of clients involved in the protocols. Fluid flow approximations can be adopted to solve the system with extremely large populations and potentially derive {{a wider range of}} metrics. Additionally, Functional Rates has been adopted in the second model to avoid unintended system behaviour. The models are analyzed numerically and results derived from mean value analysis are compared with the ODE solution...|$|R
40|$|In {{this paper}} we {{consider}} the optimistic approach of the non-repudiation proto-cols. We study the most complete <b>non-repudiation</b> <b>protocol</b> with o®-line trusted third party and we put forward some weaknesses. To ¯x these weaknesses we present two solutions: one keeping a passive TTP, a second one, more appli-cable, with an active TTP 1. We show that our protocol respects the fairness and timeliness properties...|$|E
40|$|We {{design and}} model-check a simple optimistic fair <b>non-repudiation</b> <b>{{protocol}}.</b> Our protocol is considerably simpler than current proposals, due {{mainly to the}} avoidance of using session labels. Our analysis technique is supported by exposing several vulnerabilities on weaker versions of our protocol. Some of the properties we check are liveness properties. To verify these, we use an intruder that respects the resilient communication channels assumption...|$|E
40|$|Non-repudiation {{protocols}} aim {{at preventing}} parties in a communication from falsely denying having {{taken part in}} that communication; for example, a <b>non-repudiation</b> <b>protocol</b> for digital certified mail should ensure that neither the sender can deny sending the message, nor the receiver can deny receiving it. We identify some guidelines for nonrepudiation protocols. The guidelines are derived by examining a series of non-repudiation protocols that descend from a single ancestor...|$|E
40|$|Research in {{security}} has traditionally focused on preventing all possible attacks, without {{focusing on the}} attacker and defender, and their incentives, abilities, and knowledge. However, {{the security of a}} system might depend on such aspects. Therefore, we use logic and artificial intelligence to model the attacker, the de-fender, and their interaction. We have identified three areas in which the interac-tion between attacker and defender, and thus the application of game theory and logic, is relevant. First, we study security protocols. A security protocol specifies the behavior of agents that interact with the aim of guaranteeing security properties. As secu-rity protocols are executed by interacting agents with possibly diverging interests, they are an interesting candidate for game-theoretical and logical modeling. We study in particular <b>non-repudiation</b> <b>protocols,</b> which are protocols that guaran-tee that an agent cannot deny having executed a certain event. We introduce a game-theoretical framework for analysis of security protocols. This framework is created by unifying the Cremers–Mauw protocol semantics with concurrent gam...|$|R
40|$|Security {{protocols}} {{intend to}} give their parties reasonable assurance that certain security properties will protect their communication session. However, the literature confirms that the protocols may suffer subtle and hidden attacks. Flawed protocols are customarily {{sent back to the}} design process, but the costs of reengineering a deployed protocol may be prohibitive. This paper outlines the concept of retaliation: who would steal a sum of money today, should this pose significant risks of having twice as much stolen back tomorrow? Attacks are always balanced decisions: if an attack can be retaliated, the economics of security may convince us to live with a flawed protocol. This new perspective requires a new threat model where any party may decide to subvert the protocol for his own sake, depending on the risks of retaliation. This threat model, which for example is also suitable to studying <b>non-repudiation</b> <b>protocols,</b> seems more appropriate than the Dolev-Yao model to the present technological/social setting...|$|R
30|$|The quality {{standard}} of integrity of information technology (IT) systems aims to guarantee that the information is modified and destroyed only by authorized parties, is modified and destroyed only in authorized ways, and {{is assumed to be}} authentic, (i.e., authorized parties can be verified), and any change of information cannot be repudiated (i.e., cannot be denied by the authorized changing party). There exist several measures to provide end-to-end data integrity. These measures include installation of antivirus programs, establishing authenticity and <b>non-repudiation</b> <b>protocols,</b> applying “check-sum” procedures, and installation of system and data recovery utility software programs. Malware is a common root cause of data corruption, and it can cause intentional or unintentional loss of data integrity. A virus also alters files and renders an information system unusable. A “check-sum” procedure can be used to detect and correct possible data corruption. Other programs can repair the corrupted file automatically, depending on the level of corruption. In more extreme cases, when data seems to be uncorrectable, one can apply automatic restoration from backups.|$|R
