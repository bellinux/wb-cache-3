0|1292|Public
50|$|An <b>authorization</b> <b>decision</b> {{statement}} {{asserts that}} a subject {{is permitted to}} perform action A on resource R given evidence E. The expressiveness of <b>authorization</b> <b>decision</b> statements in SAML is intentionally limited. More-advanced use cases are encouraged to use XACML instead.|$|R
30|$|Policies {{are pushed}} into a policy repository, which the PDP service uses to {{evaluate}} <b>authorization</b> <b>decisions.</b>|$|R
40|$|Role based {{access control}} {{has been widely}} used in {{security}} critical systems. Conventional role based access control is a passive model, which makes <b>authorization</b> <b>decisions</b> on requests, and the <b>authorization</b> <b>decisions</b> contain only information about whether the corresponding requests are authorised or not. One of the potential improvements for role based access control is the augmentation of obligations, where obligations are tasked and requirements to be fulfilled together with the enforcement of <b>authorization</b> <b>decisions.</b> This paper conducts a comprehensive literature review about role based access control and obligation related research, and proposes a design of the augmentation of obligations {{in the context of}} RBAC standard. The design is then further consolidated in the PERMIS RBAC authorization infrastructure. Details of incorporating obligations into the PERMIS RBAC authorization infrastructure are given. This paper also discusses the possible nondeterminism caused by overlapped authorisation. 1...|$|R
30|$|Policy {{enforcement}} point (PEP) as a service: The PEP service acts as {{an intermediary}} between the policy decision point (PDP) service and the client application by capturing the client’s request for accessing documents or collections in the document-oriented database and converting it into an SAML-wrapped XACML <b>authorization</b> <b>decision</b> query and sending {{it over to the}} PDP service. It is also responsible for interpreting the <b>authorization</b> <b>decision</b> that it receives from the PDP service and converting it into the native form that the client application can understand.|$|R
40|$|This paper {{examines}} {{the role of}} environmental impact assessment (EIA) in project <b>authorization</b> <b>decision</b> making {{and the way in}} which the courts have interpreted its role. The purpose of the paper is to establish whether or not that role has changed over the period between the introduction of EIA in 1988 and 2001. From the evidence reported here, it is argued that while the procedural stages of EIA have been very much strengthened over that period, the importance of EIA as a tool to aid planning <b>authorization</b> <b>decision</b> making remains largely peripheral. ...|$|R
40|$|Abstract- Collaboration systems {{require an}} {{appropriate}} uurhorizarion model to specifL and winrain policies that iiut only facilitate group activities but also enforce restrictions and uccountubility. Existing models fail to incorporate adequately into <b>authorization</b> <b>decisions</b> the rich notion of context rhut is inherent to any collaborative setting. In this paper we present the Locale-based Access Control (Locale-BA C) model for collaborative systems, a model whose design {{is based upon}} the.,application of Fitzparrick's Locule Framework for collabohion {{to the problem of}} access control. This model encapsulates the notion of context using locules, allowing for a nutural representation of collaborative <b>authorization</b> <b>decisions...</b>|$|R
30|$|A known {{standard}} for authorization in distributed systems is XACML (eXtensible Access Control Markup Language). XACML is a language based on XML for authorization policy description and request/response for access control <b>decisions.</b> <b>Authorization</b> <b>decisions</b> may {{be based on}} user/device attributes, on requested actions, and environment characteristics. Such features enable the building of flexible authorization mechanisms. Furthermore, XACML is generic, regardless of the access control model used (RBAC, ABAC) and {{enables the use of}} a local <b>authorization</b> <b>decision</b> making (provisioning model) or by an external service provider (outsourcing model). Another important aspect is that there are profiles and extensions that provide interoperability between XACML and SAML [183].|$|R
40|$|Abstract. This paper {{presents}} {{a model for}} delegation based on partial orders, proposing the subclass relation in OWL {{as a way to}} represent the partial orders. Delegation and <b>authorization</b> <b>decisions</b> are made based on the context. In order to interact with the context, we define the Type of a credential as a way to introduce extra information regarding context constraints. When reasoning about delegation and authorization relationships, our model benefits from partial orders, defining them over entities, attributes and the credential type. Using these partial orders, the number of credentials required is reduced. It also classifies the possible criteria for making <b>authorization</b> <b>decisions</b> based on the context, in relation to the necessary information. ...|$|R
40|$|We {{describe}} and compare several algorithms for <b>authorization</b> <b>decisions</b> from {{a database of}} certificates. The algorithms are based on well-known graph-search techniques that we enhance to handle joint-delegation certificates. Experiments on generated certificate data were done to compare {{the efficiency of the}} algorithms...|$|R
40|$|As {{distributed}} applications increase {{in size and}} complexity, traditional authorization architectures based on a dedicated authorization server become increasingly fragile because this decision point represents a {{single point of failure}} and a performance bottleneck. Authorization caching, which enables the reuse of previous <b>authorization</b> <b>decisions,</b> is one technique that has been used to address these challenges. This article introduces and evaluates the mechanisms for authorization “recycling ” in RBAC enterprise systems. The algorithms that support these mechanisms allow making precise and approximate <b>authorization</b> <b>decisions,</b> thereby masking possible failures of the authorization server and reducing its load. We evaluate these algorithms analytically as well as using simulation and a prototype implementation. Our evaluation results demonstrate that authorization recycling can improve the performance of distributed-access control mechanisms...|$|R
40|$|This {{specification}} {{defines a}} profile {{for the use}} of the OASIS Security Assertion Markup Language (SAML) Version 2. 0 to carry XACML 2. 0 policies, policy queries and responses, <b>authorization</b> <b>decisions,</b> and <b>authorization</b> <b>decision</b> queries and responses. It also describes the use of SAML 2. 0 Attribute Assertions with XACML. Using XACML with SAML 2. 0, XACML document instances can be protected using the SAML guidelines for use of digital signatures and can be transported using SAML bindings to transport mechanisms. Status: This version of the specification is a working draft within the OASIS XACML TC. As such, it is expected to change prior to adoption as an OASIS standard. Committee members should send comments on this specification to the xacml@lists. oasis-open. org list. Others should subscribe to and send comments to th...|$|R
30|$|The PEP service {{passes a}} XACML-SAML <b>authorization</b> <b>decision</b> query <xacml-samlp:XACMLAuthzDecisionQuery > to the PDP service for approval. The request {{contains}} the user ID, action required, and indication of all document-oriented database {{resources needed to}} fulfill the request. The PDP makes the decision of whether the user should be allowed access or not.|$|R
40|$|Decoupling {{authorization}} logic from {{application logic}} allows applications with fine-grain access control requirements {{to be independent}} from a particular access control policy and from factors {{that are used in}} <b>authorization</b> <b>decisions</b> as well as access control models, no matter how dynamic those polices and factors are. It also enables elaborate and consistent access control policies across heterogeneous systems. We present design of a service for resource access authorization in distributed systems. The service enables to decouple authorization logic from application functionality. Although the described service is based on CORBA technology, the design approach can be successfully used in any distributed computing environment. 1. Introduction Traditional access control mechanisms [1] provide limited capabilities for <b>authorization</b> <b>decisions</b> to be based on factors that are specific to the application domain. The complexity of access control policies in such application domains as healt [...] ...|$|R
40|$|We {{describe}} and compare several algorithms for <b>authorization</b> <b>decisions</b> from {{a database of}} certificates. The algorithms are based on well-known graph-search techniques that we enhance to handle joint-delegation certificates. Experiments on generated certificate data were done to compare {{the efficiency of the}} algorithms. 1 Introduction Emerging key-based access control mechanisms are moving the access control decisions from centralized trusted servers to the local ones. They also shift the focus from identity of entities to authorization, the right to perform operations. The access right can be delegated anonymously from key to key with a chain of certificates. Three key-based access control systems have received wide attention: SPKI certificates [2], SDSI public key infrastructure [3], and PolicyMaker local security policy database [1]. The <b>authorization</b> <b>decision</b> in all of these systems is to some extent dependent on the chaining of signed certificates that grant authority to perform o [...] ...|$|R
50|$|For an {{application}} using strong (N-factor) authentication, traditional authorization techniques pose a security vulnerability. The application must rely upon technologies like database queries or directory lookups, which are protected using single-factor authentication, for authorization information and management. Any application specific hardening of non-atomic authorization methods increases {{the complexity of}} identity management and issuing credentials, but does not further legitimize the <b>authorization</b> <b>decisions</b> that the application makes.|$|R
40|$|This {{document}} {{provides information}} to the Grid community. Distribution is unlimited. Copyright Notice Copyright © Open Grid Forum (2008). All Rights Reserved. This document describes the various components {{that make up the}} <b>authorization</b> <b>decision</b> function of a Grid service provider. It looks at the different ways in which the various components can be combined together, and data flows between the components. This document is fo...|$|R
40|$|This paper {{addresses}} {{the issue of}} solving conflicts occurring in the <b>authorization</b> <b>decision</b> process among policies applicable to an access request. We propose a strategy for conflict resolution based on {{the evaluation of the}} specificity level of the elements constituting the policies. Operatively, the strategy is implemented by exploiting a well known decision making technique. Two practical examples of use in the healthcare scenario are given...|$|R
40|$|This report {{discusses}} {{information on}} extant Department of Defense (DOD) reform proposals being considered during the FY 2017 <b>National</b> Defense <b>Authorization</b> Act debates. As such, it includes key provisions incorporated in H. R. 4909, the FY 2017 <b>National</b> Defense <b>Authorization</b> Act (NDAA) {{reported by the}} House Armed Services Committee on May 4, 2016 (H. Rept. 114 - 537), and S. 2943, the FY 2017 <b>National</b> Defense <b>Authorization</b> Act reported by the Senate Armed Services Committee on May 18, 2016 (S. Rept. 114 - 255). Wherever possible, it also includes the Administration's views...|$|R
5000|$|... #Article: <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2008 ...|$|R
5000|$|... #Subtitle level 3: <b>National</b> Defense <b>Authorization</b> Act of 2012 ...|$|R
40|$|As part of {{the access}} control process an <b>{{authorization}}</b> <b>decision</b> {{needs to be taken}} based on a certain authorization model. Depending on the environment different models are applicable (e. g., RBAC in organizations, MAC in the military field). An authorization model contains all necessary elements needed for the decision (e. g., subjects, objects, and roles) as well as their relations. As these elements are usually inherent in the software architecture of an access control module, such modules limit themselves to the use of a certain specific authorization model. A later change of the model consequently results in a substantial effort for revising the software architecture of the given module. Rule-based systems are well suited to represent authorization models by mapping them to facts and rules, which can be modified in a flexible manner. In this paper we present a generic authorization module, which can take <b>authorization</b> <b>decisions</b> on the basis of arbitrary models utilizing rule-based technology. The implementation of the popular RBAC and ABAC (attribute-based access control) models is demonstrated...|$|R
5000|$|After an {{authentication}} or <b>authorization</b> policy <b>decision</b> is made, {{the outcome}} can be recorded for auditing purposes, such as: ...|$|R
5000|$|December 26, 2013: <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2014, ...|$|R
5000|$|December 31, 2011: <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2012, ...|$|R
5000|$|... #Article: Ike Skelton <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2011 ...|$|R
5000|$|October 22, 2015: <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2016 (...) ...|$|R
5000|$|... #Subtitle level 3: <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 1996 ...|$|R
50|$|Schock {{voted for}} the <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2012.|$|R
50|$|In 1994, the United States Congress passed The <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 1994, {{preventing}} {{the government from}} developing nuclear weapons with a yield of less than 5 kilotons, thereby making the official development of these weapons in the US unlawful. This law was, however, repealed in the <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2004.|$|R
2500|$|The Montgomery Amendment to the <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 1987 ...|$|R
5000|$|... : {{an earlier}} version of <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 2008 ...|$|R
5000|$|Defense Procurement Regulations: Noted {{in section}} 806 of the <b>National</b> Defense <b>Authorization</b> Act ...|$|R
5000|$|Clinger-Cohen Act, {{part of the}} <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 1996 ...|$|R
5000|$|The Montgomery Amendment to the <b>National</b> Defense <b>Authorization</b> Act for Fiscal Year 1987 ...|$|R
5000|$|... (3) Division C — Department of Energy <b>National</b> Security <b>Authorizations</b> and Other Authorizations.|$|R
40|$|AbstractIn {{this paper}} we propose a {{formalization}} of access control policies based on term rewriting. The state of the system to which policies are enforced is represented as an algebraic term, which allows us to model several aspects of the policy environment. Policies are implemented by sets of rewrite rules, whose evaluation produces <b>authorization</b> <b>decisions.</b> We discuss the relation between properties of term rewriting systems, such as confluence and termination, and their consequences on defining trusted access control policies...|$|R
