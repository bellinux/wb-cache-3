2028|2225|Public
25|$|Second Life {{functions}} by streaming {{all data}} to the user live over the Internet with minimal local caching of frequently used data. The user {{is expected to have}} a minimum of 300kbit/s of Internet bandwidth for basic functionality. Due to the proprietary communications protocols, {{it is not possible to}} use a network proxy service to reduce <b>network</b> <b>load</b> when many people are all using the same location, such as when used for group activities in a school or business.|$|E
2500|$|DR's {{exist for}} the purpose of {{reducing}} network traffic by providing a source for routing updates. The DR maintains a complete topology table of the network and sends the updates to the other routers via multicast. All routers in a multi-access network segment will form a slave/master relationship with the DR. They will form adjacencies with the DR and BDR only. Every time a router sends an update, it sends it to the DR and BDR on the multicast address 224.0.0.6. The DR will then send the update out to all other routers in the area, to the multicast address 224.0.0.5. This way all the routers do not have to constantly update each other, and can rather get all their updates from a single source. [...] The use of multicasting further reduces the <b>network</b> <b>load.</b> [...] DRs and BDRs are always setup/elected on OSPF broadcast networks. [...] DR's can also be elected on NBMA (Non-Broadcast Multi-Access) networks such as Frame Relay or ATM. [...] DRs or BDRs are not elected on point-to-point links (such as a point-to-point WAN connection) because the two routers on either sides of the link must become fully adjacent and the bandwidth between them cannot be further optimized. DR and non-DR routers evolve from 2-way to full adjacency relationships by exchanging DD, Request, and Update.|$|E
5000|$|Monitoring of server resources: system load, <b>network</b> <b>load,</b> and disk usage, {{using an}} agent.|$|E
40|$|Abstract. <b>Network</b> <b>loading</b> {{problems}} {{occur in}} the design of telecommunication networks, in many different settings. For instance, bifurcated or non-bifurcated routing (also called splittable and unsplittable) can be considered. In most settings, the same polyhedral structures return. A better understanding of these structures therefore can {{have a major impact on}} the tractability of polyhedral-guided solution methods. In this paper, we investigate the polytopes of the problem restricted to one arc/edge of the network (the undirected/directed edge capacity problem) for the non-bifurcated routing case. As an example, one of the basic variants of <b>network</b> <b>loading</b> is described, including an integer linear programming formulation. As the edge capacity problems are relaxations of this <b>network</b> <b>loading</b> problem, their polytopes are intimately related. We give conditions under which the inequalities of the edge capacity polytopes define facets of the <b>network</b> <b>loading</b> polytope. We describe classes of strong valid inequalities for the edge capacity polytopes, and we derive conditions under which these constraints define facets. For the diverse classes the complexity of lifting projected variables is stated. The derived inequalities are tested on (i) the edge capacity problem itself and (ii) the described variant of the <b>network</b> <b>loading</b> problem. The results show that the inequalities substantially reduce the number of nodes needed in a branch-and-cut approach. Moreover, they show the importance of the edge subproblem for solving <b>network</b> <b>loading</b> problems. Key words. network design – mixed integer programming – cutting planes – knapsack with integer capacity 1...|$|R
40|$|<b>Network</b> <b>loading</b> {{problems}} {{occur in}} the design of telecommunication networks, in many different settings. The polyhedral structure of this problem is important in developing solution methods for the problem. In this paper we investigate the polytope of the problem restricted to one edge of the network (the edge capacity problem). We describe classes of strong valid inequalities for the edge capacity polytope, and we derive conditions under which these constraints define facets. As the edge capacity problem is a relaxation of the <b>network</b> <b>loading</b> problem, their polytopes are intimately related. We, therefore, also give conditions under which the inequalities of the edge capacity polytope define facets of the <b>network</b> <b>loading</b> polytope. Furthermore, some structural properties are derived, such as the relation of the edge capacity polytope to the knapsack polytope. We conclude the theoretical part of this paper with some lifting theorems, where we show that this problem is polynomially solvable for most of our classes of valid inequalities. The derived inequalities are tested on (i) the edge capacity problem itself and (ii) a variant of the <b>network</b> <b>loading</b> problem. The results show that the inequalities substantially reduce the number of nodes needed in a branch-and-cut approach. Moreover, they show the importance of the edge subproblem for solving <b>network</b> <b>loading</b> problem...|$|R
40|$|We {{consider}} the <b>Network</b> <b>Loading</b> Problem under a polyhedral uncertainty {{description of traffic}} demands. After giving a compact multi-commodity formulation of the problem, we prove an unexpected decomposition property obtained from projecting out the flow variables, considerably simplifying the resulting polyhedral analysis and computations by doing away with metric inequalities, an attendant feature of most successful algorithms on the <b>Network</b> <b>Loading</b> Problem. Under a specific choice of the uncertainty description (hose model), we study the polyhedral aspects of <b>Network</b> <b>Loading</b> Problems, {{used as the basis}} of an efficient Branch-and-Cut algorithm supported by a simple heuristic for generating upper bounds. The results of extensive computational experiments on well-known network design instances are reported...|$|R
5000|$|Computation bundles - {{converts}} computational client/server round {{trips to}} relocatable data bundles, reducing <b>network</b> <b>load.</b>|$|E
50|$|When {{multiple}} servers {{are joined}} {{to create a}} cluster. Clusters can use <b>network</b> <b>load</b> balancing whereby simultaneous cluster request are distributed between cluster servers.|$|E
50|$|<b>Network</b> <b>load</b> {{balancing}} (commonly {{referred to}} as dual-WAN routing or multihoming) {{is the ability to}} balance traffic across two WAN links without using complex routing protocols like BGP.|$|E
40|$|The use of high {{performance}} networking technologies, e. g., ATM networks, demands much from both operating systems and processors. During high <b>network</b> <b>loads,</b> user threads may be starved because the processor spends all its time handling interrupts. To alleviate this problem, we propose using a two level network interface servicing scheme that uses interrupts during low <b>network</b> <b>loads</b> to provide low latency, and polling threads during high <b>network</b> <b>loads</b> to avoid user thread starvation. In this paper, {{we examine the}} use of such a scheme on dual-processor workstations running Windows NT connected by an ATM network. Performance evaluation of our multiprocessor prototype implementation shows that using our two level scheme can improve performance when used carefully...|$|R
5000|$|Cytoscape, an {{open source}} {{bioinformatics}} software platform for visualizing molecular interaction <b>networks,</b> <b>loads</b> and save previously-constructed interaction networks in GML.|$|R
30|$|Thus, the {{proposed}} QoS-DFFR scheme reduces co-channel interference and optimizes the sector, per-user, and system throughput by satisfying <b>network</b> <b>loading</b> conditions.|$|R
5000|$|Network {{throughput}} {{may vary}} {{from a few}} kB/second up {{to as much as}} 4 MB/second depending on factors including <b>network</b> <b>load,</b> signal strength, signal quality and route length.|$|E
50|$|CSMA/CA {{performance}} is based largely upon the modulation technique used to transmit the data between nodes. Studies show that under ideal propagation conditions (simulations), Direct Sequence Spread Spectrum (DSSS) provides the highest throughput for all nodes {{on a network}} when {{used in conjunction with}} CSMA/CA and the IEEE 802.11 RTS/CTS exchange under light <b>network</b> <b>load</b> conditions. Frequency Hopping Spread Spectrum (FHSS) follows distantly behind DSSS with regard to throughput with a greater throughput once <b>network</b> <b>load</b> becomes substantially heavy. However, the throughput is generally the same under real world conditions due to radio propagation factors.|$|E
50|$|Regardless of {{the layer}} on which {{aggregation}} occurs, it may balance the <b>network</b> <b>load</b> across all links. This {{is not always}} the case. Most methods provide failover as well.|$|E
5000|$|Cytoscape, an {{open source}} {{bioinformatics}} software platform for visualizing molecular interaction <b>networks,</b> <b>loads</b> and saves <b>networks</b> and node/edge attributes in XGMML ...|$|R
40|$|AbstractIn {{the design}} of {{telecommunication}} networks, decisions concerning capacity installation and routing of commodities {{have to be taken}} simultaneously. <b>Network</b> <b>Loading</b> problems formalize these decisions in mathematical optimization models. Several variants of the problem exist: bifurcated or non-bifurcated routing, bidirected or unidirected capacity installation, and symmetric versus non-symmetric routing restrictions. Moreover, different concepts of reliability can be considered. In this paper, we study the polyhedral structure of two basic problems for non-bifurcated routing: <b>network</b> <b>loading</b> with bidirected and unidirected capacity installation. We show that strong valid inequalities for the substructure restricted to a single edge, are also strong valid inequalities for the overall models. In a computational study, several classes of inequalities, both for the substructure and the overall problem, are compared on real-life instances for both variants of <b>network</b> <b>loading...</b>|$|R
40|$|This article {{presents}} a computationally ecient technique for the macroscopic (equationbased) <b>network</b> <b>loading</b> of microscopic (simulation based) travel demand. It combines the expressive power of microsim-ulations as sampling tools for highly heterogeneous demand segments with mathematically wellunderstood macroscopic <b>network</b> <b>loading</b> procedures. The presented experimental results demonstrate the ef-ciency and precision {{of the approach}} even for large and complex scenarios. This work is intended {{to contribute to the}} understand-ing and application of microsimulation techniques in the context of mathematically motivated dynamic trac assignment procedures...|$|R
50|$|The {{project was}} started by Jacques Gélinas. It is now {{maintained}} by Herbert Pötzl of Austria and {{is not related to}} the Linux Virtual Server project, which implements <b>network</b> <b>load</b> balancing.|$|E
50|$|The Endian Firewall {{includes}} {{support for}} load balancing, {{which means you}} can add another connection to the Internet from the red network; Endian Firewall then distributes the <b>network</b> <b>load</b> on both interfaces.|$|E
5000|$|In {{order to}} {{overcome}} this limitation, PSQM+ was developed by modifying the original algorithm. PSQM+ generates results that seem to more accurately reflect the adverse performance of [...] under realistic <b>network</b> <b>load</b> conditions.|$|E
50|$|Using SAN storage QoS is in {{contrast}} to using disk over-provisioning in a SAN environment. Over-provisioning can be used to provide additional capacity to compensate for peak <b>network</b> traffic <b>loads.</b> However, where <b>network</b> <b>loads</b> are not predictable, over-provisioning can eventually cause all bandwidth to be fully consumed and latency to increase significantly resulting in SAN performance degradation.|$|R
30|$|To {{solve the}} issues of QoS and <b>network</b> <b>loading</b> conditions, we propose a QoS-based dynamic FFR (QoS-DFFR) scheme for {{frequency}} band allocation to fulfill users' QoS requirements and to maximize per-user and per-sector throughput. In the proposed QoS-DFFR scheme, the concept of bonus bandwidth (BBW) is introduced to dynamically allocate the frequency bands to the PR zones according to QoS requirements and service priorities of the users. In this way, the QoS of the users can be guaranteed, and the per-user and per-sector throughput can be optimized, according to <b>network</b> <b>loading</b> conditions.|$|R
40|$|AbstractGiven {{a simple}} graph G(V,E) {{and a set}} of traffic demands between the nodes of G, the <b>Network</b> <b>Loading</b> Problem {{consists}} of installing minimum cost integer capacities on the edges of G allowing routing of traffic demands. In this paper we study the Capacity Formulation of the <b>Network</b> <b>Loading</b> Problem, introducing the new class of Tight Metric Inequalities, that completely characterize the convex hull of the integer feasible solutions of the problem. We present separation algorithms for Tight Metric Inequalities and a cutting plane algorithm, reporting on computational experience...|$|R
5000|$|Connectify is a {{software}} company focused on developing networking software for consumers. Connectify Hotspot, is {{a software}} router for Microsoft Windows. [...] and Connectify Dispatch, a <b>network</b> <b>load</b> balancing solution [...] and Speedify, a Link aggregation service.|$|E
50|$|In {{addition}} to the before mentioned, to configure a terminal server cluster, one needs a load-balancing technology such as <b>Network</b> <b>Load</b> Balancing (NLB) or DNS round robin. A load balancing solution will distribute client connections {{to each of the}} terminal servers.|$|E
50|$|Microsoft {{has also}} {{purchased}} {{a technology that}} it renamed <b>Network</b> <b>Load</b> Balancing (NLB) that allows for efficient utilization of multiple network cards.MS NLB can be configured in unicast or in multicast mode where in multicast mode you can enable IGMP snooping.|$|E
40|$|The use of high performancenetworking technologies, e. g., ATM networks, demands {{much from}} both {{operating}} systems and processors. During high <b>network</b> <b>loads,</b> user threads may be starved because theprocessorspendsall itstimehandlinginterrupts. To alleviate this problem, we propose using atwo level network interface servicing scheme that uses interrupts during low <b>network</b> <b>loads</b> to provide low latency,andpollingthreadsduringhighnetwork loadstoavoiduserthreadstarvation. In this paper, {{we examine the}} use of such a schemeondual-processorworkstationsrunningWindows NT connected by an ATM network. Performance evaluation of our multiprocessor prototype implementation shows that using our two level scheme can improve performance when used carefully. ...|$|R
50|$|As another example, {{enabling}} {{fault reporting}} for Internet network packet delivery failure will increase <b>network</b> <b>loading</b> when the <b>network</b> is already busy, {{and that will}} cause total network outage.|$|R
40|$|Abstract. Modeling mice in an {{effective}} and scalable manner {{is one of the}} main challenges in the performance evaluation of IP networks. Mice is the name that has become customary to identify short-lived TCP connections, that form the vast majority of packet flows over the Internet. On the contrary, long-lived TCP flows, that are far less numerous, but comprise many more packets, are often called elephants. Fluid models were recently proved to be a promising effective and scalable approach to investigate the dynamics of IP <b>networks</b> <b>loaded</b> by elephants. In this paper we extend fluid models in such a way that IP <b>networks</b> <b>loaded</b> by traffic mixes comprising both mice and elephants can be studied. We then show that the newly proposed class of fluid models is quite effective in the analysis of <b>networks</b> <b>loaded</b> by mice only, since this traffic is much more critical than a mix of mice and elephants. ...|$|R
50|$|This {{technology}} is critical when {{the cost of}} network expansion is prohibitively high and <b>network</b> <b>load</b> is not optimally balanced. The first part provides financial motivation for traffic engineering while the second part grants the possibility of deploying this technology.|$|E
5000|$|AVANU WebMux Network Traffic Manager, an {{application}} delivery <b>network</b> <b>load</b> balancing solution inserts the X-Forwarded-For header by default in One-Armed Single Network Mode {{and is available}} as a farm option in Two-Armed NAT, Two-Armed Transparent, and One-Armed Direct Server Return Modes.|$|E
5000|$|Many [...] {{exist and}} are used {{in a wide variety}} of applications. Careful {{selection}} of appropriate speech codec(s) is necessary to match system requirements. A list of common [...] and their associated PSQM/PSQM+ derived MOS values obtained under various <b>network</b> <b>load</b> conditions is available.|$|E
40|$|In {{this paper}} a new {{formulation}} of within-day dynamic traffic assignment is presented, where a dynamic user equilibrium is {{expressed as a}} fixed-point problem in terms of arc flow temporal profiles. Specifically, it is shown that, by extending to the dynamic case the concept of <b>network</b> <b>loading</b> map, one need not introduce the continuous <b>network</b> <b>loading</b> problem {{in order to ensure}} the temporal consistency of the supply model. On this basis it is possible to devise efficient assignment algorithms, based on piece-wise linear or piece-wise constant approximation of temporal profiles over predefined time intervals covering the period of analysis, whose complexity is equal to the one resulting in the static case multiplied by the number of time intervals. With specific reference to a Logit path choice model, an implicit path enumeration <b>network</b> <b>loading</b> procedure is obtained as an extension of Dial's algorithm; then, the fixed-point problem is solved through the Bather's method. (C) 2004 Elsevier Ltd. All rights reserved...|$|R
30|$|Number of forwarders: {{the number}} of {{vehicles}} which forward the message in a round of broadcasting. Generally, {{a smaller number of}} forwarders indicate less delay of message and lower <b>network</b> <b>loads.</b>|$|R
5000|$|F5 <b>Networks</b> <b>load</b> balancers support [...] {{one-armed}} and multi-armed configurations. Big-IP {{may also}} be configured to delegate trust to proxies more than one hop away, and accept custom X-Forwarded-For headers from other sources.|$|R
