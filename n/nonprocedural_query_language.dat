2|7906|Public
40|$|We propose an {{object-oriented}} {{data model}} that generalizes the relational, hierarchical, and network models. A database scheme {{in this model}} is a directed graph, whose leaves represent data and whose internal nodes represent connections among the data. Instances are constructed from objects, which have separate names and values. We define a logic for the model, and describe a <b>nonprocedural</b> <b>query</b> <b>language</b> {{that is based on}} the logic. We also describe an algebraic query language and show that it is equivalent to the logical language. A preliminary version of this paper, under the title "A new approach to database logic", appeared in Proc. 3 rd ACM Symp. on Principles of Database Systems, Waterloo, April 1984, pp. 86 - 96. For a more extensive coverage of the material presented here the reader is referred to the first author's Ph. D. dissertation The logical data model: a new approach to database logic, Dept. of Computer Science, Stanford University, 1985. 1 1. Introduction Research in da [...] ...|$|E
40|$|This paper {{presents}} some {{experimental results}} {{on the performance of}} distrihuted join algorithms in a local nctwol-k. Eight different join methods have been imple-mented in an experimental distrihuted system, the Cry-seal multicomputcr, and tested for join queries with a variety of relation sizes, join selcctivitics, and join column value distributions. The results obtained indi-cate that pipelined join methods outperform sequential methods over a wide range of join queries. II was also found that the communications costs in a local network environment arc not a dominant factor with rcspcct IO performance, and that shipping a whole relation from one site to another is not an unreasonahlc dccison {{as long as it is}} done in the framework 01 ‘ pipelined algo-rithms. l’wo pipelincd variants 01 ‘ a centralized nested loops join algorithm (with an index) wet-c found to per-form well lor many oi ~hc queries tested. 1. INTRODI’CTION In relational datahasc systems, qucrics arc typically posed in a high-lcvcl, <b>nonprocedural</b> <b>query</b> <b>language</b> hascd on the relational calculus such as QUEL or SQL [UllmX 2]. It is the task of Ihc query optimizer to decompose the query into primitive relational operations such as selection, prqjcction and join. The join opera-tor has attracted a great deal of research intcfest since the costs of availahlc join methods tend to vary widel...|$|E
50|$|Object <b>Query</b> <b>Language</b> (OQL). The ODMG OQL was a {{declarative}} (<b>nonprocedural)</b> <b>language</b> for <b>query</b> and updating. It used SQL as a basis, where possible, though OQL supports {{more powerful}} object-oriented capabilities.|$|R
40|$|This thesis proposes an {{object-oriented}} <b>query</b> <b>language</b> that is {{more powerful}} than many existing <b>query</b> <b>languages.</b> The language is formally specified and its expressive power is demonstrated by giving four translation schemes from other prominent objectoriented <b>query</b> <b>languages.</b> Further, this <b>query</b> <b>language</b> can be supported by a query algebra and both the <b>query</b> <b>language</b> and <b>query</b> algebra can be optimised using meaning preserving transformation rules. Object-Oriented <b>Query</b> <b>Languages.</b> The functional requirements of high-level objectoriented <b>query</b> <b>languages</b> are identified and they combine as well as supplement features found in existing object-oriented <b>query</b> <b>languages.</b> Effectively they formulate a query model against which existing <b>query</b> <b>languages</b> can be evaluated and compared. An evaluation of four representative <b>query</b> <b>languages</b> chosen from research prototypes and commercial products shows that none satisfies all the requirements. On {{the basis of the}} requirements a new <b>query</b> <b>language,</b> obje [...] ...|$|R
50|$|Broadly, <b>query</b> <b>languages</b> can be {{classified}} according to whether they are database <b>query</b> <b>languages</b> or information retrieval <b>query</b> <b>languages.</b> The difference is that a database <b>query</b> <b>language</b> attempts to give factual answers to factual questions, while an information retrieval <b>query</b> <b>language</b> attempts to find documents containing information that is relevant to an area of inquiry.|$|R
5000|$|CQLF (CODYASYL <b>Query</b> <b>Language,</b> Flat) is a <b>query</b> <b>language</b> for CODASYL-type databases; ...|$|R
5000|$|TMQL Topic Map <b>Query</b> <b>Language</b> is a <b>query</b> <b>language</b> for Topic Maps; ...|$|R
40|$|Since XML {{seems to}} be the next great wave on the web, several <b>query</b> <b>languages</b> for XML have been proposed. Unfortunately, none of these {{proposals}} comes even close to fulfill the requirements for such a <b>query</b> <b>language.</b> We review the requirements for a <b>query</b> <b>language</b> for XML and propose a new <b>query</b> <b>language,</b> YAXQL, which fulfills these requirements...|$|R
5000|$|The <b>query</b> <b>language</b> was {{designed}} to perform complex queries in as simple a manner as possible. The syntax is superficially reminiscent of information retrieval <b>query</b> <b>languages</b> such as CQL which are characterized as less complicated than traditional database <b>query</b> <b>languages</b> such as SQL. The <b>query</b> <b>language</b> always return object identifiers based on tag values, using the predicates below: ...|$|R
50|$|Two <b>query</b> <b>languages</b> are supported. The JDO <b>Query</b> <b>Language</b> (JDOQL), {{which is}} based on Java syntax, and the JPA <b>Query</b> <b>Language</b> (JPQL), {{which is based}} on SQL syntax. JPA 2 {{criteria}} queries are also supported.|$|R
40|$|CHOOSING A DATABASE <b>QUERY</b> <b>LANGUAGE</b> A {{methodology}} {{is presented}} for selecting <b>query</b> <b>languages</b> suitable for certain user types. The method {{is based on}} a trend model of <b>query</b> <b>language</b> development on the dimensions of functional capabilities and usability. Expected developments are exemplified by the description of &quot;second generationtt database <b>query</b> <b>languages.</b> From the trend model are derived: a classification scheme for query languages; a criterion hierarchy for <b>query</b> <b>language</b> evaluation; a comprehensive classification scheme of <b>query</b> <b>language</b> users and their requirements; and recommendations for allocating language classes to user types. The method integrates the results of existing human factors studies and provides a structured framework for future research...|$|R
40|$|We {{present an}} {{implemented}} XML data model and a new, simplified <b>query</b> <b>language</b> for multi-level annotated corpora. The new <b>query</b> <b>language</b> involves automatic conversion of queries into the underlying, more complicated MMAXQL <b>query</b> <b>language.</b> It supports <b>queries</b> for sequential and hierarchical, but also associative (e. g. coreferential) relations. The simplified <b>query</b> <b>language</b> {{has been designed}} with non-expert users in mind. ...|$|R
5000|$|Molecular <b>Query</b> <b>Language</b> - <b>query</b> <b>language</b> {{allowing}} also numerical properties, e.g. physicochemical {{values or}} distances ...|$|R
50|$|The {{most common}} <b>query</b> <b>language</b> {{used with the}} {{relational}} model is the Structured <b>Query</b> <b>Language</b> (SQL).|$|R
40|$|XML {{has become}} the {{standard}} tool {{for the next generation}} web document format. A <b>query</b> <b>language</b> for extracting information from the XML documents is worthmentioning. <b>Query</b> <b>languages</b> from different communities and individuals have been proposed. The World Wide Web Consortium(W 3 C) is a leading contributor in this field. We have discussed the different aspects of some selected XML <b>query</b> <b>languages</b> and reviewed the limitations of the selected <b>query</b> <b>languages.</b> As an outcome of our work, we have tried to recommend the necessary functionalities and requirements for a possible new <b>query</b> <b>language...</b>|$|R
40|$|AbstractXML is fast {{emerging}} as the dominant standard for information exchange on the World Wide Web. The ability to intelligently query XML data becomes increasingly important. Several <b>query</b> <b>languages</b> are proposed in the literature, {{some of them are}} textual <b>query</b> <b>languages</b> and some others are graphical <b>query</b> <b>languages.</b> In this article, we will survey some of graphical <b>query</b> <b>languages</b> for <b>querying</b> and restructuring XML data. Also, we will conduct a comparative study between these languages based on a set of requirements and features that an XML <b>query</b> <b>language</b> should have...|$|R
5000|$|SQL - a {{relational}} <b>query</b> <b>language</b> {{developed for}} IBM's System R; now the standard RDBMS <b>query</b> <b>language</b> ...|$|R
30|$|Associated with JPA is its uniform <b>query</b> <b>language</b> {{called the}} Java Persistence <b>Query</b> <b>Language</b> (JPQL) [24]. It is a {{portable}} <b>query</b> <b>language</b> which works {{regardless of the}} underlying database. JPQL defines queries with complex search expressions on entities, including their relationships [24].|$|R
5000|$|A <b>query</b> <b>language,</b> such as Structured <b>Query</b> <b>Language</b> (SQL), is used {{to prepare}} the queries. SQL is an American National Standards Institute (ANSI) {{standardized}} <b>query</b> <b>language</b> developed specifically to write database queries. Each DBMS may have its own language, but most relational [...]|$|R
50|$|Similar {{considerations}} {{apply for}} <b>query</b> <b>languages</b> on {{other types of}} data, e.g. XML <b>query</b> <b>languages</b> such as XQuery.|$|R
5000|$|Java Persistence <b>Query</b> <b>Language</b> (JPQL): The <b>query</b> <b>language</b> {{used by the}} Java Persistence API and Hibernate {{persistence}} library ...|$|R
50|$|Windows Management Instrumentation <b>Query</b> <b>Language</b> (WQL) is Microsoft's {{implementation}} of the CIM <b>Query</b> <b>Language</b> (CQL), a <b>query</b> <b>language</b> for the Common Information Model (CIM) standard from the Distributed Management Task Force (DMTF). It is a subset of ANSI standard SQL with minor semantic changes.|$|R
5000|$|Poliqarp <b>Query</b> <b>Language</b> is {{a special}} <b>query</b> <b>language</b> {{designed}} to analyze annotated text. Used in the Poliqarp search engine; ...|$|R
40|$|A {{methodology}} {{is presented}} for selecting <b>query</b> <b>languages</b> suitable for certain user types. The method {{is based on}} a trend model of <b>query</b> <b>language</b> development on the dimensions of functional capabilities and usability. Expected developments are exemplified by the description of "second generationâ database <b>query</b> <b>languages.</b> From the trend model are derived: a classification scheme for query languages; a criterion hierarchy for <b>query</b> <b>language</b> evaluation; a comprehensive classification scheme of <b>query</b> <b>language</b> users and their requirements; and recommendations for allocating language classes to user types. The method integrates the results of existing human factors studies and provides a structured framework for future research. ...|$|R
40|$|This paper {{reports on}} a pragmatic <b>query</b> <b>language</b> for Racer. The {{abstract}} syntax and semantics of this <b>query</b> <b>language</b> is defined. Next, the practical relevance of this <b>query</b> <b>language</b> is shown, applying the query answering algorithms {{to the problem of}} consistency maintenance between object-oriented design models. ...|$|R
40|$|This paper {{reviews the}} human factors {{literature}} dealing with <b>query</b> <b>languages.</b> It covers natural and fonnal <b>query</b> <b>languages,</b> and such specific topics as quantifiers, data organiza-tion, mixed initiative dialogues, abbreviations, experimental evaluation of <b>query</b> <b>language</b> features, {{and research on}} person-to-person communication. Also discussed are issues to consider when detennining a <b>query</b> <b>language's</b> suitability. A summary of the findings, in the fonn of a compendium of design recommendations, {{is presented as a}} result of this review...|$|R
5000|$|JPQL {{is based}} on the Hibernate <b>Query</b> <b>Language</b> (HQL), an earlier {{non-standard}} <b>query</b> <b>language</b> included in the Hibernate object-relational mapping library.|$|R
50|$|The Java Persistence <b>Query</b> <b>Language</b> (JPQL) is a platform-independent {{object-oriented}} <b>query</b> <b>language</b> {{defined as}} part of the Java Persistence API (JPA) specification.|$|R
40|$|Higher-order transformations are {{ubiquitous}} within data management. In relational databases, higher-order queries {{appear in}} numerous aspects including query rewriting and query specification. In XML databases, higher-order functions are natural {{due to the}} close connection of XML <b>query</b> <b>languages</b> with functional programming. The thesis investigates higher-order <b>query</b> <b>languages</b> that combine higher- order transformations with ordinary database <b>query</b> <b>languages.</b> We de- fine higher-order <b>query</b> <b>languages</b> based on Relational Algebra, Monad Algebra, and XQuery. The thesis also studies basic problems for these <b>query</b> <b>languages</b> including evaluation, containment, and type inference. We show that even though evaluating these higher-order <b>query</b> <b>languages</b> is non-elementary, there are subclasses that are polynomially reducible to evaluation for ordinary <b>query</b> <b>languages.</b> Our theoretical analysis is complemented by an implementation of the languages, our Higher-Order Mapping Evaluation System (HOMES). The system integrates querying and query transformation in a single higher- order <b>query</b> <b>language.</b> It allows users to write queries that integrate and combine query transformations. The system is implemented on top of traditional database management systems. The evaluation algorithm is optimized {{by a combination of}} subquery caching techniques from relational and XML databases and sharing detection schemes from functional programming. </p...|$|R
40|$|A “decompilation ” {{algorithm}} is developed to transform a program written with the procedural operations of CODASYL DML into one which interacts with a relational system via a <b>nonprocedural</b> <b>query</b> specification. An Access Path Model is introduced {{to interpret the}} semantic accesses performed by the program. Data flow analysis is used to determine how FIND operations implement semantic accesses. A sequence of these is mapped into a relational query and embedded into the original program. The class of programs for which the algorithm succeeds is characterized. Categories and Subject Descriptors: H. 2. 3 [Database Management]: Languages [...] data manipuh-tion <b>languages</b> (DML); <b>query</b> languages; CODACYL; H. 2. 5 [Database Management]: Heteroge-neous Databases-program translatio...|$|R
40|$|We {{proposed}} in [7] a nested relational calculus and a nested relational algebra based on structural recursion [6, 5] and on monads [27, 16]. In this report, we describe relative set abstraction as our third nested relational <b>query</b> <b>language.</b> This <b>query</b> <b>language</b> {{is similar to}} the well known list comprehension mechanism in functional programming languages such as Haskell [ll], Miranda [24], KRC [23], etc. This language is equivalent to our earlier <b>query</b> <b>languages</b> both in terms of semantics and in terms of equational theories. This strong sense of equivalence allows our three <b>query</b> <b>languages</b> to be freely combined into a nested relational <b>query</b> <b>language</b> that is robust and user-friendly...|$|R
50|$|The Topic Map <b>Query</b> <b>Language</b> (TMQL) is a <b>query</b> <b>language</b> for topic maps, a data {{representation}} similar to but more general than RDF.|$|R
40|$|Abstract. In this paper, {{a sample}} set of 510 simple {{searches}} from the TEL action log 2009 is analyzed for query content and <b>query</b> <b>language.</b> More {{than half of}} the queries are for named entities, which has consequences for <b>query</b> <b>language</b> disambiguation. A manual identification of <b>query</b> <b>language</b> finds that often a definite language cannot be determined, because many named entities are not translated. Problems and challenges for <b>query</b> category and <b>language</b> identification are discussed. Further analysis shows that IP address and interface language are not very strong indicators for determining the <b>query</b> <b>language...</b>|$|R
40|$|AbstractIn {{this paper}} we {{investigate}} {{how to use}} logic programming (in particular, Prolog) as <b>query</b> <b>language</b> against OWL resources. Our <b>query</b> <b>language</b> {{will be able to}} retrieve data and meta-data about a given OWL based ontology. With this aim, firstly, we study how to define a <b>query</b> <b>language</b> based on a fragment of Description Logic, then we show how to encode the defined <b>query</b> <b>language</b> into Prolog by means of logic rules and finally, we identify Prolog goals which correspond to queries...|$|R
40|$|Abstract. The {{database}} usability {{experience has}} shown that visual <b>query</b> <b>languages</b> tend to be superior to textual languages in many aspects. By applying this principle {{in the context of}} ontologies, we present GLOO, a graphical <b>query</b> <b>language</b> for OWL-DL ontologies. GLOO maps diagrammatic queries to DL based <b>query</b> <b>languages</b> such as nRQL, which is offered by the OWL-DL reasoner Racer. GLOO hides the complexity of a DL <b>query</b> <b>language</b> from users and allows them to query OWL ontologies with less difficulty. ...|$|R
40|$|Paper no. 036 A {{range of}} <b>query</b> <b>languages</b> {{have been used}} or {{developed}} to query partial information from Building Information Model (BIM) -based databases and files in recent decades. This paper aims to investigate the applicability of existing BIM <b>query</b> <b>languages</b> to extract necessary information from BIMs for energy analysis. A total of 16 <b>query</b> <b>languages</b> categorized into two groups, namely programming or generic <b>query</b> <b>language,</b> and domain specific <b>query</b> <b>language,</b> are summarized through extensive literature review. The key requirements of BIM data query for energy analysis are also developed, which include MVD based query support, custom query support, and easiness to construct queries. Taking these requirements as the criteria, {{the applicability of the}} 16 <b>query</b> <b>languages</b> is compared and analyzed. This paper then proposes some suggestions for developing effective and efficient building information query mechanisms for energy analysis. postprin...|$|R
