2|50|Public
5000|$|A {{male and}} three female S. blanfordi were netted in a {{secondary}} habitat at 1020 m elevation. In May 1997, an adult female was lactating, two immature female fledglings and a subadult were observed at Doi Suthep. The bats {{were found in}} the nets the morning, presumably caught between the last <b>net</b> <b>check</b> at midnight and dawn. All S. blanfordi were caught approximately 0.8 m to 1.5 m above the ground. One site had about 50% canopy cover, relatively dense undergrowth with saplings and the net was set across a fire break on a slope. The other catching site had about 90% canopy cover, relatively sparse undergrowth with some seedlings, ginger and Pandanus plants. The net was set between two clumps of banana plants on a slope. During the survey, the night temperature was cool (approximately 20oC) and misty around daybreak. There is little ecological information recorded for this species (Lekagul and McNeely 1977).|$|E
40|$|This {{study focused}} on soil {{bioengineering}} for stream bank stabilization. Both vegetative check dams and wire <b>net</b> <b>check</b> dams along with vegetation were used during May-June 2009. After three growing seasons, {{the banks of the}} ephemeral stream were almost fully stabilized. The effects of river edge cuttings were highly reduced, and flow channels of the river were also narrowed. Vegetation based solutions are found to be more effective than the mechanical methods of stream bank stabilization. Vegetation application on flood-damaged bare ground was also found to be very successful. Furthermore, some plants species showed almost equal growth performances on both flood-affected and unaffected bare ground. (C) 2014 Elsevier B. V. All rights reserved...|$|E
40|$|Structural non-interference is a semi-static {{technique}} defined over Petri <b>nets</b> to <b>check</b> {{the absence}} of illegal information flows. This paper presents the main algorithmic features of this new technique and its implementation in a software tool, called the Petri Net Security Checker. JRC. G. 6 -Security technology assessmen...|$|R
40|$|Pelagic Longline Fishery: {{close the}} Northeast Distant Statistical Reporting Area, require any gangion length to be 110 percent of any {{floatline}} length if the total length of any gangion plus the total length of any floatline {{is less than}} 100 meters, require the possession and use of corrodible non-stainless steel hooks, require that lethal sea turtle take be reported within 48 hours of returning to port, post sea turtle handling and release guidelines in the wheelhouse. Bottom Longline Fishery: post sea turtle handling and release guidelines in the wheelhouse. Shark Gillnet Fishery: require that both the observer and vessel operator are responsible for sighting whales and contacting the National Marine Fisheries Service, require <b>net</b> <b>checks</b> every 0. 5 to 2 hours and removal of any captured sea turtles or marine mammals...|$|R
40|$|Abstract. Algebraic Petri nets is a {{well suited}} {{formalism}} to represent the behavior of concurrent and distributed systems by handling complex data. For the analysis of systems modelled in Algebraic Petri <b>nets,</b> model <b>checking</b> and testing are used commonly. Petri nets slicing is getting an attention recently to improve the analysis of systems modelled in Petri nets or Algebraic Petri nets. This work is oriented to define Algebraic Petri nets slicing and implement it in a verification tool. ...|$|R
40|$|Despite their wide use in ornithological surveys, point {{counts and}} mist nets follow {{protocols}} developed in temperate regions, with {{little attention to}} possible modifications for tropical systems. Using these methods on a 3 -month basis from December 2009 -January 2011 in two forest fragments in southeastern Brazil, we wished to evaluate how long these locations needed to be surveyed with point counts for a relatively complete avifaunal inventory (at least 90 % of all species and contacts), and if mist net hourly captures can equally detect numbers of species and individuals. Daily counting with four 20 -min points during five consecutive days in a rain forest (MC) detected 90 % of the estimated species richness after 20 h (60 20 -min point counts), while 17 h (51 20 -min point counts) did not detect 90 % of the estimated species richness in a semideciduous forest (IT). The first 5 min of point counting in MC (63 % of all species) and in IT (65 %) detected significantly more species than the remaining minutes, but it took 15 min to accumulate 86 % of all contacts in both forests. Consecutive 5 -day mist netting (~ 9 h/day) resulted in 70. 5 net-h/m² (MC) and 74. 8 net-h/m² (IT) of sample effort, but 80 - 85 % of the estimated number of species was obtained. Although accumulation curves showed no tendency towards stabilization {{of the number of}} observed species, the estimated number of species began to stabilize after the first 20 h in both forests. There {{was no significant difference in}} capture rates for both species richness and abundance among hourly <b>net</b> <b>checks,</b> but a trend in which these parameters were highest between the second and fourth checks of the day was observed. A 3 -day (43. 8 and 63. 3 net-h/m²) mist netting section was enough to record 90 % of the species captured during five days in MC and IT, respectively, while precise enough not to jeopardize species richness estimation. The number of individuals, however, decreased order 34 % in MC and 38 % in IT under the same conditions. Considering the number of <b>net</b> <b>checks,</b> 90 % of the estimated species richness was captured until the 1100 h check in both remnants, while 67 % of all individuals were captured until this same hour. Our results demonstrate that surveying the avifauna in these locations will require unique approaches, which must be tested before the beginning of point counting or net opening...|$|R
40|$|Abstract. We {{present a}} Petri net {{semantics}} for the Business Process Execution Language for Web Services (BPEL). Our semantics covers the standard behaviour of BPEL {{as well as}} the exceptional behaviour (e. g. faults, events, compensation). The semantics is implemented as a parser that translates BPEL specifications into the input language of the Petri <b>net</b> model <b>checking</b> tool LoLA. We demonstrate that the semantics is well suited for computer aided verification purposes. Key words: Business process modeling and analysis, Formal models in busines...|$|R
40|$|Social Media {{and the way}} it effects {{adolescents}} is {{an important}} topic to have a better understanding of. In a fast growing frame of life where everything is a click or swipe away, we need to know what exactly we are dealing with in the virtual world, especially the worlds of social media sites. There have already been reforms in the typical dynamic of the average teen in the span of 10 - 15 years. Smart phones have also sped things up and attributed to how dependant teens are on being connected to the <b>net</b> and <b>checking</b> their profiles...|$|R
40|$|This paper {{presents}} {{an approach to}} model features and function nets of automotive systems comprehensively. In order {{to bridge the gap}} between feature requirements and function nets, we describe an approach to describe both using a SysML-based notation. If requirements on the automotive system are changed by several developers responsible for different features, it is important for developers to have a good overview and understanding of the functions affected. We show that this can be comprehensively modeled using so called "feature views". In order to validate these views against the complete function <b>nets,</b> consistency <b>checks</b> are provided. Comment: 6 pages, 4 figure...|$|R
40|$|We {{investigated}} the local bird community in Central Sulawesi (Indonesia), with focus on insectivorous {{species in the}} agroforestry landscapes adjacent to the Lore Lindu National Park. All study sites were situated at {{the northern tip of}} Napu Valley in Central Sulawesi, Indonesia. After an initial mapping of the study area, we selected 15 smallholder cacao plantations as sites for our study in March 2010. These sides were mainly used for bird and bat exclosure experiments. All sited were situated along a local gradient (shade availability on each plantation) and a landscape gradient (distance to primary forest), which were independent from each other. In September 2010 and from February until June 2011, we assessed the bird community on our 15 study sites using monthly point count and mist netting sampling. Point count (20 minutes between 07 am and 10 am and in between the <b>net</b> <b>checking</b> hours) and mist netting surveys (12 hours, between 05 : 30 am and 17 : 30 pm) were conducted simultaneously but only once per month on each study site, to avoid habituation of the local bird community to our surveys. Further, point counts were conducted at least 100 m apart from the mist netting sites, to avoid potential disturbance between the two methods. We discarded all observations beyond 50 m (including those individuals that flew over the canopy) from the statistical analysis, as well as recaptures of individuals within identical mist netting rounds...|$|R
40|$|AbstractIn {{this work}} we {{introduce}} a new formal model for software components supporting behavioral interpretability based on temporal logic, Petri <b>nets,</b> model <b>checking,</b> and an assume–guarantee strategy to specify and reason about the composition of concurrent component systems. The formal specification and verification strategies, methods, and techniques presented in this work {{contribute to the development}} of more dependable component-based software systems, in a modular way. An approach based on two complementary formalisms, Hierarchical Colored Petri Nets (HCPN) and temporal logic, is introduced. HCPN are used to visualize the structure and model the behavior of software architectures and components, and temporal logic is used to specify the required properties of software architectures and component interfaces...|$|R
40|$|Abstract. This paper {{presents}} {{a framework for}} the verification of UML models. Our approach is to build meta-models for the different UML diagrams and translate them into formalisms (whose syntax is also specified with a meta-model) in which properties of interest can be proved. The translation (denotational semantics) {{as well as the}} formalisms operational semantics are formally described by means of graph grammars. We show the implementation of these concepts in the Multi-Paradigm tool AToM 3 together with an example in which we translate a UML design (composed of Statecharts, Class and Sequence diagrams) into Petri nets for subsequent verification using model checking. Keywords: Graph Rewriting, Meta-Modelling, UML, Petri <b>Nets,</b> Model <b>Checking.</b> ...|$|R
40|$|Although {{during the}} last decade in several papers {{applicability}} of Linear Logic (LL) theorem proving to AI planning has been emphasised, there is still no experimental data nor prototype available, which would allow to justify performance of LL planning. In this paper we present results demonstrating that performance of a Linear Logic planner may be comparable to state-ofthe-art domain-independent planners. While planning with LL, we first abstract a planning problem propositionally. Then the propositional problem is translated to a Petri net and skeleton plans are computed by applying Petri <b>net</b> reachability <b>checking.</b> After a skeleton plan, consisting of not instantiated operators, has been generated, we instantiate the plan. Suitable constants for operators are determined by heuristic-driven constraint solving...|$|R
40|$|Abstract. The paper {{provides}} {{new data}} on the occurrence and ecology of bats inhabiting the Central Balkan Mts. in Bulgaria. The study covers {{the territory of the}} National Park “Central Balkan ” and some adjacent areas. The data referred are results of the first investigation of bats in the area carried out from August to December in 1995 – 1997 by using mist <b>netting</b> and <b>checking</b> of potential roosts as caves, galleries, buildings, etc. Findings of three bat species (Rhinolophus ferrumequinum, R. hipposi-deros, Barbastella barbastellus) were reported from the area previously. The occur-rence of these species has been confirmed in the present research and 15 species are further recorded for first time. Totally 18 bat species are recorded from 18 locali...|$|R
40|$|Abstract. The paper {{deals with}} an {{adaptation}} of the Bounded Model Checking methods for timed systems, developed for timed automata, {{to the case of}} time Petri nets. In this work, we focus on distributed time Petri <b>nets</b> and reachability <b>checking,</b> but the methods enable also an efficient verification of ACTL ∗ and TACTL properties. A theoretical description is supported by some experimental results, generated using an extension of the model checker VerICS. ...|$|R
5000|$|On 28 November 2013, Bryzgalov {{made his}} first {{start of the season}} with a 3-0 shutout win over the Nashville Predators, {{stopping}} all 33 shots. After coming in a relief role the previous night, Bryzgalov posted his 31st career shutout. Coach Dallas Eakins stated after the game, [...] "And he picked up right where he left off last game. I thought he was solid. He looked big in the <b>net,</b> everything. <b>Check</b> marks right across the page for him." [...] Starting goaltender, Devan Dubnyk, sat in as Bryzgalov's backup for the night. However, Bryzgalov was injured only two games later, temporarily halting his bid to supplant Dubnyk to become the Oilers starter. However, Dubnyk was then traded to the Nashville Predators in January, which made Bryzgalov Edmonton's new starter until he was traded.|$|R
40|$|In this paper, Timed Workflow Nets are introduced, and a {{characterization}} of the soundness property for them is provided. This characterization is based on boundedness and liveness as for classical workflow nets. It is shown that the properties of boundedness and liveness for timed Petri nets can be reduced in linear time to the same properties for untimed Petri nets. Therefore, the soundness property for timed workflow <b>nets</b> can be <b>checked</b> as efficiently as for workflow nets. ...|$|R
40|$|Abstract. IDD-MC is a {{symbolic}} analysis tool for bounded stochastic Petri nets with extended arcs. Its engine {{is based on}} Interval Decision Diagrams and facilitate the validation of standard Petri <b>net</b> properties, model <b>checking</b> the Computation Tree Logic (CTL) and the Stochastic Continuous Logic (CSL). In this paper we give an informal overview of the currently implemented analysis techniques and report on the most recent extension: the evaluation of rewards. We present some experimental results which show the efficiency of our implementation. ...|$|R
30|$|During 2002 to 2010, a set net (with {{government}} permission) was deployed at the Xupu reach, Changshu City {{to monitor}} juveniles from upstream stretches (Figure 2). The river here is comparatively narrow, so {{the density of}} juveniles is higher than in other areas. The net employed was 2, 377 m long, 750 m wide, and 4 m deep with 16 net bags and mesh size of 4 [*]cm (measured from knot to knot). The effective net height varied with the water level but was generally at 2.5 [*]m. The <b>net</b> was <b>checked</b> every day except in extremely bad weather, and fish were counted, measured (total and standard lengths), weighed, and released. Any injured fish were transported to the rescue center for treatment before release. [Li et al. (2011]) have reported the results of monitoring during 2002 to 2009.|$|R
40|$|The {{aim of the}} {{research}} domain known as process mining is to use process discovery to construct a process model as an abstract representation of event logs. The goal is to build a model (in terms of a Petri net) that can reproduce the logs under consideration, and does not allow different behaviours compared with those shown in the logs. In particular, process mining aims to verify the accuracy of the model design (represented as a Petri <b>net),</b> basically <b>checking</b> whether the same net can be rediscovered. However, the main mining methods proposed in the literature have some drawbacks: the classical α-algorithm is unable to rediscover various nets, while the region-based approach, which can mine them correctly, is too complex. In this paper, we compare different approaches and propose some ideas to counter the weaknesses of the region-based approach...|$|R
40|$|International audienceTo {{determine}} the failing net {{out of a}} list of potential candidates provided by the ATPG diagnostic tool, probing techniques such as TRE or LVP are commonly used. To use these techniques, complex electrical setups using tester have to be implemented to control the failing net to its failing value. This paper present an alternative technique to <b>check</b> <b>net</b> integrity and to orient failure location based on optical techniques. Experimental results and simulation presented in this study demonstrate the relevance and the efficiency of this technique...|$|R
5000|$|A {{few months}} ago, I posted {{articles}} relating to starting a publicdomain version of DOS. The general {{support for this}} at the time wasstrong, and many people agreed with the statement, [...] "start writing!"So, I have...Announcing the first effort to produce a PD-DOS. I have written up a"manifest" [...] describing the goals of such a project and an outline ofthe work, {{as well as a}} [...] "task list" [...] that shows exactly what needs to bewritten. I'll post those here, and let discussion follow.If you are thinking about developing, or have ideas or suggestions forPD-DOS, I would appreciate direct email to me. If you just want todiscuss the merits or morals of writing a PD-DOS, I'll leave that tothe <b>net.</b> I'll <b>check</b> in {{from time to time to}} see how the discussion isgoing, and maybe contribute a little to what promises to be a verypolarized debate! :->I am excited about PD-DOS, and I am hoping I can get a group started! ...|$|R
5000|$|A seller {{has offered}} a {{property}} at a sales price of $450,000 with a $10,000 decorative allowance [...] "with acceptable offer". A buyer makes a full-price offer, {{and all the other}} terms of the offer are acceptable to the Seller. The sales price on the contract would be $450,000, but $10,000 would be taken from the seller's proceeds at closing and used to cover some of the buyer's closing costs, so the seller's net sales price would in effect be $440,000. That amount, minus commission, seller's closing costs, and their loan payoff would be their <b>net</b> proceeds (the <b>check</b> they receive at closing).|$|R
40|$|Abstract. The {{perspective}} {{directions in}} evaluating network security are simu-lating possible malefactor’s actions, building {{the representation of}} these actions as attack graphs (trees, <b>nets),</b> the subsequent <b>checking</b> of various properties of these graphs, and determining security metrics which can explain possible ways to increase security level. The paper suggests {{a new approach to}} security evaluation based on comprehensive simulation of malefactor’s actions, con-struction of attack graphs and computation of different security metrics. The approach is intended for using both at design and exploitation stages of com-puter networks. The implemented software system is described, and the exam-ples of experiments for analysis of network security level are considered...|$|R
40|$|Process mining {{encompasses}} the research area which {{is concerned with}} knowledge discovery from event logs. One common process mining task focuses on conformance checking, comparing discovered or designed process models with actual real-life behavior as captured in event logs {{in order to assess}} the “goodness” of the process model. This paper introduces a novel conformance checking method to measure how well a process model performs in terms of precision and generalization with respect to the actual executions of a process as recorded in an event log. Our approach differs from related work {{in the sense that we}} apply the concept of so-called weighted artificial negative events towards conformance checking, leading to more robust results, especially when dealing with less complete event logs that only contain a subset of all possible process execution behavior. In addition, our technique offers a novel way to estimate a process model’s ability to generalize. Existing literature has focused mainly on the fitness (recall) and precision (appropriateness) of process models, whereas generalization has been much more difficult to estimate. The described algorithms are implemented in a number of ProM plugins, and a Petri <b>net</b> conformance <b>checking</b> tool was developed to inspect process model conformance in a visual manner. status: publishe...|$|R
40|$|A {{class of}} Petri nets (called type/ Petri nets in this paper) whose {{reachability}} sets {{can be characterized}} by integer linear programming is defined. Such Petri nets include the classes of conflict-free, normal, BPP, trap-circuit and extended trap-circuit Petri nets, which have been extensively studied in the literature. We demonstrate that being of type is invariant {{with respect to a}} number of Petri net operations, using which Petri nets can be pieced together to form larger ones. We also show in this paper that for type Petri <b>nets,</b> the model <b>checking</b> problem for a number of temporal logics is reducible to the integer linear programming problem, yielding an NP upper bound for the model checking problem. Our work supplements some of the previous results concerning model <b>checking</b> for Petri <b>nets...</b>|$|R
40|$|Abstract — This paper {{presents}} {{conditions under}} which a type of Petri net model with resources, called System of Transition Processes with Resources (STPR), can produce a given event stream. In particular, a necessary condition is given for the event stream to be produced based on checking {{upper and lower bounds}} of the marking on the Petri <b>net.</b> Algorithms for <b>checking</b> the condition are presented; the computational complexity of checking the condition is polynomial in the number of places and transitions the first time it is checked for a particular model, and linear in the number of transitions when the model is checked for subsequent event streams. An example is presented showing how this condition can be used, together with a model generation approach, for anomaly detection in manufacturing systems. I. MOTIVATION AND PROBLEM DESCRIPTIO...|$|R
40|$|Series: Lecture Notes in Business Information Processing, Vol. 191 Barjis, Joseph, Pergl, Robert (Eds.) Distributed {{systems are}} promisingly used in context of cross {{organizational}} enterprises. To develop these systems, Web services forman essential and wide accepted technology {{because they provide}} a significant level of platform independency and autonomy. Services are generally designed to interact with other services to form larger applications. In order to interact correctly with each other, Web services have to be compatible. This include not only composability of the involved services butalso the correct execution of the overall composite service. In this context,we suggest in this paper to study the compatibility of Web services in different aspects {{and to provide a}} formal approach to characterize and verify this property. This approach is straightforward since it combines Petri <b>nets</b> and model <b>checking</b> techniques...|$|R
40|$|We {{present a}} Colored Petri Net {{approach}} to model check three atomicity properties for the NetBill electronic cash system. We {{verify that the}} protocol satisfies money atomicity, goods atomicity and certified delivery {{in the presence of}} potential site or communication failures and all possible unilateral transaction abort cases. Model checking is performed in CPN Tools, a graphical ML-based tool for editing and analyzing Colored Petri Nets (CP-nets). In case of property violation, protocol failure analysis aims in exploring all property violation scenarios, in order to correct the protocol's design. Model checking exploits the provided state space exploration functions and the supported Computation Tree like temporal logic (CTL). On the other hand, protocol failure analysis is performed by inspection of appropriately selected markings and if necessary, by interactively simulating certain property violation scenarios. In ecommerce, Colored Petri <b>Net</b> model <b>checking</b> has been used in verifying absence of deadlocks, absence of livelocks and absence of unexpected dead transitions, as well as in verifying a protocol against its service. To the best of our knowledge, our work is the first attempt to employ CP-nets for model checking atomicity properties. We believe that the described approach can also be applied in model checking other functional properties that are not directly related to the structural properties of the generated state space graph...|$|R
40|$|A new {{unfolding}} {{approach to}} LTL model checking is presented, {{in which the}} model checking problem can be solved by direct inspection of a certain finite prefix. The techniques presented so far required to run an elaborate algorithm on the prefix. KEYWORDS: <b>Net</b> unfoldings, model <b>checking,</b> tableau systems, LTL, Petri nets Contents 1 Introduction 1 2 Petri nets 2 3 Automata theoretic approach to model checking LTL 3 3. 1 From emptiness checking to illegal !-traces and illegal livelocks 6 3. 2 Setting and running example.................. 6 4 Basic definitions on unfoldings 7 5 A tableau system for the illegal !-trace problem 9 5. 1 Adequate orders......................... 10 5. 2 The tableau system....................... 10 6 A tableau system for the illegal livelock problem 13 6. 1 Computing the set of checkpoints................ 13 6. 2 The tableau system....................... 13 6. 3 A [...] ...|$|R
50|$|There {{are several}} {{disadvantages}} to using mist nets. Mist-netting is very time consuming. Nets {{have to be}} set up properly without mistakes. An animal caught in a mist net becomes entangled, so the <b>net</b> must be <b>checked</b> often and the animal removed promptly. Disentangling an animal from a mist net can be difficult and must be done carefully by trained personnel. If an animal is heavily tangled the mist net may need to be cut to avoid injuring the animal, which damages the net as well. Also, mist nets will not capture birds in direct proportion to their presence in the area (Remsen and Good 1996) and can miss a species completely if it is active in a different strata of vegetation, such as high in the canopy. They however can provide an index to population size.|$|R
40|$|Multifunction Vehicle Bus (MVB) is a {{critical}} component in the Train Communication Network (TCN), which is widely used {{in most of the}} modern train techniques of the transportation system. How to ensure security of MVB has become an important issue. Traditional testing could not ensure the system correctness. The MVB system modeling and verification are concerned in this paper. Petri <b>Net</b> and model <b>checking</b> methods are used to verify the MVB system. A Hierarchy Colored Petri Net (HCPN) approach is presented to model and simulate the Master Transfer protocol of MVB. Synchronous and asynchronous methods are proposed to describe the entities and communication environment. Automata model of the Master Transfer protocol is designed. Based on our model checking platform M 3 C, the Master Transfer protocol of the MVB is verified and some system logic critical errors are found. Experimental results show the efficiency of our methods...|$|R
40|$|Nowadays {{telecommunication}} services {{become more and}} more complex. Because of the increasing comfort of these services the design and especially the verification of the underlying protocols is an extremely difficult task. In general protocols are only extensively tested but not verified {{due to the lack of}} powerful tools. Within the PEP project a tool b has been developed which is well suited to design telecommunication protocols with a parallel specification and programming language called B(PN) 2. Furthermore the automatic translation into Petri nets allows the efficient verification of various interesting properties by use of a partial order based model checking algorithm. Keywords: Protocols, Petri <b>nets,</b> Verification, Model <b>checking,</b> Tool. 1 Introduction At the present time the design of parallel systems is a widespread task. In most areas it is necessary to ensure the correctness of the modelling. For example telecommunication networks are required to be highly reliable. Thus [...] ...|$|R
40|$|Parsial Budget Analysis applies {{fertilizer}} Bokasi and Super ACI to Chilli Crop. This {{research aim}} to feasibility analysis be financial to influence applies fertilizer Bokasi and Super ACI to chilli crop. This research executed in Screen House property of Politeknik Pertanian Negeri Kupang. Variable observed covers amount {{and the price}} of input applied, number of from fresh chillies yielded, the price of result of produce of chilli, advantage of dirty per <b>check</b> and <b>net</b> profit per <b>check</b> and rate of return marjinal per check. Data obtained will be analysed by using parsial budget analytical method. Result of research indicates that applies fertilizer Bokasi and Super ACI in chilli farming told to be competent financially. This thing shown by added value 1, 27 for treatment of Super ACI and added value 1, 15 for treatment Bokasi. The condition indicates that acceptance of bigger marjinal cleanness than costs changes marjinal as result of treatment of Bokasi and Super AC...|$|R
40|$|Abstract: Access {{control is}} one of the main {{security}} mechanisms for software ap-plications. It ensures that all accesses conform to a predefined access control policy. It is important to check that the access control policy is well implemented in the sys-tem. When following an MDD methodology it may be necessary to check this early during the development lifecycle, namely when modeling the application. This pa-per tackles the issue of verifying access control policies in statecharts. The approach is based on the transformation of a statechart into an Algebraic Petri <b>net</b> to enable <b>checking</b> access control policies and identifying potential inconsistencies with an OrBAC set of access control policies. Our method allows locating the part of the statechart that is causing the problem. The approach has been successfully applied to a Library Management System. Based on our proposal a tool for performing the transformation and localization of errors in the statechart has been implemented...|$|R
40|$|In {{this paper}} {{we present a}} new {{framework}} for computing the backward reachability from an upward-closed set {{in a class of}} parameterized (i. e. infinite state) systems that includes broadcast protocols and petri nets. In contrast to the standard approach, which performs a single least fixpoint computation, we consecutively compute the finite state least fixpoint for constituents of increasing size, which allows us to employ binary decision diagram (BDD) -based symbolic model checking. In support of this framework, we prove necessary and sufficient conditions for convergence and intersection with the initial states, and provide an algorithm that uses BDDs as the underlying data structure. We give experimental results that demonstrate the existence of a petri net for which our algorithm is an order of magnitude faster than the standard approach, and speculate properties that might suggest which approach to apply. Key words: broadcast protocol, petri <b>net,</b> parameterized model <b>checking,</b> well-structured transition system...|$|R
