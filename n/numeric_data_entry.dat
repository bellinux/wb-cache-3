4|5141|Public
5000|$|Newer {{evolutions}} include {{moving the}} pseudo-standard 12 Function keys {{into a new}} top row inside the bowl rather than a straight line along the back as can still {{be seen on the}} single-handed versions. The standard numeric row (1 through 0) has also been shifted one column to the left aligning [...] "1" [...] with [...] "F1", [...] "2" [...] with [...] "F2" [...] and so on. The blank area between the two thumb keys has also been raised to a significant height in order to prevent [...] "dropped-wrist" [...] operation of the number pad, although because of its location and layout, continuous one-handed <b>numeric</b> <b>data</b> <b>entry</b> requires physical movement of the keyboard to properly accommodate the dominant hand (left or right) which increases the amount of desktop real estate that the keyboard occupies.|$|E
40|$|Describes the {{hardware}} and software design of two minicomputer peripheral devices which {{have been developed to}} provide keyboard data entry and system status monitor facilities at very low cost. For <b>numeric</b> <b>data</b> <b>entry,</b> a method is described by which popular mass- produced calculators based on an MOS LSI circuit can be interfaced to a computer, while their normal features are unimpaired. For system status display, a monitor is described which uses an alphanumeric plasma-panel operated in a continuously cycling mode, analogous to that of news agency annunciators, so that status messages of unrestricted length may be presented. (6 refs) ...|$|E
40|$|During {{our work}} with {{community}} microfinance groups in rural India, {{we found that}} paper {{plays a crucial role}} in many local information practices. However, paper-based recordkeeping can be inefficient, so we need to link paper with the flexibility of modern information tools. A mobile phone can be the perfect bridging device. Here we present the CAM mobile document processing system, in which a camera phone is used as an image capture and data entry device. Our system is able to process paper forms containing CamShell programs- embedded instructions that are decoded from an electronic image. By combining 1) paper, 2) audio, 3) <b>numeric</b> <b>data</b> <b>entry,</b> 4) narrative scripted execution and 5) asynchronous connectivity, we have synthesized our experience into a system that we believe is well-suited for an important set of users and applications in the developing world...|$|E
50|$|The first {{computer}} terminals {{such as the}} Teletype were typewriters {{that could}} produce and be controlled by various computer codes. These used the QWERTY layouts and added keys such as escape (ESC) which had special meanings to computers. Later keyboards added function keys and arrow keys. Since the standardization of PC-compatible computers and Windows after the 1980s, most full-sized computer keyboards have followed this standard (see drawing at right). This layout has a separate <b>numeric</b> keypad for <b>data</b> <b>entry</b> at the right, 12 function keys across the top, and a cursor section {{to the right and}} center with keys for Insert, Delete, Home, End, Page Up, and Page Down with cursor arrows in an inverted-T shape.|$|R
5000|$|The IBM 2791 Area Station was a {{tabletop}} unit {{attached to}} the 2790 loop. The 2791 could read ten column identification badges and eighty column punched cards, and had a twelve key pad for direct <b>entry</b> of <b>numeric</b> <b>data.</b> The 2791 could attach up to thirty-two 2795/2796 <b>data</b> <b>entry</b> units, a 1053 printer, up to three 1035 remote badge readers, and an OEM device. The 2791 had nine user defined [...] "transaction buttons".|$|R
50|$|In August 2001, the Association of Research Libraries (ARL) {{published}} SPEC Kit 263: <b>Numeric</b> <b>Data</b> Products and Services, presenting {{results from}} a survey of ARL member institutions involved in collecting and providing services for <b>numeric</b> <b>data</b> resources.|$|R
40|$|CAM is a user {{interface}} toolkit {{that allows a}} cameraequipped mobile phone to interact with paper documents. It is designed to automate inefficient, paper-intensive information processes in the developing world. In this paper we present a usability evaluation of an application built using CAM for collecting data from microfinance groups in rural India. This application serves an important and immediate need in the microfinance industry. Our quantitative {{results show that the}} {{user interface}} is efficient, accurate and can quickly be learned by rural users. The results were competitive with an equivalent PC-based UI. Qualitatively, the interface was found easy to use by almost all users. This shows that, with a properly designed user interface, mobile phones can be a preferred platform for many rural computing applications. Voice feedback and <b>numeric</b> <b>data</b> <b>entry</b> were particularly well-received by users. We are conducting a pilot of this application with 400 microfinance groups in India. Author Keywords paper user interface, visual codes, document processing...|$|E
40|$|This paper {{presents}} a scheme for the representation and storage of <b>numeric</b> <b>data.</b> The implemention of this scheme within the ADAMS Database System solves {{the major problem}} of maintaining <b>numeric</b> <b>data</b> in a bitwise ordered form, while providing the additional benefits of simplicity, expandability, portability, and compactness. Storage of <b>Numeric</b> <b>Data</b> in ADAMS Storage of <b>Numeric</b> <b>Data</b> in ADAMS 1. The Problem There are many commonly employed formats for representing <b>numeric</b> <b>data.</b> The C language provides seperate types for the representation of integer and real data, and extends these float and int types to double and long {{in order to allow}} the language user access to a larger range of values and to a greater degree of precision. Another format involves simply storing numeric digits as characters (using, for example, ASCII or EBCDIC). This allows for a flexible degree of precision and magnitude, but is not efficient in terms of storage. Some systems rely on one format for in-memory mani [...] ...|$|R
50|$|Common Lisp {{provides}} a <b>numeric</b> <b>data</b> type for arbitrarily sized rational numbers: RATIO.|$|R
5000|$|Converting <b>numeric</b> <b>data</b> types such as enums to ints or ints to floats.|$|R
40|$|Digital {{technology}} encourages hope {{of searching}} across and between different media forms (text, sound, image, <b>numeric</b> <b>data).</b> We describe topic searches {{in two different}} media: text files and socio-economic numeric databases and also for transverse searching, whereby retrieved text is used to find topically related <b>numeric</b> <b>data</b> and vice versa. Direct transverse searching across different media is impossible. Descriptive metadata provides enabling infrastructure, but usually requires mappings between different vocabularies and a search term recommender system. Statistical association techniques and natural language processing can help. Searches in socio-economic numeric databases ordinarily require that place and time be specified. Search across different media: <b>Numeric</b> <b>data</b> sets and text file...|$|R
40|$|Abstract <b>Numeric</b> <b>data</b> has {{traditionally}} received little {{attention in the}} field of Multi-Relational Data Mining (MRDM). It is often assumed that <b>numeric</b> <b>data</b> can simply be turned into symbolic data by means of discretisation. However, very few guidelines for successfully applying discretisation in MRDM exist. Furthermore, it is unclear whether the loss of information involved is negligible. In this paper, we consider different alternatives for dealing with <b>numeric</b> <b>data</b> in MRDM. Specifically, we analyse the adequacy of discretisation by performing a number of experiments with different existing discretisation approaches, and comparing the results with a procedure that handles <b>numeric</b> <b>data</b> dynamically. The discretisation procedures considered include an algorithm that is insensitive to the multi-relational structure of the data, and two algorithms that do involve this structure. With the empirical results thus obtained, we shed some light on the applicability of both dynamic and static procedures (discretisation), and give recommendations for when and how they can best be applied. ...|$|R
50|$|These {{devices are}} the {{standard}} entry method for phones {{and easy to}} understand but are a slow means for alphanumeric <b>data</b> <b>entry.</b> They may be suitable for <b>numeric</b> <b>entry</b> into <b>data</b> fields. The user enters numbers on the keypad in response to prompts on the IA screen so this method is only suitable for entry of quantifiable standard information.|$|R
5000|$|TACPOL {{supports}} fixed-point binary <b>numeric</b> <b>data,</b> fixed-length character strings up to 512 bytes, and fixed-length bit strings up to 32 bits. There is {{no support}} for floating point <b>numeric</b> <b>data</b> or for pointers. Arrays may {{have up to}} three dimensions, but dynamic bounds are not permitted. Additional types are records, called groups, limited to a single level of nesting, tables (arrays of groups), and unions, called cells.|$|R
40|$|We argue that: (1) whether {{articles}} contain <b>numeric</b> <b>data</b> {{should be}} {{irrelevant to the}} evaluation process; (2) the desirability of numeric real, numeric synthetic, or nonnumeric data depends on the research objective; (3) assumptions can and should sometimes substitute for additional data; and (4) equal scrutiny {{should be given to}} data collection procedures, regardless of whether the researcher influences the collection or not. Finally, rather than focusing on data, evaluation of research should focus on whether the research provides compelling evidence for the conclusions. <b>Numeric</b> <b>Data,</b> Nonnumeric Data, Synthetic Data, Marketing Theory...|$|R
5000|$|An example {{would be}} a program to {{multiply}} two vectors of <b>numeric</b> <b>data.</b> A scalar approach would be something like: ...|$|R
50|$|Through its Observatorio, MAV {{analyzes}} {{and provides}} objective, <b>numeric</b> <b>data</b> {{to inform the}} situation of visual arts professionals in Spain.|$|R
40|$|Learning {{programs}} that generalize from real-world examples {{will have to}} deal with many different kinds of <b>data.</b> Continuous <b>numeric</b> <b>data</b> can cause problems for algorithms that search for examples with identical property values. These problems can be surmounted by categorizing the <b>numeric</b> <b>data.</b> However, this process has problems of its own. In this paper, we look at the need for categorizing <b>numeric</b> <b>data</b> and several methods for doing so. We concentrate on the use of generalization-based memory, a memory organization where actual examples are stored along with generalizations, which leads to a generalization-based categorization algorithm. We also consider how to use a number heuristic, looking for gaps. These methods have been implemented in the UNIMEM computer system. Examples are presented of these algorithms categorizing data about the states of the United States...|$|R
50|$|Industrial data {{patterns}} {{can be highly}} transient and interpreting them requires domain expertise, which can hardly be harnessed by merely mining <b>numeric</b> <b>data.</b>|$|R
50|$|A violin plot is {{a method}} of {{plotting}} <b>numeric</b> <b>data.</b> It is similar to box plot with a rotated kernel density plot on each side.|$|R
40|$|Efficient {{partitioning}} {{of large}} data sets into homogeneous clusters {{is a fundamental}} problem in data mining. The hierarchical clustering methods are not adaptable because of their high computational complexity. The K-means based algorithms give promising results for their efficiency. However their use is often limited to <b>numeric</b> <b>data.</b> The quality of clusters produced depends on the initialization of clusters and {{the order in which}} data elements are processed in the iteration. We present a method which is based on the K-means philosophy but removes the <b>numeric</b> <b>data</b> limitation...|$|R
40|$|The {{proliferation}} of online access to social science statistical and <b>numeric</b> <b>data</b> sources, {{such as the}} U. S. Census Bureau's American Fact Finder, has lead to an increased interest in supporting these sources in academic libraries. Many large libraries {{have been able to}} devote staff to data services for years, and recently smaller academic libraries have recognized the need to provide <b>numeric</b> <b>data</b> services and support. This guidebook serves as a primer to developing and supporting social science statistical and numerical data sources in the academic library. It provides strategies for the esta...|$|R
50|$|Some {{authors have}} criticized that most control charts focus on <b>numeric</b> <b>data.</b> Nowadays, process {{data can be}} much more complex, e.g. non-Gaussian, mix {{numerical}} and categorical, or be missing-valued.|$|R
40|$|Efficient {{partitioning}} {{of large}} data sets into homogenous clusters {{is a fundamental}} problem in data mining. The standard hierarchical clustering methods provide no solution for this problem due to their computational inefficiency. The k-means based methods are promising for their efficiency in processing large data sets. However, their use is often limited to <b>numeric</b> <b>data.</b> In this paper we present a k-prototypes algorithm {{which is based on}} the k-means paradigm but removes the <b>numeric</b> <b>data</b> limitation whilst preserving its efficiency. In the algorithm, objects are clustered against k prototypes. A method is developed to dynamically update the k prototypes in order to maximise the intra cluster similarity of objects. When applied to <b>numeric</b> <b>data</b> the algorithm is identical to the kmeans. To assist interpretation of clusters we use decision tree induction algorithms to create rules for clusters. These rules, together with other statistics about clusters, can assist data miners to understand and identify interesting clusters. ...|$|R
50|$|Time series {{analysis}} {{can be applied}} to real-valued, continuous <b>data,</b> discrete <b>numeric</b> <b>data,</b> or discrete symbolic data (i.e. sequences of characters, such as letters and words in the English language).|$|R
500|$|Also {{like the}} IRIG timecode, <b>numeric</b> <b>data</b> (minute, hour, day of year, and last two digits of year) are sent in binary-coded decimal (BCD) format {{rather than as}} simple binary integers: ...|$|R
40|$|Part 1 of this {{briefing}} {{paper will}} highlight {{some examples of}} new collaborative web services using Web 2. 0 technologies which venture into the <b>numeric</b> <b>data</b> visualisation arena. These mashups allow researchers to upload and analyse their own data in ‘open’ and dynamic environments. Broadly speaking the <b>numeric</b> <b>data</b> being referred to could be micro-data (data about the individual), macro-data 2 or country-level data, derived or summary data. Part 2 will investigate and showcase examples of spatial (or geographic) data mashups using Web 2. 0 technologies {{and how they can}} be utilised in a research environment...|$|R
50|$|Many {{control charts}} {{work best for}} <b>numeric</b> <b>data</b> with Gaussian assumptions. The {{real-time}} contrasts chart was proposed to monitor process with complex characteristics, e.g. high-dimensional, mix numerical and categorical, missing-valued, non-Gaussian, non-linear relationship.|$|R
50|$|In addition, {{the doors}} of the box contain the first powers of the digits, the {{coefficients}} of the terms of the first powers of the binomial and the <b>numeric</b> <b>data</b> of the regular polyhedra.|$|R
50|$|Until the Proposed Recommendation draft, XSD 1.1 also {{proposed}} {{the addition of}} a new <b>numeric</b> <b>data</b> type, precisionDecimal. This proved controversial, and was therefore dropped from the specification at a late stage of development.|$|R
40|$|Abstract. Laplace noise {{addition}} {{is often}} advanced as an approach for satisfying differ-‐‑ ential privacy. There {{have been several}} illustrations of the application of Laplace noise addition for count data, but no evaluation of its performance for <b>numeric</b> <b>data.</b> In this study we evaluate the privacy and utility performance of Laplace noise addition for <b>numeric</b> <b>data.</b> Our results indicate that Laplace noise addition delivers the promised level of privacy only by adding a large quantity of noise for even relatively large sub-‐‑ sets. Because of this, even for simple mean queries, the responses for a masking mecha-‐‑ nism that uses Laplace noise addition is of little value. We also show that Laplace noise addition may be vulnerable to a tracker attack. In order to avoid this, it may be neces-‐‑ sary to increase the variance of the noise added {{as a function of}} the number of queries issued. This implies that the utility of the responses would be further reduced. These results raise serious questions regarding the viability of Laplace based noise addition for masking <b>numeric</b> <b>data.</b> ...|$|R
40|$|Laplace noise {{addition}} {{is often}} advanced as an approach for satisfying differential privacy. There {{have been several}} illustrations of the application of Laplace noise addition for count data, but no evaluation of its performance for <b>numeric</b> <b>data.</b> In this study we evaluate the privacy and utility performance of Laplace noise addition for <b>numeric</b> <b>data.</b> Our results indicate that Laplace noise addition delivers the promised level of privacy only by adding a large quantity of noise for even relatively large subsets. Because of this, even for simple mean queries, the responses for a masking mechanism that uses Laplace noise addition is of little value. We also show that Laplace noise addition may be vulnerable to a tracker attack. In order to avoid this, {{it may be necessary}} to increase the variance of the noise added as a function of the number of queries issued. This implies that the utility of the responses would be further reduced. These results raise serious questions regarding the viability of Laplace based noise addition for masking <b>numeric</b> <b>data...</b>|$|R
50|$|A graph or chart is a {{information}} graphic {{that represents}} tabular, <b>numeric</b> <b>data.</b> Charts {{are often used}} {{to make it easier}} to understand large quantities of data and the relationships between different parts of the data.|$|R
50|$|MARS {{can handle}} both {{continuous}} and categorical data. MARS {{tends to be}} better than recursive partitioning for <b>numeric</b> <b>data</b> because hinges are more appropriate for numeric variables than the piecewise constant segmentation used by recursive partitioning.|$|R
5000|$|Many {{different}} kernels are implemented, {{ranging from}} kernels for numerical data (such as gaussian or linear kernels) to kernels on special data (such as strings over certain alphabets). The currently implemented kernels for <b>numeric</b> <b>data</b> include: ...|$|R
40|$|This paper {{presents}} {{experimental results}} {{associated with the}} human factors aspects of using color contours to visualize electric power system bus voltage magnitude information. Participants were divided into three groups: the first group only one-line <b>numeric</b> <b>data,</b> the second only one-line contour data, while the third saw both. The purpose of the experiment was to determine how quickly participants could both acknowledge low voltage violations and perform corrective control actions. Results indicated the contour only visualization resulted in the quickest voltage violation acknowledgements, while the <b>numeric</b> <b>data</b> only visualization resulted in the quickest solution times. Testing was done using {{a modified version of}} the IEEE 118 bus system. 1...|$|R
