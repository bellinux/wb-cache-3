0|1137|Public
5000|$|<b>Boolean</b> <b>operations</b> on polygons: Various <b>Boolean</b> <b>operations</b> on {{the sets}} of points defined by {{polygonal}} regions.|$|R
25|$|The n-ary <b>Boolean</b> <b>operations</b> {{themselves}} {{constitute a}} power set algebra 2W, namely when W {{is taken to}} be the set of 2n valuations of the n inputs. In terms of the naming system of operations n'f'i where i in binary is a column of a truth table, the columns can be combined with <b>Boolean</b> <b>operations</b> of any arity to produce other columns present in the table. That is, we can apply any <b>Boolean</b> <b>operation</b> of arity m to m <b>Boolean</b> <b>operations</b> of arity n to yield a <b>Boolean</b> <b>operation</b> of arity n, for any m and n.|$|R
40|$|<b>Boolean</b> <b>operations</b> and feature-based {{modeling}} {{are closely}} linked domains. For example, several, sometimes many <b>Boolean</b> <b>operations</b> are involved during a feature instantiation or modification. So Boolean combinations are tools used "inside" feature-based modeling {{and it is}} interesting to study the way to make these operations faster or less numerous by using {{the fact that they are}} applying to features. This is the first issue this paper deals with. Symmetrically, Boolean operators may be used to combine two feature-based objects. This occurs, for example, when a genetic algorithm is used to semi-automatically generate the shape of a product from requirements. The second part of the paper tackles the <b>Boolean</b> <b>operation</b> optimization in this specific context. This includes improving <b>Boolean</b> <b>operations</b> performances and incrementally maintaining the feature-based model of the object resulting from a <b>Boolean</b> <b>operation...</b>|$|R
40|$|Abstract. A complex {{structure}} can {{be constructed}} by <b>Boolean</b> <b>operations</b> of geometric primitives such as cube, sphere, cylinder, and so on. However, <b>Boolean</b> <b>operations</b> cannot represent the structure in form of mathematical function. In this paper, we propose a new shape representation method that combines the <b>Boolean</b> <b>operations</b> with the KS function. Applications show that 2 D and 3 D engineering parts can be described by a single implicit KS function...|$|R
50|$|Modern {{implementations}} for <b>Boolean</b> <b>operations</b> on polygons {{tend to use}} plane sweep algorithms (or Sweep line algorithms). A list {{of papers}} using plane sweep algorithms for <b>Boolean</b> <b>operations</b> on polygons {{can be found in}} References below.|$|R
40|$|This thesis {{deals with}} general polygon <b>boolean</b> <b>operation</b> algorithms. <b>Boolean</b> <b>operations</b> are e. g. intersection, union or difference. A general polygon can be e. g. a selfinterecting polygon with inner hole. Clipping of polygons against a {{rectangular}} window {{is probably the}} most familiar <b>boolean</b> <b>operation</b> on polygons. At first, basic definitions are listed. Then the principles of a selected set of <b>boolean</b> <b>operation</b> algorithms are reviewed. Finally, a complex comparison of the algorithms is undertaken. Performance as well as the ability to handle degenerate cases are tested. The output of this thesis is an overall evaluation of algorithm properties and a dynamic library that contains the implementation of all of the tested algorithms...|$|R
5000|$|<b>Boolean</b> <b>operations</b> on polygons are {{a set of}} <b>Boolean</b> <b>operations</b> (AND, OR, NOT, XOR, ...) {{operating}} on one or more sets of polygons in computer graphics. These sets of operations are widely used in computer graphics, CAD, and in EDA (in integrated circuit physical design and verification software).|$|R
5000|$|... #Subtitle level 2: Language {{equations}} with <b>Boolean</b> <b>operations</b> ...|$|R
40|$|Each Web {{search engine}} {{provides}} query language through {{which it can}} communicate with its users and retrieve corresponding results to user queries. Supporting <b>Boolean</b> <b>operations</b> is a major characteristic of the query language. In this paper, we propose a novel, fully automatic, query probing based approach to identify what <b>Boolean</b> <b>operations</b> that are supported by a search engines and their corresponding syntaxes. Experiments show high effectiveness and efficiency. Along with this, we also provide a Web application called SE-BOSS (Search Engine <b>Boolean</b> <b>Operation</b> Scanning System) for interested users...|$|R
40|$|The paper {{discusses}} {{the potential of}} the usage of Extended <b>Boolean</b> <b>operations</b> for personalized information delivery on the Internet based on semantic vector representation models. The final goal is the design of an e-commerce portal tracking user's clickstream activity and purchases history in order to offer them personalized information. The emphasis is put on the introduction of dynamic composite user profile constructed by means of extended <b>Boolean</b> <b>operations.</b> The basic binary <b>Boolean</b> <b>operations</b> such as OR, AND and NOT (AND-NOT) and their combinations have been introduced and implemented in variety of ways...|$|R
40|$|Abstract. <b>Boolean</b> <b>operation</b> {{is the key}} {{technology}} for modeling the bone scaffold. This paper proposes a <b>Boolean</b> <b>operation</b> algorithm based on triangle mesh model. It firstly voxelizes the mesh models based on project vector and octree, and classifies the vertices into inside, outside and surface type according to the position relationship between the vertex and the other mesh model’s voxel. Then the triangles can be easily classified based on the vertices class. Finally the Boolean model can be composed by the corresponding triangles of the <b>Boolean</b> <b>operation.</b> In order to obtain the intersection features well, it detects the intersection lines and gets the intersection polygons further, and then triangulates the polygon using the ear clipping method. This <b>Boolean</b> <b>operation</b> algorithm {{has been applied to}} the bone scaffold modeling and got good performance...|$|R
5000|$|... the <b>Boolean</b> <b>operations</b> of (binary) intersection, union, and complement, ...|$|R
5000|$|Rich {{geometry}} <b>operations</b> (e.g. <b>Boolean</b> <b>operations,</b> path widening, outlining, etc.) ...|$|R
2500|$|The three <b>Boolean</b> <b>operations</b> {{described}} above {{are referred to}} as basic, meaning that they can be taken as a basis for other <b>Boolean</b> <b>operations</b> that can be built up from them by composition, the manner in which operations are combined or compounded. Operations composed from the basic operations include the following examples: ...|$|R
5000|$|<b>Boolean</b> <b>operations</b> on polygons for {{orthogonal}} polygons (e.g., intersection and union) ...|$|R
50|$|Compared to the {{constructive}} {{solid geometry}} (CSG) representation, which uses only primitive objects and <b>Boolean</b> <b>operations</b> to combine them, boundary representation is more flexible {{and has a}} much richer operation set. In addition to the <b>Boolean</b> <b>operations,</b> B-rep has extrusion (or sweeping), chamfer, blending, drafting, shelling, tweaking and other operations which make use of these.|$|R
5000|$|... #Caption: Venn {{diagrams}} for the <b>Boolean</b> <b>operations</b> of conjunction, disjunction, and complement ...|$|R
40|$|Defining the {{standard}} <b>Boolean</b> <b>operations</b> on fuzzy <b>Booleans</b> with the compositional rule of inference (CRI) or Zadeh's extension principle gives counter-intuitive results. We introduce and motivate a slight {{adaptation of the}} CRI, which only effects the results for non-normal fuzzy sets. It is shown that the adapted CRI gives the expected results for {{the standard}} <b>Boolean</b> <b>operations</b> on fuzzy <b>Booleans.</b> As a second application, we show that the adapted CRI enables a don't-care value in approximate reasoning. From the close connection between the CRI and Zadeh's extension principle, we derive an adaptation of the extension principle, which, like the modified CRI, also gives the expected <b>Boolean</b> <b>operations</b> on fuzzy <b>Booleans...</b>|$|R
5000|$|... octclip - This package allows to do <b>boolean</b> <b>operations</b> with polygons {{using the}} Greiner-Hormann {{algorithm}} ...|$|R
50|$|Complexity {{classes have}} a variety of closure properties; for example, {{decision}} classes may be closed under negation, disjunction, conjunction, or even under all <b>Boolean</b> <b>operations.</b> Moreover, they might also be closed under a variety of quantification schemes. P, for instance, is closed under all <b>Boolean</b> <b>operations,</b> and under quantification over polynomially sized domains. However, it is most likely not closed under quantification over exponential sized domains.|$|R
5000|$|Improved Pre-Processing Capabilities: Additions to {{built-in}} functions include {{a range of}} <b>Boolean</b> <b>operations</b> and an If-Then-Else function.|$|R
50|$|<b>Boolean</b> <b>operations</b> on convex polygons and {{monotone}} polygons of {{the same}} direction may be performed in linear time.|$|R
40|$|In {{this paper}} we present an {{algorithm}} to perform interactive <b>boolean</b> <b>operations</b> on free-form solids bounded by surfels. We introduce a fast inside-outside test to check whether surfels lie {{within the bounds}} of another surfel-bounded solid. This enables us to add, subtract and intersect complex solids at interactive rates. Our algorithm is fast both in displaying and constructing the new geometry resulting from the <b>boolean</b> <b>operation.</b> status: publishe...|$|R
50|$|There are {{straightforward}} ways {{to perform}} the standard <b>boolean</b> <b>operations</b> on ANF inputs {{in order to get}} ANF results.|$|R
2500|$|A Boolean {{homomorphism}} is {{a function}} h: A→B between Boolean algebras A, B such that for every <b>Boolean</b> <b>operation</b> m'f'i, ...|$|R
5000|$|Each {{element of}} the Boolean algebra can be {{expressed}} as a finite combination of generators, using the <b>Boolean</b> <b>operations,</b> and ...|$|R
25|$|The {{original}} application for <b>Boolean</b> <b>operations</b> was mathematical logic, where it combines the truth values, true or false, of individual formulas.|$|R
40|$|We {{consider}} {{how to develop}} types cor-responding to propositions and questions. Starting with the conception of Proposi-tions as Types, we consider two empirical challenges for this doctrine. The first re-lates to the putative need for a single type encompassing questions and propositions {{in order to deal}} with <b>Boolean</b> <b>operations.</b> The second relates to adjectival modifica-tion of question and propositional entities. We partly defuse the Boolean challenge by showing that the data actually argue against a single type covering questions and propositions. We show that by ana-lyzing both propositions and questions as records within Type Theory with Records (TTR), we can define <b>Boolean</b> <b>operations</b> over these distinct semantic types. We ac-count for the adjectival challenge by em-bedding the record types defined to deal with <b>Boolean</b> <b>operations</b> within a theory of semantic frames formulated within TTR. ...|$|R
40|$|Solid modelers must {{be based}} on {{reliable}} and fast algorithms for <b>Boolean</b> <b>operations.</b> The octree model, as well as several generalizations (polytrees, integrated polytrees, extended octrees), is specially well suited for these algorithms and can be used either as a primary or as a secondary model in solid modeling systems. This paper is concerned with a precise definition of the extended octree model that allows the representation of nonmanifold objects with planar faces and, consequently, is closed under <b>Boolean</b> <b>operations</b> on polyhedrons. <b>Boolean</b> nodes and nearly vertex nodes are introduced, and the model is discussed in comparison with related representations. A fast algorithm for the direct generation of the extended oclree from the geometry of the base polygon in extrusion solids is presented, and its complexity is studied. <b>Boolean</b> <b>operation</b> algorithms are introduced...|$|R
40|$|In this letter, {{we report}} an all-optical module that generates {{simultaneously}} four <b>Boolean</b> <b>operations</b> at 10 Gb/s. The circuit employs two cascaded ultrafast nonlinear interferometers and requires only two signals as inputs. The first gate is configured as a 2 × 2 exchange-bypass switch and provides OR and AND logical operations. The second gate generates XOR (SUM bit) and AND (CARRY bit) <b>Boolean</b> <b>operations</b> and constitutes a binary half-adder. Successful {{operation of the}} system is demonstrated with 10 -Gb/s return-to-zero pseudorandom data patterns...|$|R
40|$|We define five {{increasingly}} comprehensive {{classes of}} infinitestate systems, called STS 1 [...] 5, whose state spaces have finitary structure. For {{four of these}} classes, we provide examples from hybrid systems. STS 1 These are the systems with finite bisimilarity quotients. They can be analyzed symbolically by (1) iterating the predecessor and <b>boolean</b> <b>operations</b> starting from a finite set of observable state sets, and (2) terminating when no new state sets are generated. This enables model checking of the µ-calculus. STS 2 These are the systems with finite similarity quotients. They can be analyzed symbolically by iterating the predecessor and positive <b>boolean</b> <b>operations.</b> This enables model checking of the existential and universal fragments of the µ-calculus. STS 3 These are the systems with finite trace-equivalence quotients. They can be analyzed symbolically by iterating the predecessor operation and a restricted form of positive <b>boolean</b> <b>operations</b> (intersection is restricted t [...] ...|$|R
5000|$|The MK-52 {{is fully}} capable of {{performing}} <b>Boolean</b> <b>operations</b> on binary numbers. The following example demonstrates the OR logical operation on the binary numbers [...] and : ...|$|R
25|$|That is, a Boolean algebra {{is a set}} and {{a family}} of {{operations}} thereon interpreting the <b>Boolean</b> <b>operation</b> symbols and satisfying the same laws as the Boolean prototype.|$|R
40|$|We {{describe}} a data structure for three-dimensional Nef complexes, algorithms for <b>boolean</b> <b>operations</b> on them, and our implementation of data structure and algorithms. Nef polyhedra were introduced by W. Nef in his seminal 1978 book on polyhedra. They are {{the closure of}} half-spaces under <b>boolean</b> <b>operations</b> and can represent non-manifold situations, open and closed boundaries, and mixed dimensional complexes. Our focus lies on the generality of the data structure, the completeness of the algorithms, and the exactness and efficiency of the implementation. In particular, all degeneracies are handled...|$|R
40|$|Currently, {{most of the}} {{existing}} public-key encryption schemes are based on complex algorithms with heavy computations. In 1994, Naor and Shamir proposed a simple cryptography method for digital images called visual cryptography. Existing visual cryptography primitives {{can be considered as}} a special kind of secret-key cryptography that does not require heavy computations for encrypting and decrypting an image. In this paper, we propose a new public-key encryption scheme for image based on non-expansion visual cryptography and <b>Boolean</b> <b>operation.</b> The proposed scheme uses only <b>Boolean</b> <b>operations</b> and therefore requires comparatively lower computations...|$|R
40|$|This paper {{presents}} a simple algorithm for hollowing out a solid CAD model. The algorithm employs voxel elements {{to do the}} hollowing. Instead of performing three-dimensional <b>Boolean</b> <b>operations</b> on the solid CAD model, one-dimensional <b>Boolean</b> <b>operations</b> between the ray representations of the model and voxel elements are carried out. The ray representation of the hollowed model in turn, produces the direct slice files as output to the rapid prototyping machine. In order to satisfy strength considerations, square and honeycomb structures are formed in the hollowed object. © 1998 Elsevier Science Ltd. All rights reserved. link_to_subscribed_fulltex...|$|R
