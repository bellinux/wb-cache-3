0|206|Public
40|$|Includes bibliographical references. Introduction [...] Information {{found in}} land <b>entry</b> case <b>files</b> [...] Arrangement and access [...] Using the tract books at the National Archives {{building}} [...] Requesting the land <b>entry</b> case <b>file</b> [...] A note on cadastral surveys [...] Military bounty land warrants [...] War of 1812 bounty land warrants [...] Old Indian wars bounty land warrants [...] Mexican War bounty land warrants [...] Bounty land warrants under {{the acts of}} 1850, 1852, and 1855 [...] Military bounty land warrants, land <b>entry</b> case <b>files,</b> and General Land Office administrative records available on microfilm [...] Additional reading [...] Searchpaths for requests by mail (General land <b>entry</b> <b>files</b> [...] Military bounty land Warrants) [...] Searchpaths for requests in person (General land <b>entry</b> <b>files</b> [...] Military bounty land Warrants). Mode of access: Internet...|$|R
40|$|Shipping list no. : 2009 - 0322 -P. Includes bibliographical references. Introduction [...] Information {{found in}} land <b>entry</b> case <b>files</b> [...] Arrangement and access [...] Using the tract books at the National Archives {{building}} [...] Requesting the land <b>entry</b> case <b>file</b> [...] A note on cadastral surveys [...] Military bounty land warrants [...] War of 1812 bounty land warrants [...] Old Indian wars bounty land warrants [...] Mexican War bounty land warrants [...] Bounty land warrants under {{the acts of}} 1850, 1852, and 1855 [...] Military bounty land warrants, land <b>entry</b> case <b>files,</b> and General Land Office administrative records available on microfilm [...] Additional reading [...] Searchpaths for requests by mail (General land <b>entry</b> <b>files</b> [...] Military bounty land Warrants) [...] Searchpaths for requests in person (General land <b>entry</b> <b>files</b> [...] Military bounty land Warrants). Mode of access: Internet...|$|R
5000|$|The {{software}} primarily uses tablature <b>notation</b> <b>entry.</b> This is {{very useful}} for guitarists {{who are not}} familiar with standard notation and for instructing proper positioning on the neck. Other than the expected buttons for normal notation (i.e. time signature, tempo markers, etc.), there are many others that are directed more at the guitarist. These include: ...|$|R
50|$|The {{order of}} the <b>file</b> <b>entries</b> in the central {{directory}} need not coincide with the order of <b>file</b> <b>entries</b> in the archive.|$|R
5000|$|Following this work, {{and changes}} {{made to the}} Freedom of Information Act in the 1970s, in 1976 Theoharis became a {{specialist}} {{in the history of}} the FBI. He focused on FBI records procedures, rather than individual FBI targets, leading to discoveries or further understandings of the complexities and uses of FBI office files (as opposed to [...] "official" [...] FBI files), the JUNE mail file, the National Security Electronic Surveillance Index Card <b>File,</b> Surreptitious <b>Entries</b> <b>file,</b> COMPIC file, and COMRAP file.|$|R
5000|$|Windows {{registry}} cleaner: Identifies, removes or repairs any corrupted <b>entries</b> or <b>files</b> ...|$|R
40|$|South Sea tea-cakeMany a savory dish {{is cooked}} in this boiling oil. One - a great {{favourite}} with the settlers - {{is the same}} as that cooked on board the South Sea whalers, and known as the "South Sea tea-/cake. "PRINTED ITEM ?Not usedNot UsedWith drawnNew <b>entry</b> <b>filed</b> in SHIP withdrawn drawer between S- 24389 and S- 2439...|$|R
5000|$|Journal <b>entry</b> saying <b>file</b> XYZ {{is about}} to be saved into sector 123.|$|R
40|$|Purpose: A {{computational}} {{system was}} developed for this paper in the C++ programming language, to create a 125 I radioactive seed <b>entry</b> <b>file,</b> based on the positioning of a virtual grid (template) in voxel geometries, {{with the purpose of}} performing prostate cancer treatment simulations using the MCNPX code. Methods: The system is fed with information from the planning system with regard to each seed’s location and its depth, and an <b>entry</b> <b>file</b> is automatically created with all the cards (instructions) for each seed regarding their cell blocks and surfaces spread out spatially in the 3 D environment. The system provides with precision a reproduction of the clinical scenario for the MCNPX code’s simulation environment, thereby allowing the technique’s in-depth study. Results and Conclusion: The preliminary results from this study showed that the lateral penumbra of uniform scanning proton beams was less sensitive In order to validate the computational system, an <b>entry</b> <b>file</b> was created with 88 125 I seeds that were inserted in the phantom’s MAX 06 prostate region with initial activity determined for the seeds at the 0. 27 mCi value. Isodose curves were obtained in all the prostate slices in 5 mm steps in the 7 to 10 cm interval, totaling 7 slices. Variance reduction techniques were applied in order to optimize computational time and the reduction of uncertainties such as photon and electron energy interruptions in 4 keV and forced collisions regarding cells of interest. Through the acquisition of isodose curves, the results obtained show that hot spots have values above 300 Gy, as anticipated in literature, stressing the importance of the sources’ correct positioning, in which the computational system developed provides, in order not to release excessive doses in adjacent risk organs. The 144 Gy prescription curve showed in the validation process that it covers perfectly {{a large percentage of the}} volume, at the same time that it demonstrates a large decline for short distances. [...] Cite this article as : Boia LS, Junior J, Menezes AF, Silva AX. Computational system to create an <b>entry</b> <b>file</b> for replicating I- 125 seeds simulating brachytherapy case studies using the MCNPX code. Int J Cancer Ther Oncol 2014; 2 (2) : 02023. DOI: [URL] </p...|$|R
5000|$|The 9100A was {{the first}} {{scientific}} calculator by the modern definition (i.e. trig, log/ln, and [...] exponential functions), and {{was the beginning of}} Hewlett-Packard's long history of using Reverse Polish <b>Notation</b> (RPN) <b>entry</b> on their calculators.|$|R
50|$|Bleeping Computer {{maintains}} several databases {{of common}} programs, startup <b>entries</b> and <b>files</b> found in Microsoft Windows operating systems, including malware, {{with information on}} them.|$|R
5000|$|... hard link: {{link to a}} <b>file</b> (MFT <b>entry).</b> The <b>file</b> {{is still}} {{accessible}} as long as at least one link that points to it still exists.|$|R
40|$|The {{purpose of}} this {{research}} is to explain the procedure of the first pension payment in PT. TASPEN (Persero) Cabang Surakarta and evaluate of internal control systems and to identify strengths and weaknesses in the implementation of a payment system that has been set. The step {{of this research is}} evaluate the applied internal control system of the first pension payment process with internal control system elements that is the organizational structure serve a clear functional responsibilities, a system of authorization and reporting procedures, healthy practice, {{and the quality of the}} employee having proper quality with their responsibility. The results of this evaluation is the internal control system that is used by PT. TASPEN (Persero) Cabang Surakarta in first pension payment found strengths and weaknesses in the system. The advantages the system are the separation of functions, the accounting records that have been done in a computerized, clear authorization, selection to get quality employees, the development of quality employees. The weakness are rarely rotation of position between employeesand mutation, service needs a long time, no serial number for <b>entry</b> <b>file.</b> Based on this research, the writer provides some suggestions to make it more frequent for rotation of positions and mutations and make serial number for <b>entry</b> <b>file.</b> Keyword: Pension, internal controlling system. ...|$|R
5000|$|... where, {{with some}} abuse of <b>notation,</b> the [...] <b>entry</b> of kernel matrix [...] (as opposed to kernel {{function}} [...] ) is [...]|$|R
30|$|To feed {{a stream}} with data of {{interest}} for the task at hand, Clive accepts a Find request that selects file data or metadata based on both a file path and a predicate supplied by the caller. This request is further discussed later, {{but it is important}} to say that because the I/O framework permits sending typed data, Find may stream directory <b>entries,</b> <b>file</b> data, and errors through an I/O stream. The result is that full file trees may be streamed while avoiding multiple RPCs to the data source.|$|R
5000|$|The {{character}} is also sometimes {{used as a}} symbol to denote long or heavy syllables, in metrical poetry. For example, the syllables in the word छंदः [...] ‘metre’ (in nominative) can be denoted as [...] "ऽ ऽ", meaning two long syllables. (Cf. other <b>notations</b> in <b>entry</b> [...] "Systems of scansion".) ...|$|R
5000|$|... 1915 winner Ralph DePalma {{withheld}} his {{entry for}} 1916, demanding $5,000 in appearance money from Speedway management. Carl Fisher refused to accede to the demand, and DePalma's subsequent <b>entry</b> blank, <b>filed</b> after the deadline, was rejected.|$|R
5000|$|... 2.0: (1993) <b>File</b> <b>entries</b> can be {{compressed}} with DEFLATE and use traditional PKWARE encryption.|$|R
5000|$|Due to {{time and}} cost {{restrictions}} most importers cannot audit all of their entries on a regular basis, and therefore they are potentially losing money due to classification errors, inaccurate quantities or missed Free Trade Agreement eligibility. With an entry visibility solution, importers are provided with a global view of all <b>entries</b> <b>filed,</b> helping to increase trade compliance and ensuring that all available savings are realized when importing goods. An automated solution identifies common entry errors such as incorrect tariff numbers, product description, and country of origin. With a solution in place, companies {{have the ability to}} identify missing or inaccurate data on the entry virtually immediately after the <b>entry</b> have been <b>filed.</b> Having visibility this soon allows the company to determine the root cause of the error, take the steps both internally and externally to correct the errors, and to report the errors soon after the error is filed instead of months after, reducing the chance of customs withholding shipments and causing delays.|$|R
40|$|International audienceAdaptive grid {{refinement}} in Fortran (AGRIF) is a Fortran 90 {{package for}} the integration of adaptive mesh refinement (AMR) features within existing finite difference codes. The package first provides model-independent Fortran 90 procedures containing the different operations in an AMR process: time integration of grid hierarchy, clustering, interpolations, updates, etc. The package then creates the Fortran 90 model-dependent part of the code based on an <b>entry</b> <b>file</b> written by the user. The basic idea of AGRIF is {{to make use of}} Fortran 90 pointers to successively address the variables of the different grids of an AMR process. As pointers can be used exactly like other (static) variables in Fortran, most of the original code will remain unchanged...|$|R
50|$|The {{bigger picture}} of an {{automated}} solution is the savings involved. Costs can be minimized by taking the necessary steps to avoid penalties that result when errors are repeatedly made. Furthermore, with an entry visibility solution, errors can be prevented in the entry by sending all of the necessary classification and filing information to the broker up front. This allows for the automatic retrieval and reconciliation of the <b>entry</b> <b>filing</b> on the backend. Keeping customers, suppliers, 3PLs, freight forwarders, and brokers {{all on the same}} page can be accomplished with an automated solution, allowing all parties to view the same data and further ensure the information on the entry is correct and up-to-date.|$|R
30|$|ZDB optimizes {{the index}} for auto-incremental integer keys, and uses array to store this index for {{minimize}} memory usage which has zero overhead for keys. ZDB flat index is {{an array of}} <b>entry</b> positions. <b>File</b> mapping is used to access ZDB flat index.|$|R
50|$|The file naming {{convenience}} is 8+3 (this scheme, {{inherited from}} CP/M, is normal on Atari). The directory structure is hierarchical, {{there are no}} other than practical limits in nesting directories. A directory can contain up to 1423 <b>entries</b> of <b>files</b> and other directories.|$|R
5000|$|Journal <b>entry</b> {{noting the}} <b>file</b> {{completely}} saved, and its name is XYZ and {{is located in}} sector 123.|$|R
40|$|Techanicalities- Solid {{background}} in Technical support and server administration, Knowledge of PC setup and installation, {{as well as}} various peripherals, data <b>entry,</b> and <b>file</b> updating. Familiar with MS-DOS, Microsoft Windows, Microsoft office,Windows live mail and Microsoft Outlook. Experienced in system-operations training, collections, and customer service...|$|R
40|$|For centuries pens {{have been}} used to write music {{notation}} on paper. Music notation in computer systems is usually entered by computer transcription of MIDI performance, or mouse selection and placement from pallets of note symbols. This paper presents the findings from an empirical exploration of a system for music notation on computer using pen input with simplified gestures. The results indicate that whilst there appear to be many benefits to such an approach, particularly the flexible placement and actuate editing of symbols, the implementation employed is considered overly error prone and suffering from inadequate hardware support, in the form of on-screen drawing with the pen, to be compelling. In addition, the absence of audible feedback and performance capture were considered significant disadvantages by the users. Despite these shortcomings, mostly not direct pen concerns, the results forecast that for music <b>notation</b> <b>entry,</b> pen input may be preferable to mouse input and that gesture recognition may be quicker than the pallet-selection techniques most often employed in current music systems. In short, the potential of pen input is not devoid of context...|$|R
50|$|In a {{flat file}} system, {{there are no}} subdirectories, {{directory}} <b>entries</b> for all <b>files</b> are stored in a single directory.|$|R
50|$|Participants of BECS {{exchange}} direct <b>entry</b> or DE <b>files</b> {{at intervals}} through the day. Net positions are usually cleared daily.|$|R
5000|$|Some text in {{this article}} was taken from The Jargon <b>File</b> <b>entry</b> on [...] "TWENEX", {{which is in the}} public domain.|$|R
50|$|Due to {{the sheer}} size and {{complexity}} of the registry database, manually cleaning up redundant and invalid entries may be impractical, so registry cleaners try to automate the process of looking for invalid <b>entries,</b> missing <b>file</b> references or broken links within the registry and resolving or removing them.|$|R
5000|$|Greymatter creates static pages. Therefore, when {{an entry}} is edited, only the main page and the entry's page are rebuilt (but not the monthly or weekly archive file). While static pages are arguably quicker to load for the user, it is {{time-consuming}} {{for the author}} and resource intensive for the user to constantly rebuild files. Also, by using static pages, {{at least twice as}} much space is used on the server as is needed (the <b>entry</b> <b>files,</b> [...]cgi format, as well as individual entry pages in HTML and weekly or monthly archive logs in HTML). Besides this, sometimes rebuilding is impossible and leads to Greymatter timing out and showing a blank window (usually when there are massive numbers of entries being rebuilt, or when attempting to rebuild all files).|$|R
30|$|Here, gf calls FindGet {{to stream}} {{matching}} files (those under /src with names terminating in “.go”) through its out channel. Directory <b>entries</b> and <b>file</b> {{data for the}} matching files are streamed to the output. The resulting output stream might {{be similar to the}} one depicted at the top of Fig.  3.|$|R
50|$|Each format has a {{corresponding}} <b>file</b> <b>entry</b> in the /proc/sys/fs/binfmt_misc directory {{which can be}} read to get information about a given file format.|$|R
5000|$|Read through {{multiple}} <b>file</b> <b>entry</b> blocks until the block containing {{the location of}} the desired file block was found, could be many directory blocks ...|$|R
30|$|The command lf {{produces}} {{a stream of}} Dir messages and pf is used to print them. The argument given to lf asks it to call find to ask the file server for directory <b>entries</b> for <b>files</b> under “/zx/sys/src” with a predicate “d” (which is a shorthand for “type=d”, or “file type is directory”).|$|R
30|$|In {{the case}} of 3, 4 -dimethoxybenzaldehyde 1 j, the {{reaction}} proceeded in about 25  min and an irradiation of 50  W was required (<b>entry</b> 4, Additional <b>file</b> 2 : Table S 2). In {{the case of}} 5 -chloro- 2 -nitro-aldehyde 1  k, the reaction was easily performed at 5  W in 25  min with 90 % yield. A quantitative reaction occured when naphthaldehyde 1  l was used (<b>entry</b> 6, Additional <b>file</b> 2 : Table S 2) without any formation of self-condensation byproduct.|$|R
