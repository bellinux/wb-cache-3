15|4|Public
5000|$|The high <b>nybble</b> of {{the color}} {{register}} specifies one of 16 colors color ($00, $10, $20... to $F0). [...] The low <b>nybble</b> of the register specifies one of 16 luminance values ($00, $01, $02... to $0F).|$|E
50|$|By {{analogy with}} byte and <b>nybble,</b> a {{quaternary}} digit {{is sometimes called}} a crumb.|$|E
5000|$|A nibble (sometimes <b>nybble),</b> is {{a number}} {{composed}} of four bits. [...] Being a half-byte, the nibble was named as a play on words. A person may need several nibbles for one bite from something; similarly, a <b>nybble</b> {{is a part of}} a byte. Because four bits allow for sixteen values, a nibble is sometimes known as a hexadecimal digit.|$|E
50|$|There {{were some}} regular columns such as Pets Corner (for the Commodore PET), Apple Pips (for the Apple II), Nascom Notes and <b>Nybbles</b> (small BASIC tips and routines).|$|R
50|$|Each {{instruction}} is 16 bits long <b>nybbles,</b> or 1 word. This means that memory referencing instructions contain 4 bits of op-code data, and 12 bits {{dedicated to the}} address.|$|R
50|$|The {{encryption}} {{method is}} vulnerable to known-plaintext attacks. If an unencrypted {{version of the same}} audio is known the random number stream can be easily retrieved and from it the key parameters can be determined, rendering every ADX encrypted with that same key decryptable. The encryption method attempts to make this more difficult by not encrypting silent blocks (with all sample <b>nybbles</b> equal to 0), as their scale is known to be 0.|$|R
5000|$|... 10 GRAPHIC 3,1 :REM MULTICOLOR GRAPHIC MODE20 A=PEEK(1): B=PEEK(216) :REM SAVE THESE30 POKE 216,255 :REM TELL IRQ TO GIVE US VIC CONTROL40 POKE 1, A AND 252 :REM SELECT PROCESSOR <b>NYBBLE</b> BANK50 BLOAD [...] "ERINLOG.BMC" [...] :REM LOAD BIT MAP AT $200060 BLOAD [...] "ERINLOG.VMC" [...] :REM LOAD COLORS 01 AND 10 AT $1C0070 BLOAD [...] "ERINLOG.CMC" [...] :REM LOAD COLORS 11 AT $D80080 POKE 1,A :REM RESTORE SYSTEM <b>NYBBLE</b> BANK90 POKE 216,B :REM RESTORE SYSTEM VIC CONTROL100 K$ = [...] ""110 GET K$ :REM WAIT FOR A KEYPRESS120 IF K$ = [...] "" [...] THEN 110130 GRAPHIC 0,1 :REM TEXT MODE140 END ...|$|E
50|$|A {{group of}} four bits, or half a byte, is {{sometimes}} called a nibble or <b>nybble.</b> This unit is most often used {{in the context of}} hexadecimal number representations, since a nibble has the same amount of information as one hexadecimal digit.|$|E
50|$|A four-bit {{quantity}} {{is known}} as a nibble (when eating, being smaller than a bite) or <b>nybble</b> (being a pun on the form of the word byte). One nibble corresponds to one digit in hexadecimal and holds one digit or a sign code in binary-coded decimal.|$|E
5000|$|The Dazzler {{supported}} four graphics modes in total, {{selected by}} setting or clearing bits {{in the control}} register (0F) that controlled two orthogonal selections. The first selected {{the size of the}} frame buffer, either 512 bytes or 2 kB. The other selected normal or [...] "X4" [...] mode, the former using 4-bit <b>nybbles</b> packed 2 to a byte in the frame buffer to produce an 8-color image, or the latter which was a higher resolution monochrome mode using 1-bits per pixel, 8 to a byte. Selecting the mode indirectly selected the resolution. In normal mode with a 512 byte buffer there would be 512 bytes × 2 pixels per byte = 1,024 pixels, arranged as a 32 by 32 pixel image. A 2 kB buffer produced a 64 by 64 pixel image, while the highest resolution used a 2 kB buffer in X4 mode to produce a 128 by 128 pixel image. In normal mode the color was selected from a fixed 8-color palette with an additional bit selecting intensity, while in X4 mode the foreground color was selected by setting three bits in the control register to turn on red, green or blue (or combinations) while a separate bit controlled the intensity.|$|R
5000|$|In every text mode, each {{character}} has a background and a foreground color - e.g. red on yellow text for one character, white on black for the next, etc. While the same 4-bit <b>nybble</b> value {{used for the}} foreground color would normally allow all 16 colors {{to be used for}} the background color, the most significant bit of the background <b>nybble</b> is alternatively used to denote whether or not the character should blink (a hardware effect offered by CGA independent of the CPU). When a character is blinking, its foreground dots alternate between the foreground and background color, so that the during the blink off period, the character cell is filled with the background color (exactly like a space character). [...] All blinking characters on the screen blink in sync. The blinking attribute effect is enabled by default and the high-intensity background effect is disabled; disabling blinking {{is the only way to}} freely choose the latter eight-color indexes (8-15) for the background color.|$|E
50|$|In computing, {{a nibble}} (often <b>nybble</b> or nyble {{to match the}} {{spelling}} of byte) is a four-bit aggregation, or half an octet. It {{is also known as}} half-byte or tetrade.In a networking or telecommunication context, the nibble is often called a semi-octet, quadbit, or quartet.A nibble has sixteen (24) possible values. A nibble can be represented by a single hexadecimal digit and called a hex digit.|$|E
50|$|The {{development}} of eight-bit microprocessors in the 1970s popularized this storage size. Microprocessors {{such as the}} Intel 8008, the direct predecessor of the 8080 and the 8086, used in early personal computers, could also perform {{a small number of}} operations on the four-bit pairs in a byte, such as the decimal-add-adjust (DAA) instruction. A four-bit quantity is often called a nibble, also <b>nybble,</b> which is conveniently represented by a single hexadecimal digit.|$|E
5000|$|Historically, {{there are}} cases where <b>nybble</b> was used {{for a group of}} bits greater than 4. In the Apple II {{microcomputer}} line, much of the disk drive control and group-coded recording was implemented in software. Writing data to a disk was done by converting 256-byte pages into sets of 5-bit (later, 6-bit) nibbles and loading disk data required the reverse. Moreover, 1982 documentation for the Integrated Woz Machine refers consistently to an [...] "8 bit nibble".The term byte once had the same ambiguity and meant a set of bits but not necessarily 8, hence the distinction of bytes and octets or of nibbles and quartets (or quadbits). Today, the terms 'byte' and 'nibble' almost always refer to 8-bit and 4-bit collections respectively and are very rarely used to express any other sizes.|$|E
5000|$|Many of the Parti users had {{migrated}} {{over from}} a student created BBS called BBS1 (circa 1985) which was accessed from its creator's personal account [...] "astran" [...] on the University of Iowa mainframe computer PrimeA. BBS1 was created and administered by Randy Frank (Mr <b>Nybble)</b> and David Richards (The Oracle) after they realized {{the popularity of}} their games and the hidden messaging system that was available from within the games. The original message system was concealed inside their [...] "Draw Poker" [...] game and allowed the creators the ability to convey progress and leave notes regarding current projects. The board was promoted across campus on flyers placed in computer labs. Users took on handles and developed a culture of their own with socialization being the main use of the board. A BBS1 user group was started and held infrequent meetings and offered T-shirts with a mystical picture and the caption [...] "BBS1: A meeting of the minds". The software eventually was altered and passed around by a rogue sysop in a version known as [...] "STEALTH" [...] which could be compiled and executed on a user's own personal account. The main message system files were no longer safe or private once the general user population learned the directory names. The anonymity of a handle was proven to be non-existent and the cracked software allowed anybody to read any file they chose and track users back to their originating personal accounts.|$|E
5000|$|Pournelle disliked copy {{protection}} and, except for games, refused to review software that used it. He {{did not believe}} that it was useful, writing [...] "For every {{copy protection}} scheme there's a hacker ready to defeat it. Most involve so-called <b>nybble</b> copiers, which try to analyze the original disk and then make a copy". By 1980, the first 'nibble' copier, Locksmith, was introduced for the Apple II. These copiers reproduced copy protected floppy disks an entire track at a time, ignoring how the sectors were marked. This was harder to do than it sounds for two reasons: firstly, Apple disks did not use the index hole to mark the start of a track; their drives could not even detect the index hole. Tracks could thus start anywhere, but the copied track had to have this [...] "write splice", which always caused some bits to be lost or duplicated due to speed variations, roughly in the same (unused for payload data) place as the original, or it would not work. Secondly, Apple used special [...] "self-sync" [...] bytes to achieve agreement between drive controller and computer about where any byte ended and the next one started on the disk. These bytes were written as normal data bytes followed by a slightly longer than normal pause, which was notoriously unreliable to detect on read-back; still, you had to get the self-sync bytes roughly right as without them being present in the right places, the copy would not work, and with them present in too many places, the track would not fit on the destination disk.|$|E
40|$|Compact {{encodings}} {{of the web}} graph {{are required}} {{in order to keep the}} graph on main memory and to perform operations on the graph e#ciently. Link 2, the second version of the Link Database by Randall et al., which is part of the Connectivity Server, represented the adjacency list of each vertex by the variable-length <b>nybble</b> codes of delta values...|$|E
40|$|This thesis {{examined}} {{retention of}} particles and phosphorus (P) losses from agricultural clay soils in small wetlands {{with an initial}} deep area followed by a shallow area with emergent plants. Two long, narrow wetlands (Bergaholm and <b>Nybble)</b> specially designed for P retention (P-wetlands) were constructed, and their efficiency in sediment accumulation were {{compared with those of}} six existing wetlands with a different design. Monthly area-specific P retention was positively correlated with P load in the Ber P-wetland, though outflow P concentrations were occasionally higher than inflow concentrations during extreme flow events or low flow periods with ice cover. However, seasonal sediment deposition was not correlated with hydraulic load (HL), particle load or concentrations, as deposition was mostly higher than particle load in spring-summer. Annual P accumulation was positively correlated with HL (up to a possible maximum) and negatively with an index for fast flow variations (FFI). Similar annual P retention (mean 89 kg P ha⁻¹ yr⁻¹) in Bergaholm P-wetland was estimated with two independent methods. In contrast, inflow-outflow studies indicated P and particle release in the <b>Nybble</b> P-wetland, while results from sediment plates indicated major sediment accumulation. Measurements of water quality at a point after the deep section indicated that the discrepancy may be attributed to erosion and resuspension in that section. However, further studies are needed to confirm this, and to determine whether it was a temporary phenomenon that will disappear as the wetland bottom stabilises. In three wetlands with different depth sections, sediment accumulation was higher in deep than in shallow areas. Annual sediment and P accumulation was generally higher in the two P-wetlands than in the other six studied wetlands, and was positively correlated with wetland length to width ratio. Overall, the results suggest that P-wetlands can efficiently retain P lost from agricultural clay soils, provided that HL is not too high or peak-based. ...|$|E
40|$|There are {{different}} ways how meaning is creating {{in and around}} games. What I am presenting here as "Playful Play with Games" is about creative involvement with games mainly game modding and re-appropriating of games. Playful play means to become a creator or writer {{in addition to a}} reader and player, but nonetheless with a playful attitude and a good understanding of the game at hand. Three levels of meaning produced in and around games can be distinguished: Meaningful play, meaning beyond play, and creatively added meaning. Meaningful play in "Rules of Play" [Salen, Zimmermann 2004] is described as "The meaning of an action in a game resides in the relationship between action and outcome. " Meaningful play regards the fact that a game must have a meaning in itself to allow for gameplay. This meaning develops when the player or players enter the magic circle of gameplay and it disappears when the gameplay ends. Meaning beyond play is about the experience gained during play that continues to exist and unfold outside of the magic circle in the daily routine of professional or private life. The understanding of meaning beyond play is important with regard to questions of how games influence our daily lifes, i. e. the question of how games may or may not lead to violent behaviour or how game-like features for can actually be re-appropriated for learning environments. In both areas false assumptions about the effect of games are made. In the case of learning environments game-like systems where implemented that can lead to very motivated and concentrated play, but comparingly little learning. In other words: Environments that produce little meaning that continues beyond the playing of the game. But, as Malone points out, "experimental studies of what makes computer games fun identified design features that not only sustained focussed attention but also facilitated learning, including self-directed learning. " [Malone, Lepper, 1987]. In the case of violence it can seem obvious that the violence of the game automatically gets transported into daily life. There is even some evidence for this assumption as well as counter examples. To understand better how games can have a negative effect it is necessary {{to take a closer look}} at how and when meaning is transported out of the magic circle of gameplay. Creatively adding meaning happens when the player becomes a creator or editor of the game and is generally referred to as modding. Examples are the editing of levels of first-person shooter games, creating environments and new characters for the Sims, giving new names to the pawns of chess, or changing the rules of monopoly. These alterations require a creative process, which is a meaning generating action in itself. The player-creator’s attitude is a playful one when exploiting the system, fighting with the constraints, modifying the meaning, searching for a new sense, and repurposing the media. Modding includes the need to understand the game at hand and make conscious decisions about the way to alter it. The essence of the game has to be understood as well as the implications of any changes to it. Regarding the content or message there {{are different}} attitudes possible for modifying a game, like: Subversion of the original game, combination with features new to the game, overlay of information or specific messages, or the abstraction of the game to enhance specific features. In the art world we can find interesting examples: Robert Nideffer subverts Tomb Raider with his Lara patch by adding a moustache and a beard to the overly female figurine of Lara Croft. "This patch questions whether Lara is a lesbian butch Mona Lisa or a drag queen who forgot to shave. " [Schleiner 2004]. Jodi’s Untitled Game [Jodi 2004] is a collection of modifications of Quake reducing the graphics beyond the minimum. The game becomes almost unplayable, letting features like the spatialized sound or shifts in the visual patterns gain importance for the perception of what may possibly be going on. Jahrmann/Moswitzer take a contrary approach in the <b>Nybble</b> Engine project. They increase the complexity of the overall behaviour in Unreal Tournament by replacing objects with programs. "The methodological framework of orientation for the <b>Nybble</b> Engine project is a radical/reconstructivist meta-art. [...] . This kind of art marks the end of the aesthetic era of the self-description of the art system. " [Climax Team 2003]. In the conference presentation I will show examples of learning environments in which we successfully integrated game-like features on the one hand and examples from a series of workshops about creatively adding new meaning to games on the other. The discussion will focus on the features and the reason for their relevance towards the aim of the courses and workshops. The examples include: "digital territory" a course on presence in the virtual world of communication networks. game-like aspects were added to emphasize the functioning of the digital realm. "p(x) " an environment for learning and creative collaboration where the rules guide the collective creative process. "outside-inside-out" a course for architecture students focussing on the design of spaces and virtual spaces in particular. "Mediated Discourse" where level editing served a s a means to think and communicate. And the "Alice" workshop on remediation, recreation and recombination of games. References Climax Team, (2003). Nybble-Engine-Project, in <b>Nybble</b> Engine, Climax Team Eds., CLIMAX, Vienna, Austria, p. 47 Jodi, (visited 11 / 30 / 2004). untitled game, [URL] Malone, T. W., and Lepper, M. R., (1987). "Making Learning Fun: A Taxonomy of Intrinsic Motivations for Learning", in Aptitude, Learning and Instruction: Vol 3. Connotative and Affective Process Analyses, R. E. Snow and M. J. Farr, Eds. Lawrence Erlbaum, Hillsdale N. J. USA, pp. 223 - 253. Salen, K. and Zimmerman, E., (2004). Rules of Play: Game Design Fundamentals. The MIT Press, Cambridge, MA, 2004. Schleiner, A. -M., (visited 11 / 30 / 2004). Does Lara Croft Wear Fake Polygons, [URL]...|$|E

