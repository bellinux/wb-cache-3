20|55|Public
25|$|The FIDONET {{program was}} what later {{became known as}} a mailer. FIDO was {{modified}} to use a previously unused <b>numeric</b> <b>field</b> in the message headers to store a node number for the machine the message should be delivered to. When FIDONET ran, it would search through the email database for any messages with a number in this field. FIDONET collected all of the messages for a particular node number into a file known as a message packet. After all the packets were generated, one for each node, the FIDONET program would look up the destination node's phone number in NODELIST.BBS, and call the remote system. Provided that FIDONET was running on that system, the two systems would handshake and, if this succeeded, the calling system would upload its packet, download a return packet if there was one, and disconnect. FIDONET would then unpack the return packet, place the received messages into the local system's storage, and move onto the next packet. When there were no remaining packet, it would exit, and run the FIDO BBS program.|$|E
5000|$|Output format {{character}}istics: 8 MAX <b>NUMERIC</b> <b>FIELD</b> ===> 33 (Maximum width for numeric fields) 9 MAX CHAR FIELD [...]. ===> 80 (Maximum width for character fields) 10 COLUMN HEADING [...]. ===> NAMES (NAMES, LABELS, ANY or BOTH) ...|$|E
50|$|The Message Type Indicator is a 4 digit <b>numeric</b> <b>field</b> which {{indicates}} the overall function of the message. A Message Type Indicator includes the ISO 8583 version, the Message Class, the Message Function and the Message Origin, as described below.|$|E
40|$|Abstract. Shared and mutable data-structures pose major {{problems}} in static analysis and most analyzers {{are unable to}} keep track of the values of numeric variables stored in the heap. In this paper, we first identify sufficient conditions under which heap allocated numeric variables in object oriented programs (i. e., <b>numeric</b> <b>fields)</b> can be handled as nonheap allocated variables. Then, we present a static analysis to infer which <b>numeric</b> <b>fields</b> satisfy these conditions at the level of (sequential) bytecode. This allows instrumenting the code with ghost variables which make such <b>numeric</b> <b>fields</b> observable to any field-insensitive value analysis. Our experimental results in termination analysis show that we greatly enlarge the class of analyzable programs with a reasonable overhead. ...|$|R
50|$|The {{following}} table {{describes the}} possible <b>field</b> types. All <b>numeric</b> <b>fields</b> are interpreted as unsigned and Big Endian integers.|$|R
50|$|MAPPER's data {{is stored}} as a {{character}} representation, rather than, say, binary values. Even <b>numeric</b> <b>fields</b> are stored as text.|$|R
5000|$|This form of SQL {{injection}} {{occurs when}} a user-supplied field is not strongly typed or is not checked for type constraints. This could take place when a <b>numeric</b> <b>field</b> {{is to be used}} in a SQL statement, but the programmer makes no checks to validate that the user supplied input is numeric. For example: statement := [...] "SELECT * FROM userinfo WHERE id = [...] " [...] + a_variable + [...] ";" ...|$|E
5000|$|Checks to {{ascertain}} that only expected characters {{are present in}} a field. For example a <b>numeric</b> <b>field</b> may only allow the digits 0-9, the decimal point and perhaps a minus sign or commas. A text field such as a personal name might disallow characters such a markup-based security attack. An e-mail address might require at least one @ sign and various other structural details. Regular expressions are effective ways of implementing such checks. (See also data type checks below) ...|$|E
5000|$|Domains {{define the}} {{structural}} {{characteristics of a}} data element. For example, the data element PRICE could have an assigned domain that defines the price as a <b>numeric</b> <b>field</b> with two decimals. Domains can also carry semantic content in providing a list of possible values. For example, a domain [...] "BOOLEAN" [...] could define a field of type [...] "character" [...] with length 1 and case-insensitive, but would also restrict the possible values to [...] "T" [...] (true) or [...] "F" [...] (false).|$|E
50|$|All <b>numeric</b> <b>fields</b> in SMPP use the {{big endian}} order, {{which means that}} the first octet is the Most Significant Byte (MSB).|$|R
5000|$|Some {{versions}} of [...] lack explicit field delimiters in their printf-generated output, leading to <b>numeric</b> <b>fields</b> running together and thus corrupting the output data.|$|R
40|$|Experience {{has shown}} that people get {{confused}} when discussing the three <b>numeric</b> <b>fields</b> of the TLSA record. This document specifies descriptive acronyms for the three <b>numeric</b> <b>fields</b> in TLSA records. This document updates {{the format of the}} IANA registry created by RFC 6698. Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
50|$|Numeric {{values are}} encoded in octal numbers using ASCII digits, with leading zeroes. For {{historical}} reasons, a final NUL or space character {{should also be}} used. Thus although there are 12 bytes reserved for storing the file size, only 11 octal digits can be stored. This gives a maximum file size of 8 gigabytes on archived files. To overcome this limitation, star in 2001 introduced a base-256 coding that is indicated by setting the high-order bit of the leftmost byte of a <b>numeric</b> <b>field.</b> GNU-tar and BSD-tar followed this idea. Additionally, versions of tar from before the first POSIX standard from 1988 pad the values with spaces instead of zeroes.|$|E
5000|$|In the 1970s Hughes Aircraft Company {{acquired}} the software code ACCOS-V and extensively upgraded it {{while maintaining the}} command structure: entry consists of a command word (case insensitive) up to six letters long, followed by an optional qualifier word up to eight letters long, then either a text field or a <b>numeric</b> <b>field</b> containing up to five numbers. The new code was named HEXAGON and many optical designers used interactive terminals to run the program on an IBM 4341 mainframe computer. In the 1980s the program expanded its capabilities in optimization, tolerance analysis, and physical optics; this later capability is a subset of HEXAGON named SOQ, for System Optical Quality, that models coherent laser systems using a two-dimensional complex field array. In 1985 Hughes was sold to General Motors and renamed GMH; in 1997 GMH was acquired by Raytheon Company. Currently Raytheon has exclusive use of the proprietary software code. The acronym HEXAGON is now said to stand for [...] "Handy EXpert Application for General-Purpose Optical Analysis".|$|E
50|$|The FIDONET {{program was}} what later {{became known as}} a mailer. FIDO was {{modified}} to use a previously unused <b>numeric</b> <b>field</b> in the message headers to store a node number for the machine the message should be delivered to. When FIDONET ran, it would search through the email database for any messages with a number in this field. FIDONET collected all of the messages for a particular node number into a file known as a message packet. After all the packets were generated, one for each node, the FIDONET program would look up the destination node's phone number in NODELIST.BBS, and call the remote system. Provided that FIDONET was running on that system, the two systems would handshake and, if this succeeded, the calling system would upload its packet, download a return packet if there was one, and disconnect. FIDONET would then unpack the return packet, place the received messages into the local system's storage, and move onto the next packet. When there were no remaining packet, it would exit, and run the FIDO BBS program.|$|E
50|$|This {{is a total}} done on one or more <b>numeric</b> <b>fields</b> {{which appears}} in every record. This is a {{meaningful}} total, e.g., add the total payment {{for a number of}} Customers.|$|R
5000|$|Statistics: Specifies {{whether the}} product {{supports}} calculation and presentation of various statistics {{on a specific}} field (e.g., for a <b>numeric</b> <b>fields</b> values such as total number of positive numbers, total number negative numbers, average value (balance), etc.) ...|$|R
30|$|Duplicate {{data entry}} {{was used for}} quality control with the paper-based surveys (Kawado et al. 2003; Neaton et al. 1990). Automated logic {{checking}} of <b>numeric</b> <b>fields</b> was implemented as appropriate. More details about the survey methodology and validation were published previously (Bauer et al. 2016).|$|R
40|$|The paper {{presents}} {{main results}} obtained through {{a course of}} design and numerical field modelling of electrical devices. Based {{on the performance of}} an interdisciplinary international team, the course covered project-based learning in the framework of the master’s programme. The pilot project of the design and optimization of power transformers was conducted in Tallinn/Vändra at the end of November 2006. The purpose of the project was to find out the effectiveness of such student courses to develop comprehension of transformer operation principles and to identify realistic problems in transformer design and manufacturing. Keywords Design, <b>numeric</b> <b>field</b> modelling, rapid prototyping...|$|E
40|$|Since about 5 years, Apple-II type Elliptically Polarizing Undulators (EPU) {{have been}} used very {{successfully}} at the ALS to generate high brightness photon beams with arbitrary polarization. However, both EPUs installed so far cause significant changes of the vertical beamsize, especially when the row phase is changed to change the polarization of the photons emitted. Detailed measurements indicate this {{is caused by a}} row phase dependent skew quadrupole term in the EPUs. Magnetic measurements revealed the same effect for the third EPU to be installed later this year. All measurements to identify and quantify the effect with beam will be presented, as well as some results of magnetic bench measurements and <b>numeric</b> <b>field</b> simulations...|$|E
40|$|Abstract—Clean and {{sustainable}} alternative energy is becoming attractive as oil costs rise {{and the negative}} side effects of traditional energy systems begin to become apparent. One often overlooked, but still rapidly growing alternative is wave power. There are fascinating new designs for harnessing the tremendous power of the waves. Hence any contribution in this field could be of real interest for numerous specialists. In the paper a novel modular permanent magnet tubular linear generator is proposed and analyzed by means of <b>numeric</b> <b>field</b> computations. It was designed for wave power take off systems {{to be placed in}} the Black Sea near the Romanian coasts. Keywords-linear generators, marine energy converters, permanent magnet variable reluctance machines, renewable energy resources, wave energy. I...|$|E
25|$|Continuous {{auditing}} is {{an automatic}} method used to perform auditing activities, such as control and risk assessments, {{on a more}} frequent basis. Technology {{plays a key role}} in continuous audit activities by helping to automate the identification of exceptions or anomalies, analyze patterns within the digits of key <b>numeric</b> <b>fields,</b> review trends, and test controls, among other activities.|$|R
50|$|<b>Numeric</b> <b>fields</b> {{are stored}} in big endian byte order, the native byte order of the PA-RISC, with most being 32-bit wide. Character strings are {{generally}} encoded in 8-bit ASCII and both prefixed with a 32-bit length indicator {{as well as being}} null-terminated, like C strings. Most records are word-aligned (start at even-byte offsets) with padding introduced as necessary.|$|R
5000|$|This list is from 2003 and {{therefore}} {{out of date}} and possibly incorrect. Also this is copyrighted by GS1 - for the up to date list please see the link below for the GS1 General Specifications [...] Because code 128 is more efficient at coding pairs of digits, preference is given to even lengths in <b>numeric</b> <b>fields.</b>|$|R
40|$|The present study, {{directed}} on {{the preparation}} of thin film multichip modules, {{has been carried out}} in the frame of the joint project 'Thin film multilayer of high packaging for the construction and interconnection technique'. Technologies for layer deposition and for structuring have been developed together with the corresponding design rules. <b>Numeric</b> <b>field</b> simulations of the electromagnetic filed have been applied for the determination of primary efficiency parameters. Thin-film processes and techniques are described. The influence of process parameters on the properties of Si layers are demonstrated for improved plasma aided CVD processes, and the advantages of plasma etching are demonstrated. Methods for the characterization of thin film multilayers are described and illustrated by representative results. (WEN) Available from TIB Hannover: RR 1845 (7) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekSIGLEBundesministerium fuer Forschung und Technologie (BMFT), Bonn (Germany) DEGerman...|$|E
40|$|Single ions held in linear Paul traps are {{promising}} candidates {{for a future}} quantum computer. Here, we discuss a two-layer microstructured segmented linear ion trap. The radial and axial potentials are obtained from <b>numeric</b> <b>field</b> simulations and the geometry of the trap is optimized. As the trap electrodes are segmented in the axial direction, the trap allows the transport of ions between different spatial regions. Starting with realistic numerically obtained axial potentials, we optimize the transport of an ion such that the motional degrees of freedom are not excited, even though the transport speed far exceeds the adiabatic regime. In our optimization we achieve a transport within roughly two oscillation periods in the axial trap potential compared to typical adiabatic transports that take of the order 100 oscillations. Furthermore heating due to quantum mechanical effects is estimated and suppression strategies are proposed...|$|E
40|$|A segmentation-free {{neural network}} {{classifier}} for reading machine-printed numeric fields is described. The numeric fields were extracted from binary images of mailpieces from the USPS mailstream. The images include {{a wide variety}} of fonts and a significant percentage of them are of very low quality. The classifier uses convolution-like features which are extracted and used as inputs to a neural network. This process is performed over a window that is passed along the image of the entire <b>numeric</b> <b>field.</b> Thus the characters in the fields are not isolated by any segmentation process. Likelihood functions are used to make final decisions concerning the locations and class memberships of the characters in the fields. Approximately 83 % of the numeric fields were correctly read. 1. 0 Overview Character recognition has been studied extensively for the past thirty years. A wide variety of techniques have been proposed and described in the literature over the years. Furthermore, there are many O [...] ...|$|E
50|$|For example, a date {{could be}} stored as a record {{containing}} a <b>numeric</b> year <b>field,</b> a month field {{represented as a}} string, and a <b>numeric</b> day-of-month <b>field.</b> A Personnel record might contain a name, a salary, and a rank. A Circle record might contain a center and a radius—in this instance, the center itself might be represented as a point record containing x and y coordinates.|$|R
40|$|Abstract. Termination {{analysis}} tools strive to find proofs of termination for as wide {{a class of}} (terminating) programs as possible. Though several tools exist which are able to prove termination of non-trivial programs, when one tries to apply them to realistic programs, {{there are still a}} number of open problems. In the case of Java-like languages, one of such problems is to find a practical solution to prove termination when the termination behaviour of loops is affected by <b>numeric</b> <b>fields.</b> We have performed statistics on the Java libraries to see how often this happens in practice and we found that in 12. 95 % of cases, the number of iterations of loops (and therefore termination) explicitly depends on values stored in fields and, {{in the vast majority of}} cases, such <b>fields</b> are <b>numeric.</b> Inspired by the examples found in the libraries, this paper identifies a series of difficulties that need to be solved in order to deal with <b>numeric</b> <b>fields</b> in termination and propose some ideas towards a lightweight analysis which is able to prove termination of sequential Java-like program...|$|R
25|$|In databases, it is {{possible}} for a field not to have a value. It is then said to have a null value. For <b>numeric</b> <b>fields</b> it is not the value zero. For text fields this is not blank nor the empty string. The presence of null values leads to three-valued logic. No longer is a condition either true or false, but it can be undetermined. Any computation including a null value delivers a null result.|$|R
40|$|The Internet {{has become}} an {{essential}} tool for communication and information access, and with growing demand, new challenges and usage continue to surface. A complimentary tool that came to exist {{in recent years is}} Cloud Computing - an economical solution that serves as an alternative to owning and running computing facilities. While cloud computing has many advantages, {{there are a number of}} issues that hamper the adoption of cloud computing. Some of the major concerns, can be classified into one of the following groups: traditional security, availability, and third-party data control. The first set of concerns, revolve around security threats that can expose clients private data. The second set of concerns, revolve around the compromise of the operation of the applications in the cloud. Finally, the last set of concerns involve the legal implications of data and applications being held by a third party. Different solutions exist to deal with traditional security, availability, and third-party data control, separately, but one way to handle traditional security, and third-party data control, is through data encryption. The client has to take responsibility for ensuring that the data is setup in such a way, that even if the cloud service provider is compromised, or has a malicious intent, it is not able to get anything from the customers data. Of course, encrypting the data introduces limitations, with varying tradeoffs for different systems. In this work, we use Shamirs Secret Sharing Scheme and a symmetric key cryptographic system (AES) to encrypt data at a field level, such that it can be stored in the cloud without compromising data privacy. Using Shamirs Secret Sharing Scheme to encrypt <b>numeric</b> <b>field</b> values, gives us the ability to perform efficient addition, subtraction, and multiplication on the encrypted <b>numeric</b> <b>field</b> values. We explore two different ways of using Shamir Secret Sharing Scheme and AES, and discuss the advantages and disadvantages of each. We then propose, and complete, a software implementation for the proposed system. The implementation is used in order to compare execution time, memory usage, and bandwidth usage, to the plaintext and MySQL encrypted versions of the database. Analyzing the benchmarks, we can see how the performance varies for different query types when run on tables with different number of records and field types giving the reader an idea about the cost and tradeoffs of the system...|$|E
40|$|Common deterrents to cycling in North America are {{the real}} and/or {{perceived}} concerns on the safety, comfort, and practicality of choosing cycling over other modes of transportation, concerns that may be addressed by improved cycling facilities. The challenge lies in effectively quantifying the desirability of cycling facilities to assess return on investment for bicycle infrastructure decisions. In this paper an ordinal logit regression model is proposed as a potential Bicycle Comfort and Safety Prediction Model (BCSPM) to quantitatively predict a cyclist’s perceived safety and comfort. These BCSPMs were developed by conducting experiments utilizing an Instrumented Probe Bicycle (IPB). The IPB {{used in this study}} was developed using research from around the world. Many sensors were used, including: a 3 DM-GX 3 inertial sensor collecting time-stamped, position, velocity, and roll/yaw/pitch angles; and, a Microsoft Kinect sensor (still being operationalized) to record time-stamped eye/head positions, facial expressions, pulse, and ambient noise levels. Data for the BCSPM was collected from IPB sensors (<b>numeric),</b> <b>field</b> assessments (subjective numeric and categorical), and IPB rider questionnaires (categorical, Likert scales of comfort/safety). This paper outlines the potential applications of the BCSPM, the early modeling results of the study, the challenges faced, potential improvements that can be made to the IPB, and the next steps in this research. (Author/publisher...|$|E
40|$|Includes bibliographical {{references}} (page 37). An improved tool {{was implemented}} to create shape files from CSV file, allowing users {{to select the}} attributes/fields of their choice and giving privileges to rename the attributes as well. This tool also provides the user with an option to input CSV file with attribute headers. One major improvement over earlier efforts includes that the user has an option to choose attributes to be stored as a numeric value, {{rather than as a}} string, by specifying the size and a precision for the <b>numeric</b> <b>field.</b> A tool was created from scratch, which displays the hex dump versions of a. dbf file provided by the user. The tool interprets those hex dumps according to their ESRI specified formats. The purpose of this tool was to make convenient for students to understand the structure of dbf files. This tool can used by GIS professionals as well, for example to examine dbf files that are not performing correctly, and might have small but fatal corruptions. The first tool can be used by GIS application programmers. The second tool can help students or practitioners understand DBF file format. Departments whose students might profit are geography, geology and computer science...|$|E
50|$|MPS {{has many}} limitations. It does not specify the {{direction}} of optimization which is handled differently by solvers. <b>Numeric</b> <b>fields</b> have 12 characters width therefore limiting the precision. The representation is neither easy for human interpretation nor compact (although reserves column / row order information, which is often beneficial for LP solver behaviour reproducibility). One of the alternatives to MPS {{that does not have}} its limitations and is supported by most solvers is the nl file format.|$|R
40|$|We extend recent {{approaches}} for calculating {{the probability of}} program behaviors, to allow model counting for complex data structures with <b>numeric</b> <b>fields.</b> We use symbolic execution with lazy initialization to compute the input structures leading to the occurrence of a target event, while keeping a symbolic representation of the constraints on the numeric data. Off-the-shelf model counting tools are used to count the solutions for numerical constraints and field bounds encoding data structure invariants are used to reduce the search space. The technique is implemented in the Symbolic PathFinder tool and evaluated on several complex data structures. Results show that the technique is much faster than an enumeration-based method that uses the Korat tool and also highlight the benefits of using the field bounds {{to speed up the}} analysis...|$|R
25|$|Java lacks native {{unsigned}} integer types. Unsigned data are often generated from programs written in C {{and the lack}} of these types prevents direct data interchange between C and Java. Unsigned large numbers are also used in many <b>numeric</b> processing <b>fields,</b> including cryptography, which can make Java less convenient to use for these tasks.|$|R
