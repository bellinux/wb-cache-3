328|60|Public
50|$|In {{computer}} science and operations research, the bees algorithm is a population-based search algorithm which {{was developed in}} 2005. It mimics the food foraging behaviour of honey bee colonies. In its basic version the algorithm performs a kind of <b>neighbourhood</b> <b>search</b> combined with global search, {{and can be used}} for both combinatorial optimization and continuous optimization. The only condition for the application of the bees algorithm is that some measure of topological distance between the solutions is defined. The effectiveness and specific abilities of the bees algorithm have been proven in a number of studies.|$|E
50|$|Scarf was {{interested}} in economies with indivisibilities in production, i.e., where activity levels are constrained to be integers, an extreme form of non-convexity. When factor endowments are specified we are led to the general integer program {{for which there is}} no pricing test to detect whether a feasible production plan is indeed optimal. His major goals have been (1) to replace the pricing test by a local <b>neighbourhood</b> <b>search</b> and (2) to develop a mechanism for efficiently finding this test set. In the early 1980s, he made a decisive victory in achieving his first goal. Using his early concept of primitive sets arising in his research on the core and the computation of equilibria, Scarf succeeded in developing a quantity test set. He proved that this test set is unique and minimal, depending on the technology matrix alone and not on the specification of the particular factor endowment. It consists of a finite number of integral production plans. When this test set is available, one can easily use it to verify if a production plan is optimal or not, and if it is not optimal, one can use the test set to obtain a better production plan.|$|E
30|$|Constrained <b>neighbourhood</b> <b>search</b> {{optimisation}} (CNSO).|$|E
60|$|One evening they {{approached}} a small hamlet, {{or group of}} cottages, where they learned, among other things, {{that two of the}} Queen's spies were at that moment in the <b>neighbourhood,</b> <b>searching</b> for two ladies of the Court who had fled because Ranavalona had threatened them with imprisonment.|$|R
40|$|Thesis (Master) [...] İzmir Institute of Technology, Computer Engineering, İzmir, 2008 Includes bibliographical {{references}} (leaves: 87 - 62) Text in English; Abstract: Turkish and Englishix, 80 leavesIn {{this study}} {{it has been}} tackled the NP-complete problem of academic class scheduling (or timetabling). The aim of this thesis is finding a feasible solution for Computer Engineering Department of İzmir Institute of Technology. Hence, a solution method for course timetabling is presented in this thesis, consisting of two phases: a constraint programming phase to provide an initial solution and a simulated annealing phase with different <b>neighbourhood</b> <b>searching</b> algorithms. When the experimental data are obtained it is noticed that according to problem structure, whether the problem is tightened or loosen constrained, {{the performance of a}} hybrid approach can change. These different behaviours of the approach are demonstrated by two different timetabling problem instances. In addition to all these, the <b>neighbourhood</b> <b>searching</b> algorithms used in the simulated annealing technique are tested in different combinations and their performances are presented...|$|R
50|$|The {{variable}} <b>neighbourhood</b> decomposition <b>search</b> (VNDS) method (Hansen et al.) {{extends the}} basic VNS into a two-level VNS scheme based upon :decomposition of the problem. For ease of presentation, but without loss of generality, {{it is assumed}} that the solution x represents the set of :some elements.|$|R
40|$|In this paper, we {{consider}} a Flight and Maintenance Planning (FMP) problem where the decisions regarding wh ich helicopter should fly {{and for how}} long, and which helicopter should be undergoing maintenance and when, are addressed. The algorithms solve a military helicopter fleet planning problem with complex maintenance/inspection routine and deployment requirements. The objectives are to minimise deviation from the flight requirements and to minimise transfer costs due to deployments. This work presents and compares Enhanced Aircraft Flowchart Diagram heuristic, <b>neighbourhood</b> <b>search,</b> and variable <b>neighbourhood</b> <b>search</b> algorithms. The {{results show that the}} current Aircraft Flowchart Diagram technique can be improved by using <b>neighbourhood</b> <b>search</b> algorithms. Our results suggests the use of multiple variable <b>neighbourhood</b> <b>search</b> algorithms to get high quality solutions without spending too much of computational effort...|$|E
40|$|Local search {{algorithms}} operate {{by making}} small changes to candidate solutions {{with the aim}} of reaching new and improved solutions. The problem is that often the search will become trapped at sub optimal states from where there are no improving neighbours. Much research has gone into creating schemes to avoid these local optima and various strategies exist mainly based around altering the acceptance function. Another approach is Variable <b>Neighbourhood</b> <b>Search</b> which aims to bypass optima by linearly switching through multiple search neighbourhoods. We propose a new method where the selection of neighbourhoods is dynamically decided dependant on the violations of the problem constraints, Constraint Directed Variable <b>Neighbourhood</b> <b>Search.</b> We compared Constraint Directed Variable <b>Neighbourhood</b> <b>Search</b> to Variable <b>Neighbourhood</b> <b>Search</b> and show that the same search progress can be achieved whilst exploring {{only a fraction of the}} states...|$|E
40|$|In {{the real}} world, many {{problems}} are continuous in nature. In some cases, finding the global solutions for these problems is di±cult. The {{reason is that}} the problem's objective function is non convex, nor concave and even not differentiable. Tackling these problems is often computationally too expensive. Although the development in computer technologies are increasing the speed of computations, this often is not adequate, particularly if the size of the problem's instance are large. Applying exact methods on some problems may necessitate their linearisation. Several new ideas using heuristic approaches have been considered particularly since they tackle the problems within reasonable computational time and give an approximate solution. In this thesis, the variable <b>neighbourhood</b> <b>search</b> (VNS) metaheuristic (the framework for building heuristic) has been considered. Two variants of variable <b>neighbourhood</b> <b>search</b> metaheuristic have been developed, continuous variable <b>neighbourhood</b> <b>search</b> and reformulation descent variable <b>neighbourhood</b> <b>search.</b> The GLOB-VNS software (Drazic et al., 2006) hybridises the Microsoft Visual Studio C++ solver with variable <b>neighbourhood</b> <b>search</b> metaheuristics. It {{has been used as a}} starting point for this research and then adapted and modified for problems studied in this thesis. In fact, two problems have been considered, censored quantile regression and the circle packing problem. The results of this approach for censored quantile regression outperforms other methods described in the literature, and the near-optimal solutions are obtained in short running computational time. In addition, the reformulation descent variable <b>neighbourhood</b> <b>search</b> variant in solving circle packing problems is developed and the computational results are provided. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|E
40|$|We have {{searched the}} Forth Catalogue of Nearby Stars for halo stars and {{identified}} 15 subdwarfs {{and a high}} velocity white dwarf in the solar <b>neighbourhood.</b> This <b>search</b> was motivated mainly by the recent determinations of MACHO masses of about 0. 5 M_sun, which are typical for halo dwarfs. The local mass density of the stars is 1. 5 10 ^- 4 M_sun pc^- 3, which is only 3...|$|R
40|$|Crossover {{plays an}} {{important}} role in GA-based search. There have been many empirical comparisons of different crossover operators in the literature. However, analytical results are limited. No theory has explained the behaviours of different crossover operators satisfactorily. This paper analyses crossover from quite a different point of view from the classical schema theorem. It explains the behaviours of different crossover operators through the investigation of crossover's <b>search</b> <b>neighbourhood</b> and <b>search</b> step size. It is shown that given the binary chromosome encoding scheme GAs with a large search step size is better than GAs with a small step size for most problems. Since uniform crossover's search step size is larger than that of either one-point or twopoint crossover, uniform crossover is expected to perform better than the other two. Similarly, two-point crossover is expected to perform better than one-point crossover due to its larger search step size. It is also shown in this [...] ...|$|R
50|$|The flashback, as point-of-view narrations between Pallavi and Krishna, are {{intercut with}} Pallavi’s don-like father and uncle terrorizing the <b>neighbourhood</b> in <b>search</b> of the truant girl. The naïve Krishna hesitantly yields to her charm {{and the two}} run away to Kolkata. Krishna's friend Ali (Rudranil Ghosh) helps them, and the lovers marry. The couple consummates their union while the mess chaps hastily {{organize}} a proper wedding and elaborate reception. But her family {{is not going to}} give up so easily on the daughter they dote on.|$|R
40|$|This thesis was {{submitted}} for {{the degree of}} Doctor of Philosophy and awarded by Brunel University. In the real world, many problems are continuous in nature. In some cases, finding the global solutions for these problems is di±cult. The {{reason is that the}} problem's objective function is non convex, nor concave and even not differentiable. Tackling these problems is often computationally too expensive. Although the development in computer technologies are increasing the speed of computations, this often is not adequate, particularly if the size of the problem's instance are large. Applying exact methods on some problems may necessitate their linearisation. Several new ideas using heuristic approaches have been considered particularly since they tackle the problems within reasonable computational time and give an approximate solution. In this thesis, the variable <b>neighbourhood</b> <b>search</b> (VNS) metaheuristic (the framework for building heuristic) has been considered. Two variants of variable <b>neighbourhood</b> <b>search</b> metaheuristic have been developed, continuous variable <b>neighbourhood</b> <b>search</b> and reformulation descent variable <b>neighbourhood</b> <b>search.</b> The GLOB-VNS software (Drazic et al., 2006) hybridises the Microsoft Visual Studio C++ solver with variable <b>neighbourhood</b> <b>search</b> metaheuristics. It {{has been used as a}} starting point for this research and then adapted and modified for problems studied in this thesis. In fact, two problems have been considered, censored quantile regression and the circle packing problem. The results of this approach for censored quantile regression outperforms other methods described in the literature, and the near-optimal solutions are obtained in short running computational time. In addition, the reformulation descent variable <b>neighbourhood</b> <b>search</b> variant in solving circle packing problems is developed and the computational results are provided...|$|E
40|$|In this paper, we {{investigate}} the hybridization of constraint programming and local search techniques within a large <b>neighbourhood</b> <b>search</b> scheme for solving highly constrained nurse rostering problems. As {{identified by the}} research, {{a crucial part of}} the large <b>neighbourhood</b> <b>search</b> is the selection of the fragment (neighbourhood, i. e. the set of variables), to be relaxed and re-optimized iteratively. The success of the large <b>neighbourhood</b> <b>search</b> depends on the adequacy of this identified neighbourhood with regard to the problematic part of the solution assignment and the choice of the neighbourhood size. We investigate three strategies to choose the fragment of different sizes within the large <b>neighbourhood</b> <b>search</b> scheme. The first two strategies are tailored concerning the problem properties. The third strategy is more general, using the information of the cost from the soft constraint violations and their propagation as the indicator to choose the variables added into the fragment. The three strategies are analyzed and compared upon a benchmark nurse rostering problem. Promising results demonstrate the possibility of future work in the hybrid approach. ...|$|E
40|$|A {{simulated}} annealing {{is combined with}} a tabu search, to develop a robust and powerful optimisation technique for solving the unit commitment problem. The problem is broken down into a combinatorial subproblem in unit status variables and a quadratic programming subproblem in unit power output variables. The combinatorial subproblem is solved using the proposed method. In the hybrid algorithm, which {{is referred to as}} a stochastic extended <b>neighbourhood</b> <b>search,</b> {{simulated annealing}} is used as the main stochastic algorithm, and a tabu search is used as an extended <b>neighbourhood</b> <b>search,</b> to locally improve the solution obtained by simulated annealing. The <b>neighbourhood</b> <b>search</b> uses local domain-knowledge, which results in rapid convergence of the simulated annealing algorithm. The results obtained for several example systems illustrate the potential of the hybrid approach...|$|E
40|$|The {{personnel}} {{scheduling problem}} basically involves deciding at which times and on which days (i. e. which shifts) each employee should work over a specific planning period. However, the personnel scheduling problem {{is actually a}} title {{for a group of}} very similar problems. There is no general personnel scheduling problem. Instead there is a group of problems with a common structure but which differ in their constraints and objectives. This creates an additional challenge in implementing a problem domain module for personnel scheduling. To overcome this we have designed a data file format for which each instance can select a combination of a objectives and constraints from a wide choice. We then implemented a software framework containing all the functions for these constraints and objectives. The framework also contains methods for parsing these data files, data structures which can be used by heuristic algorithms (such as <b>neighbourhood</b> <b>searches)</b> and libraries for visualisations of instances and solutions. As mentioned, there is a large and diverse collection of constraints and objectives that can appear in personnel scheduling problems. For example, in one problem there may be a constraint on the maximum number of hours a nurse can work in the planning period. I...|$|R
30|$|Step 6 For {{every new}} particle, a {{maximum number of}} q {{particles}} are generated as per j =  1, 2,…,q discussed previously {{and based on the}} newly calculated morphactin concentration in Step 5, the new best candidate is found on the current generated branch in the previous step. This accounts for a <b>neighbourhood</b> like <b>search</b> for optimal candidate solutions. This process of generating new candidate solutions continues till a better minimized objective function is achieved and stops till there is no improvement in the fitness value of the generated candidate solutions.|$|R
40|$|In {{recent years}} many {{so-called}} matheuristics {{have been proposed}} for solving Mixed Integer Programming (MIP) problems. Though {{most of them are}} very efficient, they do not all theoretically converge to an optimal solution. In this paper we suggest two matheuristics, based on the variable <b>neighbourhood</b> decomposition <b>search</b> (VNDS), and we prove their convergence. Our approach is computationally competitive with the current state-of-the-art heuristics, and on a standard benchmark of 59 0 - 1 MIP instances, our best heuristic achieves similar solution quality to that of a recently published VNDS heuristic for 0 - 1 MIPs within a shorter execution time...|$|R
40|$|In {{this work}} we {{consider}} the molecular distance geometry problem, which {{can be defined as}} the determination of the three-dimensional structure of a molecule based on distances between some pairs of atoms. We address the problem as a nonconvex least-squares problem. We apply three global optimization algorithms (spatial Branch-and-Bound, Variable <b>Neighbourhood</b> <b>Search,</b> Multi Level Single Linkage) to two sets of instances, one taken from the literature and the other new. Keywords: molecular conformation, distance geometry, global optimization, spatial Branch-and-Bound, variable <b>neighbourhood</b> <b>search,</b> multi level single linkage...|$|E
40|$|Genetic {{algorithms}} (GAs) {{have proved}} to be a versatile and effective approach for solving combinatorial optimization problems. Nevertheless, there are many situations in which the simple GA does not perform particularly well, and various methods of hybridization have been proposed. These often involve incorporating other methods such as simulated annealing or local optimization as an `add-on' extra to the basic GA strategy of selection and reproduction. Here, we explore an alternative perspective which views genetic algorithms as a generalization of <b>neighbourhood</b> <b>search</b> methods. It is not the intention to present a fully worked-out statement as to what sort of <b>neighbourhood</b> <b>search</b> a GA is. Rather, it is to investigate some of the parallels, and to suggest some areas for further research which may enhance our understanding of both <b>neighbourhood</b> <b>search</b> and genetic algorithms. 1 Introduction Genetic algorithms (GAs) have frequently been applied to problems of combinatorial optimization, [...] ...|$|E
40|$|Variable <b>Neighbourhood</b> <b>Search</b> (VNS) {{is one of}} {{the most}} recent metaheuristics used for solving {{combinatorial}} optimization problems in which a systematic change of neighbourhood within a local search is carried out. In this paper, a variable <b>neighbourhood</b> <b>search</b> algorithm is proposed for Job Shop Scheduling (JSS) problem with makespan criterion. The results gained by VNS algorithm are presented and compared with the best known results in literature. It is concluded that the VNS implementation is better than many recently published works with respect to the quality of the solution...|$|E
60|$|It {{had been}} ascertained by some stray hunter of Addedomar's party that {{considerable}} bands of men were ranging {{the valley of}} the Springs and its <b>neighbourhood</b> in <b>search</b> of something or some one, and that they went about usually in small detached parties. The stray hunter, with an eye, doubtless, to his personal interest, conveyed the news to the robber chief, who, having made secret and extensive preparations, happened at the time to be on his way to raid the territories of King Hudibras, intending to take the town of Gunrig as a piece of by-play in passing.|$|R
40|$|Evidence from visual-search {{experiments}} {{is discussed}} {{that indicates that}} there is spatially parallel encoding based on three-dimensional (3 -D) spatial relations between complex image features. In one paradigm, subjects had to detect an odd part of cube-like figures, formed by grouping of corner junctions. Performance with cube-like figures was unaffected {{by the number of}} corner junctions present, though performance was affected when the corners did not configure into a cube. It is suggested from the data that junctions can be grouped to form 3 -D shapes in a spatially parallel manner. Further, performance with cube-like figures was more robust to noncollinearity between junctions than was performance when junctions grouped to form two-dimensional planes. In the second paradigm, subjects searched for targets defined by their size. Performance was affected by a size illusion, induced by linear-perspective cues from local background <b>neighbourhoods.</b> <b>Search</b> was made more efficient when the size illusion was consistent with the real size difference between targets and nontargets, and it was made less efficient when the size illusion was inconsistent with the real size difference. This last result occurred even though search was little affected by the display size in a control condition. We suggest that early, parallel visual processes are influenced by 3 -D spatial relations between visual elements, that grouping based on 3 -D spatial relations is relatively robust to noncollinearity between junctions, and that, at least in some circumstances, 3 -D relations dominate those coded in two-dimensions...|$|R
40|$|AbstractThe IMPASSE {{class of}} local search {{algorithms}} have given good results on many vertex colouring benchmarks. Previous work enhanced IMPASSE {{by adding the}} constraint programming technique of forward checking, in order to prune colouration <b>neighbourhoods</b> during <b>search.</b> On several large graphs the algorithm found the best known colourings. This paper extends the work by improving the heuristics and generalising the approach to bandwidth multicolouring. It is shown to give better results than a related search algorithm on an integer programming model, and to be competitive with published results. Experiments indicate that stronger constraint propagation further improves search performance, but that a symmetry breaking technique has unpredictable effects...|$|R
40|$|<b>Neighbourhood</b> <b>search</b> {{techniques}} {{have been successfully}} applied {{to a range of}} combinatorial optimisation problems, such as scheduling. Concurrently, work in the evolutionary computation community has explored the utility of interactive evolutionary algorithms that use the idea of `the user as fitness function' to tackle problems where the fitness function is hard, if not impossible, to specify. This paper will place the work above {{in the context of the}} <b>neighbourhood</b> <b>search</b> paradigm and scheduling, and tie it in with work from the OR and DSS communities, and argue that this leads to a more useful view of interactive <b>neighbourhood</b> <b>search.</b> Some of the points made in this paper will be illustrated by reference to an application domain: an emergency resource redistribution system for the developing world. 1 Introduction Combinatorial optimisation problems (COPs) are the subject of much research due to their ubquitious nature, and the fact that most are NP-hard. This has led researchers to [...] ...|$|E
40|$|In {{this paper}} we {{consider}} the single machine earliness/tardiness scheduling problem with no idle time. We present heuristic algorithms based on the filtered and recovering beam search techniques and compare them with existing <b>neighbourhood</b> <b>search</b> and dispatch rule heuristics. Filtering procedures using both priority evaluation functions and problem-specific properties have been considered. Extensive preliminary tests were performed to determine appropriate parameter values for the beam search algorithms and the <b>neighbourhood</b> <b>search</b> procedure. The computational {{results show that the}} recovering beam search algorithms outperform their filtered counterparts in both solution quality and computational requirements, while the priority-based filtering procedure proves superior to the rules-based alternative. The best solutions are given by the <b>neighbourhood</b> <b>search</b> algorithm, but this procedure is computationally intensive and can therefore only be applied to small or medium size instances. The recovering beam search heuristic provides results that are close in solution quality and is significantly faster, so {{it can be used to}} solve even large instances. scheduling, early/tardy, beam search, heuristics...|$|E
40|$|This paper {{presents}} {{a combination of}} variable <b>neighbourhood</b> <b>search</b> and mathematical programming to minimize the sum of earliness and tardiness penalty costs of all operations for just-in-time job-shop scheduling problem (JITJSSP). Unlike classical E/T scheduling problem with each job having its earliness or tardiness penalty cost, each operation in this paper has its earliness and tardiness penalties, which are paid if the operation is completed before or after its due date. Our hybrid algorithm combines (i) a variable <b>neighbourhood</b> <b>search</b> procedure to explore the huge feasible solution spaces efficiently by alternating the swap and insertion neighbourhood structures and (ii) a mathematical programming model to optimize the completion times of the operations for a given solution in each iteration procedure. Additionally, a threshold accepting mechanism is proposed to diversify the local search of variable <b>neighbourhood</b> <b>search.</b> Computational results on the 72 benchmark instances show that our algorithm can obtain the best known solution for 40 problems, and the best known solutions for 33 problems are updated...|$|E
40|$|Weakly {{symmetric}} graphs are de ned {{and their}} construction from symmetric graphs is explained. It is {{shown that the}} TSP on a weakly symmetric graph joined with each {{of a number of}} well known local <b>search</b> <b>neighbourhoods</b> yields elementary landscapes (in which local minima are superior to the average). In conclusion an O(n) algorithm for identifying weakly symmetric graphs is described...|$|R
40|$|AbstractWeakly {{symmetric}} graphs {{are defined}} and their construction from symmetric graphs is explained. It is {{shown that the}} TSP on a weakly symmetric graph joined with each {{of a number of}} well-known local <b>search</b> <b>neighbourhoods</b> yields elementary landscapes (in which local minima are better than the average). In conclusion, an O(n 2) algorithm for identifying weakly symmetric graphs is described...|$|R
50|$|As night {{starts to}} fall, and Ida doesn't return, Helga becomes {{worried about her}} daughter, {{going so far as}} to phone the shop to see if Ida is there, but she is told that Ida never arrived.Helga calls her sister Ruth who lives in the <b>neighbourhood.</b> Together they <b>search</b> for Ida but to no avail. Finally they call the police and also Helga's ex-husband Anders.|$|R
40|$|This article paper {{presents}} a hybrid metaheuristic algorithm {{to solve the}} time-dependent vehicle routing problem with hard time windows. Time-dependent travel times are influenced by different congestion levels experienced throughout the day. Vehicle scheduling without consideration of congestion might lead to underestimation of travel times and consequently missed deliveries. The algorithm {{presented in this paper}} makes use of Large <b>Neighbourhood</b> <b>Search</b> approaches and Variable <b>Neighbourhood</b> <b>Search</b> techniques to guide the search. A first stage is specifically designed {{to reduce the number of}} vehicles required in a search space by the reduction of penalties generated by time-window violations with Large <b>Neighbourhood</b> <b>Search</b> procedures. A second stage minimises the travel distance and travel time in an ‘always feasible’ search space. Comparison of results with available test instances shows that the proposed algorithm is capable of obtaining a reduction in the number of vehicles (4. 15 %), travel distance (10. 88 %) and travel time (12. 00 %) compared to previous implementations in reasonable tim...|$|E
40|$|The lock {{planning}} problem aims at transferring {{a number}} of ships, which arrive within a certain time horizon, in the most efficient way. The problem requires a multi-objective approach: minimize the number of turnings of the lock by arranging different ships into the chambers and minimize the waiting time for each ship. This waiting time is the time between {{the arrival of a}} ship and the turning time of the ship. We applied a multiple <b>neighbourhood</b> <b>search</b> approach to the lock planning problem. In this approach the neighbourhoods are explored separately using the same starting solution. The best resulting solution from these searches is selected as the new starting solution for the multiple <b>neighbourhood</b> <b>search.</b> This process is repeated until none of the neighbourhoods generate improvements. When exploring the neighbourhoods, a candidate solution is accepted if it satisfies the Late Acceptance criterion. It depends on one parameter L only, which is the length of the acceptance list. A candidate solution will be compared to the solution that was ‘current’ L steps before. Increasing this parameter will allow more worsening moves, and thus help avoiding local optima. When several improving moves exist, the best of them will be selected to update the acceptance list. To validate this new approach, we generated several test instances for the lock planning problem. We carried out experiments with different heuristic optimisation methods: the multiple <b>neighbourhood</b> <b>search</b> with the late acceptance criterion, the multiple <b>neighbourhood</b> <b>search</b> with the best improving criterion and the late acceptance and the best improving criterion applied to all the neighbourhoods at the same time. The multiple <b>neighbourhood</b> <b>search</b> with the late acceptance criterion performs better than all the other methods, within a comparable amount of calculation time. status: publishe...|$|E
40|$|A novel nurse {{rostering}} {{model is}} developed to represent real world problem instances more accurately. The proposed model is generic {{in the sense}} that it allows modelling of essentially different problem instances. Novel local search neighbourhoods are implemented to take advantage of the problem properties represented by the model. These neighbourhoods are used in a variable <b>neighbourhood</b> <b>search</b> and in an adaptive large <b>neighbourhood</b> <b>search</b> algorithm. The performance of the solution method is evaluated empirically on real world data. The proposed model is open to further extensions for covering personnel planning problems in different sectors and countries. status: publishe...|$|E
40|$|This paper {{considers}} house {{trading and}} valuation in heterogeneous but interconnected housing markets. We use a novel data set on email alerts {{from the popular}} real estate website Trulia. com to document stylized facts on buyer search patterns. We then build a quantitative model of housing market search that can account for the joint distribution of turnover, inventory and search patterns in San Francisco Bay Area. We use the model to infer the distribution of searcher preferences {{as well as the}} matching technology. We show that more expensive <b>neighbourhoods</b> are <b>searched</b> by smaller clienteles who also tend to move less often. As a result, expensive houses trade at much lower liquidity discounts than cheap houses...|$|R
40|$|Search heuristics, such as Tabu Search and Simulated Annealing, {{start from}} a single {{solution}} and incrementally change {{it in order to}} find better solutions. Given a particular problem, there are a large number of possible ways of formulating a search in order to solve it. The choice of <b>search</b> space, <b>neighbourhood</b> scheme, <b>search</b> heuristic and its many possible additions and enhancements are all elements of a search formulation. This paper identifies some of the key relationships between these different elements and how these could impact the overall performance of the search. The framework developed from these relationships helps to classify different search heuristic modifications and identifies areas where relatively little research has been done. 1...|$|R
6000|$|... "Yes, {{there is}} bad news. Another plot against {{the life of}} the Czar has been discovered. The Nihilists have mined under the road by which he was {{yesterday}} evening to have travelled to the railway-station. It seems that some suspicion was felt by the police. I do not know how it arose; at any rate at the last moment the route was changed. During the night all the houses in the suspected <b>neighbourhood</b> were <b>searched,</b> and in the cellar of one of them a passage was found leading under the road. A mine was heavily charged with powder, and was connected by wires to an electric battery; and {{there can be no doubt}} that had the Czar passed by as intended he would have been destroyed by the explosion. It is terrible, terrible!" ...|$|R
