10000|10000|Public
5|$|Hilbert spaces form a basic tool in {{the study}} of partial {{differential}} equations. For many classes of partial differential equations, such as linear elliptic equations, it is possible to consider a generalized solution (known as a weak solution) by enlarging the class of functions. Many weak formulations involve the class of Sobolev functions, which is a Hilbert space. A suitable weak formulation reduces to a geometrical problem the analytic problem of finding a solution or, often what is more important, showing that a solution exists and is unique for given boundary data. For linear elliptic equations, one geometrical result that ensures unique solvability for a large class of problems is the Lax–Milgram theorem. This strategy forms the rudiment of the Galerkin method (a finite element method) for <b>numerical</b> <b>solution</b> of partial differential equations.|$|E
25|$|We seek a <b>numerical</b> <b>solution</b> that {{exhibits}} {{the same}} behavior.|$|E
25|$|Computing the {{trajectory}} of a spacecraft requires the accurate <b>numerical</b> <b>solution</b> {{of a system of}} ordinary differential equations.|$|E
40|$|The <b>numerical</b> <b>solutions</b> of {{stochastic}} {{differential delay}} equations (SDDEs) under the generalized Khasminskii-type condition were discussed by Mao [15], {{and the theory}} there showed that the Euler-Maruyama (EM) <b>numerical</b> <b>solutions</b> converge to the true solutions in probability. However, there is so far no result on the strong convergence (namely in L^p) of the <b>numerical</b> <b>solutions</b> for the SDDEs under this generalized condition. In this paper, we will use the truncated EM method developed by Mao [16] to study the strong convergence of the <b>numerical</b> <b>solutions</b> for the SDDEs under the generalized Khasminskii-type condition...|$|R
40|$|The {{analytic}} {{theory of}} weak Langmuir turbulence is well known, but very little {{has previously been}} done to compare its predictions with <b>numerical</b> <b>solutions</b> of the basic dynamical evolution equations. In this paper, <b>numerical</b> <b>solutions</b> of the statistical weak turbulence theory are compared with <b>numerical</b> <b>solutions</b> of the Zakharov model of Langmuir turbulence, and good agreement in certain regimes of very weak field strength is found...|$|R
40|$|In this study, several novel <b>numerical</b> <b>solutions</b> are {{presented}} {{to solve the}} turbulent filtration equation and its special case called “Non-Newtonian mechanical filtration equation”. The turbulent filtration equation in porous media {{is a very important}} equation which has many applications to solve the problems appearing especially in mechatronics, micro mechanic and fluid mechanic. Many applied mechanical problems can be solved using this equation. For example, non-Newtonian mechanical filtration equation solves many filtration problems in fluid mechanic. The novel proposed discrete <b>numerical</b> <b>solutions</b> are simulated in MATLAB/simulink environment to validate the theoretically <b>numerical</b> <b>solutions</b> and proofing that the proposed <b>numerical</b> <b>solutions</b> are realizable...|$|R
25|$|A reaction-diffusion {{system can}} be solved by using methods of {{numerical}} mathematics. There are existing several numerical treatments in research literature. Also for complex geometries <b>numerical</b> <b>solution</b> methods are proposed.|$|E
25|$|This {{equation}} {{cannot be}} solved for r in closed form. If a <b>numerical</b> <b>solution</b> is desired, an iterative technique such as Newton's method can be used. Alternatively, the expectation–maximization algorithm can be used.|$|E
25|$|Most often, {{the known}} wave {{parameters}} are the wave height H, mean water depth h, gravitational acceleration g, and either the wavelength λ {{or else the}} period τ. Then the above relations for λ, c and τ are used to find the elliptic parameter m. This requires <b>numerical</b> <b>solution</b> by some iterative method.|$|E
40|$|AbstractWe {{construct}} new non-separable splines and {{we apply}} the spline sampling approximation to the computation of <b>numerical</b> <b>solutions</b> of evolution equations. The non-separable splines are basis functions which give a fine sampling approximation which {{enables us to}} compute <b>numerical</b> <b>solutions</b> {{by means of the}} method of lines combined with the Galerkin method. To demonstrate our approach we compute <b>numerical</b> <b>solutions</b> of the Burgers equation and the Kadomtsev–Petviashvili equation...|$|R
30|$|Highly {{accurate}} <b>numerical</b> <b>solutions</b> can be computed using relatively coarse grid {{sizes and}} <b>numerical</b> <b>solutions</b> exhibiting fourth-order convergence are obtained for bond and bond option prices. The scheme is also stable and efficient for pricing financial problems with time dependent parameters.|$|R
30|$|In recent years, the {{collocation}} {{method has}} been a useful alternative tool to obtain <b>numerical</b> <b>solutions</b> since this method yields multiple <b>numerical</b> <b>solutions</b> depending on whether numerical methods such as finite differences, Runge–Kutta and Crank–Nicolson methods yield only <b>numerical</b> <b>solutions.</b> Using a few numbers of collocation points, this method has been widely studied by various authors to obtain high accuracy in numerical analysis (cf. [31 – 36]). On the other hand, radial basis functions are univariate functions which depend only on the distance between points and they are attractive to high dimensional differential equations. Furthermore, implementation and coding of the collocation method are very practical by using these bases. However, this method usually gives very efficient results {{as the number of}} node points is increased. We will see that it is not true when finding <b>numerical</b> <b>solutions</b> of the fractional combined KdV–mKdV equation in the present paper. This situation led us to examine the geometry of <b>numerical</b> <b>solutions.</b>|$|R
25|$|An {{important}} {{application of}} finite differences is in numerical analysis, especially in numerical differential equations, which {{aim at the}} <b>numerical</b> <b>solution</b> of ordinary and partial differential equations respectively. The idea is to replace the derivatives appearing in the differential equation by finite differences that approximate them. The resulting methods are called finite difference methods.|$|E
25|$|In {{numerical}} analysis, complicated three-dimensional shapes {{are commonly}} broken down into, or approximated by, a polygonal mesh of irregular tetrahedra {{in the process}} of setting up the equations for finite element analysis especially in the <b>numerical</b> <b>solution</b> of partial differential equations. These methods have wide applications in practical applications in computational fluid dynamics, aerodynamics, electromagnetic fields, civil engineering, chemical engineering, naval architecture and engineering, and related fields.|$|E
25|$|The {{finite element}} method (FEM) is a {{powerful}} technique originally developed for <b>numerical</b> <b>solution</b> of complex problems in structural mechanics, and it remains the method of choice for complex systems. In the FEM, the structural system is modeled {{by a set of}} appropriate finite elements interconnected at discrete points called nodes. Elements may have physical properties such as thickness, coefficient of thermal expansion, density, Young's modulus, shear modulus and Poisson's ratio.|$|E
3000|$|Relative to the {{investigation}} of the oscillations of the analytic solutions, much research has been focused on the corresponding behavior of the <b>numerical</b> <b>solutions</b> for DDEs. In [15, 16], oscillations of <b>numerical</b> <b>solutions</b> in θ-methods and Runge-Kutta methods for a linear EPCA [...]...|$|R
3000|$|... [...]. Following up the {{investigation}} in [20], Saker and Agarwal [21] studied the oscillations and global attractivity of Equation (1) with time periodic coefficients. Song et al. [22] considered {{the existence of}} local and global Hopf bifurcations of Equation (1). Up to now, few results on the properties of <b>numerical</b> <b>solutions</b> for Equation (1) were established. In the present paper, we investigate some sufficient conditions under which the <b>numerical</b> <b>solutions</b> are oscillatory. We also consider the asymptotic behavior of non-oscillatory <b>numerical</b> <b>solutions.</b>|$|R
40|$|We {{consider}} the Galerkin {{finite element method}} for the incompressible Navier-Stokes equations in two dimensions, where the finite-dimensional space(s) employed consist of piecewise polynomials enriched with residual-free bubble (RFB) functions. To find the bubble part of the solution, a two-level finite element method (TLFEM) is described and its application to the Navier-Stokes equation is displayed. <b>Numerical</b> <b>solutions</b> employing the TLFEM are presented for three benchmark problems. We compare the <b>numerical</b> <b>solutions</b> using the TLFEM with the <b>numerical</b> <b>solutions</b> using a stabilized method...|$|R
25|$|Elasticity {{methods are}} {{available}} generally for an elastic solid of any shape. Individual members such as beams, columns, shafts, plates and shells may be modeled. The solutions {{are derived from}} the equations of linear elasticity. The equations of elasticity are a system of 15 partial differential equations. Due {{to the nature of}} the mathematics involved, analytical solutions may only be produced for relatively simple geometries. For complex geometries, a <b>numerical</b> <b>solution</b> method such as the finite element method is necessary.|$|E
25|$|In {{numerical}} analysis, numerical integration {{constitutes a}} broad family of algorithms for calculating the numerical {{value of a}} definite integral, and by extension, the term is also sometimes {{used to describe the}} <b>numerical</b> <b>solution</b> of differential equations. This article focuses on calculation of definite integrals. The term numerical quadrature (often abbreviated to quadrature) is more or less a synonym for numerical integration, especially as applied to one-dimensional integrals. Some authors refer to numerical integration over more than one dimension as cubature; others take quadrature to include higher-dimensional integration.|$|E
25|$|Helgeson (1968) {{introduced}} the first computer program to solve equilibrium and reaction path models, {{which he and}} coworkers used to model geological processes like weathering, sediment diagenesis, evaporation, hydrothermal alteration, and ore deposition. Later developments in geochemical modeling included reformulating the governing equations, first as ordinary differential equations, then later as algebraic equations. Additionally, chemical components came to be represented in models by aqueous species, minerals, and gases, {{rather than by the}} elements and electrons which make up the species, simplifying the governing equations and their <b>numerical</b> <b>solution.</b>|$|E
40|$|Viscoelastic flow in channel having {{transient}} hydrodynamic behavior, {{filled with}} and without porous medium is addressed. The boundary value problem is investigated through analytical and <b>numerical</b> <b>solutions,</b> for the governing system of partial differential equations, arising in the study for flow of viscoelastic fluids. Analytical solutions in terms of velocity, normal stress and shear stress at different values of time, viscosity and Darcyś number are obtained for constant viscosity Oldroyd-B constitutive model. Lie group technique is adopted to find solutions through symmetry of differential equations, whilst <b>numerical</b> <b>solutions</b> are realized by employing ND Solve, Mathematica Solver. Lie group technique is compared against <b>numerical</b> <b>solutions</b> by employing ND Solve, Mathematica Solver. The analytical solutions are observed in good agreement with the <b>numerical</b> <b>solutions...</b>|$|R
30|$|The <b>numerical</b> <b>solutions</b> of {{the scheme}} (13)–(17) exist.|$|R
50|$|The <b>numerical</b> <b>solutions</b> {{correspond}} to the underlined values.|$|R
25|$|The {{capabilities}} of the structural analysis software are a major consideration in the above process as they restrict the possible component models, the analysis methods available and, most importantly, the numerical robustness. The latter becomes a major consideration for structures that venture into the non-linear range and approach global or local collapse as the <b>numerical</b> <b>solution</b> becomes increasingly unstable and thus difficult to reach. There are several commercially available Finite Element Analysis software's such as CSI-SAP2000 and CSI-PERFORM-3D and Scia Engineer-ECtools {{which can be used}} for the seismic performance evaluation of buildings. Moreover, there is research-based finite element analysis platforms such as OpenSees, RUAUMOKO and the older DRAIN-2D/3D, several of which are now open source.|$|E
25|$|The <b>numerical</b> <b>solution</b> of the Navier–Stokes {{equations}} for {{turbulent flow}} is extremely difficult, {{and due to}} the significantly different mixing-length scales {{that are involved in}} turbulent flow, the stable solution of this requires such a fine mesh resolution that the computational time becomes significantly infeasible for calculation or direct numerical simulation. Attempts to solve turbulent flow using a laminar solver typically result in a time-unsteady solution, which fails to converge appropriately. To counter this, time-averaged equations such as the Reynolds-averaged Navier–Stokes equations (RANS), supplemented with turbulence models, are used in practical computational fluid dynamics (CFD) applications when modeling turbulent flows. Some models include the Spalart–Allmaras, –, –, and SST models, which add a variety of additional equations to bring closure to the RANS equations. Large eddy simulation (LES) {{can also be used to}} solve these equations numerically. This approach is computationally more expensive—in time and in computer memory—than RANS, but produces better results because it explicitly resolves the larger turbulent scales.|$|E
25|$|<b>Numerical</b> <b>solution</b> {{of either}} is {{performed}} using the moment method solution which requires expansion of that current into a set of basis functions; one simple (but not the best) choice, for instance, is {{to break up the}} conductor into N segments with a constant current assumed along each. After setting an appropriate weighting function the cost may be minimized through the inversion of a NxN matrix. Determination of each matrix element requires at least one double integration involving the weighting functions, which may become computationally intensive. These are simplified if the weighting functions are simply delta functions, which corresponds to fitting the boundary conditions for the current along the conductor at only N discrete points. Then the NxN matrix must be inverted, which is also computationally intensive as N increases. In one simple example, Balanis performs this computation to find the antenna impedance with different N using Pocklington's method and finds that with N>60 solutions have approached their limiting values to within a few percent.|$|E
30|$|We {{compared}} <b>numerical</b> <b>solutions</b> {{obtained with}} this approach with analytical models and <b>numerical</b> <b>solutions</b> obtained with other techniques. The considered problems involved a variety of flows both magnetized and unmagnetized, with different equations of state and external conditions. The {{results show that the}} method is sufficiently accurate and robust.|$|R
40|$|AbstractIn {{this paper}} {{a variant of}} the Euler–Maruyama method is used to define the <b>numerical</b> <b>solutions</b> for {{stochastic}} differential delay equations (SDDEs) with variable delay. The key aim is to show that the <b>numerical</b> <b>solutions</b> will converge to the true solutions of the SDDEs under the local Lipschitz condition...|$|R
30|$|Though the OFEE {{solutions}} of Problem 6 are theoretically ensured with {{an accuracy}} of order O(Δ t^ 2,h^k) (if Δ t=O(h)), due to error accumulation in the computational process, the actual <b>numerical</b> <b>solutions</b> may contain a larger error than theoretically predicted. Therefore, {{in order to}} obtain <b>numerical</b> <b>solutions</b> with the desired computing accuracy, it is best to add Step 7; if the computing accuracy is unsatisfactory, improvements of <b>numerical</b> <b>solutions</b> can be made by renewing the snapshots and the POD basis. This explains why the OFEE format is superior to the classical SPDMFE method.|$|R
500|$|Iglisch {{obtained}} the complete <b>numerical</b> <b>solution</b> in 1944. If further von Mises transformation is introduced ...|$|E
500|$|From <b>numerical</b> <b>solution,</b> it {{is found}} that the {{critical}} Frank-Kamenetskii parameter is [...] The system has no steady state( [...] or explodes) for [...] and for , the system goes to a steady state with very slow reaction. The maximum temperature [...] occurs at [...] and maximum critical temperature is [...]|$|E
2500|$|The local {{truncation}} error of the Euler method is error {{made in a}} single step. It {{is the difference between}} the <b>numerical</b> <b>solution</b> after one step, , and the exact solution at time [...] The <b>numerical</b> <b>solution</b> is given by ...|$|E
50|$|Like all {{problems}} in numerical analysis, careful {{attention is paid}} to the stability and convergence of the <b>numerical</b> <b>solutions.</b> In this line, much {{attention is paid to}} the gauge conditions, coordinates, and various formulations of the Einstein equations and the effect they have on the ability to produce accurate <b>numerical</b> <b>solutions.</b>|$|R
30|$|In this section, {{we present}} the {{boundedness}} of <b>numerical</b> <b>solutions.</b>|$|R
30|$|The {{errors in}} the sense of L_∞-norm and L_ 2 -norm of the <b>numerical</b> <b>solutions</b> u ^n of the scheme (11) are listed on Tables  1 and  2. Tables  1 and  2 shows good {{stability}} of the <b>numerical</b> <b>solutions</b> and also verify the scheme in present paper is efficient and of high accuracy.|$|R
