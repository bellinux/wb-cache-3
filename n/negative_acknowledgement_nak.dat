3|89|Public
50|$|An {{automatic}} repeat request (ARQ) algorithm, {{used for}} error correction, {{in which a}} <b>negative</b> <b>acknowledgement</b> (<b>NAK)</b> causes retransmission of the word in error {{as well as the}} previous N-1 words. The value of N is usually chosen such that the time taken to transmit the N words is less than the round trip delay from transmitter to receiver and back again. Therefore, a buffer is not needed at the receiver.|$|E
30|$|Before {{transmission}} of the next packet, the source collects error-free and delay-free 1 -bit feedback from each destination indicating if the packet was successfully received or not. A successful reception generates an acknowledgement (ACK) and an erasure generates a <b>negative</b> <b>acknowledgement</b> (<b>NAK).</b> This feedback is used for optimizing network coding decisions at the source for the next packet transmission round, as described in future sections.|$|E
40|$|This study {{presents}} {{an analysis of}} the delay performance of the CCSDS File Delivery Protocol (CFDP) over weather-dependent Ka-band channel. The Ka-band channel condition is determined by the strength of the atmospheric noise temperature, which is weather dependent. Noise temperature data collected from the Deep Space Network (DSN) Madrid site is used to characterize the correlations between good and bad channel states in a two-state Markov model. Specifically, the probability distribution of file delivery latency using the CFDP deferred <b>Negative</b> <b>Acknowledgement</b> (<b>NAK)</b> mode is derived and quantified. Deep space communication scenarios with different file sizes and bit error rates (BERs) are studied and compared. Furthermore, we also examine the sensitivity of our analysis with respect to different data sampling methods. Our analysis shows that while the weather-dependent channel only results in fairly small increases in the average number of CFDP retransmissions required, the maximum number of transmissions required to complete 99 percentile, on the other hand, is significantly larger for the weather-dependent channel due to the significant correlation of poor weather states...|$|E
40|$|Pragmatic General Multicast (PGM) is a {{reliable}} multicast protocol, designed to minimize both {{the probability of}} <b>negative</b> <b>acknowledgements</b> (<b>NAK)</b> implosion and the loading of the network due to retransmissions of lost packets. This protocol {{was presented to the}} Internet Engineering Task Force as an open reference specification...|$|R
50|$|While TCP uses ACKs to {{acknowledge}} groups of packets sent (something {{that would be}} uneconomical over multicast), PGM uses the concept of <b>Negative</b> <b>Acknowledgements</b> (<b>NAKs).</b> A NAK is sent unicast back to the host via a defined network-layer hop-by-hop procedure whenever there is a detection of data loss of a specific sequence. As PGM is heavily reliant on NAKs for integrity, when a NAK is sent, a NAK Confirmation (NCF) is sent via multicast for every hop back. Repair Data (RDATA) is then sent back either from the source or from a Designated Local Repairer (DLR) at some point closer to the destination.|$|R
40|$|Pragmatic General Multicast (PGM) is a {{reliable}} multicast protocol, designed to minimize both {{the probability of}} <b>negative</b> <b>acknowledgements</b> (<b>NAK)</b> implosion and the load of the network due to retransmissions of lost packets. This protocol {{was presented to the}} Internet Engineering Task Force as an open reference specification. In this paper, we focus on the main reliability property which PGM intends to guarantee: a receiver either receives all data packets from transmissions and repairs or is able to detect unrecoverable data packet loss. We first propose a modelization of (a simplified version of) PGM via a network of timed automata. Using Uppaal model-checker, we then study the validity of the reliability property above, which turns out not to be always verified but to depend on the values of several parameters that we underscore. ...|$|R
40|$|Abstract—To {{combat the}} {{detrimental}} {{effects of the}} variability in wireless channels, we consider cross-layer rate adaptation based on limited feedback. In particular, based on limited {{feedback in the form}} of link-layer <b>acknowledgements</b> (ACK) and <b>negative</b> <b>acknowledgements</b> (<b>NAK),</b> we maximize the physical-layer transmission rate subject to an upper bound on the expected packet error rate. We take a robust approach in that we do not assume any particular prior distribution on the channel state. We first analyze the fundamental limitations of suchsystemsandderiveanupper bound on the achievable rate for signaling schemes based on uncoded QAM and random Gaussian ensembles. We show that, for channel estimation based on binary ACK/NAK feedback, it may be preferable to use a separate training sequence at high error rates, rather than to exploit low-error-rate data packets themselves. We also develop an adaptive recursive estimator, which is provably asymptotically optimal and asymptotically efficient. Index Terms—Adaptive modulation, automatic repeat request, cross-layer strategies, rate adaptation. I...|$|R
40|$|The current CCSDS Telecommand (TC) Recommendations 1 - 3 have {{essentially}} been in use {{since the early}} 1960 s. The {{purpose of this paper}} is to propose a successor protocol to TC. The current CCSDS recommendations can only accommodate telecommand rates up to approximately 1 mbit/s. However today’s spacecraft are storehouses for software including software for Field Programmable Gate Arrays (FPGA) which are rapidly replacing unique hardware systems. Changes to flight software occasionally require uplinks to deliver very large volumes of data. In the opposite direction, high rate downlink missions that use acknowledged CCSDS File Delivery Protocol (CFDP) 4 will increase the uplink data rate requirements. It is calculated that a 5 mbits/s downlink could saturate a 4 kbits/s uplink with CFDP downlink responses: <b>negative</b> <b>acknowledgements</b> (<b>NAKs),</b> FINISHs, End-of-File (EOF), Acknowledgements (ACKs). Moreover, it is anticipated that uplink rates of 10 to 20 mbits/s will be required to support manned missions. The current TC recommendations cannot meet these new demands. Specifically, they are very tightly coupled to the Bose-Chaudhuri-Hocquenghem (BCH) code in Ref. 2. This protocol requires that an uncorrectable BCH codeword delimit the TC frame and terminate the randomization process. This method greatly limits telecom performance since only the BCH code can support the protocol. More modern techniques such as the CCSDS Low Density Parity Check (LDPC) 5 codes can provide a minimum performance gain of up to 6 times higher command data rates as long as sufficient power is available in the data. This paper will describe the proposed protocol format, trade-offs, and advantages offered, along with a discussion of how reliable communications takes place at higher nominal rates. I...|$|R
5000|$|On {{the receive}} side, the {{received}} TLP's LCRC and sequence number are both validated in the link layer. If either the LCRC check fails (indicating a data error), or the sequence-number {{is out of}} range (non-consecutive from the last valid received TLP), then the bad TLP, {{as well as any}} TLPs received after the bad TLP, are considered invalid and discarded. The receiver sends a <b>negative</b> <b>acknowledgement</b> message (<b>NAK)</b> with the sequence-number of the invalid TLP, requesting re-transmission of all TLPs forward of that sequence-number. If the received TLP passes the LCRC check and has the correct sequence number, it is treated as valid. The link receiver increments the sequence-number (which tracks the last received good TLP), and forwards the valid TLP to the receiver's transaction layer. An ACK message is sent to remote transmitter, indicating the TLP was successfully received (and by extension, all TLPs with past sequence-numbers.) ...|$|R
40|$|Pragmatic General Multicast (PGM) is a {{reliable}} multicast transport protocol that runs over a best effort datagram service, such as IP multicast. PGM obtains scalability via hierarchy, forward error correction, <b>NAK</b> (<b>negative</b> <b>acknowledgement)</b> elimination, and <b>NAK</b> suppression. It employs a novel polling scheme for NAK delay tuning to facilitate scaling up and down. This paper describes {{the architecture of}} PGM and discusses performance and security issues. We show that PGM has supports asymmetric networks, achieves high network utilization, and is capable of high-speed (> 100 Mbps) operation. PGM is currently an IETF experimental RFC that has been implemented in both commercial and academic settings. ...|$|R
40|$|AbstractAs {{computer}} {{systems have been}} widely used, Internet, which is a network-of-network, has been greatly developed and rapidly spread all over the world. In addition to unicast transmissions of point-to-point, multicast transmissions of one-to-many and many-to-many have been recently used. This paper considers a stochastic model where data are transmitted through multicast. The data are divided into n packets at a transmission server, and their packets are transmitted successively to each receiver of multicast group. Positive (ACK) or <b>negative</b> (<b>NAK)</b> <b>acknowledgements</b> are returned from each receiver, by depending on {{whether he or she}} has received all packets, correctly or not. When the server has received NAK, retransmissions only for receivers with NAK are made. The mean time until the data transmission succeeds is analytically derived and an optimal policy which maximizes the throughput is discussed. Finally, numerical examples are given under suitable conditions...|$|R
3000|$|... [...]. Each {{receiver}} {{listens to}} all transmitted packets and feeds {{back to the}} sender a positive or <b>negative</b> <b>acknowledgement</b> (ACK or <b>NAK)</b> for each received or lost packet. We assume that the receivers send feedback to the sender using dedicated control channels and the feedback is error-free. A stronger channel error correcting code is often employed for control bits compared to the data bits. Moreover, the feedback transmission from the receivers to the sender experiences a low interference level since the sender (e.g., base station) {{is located at the}} center of a cell. Note that a receiver needs to use γ bits for a rate 1 /γ error correction code to acknowledge a received/lost packet. Since there are M receivers in the network, the overall communication overhead coming from feedback is γ×M bits per time slot. Indeed, the feedback messages require additional resources from a cellular network. To reduce the feedback load, the number of feedback messages can be scaled down with the increased number of receivers in the network. Consequently, we extend our proposed IDNC framework for a perfect feedback scenario to an intermittent feedback scenario in Section 9, where the receivers send feedback after several time slots and the feedback is subject to erasures.|$|R
50|$|If the {{transmitter}} receives a NAK message, or no <b>acknowledgement</b> (<b>NAK</b> or ACK) is received until a timeout period expires, {{the transmitter}} must retransmit all TLPs that lack a positive acknowledgement (ACK). Barring a persistent malfunction {{of the device}} or transmission medium, the link-layer presents a reliable connection to the transaction layer, since the transmission protocol ensures delivery of TLPs over an unreliable medium.|$|R
5000|$|RFC 4077 - A <b>Negative</b> <b>Acknowledgement</b> Mechanism for Signaling Compression ...|$|R
40|$|<b>Negative</b> <b>acknowledgement</b> is an {{impression}} management technique {{that uses the}} admission of an unfavourable quality to mitigate a negative response. Although the technique has been clearly demonstrated, the underlying process is not well understood. The current research identifies a key mediator and moderator while also demonstrating that the effect extends beyond the specific acknowledged domain to the overall evaluation of a target object. The results of study 1 indicate that <b>negative</b> <b>acknowledgement</b> works through mitigating negatively valenced cognitive responses. People who are presented with a <b>negative</b> <b>acknowledgement</b> {{are less likely to}} counterargue when forming an evaluation. The results of study 2 reveal that individual differences in need for structure impact the effectiveness of the technique. People who are high in need for structure are more susceptible to the effect presumably because of their desire for easy-to-use information that aids the formation and maintenance of simple knowledge structures...|$|R
50|$|A {{number of}} patents {{exist for the}} use of ARQ in live video {{contribution}} environments. In these high throughput environments <b>negative</b> <b>acknowledgements</b> are used to drive down overheads.|$|R
40|$|Broadcasting in Ad hoc {{networks}} {{is prone}} to broadcast storm problem and ACK implosion problem. These problems create the necessity to carefully designate some nodes in the 1 -hop neighborhood of sender as forwarding nodes and reduce broadcast redundancy. In this paper, we have proposed an algorithm called Enhanced Double Covered Broadcast with <b>Negative</b> <b>acknowledgements</b> (EDCBN) which focuses on achieving high delivery ratio {{in an environment that}} has high transmission error rate. We make use of <b>negative</b> <b>acknowledgements</b> to achieve better reliability. Overhead caused due to acknowledgements are avoided by allowing the sender to overhear the retransmissions from the receiver. Simulation results show that EDCBN algorithm improves the reliability of broadcast operation compared to Double Covered Broadcast (DCB) and use less number of forwarding nodes to forward the packet in sparse network. Â© 2008 IEEE...|$|R
40|$|We define {{energy-efficient}} broadband and multicast {{schemes for}} reliable communication in multi-hop wireless networks. Unlike previous techniques, {{the choice of}} neighbors in the broadband and multicast trees in these schemes, are based {{not only on the}} link distance, but also on the error rates associated with the link. Our schemes can be implemented using both positive and <b>negative</b> <b>acknowledgement</b> based reliable broadcast techniques in the link layer. Through simulations, we show that our scheme achieves up to 45 % improvement over previous schemes on realistic 100 -node network topologies. A positive acknowledgment based implementation is preferred. Our simulations show that the additional benefits of a positive acknowledgement based implementation is marginal (1 - 2 %). Therefore a <b>negative</b> <b>acknowledgement</b> based implementation of our schemes is equally applicable in constructing energy-efficient reliable and multicast data delivery paths...|$|R
40|$|Broadcasting in Ad hoc networks, widely {{utilized}} as {{a building}} block for many network layer protocols {{is prone to}} broadcast storm problem. This problem necessitates to carefully designate some nodes in the one-hop neighborhood of the sender as forwarding nodes and reduce broadcast redundancy. In this paper, we propose an algorithm called Dual Covered broadcast with <b>Negative</b> <b>acknowledgements</b> (DCN) which focuses on achieving high delivery ratio {{in an environment that}} has high transmission error rate. We make use of <b>Negative</b> <b>ACKnowledgements</b> (NACK) to reduce broadcast collision and achieve enhanced reliability. Overhead caused due to Acknowledgements are avoided by allowing the sender to overhear the transmissions from the receiver. Broadcast congestion is alleviated by eliminating the unnecessary duplication of packets, otherwise resulting in Broadcast storm problem. Simulation results show that DCN algorithm improves the reliability of broadcast operation compared to Double Covered Broadcast (DCB) and use lower number of forwarding nodes in the network...|$|R
50|$|Signaling {{compression}}, or SigComp, is a {{compression method}} designed especially for compression of text-based communication data as SIP or RTSP. SigComp {{had originally been}} defined in RFC 3320 and was later updated with RFC 4896. A <b>Negative</b> <b>Acknowledgement</b> Mechanism for Signaling Compression is defined in RFC 4077. The SigComp work is performed in the ROHC working group in the transport area of the IETF.|$|R
30|$|Each station section has {{a single}} SC {{responsible}} for interlocking (establishing or releasing a route) for the arrival or departure of trains. The route is created by fixing all switches presented on the path in a required position. SC receives a route from ZC, i.e. sequence of switches and their positions, and gives instruction one by one to TSDCS to fix each switch in a required position. The SC on receipt of positive acknowledgement for all required switches from TSDCS gives route establishment acknowledgement to ZC. If SC receives <b>negative</b> <b>acknowledgement</b> for any required switch, it releases all switches and gives <b>negative</b> route establishment <b>acknowledgement</b> to ZC.|$|R
30|$|Switches falling under a {{particular}} station section {{are controlled by}} the respective TSDCS. It is responsible to fix each individual switch in a required position. It receives a switch identifier and its position information from the SC. If the switch is fixed in the desired position, it transmits a positive acknowledgement to SC; otherwise <b>negative</b> <b>acknowledgement.</b> TSDCS also continuously monitors the health and status of all its switches, and reports to respective SC.|$|R
30|$|The {{transmission}} of the K packets {{can be divided into}} two phases. In the initial phase, the K source packets are broadcasted to both the relay and the destination. Retransmission phase will start if not all of the K packets are received correctly by the destination. We assume that the control signals, i.e., <b>acknowledgements</b> (ACKs) and <b>negative</b> <b>acknowledgements</b> (NACKs), indicating reception success and failure of the corresponding packets, respectively, can be reliably received by intended receivers.|$|R
50|$|In data networking, telecommunications, and {{computer}} buses, an acknowledgement (or acknowledgment) is a signal passed between communicating processes, computers, or devices to signify acknowledgement, or receipt of response, {{as part of}} a communications protocol. The negative-acknowledgement signal (NAK) is sent in many communications protocols to reject a previously received message, or to indicate some kind of error. <b>Acknowledgements</b> and <b>negative</b> <b>acknowledgements</b> inform a sender of the receiver's state, so that it can adjust its own state accordingly.|$|R
30|$|TCP in {{wireless}} networks {{has been}} studied {{for more than one}} decade with many proposals published in the literature. Although these proposals vary in designs, they share a similarity in effort to improve TCP’s capability of judging congestion status in networks using more efficient mechanisms. Typical schemes include <b>negative</b> <b>acknowledgement</b> [4 – 7], explicit congestion notification [8], and measurement using probing or monitoring mechanisms [9, 10]. Extensive surveys on TCP in wireless networks can be found in [1, 2, 11 – 13].|$|R
50|$|It {{is noted}} that true CMR can, by its nature, cause out-of-order {{delivery}} (OOOD) of packets, which is severely debilitating for standard TCP. Standard TCP, however, has been exhaustively {{proven to be}} inappropriate for use in challenged wireless environments and must, in any case, be augmented by a facility, such as a TCP gateway, {{that is designed to}} meet the challenge. One such gateway tool is SCPS-TP, which, through its Selective <b>Negative</b> <b>Acknowledgement</b> (SNACK) capability, deals successfully with the OOOD problem.|$|R
5000|$|A simple {{handshaking}} protocol {{might only}} involve the receiver {{sending a message}} meaning [...] "I received your last message and I am ready for you to send me another one." [...] A more complex handshaking protocol might allow the sender to ask the receiver if it is ready to receive or for the receiver to reply with a <b>negative</b> <b>acknowledgement</b> meaning [...] "I did not receive your last message correctly, please resend it" [...] (e.g., if the data was corrupted en route).|$|R
40|$|In this paper, a {{reliable}} multicast protocol for wireless mobile multihop ad hoc networks (ReMHoc) is proposed. ReMHoc ensures the eventual {{delivery of the}} multicast data to all the multicast group members. ReMHoc is receiverinitiated NACK-based and it makes use of feedback suppression {{in order to avoid}} <b>negative</b> <b>acknowledgement</b> (NACK) and retransmission implosion. The loss recovery burden is distributed over the multicast group members in order to reduce recovery latency and end-to-end delay. Simulations (using GloMoSim 2. 0) have demonstrated the scalability of ReMHoc...|$|R
30|$|An endcast {{protocol}} should {{consist of}} a broadcast storm control mechanism and a broadcast flood control mechanism. We proposed an endcast scheme that controls the storm situation using counter-based flooding and the flood situation using <b>negative</b> <b>acknowledgement</b> packets. The storm control scheme is inspired by the chalone mechanism that regulates the growth of biological organs. An operational model was derived for the scheme using cellular automata with totalistic rules. The protocol was evaluated for reachability using the developed theoretical model, and its performance was analyzed using extensive simulations.|$|R
40|$|Abstract. Satellite link {{characteristics}} cause reduced {{performance in}} TCP data transfers. In this paper we present SaTPEP, a TCP Performance Enhancing Proxy which attempts to improve TCP performance by performing connection splitting. SaTPEP monitors the satellite link utilization, and assigns to connections window values {{that reflect the}} available bandwidth. Loss recovery is based on <b>Negative</b> <b>Acknowledgements.</b> The performance of SaTPEP is investigated in terms of goodput and fairness, {{through a series of}} simulation experiments. Results obtained in these experiments, show significant performance improvement in presence of available bandwidth and at high error rates. 1...|$|R
50|$|In a requester-centric system, the DSM {{will allow}} nodes to talk at will {{to each other}} through the home. This means that {{multiple}} nodes can attempt to start a transaction, but this requires additional considerations to ensure coherence. For example: when one node is processing a block, if it receives a request for that block from another node it will send a NAck (<b>Negative</b> <b>Acknowledgement)</b> to tell the initiator that the processing node can't fulfill that request right away. An example of this is Intel's QPI snoop-source mode.|$|R
40|$|In this paper, {{we study}} the {{stability}} of two interacting queues under random multiple access in which the queues leverage the feedback information. We derive the stability region under random multiple access {{where one of the}} two queues exploits the feedback information and backs off under <b>negative</b> <b>acknowledgement</b> (NACK) and the other, higher priority, queue will access the channel with probability one. We characterize the stability region of this feedback-based random access protocol and prove that this derived stability region encloses the stability region of the conventional random access (RA) scheme that does not exploit the feedback information...|$|R
30|$|In {{the first}} case, the RTP-based {{retransmission}} strategy (RET), proposed in [12], {{is applied to}} unicast- and multicast-based services with different procedures. In the case of unicast-based services, following a packet loss detection, the user terminal sends a NACK (<b>Negative</b> <b>ACKnowledgement)</b> to the retransmission server. The server returns the requested packet (REP packet), over RTP, to the user terminal. In case of multicast-based services, the RTP retransmission procedure is more complex: while the media stream is multicast, the repair stream could be either multicast or unicast. In the unicast recovering procedure, the user terminal detects a packet loss, and it transmits a NACK, whose response is a unicast RET packet.|$|R
30|$|As an {{efficient}} cooperative transmission technique, distributed relay-assisted Automatic Repeat reQuest (ARQ) {{can improve the}} link reliability of wireless links in wireless relay networks[1 – 4]. In contrast to traditional ARQ where the source is responsible of retransmitting packets erroneously received at the destination[5], distributed relay-assisted ARQ allows the relays of the source-to-destination (S–D) link to retransmit erroneous packets in a distributed way. Here, the relays are involved only when they receive <b>Negative</b> <b>ACKnowledgement</b> (NACK) packets sent by the destination, indicating it cannot successfully decode the source packet. In this way, high cooperative diversity gain can be achieved {{at the cost of}} little spectral efficiency loss.|$|R
40|$|The Amoeba group {{communication}} system has two unique aspects: (1) {{it uses a}} sequencer-based protocol with <b>negative</b> <b>acknowledgements</b> for achieving a total order on all group messages; and (2) users choose the degree of fault tolerance they desire. This paper reports on our design decisions in retrospect, {{the performance of the}} Amoeba group system, and our experiences using the system. We conclude that sequencer-based group protocols achieve high performance (comparable to Amoeba's fast remote procedure call implementation), that the scalability of our sequencer-based protocols is limited by message processing time, and that the flexibility and modularity of user-level implementations of protocols is likely to outweigh the potential performance loss...|$|R
40|$|Abstract-In this paper, we {{describe}} ongoing work in adding congestion control extensions to an existing <b>negative</b> <b>acknowledgement</b> (NACK) oriented reliable multicast protocol. Our previous work adopted {{and used the}} concept of a dynamic worst path representative for equation-based rate adaptation at the multicast source and we have further refined this approach and present results here. We present an overview of these extensions implemented within a working reliable multicast protocol (mdp-cc) and we present simulation results. Our analysis of interflow fairness with TCP unicast sessions demonstrates friendly behavior across a set of scenarios and results with more dynamic flows show that the worst path representative approach adapts rapidly to changing congestion conditions...|$|R
