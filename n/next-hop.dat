340|20|Public
25|$|The {{internet}} layer {{provides an}} unreliable datagram transmission facility between hosts located on potentially different IP networks by forwarding the transport layer datagrams to an appropriate <b>next-hop</b> router for further relaying to its destination. With this functionality, the internet layer makes possible internetworking, the interworking of different IP networks, and it essentially establishes the Internet. The Internet Protocol {{is the principal}} component of the internet layer, and it defines two addressing systems to identify network hosts' computers, and to locate them on the network. The original address system of the ARPANET and its successor, the Internet, is Internet Protocol version 4 (IPv4). It uses a 32-bit IP address and is therefore capable of identifying approximately four billion hosts. This limitation was eliminated in 1998 by the standardization of Internet Protocol version 6 (IPv6) which uses 128-bit addresses. IPv6 production implementations emerged in approximately 2006.|$|E
25|$|Internet service {{providers}} establish the worldwide connectivity between individual networks {{at various levels}} of scope. End-users who only access the Internet when needed to perform a function or obtain information, represent {{the bottom of the}} routing hierarchy. At the top of the routing hierarchy are the tier 1 networks, large telecommunication companies that exchange traffic directly with each other via peering agreements. Tier 2 and lower level networks buy Internet transit from other providers to reach at least some parties on the global Internet, though they may also engage in peering. An ISP may use a single upstream provider for connectivity, or implement multihoming to achieve redundancy and load balancing. Internet exchange points are major traffic exchanges with physical connections to multiple ISPs. Large organizations, such as academic institutions, large enterprises, and governments, may perform the same function as ISPs, engaging in peering and purchasing transit on behalf of their internal networks. Research networks tend to interconnect with large subnetworks such as GEANT, GLORIAD, Internet2, and the UK's national research and education network, JANET. Both the Internet IP routing structure and hypertext links of the World Wide Web are examples of scale-free networks. Computers and routers use routing tables in their operating system to direct IP packets to the <b>next-hop</b> router or destination. Routing tables are maintained by manual configuration or automatically by routing protocols. End-nodes typically use a default route that points toward an ISP providing transit, while ISP routers use the Border Gateway Protocol to establish the most efficient routing across the complex connections of the global Internet.|$|E
5000|$|<b>Next-hop</b> determination: hosts {{can find}} <b>next-hop</b> routers for a destination.|$|E
3000|$|... {{have three}} {{possible}} <b>next-hops</b> {{and that a}} different forwarding scheme is adopted, as shown in Figure 1 (c). In particular, when [...]...|$|R
40|$|In the {{next-generation}} technology, Internet of Things (IoT), {{billions of}} smart objects will {{communicate with one}} another to make human lives more convenient. IoT is based on wireless sensor network (WSN), and Zigbee {{is one of the most}} popular WSN protocols. A mature IoT environment involves heavy WSN data transmission causing bottleneck problems. However, Zigbee’s AODV routing stack does not have load balance mechanism to handle bursty traffic. Therefore, we develop Multipath Load Balancing (MLB) Routing to substitute Zigbee’s AODV routing. Our proposed MLB consists of two main designs: LAYER_DESIGN and LOAD_BALANCE. LAYER_DESIGN assigns nodes into different layers based on node distance to IoT gateway. Nodes can have multiple <b>next-hops</b> delivering IoT data. All neighboring layer nodes exchange flow information containing current load, used by LOAD_BALANCE to estimate future load of <b>next-hops.</b> With MLB, nodes can choose the neighbors with the least load as the <b>next-hops</b> and thus can achieve load balance and avoid bottlenecks. Compared with Zigbee’s AODV and multipath version AODV (AOMDV), experiment results demonstrate that MLB achieves better load balance, lower packet loss rate, and better routing connectivity ratio in both grid and random uniform topologies. MLB provides a more convincing routing solution for IoT applications...|$|R
40|$|In {{opportunistic}} routing, each node {{maintains a}} group of candidate <b>next-hops</b> to reach a particular destination, and transmits packets to any node in this group. The choice of candidate <b>next-hops</b> at each node is a key question that {{is central to the}} performance of opportunistic routing. This paper addresses the least-cost opportunistic routing (LCOR) problem: how to assign the set of candidate <b>next-hops</b> at each node for a given destination such that the expected cost of forwarding a packet to the destination is minimized. We solve this problem with a distributed algorithm that provably computes the optimal assignment of candidate <b>next-hops</b> that each node should allow to reach a particular destination. Prior proposals based on single-path routing metrics or geographic coordinates do not explicitly consider this tradeoff, and as a result make choices which are not always optimal. The LCOR algorithm and framework are general and can be applied to a variety of networks and cost models, including and beyond ETX-based metrics to improve throughput with lossy links. This paper further focuses on the application of LCOR to low-power wireless communication, and introduces a new link-layer technique to decrease energy transmission costs in conjunction with opportunistic forwarding. The design is implemented and evaluated on a 50 -node wireless testbed. Simulation and testbed results demonstrate reductions in energy transmission by up to a factor of three compared to standard routing, up to 30 % compared to opportunistic routing using single-path metrics. Furthermore LCOR routes are more robust and stable than with approaches based on single-path distances, due to the integrative nature of the LCOR’s route cost metric. 1...|$|R
50|$|<b>Next-hop</b> MTU field (bits 48-63) {{contains}} the MTU of the <b>next-hop</b> network if a code 4 error occurs.|$|E
50|$|The BGP {{standard}} specifies {{a number}} of decision factors, more than {{the ones that are}} used by any other common routing process, for selecting NLRI to go into the Loc-RIB. The first decision point for evaluating NLRI is that its <b>next-hop</b> attribute must be reachable (or resolvable). Another way of saying the <b>next-hop</b> must be reachable is that there must be an active route, already in the main routing table of the router, to the prefix in which the <b>next-hop</b> address is reachable.|$|E
50|$|Router {{configuration}} rules {{may contain}} static routes. A static route minimally has a destination address, a prefix length or subnet mask, and a definition where to send packets for the route. That definition {{can refer to}} a local interface on the router, or a <b>next-hop</b> address that {{could be on the}} far end of a subnet to which the router is connected. The <b>next-hop</b> address could also be on a subnet that is directly connected, and, before the router can determine if the static route is usable, it must do a recursive lookup of the next hop address in the local routing table. If the <b>next-hop</b> address is reachable, the static route is usable, but if the <b>next-hop</b> is unreachable, the route is ignored.|$|E
40|$|In {{wireless}} networks, low-power Zigbee is {{an excellent}} network solution for wireless medical monitoring systems. Medical monitoring generally involves transmission of {{a large amount of}} data and easily causes bottleneck problems. Although Zigbee’s AODV mesh routing provides extensible multi-hop data transmission to extend network coverage, it originally does not, and needs to support some form of load balancing mechanism to avoid bottlenecks. To guarantee a more reliable multi-hop data transmission for life-critical medical applications, we have developed a multipath solution, called Load-Balanced Multipath Routing (LBMR) to replace Zigbee’s routing mechanism. LBMR consists of three main parts: Layer Routing Construction (LRC), a Load Estimation Algorithm (LEA), and a Route Maintenance (RM) mechanism. LRC assigns nodes into different layers based on the node’s distance to the medical data gateway. Nodes can have multiple <b>next-hops</b> delivering medical data toward the gateway. All neighboring layer-nodes exchange flow information containing current load, which is the used by the LEA to estimate future load of <b>next-hops</b> to the gateway. With LBMR, nodes can choose the neighbors with the least load as the <b>next-hops</b> and thus can achieve load balancing and avoid bottlenecks. Furthermore, RM can detect route failures in real-time and perform route redirection to ensure routing robustness. Since LRC and LEA prevent bottlenecks while RM ensures routing fault tolerance, LBMR provides a highly reliable routing service for medical monitoring. To evaluate these accomplishments, we compare LBMR with Zigbee’s AODV and another multipath protocol, AOMDV. The simulation results demonstrate LBMR achieves better load balancing, less unreachable nodes, and better packet delivery ratio than either AODV or AOMDV...|$|R
40|$|Abstract. A prime {{objective}} of fault tolerant routing methods is {{the availability of}} multiple routing options at each hop. The methods that are currently implemented in IP networks, such as Equal-Cost Multi-Path (ECMP) and Loop Free Alternates (LFA), share the following four properties: First, they work with a hop-by-hop forwarding strategy optimized for the fault free case. Second, they do not require information associated with network faults included in the packet header. Third, they do not form forwarding loops, even under multiple failures in the network. Finally, they are compatible with standard link state routing protocols. However, ECMP and LFA give very poor fault coverage; in most cases fewer than 50 % of primary <b>next-hops</b> are protected when using typical link weight settings. This paper presents a new routing method that combines the concept of permutation routing with interface-specific forwarding. Our method results in a routing strategy that strictly adheres to the four stated design properties. Through experiments we show that we protect more than 97 % of the primary <b>next-hops</b> for all tested ISP networks...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2000). All Rights Reserved. Various routing protocols, including Open Shortest Path First (OSPF) and Intermediate System to Intermediate System (ISIS), explicitly allow "Equal-Cost Multipath " (ECMP) routing. Some router implementations also allow equal-cost multipath usage with RIP and other routing protocols. The effect of multipath routing on a forwarder is that the forwarder potentially has several <b>next-hops</b> for any given destination and must use some method to choose which nexthop {{should be used for}} a given data packet. 1...|$|R
50|$|The IP {{forwarding}} {{algorithm is}} a specific implementation of routing for IP networks. In order to achieve a successful transfer of data, the algorithm uses a routing table to select a <b>next-hop</b> router as the next destination for a datagram. The IP address that is selected {{is known as the}} <b>next-hop</b> address.|$|E
5000|$|Packet {{redirection}} {{to provide}} a better <b>next-hop</b> route for certain destinations.|$|E
5000|$|IP {{address of}} the {{immediate}} <b>next-hop</b> (not the BGP nexthop) along the route to the destination ...|$|E
40|$|Abstract—Providing {{efficient}} and reliable communication in {{wireless sensor networks}} is a challenging problem. To recover from corrupted packets, previous approaches have tried to use retransmissions and FEC mechanisms. The energy efficiency of these mechanisms, however, is very sensitive to unreliable links. In this paper, we present cluster-based forwarding, where each node forms a cluster such that any node in the <b>next-hop’s</b> cluster can take forwarding responsibility. This architecture, designed specifically for wireless sensor networks, achieves better energyefficiency by reducing retransmissions. Cluster-based forwarding is not a routing protocol. Rather, it is designed as an extension layer that can augment existing routing protocols. Using simulations, we demonstrate that cluster-based forwarding is effective in improving both end-to-end energy efficiency and latency of current routing protocols. I...|$|R
40|$|In Multi Route Configurations (MRC) {{protocol}} when {{failure is}} detected, it forwards the packets over preconfigured alternative <b>next-hops</b> and immediately recovers from single or multiple failures. Multipath routing provides multipath communication and improves network transmission reliability. However, {{when there is}} a huge amount of traffic in the network existing MRC follows default scheduling which results in large transmission delay for high priority packet. Hence it is a challenging problem, and highly influences the performance of MRC. In this paper, we propose an Agent based Monitoring and Scheduling Technique (AMST) algorithm which provides a generic framework for packet scheduling. The main idea of AMST algorithm is to schedule the packets based on its priority and by selecting the transmission path with lowest transmission delay...|$|R
40|$|We {{present a}} {{protocol}} for maintaining multiple paths to each destination {{in a network}} of processes. For each destination, each process in the network maintains a set of neighbors which are used as <b>next-hops</b> to reach the destination. This set {{is known as the}} successor set. Collectively, the successor sets from all processes in the network with respect to a given destination form a spanning, directed, and acyclic graph, whose only sink is the given destination. The protocol we present has two interesting properties. First, the graph is maintained acyclic at all times, even though the successor set is dynamic. Second, the protocol tolerates all types of transient faults, even those which may not be detected. Therefore, if the protocol is started from an arbitrary initial state, it will converge to a normal operating state in which a spanning, directed, and acyclic graph is obtained and subsequently maintained...|$|R
50|$|Each node in MOR remembers all <b>next-hop</b> nodes {{that are}} closer to a given {{destination}} for which a route exists. It then sends successive packets to each such node in round-robin fashion. If a <b>next-hop</b> node fails to acknowledge a given packet, the retransmission is attempted to another node, again if possible. This allows automatic and graceful recovery from occasional localized congestion as well as longer-term reasons for node unavailability.|$|E
50|$|The FIB {{is similar}} to the routing table {{generated}} by multiple routing protocols, maintaining only the <b>next-hop</b> address for a particular IP-route.|$|E
5000|$|RIPv2 encodes the <b>next-hop</b> {{into each}} route entry, RIPng {{requires}} specific encoding {{of the next}} hop {{for a set of}} route entries.|$|E
40|$|For {{forwarding}} Interest efficiently in Named Data Networking (NDN), the routing is {{the foundation}} where each node is assigned a name rather than an IP address. The packets are also routed by names rather than the source and destination IP addresses. For routing the packets, it requires routing protocol. In this paper, we discuss the use of Named-data Link State Routing Protocol (NLSR) and Interest NACK in NDN for an efficient Interest delivery. The NLSR is used for building the Forwarding Information Base (FIB) so that the router can forward Interests and computes <b>next-hops.</b> In case the router fails to forward user Interest, it returns back the Interest NACK to the downstream router. The Interest NACK can help the downstream router to build Link State Database (LSDB) and take the decision on which alternative path to use, even if the router has not yet received the Adjacency Link Stat...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. This document describes the use of loop-free alternates to provide local protection for unicast traffic in pure IP and MPLS/LDP networks {{in the event of}} a single failure, whether link, node, or shared risk link group (SRLG). The goal of this technology is to reduce the packet loss that happens while routers converge after a topology change due to a failure. Rapid failure repair is achieved through use of precalculated backup <b>next-hops</b> that are loop-free and safe to use until the distributed network convergence process completes. This simple approach does not require any support from other routers...|$|R
40|$|This paper {{addresses}} {{the problem of}} optimal traffic engineering in a connectionless autonomous system. Based on Nonlinear Control Theory, the approach taken in this paper provides a family of optimal adaptation laws. These laws enable each node in the network to independently distribute traffic among any given set of <b>next-hops</b> in an optimal way, as measured by a given global utility function of a general form. This optimal traffic distribution is achieved with minimum information exchange between neighboring nodes. Furthermore, this approach not only allows for optimal multiple forwarding paths but also enables multiple Classes of Service; e. g., classes of service defined in the DiffServ architecture. Moreover, the proposed decentralized control scheme enables optimal traffic redistribution {{in the case of}} link failures. Suboptimal control laws are also presented in an effort to reduce the computational burden imposed on the nodes of the network. Finally, an implementation of these laws with currently available technology is discussed...|$|R
5000|$|For {{outgoing}} packets, {{select the}} <b>next-hop</b> host (gateway) and transmit the packet to this host by passing {{it to the}} appropriate link layer implementation; ...|$|E
50|$|In the IP domain Loop-Free Alternates (LFAs) and not-via {{technology}} {{have been used}} to immediately recover data packet upon the failure of a default <b>next-hop.</b>|$|E
5000|$|To route IP traffic {{destined for}} the network 10.10.20.0/24 via the <b>next-hop</b> router with the IPv4 address of 192.168.100.1, the {{following}} configuration commands or steps can be used:- ...|$|E
40|$|Abstract—Distributed routing {{algorithms}} {{may give}} rise to transient loops during path recomputation, which can pose significant stability problems in high-speed networks. We present a new algorithm, Distributed Path Computation with Intermediate Variables (DIV), which can be combined with any distributed routing algorithm to guarantee that the directed graph induced by the routing decisions remains acyclic at all times. The key contribution of DIV, besides its ability to operate with any routing algorithm, is an update mechanism using simple message exchanges between neighboring nodes that guarantees loopfreedom at all times. DIV provably outperforms existing loopprevention algorithms in several key metrics such as frequency of synchronous updates {{and the ability to}} maintain paths during transitions. Simulation results quantifying these gains in the context of shortest path routing are presented. In addition, DIV’s universal applicability is illustrated by studying its use with a routing that operates according to a non-shortest path objective. Specifically, the routing seeks robustness against failures by maximizing the number of <b>next-hops</b> available at each node for each destination. Index Terms—Loop-free routing, Distance-vector routing. I...|$|R
40|$|In multi-radio {{wireless}} mesh networks, {{a network}} device simultaneously transmits packets over different channels by using multiple radios. Such frequency diversity {{not only in}} creases throughput but makes multi-path routing approaches extremely interesting. This is because the channel diversity reduces the risk for intra- and inter-flow interference. A fundamental problem to solve is the forwarding strategy which determines which packets to be sent over what multi-path segments at any given time. Ideally, the forwarding strategy should schedule flows according to the capacity constraints imposed by the channel assignment. However, the possibility to improve MAC layer efficiency by aggregating small packets into larger ones is reduced when packets are forwarded to different <b>next-hops.</b> In this paper, we develop a novel packet forwarding strategy for multi-radio mesh networks that combines the benefits of multi-path routing with packet aggregation. In our cross-layer approach, we effectively trade-off aggregation opportunities with channel diversity. Simulation results show that our approach can improve network throughput and delay by up to 15 percent and 25 percent, respectively, compared with aggregation unaware forwarding strategies...|$|R
40|$|This paper investigates {{schemes to}} improve TCP {{performance}} in multipath forwarding networks. In multipath routing, packets {{for the same}} destination are sent to multiple <b>next-hops</b> in either packet-level or flow-level forwarding mode. Effective bandwidth is increased since we can use unused capacity of multiple paths to the destination. In packet-level multipath forwarding networks, TCP performance may not be enhanced due to frequent out-of-order segment arrivals at the receiver because of different delays among paths. To overcome this problem, we propose two TCP modifications. At the sender, the fast retransmission threshold is adjusted considering the number of paths. At the receiver, delayed acknowledgment scheme is modified such that an acknowledgment for an out-of-order segment arrival is delayed {{in the same way}} for the in-order one. The number of unnecessary retransmissions and congestion window reductions is reduced, which is verified by extensive simulations. In flow-level multipath forwarding networks, hashing is used at routers to select outgoing link of a packet. Here, we prove that TCP performance is increased in proportion to the number of paths regardless of delay differences...|$|R
50|$|Many systems {{use some}} <b>next-hop</b> {{forwarding}} protocol—when a packet arrives at some node, that node decides on-the-fly which link {{to use to}} push the packet one hop closer to its final destination.|$|E
5000|$|Channel tables {{select the}} {{outbound}} channel {{on the basis}} of the <b>next-hop</b> domain name, and also encode per-domain-name parameters for the particular channel, such as the UUCP node name or IP address.|$|E
50|$|Routing {{term used}} for the next gateway to which packets should be {{forwarded}} along the path to their final destination. One technique to make content of a routing table smaller is called <b>next-hop</b> routing.|$|E
40|$|Abstract — Fast reroute (FRR) {{techniques}} {{have been designed}} and standardised in recent years for supporting sub- 50 millisecond failure recovery in operational ISP networks. On the other hand, if the provisioning of FRR protection paths {{does not take into}} account traffic engineering (TE) requirements, customer traffic may still get disrupted due to post-failure traffic congestion. Such a situation could be more severe in operational networks with highly dynamic traffic patterns. In this paper we propose a distributed technique that enables adaptive control of FRR protection paths against dynamic traffic conditions, resulting in self-optimisation in addition to the self-healing capability. Our approach is based on the Loop-free Alternates (LFA) mechanism that allows non-deterministic provisioning of protection paths. The idea is for repairing routers to periodically re-compute LFA alternative <b>next-hops</b> using a lightweight algorithm for achieving and maintaining optimised post-failure traffic distribution in dynamic network environments. Our experiments based on a real operational network topology and traffic traces across 24 hours have shown that such an approach is able to significantly enhance relevant network performance compared to both TE-agnostic and static TE-aware FRR solutions. I...|$|R
40|$|Abstract: This paper investigates {{schemes to}} improve TCP {{performance}} in multipath forwarding networks. In multipath routing, packets {{to the same}} destination are sent to multiple <b>next-hops</b> in either packet-level or flow-level forwarding mode. Effective bandwidth is increased since we can utilize unused capacity of multiple paths to the destination. In packet-level multipath forwarding networks, TCP performance may not be enhanced due to frequent out-of-order segment arrivals at the receiver because of different delays among paths. To overcome this problem, we propose simple TCP modifications. At the sender, the fast retransmission threshold is adjusted taking the number of paths into consideration. At the receiver, the delayed acknowledgment scheme is modified such that an acknowledgment for an out-of-order segment arrival is delayed {{in the same way}} for the in-order one. The number of unnecessary retransmissions and congestion window reductions is diminished, which is verified by extensive simulations. In flow-level multipath forwarding networks, hashing is used at routers to select outgoing link of a packet. Here, we show by simulations that TCP performance is increased in proportion to the number of paths regardless of delay differences. Index Terms: TCP, fast retransmission, delayed ACK, multipath...|$|R
40|$|Fast reroute (FRR) {{techniques}} {{have been designed}} and standardised in recent years for supporting sub- 50 -millisecond failure recovery in operational ISP networks. On the other hand, if the provisioning of FRR protection paths {{does not take into}} account traffic engineering (TE) requirements, customer traffic may still get disrupted due to post-failure traffic congestion. Such a situation could be more severe in operational networks with highly dynamic traffic patterns. In this paper we propose a distributed technique that enables adaptive control of FRR protection paths against dynamic traffic conditions, resulting in self-optimisation in addition to the self-healing capability. Our approach is based on the Loop-free Alternates (LFA) mechanism that allows non-deterministic provisioning of protection paths. The idea is for repairing routers to periodically re-compute LFA alternative <b>next-hops</b> using a lightweight algorithm for achieving and maintaining optimised post-failure traffic distribution in dynamic network environments. Our experiments based on a real operational network topology and traffic traces across 24 hours have shown that such an approach is able to significantly enhance relevant network performance compared to both TE-agnostic and static TE-aware FRR solutions. © 2011 IEEE...|$|R
