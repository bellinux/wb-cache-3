840|2853|Public
500|$|While {{frame rate}} issues {{were the main}} complaint, the PlayStation 3 version was also criticized for {{unreliable}} voice chat and excessive <b>network</b> <b>delay</b> or lag in Team Fortress 2, as well as long load times generally. [...] It was, however, praised for featuring anti-aliasing and a quick-save feature, neither of which {{were present in the}} Xbox 360 version (but were present in the PC version). [...] After release, the game received further criticism from fans for the lack of surround sound support when using an optical cable. An open letter to Valve, asking them to put pressure on EA to release a fix was posted to the Steam forum. [...] A response was posted by a Valve employee going by the name of [...] "BurtonJ", directing disappointed customers to a dedicated thread |publisher=Steam Forum |date=January 2, 2008 |url=http://forums.steampowered.com/forums/showthread.php?t=638580=2 |accessdate=August 4, 2008}} on the subject.|$|E
50|$|In all systems, latency {{can be said}} {{to consist}} of three elements: codec delay, playout delay and <b>network</b> <b>delay.</b>|$|E
50|$|In {{a network}} based on packet switching, {{processing}} delay {{is the time}} it takes routers to process the packet header. Processing delay is a key component in <b>network</b> <b>delay.</b>|$|E
40|$|Abstract — We {{present a}} novel {{constrained}} flow control scheme {{for a class}} of large-scale networks, modelled by interconnected network resources with capacity and buffer size limitations. We first propose a decentralized sliding mode controller [7] to achieve asymptotic regulation of each individual network node {{in the presence of}} uncertain inter-node traffic, while <b>network</b> <b>delays</b> are omitted. We then incorporate <b>network</b> <b>delays</b> associated with inter-node transmissions and study both the delay-independent and the delay-dependent control designs, to investigate the delay robustness of the proposed flow control scheme. It is shown that the when <b>network</b> <b>delays</b> are small, asymptotic stability can be preserved under the decentralized, constrained control law, using the idea of delay-dependent design. A delay-independent regulation scheme is also presented to counteract arbitrary <b>network</b> <b>delays.</b> Index Terms — Bottleneck queue regulation, decentralized, de-lays, congestion control, nonlinear, capacity constraints...|$|R
5000|$|Australia - Fox Sports (Live coverage) & Nine <b>Network</b> (<b>Delayed</b> coverage) ...|$|R
50|$|Spoofing {{refers to}} the logic {{implemented}} in the protocol engine of a T.38 relay that modifies the protocol commands and responses on the TDM side to keep <b>network</b> <b>delays</b> on the IP side from causing the transaction to fail. This is done, for example, by padding image lines or deliberately causing a message to be re-transmitted to render <b>network</b> <b>delays</b> transparent to the sending/receiving fax terminals.|$|R
5000|$|The Probability Mass Function (PMF) of {{absolute}} error, E, between the smaller of the forward and reverse OWDs and their average (i.e., RTT/2) {{can be expressed}} {{as a function of}} the <b>network</b> <b>delay</b> distribution as follows: ...|$|E
50|$|Compressed sensing has showed {{outstanding}} {{results in}} the application of network tomography to network management. <b>Network</b> <b>delay</b> estimation and network congestion detection can both be modeled as underdetermined systems of linear equations where the coefficient matrix is the network routing matrix. Moreover, in the Internet, network routing matrices usually satisfy the criterion for using compressed sensing.|$|E
50|$|<b>Network</b> <b>delay</b> {{variation}} {{can be kept}} to {{a minimum}} by using a high-speed network backbone, and ensuring that video traffic does not encounter excessive queue delays. This is typically done by either ensuring that the network is not too close to its full capacity, or that video traffic is prioritized using traffic engineering techniques (see below).|$|E
50|$|Other delays {{also occur}} in {{intermediate}} nodes. In packet switched <b>networks</b> <b>delays</b> can occur due to queueing.|$|R
50|$|Malone, K. and A. Odoni, The Approximate <b>Network</b> <b>Delays</b> Model, MIT Operations Research Center Report, August 1997.|$|R
40|$|International audienceIn this paper, we are {{concerned}} by the problem of Fault diagnosis in Networked Control Systems (NCS). The effect of unknown <b>networked</b> induced <b>delays</b> on conventional observed based residual generator is studied. It is shown that the detection performances may be reduced due to {{the sensitivity of the}} residuals to the delays. With the assumption that the <b>network</b> <b>delays</b> belong to a given bounded set, in order to enhance the robustness of fault detection an adaptive evaluation procedure of the residuals is proposed. The detection thresholds which depend on the maximum influence of the <b>network</b> <b>delays</b> are estimated using an optimization approach...|$|R
50|$|Network Performance Monitor (NPM) is a {{solution}} in Operations Management Suite that monitors network performance between office sites, data centers, clouds and applications in near real-time. It helps a Network Administrator locate and troubleshoot bottlenecks like <b>network</b> <b>delay,</b> data loss and availability of any network link across on-premises networks, Microsoft Azure VNets, Amazon Web Services VPCs, hybrid networks, VPNs or even public internet links.|$|E
5000|$|In {{computer}} networking, {{the metric}} {{is computed by}} a routing algorithm, and can cover information such as bandwidth, <b>network</b> <b>delay,</b> hop count, path cost, load, MTU (maximum transmission unit), reliability, and communication cost (see e.g. this survey [...] {{for a list of}} proposed routing metrics). The routing table stores only the best possible routes, while link-state or topological databases may store all other information as well.|$|E
50|$|Lag due to <b>network</b> <b>delay</b> is in {{contrast}} often less of a problem. Though more common, the actual effects are generally smaller, {{and it is possible}} to compensate for these types of delays. Without any form of lag compensation, the clients will notice that the game responds only a short time after an action is performed. This is especially problematic in first-person shooters, where enemies are likely to move as a player attempts to shoot them and the margin for errors is often small.|$|E
50|$|Pyrgiotis, N., A. Odoni and K. Malone, “The Approximate <b>Network</b> <b>Delays</b> Model”, {{accepted}} for publication in Transportation Research C, 2011.|$|R
40|$|Technological {{advances}} in virtual environments facilitate {{the creation of}} distributed collaborative environments, in which the distribution of threedimensional content at remote locations allows efficient and effective communication of ideas. One of the challenges in distributed shared environments is maintaining a consistent view of the shared information, {{in the presence of}} inevitable <b>network</b> <b>delays</b> and variable bandwidth. A consistent view in a shared 3 D scene may significantly increase the sense of presence among participants and improve their interactivity. This paper introduces an adaptive scene synchronization algorithm and a framework for integration of the algorithm in a distributed real-time virtual environment. In spite of significant <b>network</b> <b>delays,</b> results show that objects can be synchronous in their viewpoint at multiple remotely located sites. Furthermore residual asynchronicity is quantified as a function of <b>network</b> <b>delays</b> and scalability...|$|R
40|$|International audienceThis paper {{deals with}} the problem of Fault Detection and Isolation (FDI) in Networked Control Systems (NCS). The effects of unknown <b>networked</b> induced <b>delays</b> on {{conventional}} observed based residual generator are studied. It is shown that the detection performances may be reduced due to the sensitivity of the residuals signals to the delays. With the assumption that the <b>network</b> <b>delays</b> belong to a given bounded set, a threshold is defined {{on the basis of the}} network characteristic, in order to enhance the robustness of the decision making process. The detection thresholds, which depend on the bounded values of the <b>network</b> <b>delays,</b> are determined from the network calculus theory...|$|R
50|$|In the past, the {{processing}} delay has been ignored as insignificant {{compared to the}} other forms of <b>network</b> <b>delay.</b> However, in some systems, {{the processing}} delay can be quite large especially where routers are performing complex encryption algorithms and examining or modifying packet content. Deep packet inspection done by some networks examine packet content for security, legal, or other reasons, which can cause very large delay and thus is only done at selected inspection points. Routers performing network address translation also have higher than normal processing delay because those routers need to examine and modify both incoming and outgoing packets.|$|E
5000|$|<b>Network</b> <b>delay</b> is an {{important}} design and performance characteristic of a computer network or telecommunications network. The delay of a network specifies {{how long it takes}} for a bit of data to travel across the network from one node or endpoint to another. It is typically measured in multiples or fractions of seconds. Delay may differ slightly, depending on the location of the specific pair of communicating nodes. Although users only care about the total delay of a network, engineers need to perform precise measurements. Thus, engineers usually report both the maximum and average delay, and they divide the delay into several parts: ...|$|E
50|$|A {{number of}} {{protocols}} have been defined {{to support the}} reporting of quality of service (QoS) and quality of experience (QoE) for VoIP calls. These include RTCP Extended Report (RFC 3611), SIP RTCP Summary Reports, H.460.9 Annex B (for H.323), H.248.30 and MGCP extensions. The RFC 3611 VoIP Metrics block is generated by an IP phone or gateway during a live call and contains information on packet loss rate, packet discard rate (because of jitter), packet loss/discard burst metrics (burst length/density, gap length/density), <b>network</b> <b>delay,</b> end system delay, signal / noise / echo level, Mean Opinion Scores (MOS) and R factors and configuration information related to the jitter buffer.|$|E
50|$|On reception, some interpacket gaps may {{be smaller}} due to {{variable}} <b>network</b> <b>delays,</b> clock tolerances, {{and the presence}} of repeaters (10 and 1000 Mbit/s only).|$|R
40|$|Passivity, compositionality, deployment, overlay network, {{input-output}} stability, distributed protocol. Surveillance and convoy tracking applications {{often require}} groups of networked agents for redundancy and better coverage. An important goal upon deployment {{is to establish}} a formation around a target. Although there exist distributed algorithms using only local communication that achieve this goal, they typically ignore destabilizing effects resulting from implementation uncertainties, such as <b>network</b> <b>delays</b> and data loss. This paper resolves these issues by introducing a discrete-time distributed design framework that uses a compositional, passivity-based approach to ensure lm 2 -stability regardless of overlay network topology, in the presence of <b>network</b> <b>delays</b> and data loss. For the restricted case of a uniform node degree in the overlay network topology, the paper shows that asymptotic formation establishment is achieved. Finally, simulations of velocity-limited unmanned air vehicles (UAVs) are presented that demonstrate the robustness of the network architecture to <b>network</b> <b>delays</b> and data loss. ...|$|R
40|$|Abstract — Adaptive playout {{algorithms}} rely on {{estimates of}} <b>network</b> <b>delays</b> to calculate playout times of voice packets. Typically, network estimators are either able to react quickly to delay variations or to ignore transient noise conditions, but cannot do both. In our solution, the weighting factor {{that controls the}} estimation process is dynamically adjusted according to the observed delay variations. This results in higher-quality estimates of <b>network</b> <b>delays.</b> Experimental results show that our algorithm can achieve higher subjective call quality than the basic adaptive algorithm, {{as measured by the}} ITU-T E-Model methodology. A I...|$|R
5000|$|The 1990s saw several {{important}} experiments in networked performance. In 1993, The University of Southern California Information Sciences Institute began experimenting with networked music performance over the Internet.The Hub (band), which {{was formed by}} original members of The League of Automatic Composers, experimented in 1997 with sending MIDI data over ethernet to distributed locations. However, “ it was more difficult than imagined to debug all of the software problems {{on each of the}} different machines with different operating systems and CPU speeds in different cities”. [...] As mentioned by, describes a three-way audio-only performance in 1998 between musicians in Warsaw, Helsinki, and Oslo dubbed “Mélange à trois”. The early distributed performances all faced problems such as <b>network</b> <b>delay,</b> issues synchronizing signals, echo, and troubles with the acquisition of non-immersive audio and video acquisition and rendering.|$|E
5000|$|While {{frame rate}} issues {{were the main}} complaint, the PlayStation 3 version was also criticized for {{unreliable}} voice chat and excessive <b>network</b> <b>delay</b> or lag in Team Fortress 2, as well as long load times generally. [...] It was, however, praised for featuring anti-aliasing and a quick-save feature, neither of which {{were present in the}} Xbox 360 version (but were present in the PC version). [...] After release, the game received further criticism from fans for the lack of surround sound support when using an optical cable. An open letter to Valve, asking them to put pressure on EA to release a fix was posted to the Steam forum. [...] A response was posted by a Valve employee going by the name of [...] "BurtonJ", directing disappointed customers to a dedicated thread on the subject.|$|E
5000|$|In {{telecommunication}} {{and computer}} engineering, the queuing delay or queueing delay {{is the time}} a job waits in a queue until it can be executed. It is {{a key component of}} <b>network</b> <b>delay.</b> In a switched network, queuing delay is the time between the completion of signaling by the call originator and the arrival of a ringing signal at the call receiver. Queues may be caused by delays at the originating switch, intermediate switches, or the call receiver servicing switch. In a data network, queuing delay is the sum of the delays between the request for service and the establishment of a circuit to the called data terminal equipment (DTE). In a packet-switched network, queuing delay is the sum of the delays encountered by a packet between the time of insertion into the network and the time of delivery to the addressee.|$|E
40|$|This {{thesis is}} an e&# 64256;ort to develop {{closed-loop}} control strategies on computer networks and study their {{stability in the}} presence of <b>network</b> <b>delays</b> and packet losses. An algorithm using predictors was designed to ensure the system stability in presence of <b>network</b> <b>delays</b> and packet losses. A single actuator magnetic ball levitation system was used as a test bed to validate the proposed algorithm. A brief study of real-time requirements of the networked control system is presented and a client-server architecture is developed using real-time operating environment to implement the proposed algorithm. Real-time performance of the communication on Ethernet based on user datagram protocol (UDP) was explored and UDP is presented as a suitable protocol for networked control systems. Predictors were designed based on parametric estimation models. Autoregressive (AR) and autoregressive moving average (ARMA) models of various orders were designed using MATLAB and an eighth order AR model was adopted based on the best-&# 64257;t criterion. The system output was predicted several steps ahead using these predictors and control output was calculated using the predictions. This control output output was used in the events of excessive <b>network</b> <b>delays</b> to maintain system stability. Experiments employing simulations of consecutive packet losses and <b>network</b> <b>delays</b> were performed to validate the satisfactory performance of the predictor based algorithm. The current system compensates for up to 20 percent data losses in the network without loosing stability...|$|R
40|$|A novel playout {{algorithm}} for VoIP applications is presented. The playout {{times of}} voice packets are calculated using adaptive estimation of <b>network</b> <b>delays.</b> In contrast to previous solutions, the weighting factor {{that controls the}} estimation process is dynamically adjusted according to the observed delay variations. This results in higher-quality estimates of <b>network</b> <b>delays.</b> With this algorithm, the trade-off between buffering delay and late packet loss at the receiver is significantly improved. Experimental {{results show that the}} new algorithm can achieve higher subjective call quality than the basic adaptive algorithm, as measured by the ITU-T E-Model methodology. ...|$|R
50|$|Region 4 was {{initially}} supposed to receive Season 5 (5-Disc Set, PAL, Australia) on March 14, 2007, however Buena Vista postponed the title {{due to the}} Seven <b>Network's</b> <b>delayed</b> broadcast of the series.|$|R
50|$|Above, {{a purely}} random peer-selection scheme for gossip was described: when agent A decides {{to run a}} gossip round, it picks some peer B uniformly and at random within the network as a whole (or {{launches}} a message on a random walk that will terminate at a random agent). More commonly, gossip algorithms are designed so that agents interact mostly with nearby agents, and only sometimes with agents that are far away (in terms of <b>network</b> <b>delay).</b> These biased gossip protocols need to ensure a sufficient degree of connectivity to avoid the risk of complete disconnection of {{one side of a}} network from the other, but if care is taken, can be faster and more efficient than protocols that are purely random. Moreover, as a purely practical question, {{it is much easier to}} maintain lists of peers in ways that might be somewhat biased.|$|E
5000|$|In {{order to}} achieve the same {{transmission}} time on all transmitters, the transmission delay in the network providing the transport to the transmitters needs to be considered. Since the delay from the originating site to the transmitter varies, a system is needed to add delay on the output side such that the signal reaches the transmitters at the same time. This is achieved by the use of a special information inserted into the data stream called the Mega-frame Initialization Packet (MIP) which is inserted using a special marker in the MPEG-2 Transport Stream forming a mega-frame. The MIP is time-stamped in the SFN adapter, as measured relative the PPS signal and counted in 100 ns steps (period time of 10 MHz) with the maximum delay (programmed into the SFN adapter) alongside. The SYNC adapter measures the MIP packet against its local variant of PPS using the 10 MHz to measure the actual <b>network</b> <b>delay</b> and then withholding the packets until the maximum delay is achieved. The details {{is to be found in}} ETSI TR 101 190 [...] and mega-frame details in ETSI TS 101 191.|$|E
40|$|Toll quality Voice-over-IP (VoIP) {{provision}} over Service Overlay Networks (SONs) {{is still}} a big challenge for the current best-effort Internet. The end to end <b>network</b> <b>delay,</b> {{as one of the}} most important performance concerns, is the focus in this paper. In the paper, <b>network</b> <b>delay</b> characteristics, e. g. probability distribution and autocorrelation are studied. We propose an approach to synthesize <b>network</b> <b>delay</b> traces for QoS routing research in a full mesh Service Overlay Network(SON) given only partial information of the <b>network</b> <b>delay</b> trace. The main contributions of the paper include: 1) A parametric model of the network delay; 2) Method to synthesize <b>network</b> <b>delay</b> traces for voice packets sent over SONs. The synthesized <b>network</b> <b>delay</b> traces are shown to be close to real <b>network</b> <b>delay</b> traces. The synthetic <b>network</b> <b>delay</b> traces can be used to study quality of service provision mechanisms for VoIP applications over the Service Overlay Networks...|$|E
40|$|<b>Network</b> <b>delays</b> {{and delay}} {{variations}} {{are two of}} the most important network performance metrics directly impacting real-time applications such as voice over IP and time-critical financial transactions. This importance is illustrated by past work on understanding the delay constancy of Internet paths and recent work on predicting <b>network</b> <b>delays</b> using virtual coordinate systems. Merely understanding currently observed delays is insufficient, as network performance can degrade not only due to traffic variability but also as a result of routing changes. Unfortunately this latter effect so far has been ignored in understanding and predicting delay related performance metrics of Internet paths. Our work is the first to address this shortcoming by systematically analyzing changes in <b>network</b> <b>delays</b> and jitter of a diverse and comprehensive set of Internet paths. Using empirical measurements, we illustrate that routing changes can result in roundtrip delay increase of converged paths by more than 1 second. Surprisingly, intradomain routing changes can also cause such large delay increase. Given these observations, we develop a framework to analyze in detail the impact of routing changes on <b>network</b> <b>delays</b> between end-hosts. Using topology information and properties associated with routing changes, we explain the causes for observed delay fluctuations and more importantly identify routing changes that lead to predictable effects on delay-related metrics. Using our framework, we study the predictability of delay and jitter changes in response to both passively observed interdomain and actively measured intradomain routing changes...|$|R
40|$|In this paper, a {{generalized}} model of bi-directional associative memory (BAM) neural <b>networks</b> <b>delays</b> and impulses is investigated. By constructing suitable Lyapunov functional, Halanaly differential inequality and M-matrix theory, some sufficient conditions for global exponential stability of generalized BAM neural <b>networks</b> with <b>delays</b> and impulses are obtained. An examples {{are given to}} show {{the effectiveness of the}} obtained results. Key words: BAM neural networks; delays;impulses; global exponential stability. 1...|$|R
40|$|Abstract – Using a {{communication}} network, {{such as an}} IP network, in the control loop is increasingly becoming the norm. This process of network-based control (NBC) has a potentially profound impact in areas such as: teleoperation, healthcare, military applications, and manufacturing. However, limitations arise as the communication <b>network</b> introduces <b>delay</b> that often degrades or destabilizes the control system. Four methods have been investigated that alleviate the IP <b>network</b> <b>delays</b> to provide stable real-time control. This paper presents the four methodologies, while the companion paper presents a case study on a DC motor with a networked proportional-integral (PI) speed controller with various <b>network</b> <b>delays</b> and noise levels. The four methodologies are gain scheduling middleware (GSM), optimal stochastic methodology, queuing methodology, and robust control methodology. Simulation results show that NBC combined with these techniques can successfully maintain system stability, allowing control of real-time applications. I...|$|R
