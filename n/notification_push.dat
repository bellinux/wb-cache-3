2|285|Public
50|$|Proximity-based <b>notification</b> (<b>push</b> or pull). Targeted advertising, buddy list, common profile {{matching}} (dating).|$|E
40|$|This paper {{presents}} Alcatel's Notification Service {{which has}} been designed {{in the context of}} TINA. It presents the rationale for such a service and its main features : generic and typed <b>notification,</b> <b>push</b> and pull communication models, filtering, subscription, federation, fault-tolerance, and quality of service. For each feature, a comparison is done with the four actual OMG proposals for a Notification Service...|$|E
5000|$|Doug Turner invented Geolocation [...] on the Web, Device Orientation on the web, and is {{a leader}} in device access. Doug Turner invented Simple <b>Push</b> <b>Notifications.</b> <b>Push</b> <b>Notification</b> are a way for {{application}} developers to send messages to their web applications.|$|R
40|$|Abstract: The Emerald Ash Borer (EAB) {{has killed}} or infested {{millions}} of ash {{trees in the}} United States. It {{has the potential to}} decimate Ash as a component of North American forests, which will have dramatic ecological and economic effects. Government agencies have joined forces to implement a long-term program to contain and eventually eradicate EAB from North America. One key requirement for the success of this program is the underlying information sharing infrastructure. In this paper, we propose a novel framework, called Sentinel, to automate the dissemination of EAB-related information among EAB partners. We propose an ontology-based service-oriented dissemination model. We introduce three (3) topic-based <b>notification</b> protocols: naïve <b>push</b> <b>notification</b> (NPN), centralized <b>push</b> <b>notification</b> (CPN), and distributed <b>push</b> <b>notification</b> (DPN). Finally, we present experiment results to compare the proposed protocols...|$|R
40|$|Smartphones {{are used}} ubiquitously {{worldwide}} and are essential tools in modern society. However, smartphone overuse is an emerging social issue, and limited studies have objectively assessed this matter. The majority {{of previous studies}} have included surveys or behavioral observation studies. Since a previous study demonstrated an association between increased <b>push</b> <b>notifications</b> and smartphone overuse, we investigated the effects of <b>push</b> <b>notifications</b> on task performance. We detected changes in brainwaves generated by smartphone <b>push</b> <b>notifications</b> using the N 200 and P 300 components of event-related potential (ERP) to investigate both concentration and cognitive ability. ERP assessment indicated that, in both risk and nonrisk groups, the lowest N 200 amplitude and the longest latency during task performance were found when <b>push</b> <b>notifications</b> were delivered. Compared to the nonrisk group, the risk group demonstrated lower P 300 amplitudes and longer latencies. In addition, the risk group featured {{a higher rate of}} error in the Go-Nogo task, due to the negative influence of smartphone <b>push</b> <b>notifications</b> on performance in both risk and nonrisk groups. Furthermore, <b>push</b> <b>notifications</b> affected subsequent performance in the risk group...|$|R
5000|$|Mobile <b>Push</b> <b>Notifications</b> bridges native Pub/Sub Messaging API {{publishing}} with {{3rd party}} <b>push</b> <b>notification</b> services including Google Android GCM, Apple iOS APNS, and Microsoft Windows Phone MSNP. The developing, configuring, and maintaining of server side components for 3rd party providers {{is provided by}} the PubNub API.|$|R
5000|$|Powerful data triggers, event handlers, and <b>push</b> <b>notification.</b>|$|R
40|$|This thesis {{presents}} {{the design and}} implementation of a server for efficient notification of mobile applications. The server consist of two parts. The first part is dedicated for sending <b>push</b> <b>notifications</b> to mobile applications, the second part is dedicated for the administration of mobile applications. The current implementation allows sending <b>push</b> <b>notifications</b> to Android and Windows Phone enabled devices. The server is designed {{in a way to}} allow future upgrades for sending Ios or Firefox <b>push</b> <b>notifications.</b> Inaddition to upgrades on other operating system it allows ugrades to classic notification system like email or SMS...|$|R
5000|$|Simple {{subscription}} for a resource, {{and resulting}} <b>push</b> <b>notifications.</b>|$|R
5000|$|Re-engageable - Make re-engagement easy through {{features}} like <b>push</b> <b>notifications.</b>|$|R
40|$|We present WildCAT, an {{extensible}} Java {{framework to}} ease the creation of context-aware applications. WildCAT provides a simple yet powerful dynamic model to represent an application’s execution context. The context information can be accessed by application programmers through two complimentary interfaces: synchronous requests (pull mode) and asynchronous <b>notifications</b> (<b>push</b> mode). Internally, WildCAT is designed as a framework supporting different levels of extensions, from the simple configuration of the default generic implementation to completely new implementations tailored to specific needs. A given application can mix different implementations for different aspects of its context while only depending on WildCAT’s simple and unifie...|$|R
5000|$|Apple <b>Push</b> <b>Notification</b> Service - Send over-the-air alerts, such as news updates {{or social}} {{networking}} status changes, using Apple's <b>Push</b> <b>Notification</b> service to applications that support APNS. APNS allows Mac OS X Lion and iOS clients to receive push changes to {{items such as}} mail, calendar and contacts from a configured OS X Lion Server.|$|R
5000|$|Support for the Android Cloud to Device Messaging (C2DM) service, {{enabling}} <b>push</b> <b>notifications.</b>|$|R
40|$|Along {{with the}} {{increasing}} in demand of mobile computing, <b>Push</b> <b>Notification</b> (PN) is widely used in mobile phones and other devices. PN allows the developer to send messages to the end users even when the client application is not running at the moment. This solves the problem produced by non-supported multi-tasking feature as well as saving battery life. Microsoft <b>Push</b> <b>Notification</b> Service (MPNS) is one solution to use PNs in Windows Phones. The thesis gives the developers {{an idea of how}} to use PNs by introducing MPNS, comparing MPNS with other <b>Push</b> <b>Notification</b> Services, usage of different PN types analysis, and PN simulation system implementation...|$|R
5000|$|A <b>push</b> <b>notification</b> is {{a message}} that is [...] "pushed" [...] from backend server or {{application}} to user interface, e.g. (But not limited to) mobile applications and desktop applications. It is more user experience specific which is different from Push technology, which pushes the requests between components such as server to server communication. A common scenario of <b>push</b> <b>notification</b> is the client application pops up a message in front of application's user information, along with the alert sounds. The notification could also be coupled with images and hypertext link in some cases. Via interacting with the <b>push</b> <b>notification</b> it usually brings up the client applications to the front.|$|R
50|$|AppArmor's safety apps include {{features}} such as <b>push</b> <b>notifications,</b> location tracking, and click-to-call capability.|$|R
50|$|While <b>push</b> <b>notification</b> comes, it {{may also}} play alert sounds to attract user's attention.|$|R
5000|$|... toast {{notifications}} sent by apps and app developers {{using the}} Microsoft <b>Push</b> <b>Notification</b> Service.|$|R
40|$|This thesis {{deals with}} the {{development}} of application for sending <b>push</b> <b>notifications</b> using the PHP Symfony framework. The text is logically divided into two main parts. The first part is theoretical and explains what <b>push</b> <b>notifications</b> are, what is their current use and what is their history. One of the chapters of this section is an introduction and overview of services used for sending <b>push</b> <b>notifications,</b> including an explanation how these services work. The second part is practical and deals with design and development of the application. At first there are requirements that are placed on the application, followed by designing by using a use case diagram, domain model and wireframes of user interface. The next chapter describes the most important tools and technologies used for development. The final chapter discusses the implementation itself and represents the final product. The output of this work is a web application used for sending <b>push</b> <b>notifications</b> that will be used for internal needs of software company...|$|R
50|$|<b>Push</b> <b>notifications</b> enable {{government}} officials to alert residents of ongoing events, emergency alerts, and status updates.|$|R
50|$|YouTube Data API (v3) {{supports}} <b>push</b> <b>notifications</b> via PubSubHubbub {{instead and}} no longer has SUP section.|$|R
50|$|On November 21, 2013, App.net {{announced}} Broadcast, a way {{for users}} of the App.net service to send and receive <b>push</b> <b>notifications</b> about the things they care about. These <b>push</b> <b>notifications</b> are sent through the App.net app on iPhone or Android. As part of the freemium model Broadcast is free {{to members of the}} App.net service with channel analytics available to App.net users with a developer-tier account.|$|R
5000|$|Mobile Engagement {{collects}} {{real-time analytics}} that highlight users’ behavior. It also provides <b>push</b> <b>notifications</b> to mobile devices.|$|R
50|$|Version 4 was {{released}} in early 2016, adding support for content blocking extensions, service workers and <b>push</b> <b>notifications.</b>|$|R
50|$|GameThrive is a plugin and {{platform}} as {{a service}} to send <b>push</b> <b>notifications</b> to iOS and Android devices.|$|R
50|$|A {{mobile app}} for iOS and Android devices with <b>push</b> <b>notifications</b> and payment {{features}} {{has also been}} made available.|$|R
5000|$|... 2014 - Opsview Mobile - New {{release of}} iOS app, and an entirely {{redesigned}} android app launched, supporting <b>push</b> <b>notifications.</b>|$|R
50|$|The {{marketing}} channels supported by Optimove include email, SMS, mobile <b>push</b> <b>notification,</b> website/app pop-ups, Facebook Custom Audiences and Google Ads.|$|R
50|$|Airpush has {{received}} criticism for utilizing <b>push</b> <b>notifications.</b> In response, Airpush introduced options, which required end-users to opt into its service.|$|R
5000|$|Mobile Applications: Smartphone-based {{mobile apps}} contain {{several types of}} {{messages}}. <b>Push</b> <b>Notifications</b> are direct messages sent to a user either automatically {{or as part of}} a campaign. They include transactional, marketing, geo-based, and more. Rich <b>Push</b> <b>Notifications</b> are full HTML <b>Push</b> <b>Notifications.</b> Mobile apps also contain Interactive ads that appear inside the mobile application or app; Location-Based Marketing: marketing messages delivered directly to a mobile device based on the user's location; QR Codes (quick-response barcodes): This is a type of 2D barcode with an encoded link that can be accessed from a smartphone. This technology is increasingly being used for everything from special offers to product information. Mobile Banner Ads: Like standard banner ads for desktop Web pages but smaller to fit on mobile screens and run on the mobile content network ...|$|R
50|$|Pass {{changes can}} be pushed via the Apple <b>Push</b> <b>Notification</b> Service by the pass provider, or {{manually}} updated by the user themselves.|$|R
5000|$|Update: In May 2016 the app {{received}} an update that now provides <b>push</b> <b>notification</b> to help users manager their toll tag account ...|$|R
5000|$|Windows <b>Push</b> <b>Notification</b> Service (commonly {{referred}} to as Windows Notification Service or WNS) is a notification service developed by Microsoft for all devices running Microsoft Windows platforms. It allows for developers to send push data ("toast" [...] and [...] "tile" [...] updates) to Windows and Universal Windows Platform applications which implement the feature. Designed as a successor to the Microsoft <b>Push</b> <b>Notification</b> Service, it was first supported on Windows 8 and subsequently on Windows Phone 8.1 upon its release.|$|R
50|$|An {{official}} app for the iOS {{was released}} and features support for all IRC commands, a built-in browser, <b>Push</b> <b>notifications</b> and other features.|$|R
5000|$|<b>Push</b> <b>notification</b> {{is usually}} {{used for the}} {{applications}} to bring information to the user for their attention.The messages could fall into the following categories: ...|$|R
5000|$|<b>Push</b> <b>notifications</b> {{can be set}} {{to expire}} if not {{delivered}} before a certain time. This is controlled by setting deliver-before-timestamp in the pushmessage element.|$|R
