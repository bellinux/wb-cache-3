798|165|Public
25|$|Comedies, Tragi-comedies; & Tragedies, <b>Nonce</b> Collection (London, 1652).|$|E
25|$|Technically, digest {{authentication}} is {{an application}} of MD5 cryptographic hashing with usage of <b>nonce</b> values to prevent replay attacks. It uses the HTTP protocol.|$|E
25|$|May 1963 {{was a time}} of low morale for FAN, {{given their}} losses via enemy action and Patriotic Neutralist defections. An {{offensive}} against the communists was planned, then cancelled for fear of provoking an overwhelming counter from PAVN. Souvanna Phouma ordered a defensive posture by Neutralist and Royalist forces for the <b>nonce.</b> By this time, FAN could muster 2,200 men, supported by 50 PT-76 tanks.|$|E
40|$|Abstract. Tagging schemes {{have been}} used in {{security}} protocols to ensure that the analysis of such protocols can work with messages of bounded length. When the set of <b>nonces</b> is bounded, this leads to decidability of secrecy. In this paper, we show that tagging schemes can be used to obtain decidability of secrecy even in the presence of unboundedly many <b>nonces.</b> ...|$|R
50|$|Initialization vectors may be {{referred}} to as <b>nonces,</b> as they are typically random or pseudo-random.|$|R
5000|$|... 2003: Pierre Blet, Les <b>Nonces</b> du roi à la cour de Louis XIV, Perrin [...]|$|R
25|$|The foreign {{function}} interface (FFI) allows bindings {{to other}} programming languages. Only bindings to C are {{specified in the}} Report, but the design allows for other language bindings. To support this, data type declarations were permitted to contain no constructors, enabling robust <b>nonce</b> types for foreign data {{that could not be}} constructed in Haskell. This extension was also previously specified in an Addendum to the Haskell 98 Report and widely used.|$|E
25|$|César de Hauke’s {{catalogue}} raisonné of {{the works}} of Seurat lists fourteen works as oil studies for the Bathers, most if not all of which were almost certainly painted outdoors, and in which the composition of the final piece may be seen gradually taking shape. The last of these studies—presently housed at the Art Institute of Chicago—was painted in 1883 and is very close to the final work, except most obviously in respect of its size; it is just 25cm long and 16cm high. Seurat was fond of these small studies, calling them his croquetons (a <b>nonce</b> word best translated as ‘sketchettes’), and hanging them on the walls of his studio.|$|E
25|$|In 2001, {{a new and}} {{surprising}} discovery was made by Fluhrer, Mantin and Shamir: over all possible RC4 keys, the statistics {{for the first few}} bytes of output keystream are strongly non-random, leaking information about the key. If the <b>nonce</b> and long-term key are simply concatenated to generate the RC4 key, this long-term key can be discovered by analysing a large number of messages encrypted with this key. This and related effects were then used to break the WEP ("wired equivalent privacy") encryption used with 802.11 wireless networks. This caused a scramble for a standards-based replacement for WEP in the 802.11 market, and led to the IEEE 802.11i effort and WPA.|$|E
40|$|To {{protect against}} replay attacks, many Internet proto-cols rely on <b>nonces</b> to {{guarantee}} freshness. In practice, the server generates these <b>nonces</b> {{during the initial}} hand-shake, but if the server is under attack, resources con-sumed by managing certain protocols can lead to DoS vulnerabilities. To help alleviate this problem, we pro-pose the concept of rhythmic <b>nonces,</b> a cryptographic tool that allows servers to measure request freshness with minimal bookkeeping costs. We explore {{the impact of this}} service {{in the context of a}} puzzle-based DoS re-sistance scheme we call “SYN puzzles”. Our preliminary results based on mathematical analysis and evaluation of a prototype suggests that our scheme is more resistant than existing techniques. 1...|$|R
50|$|Bob {{can also}} send <b>nonces</b> but should then include a message {{authentication}} code (MAC), which Alice should check.|$|R
40|$|Abstract. This paper shows {{a secure}} group key {{agreement}} protocol. In the group key agreement, {{it is important}} to maintain integrity of generated session-keys even if some of group members behave maliciously. Our basic strategy is ensuring integrity of <b>nonces</b> delivered among parties in a group key agreement protocol, using a kind of message authentication code of the <b>nonces.</b> To avoid a possible leak of information of generated session-keys through such MACs, we employ two initiators in our protocol. Since an adversary cannot know how to divide <b>nonces</b> among the two initiators, we can guarantee that MACs do not leak any information of session-keys. Thus we establish integrity without loosing secrecy of session-keys, that leads to UC-security of our group key agreement protocol...|$|R
25|$|There are two {{principal}} reasons for concern about Ashton's {{translation of the}} title. Firstly, 'Judaism' in English carries the meaning of 'the profession or practice of the Jewish religion; the religious system or the polity of the Jews', a topic on which Wagner does not touch. 'Judentum' however in 19th-century Germany carried a much broader meaning—roughly analogous to the <b>nonce</b> English word 'Jewdom' (cf. Christendom) and including {{the concept of the}} social practices of the Jews. In particular it carried the pejorative sense of 'haggling' or 'marketeering'—it was used in this sense for example by Karl Marx. Undoubtedly Wagner wished to refer to this sense, in effect using the word as a pun, as the commercialism implied forms the topic of the essay as a whole. It is therefore important to bear in mind the full range of implications of the title-word 'Judentum' in considering the essay as a whole. 'Jewishness', whilst not ideal, is perhaps a closer English approximation to 'Judentum' than 'Judaism'.|$|E
500|$|<b>Nonce</b> {{words are}} {{sometimes}} contrived to rhyme with orange. Composers Charles Fox and Norman Gimbel wrote the song [...] "Oranges Poranges" [...] to be sung by the Witchiepoo character {{on the television}} programme H.R. Pufnstuf.|$|E
500|$|An IPA symbol {{is often}} {{distinguished}} from the sound {{it is intended to}} represent, since there is not necessarily a one-to-one correspondence between letter and sound in broad transcription, making articulatory descriptions such as 'mid front rounded vowel' or 'voiced velar stop' unreliable. While the Handbook of the International Phonetic Association states that no official names exist for its symbols, it admits the presence of one or two common names for each. The symbols also have <b>nonce</b> names in the Unicode standard. In some cases, the Unicode names and the IPA names do not agree. For example, IPA calls [...] "epsilon", but Unicode calls it [...] "small letter open E".|$|E
3000|$|The C&C node {{maintains}} {{a record of}} all <b>nonces</b> generated by legitimate users and itself, {{for as long as}} a data ID is active [...]...|$|R
50|$|At {{the end of}} the protocol, A and B {{know each}} other's identities, and know both NA and NB. These <b>nonces</b> are not known to eavesdroppers.|$|R
5000|$|In {{the summer}} of 2014, Dominique Bongard {{discovered}} {{what he called the}} Pixie Dust attack. This attack works only for the default WPS implementation of several wireless chip makers, including Ralink, MediaTek, Realtek and Broadcom. The attack focuses on a lack of randomization when generating the E-S1 and E-S2 [...] "secret" [...] <b>nonces.</b> Knowing these two <b>nonces,</b> the PIN can be recovered within a couple of minutes. A tool called pixiewps has been developed and a new version of Reaver has been developed to automate the process.|$|R
2500|$|Server <b>nonce</b> {{is allowed}} to contain timestamps. Therefore, the server may inspect <b>nonce</b> {{attributes}} submitted by clients, to prevent replay attacks ...|$|E
2500|$|RFC 2069 {{was later}} {{replaced}} by RFC 2617 (HTTP Authentication: Basic and Digest Access Authentication). RFC 2617 introduced {{a number of}} optional security enhancements to digest authentication; [...] "quality of protection" [...] (qop), <b>nonce</b> counter incremented by client, and a client-generated random <b>nonce.</b> These enhancements are designed to protect against, for example, chosen-plaintext attack cryptanalysis.|$|E
2500|$|Within the {{individual}} songs or poems of the [...] "Nine Pieces", lines generally consist of various numbers of syllables, separated by the <b>nonce</b> word. In this case, the <b>nonce</b> word {{of choice is}} [...] ( [...] , Old Chinese: *gˤe). This, {{as opposed to the}} four-character verse of the Shi Jing, adds a different rhythmic latitude of expression.|$|E
40|$|AbstractWhile {{reasoning}} {{about security}} protocols, {{most of the}} difficulty of reasoning relates to the complicated semantics (with freshness of <b>nonces,</b> multisessions, etc.). While logics for security protocols need to be abstract (without explicitly dealing with <b>nonces,</b> encryption, etc.), ignoring details may result in rendering any verification of abstract properties worthless. We would like the verification problem for the logic to be decidable as well, to allow for automated methods for detecting attacks. From this viewpoint, we study a logic with session abstraction and quantifiers over session names. We show that interesting security properties like secrecy and authentication can be described in the logic. We prove the existence of a normal form for runs of tagged protocols. This leads to a quantifier elimination result for the logic which establishes the decidability of the verification problem for tagged protocols, when we assume a fixed finite set of <b>nonces...</b>|$|R
40|$|We formalize the Dolev-Yao {{model of}} {{security}} protocols, using a notation based on multi-set rewriting with existentials. The goals are {{to provide a}} simple formal notation for describing security protocols, to formalize the assumptions of the Dolev-Yao model using this notation, and to analyze {{the complexity of the}} secrecy problem under various restrictions. We prove that, even for the case where we restrict the size of messages and the depth of message encryption, the secrecy problem is undecidable for the case of an unrestricted number of protocol roles and an unbounded number of new <b>nonces.</b> We also identify several decidable classes, including a dexp-complete class when the number of <b>nonces</b> is restricted, and an np-complete class when both the number of <b>nonces</b> and the number of roles is restricted. We point out a remaining open complexity problem, and discuss the implications these results have on the general topic of protocol analysis. ...|$|R
40|$|While {{reasoning}} {{about security}} protocols, {{most of the}} difficulty of reasoning relates to the complicated semantics (with freshness of <b>nonces,</b> multisessions etc). While logics for security protocols need to be abstract (without explicitly dealing with <b>nonces,</b> encryption etc), ignoring details may result in rendering any verification of abstract properties worthless. We would like the verification problem for the logic to be decidable as well, to allow for automated methods for detecting attacks. From this viewpoint, we study a logic with session abstraction and quantifiers over session names. We show that interesting security properties like secrecy and authentication can be described in the logic. We prove the existence of a normal form for runs of tagged protocols. This leads to a quantifier elimination result for the logic which establishes the decidability of the verification problem for tagged protocols, when we assume a fixed finite set of <b>nonces.</b> ...|$|R
2500|$|The [...] "Great Summons" [...] and the [...] "Summons for the Soul" [...] poetic form (the {{other kind}} of [...] "7-plus") varies from this pattern by uniformly using a {{standard}} <b>nonce</b> word refrain throughout a given piece, and that alternating stressed and unstressed syllable finals to the lines has become the standard verse form. The <b>nonce</b> word used as a single-syllable refrain in various ancient Chinese classical poems varies: (according to modern pronunciation), [...] "Summons for the Soul" [...] uses xie and the [...] "Great Summons" [...] uses zhi (and the [...] "Nine Pieces" [...] (Jiu Ge) uses xi). Any one of these unstressed <b>nonce</b> words seem to find a similar role in the prosody. This two line combo: ...|$|E
2500|$|Unlike {{a modern}} stream cipher (such {{as those in}} eSTREAM), RC4 does not take a {{separate}} <b>nonce</b> alongside the key. [...] This means that if a single long-term key {{is to be used}} to securely encrypt multiple streams, the protocol must specify how to combine the <b>nonce</b> and the long-term key to generate the stream key for RC4. [...] One approach to addressing this is to generate a [...] "fresh" [...] RC4 key by hashing a long-term key with a <b>nonce.</b> However, many applications that use RC4 simply concatenate key and nonce; RC4's weak key schedule then gives rise to related key attacks, like the Fluhrer, Mantin and Shamir attack (which is famous for breaking the WEP standard).|$|E
2500|$|Server is {{also allowed}} to {{maintain}} a list of recently issued or used server <b>nonce</b> values to prevent reuse ...|$|E
5000|$|A second cryptanalytic {{paper on}} Phelix titled [...] "Differential Attacks against Phelix" [...] was {{published}} on the 26th of November 2006 by Hongjun Wu and Bart Preneel. The paper {{is based on the}} same attacks assumption as the Differential Attack against Helix. The paper shows that if the cipher is used incorrectly (<b>nonces</b> reused), the key of Phelix can be recovered with about 237 operations, 234 chosen <b>nonces</b> and 238.2 chosen plaintext words. The computational complexity of the attack is much less than that of the attack against Helix.|$|R
50|$|Between 1 March 2014 and 1 March 2015, {{the average}} number of <b>nonces</b> miners had to try before {{creating}} a new block increased from 16.4 quintillion to 200.5 quintillion.|$|R
5000|$|The bulk {{encryption}} algorithm, e.g. AES_128_GCM, is used {{to encrypt}} the message stream. It also includes the key size and the lengths of explicit and implicit initialization vectors (cryptographic <b>nonces).</b>|$|R
2500|$|The server {{responds}} with the 401 [...] "Unauthorized" [...] response code, providing the authentication realm and a randomly generated, single-use value called a <b>nonce.</b>|$|E
2500|$|Client <b>nonce</b> was {{introduced}} in RFC 2617, which allows the client to prevent chosen-plaintext attacks, such as rainbow tables that could otherwise threaten digest authentication schemes ...|$|E
2500|$|Many of {{the words}} in the poem are playful <b>nonce</b> words of Carroll's own invention, without {{intended}} explicit meaning. When Alice has finished reading the poem she gives her impressions: ...|$|E
30|$|We {{have come}} to the {{conclusion}} that our TRNGs as an entropy source can be used, for example, generating cryptographic keys, <b>nonces</b> for authentication, and seeds for pseudo random number generators.|$|R
30|$|Trivial {{substitution}} and replay attack: Replaying attack {{means that}} an adversary first intercepts some communication {{data in the}} currently running of key exchange protocol run. Then, he replays the intercepted data with receiver in a future protocol running. The replay attack does not succeed in the proposed protocols because the freshness of messages transmitted between participants are guaranteed by the random <b>nonces</b> Na and Nb. Only A, B, and S can use the pre-shared key to encrypt the random <b>nonces.</b> Moreover, the proposed protocols do not require the time-stamp information to prevent replay attack which requires extremely imperative precise clock synchronization.|$|R
40|$|An {{important}} {{problem in}} the analysis of security protocols is that of checking whether a protocol preserves secrecy, i. e., no secret owned by the honest agents is unintentionally revealed to the intruder. This problem has been proved to be undecidable in several settings. In particular, [11] prove the undecidability of the secrecy {{problem in the}} presence of an unbounded set of <b>nonces,</b> even when the message length is bounded. In this paper we prove that even in the presence of an unbounded set of <b>nonces</b> the secrecy problem is decidable for a reasonable subclass of protocols, which we call context-explicit protocols. ...|$|R
