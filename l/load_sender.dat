0|15|Public
40|$|The {{participation}} of the first author in multiple algorithmic contests (both as a contestant and {{as a member of}} the scientific committee) influenced many of the results presented in this paper. The attached ZIP archive contains a few sample tasks and solutions (of the first author or of others) which are related to some of the algorithms and data structures proposed in this paper. The final version of the paper can be found in the IEEE Xplore database: [URL] audienceThe Transmission Control Protocol (TCP) uses a sliding window in order to enforce flow control. The receiver advertises its available buffer space to the sender, which cannot transmit more data than the advertised space. Transmitted data is first copied from application buffers into TCP buffers and from there it is sent through the network. In this paper we propose a model which characterizes the sender's behavior throughout the duration of a TCP conversation. The model is suitable in the case of powerful, but variably <b>loaded</b> <b>senders,</b> slow receivers, fast connections and moderate amounts of data transmitted. For this model we present an O(n∙log 2 n) algorithm which computes the minimum processing time spent by the sender, if the window sizes advertised by the receiver and the <b>sender's</b> <b>load</b> are known in advance. The solution is based on an algorithmic framework for the segment tree data structure, which we introduce in this paper...|$|R
40|$|Layering {{techniques}} for video transmission are being actively {{considered as a}} way of satisfying receivers in a heterogeneous environment. A layering scheme based on a combination of network requirements and the perceptual quality of video is an attractive proposition. In this paper a feed-forward post-codec controller has been described that sends video sequence in an optimally layered way. For optimization the controller considers the perceptual quality of video, <b>load</b> on <b>sender</b> and <b>load</b> on network. For the controller the correlations have been developed experimentally and deductively. Godkänd; 2002; 20061127 (ysko...|$|R
30|$|To further {{mitigate}} {{these issues}} in the coded transmission phase, instantly decodable network coding (IDNC) techniques [3, 12 – 15] have been introduced. They make online coding decisions based on receivers’ feedback about their packet reception state, under the restriction that coding/decoding is over the binary field. In other words, IDNC techniques shift the computational <b>load</b> to the <b>sender,</b> and allow receivers to perform simple binary XOR based instant packet decodings, as the sender (such as a base station) usually has much more computational and energy resources than the receivers.|$|R
3000|$|... 2 errorcount {{exceeds the}} maximum number of {{consecutive}} timeouts PathMaxRetrans [28]. Such a sender-centric failover-based handover mechanism will inevitably degrade the SCTP performance due to (i) failure detection on the primary path is a time-consuming process (more than 60 s [11]) and (ii) frequent “ping-pong” primary path handover may increase the <b>sender’s</b> <b>load</b> and overhead. Moreover, when SCTP switches to a new primary path, it may experience a slow-start phase on the new path because of a timeout event. This may cause a sending rate fluctuation and influence user-perceived quality of multimedia communications.|$|R
30|$|In [86], an energy-aware {{congestion}} control algorithm (ecMTCP) for multipath TCP is developed. In ecMTCP, the rate control {{depends on a}} traffic sharing principle between the paths and applied by its energy costs and traffic <b>loads.</b> The <b>sender</b> and receiver measure the energy costs of data and ACK packets, respectively. The energy costs of the receiver side is piggybacked to the sender periodically with ACKs, and finally, the sender calculates the overall end-to-end energy cost of the successful transmission of one data packet. Energy efficiency is provided by offloading traffic from higher energy cost paths to the lower paths and by using an energy-aware control mechanism where the congestion window increase is inversely proportional to the energy cost on each path. In simulations, energy efficiency is indicated by measuring the energy consumption difference of the proposed algorithm and MPTCP. According to results, the energy savings of ecMTCP is better than that of MPTCP.|$|R
40|$|One of {{the most}} {{interesting}} improvements of the Internet today is the provisioning of services for interactive audio [...] visual applications. Such applications have quality requirements which place limits on both transfer delays and information losses. Our goal is to support interactive video with only small modifications to network routers and control systems. The approach we favor is to ensure the quality for a session by forward [...] error correction. The code strength is dynamically tuned to meet a user's quality expectation, given the experienced loss process of the transfer. To make the tuning feasible, the network state must be predictable. We accomplish this by regulation of the <b>load</b> through <b>sender</b> [...] based admission control. It uses end [...] to [...] end probes of the network state and a self [...] imposed blocking if then sender determines that a sensible transfer cannot be made. The paper outlines this procedure along with a review of source coding considerations and a description of tunable error [...] ...|$|R
40|$|The {{scheduling}} {{of tasks}} in distributed real-time systems has attracted many researchers in the recent past. The distributed real-time system considered here consists of uniprocessor or multiprocessor nodes connected through a multihop network. Scheduling in such a system involves scheduling of dynamically arriving tasks within a node (local scheduling) and migration of tasks across the network (global scheduling) {{if it is not}} possible to schedule them locally. Most of the existing schemes on distributed real-time task scheduling ignore the underlying message scheduling required for global {{scheduling of tasks}}. These schemes consider the load on the processors at a node as the basis to migrate tasks from a heavily <b>loaded</b> node (<b>sender)</b> to a lightly loaded node (receiver). We believe that the identification of a receiver node should be based not only on the load on its processors, but also on the availability of a lightly loaded path from the sender to that receiver. In this paper, we pres [...] ...|$|R
40|$|The layered video {{approach}} has becn {{considered as one}} of the many approaches for solving the problems related to heterogeneity in the current Internet for real time applications. A number of schemes have been propounded laking into consideration only the network requirements. Another aspect is to develop layering scheme based on a combination of network requirements and the perceptual quality of video. In this paper a post-codec controller has been described that sends the video sequence in an optimal way taldng into considerations the effect of type of video sequence, number of layers and distribution of frames among different layers on the perceptual quality of video, <b>load</b> on <b>sender</b> and bandwidth requirement. The controller has been tested in real network for two different configurations. (a) one sender and one receiver; and (b) one sender and many receivers connected in parallel. It has been observed that the quality of transmission improves by the use of the controller. 1...|$|R
40|$|This work is {{dedicated}} to comparison of open source as well as proprietary transport protocols for highspeed data transmission via IP networks. The contemporary common TCP needs significant improvement since it was developed as general-purpose transport protocol and firstly introduced four decades ago. In nowadays networks, TCP fits not all communication needs that society has. Caused of it another transport protocols have been developed and successfully used for e. g. Big Data movement. In scope of this research the following protocols have been investigated for its efficiency on 10 Gbps links: UDT, RBUDP, MTP and RWTP. The protocols were tested under different impairments such as Round Trip Time up to 400 ms and packet losses up to 2 %. Investigated parameters are the data rate under different conditions of the network, the CPU <b>load</b> by <b>sender</b> andreceiver during the experiments, size of feedback data, CPU usage per Gbps {{and the amount of}} feedback data per GiByte of effectively transmitted data. The best performance and fair resources consumption was observed by RWTP. From the opensource projects, the best behavior is showed by RBUDP...|$|R
40|$|Abstract—One of the {{challenges}} in reliable multicast is approximating or replicating TCP’s congestion control algorithm. This has led to various proposals to adapt TCP itself for use over multicast. The drawback of these multicast TCP services is that they place significant processing <b>load</b> on the <b>sender</b> and they fail {{to deal with the}} problem of ACK implosion. This paper shows how concast, a network-layer aggregation service, can be used in conjunction with a standard (unmodified) TCP implementation to support reliable multicast while avoiding ACK implosion and offloading ACK processing. Our prototype implementation shows that, even for relatively small groups, distributing the ACK processing and reducing ACK losses translates into significant improvements in end-to-end transmission rates. I...|$|R
40|$|IETF Internet DraftThis {{document}} introduces two {{schemes that}} provide a per-packet authentication and integrity service {{in the context of}} the ALC and NORM protocols. The first scheme is based on digital signatures. Because it relies on asymmetric cryptography, this scheme generates a high processing <b>load</b> at the <b>sender</b> and to a lesser extent at a receiver, as well as a significanttransmission overhead. It is therefore well suited to low data rate sessions. The second scheme relies on a group message Authentication Code (MAC). Because this scheme relies symmetric cryptography, MAC calculation and verification are fast operations, which makes it suited to high data rate sessions. However it only provides a group authentication and integrity service, which means that it only protects against attackers that are not group members...|$|R
40|$|In {{this paper}} we present an {{analytical}} comparison of retransmission strategies for {{three types of}} reliable multicast protocols. In the first protocol (called sender-originated) it is {{the task of the}} source to guarantee reliable delivery of data to all receivers. The other two approaches additionally allow either receivers or routers to retransmit packets (these protocols are termed receiver-originated and router-originated, resp.). Thus the <b>load</b> on the <b>sender</b> is relieved {{while at the same time}} transmission cost decreases since packets can be retransmitted with a limited scope. We determine the retransmission cost of all three protocol types based on discrete-time Markov chains. In contrast to other analytical models this approach does not require loss events to be independent for different receivers. Numerical results show that the cost for sender-originated protocols may become unacceptable even if loss probabilities within the network are small. In larger networks with widely spread [...] ...|$|R
40|$|The {{demand for}} more and more complex {{real-time}} applications which require high computational needs with timing constraints, and geographical distribution of computational entities (tasks) of these applications, have led to the choice of distributed systems as a natural candidate for supporting such real-time applications, due to their potential for high performance and reliability. The distributed real-time system considered here consists of uniprocessor or multiprocessor nodes connected through a multihop network. Scheduling of tasks in such a system involves scheduling of dynamically arriving tasks within a node (local scheduling), migration of tasks across the network (global scheduling) if {{it is not possible to}} schedule them locally, and (iii) scheduling of messages on communication links (message scheduling) to support inter-task communication and task migration. Most of the existing schemes on scheduling in distributed real-time systems have addressed each of these issues in isolation. Moreover, these schemes consider the load on the processors at a node as the basis to migrate tasks from a heavily <b>loaded</b> node (<b>sender)</b> to a lightly loaded node (receiver). We believe that the identification of a receiver node should be based not only on the load on its processors, but also on the availability of a path, which satisfies the bandwidth required for the task migration, from the sender to that receiver. In this paper, we present an integrated framework for scheduling dynamically arriving real-time tasks in distributed real-time systems. Our proposal consists of (i) algorithms for global scheduling and (ii) interactions among the three schedulers in a way to improve the schedulability of the system. The effectiveness of the proposed framework has been evaluated through [...] ...|$|R
40|$|Information seeking in {{personal}} information collections such as email {{is often a}} solitary activity performed by the owner– user alone. However, information objects such as email that are the products of collaboration are inherently social objects. In this paper, we describe a technique, using email as an example, that exploits the actions of one’s close social network to assist in one’s own information seeking tasks. We note that tagging of email messages {{is an example of}} human computation, and then describe a system that enables the tags applied by one user to be shared with other recipients of the same email, thereby amortizing the cost of tagging and email management across all stakeholders. We discuss how such shared tagging contributes to common ground among the participants of a collaborative group, and may be performed with minimal global cognitive <b>load</b> by the <b>sender</b> of the message. We provide scenarios of collaborative information seeking tasks that include sub-tasks such as collaborative information management and synchronous re-finding of previously-encountered information. We wish to examine if such system support for semi-automated tagging reduces email overload for all users, and its impact on collaborative information seeking practices...|$|R
40|$|Tung, Tak Fu. Thesis (M. Phil.) [...] Chinese University of Hong Kong, 2002. Includes bibliographical {{references}} (leaves 66 - 68). Abstracts in English and Chinese. Chapter 1 [...] - Introduction to Multi-path Streaming and Dynamic End-point Adaptation [...] - p. 1 Chapter 1. 1 [...] - Multi-path Streaming [...] - p. 2 Chapter 1. 2 [...] - Dynamic End-point Adaptation [...] - p. 4 Chapter 2 [...] - Related Work [...] - p. 6 Chapter 3 [...] - Path Loss Model [...] - p. 10 Chapter 3. 1 [...] - Bursty Loss [...] - p. 10 Chapter 3. 2 [...] - Gilbert Model [...] - p. 11 Chapter 3. 2. 1 [...] - Discrete-time Gilbert Model [...] - p. 11 Chapter 3. 2. 2 [...] - Continuous-time Gilbert Model [...] - p. 12 Chapter 4 [...] - Loss RecoveryChapter 4. 1 [...] - Automatic Repeat Request (ARQ) [...] - p. 17 Chapter 4. 2 [...] - Forward Error Correction (FEC) [...] - p. 18 Chapter 5 [...] - Connection Adaptation [...] - p. 23 Chapter 5. 1 [...] - Path Quality [...] - p. 23 Chapter 5. 2 [...] - Effect of Shared Congestion Point [...] - p. 24 Chapter 5. 2. 1 [...] - Point-of-Congestion Detection [...] - p. 25 Chapter 5. 3 [...] - Load Distribution [...] - p. 27 Chapter 6 [...] - Analytical Evaluation [...] - p. 28 Chapter 6. 1 [...] - Performance Analysis of SP vs. Multi-path Streaming (without FEC) [...] - p. 29 Chapter 6. 2 [...] - Performance Analysis of SP vs. Multi-path Streaming (with FEC) [...] - p. 36 Chapter 7 [...] - Experiments and Simulations [...] - p. 42 Chapter 7. 1 [...] - Effect of Correlated Bursty Losses on Video Quality [...] - p. 42 Chapter 7. 2 [...] - Analytical Model Based Evaluation [...] - p. 44 Chapter 7. 2. 1 [...] - Data Loss Rate [...] - p. 44 Chapter 7. 2. 2 [...] - Data Loss Rate as {{a function}} of FEC parameters [...] - p. 46 Chapter 7. 2. 3 [...] - Conditional Error Burst Length [...] - p. 48 Chapter 7. 2. 4 [...] - Lag- 1 Autocorrelation [...] - p. 49 Chapter 7. 2. 5 [...] - Effects of <b>Load</b> Distribution Among <b>Senders</b> [...] - p. 50 Chapter 7. 2. 6 [...] - Sensitivity Analysis [...] - p. 51 Chapter 7. 2. 7 [...] - Effects of Shared Points of Congestion on Various Perfor- mance Metrics [...] - p. 53 Chapter 7. 3 [...] - Simulation Model Based Evaluation [...] - p. 55 Chapter 7. 3. 1 [...] - Simulation Setup [...] - p. 55 Chapter 7. 3. 2 [...] - Data Loss Rate [...] - p. 57 Chapter 7. 3. 3 [...] - Data Loss Rate {{as a function}} of FEC parameters [...] - p. 58 Chapter 7. 3. 4 [...] - Conditional Error Burst Length [...] - p. 59 Chapter 7. 3. 5 [...] - Lag- 1 Autocorrelation [...] - p. 60 Chapter 7. 3. 6 [...] - Effects of <b>Load</b> Distribution among <b>Senders</b> [...] - p. 61 Chapter 7. 3. 7 [...] - Sensitivity Analysis [...] - p. 62 Chapter 7. 3. 8 [...] - Effects of Shared Points of Congestion on Various Perfor- mance Metrics [...] - p. 63 Chapter 8 [...] - Conclusion [...] - p. 6...|$|R

