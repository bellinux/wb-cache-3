529|1008|Public
5|$|Donecle uses a {{swarm of}} drones {{equipped}} with laser sensors and micro-cameras. The algorithms for automatic detection of defects, trained on existing images database with a machine <b>learning</b> <b>software,</b> are able to identify various elements: texture irregularities, pitot probes, rivets, openings, text, defects, corrosion, oil stains. A damage report is sent on the operator's touch pad with each area of interest and the proposed classification with a probability percentage. After reviewing the images, the verdict is pronounced by a qualified inspector.|$|E
25|$|Weka: A {{suite of}} machine <b>learning</b> <b>software</b> {{applications}} {{written in the}} Java programming language.|$|E
25|$|There {{is a lot}} of {{language}} <b>learning</b> <b>software</b> using the multimedia capabilities of computers.|$|E
50|$|Software {{development}} is a continuous learning process based on iterations when writing code. Software design is a problem solving process involving the developers writing the code {{and what they have}} <b>learned.</b> <b>Software</b> value is measured in fitness for use and not in conformance to requirements.|$|R
40|$|Abstract — We {{describe}} use of partially distributed collaborative {{assignments in}} a Usability Engineering course {{with respect to}} (1) learning activity management and (2) technology support. Keywords- collaborative learning, case-based <b>learning,</b> collaborative <b>software,</b> <b>learning</b> technoloy, usability engineering I...|$|R
40|$|Collaborative {{learning}} integrates {{individual and}} collective learning with practical activity. The great demand for <b>learning</b> in <b>software</b> development practice makes collaborative learning attractive. However, social and technical conditions complicate software organizations’ effort to improve collaborative learning capabilities. In particular, specialization through social structures and technical systems restrict software practitioners’ opportunities for collaborative <b>learning.</b> Hence, the <b>software</b> organization’s <b>learning</b> potential is not fully utilized which in turn may constitute a bottleneck to innovation and a threat to competiveness. Existing research {{from a range of}} domains provides insights into collaborative learning. This suggests that collaborative <b>learning</b> in <b>software</b> development should be subjected to integrative investigations. Therefore, the dissertation presents an open-ended, integrative exploration of collaborative learning. The main objective is to increase understanding of how collaborative learning capabilities can be improved in software development practice. Two research questions guided the investigation: What are the characteristics of collaborative <b>learning</b> in <b>software</b> development? What are the prerequisites for collaborative <b>learning</b> in <b>software</b> development? Using a literature study covering relevant fields such as software process improvement, team research, organizational learning, organization science and socio-technical research, I develop a conceptual framework that explains how collaborative <b>learning</b> in <b>software</b> development can be usefully seen as a variegated phenomenon with a number of core elements aligned within the pillars characteristics, prerequisites and considerations for improvement. Subsequently, I discuss how empirical results from three investigations of collaboration and <b>learning</b> within Norwegian <b>software</b> organizations elaborate the framework. The discussion extends the framework with empirical findings to provide a preliminary conceptual framework for collaborative <b>learning</b> in <b>software</b> development which includes five characteristics; (1) collective, situated performance, (2) purposeful, (3) cooperative behavior, (4) coordinated action, and (5) empowerment. There are five identified prerequisites; (1) participation, (2) opportunities for learning, (3) knowledge diversity, (4) knowledge redundancy, and (5) proximity; physical or virtual. At last, there are three identified considerations for improvement; (1) a re-orientation of governing values, (2) creating and exploring opportunities for collaborative learning, and (3) socio-technical reconciliation. The preliminary conceptual framework for collaborative <b>learning</b> in <b>software</b> development is a contribution to existing literature on practice-based learning and offers a comprehensive theoretical platform within which collaborative <b>learning</b> in <b>software</b> development can be understood and improved. The concluding arguments discuss the contributions, the limitations of the research and then discuss implications for further research and practice. PhD i informasjonsteknologiPhD in Information Technolog...|$|R
25|$|Orange: A component-based {{data mining}} and machine <b>learning</b> <b>software</b> suite {{written in the}} Python language.|$|E
25|$|Computer Assisted Language Learning (CALL) is {{a method}} that {{includes}} a combination of methods and techniques using the resources available on the internet, {{as well as a}} variety of language <b>learning</b> <b>software.</b>|$|E
25|$|Pittinsky founded Blackboard Inc, {{originally}} Blackboard LLC, with Chasen in 1997. At {{the time}} of the company’s foundation, it operated as a consulting group to the IMS e-Learning standards project, where Pittinsky was an early member. In 1998, Blackboard LLC merged with CourseInfo LLC, an online <b>learning</b> <b>software</b> company developed by Cornell University students Stephen Gilfus and Daniel Cane, to create Blackboard Inc. CourseInfo had already developed a product and found a market fit by selling to 15 premier institutions. The company renamed CourseInfo's Interactive Learnign Network Product into Blackboard CourseInfo.|$|E
50|$|Developing {{software}} for DX 200 platform is rather straightforward for any well educated software developer. TNSDL language, which plays {{vital role in}} producing asynchronously communicating fault-tolerant software modules, is easy to <b>learn.</b> <b>Software</b> architecture of DX 200 is a fine combination of highly efficient traditional solutions as well as modern actor model based, highly concurrent design.|$|R
40|$|The {{main focus}} of this {{dissertation}} is on self-regulated learning processes while using e-Learning applications considering as example apprentices. The thesis consists of five parts: introduction into {{the use of interactive}} media in vocational training, principles of self-regulated learning and of multimedia didactics and psychology, survey (expertise) and evaluation of a specific multimedia <b>learn</b> <b>software</b> for self-regulated <b>learning</b> for apprentices in the trade of electricians and concluding modification concepts for the evaluated <b>learn</b> <b>software</b> in regard to integration of effective functions to support self-regulated learning with this program. One of the main focuses in the theoretical part (part I) is the reflection on learn psychological conditions for effective self-regulated learning. On the one hand, the necessary competences and learn strategies for the learner were analyzed. On the other hand, didactical methods for encouragement and training of self-regulated learning were discussed. Furthermore, the fundamental instructional, psychological and multimedia presentation techniques and methods for e-learning applications were developed. A particular emphasis was put on pedagogical agents which are able to support learners during their self-regulated learning processes. In {{the second part of the}} thesis a survey of the <b>learn</b> <b>software</b> Elektrische Schutzmassnahmen(electrical precaution) was done on the basis of the instructional, psychological and multimedia presentation criteria worked out in part 1. The survey was carried out by the author of the dissertation. The <b>learn</b> <b>software</b> was designed for self-regulated learning for apprentices in the trade of electricians. The results of the survey are presented in a chart showing the positive and negative effects. In addition to that, an extensive examination and discussion of the media presentation techniques, their functions and didactic is given. The third step is an evaluation of the learn program Elektrische Schutzmassnahmen(electrical precaution). About 190 apprentices and 16 instructors in 20 training posts were interviewed. On the one hand was the insight, that the multimedia program has made the learn process about the very abstract rules and norms of the electrician preventive measure much more attractive and interesting. on the other hand has been detected that the <b>learn</b> <b>software</b> show lot of lacks for effective self regulated learning. In the fourth part have been worked out concrete concepts for the modification of the <b>learn</b> <b>software</b> Elektrische Schutzmassnahmen (electrical precaution). The concepts are based on the theoretical insights about the self regulated learning, about multimedia didactics as soon as on the outcomes and conclusions of the expertise and of the evaluation. The improvement is based on modified and additional functions for support the self regulated learning process with the program. An important part of the modification was the transformation of the existing guide character to the pedagogical agent with coach and team mate functionality. For the implementation have been prepared concrete technical solutions and screenplays. The main conclusions of the work: an effective self regulated learning had to be train and to be use consciously; in the vocational training for the apprentice there is scarcely introduction to the topic and the competences of self regulated learning; pedagogical agents could well support learner by more effective self regulated learning processes; e-learning applications should contain supporting functions for self regulated learning...|$|R
50|$|Lessons <b>Learned</b> in <b>Software</b> Testing, Cem Kaner, James Bach, Bret Pettichord Wiley Computer Publishing, 2002.|$|R
2500|$|Santana is {{featured}} as a playable {{character in the}} music video game Guitar Hero 5. A live recording of his song [...] "No One to Depend On" [...] is included in game, which was released on September 1, 2009. More recently, in 2011, three Santana songs were offered as downloadable content (DLC) for guitar <b>learning</b> <b>software</b> Rocksmith: [...] "Oye Como Va", [...] "Smooth", and [...] "Black Magic Woman/Gypsy Queen".|$|E
2500|$|Self-learning {{performance}} management: the use {{of technology}} to help automate the performance management of information technology systems. This is done through {{the use of}} software that employs applied mathematics (such as statistics, time series analysis, and forecasting), automated baselining, neural networks, pattern recognition, and other similar technologies. The intent is to automate manual processes and [...] "fixed baseline" [...] approaches used to determine when IT systems are operating out of normal ranges, which would indicate potential system problems. Self-learning performance management is complementary to the disciplines of systems management, network performance management, and application performance management, and is sometimes referred to by IT analyst firms like Gartner by the term behavior learning technology or behavior <b>learning</b> <b>software.</b>|$|E
5000|$|Orange, an {{open-source}} {{data mining}} and machine <b>learning</b> <b>software</b> suite.|$|E
40|$|A {{questionnaire}} {{for junior}} high schools is carried out to know the actual situation for the learning of the school truant students and necessity of the <b>learning</b> support <b>software</b> of the curriculum, on development of the <b>learning</b> support <b>software.</b> <b>Learning</b> support <b>software</b> was requested from this result in many schools. The ability of comprehension or the expression such as Japanese or English {{and the ability of}} the logical thinking such as the mathematics are required. In addition, for the truant students, upbringings of the communicative competence or the social nature are demanded. It is the fact that a lot of truant students have the will to the learning. It is necessary to get ready to be able to cope for such the students quickly. More than 75 % teachers feel uneasy about a delay of the learning of the school refusal student. It is clear that support for learning delay / the stagnation is an important problem...|$|R
40|$|This {{paper will}} focus on <b>learning</b> SAS ® <b>software</b> on the Internet. Reviewing a number of Web sites, we will point out {{advantages}} and disadvantages of Internet-based learning. Web sites offer education in SAS/Base, SAS/Stat, SAS/Graph, SAS/Macro and more. Selected sites are designed to simplify the process of <b>learning</b> SAS <b>software.</b> Many content developers improve their sites content from year to year. Some now use graphical, animated (Power Point) presentations or more sophisticated techniques, such as movies. Detailed explanation and examination of selected sites will give us {{a better understanding of the}} current online environment for <b>learning</b> SAS <b>software.</b> This presentation will explore some choices to enhance effective online learning...|$|R
5000|$|Reduces {{training}} {{time to the}} specific time for <b>learning</b> the <b>software</b> solution which {{has been based on}} this platform [...]|$|R
5000|$|... #Subtitle level 2: LSI and controversies {{surrounding}} distance <b>learning</b> <b>software</b> ...|$|E
5000|$|FECOM Object <b>Learning</b> <b>Software</b> (OLS), {{industrial}} in-line hyperspectral feature processing ...|$|E
50|$|Artikulate - A {{language}} <b>learning</b> <b>software</b> {{that helps}} improving pronunciation skills.|$|E
30|$|In our review, we {{investigated}} the current state-of-the-art in four areas: <b>learning</b> objects, <b>software</b> engineering, total quality management, and innovative approaches.|$|R
40|$|Reuse {{of lessons}} <b>learned</b> from past <b>software</b> {{projects}} promotes good software development practices and prevents {{the repetition of}} mistakes. However, the lessons <b>learned</b> during a <b>software</b> project remain far too often isolated {{in the minds of}} the project participants. There is a need to systematically gain, store, disseminate, and apply them. This paper presents a method for integrated knowledge management of lessons <b>learned</b> in <b>software</b> engineering that covers all these aspects. It presents a technical infrastructure and an organizational infrastructure for knowledge management of lessons learned. The results were derived and validated using three application case studies...|$|R
5000|$|The company boasts 5 million {{software}} downloads annually. It supplies Smart <b>Learning</b> Suite <b>software</b> {{for use with}} its Smart Board and other hardware, including ...|$|R
50|$|This {{software}} is considered {{as much a}} game as a <b>learning</b> <b>software.</b>|$|E
5000|$|Serving {{cloud-based}} TPUs (tensor processing units) {{in order}} to develop machine <b>learning</b> <b>software</b> ...|$|E
5000|$|Airbnb {{develops}} {{open source}} machine <b>learning</b> <b>software</b> [...] "Aerosolve", written in Java and Scala.|$|E
40|$|This book {{integrates}} {{new ideas}} and topics from real time systems, embedded systems, and software engineering to give a complete picture of {{the whole process of}} developing software for real-time embedded applications. You will not only gain a thorough understanding of concepts related to microprocessors, interrupts, and system boot process, appreciating the importance of real-time modeling and scheduling, but you will also <b>learn</b> <b>software</b> engineering practices such as model documentation, model analysis, design patterns, and standard conformance. This book is split into four parts to help yo...|$|R
5000|$|CALO or [...] "Cognitive Assistant that <b>Learns</b> and Organizes": <b>software</b> ...|$|R
50|$|Amanda is a panda bear. Just {{as in the}} Imagine <b>Learning</b> English <b>software,</b> {{her role}} is to teach reading and {{listening}} comprehension. She reads each story in the episodes of Imagine Island.|$|R
50|$|There {{is a lot}} of {{language}} <b>learning</b> <b>software</b> using the multimedia capabilities of computers.|$|E
5000|$|The Language Lab is {{equipped}} with 61 computer systems loaded with self-language <b>learning</b> <b>software.</b>|$|E
5000|$|Technology and <b>Learning</b> <b>Software</b> Award of Excellence for {{the design}} of three {{software}} packages ...|$|E
5000|$|... #Subtitle level 2: Sakai {{collaboration}} and <b>learning</b> environment - <b>software</b> features ...|$|R
5000|$|Brandon Hall silver {{award for}} {{excellence}} in the Best Advance in Learning Management Technology category for {{the integration of the}} SilkRoad <b>learning</b> management <b>software</b> GreenLight® with the company's Point™ social talent management software.|$|R
5000|$|WebCT Vista is a {{teaching}} and <b>learning</b> enterprise <b>software</b> run and developed by Blackboard Inc. It is principally used by universities and other education institutions as classroom management software, {{and as a}} distance education service.|$|R
