59|16|Public
25|$|Rudimentary pre-boot GUI framework, {{including}} {{support for}} image drawing, mouse cursor and AppleEvent. This {{is used by}} FileVault 2 to present the <b>login</b> <b>screen</b> before loading the operating system.|$|E
25|$|A {{lock screen}} is a {{computer}} user interface element used by various operating systems. They regulate immediate access to a device by requiring that the user perform a certain action {{in order to receive}} access, such as entering a password, using a certain button combination, or performing a certain gesture using a device's touchscreen. While most lock functions on PC operating systems only utilize a <b>login</b> <b>screen,</b> lock screens on mobile devices often provide more functionality beyond unlocking the phone: such as notifications for emails and text messages, a date and time display, or shortcuts to certain applications.|$|E
25|$|In early 2006, PayPal {{introduced}} an optional security key {{as an additional}} precaution against fraud. A user account tied to a security key has a modified login process. The account holder enters his or her login ID and password as normal, but is then prompted to enter a six-digit code provided by a credit card sized hardware security key or a text message sent to the account holder's mobile phone. For convenience, the user may append the code generated by the hardware key {{to his or her}} password in the <b>login</b> <b>screen.</b> This way he or she is not prompted for it on another page. This method is required for some services, such as when using PayPal through the eBay application on iPhone.|$|E
5000|$|... #Caption: A {{screenshot}} of one {{of numerous}} <b>login</b> <b>screens</b> displayed by BatMUD ...|$|R
5000|$|... #Caption: A {{screenshot}} {{of one of}} {{the several}} <b>login</b> <b>screens</b> Xyllomer displays ...|$|R
5000|$|... #Caption: A {{screenshot}} {{of one of}} {{the many}} different initial <b>login</b> <b>screens</b> for 3K, as seen in MUSHclient ...|$|R
5000|$|... #Caption: TreasuryDirect <b>login</b> <b>screen,</b> showing virtual {{keyboard}} ...|$|E
50|$|Ubuntu 12.10 can login to VMware View {{desktops}} {{directly from}} the <b>login</b> <b>screen.</b>|$|E
5000|$|... #Caption: A {{screenshot}} of Costello <b>login</b> <b>screen</b> {{as seen in}} the Java applet client ...|$|E
5000|$|... #Caption: One {{of several}} <b>login</b> <b>screens</b> that Lost Souls displays, this one {{depicting}} a chaotic plane called the Exoma ...|$|R
50|$|Almost {{all major}} {{releases}} have {{been accompanied by}} new boot-up and <b>login</b> <b>screens,</b> along with some changes in icon sets, and login sounds.|$|R
50|$|To use browser extensions, {{you must}} have {{administrative}} rights on the computer you're using. This has been an issue with users on a PC assigned by a workplace without admin rights. To address this issue, 1Password offers a family plan for a monthly subscription fee that allows web access to your usernames and passwords which can be copied and pasted into <b>login</b> <b>screens.</b>|$|R
50|$|The World of Warcraft: Cataclysm {{cinematic}} {{trailer and}} <b>login</b> <b>screen</b> were also {{added to the}} game.|$|E
5000|$|Xyllomer {{supports}} a [...] command at its initial <b>login</b> <b>screen</b> to help new players orient themselves.|$|E
50|$|It uses a Window Maker-style {{interface}} {{to present}} a graphical <b>login</b> <b>screen.</b> It uses the WINGs widget toolkit.|$|E
50|$|Eighteen-year-old Anthony Allen had {{programmed}} {{his computer}} to wardial phone numbers {{to determine which}} were simply voice lines and which had modems attached to them. Some of the numbers he dialed, and subsequently disconnected from, included computers owned by Southwestern Bell. These were numbers which {{were thought to be}} known only to Bell employees and their associates. However, although Allen succeeded in identifying numbers with attached modems, no evidence was provided that he attempted to make any attempt to get past the system's <b>login</b> <b>screens</b> which required a username and password.|$|R
50|$|Typing case-sensitive {{passwords}} {{that are}} not displayed verbatim on the screen may cause mistakes when Caps Lock is on. Help guides, tech support materials, and sometimes the interface itself may include advice on checking Caps Lock before typing a password. In Windows <b>login</b> <b>screens,</b> a warning that Caps Lock is on is shown in a balloon near the field. In Mac OS X, when Caps Lock is on, a Caps Lock symbol (â‡ª) is displayed inside a password field. Operating systems may also provide audible notifications when Caps Lock, Num lock, or Scroll lock buttons are toggled.|$|R
5000|$|... #Caption: The <b>login</b> and sign-up <b>screen</b> for the Instagram app on the iPhone as of April 2016 ...|$|R
5000|$|KDM (part of KDE) {{allows the}} user to {{graphically}} select a window manager or desktop environment in the <b>login</b> <b>screen</b> ...|$|E
50|$|In 2004, Xyllomer <b>login</b> <b>screen</b> {{was quoted}} {{as an example of}} civic-minded {{warnings}} issued to players regarding the time-consuming nature of MUDs.|$|E
50|$|A display manager {{presents}} the user with a <b>login</b> <b>screen.</b> A session starts when a user successfully enters a valid combination of username and password.|$|E
40|$|Mobile {{application}} spoofing is {{an attack}} where a malicious mobile application mimics the visual appearance of another one. If such an attack is successful, the integrity of what the user sees {{as well as the}} confidentiality of what she in-puts into the system can be violated by the adversary. A common example of mobile application spoofing is a phish-ing attack where the adversary tricks the user into revealing her password to a malicious application that resembles the legitimate one. In this work, we propose a novel approach for addressing mobile application spoofing attacks by leveraging the visual similarity of application screens. We use deception rate as a novel metric for measuring how many users would confuse a spoofing application for the genuine one. We conducted a large-scale online study where participants evaluated spoof-ing samples of popular mobile applications. We used the study results to design and implement a prototype spoof-ing detection system, tailored to the estimation of deception rate for mobile application <b>login</b> <b>screens.</b> 1...|$|R
5000|$|On April 7, each of {{the games}} in the Potato Sack {{received}} a second major update. Players found that by completing certain tasks in the game, they would be presented with <b>login</b> <b>screens</b> for the fictional Aperture Science corporation within the Steam interface. Other tasks and clues led to passwords {{that could be used}} to log into these Aperture Science screens. These provided players with compressed archives of pictures that consisted of Portal 2 artwork, including photographs from around Seattle (where Valve is based) embedded in their alpha channels. Each archive included a portion of a larger archive that was password-protected; the password was unveiled using the glyphs, cyphers, and letters from the first update. The larger archive gave further photographs of the Seattle area. When the locations of these points were mapped and connected per the puzzle's instructions, the map showed the word [...] "prelude". Furthermore, players that reached and logged into these screens received a potato icon for each accessed screen on their Steam profile.|$|R
40|$|Approved {{for public}} release, {{distribution}} is unlimitedModern intrusion detection systems have become highly reliable in identifying a malicious user {{on a computer}} system. Their limitations, though, are increasing {{the need for an}} intelligent response to an intrusion. In contrast, intelligent software decoys provide autonomous software-based responses to identified intrusions. In this thesis, we explore conducting military deception, focusing on the use of software-driven simulations to respond to the actions of intruders. In particular, this thesis focuses on a model of a simple deceptive response that is intended to protect a search-type program from a buffer-overflow attack. During our study, we found that after identifying an attack attempt, simulating system saturation with processing delays worked well to deceive a prospective attacker. We also experimented with providing confusing reactions to an identified attack attempt, such as simulated network <b>login</b> <b>screens</b> and fake root-shells. The results were successful, simple reactions to intrusions that mimicked intended system interaction, and they proved to be adequate at implementing the deception principles we studied. Major, United States Marine Corp...|$|R
5000|$|Rudimentary pre-boot GUI framework, {{including}} {{support for}} image drawing, mouse cursor and AppleEvent. This {{is used by}} FileVault 2 to present the <b>login</b> <b>screen</b> before loading the operating system.|$|E
5000|$|A captive portal / <b>login</b> <b>screen</b> / {{splash page}} that users are {{redirected}} to for authentication and/or payment. The captive portal / splash page sometimes includes the social login buttons.|$|E
50|$|Only {{the user}} {{on the first}} monitor has the use of vt {{consoles}} and can use ++x to select them. The other users have a GDM <b>login</b> <b>screen</b> and can use xorg-server normally, but have no vt's.|$|E
5|$|The first update {{was tied}} with April Fools' Day, with the {{addition}} of potatoes and gibberish sentences being in line with the pranks one normally sees on that day. Throughout the ARG, the players were monitored by the developers through the Internet Relay Chat, forums, and web sites that were being used to coordinate the solving effort. This allowed, for example, Two Tribes to prepare for Jake_R's visit, and the integration of a screenshot of the chat log into one of the puzzles. In another example, another chat room user, following a red herring, visited a physical location near the California studio for Team Meat; Edmund McMillen was able to arrange to meet the user and give him a signed copy of Super Meat Boy. Monitoring of the players enabled the developers to provide hints and clues for puzzles that players were struggling with as to allow the ARG to progress in a timely manner. While many puzzles of the ARG included cross-game cluessuch as finding the password for one of the Aperture Science <b>login</b> <b>screens</b> from another gameNeuse felt they could have increased the cross-game complexity of the puzzles if they had more time to plan it out. The developers were aided by the agility of Valve in its participation. During the second phase, one of the developers asked if Newell would become involved in the ARG. Newell then fed the image with the encrypted message to media outlets. Valve also placed hidden messages in promotional videos for Portal 2 which helped to point the ARG players in specific directions, including calling some of the players out by name.|$|R
50|$|Between the December {{meeting and}} second {{gathering}} in March 2011, {{prior to the}} ARG's launch, there was no direct verbal communication between Valve or the developers. Instead, the independent developers spent time, using a shared wiki provided by Valve, to plan out and coordinate the game. They also had to develop the new content for their games, which in most cases was work in addition to existing projects that they were presently undertaking. Others {{had to go back}} to older programming code and re-acquaint themselves with it before undertaking the new additions for the ARG. Valve's Jeep Barnett helped to coordinate the large effort. The second visit to Valve in March 2011 was to affirm the plans for the launch of the ARG. The first update was tied with April Fools' Day, with the addition of potatoes and gibberish sentences being in line with the pranks one normally sees on that day. Throughout the ARG, the players were monitored by the developers through the Internet Relay Chat, forums, and web sites that were being used to coordinate the solving effort. This allowed, for example, Two Tribes to prepare for Jake_R's visit, and the integration of a screenshot of the chat log into one of the puzzles. In another example, another chat room user, following a red herring, visited a physical location near the California studio for Team Meat; Edmund McMillen was able to arrange to meet the user and give him a signed copy of Super Meat Boy. Monitoring of the players enabled the developers to provide hints and clues for puzzles that players were struggling with as to allow the ARG to progress in a timely manner. While many puzzles of the ARG included cross-game clues - such as finding the password for one of the Aperture Science <b>login</b> <b>screens</b> from another game - Neuse felt they could have increased the cross-game complexity of the puzzles if they had more time to plan it out. The developers were aided by the agility of Valve in its participation. During the second phase, one of the developers asked if Newell would become involved in the ARG. Newell then fed the image with the encrypted message to media outlets. Valve also placed hidden messages in promotional videos for Portal 2 which helped to point the ARG players in specific directions, including calling some of the players out by name.|$|R
50|$|IMPAX 6 {{features}} {{both local}} and remote access.The client can connect to the PACS server from home or office locations. This is accomplished via thin and fat client technology. The latest version is Impax 6.5, which features a stethoscope <b>login</b> <b>screen.</b>|$|E
50|$|Currently SOWN accepts any {{academic}} {{from the}} University of Southampton. This includes staff and students. When connecting to a node, they are confronted (once attempting to access a web page) with a <b>login</b> <b>screen.</b> They can login using their University of Southampton credentials.|$|E
50|$|A display manager can run on {{the same}} {{computer}} where the user sitsâ€”starting one or more X servers, displaying the <b>login</b> <b>screen</b> {{at the beginning and}} (optionally) every time the user logs outâ€”or on a remote one, working according to the XDMCP protocol.|$|E
50|$|Scriptcase is Compatible with RTL (Right to Left) writing, support {{right to}} left writing {{prevalent}} on Arabic languages. It is also possible to create infrastructure such as menus, <b>login</b> <b>screen</b> and security system with authentication, create tabs to group forms or queries to be executed on the same page.|$|E
50|$|The {{network load}} {{balancing}} service requires {{for all the}} machines to have the correct local time. Ensure the Windows Time Service is properly configured on all hosts to keep clocks synchronized. Unsynchronized times will cause a network <b>login</b> <b>screen</b> to pop up which doesn't accept valid login credentials.|$|E
50|$|When Check Point GO is {{inserted}} into the USB port of any PC, the user is presented with a <b>login</b> <b>screen.</b> Upon successful login, a new explorer.exe instance is started in the Check Point GO Secure Workspace. All subsequent processes are started as child processes of this new explorer.|$|E
50|$|Rubicon brought major updates {{and changes}} to core game elements, the {{certificates}} system was overhauled {{along with the}} player <b>login</b> <b>screen.</b> New features included the addition of player owned high-sec customs offices, ghost sites, new hacking mechanics, Twitch streaming. The update is also the first steps towards colonisation, as stated in CCP Seagull's vision.|$|E
