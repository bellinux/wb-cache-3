0|1521|Public
5000|$|The Murray code also {{introduced}} {{what became known}} as [...] "format effectors" [...] or [...] "control characters" [...] the CR (Carriage Return) and LF (<b>Line</b> <b>Feed)</b> <b>codes.</b> A few of Baudot's codes moved to the positions where they have stayed ever since: the NULL or BLANK and the DEL code. NULL/BLANK was used as an idle code for when no messages were being sent, but the same code was used to encode the space separation between words. Sequences of DEL codes (fully punched columns) were used at start or end of messages or between them, allowing easy separation of distinct messages (BELL codes could be inserted in those sequences to signal to the remote operator that a new message was coming or that transmission of a message was terminated).|$|R
5000|$|During 1901 Baudot's {{code was}} {{modified}} by Donald Murray (1865-1945), prompted by his {{development of a}} typewriter-like keyboard. The Murray system employed an intermediate step, a keyboard perforator, which allowed an operator to punch a paper tape, and a tape transmitter for sending the message from the punched tape. At {{the receiving end of}} the line, a printing mechanism would print on a paper tape, and/or a reperforator could be used to make a perforated copy of the message. As there was no longer a direct correlation between the operator's hand movement and the bits transmitted, there was no concern about arranging the code to minimize operator fatigue, and instead Murray designed the code to minimize wear on the machinery, assigning the code combinations with the fewest punched holes to the most frequently used characters. The Murray code also introduced what became known as [...] "format effectors" [...] or [...] "control characters" [...] - the CR (Carriage Return) and LF (<b>Line</b> <b>Feed)</b> <b>codes.</b> A few of Baudot's codes moved to the positions where they have stayed ever since: the NULL or BLANK and the DEL code. NULL/BLANK was used as an idle code for when no messages were being sent.|$|R
50|$|RTTY {{uses the}} ITA2 (Baudot code) {{character}} code. ITA2 is a five bit code with 32 possible code points. Four code points {{are used for}} null (BLANK), space (SPACE), carriage return (CR), and <b>line</b> <b>feed</b> (LF). Two <b>code</b> points are used for a letter shift (LTRS) or a figure shift (FIGS). The remaining 26 code points are used for characters in the letters and figures sets. Consequently, ITA2 can represent 52 (2*26) additional characters.|$|R
50|$|Text was {{encoded in}} several ways. The {{earliest}} standard character encoding was Baudot, which {{dates back to}} the nineteenth century and had five holes. The Baudot code was never used in teleprinters. Instead, modifications such as the Murray code (which added carriage return and <b>line</b> <b>feed),</b> Western Union <b>code,</b> International Telegraph Alphabet No. 2 (ITA 2), and American Teletypewriter code (USTTY), were used. Other standards, such as Teletypesetter (TTS), FIELDATA and Flexowriter, had six holes. In the early 1960s, the American Standards Association led a project to develop a universal code for data processing, which became known as ASCII. This seven-level code was adopted by some teleprinter users, including AT&T (Teletype). Others, such as Telex, stayed with the earlier codes.|$|R
25|$|Construction {{began in}} mid-1960, with the {{official}} opening on November 1, 1963. As the primary dish is spherical, its focus is along a line rather than at one point, as {{would be the case}} for a parabolic reflector. As a result, complex <b>line</b> <b>feeds</b> were implemented to carry out observations. Each <b>line</b> <b>feed</b> covered a narrow frequency band: 2–5% of the center frequency of the band. A limited number of <b>line</b> <b>feeds</b> could be used at any one time, limiting the telescope's flexibility.|$|R
40|$|Nowadays, {{assembly}} {{systems are}} used for the assembly of an increasing amount of models, which are often mass-customized to meet customers’ demands. This results in a rising number of parts used for assembly and, consequently, space scarcity at the line. There-fore, parts must not only be fed to the line cost-efficiently, but also meet space constraints (Limère et al., 2015). The assembly <b>line</b> <b>feeding</b> problem (ALFP) deals with the assignment of parts to <b>line</b> <b>feeding</b> policies {{in order to reduce}} costs and obtain a feasible solution. Within this paper, we examine all distinct <b>line</b> <b>feeding</b> policies at the same time, namely line stocking, kanban, sequencing and kitting (stationary and traveling kits). There is, {{to the best of our}} knowledge, no research conducted, including more than three <b>line</b> <b>feeding</b> policies in a single model (cf. Sali and Sahin, 2016). Furthermore, we assume space at the border of line (BoL) being variable. For this reason, space is not constrained per individual station, but we assume one overall space constraint for the entire line (Hua and Johnson, 2010). The main focus of this work is on accurately modeling the problem. This includes a rep-resentation of all <b>line</b> <b>feeding</b> processes, being storage, preparation, transportation, line side presentation and usage. By incorporating the variable space constraints at the BoL, we pro-vide a decision model reducing the overall costs for <b>line</b> <b>feeding</b> in assembly systems, since rigid space constraints at the BoL usually lead to more expensive <b>line</b> <b>feeding</b> policies. In contrast, variable space constraints enable balancing unequal space usage of different sta-tions, allowing cheaper <b>line</b> <b>feeding</b> policies to be selected. Some preliminary results on the cost impact of variable versus fixed space constraints will be discussed...|$|R
5000|$|... 0x0A, Hexadecimal octet {{corresponding}} to ASCII <b>line</b> <b>feed</b> control character; see Newline ...|$|R
5000|$|... #Caption: Fuel <b>line</b> <b>feeding</b> the {{auxiliary}} power unit of an Airbus A340.|$|R
5000|$|The {{carriage}} return and <b>line</b> <b>feed</b> functions were split for practical reasons: ...|$|R
50|$|As {{early as}} 1901, Baudot code {{contained}} separate carriage return and <b>line</b> <b>feed</b> characters.|$|R
5000|$|All {{whitespace}} {{in character}} content is retained (excluding characters removed during <b>line</b> <b>feed</b> normalization) ...|$|R
2500|$|On September 21, 2017, {{high winds}} {{associated}} with Hurricane Maria caused the 430 MHz <b>line</b> <b>feed</b> to break and fall onto the primary dish, damaging about 30 out of 38,000 aluminum panels. [...] Most Arecibo observations {{do not use}} the <b>line</b> <b>feed</b> but instead rely on the feeds and receivers located in the dome. [...] Overall, the damage inflicted by Maria was minimal.|$|R
5000|$|... unix2dos (sometimes named todos or u2d) {{is a tool}} {{to convert}} line breaks in a text file from Unix format (<b>Line</b> <b>feed)</b> to DOS format (carriage return + <b>Line</b> <b>feed)</b> and vice versa. When invoked as unix2dos the program will convert a Unix text file to DOS format, when invoked as dos2unix it will convert a DOS text file to UNIX format.|$|R
2500|$|... (followed {{by a new}} line, in {{the form}} of a {{carriage}} return followed by a <b>line</b> <b>feed).</b>|$|R
5000|$|... 10 (<b>line</b> <b>feed,</b> , , [...] ), {{used as the}} end of {{line marker}} in most UNIX systems and variants.|$|R
5000|$|The RIS {{file format}} [...] - [...] two letters, two spaces and a hyphen [...] - [...] is a tagged format for expressing bibliographic citations. According to the specifications, the lines must {{end with the}} ASCII {{carriage}} return and <b>line</b> <b>feed</b> characters. Note {{that this is the}} convention on Microsoft Windows, while in other contemporary operating systems, particularly Unix, the end of line is typically marked by <b>line</b> <b>feed</b> only.|$|R
40|$|In practice, kitting, {{sequencing}} and downsizing {{are already}} {{found in a}} lot of production organizations. Nevertheless, considerable uncertainty still exists concerning {{the costs and benefits of}} these supply methods. The purpose of this research is to uncover the advantages and disadvantages of the different <b>line</b> <b>feeding</b> alternatives and quantify them. The complete flow of components, starting from the supplier to the supply at the final assembly line will be considered. Different methods of <b>line</b> <b>feeding</b> have an impact on material handling costs, operator efficiency, storage space requirement and flexibility. A cost model is developed that captures all these impacts and that quantifies the costs for different <b>line</b> <b>feeding</b> alternatives. This model is tested with data and some conclusions are drawn...|$|R
2500|$|U+0009 (Horizontal Tab), U+000A (<b>Line</b> <b>Feed),</b> U+000D (Carriage Return): {{these are}} the only C0 {{controls}} accepted in XML 1.0; ...|$|R
50|$|Note {{the absence}} of control characters, {{especially}} carriage return and <b>line</b> <b>feed.</b> These were encoded by the record structure.|$|R
5000|$|U+0009 (Horizontal Tab), U+000A (<b>Line</b> <b>Feed),</b> U+000D (Carriage Return): {{these are}} the only C0 {{controls}} accepted in XML 1.0; ...|$|R
5000|$|Many {{computer}} programs use the carriage return character, {{alone or with}} a <b>line</b> <b>feed,</b> to signal {{the end of a}} line of text, but other characters are also used for this function (see newline); others use it only for a paragraph break (a [...] "hard return"). Some standards which introduce their own representations for line and paragraph control (for example HTML) and many programming languages treat carriage return and <b>line</b> <b>feed</b> as whitespace.|$|R
50|$|It has a {{standard}} gauge railway <b>line</b> <b>feeding</b> bauxite from the mine at Sangarédi to the port. Population 88,222 (2008 est).|$|R
50|$|The station's metro <b>lines</b> <b>feed</b> {{into a large}} shed {{with direct}} rail {{connections}} to the adjacent Siemens train and tram factory.|$|R
5000|$|GET /dir/index.html HTTP/1.0 Host: localhost(followed {{by a new}} line, in {{the form}} of a {{carriage}} return followed by a <b>line</b> <b>feed).</b>|$|R
5000|$|The space bar, dash/underscore, index, {{backspace}} and <b>line</b> <b>feed</b> repeated when continually held down. This feature {{was referred}} to as [...] "Typamatic." ...|$|R
5000|$|Stereo capability, {{either by}} using two {{parallel}} ports or one port with switching using strobe (pin #1) and <b>line</b> <b>feed</b> (pin #14) signals.|$|R
50|$|The Green Line {{was five}} {{streetcar}} <b>lines</b> <b>feeding</b> into the Tremont Street Subway, named by their western terminals or the streets they ran along.|$|R
5000|$|... <b>line</b> <b>feed</b> (LF), {{also called}} [...] "newline" [...] - moving the cursor {{to the next}} {{on-screen}} line of text in a word processor document.|$|R
50|$|A {{typewriter}} or electromechanical printer {{can print}} characters on paper, and execute operations such as move the carriage {{back to the}} left margin of the same line (carriage return), advance to the same column of the next <b>line</b> (<b>line</b> <b>feed),</b> and so on. Commands to control non-printing operations were transmitted {{in exactly the same}} way as printable characters by sending control characters with defined functions (e.g., the <b>line</b> <b>feed</b> character forced the carriage to move to the same position on the next line) to teleprinters. In modern computing and communications a few control characters, such as carriage return and <b>line</b> <b>feed,</b> have retained their original functions (although they are often implemented in software rather than activating electromechanical mechanisms to move a physical printer carriage) but many others are no longer required and are used for other purposes.|$|R
2500|$|... <b>line</b> <b>feed</b> (LF), {{also called}} [...] "newline" [...] – [...] moving the cursor {{to the next}} {{on-screen}} line of text in a word processor document.|$|R
5000|$|To {{improve the}} {{keyboard}} for non-English-speakers, the symbol ↵ (U+21B5, HTML entity [...] ) {{was introduced to}} communicate the combined carriage return and <b>line</b> <b>feed</b> action.|$|R
25|$|As the headers only include {{printable}} ASCII {{characters and}} <b>line</b> <b>feeds,</b> an archive containing only text files therefore still {{appears to be}} a text file itself.|$|R
50|$|Actual <b>line</b> <b>feeds</b> in {{data items}} are encoded as a {{backslash}} {{followed by the}} letter n or N (the bytes 5C 6E or 5C 4E in UTF-8).|$|R
5000|$|... "Cylindrical, {{tapering}} at the anal end; finely white-dotted, {{with a lower}} lateral white <b>line.</b> <b>Feeds</b> on Capparis." [...] (Thwaites) Seems {{to prefer}} only Capparis zeylanica in Pune." ...|$|R
40|$|An {{experiment}} {{was conducted to}} evaluate potential diet segregation in <b>feed</b> <b>lines</b> by measuring coefficient of variation (CV) and mean salt concentration. The facility was a 1500 -head gestation barn with nine <b>feed</b> <b>lines,</b> transected by a central <b>feed</b> <b>line</b> that conveyed <b>feed</b> from one of two bulk bins. Quantab® chloride titrators were {{used to analyze the}} chloride concentration (salt) from samples collected at pre-determined <b>feed</b> <b>line</b> locations at various distances from the bulk bins. Thirty samples were collected from three <b>feed</b> <b>lines</b> (row 1, 5, and 9), ten samples were collected from drop boxes close to the central <b>feed</b> <b>line</b> (location 1), ten samples were collected from a central location within the row (location 2), and ten samples were collected from the furthest end of the <b>feed</b> <b>line</b> (location 3). Samples of approximately 50 g were collected directly from the feed drop. The sample collection procedure was repeated four times. After the first two sample collections, a bin agitator was added to the bulk bin. There was a <b>feed</b> <b>line</b> × distance (within the <b>feed</b> <b>line)</b> × agitator interaction (P > 0. 02) observed for CV. The addition of the bin agitator improved the CV in <b>feed</b> <b>line</b> 1 and 5, with no improvement observed in <b>feed</b> <b>line</b> 9. The CV observed before the addition of the agitator averaged 17. 6, 18. 6, and 14. 3 % for <b>feed</b> <b>lines</b> 1, 5, and 9, respectively, and the CV observed after the addition of the agitator averaged 13. 6, 16, and 14 % for <b>feed</b> <b>line</b> 1, 5, and 9 respectively. Within all <b>feed</b> <b>lines</b> (rows), distance CV was higher at locations 1 (17. 3 %) and 3 (17. 6 %), compared with CV at location 2 (15. 6 %) before the addition of the agitator, but was lower at locations 1 (14. 3 %) and 3 (13. 0 %), compared with CV at location 2 (15. 6 %) after the addition of the agitator. There was a mean-salt concentration effect (P< 0. 0001) observed for <b>feed</b> <b>line.</b> <b>Feed</b> <b>lines</b> 1 and 5 were similar in mean salt concentration, whereas <b>feed</b> <b>line</b> 9 consistently had the highest salt concentration. There was little to no feed segregation observed...|$|R
40|$|Abstract—In this paper, a {{bandwidth}} enhancement {{technique of}} asymmetrical slot antenna with two different excitation methods is presented. One method of excitation is the microstrip <b>line</b> <b>feed,</b> {{and the other}} is the coplanar waveguide feed. The rectangular slot excited by microstrip <b>line</b> <b>feed</b> gives an impedance bandwidth of 14. 76 % (|S 11 | < − 10 dB). When the rectangular slot is excited by a coplanar waveguide (CPW), it gives an impedance bandwidth of 26. 61 %. Both impedance and radiation characteristics of these antennas are studied. 1...|$|R
