353|201|Public
5|$|<b>Linear</b> <b>search</b> is {{a simple}} search {{algorithm}} that checks every record until it finds the target value. <b>Linear</b> <b>search</b> can be done on a linked list, which allows for faster insertion and deletion than an array. Binary search is faster than <b>linear</b> <b>search</b> for sorted arrays except if the array is short. If the array must first be sorted, that cost must be amortized over any searches. Sorting the array also enables efficient approximate matches and other operations.|$|E
25|$|The LZW {{algorithm}} {{requires a}} search of the table for each pixel. A <b>linear</b> <b>search</b> through up to 4096 addresses would make the coding slow. In practice the codes can be stored in order of numerical value; this allows each search to be done by a SAR (Successive Approximation Register, as used in some ADCs), with only 12 magnitude comparisons. For this efficiency an extra table is needed to convert between codes and actual memory addresses; the extra table upkeeping is needed only when a new code is stored which happens at much less than pixel rate.|$|E
25|$|The <b>linear</b> <b>search</b> {{problem was}} solved by Anatole Beck and Donald J. Newman (1970) as a two-person zero-sum game. Their minimax {{trajectory}} is {{to double the}} distance on each step and the optimal strategy {{is a mixture of}} trajectories that increase the distance by some fixed constant. This solution gives search strategies that are not sensitive to assumptions concerning the distribution of the target. Thus, it also presents an upper bound for a worst-case scenario. This solution was obtained in the framework of an online algorithm by Shmuel Gal, who also generalized this result to a set of concurrent rays. The best online competitive ratio for the search on the line is 9 but it can be reduced to 4.6 by using a randomized strategy. The online solution with a turn cost is given in.|$|E
40|$|This release {{drastically}} {{improves the}} run-time performance of simulations by: streamlining how recombination is performed replacing expensive <b>linear</b> <b>searches</b> after recombination with log-time searches minimizing the creation/allocation of containers used {{to store the}} intermediates of recombination events...|$|R
5000|$|... {{choice of}} {{algorithm}} - indexed, binary or <b>linear</b> (item-by-item) <b>search</b> ...|$|R
50|$|The {{method is}} useful for calculating the local minimum of a {{continuous}} but complex function, especially one without an underlying mathematical definition, {{because it is not}} necessary to take derivatives. The basic algorithm is simple; the complexity is in the <b>linear</b> <b>searches</b> along the search vectors, which can be achieved via Brent's method.|$|R
2500|$|Some {{approximate}} solution methods for the <b>linear</b> <b>search</b> problem ...|$|E
2500|$|In {{computational}} complexity theory, the <b>linear</b> <b>search</b> {{problem is}} an optimal search problem introduced by Richard E. Bellman. (independently considered by Anatole Beck [...] ).|$|E
2500|$|The <b>linear</b> <b>search</b> {{problem for}} a general {{probability}} distribution is unsolved. However, there exists a dynamic programming algorithm that produces a solution for any discrete distribution [...] and also an approximate solution, for any probability distribution, with any desired accuracy.|$|E
30|$|From Lemmas 3 – 6, we know that, if Φ _ 1 ^k≠ 0, then (d^k,λ^k) is the {{decreasing}} direction of Φ^k; if d^k 0 ≠ 0, then d^k is the {{decreasing direction}} of f^k. If Φ_ 1 ^k= 0 and d^k 0 = 0, then (x^k,μ^k) is a KKT point. We consider four cases for <b>linear</b> <b>searches.</b>|$|R
50|$|The {{simplest}} form {{of scene}} graph uses an array or linked list data structure, and displaying its shapes {{is simply a}} matter of linearly iterating the nodes one by one. Other common operations, such as checking to see which shape intersects the mouse pointer (e.g., in a GUI-based applications) are also done via <b>linear</b> <b>searches.</b> For small scene graphs, this tends to suffice.|$|R
40|$|The paper {{presents}} the successful {{application to the}} characterization of steered beam antennas using phase retrieval technique at millimetre wave and submillimetre wave bandwidth. The accuracy and the reliability, evaluated also by comparisons against experimental data with other approaches, rely on a proper definition of the <b>linear</b> <b>searching</b> subspace and on a reduction of the ill-conditioning, both obtained {{by means of an}} effective, non redundant, representation of either the unknowns or the (only) amplitude field data...|$|R
2500|$|Finding a {{specific}} element in a linked list, {{even if it}} is sorted, normally requires O(n) time (<b>linear</b> <b>search).</b> [...] This is one of the primary disadvantages of linked lists over other data structures. [...] In addition to the variants discussed above, below are two simple ways to improve search time.|$|E
2500|$|The {{efficiency}} of algorithms affects {{the amount of}} computer resources required for any given computing function {{and there are many}} efficiency trade-offs in writing programs. [...] Algorithm changes, such as switching from a slow (e.g. <b>linear)</b> <b>search</b> algorithm to a fast (e.g. hashed or indexed) search algorithm can reduce resource usage for a given task from substantial to close to zero. [...] In 2009, a study by a physicist at Harvard estimated that the average Google search released 7grams of carbon dioxide (CO₂). However, Google disputed this figure, arguing instead that a typical search produced only 0.2grams of CO₂.|$|E
2500|$|... "An {{immobile}} hider {{is located}} on the real line according to a known probability distribution. A searcher, whose maximal velocity is one, starts from the origin and wishes to discover the hider in minimal expected time. It is assumed that the searcher can change the direction of his motion without any loss of time. It is also assumed that the searcher cannot see the hider until he actually reaches {{the point at which the}} hider is located and the time elapsed until this moment is the duration of the game." [...] It is obvious that in order to find the hider the searcher has to go a distance x1 in one direction, return to the origin and go distance x2 in the other direction etc., (the length of the n-th step being denoted by xn), and to do it in an optimal way. (However, an optimal solution need not have a first step and could start with an infinite number of small 'oscillations'.) This problem is usually called the <b>linear</b> <b>search</b> problem and a search plan is called a trajectory. It has attracted much research, some of it quite recent.|$|E
40|$|We {{describe}} an efficient method {{of using a}} translating camera to detect and track independently translating objects and assess {{the likelihood of a}} collision. By analysing the underlying geometry it is shown that the tracking is reduced to two independent <b>linear</b> <b>searches</b> for a single feature in the image plane. Results are presented for both an off-line implementation and work towards a real time implementation. The method is completely automatic and shown to be accurate and robust. ...|$|R
30|$|As all {{constraints}} are in linear functions now, {{one can use}} the <b>linear</b> <b>searching</b> {{method to}} obtain the optimal solution of (10) with constraints (11) plus an offline searching method of CC. That is, in each step, search the optimal solution with every possible combination of the constraints, compare them, and only keep the best one. As the linear constraints, one can obtain the optimal solution within a much shorter time. Whereas the searching {{can be achieved by}} IBM Cplex (refer to IBM ILOG CPLEX Optimization Studio V 12.60 documents) or MATLAB-based linear programming (LP) [25].|$|R
40|$|The paper {{introduces}} mixed networks, a new {{framework for}} expressing and reasoning with probabilistic and deterministic information. The framework combines belief networks with constraint networks, defining the semantics and graphical representation. We also introduce the AND/OR search space for graphical models, {{and develop a}} new <b>linear</b> space <b>search</b> algorithm...|$|R
50|$|<b>Linear</b> <b>search</b> is {{a simple}} search {{algorithm}} that checks every record until it finds the target value. <b>Linear</b> <b>search</b> can be done on a linked list, which allows for faster insertion and deletion than an array. Binary search is faster than <b>linear</b> <b>search</b> for sorted arrays except if the array is short. If the array must first be sorted, that cost must be amortized over any searches. Sorting the array also enables efficient approximate matches and other operations.|$|E
5000|$|<b>Linear</b> <b>search</b> runs in {{at worst}} linear time and makes at most [...] comparisons, where [...] is {{the length of}} the list. If each element is equally likely to be searched, then <b>linear</b> <b>search</b> has an average case of [...] comparisons, but the average case can be {{affected}} if the search probabilities for each element vary. <b>Linear</b> <b>search</b> is rarely practical because other search algorithms and schemes, such as the binary search algorithm and hash tables, allow significantly faster searching for all but short lists.|$|E
50|$|In particular, {{when the}} list items are {{arranged}} in order of decreasing probability, and these probabilities are geometrically distributed, the cost of <b>linear</b> <b>search</b> is only O(1). If the table size n is large enough, <b>linear</b> <b>search</b> will be faster than binary search, whose cost is O(log n).|$|E
30|$|In this paper, we {{developed}} a nonmonotone filter QP-free infeasible method for minimizing a smooth optimization problem with inequality constraints. This proposed method {{is based on the}} solution of nonsmooth equations which are obtained by the multiplier and some NCP functions for the KKT first-order optimality conditions. At each iteration of the proposed method, it was a perturbation of a Newton or quasi-Newton iteration on both the primal and dual variables for the solution of the KKT optimality conditions. Moreover, we used the filter on <b>linear</b> <b>searches</b> with a nonmonotone acceptance mechanism. We also showed that the proposed method had a global convergence and a superlinear convergence rate. Finally, the numerical results illustrated that the proposed method was efficient. However, how to apply this method to the real optimal problem will be studied in the near future.|$|R
40|$|Two interior-point {{algorithms}} {{are proposed}} and analyzed, for the (local) solution of (possibly) indefinite quadratic programming problems. They {{are of the}} Newton-KKT variety in that (much like {{in the case of}} primal-dual algorithms for <b>linear</b> programming) <b>search</b> directions for the “primal ” variables and the Karush-Kuhn-Tucker (KKT) multiplier estimates are components of the Newton (or quasi-Newton...|$|R
25|$|To {{establish}} failure link {{is the key}} {{to improve}} the time complexity of Aho-Corasick algorithm. It can reduced the original polynomial time to the <b>linear</b> time for <b>searching.</b>|$|R
5000|$|The <b>linear</b> <b>search</b> rediscovered, Structured Programming 11, (1990), 53-55 ...|$|E
5000|$|Some {{approximate}} solution methods for the <b>linear</b> <b>search</b> problem ...|$|E
5000|$|A <b>linear</b> <b>search</b> can be {{implemented}} with a one-liner using the when keyword: ...|$|E
40|$|AbstractGiven a set Z of n<∞ {{points in}} the plane and an integer λ⩾ 2, we {{consider}} the problem of finding a λ-Steiner hull of Z, i. e., a region containing every Steiner minimal tree for Z in the λ-metric. We define a λ-Steiner hull λ-SH(Z) of Z as a set obtained by a maximal sequence of removals of certain open wedge-shaped regions from an initial hull followed by a simplification of its boundary. A perhaps surprising result is presented, namely that a Euclidean MST for Z {{can be used to}} decompose the problem of finding λ-SH(Z) into subproblems. Each of these can then be solved recursively using <b>linear</b> <b>searches</b> combined with a sweep line approach. Using this result, we present an algorithm computing λ-SH(Z). This algorithm has O(λnlogn) running time and O(λn) space requirement which is optimal for constant λ. We prove that λ-SH(Z) is independent of the order of removals of the open wedge-shaped regions...|$|R
40|$|The 4. 2 Berkeley Software Distribution of UNIX ® for the VAX ‡ {{had several}} {{problems}} that could severely affect the overall {{performance of the}} system. These problems were identified with kernel profiling and system tracing during day to day use. Once potential problem areas had been identified benchmark programs were devised to highlight the bottlenecks. These benchmarks verified that the problems existed and provided a metric against which to validate proposed solutions. This paper examines the performance problems encountered and describes modifications {{that have been made}} to the system since the initial distribution. The changes to the system have consisted of improvements to the performance of the existing facilities, as well as enhancements to the current facilities. Performance improvements in the kernel include cacheing of path name translations, reductions in clock handling and scheduling overhead, and improved throughput of the network subsystem. Performance improvements in the libraries and utilities include replacement of <b>linear</b> <b>searches</b> of system databases with indexed lookup, merging of most network service...|$|R
50|$|There {{are also}} search methods {{designed}} for quantum computers, like Grover's algorithm, that are theoretically faster than <b>linear</b> or brute-force <b>search</b> {{even without the}} help of data structures or heuristics.|$|R
50|$|Either way, {{asymptotically}} {{the worst-case}} cost and the expected cost of <b>linear</b> <b>search</b> are both O(n).|$|E
50|$|Published by Dan Gillespie in 1977, {{and is a}} <b>linear</b> <b>search</b> on the {{cumulative}} array. See Gillespie algorithm.|$|E
50|$|Most {{database}} software includes indexing technology that enables sub-linear time lookup to improve performance, as <b>linear</b> <b>search</b> is inefficient for large databases.|$|E
5000|$|James Burke is {{developing}} a Mobile app called Connections app which aims to allow users to make searches in Wikipedia in ways that could lead them to develop mind associations and connections of apparently unrelated fields of knowledge or topics. Surprises, anomalies, and unexpected perspectives on a search can emerge from using the app. According to Burke, the Connection App is an alternative and innovative method to more <b>linear</b> internet <b>search</b> engines such as Google.|$|R
40|$|For Global Optimization Problems (GOPs), {{we propose}} a new variant of DE with <b>linear</b> {{neighborhood}} <b>search,</b> called LiNDE which employs a linear combination of triple vectors taken randomly from evolutionary population, {{in order to}} improve the ability of neighborhood search of Differential Evolutionary (DE) algorithm. The main characteristics of LiNDE are less parameters and powerful neighborhood search ability. Experimental studies are carried out on a benchmark set and the results show that LiNDE significantly improves the performance of DE...|$|R
40|$|A {{large-scale}} fully-digital {{receive antenna}} array can provide very high-resolution direction of arrival (DOA) estimation, but {{resulting in a}} significantly high RF-chain circuit cost. Thus, a hybrid analog and digital (HAD) structure is preferred. Two phase alignment (PA) methods, HAD PA (HADPA) and hybrid digital and analog PA (HDAPA), are proposed to estimate DOA based on the parametric method. Compared to analog phase alignment (APA), they can significantly reduce the complexity in the PA phases. Subsequently, a fast root multiple signal classification HDAPA (Root-MUSIC-HDAPA) method is proposed specially for this hybrid structure to implement an approximately analytical solution. Due to the HAD structure, there exists the effect of direction-finding ambiguity. A smart strategy of maximizing the average receive power is adopted to delete those spurious solutions and preserve the true optimal solution by <b>linear</b> <b>searching</b> over a set of limited finite candidate directions. This results in {{a significant reduction in}} computational complexity. Eventually, the Cramer-Rao lower bound (CRLB) of finding emitter direction using the HAD structure is derived. Simulation results show that our proposed methods, Root-MUSIC-HDAPA and HDAPA, can achieve the hybrid CRLB with their complexities being significantly lower than those of pure linear searching-based methods, such as APA...|$|R
