3|149|Public
40|$|Rabbit polyribosomal globin {{messenger}} RNA (mRNA) and messenger ribonucleoprotein (mRNP) were labelled at the 3 ′ poly(A) tail to high {{specific activity}} with T 4 RNA ligase and [5 ′- 32 P]pCp without consequent loss of functional activity. <b>Labelled</b> <b>message</b> was translated in both micrococcal nuclease treated and untreated rabbit reticulocyte lysates, {{as shown by}} the formation of labelled polyribosomes. The utilisation of labelled messenger was abolished by T 2 toxin or sodium fluoride which are known to inhibit protein synthesis...|$|E
40|$|The {{present report}} {{presents}} an operational semantics and a typing system for ABCL/ 1 programs, {{based on a}} name-passing calculus. The particular calculus we use, T yCO, features asynchronous <b>labelled</b> <b>message</b> passing, explicit objects composed of labelled methods, and operators to compose objects and messages concurrently, and to generate new names. The calculus is only implicitly typed in that no type information is presented in programs, but else inferred through a typing assignment system. The operational semantics is obtained by a systematic translation of the constructors present in the ABCL/ 1 language into T yCO processes. The type assignment system is derived from this encoding and from T yCO type inference rules. The encoding provides a very fine grain semantics that makes explicit the order of evaluation in methods, and highlights the most complex features present in ABCL/ 1, namely wait-for forms and express-messages. The typing system provides a means to statically separate "saf [...] ...|$|E
40|$|Multiparty session types (MPSTs) are the {{formalism}} {{for describing}} protocols among multiple participants from a global point of view. They {{are used to}} check type-safety and deadlock freedom for programs. In real-time distributed systems, however, protocol descriptions often include: time-related specifications, such as deadline and timeout, by imposing time restrictions on interactions to guarantee the quality of service; and parallel computation for improving efficiency. The original theory of multiparty session types lacks the ability for expressing time and parallel actions in the global description. Therefore, we propose the theory of timed choreographical session types to solve the problem. To express time-related specifications, we associate time constraints and clock resets to asynchronous message passing in global types and local types. We define the labelled transition systems of timed global and local types, and prove that soundness and completeness are preserved through projection. We add a delay primitive to session calculus to achieve a minimum extension of asynchronous π- calculus and prove theorems of type preservation and subject reduction. We also formalise the theorem of time error-freedom and properties of feasibility and wait- freedom to guarantee that no deadlock is caused by time error. Additionally, we show that timed global session types enjoy progress property if the global types without time constraints and resets are verified to progress. In the theory of choreographical session types, {{for the purpose of}} precise thread management, explicit fork/merge operations for parallel composition and choice/join for branching are defined in both global and local session types and session calculus. To ensure well-behaved communications, we formalise the definition of well-formedness for global types and present sufficient conditions for verifying well-formedness. Based on choreographical session calculus, we define the operational semantics and typing system for processes and prove the theorems of subject reduction and type safety. When we model scenarios of concurrent real-time systems, it is natural to combine the formalisms of timed session types and choreographical session types. Then we add time assertions to <b>labelled</b> <b>message</b> passing operations in choreographical global and local types, and delay primitive in session calculus. Due to the orthogonality of time and parallel composition, we easily prove the theorems of subject reduction, and time error-freedom within the timed choreographical context. Due to introduced complexity in global types, we present the progress enablement and time progress property to guarantee that processes will progress. Open Acces...|$|E
50|$|In June 2014 two labels both {{stitched}} with SOS {{messages were}} separately found in Swansea purchased garments. Primark argued {{the supply chain}} showed these <b>label</b> <b>messages</b> were a hoax.|$|R
40|$|In {{this paper}} we {{evaluate}} an instance-based spam filter {{based on the}} SVM nearest neighbor (SVM-NN) classifier, which combines the ideas of SVM and k-nearest neighbor. To <b>label</b> a <b>message</b> the classifier first finds k nearest <b>labeled</b> <b>messages,</b> and then an SVM model is trained on these k samples and used to label the unknown sample. Here we present preliminary results of the comparison of SVM-NN with SVM and k-NN...|$|R
30|$|Messages {{sent from}} closer {{vehicles}} deserve more attention {{as they may}} impact the current vehicle immediately. Inspired by this observation, we let vi <b>label</b> <b>messages</b> with different priority tags based on the sender-receiver distance when processing messages.|$|R
50|$|Raised in Jamaica Estates, a {{neighborhood}} of Queens in New York City, he is the founding member of Young 'N Grateful, a record label with online retail distribution under EMPIRE. The basis for the <b>label's</b> <b>message</b> is an annotation {{to be grateful for}} time, life and love.|$|R
40|$|M. Tech. Language PracticeThe {{research}} {{investigates the}} impact of monolingual (English) nutrition labelling on consumers' health in South Africa. The focus {{of the study is}} to determine if the use of one language on nutrition information labels has an impact on consumers' behaviour and understanding of nutrition information <b>labelling</b> <b>messages,</b> and if their behaviour affects their health...|$|R
40|$|This paper {{proposes a}} system {{allowing}} OSN users {{to have a}} direct control on the messages posted on their walls. This is achieved through a flexible rule-based system, that allows users to customize the filtering criteria {{to be applied to}} their walls, and a Machine Learning based soft classifier automatically <b>labeling</b> <b>messages</b> in support of content-based filtering...|$|R
5000|$|Move <b>labels</b> of <b>messages</b> {{from the}} left {{to the right of}} Gmail inbox ...|$|R
40|$|This paper {{proposes a}} system {{enforcing}} content-based message filtering for On-line Social Networks (OSNs). The system allows OSN users {{to have a}} direct control on the messages posted on their walls. This is achieved through a flexible rule-based system, that allows a user to customize the filtering criteria {{to be applied to}} their walls, and a Machine Learning based soft classifier automatically <b>labelling</b> <b>messages</b> in support of content-based filtering...|$|R
5000|$|All <b>labels</b> and <b>messages</b> are in English, Spanish, German, Polish, Indonesian, French, Chinese, Italian and Catalan, {{with more}} coming.|$|R
40|$|Man {{engages in}} the {{continuous}} construction of models tc describe his reality. This assumption {{led to some}} instructional research at Oakland University, Rochester, Michigan, developing and testing a systems model for the classroom. A model building process <b>labeled</b> <b>message</b> storage and retrieval was developed in some detail. Using this retrieval model as a basic form, alternative models of cognitive behavior can be constructed. A simple model of message content is one such model that forms {{the basis for the}} actual research project. It emphasizes the scientifi...|$|R
40|$|Recent EU {{regulations}} have imposed mandatory labelling of all food products that consist of or contain {{genetically modified organisms}} (GMOs). Labelling should state that "this product contains genetically modified organisms". This study examines how different <b>label</b> <b>messages</b> may affect the attitude of consumers in tasting a specific food product (corn chip) derived from maize presented with five different labels ("organic corn", "conventional corn", "product that contains genetically modified corn", "product that contains genetically modified corn approved by EU", "non- classified corn"). Results of 100 Greek young students show that the label claiming that the product contains genetically modified corn, evokes a deeply rooted negative attitude as {{more than half of}} participants (59 %) refused to taste even a single piece of the product. The label claiming that the product is genetically modified but approved by EU is viewed as more credible but still 29 % refuse to sample. The conclusion is that although the feeling of trust increases considerably when the <b>label</b> <b>message</b> is supported by a certifying agency, still a large proportion (almost one third) of participants of technological level education refuse to taste a product that has been approved by the EU for almost a decade. This result demonstrates with an emphatic way the phobia surrounding genetically modified food. On the contrary, products labelled as "organic" were tasted by the majority of participants, even without any kind of certification. Key words : Genetically modified maize, labelling, acceptanceConsumer/Household Economics, Research and Development/Tech Change/Emerging Technologies,...|$|R
40|$|In today On-line Social Networks (OSNs), one {{fundamental}} issue {{is to give}} users {{the ability to control}} the messages posted on their own private space to avoid that unwanted content is displayed. Up to now OSNs provide little support to this requirement. To fill the gap, we built a system which allows OSN users to have a direct control on the messages posted on their walls. This is achieved through a flexible rule-based system, that allows a user to customize the filtering criteria to be applied to their walls, and a Machine Learning based soft classifier automatically <b>labelling</b> <b>messages</b> in support of content-based filtering...|$|R
5000|$|Multi-agent systems {{sometimes}} use {{speech act}} labels {{to express the}} intent of an agent when it {{sends a message to}} another agent. For example the intent [...] "inform" [...] in the message [...] "inform(content)" [...] may be interpreted as a request that the receiving agent adds the item [...] "content" [...] to its knowledge-base; this is in contrast to the message [...] "query(content)" [...] which may be interpreted (depending on the semantics employed) as a request to see if the item content is currently in the receiving agents knowledge base. There are at least two standardisations of speech act <b>labelled</b> <b>messaging</b> KQML and FIPA.|$|R
40|$|Abstract — In {{consideration}} to the today’s globalized world {{everybody in the}} society are being addicted in using the Social Networks Sites. The basic problem that we are gonna be seen in using these sites is “Lack Of Privacy”. Till today, Social Networks Sites provide little support to this requirement. To sort out this problem, in this project we are proposing a system which will provide the indirect control to the users of these sites. This proposed model can be achieved through a modern rule-based system, that allows administrators to customize the filtering criteria {{to be applied to}} their walls, and a Machine Learning based soft classifier automatically <b>labeling</b> <b>messages</b> in support of content-based filtering...|$|R
40|$|Abstract: In recent years, Online Social Networks {{have become}} an {{important}} part of daily life for many. One fundamental issue in today user wall(s) is to give users the ability to control the messages posted on their own private space to avoid that unwanted content is displayed. Up to now user walls provide little support to this requirement. To fill the gap, I propose a system allowing user wall users to have a direct control on the messages posted on their walls. This is achieved through a flexible rule-based system, that allows users to customize the filtering criteria to be applied to their walls, and Machine Learning based soft classifier automatically <b>labeling</b> <b>messages</b> in support of content-based filtering...|$|R
5000|$|The <b>label</b> {{bears the}} <b>message</b> [...] "Don't drop out" [...] to {{encourage}} kids {{to stay in}} school.|$|R
50|$|Stipulates warning <b>labels</b> / health <b>messages</b> {{to cover}} at least 50 per {{cent of the}} {{principal}} display areas.|$|R
50|$|After {{completing}} {{college and}} marrying in New Jersey, the duo settled in Los Angeles, California where they became musical ministers at the renowned pastor, Dr. E.V. Hill's church. In pursuit {{of their professional}} music career, they coined the group name, Nicholas. They {{tried and failed to}} release albums with Motown Records, so Philip alongside partner and brother, Lonnie Nicholas, they established their own record <b>label,</b> <b>Message</b> Records in 1981. At this time the group was a quartet, with another female (Linda Laury Harold) and nephew (Steve Jackson) as the main vocalist. This brotherly owned label would soon cease, when Philip and Lonnie differed over the labels direction, causing Philip to depart, and creating Command Records with ex-Motown producer, Kent Washburn.|$|R
40|$|Based on a name-passing {{calculus}} {{and on its}} typing {{system the}} paper shows how to build several language constructors towards a strongly-typed objectoriented concurrent programming language. The basic calculus incorporates the notions of asynchronous <b>labelled</b> <b>messages,</b> concurrent objects composed of labelled methods, and a form of abstraction on processes allowing in particular to declare polymorphic classes. We introduce a notion of values as name-expressions, and show how to create subclasses of existing classes. A systematic translation of the derived constructors into the basic calculus provides for semantics and for typing rules for the new constructors. Introduction Concurrent objects constitute a convenient tool to describe concurrent and distributed computations. Types enforce a discipline in the usage of the programming language constructors that not only provides for partial-correctness, but also helps in writing clear programs. Furthermore, a type for a program often gives s [...] ...|$|R
40|$|Sentiment {{analysis}} has been increasingly {{applied to the}} stock market domain. In particular, investor sentiment indicators can be used to model and predict stock market variables. In this context, the quality of the sentiment analysis is highly dependent of the opinion lexicon adopted. However, {{there is a lack of}} lexicons adjusted to microblogging stock market data. In this work, we propose an automatic procedure for the creation of such lexicon by exploring a large set of <b>labeled</b> <b>messages</b> from StockTwits, a popular financial microblogging service, and using four statistical measures: adaptations of the known TF-IDF, Information Gain, Class Percentage, and a newly proposed Weighted Class Probability. The obtained lexicons are competitive when compared with a set of six reference lexicons. Moreover, we verified that it is beneficial to use continuous sentiment scores instead of sentiment labels...|$|R
40|$|We {{introduce}} a name-passing calculus featuring objects as guarded labelledsums, each summand representing a method, and asynchronous <b>labelled</b> <b>messages</b> selecting a branch in the sum. A decidable type assignment system allows to statically verify whether all possible communications {{in a given}} program are secure, in the precise sense that no object will ever receive a message for which {{it does not have}} an appropriate method. Then we present a recursive type system based on that of Cardone and Coppo for the -calculus, and of Vasconcelos and Honda for the polyadic -calculus. The new system extends the class of typable terms while preserving basic syntactical properties of the simple type system, including subject-reduction and existence and computability of principal typings. Introduction Object technologies are a promising paradigm towards the management of complex, concurrent, distributed and open-ended systems. Types are an acknowledged tool to describe protocols of communicat [...] ...|$|R
40|$|We propose an {{object-oriented}} calculus {{with internal}} concurrency and class-based inheritance that is built upon the join calculus. Method calls, locks, and states are handled {{in a uniform}} manner, using <b>labeled</b> <b>messages.</b> Classes are partial message denitions that can be combined and transformed. We design operators for behavioral and synchronization inheritance. We also give a type system that statically enforces basic safety properties. Our model {{is compatible with the}} JoCaml implementation of the join calculus. 1 Introduction Object-oriented programming has long been praised as favoring abstraction, incremental development, and code reuse. Objects can be created by instantiating denition patterns called classes, and in turn complex classes can be built from simpler ones. To make this approach eective, the assembly of classes should rely on a small set of operators with a clear semantics and should support modular proof techniques. In a concurrency setting, such promises can [...] ...|$|R
40|$|I propose an untyped name-passing {{calculus}} and {{a series}} of decidable type systems assigning types to names in terms. The calculus, designed according to the modern trends in name-passing calculi, is intended to capture the basic concepts of concurrent objects. The type systems, developed along the lines of those for -calculi, provide for partial-specification in the form of communication protocols for programs, and for partial-correctness wherein typable terms are assured not to run into errors at execution time. Terms are built from names and labels by means of five constructors, the innovations being guarded labelled-sums describing objects composed of labelled methods and asynchronous <b>labelled</b> <b>messages</b> selecting a method in the target object. The remaining constructors are fairly standard in name-passing calculi and comprise concurrent composition, local name creation (or scope restriction), and replication. The type systems assign types to names, and typings (that is, sets of nam [...] ...|$|R
40|$|The paper {{presents}} a two-level software framework for distributed embedded applications. At the top level, an application is {{conceived as a}} composition of embedded actors that communicate transparently by exchanging <b>labeled</b> <b>messages</b> (signals), independent of their allocation onto network nodes. Signals are exchanged at precisely specified time instants, {{in accordance with the}} concept of Distributed Timed Multitasking (DTM). The combination of actors, signal-based communication and DTM provides a framework for the development of open yet predictable embedded systems. At the lower level of specification, actors are modeled as software objects that are configured from executable components- basic, composite and modal function blocks, as well as supervisory state machines. Actor behaviour is specified with a hybrid executable model- a clocked event-driven state machine operating in conjunction with modal function blocks, which can be used to implement a broad range of applications such as sequential, continuous and hybrid control systems. 1...|$|R
50|$|SEEOTI {{implements}} {{the secure}} email specifications {{defined by the}} Transglobal Secure Collaboration Program (TSCP). These support interoperable signing and encryption of email messages in a federated environment. In addition, the security <b>labelling</b> of email <b>messages</b> is supported with a network border guard being able to check <b>labels</b> even though <b>messages</b> are encrypted. This meets the goal of protecting Intellectual Property in the global business environment, which is of particular importance to the UK Cyber Security Strategy as intellectual property is seen as key {{to the growth of}} the economy.|$|R
50|$|Once an upload {{component}} {{enters the}} international market, it needs support translating the interface's text <b>labels</b> and <b>messages</b> to other languages. Usually upload components have configurable {{support for the}} most widely used languages. The user interface can also be multilingual. For some languages such as Hebrew the localization process contains not only translation, but switching to right-to-left look and feel.|$|R
40|$|Abstract — The paper {{presents}} a software architecture for Distributed Timed Multitasking- {{a new model}} of computation {{that can be used to}} engineer open, and the same time, predictable embedded systems. Systems are composed from components (actors) that communicate transparently by exchanging <b>labeled</b> <b>messages</b> (signals) over a real-time network. Actors may be viewed as real-time tasks with event-triggered input/output signal drivers. The latter are executed atomically at precisely specified time instants, resulting in the elimination of transaction I/O jitter. Drivers are actually integrated into a middleware component- the Timed Communication Bus, which provides for complete separation of computation and communication, as well as transparent interaction between embedded actors, independent of their allocation on network nodes. The Communication Bus has been conceived as a subsystem of a distributed timed multitasking kernel whose architecture and operation are discussed as well. Index Terms — Distributed hard real-time systems, componentbased design, embedded actors, signal-based communication, timed multitasking, semi-static cyclic scheduling I...|$|R
40|$|International audienceDistributed Timed Multitasking (DTM) is a {{model of}} {{computation}} describing the operation of hard real-time embedded control systems. With this model, an application is conceived as a network of distributed embedded actors that communicate with one another by exchanging <b>labeled</b> <b>messages</b> (signals), independent of their physical allocation. Input and output signals are exchanged with the controlled plant at precisely specified time instants, which provides for a constant delay from sampling to actuation and the elimination of I/O jitter. The paper presents an operational specification of DTM in terms of actor interface automata, whereby a distributed control system is modeled as a set of communicating interface automata executing distributed transactions. The above modeling technique has implications for system design, since interface automata can be used as design models that can be implemented as application or operating system components. It has also implications for system analysis, since actor interface automata are essentially timed automata that can be used as analysis models in model checking tools and simulation environments...|$|R
40|$|We study {{a setting}} that is {{motivated}} by the problem of filtering spam messages for many users. Each user receives messages according to an individual, unknown distribution, reflected only in the unlabeled inbox. The spam filter for a user is required to perform well {{with respect to this}} distribution. <b>Labeled</b> <b>messages</b> from publicly available sources can be utilized, but they are governed by a distinct distribution, not adequately representing most inboxes. We devise a method that minimizes a loss function with respect to a user’s personal distribution based on the available biased sample. A nonparametric hierarchical Bayesian model furthermore generalizes across users by learning a common prior which is imposed on new email accounts. Empirically, we observe that bias-corrected learning outperforms naive reliance on the assumption of independent and identically distributed data; Dirichlet-enhanced generalization across users outperforms a single (“one size fits all”) filter as well as independent filters for all users. ...|$|R
40|$|The {{labeling}} of discussion forums using the cognitive levels of Bloom’s taxonomy is a time-consuming and very expensive task {{due to the}} big amount of information {{that needs to be}} labeled and the need of an expert in the educational field for applying the taxonomy according to the messages of the forums. In this paper we present a framework in order to automatically <b>label</b> <b>messages</b> from discussion forums using the categories of Bloom’s taxonomy. Several models were created using three kind of machine learning approaches: linear, rule-based and combined classifiers. The models are evaluated using the accuracy, the F 1 -measure and the area under the ROC curve. Additionally, a statistical significance of the results is performed using a McNemar test in order to validate them. The results show that the combination of a linear classifier with a rule-based classifier yields very good and promising results for this difficult task. status: publishe...|$|R
30|$|We {{also looked}} for {{evidence}} of new committers joining a project during incubation. Projects that join the Apache Incubator start with an initial set of committers. New committers are elected by the current committers. When a new committer is elected, an announcement is made to the mailing list. We therefore wrote a program to search the email message archive for these announcement messages. Announcement messages are those that have “[ANNOUNCE] OR [ANN] + committer” in their subject. Matching was done as follows: first name + family name, first name + middle name + family name. We found 19 projects in which new committers had been elected, {{for a total of}} 83 new committers. Only one name from our list of developers was among the names from the announcements. Interestingly, these elections all happened after the projects had graduated or retired from incubation. Some, but not all of the new committers participated in the mailing lists before the projects left the incubator. We <b>labelled</b> <b>messages</b> from these members as from “future core”.|$|R
40|$|Lexicon {{acquisition}} is a {{key issue}} for sentiment analysis. This paper presents a novel and fast approach for creating stock market lexicons. The approach is based on statistical measures applied over a vast set of <b>labeled</b> <b>messages</b> from StockTwits, which is a specialized stock market microblog. We compare three adaptations of statistical measures, such as pointwise mutual information (PMI), two new complementary statistics {{and the use of}} sentiment scores for affirmative and negated con- texts. Using StockTwits, we show that the new lexicons are competitive for measuring investor sentiment when compared with six popular lexicons. We also applied a lexicon to easily produce Twitter investor sentiment indicators and analyzed their correlation with survey sentiment indexes. The new microblogging indicators have a moderate correlation with popular Investors Intelligence (II) and American Association of Individual Investors (AAII) indicators. Thus, the new microblogging approach can be used alternatively to traditional survey indicators with advantages (e. g., cheaper creation, higher frequencies). This work was supported by FCT - Funda ção para a Ciência e Tecnologia within the Project Scope UID/CEC/ 00319 / 201...|$|R
40|$|Abstract—The paper {{presents}} COMDES-II- {{a software}} framework for distributed control systems. The framework provides for systematic top-down specification of distributed applications: {{a system is}} conceived as a composition of embedded actors that communicate transparently by exchanging <b>labeled</b> <b>messages</b> (signals), and actors are composed from reusable executable components (function blocks). The framework and its software components have been validated {{in a number of}} real-time control experiments, including the Production Cell Case Study. The paper presents the software design models of the Production Cell control system, based on COMDES-II, focusing on the system engineering aspects of the software design. The latter has been formally verified using the Uppaal verification tool. To that end, a method has been developed to transform the COMDES-II interaction diagram into an Uppaal model, using networks of automata representing system actors, as well as controlled objects from the Production Cell environment. The developed control system design has been tested via hardware-in-the-loop simulation involving a real-time control network and an animated computer model of the plant. Index Terms—component-based design, software framework, actors, function blocks, hardware-in-the-loop simulatio...|$|R
