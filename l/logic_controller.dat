2938|1319|Public
25|$|Information technology, {{together}} with industrial machinery and processes, {{can assist in}} the design, implementation, and monitoring of control systems. One example of an industrial control system is a programmable <b>logic</b> <b>controller</b> (PLC). PLCs are specialized hardened computers which are frequently used to synchronize the flow of inputs from (physical) sensors and events with the flow of outputs to actuators and events.|$|E
25|$|Stuxnet, {{discovered}} by Sergey Ulasen, initially spread via Microsoft Windows, and targeted Siemens industrial control systems. While {{it is not}} the first time that hackers have targeted industrial systems, nor the first publicly known intentional act of cyberwarfare to be implemented, it is the first discovered malware that spies on and subverts industrial systems, and the first to include a programmable <b>logic</b> <b>controller</b> (PLC) rootkit.|$|E
25|$|In {{a digital}} circuit, an FSM may be built using a {{programmable}} logic device, a programmable <b>logic</b> <b>controller,</b> logic gates and flip flops or relays. More specifically, a hardware implementation requires a register to store state variables, {{a block of}} combinational logic that determines the state transition, and a second block of combinational logic that determines the output of an FSM. One of the classic hardware implementations is the Richards controller.|$|E
40|$|Abstract 1 The paper {{describes}} the classification structure of <b>logic</b> <b>controllers.</b> It {{has been shown}} that, depending on the logical nature of the terms all <b>logic</b> <b>controllers</b> are divided into fuzzy and crisp. In turn, according to the procedure of implementation the fuzzy <b>logic</b> <b>controllers</b> are divided into a) controllers with crisp feedback, as the superstructure over the classical PID-controllers, b) adaptive control systems with fuzzy logic (with adaptation) and c) with the linguistic feedback. Crisp <b>logic</b> <b>controllers</b> according to the procedure of implementation are divided into a) relaycyclical, b) controllers with any-time algorithms, c) controllerswith step-time algorithm, d) multidimensional crisp <b>logic</b> <b>controllers.</b> The advantage of the crisp controllers as compared with fuzzy ones has been shown. 1...|$|R
40|$|This {{study has}} {{concentrated}} on fuzzy <b>logic</b> <b>controllers</b> from the basic aspects to an advanced self-tuning strategy. Fuzzy logic provides {{a very good}} technique for knowledge representation which {{makes it possible to}} incorporate the experience of human operators in the design of controllers;The basic concepts of fuzzy set theory, fundamental definitions of fuzzy logic, and basic structure of fuzzy <b>logic</b> <b>controllers</b> are introduced and a guideline for building the fuzzy rule-based system is developed. The rule development and adjustment strategies for fuzzy <b>logic</b> <b>controllers</b> are presented and experimentally identified. The fuzzy logic control system is analyzed on a linguistic plane with a performance trajectory. Non-linear multilevel relay property is indicated as the intrinsic feature of fuzzy <b>logic</b> <b>controllers.</b> The computer simulations and laboratory experiments indicate that the fuzzy <b>logic</b> <b>controllers</b> perform better than conventional PID controllers;Fuzzy model identification is the base to establish the initial rule set for self-tuning fuzzy <b>logic</b> <b>controllers.</b> It includes delay time determination and fuzzy parameter estimation. An artificial neural network is used as a mapping function to determine the delay time for a HVAC plant. The neural network has a feed-forward data flow mode and uses General Delta Rule as a back-propagation learning algorithm. In this study, an acceleration technique is proposed to improve the General Delta Rule. A linguistic identification method is developed to estimate fuzzy parameters for the controlled plant;A self-tuning strategy is proposed in this study as an extension of simple fuzzy <b>logic</b> <b>controllers</b> to avoid the laborious task of adjusting fuzzy <b>logic</b> <b>controllers.</b> A desired optimal performance trajectory is used as a control model. The deviation of actual performance trajectory from the desired one is used to improve the fuzzy <b>logic</b> <b>controllers.</b> The detailed performance measurement and modification procedure are developed. The self-tuning algorithm has been successfully verified in experiments...|$|R
40|$|This talk {{introduces}} {{an approach}} to interactive verification of programmable <b>logic</b> <b>controllers</b> which often serve as controllers in safety critical systems and hence need thorough verification. It gives first a short introduction to programmable <b>logic</b> <b>controllers,</b> afterwards {{an introduction to the}} framework of modal Kleene Algebra and a short view of the interactive proving system KIV. Finally, it is shown how Kleene Algebra can be used to verify LTL properties of programmable <b>logic</b> <b>controllers</b> using the KIV system...|$|R
25|$|Stuxnet is a {{computer}} worm discovered in June 2010 that {{is believed to have}} been created by the United States and Israel to attack Iran's nuclear facilities. It switched off safety devices, causing centrifuges to spin out of control. Stuxnet initially spreads via Microsoft Windows, and targets Siemens industrial control systems. While it is not the first time that hackers have targeted industrial systems, it is the first discovered malware that spies on and subverts industrial systems, and the first to include a programmable <b>logic</b> <b>controller</b> (PLC) rootkit.|$|E
25|$|Recent {{advances}} in vehicle electronics {{have led to}} a move towards fewer, more capable computer processors on a vehicle. A typical vehicle in the early 2000s would have between 20 and 100 individual networked microcontroller/Programmable <b>logic</b> <b>controller</b> modules with non-real-time operating systems. The current trend is toward fewer, more costly microprocessor modules with hardware memory management and real-time operating systems. The new embedded system platforms allow for more sophisticated software applications to be implemented, including model-based process control, artificial intelligence, and ubiquitous computing. Perhaps {{the most important of these}} for Intelligent Transportation Systems is artificial intelligence.|$|E
2500|$|All work {{together}} {{to respond to the}} Ridgeline's electronic throttle that's also linked to the VTM-4 and VSA systems. [...] The automatic transmission uses a four-shaft design with a flat lock-up torque converter that's managed by the PGM-FI's central processing unit. A direct-control real-time pressure management system coordinates engine and transmission operation to minimize driveline shocks and a Grade <b>Logic</b> <b>Controller</b> prevents gear hunting when climbing hills or when more engine braking is required.|$|E
5000|$|Function block diagrams, used in {{programmable}} <b>logic</b> <b>controllers</b> ...|$|R
5000|$|Certificate of Attendance Programmable <b>Logic</b> <b>Controllers</b> (DT075) (3 years) ...|$|R
50|$|DirectLOGIC is a {{range of}} {{programmable}} <b>logic</b> <b>controllers</b> produced by Koyo.|$|R
50|$|PLC (programmable <b>logic</b> <b>controller).</b>|$|E
5000|$|Struger is {{sometimes}} {{known as the}} [...] "father of the programmable logic controller" [...] as is Dick Morley. Struger {{was involved in the}} invention of the Allen-Bradley programmable <b>logic</b> <b>controller</b> (PLC) during 1958 to 1960. Struger is often called the father of Allen-Bradley's programmable <b>logic</b> <b>controller</b> ("PLC") and credited with creating that acronym. The abbreviation [...] "PLC" [...] and the term [...] "Programmable Logic Controller" [...] are registered trademarks of the Allen-Bradley Company. Rockwell (Allen-Bradley) became the programmable <b>logic</b> <b>controller</b> device leader in the United States during the tenure of Struger.|$|E
50|$|This is done {{in nearly}} every {{programmable}} <b>logic</b> <b>controller.</b>|$|E
25|$|Efforts at {{packaging}} line automation increasingly use programmable <b>logic</b> <b>controllers</b> and robotics.|$|R
5000|$|Sequential {{function}} chart, a Petri-net like {{programming language}} for programmable <b>logic</b> <b>controllers</b> ...|$|R
50|$|Level 1 {{contains}} the programmable <b>logic</b> <b>controllers</b> (PLCs) or remote terminal units (RTUs).|$|R
50|$|Programmable <b>logic</b> <b>controller</b> (PLC): A Programmable <b>Logic</b> <b>Controller</b> can be {{programmed}} to perform logical control. As with the RTU, a dedicated pair of copper conductors for each contact and transducer value is terminated on panels within the PLC.It is like a work-horse which work upon the command given by their master.|$|E
5000|$|Ivo Lola Ribar Institute {{releases}} industrial programmable <b>logic</b> <b>controller</b> LPA512.|$|E
5000|$|Simatic S5 PLC, a {{programmable}} <b>logic</b> <b>controller</b> {{family by}} Siemens ...|$|E
5000|$|Ladder logic, a {{language}} that simulates relay logic commonly used in programmable <b>logic</b> <b>controllers</b> ...|$|R
50|$|Other {{examples}} of 1-bit architectures are programmable <b>logic</b> <b>controllers</b> (PLCs), programmed in instruction list (IL).|$|R
5000|$|Storage: {{automated}} {{storage and}} retrieval systems, <b>logic</b> <b>controllers,</b> location of warehouses, volume capacity and schedule/optimization methods.|$|R
5000|$|... #Caption: Control {{center with}} a {{programmable}} <b>logic</b> <b>controller</b> for a RTO.|$|E
50|$|Pigging {{can also}} be {{operated}} totally by a programmable <b>logic</b> <b>controller</b> (PLC).|$|E
5000|$|Programmable <b>logic</b> <b>controller</b> - {{computer}} software mimics relay circuits for industrial applications ...|$|E
40|$|International audienceIn recent years, {{fuzzy control}} has been {{proposed}} as an alternative approach to traditional process control techniques. The construction and use of fuzzy <b>logic</b> <b>controllers</b> for dynamic processes is explored. Many references to fundamental works on this subject are given but the paper is restricted to a presentation of practical results. The design, implementation and calibration of fuzzy <b>logic</b> <b>controllers</b> are reviewed with specific examples...|$|R
50|$|Sharapov v.M. et al. Programmed <b>logic</b> <b>controllers</b> in the {{automated}} control systems. - Stavropol: АGRUS, 2013. - 128р.|$|R
40|$|This Bachelors Work is {{a search}} type. It {{includes}} information summary about industrial buses {{used in the}} area of programmable <b>logic</b> <b>controllers,</b> which are used in laboratory programmable <b>logic</b> <b>controllers</b> of Institute of Automation and Computer Science on Faculty of Mechanical Engineering. Described industrial buses are PROFIBUS, PROFINET, AS-Interface, Interbus and CAN. Every chapter includes detailed information about each bus. Work ends with summary of described buses and their comparison...|$|R
5000|$|... {{programmable}} <b>logic</b> <b>controller</b> - {{the modern}} replacement for complex relay logic in industry ...|$|E
50|$|In 1980's Tamiya {{introduced}} Programmable <b>logic</b> <b>controller</b> {{for moving}} models. It used a 4-bit Microcontroller.|$|E
5000|$|... an {{automation}} {{system based on}} Programmable <b>Logic</b> <b>Controller</b> from Siemens, successor to Simatic S5 PLC ...|$|E
50|$|Flashing control may be {{provided}} by the stack light's internal circuitry or externally controlled with timers or <b>logic</b> <b>controllers.</b>|$|R
40|$|This paper {{presents}} {{a novel approach}} for automatically creating anti-swing fuzzy <b>logic</b> <b>controllers</b> for overhead cranes with hoisting. This approach uses the inverse dynamics of the overhead crane to determine the ranges of the variables of the controllers. The control action is distributed among three fuzzy <b>logic</b> <b>controllers</b> (FLCs) : travel controller, hoist controller, and anti-swing controller. Simulation examples show that the proposed controller can successfully drive overhead cranes under various operating conditions...|$|R
50|$|MC7 is an {{assembly}} language used on programmable <b>logic</b> <b>controllers</b> (PLCs). The state logic language is typically {{used to write}} applications.|$|R
