4|19|Public
50|$|Loop-back (LB): Loop-back {{messages}} {{otherwise known}} as MAC ping are Unicast frames that a MEP transmits, they are similar in concept to an Internet Control Message Protocol (ICMP) Echo (Ping) messages, sending <b>Loopback</b> <b>to</b> successive MIPs can determine {{the location of a}} fault. Sending a high volume of Loopback Messages can test bandwidth, reliability, or jitter of a service, which is similar to flood ping. A MEP can send a <b>Loopback</b> <b>to</b> any MEP or MIP in the service. Unlike CCMs, Loop back messages are administratively initiated and stopped.|$|E
40|$|Root is the {{administrative}} privilege on Android, which is however inaccessible on stock Android devices. Due to {{the desire for}} privileged functionalities and the reluctance of rooting their devices, Android users seek for no-root approaches, which provide users with part of root privileges without rooting their devices. In this paper, we newly discover a feasible no-root approach based on the ADB <b>loopback.</b> <b>To</b> ensure such no-root approach is not misused proactively, we examine its dark side, including privacy leakage via logs and user input inference. Finally, we discuss the solutions and suggestions from different perspectives...|$|E
40|$|There is an {{overwhelming}} number of news articles published every day around the globe. Following {{the evolution of a}} news-story is a difficult task given {{that there is no such}} mechanism available to track back in time to study the diffusion of the relevant events in digital news feeds. The techniques developed so far to extract meaningful information from a massive corpus rely on similarity search, which results in a myopic <b>loopback</b> <b>to</b> the same topic without providing the needed insights to hypothesize the origin of a story that may be completely different than the news today. In this paper, we present an algorithm that mines historical data to detect the origin of an event, segments the timeline into disjoint groups of coherent news articles, and outlines the most important documents in a timeline with a soft probability to provide a better understanding of the evolution of a story. Qualitative and quantitative approaches to evaluate our framework demonstrate that our algorithm discovers statistically significant and meaningful stories in reasonable time. Additionally, a relevant case study on a set of news articles demonstrates that the generated output of the algorithm holds the promise to aid prediction of future entities in a story. Comment: This is a pre-print of an article published in the International Journal of Data Science and Analytics. The final authenticated version is available online at: [URL]...|$|E
5000|$|<b>Loopback</b> - answers <b>to</b> {{the most}} {{original}} (or stupid) emails {{received by the}} phrack staff.|$|R
50|$|On most {{computer}} systems, localhost resolves to the IP address 127.0.0.1, {{which is}} the most commonly used IPv4 <b>loopback</b> address, and <b>to</b> the IPv6 <b>loopback</b> address ::1.|$|R
2500|$|Asus {{released}} a soundcard {{which features a}} function called [...] "Analog <b>Loopback</b> Transformation" [...] <b>to</b> bypass the restrictions of DRM. This feature allows the user to record DRM-restricted audio via the soundcard's built-in analog I/O connection.|$|R
40|$|Root is the {{administrative}} privilege on Android, which is however inaccessible on stock Android devices. Due to {{the desire for}} privileged functionalities and the reluctance of rooting their devices, Android users seek for no-root approaches, which provide users with part of root privileges without rooting their devices. Existing no-root approaches require users to launch a separate service via Android Debug Bridge (ADB) on an Android device, which would perform user-desired tasks. However, it is unusual for a third-party Android application {{to work with a}} separate native service via sockets, and it requires the application developers to have extra knowledge such as Linux programming in application development. In this paper, we propose a feasible no-root approach based on new functionalities added on Android, which creates no separate service but an ADB <b>loopback.</b> <b>To</b> ensure such no-root approach is not misused in a proactive instead of reactive manner, we examine its dark side. We find out that while this approach makes it easy for no-root applications to work, it may lead to a “permission explosion,” which enables any third-party application to attain shell permissions beyond its granted permissions. The permission explosion can further lead to exploits including privacy leakage, account takeover, application UID abuse, and user input inference. A practical experiment is carried out to evaluate the situation in the real world, which shows that many real-world applications from Google Play and four third-party application markets are indeed vulnerable to these exploits. To mitigate {{the dark side of the}} new no-root approach and make it more suitable for users to adopt, we identify the causes of the exploits, and propose a permission-based solution. We also provide suggestions to application developers and application markets on how to prevent these exploits...|$|E
50|$|Using a DNS {{sinkhole}} {{by manipulating}} the hosts file exploits {{the fact that}} most operating systems store a file with IP address, domain name pairs which is consulted by most browsers before using a DNS server to look up a domain name. By assigning the <b>loopback</b> address <b>to</b> each known ad server, the user directs traffic intended to reach each ad server to the local machine or to a virtual black hole of /dev/null or bit bucket.|$|R
5000|$|... {{load data}} Contains memory load data.load request Request for memory load segment.load w/addr Memory load with {{transfer}} address.load w/addr Parameter load with transfer address.service req Request for assistance with dump operation.dump request Request for next memory dump segment.dump data Contains memory dump data.completed Acknowledgment of dump completion.assist Offer of dump/load/loop assistance.program Request for system or loader program.boot request Request for boot program.ID reqst Request for remote console identification.system ID Remote console identification information.request Request for communication information counters.reply Communication information counters.console Remote console in reserved state.console Release of remote console from reserved state.console poll Poll of remote console for status.console rply Response to remote console poll.request Request <b>to</b> <b>loopback</b> enclosed data.reply Response <b>to</b> <b>loopback</b> request with data.|$|R
40|$|This paper {{reports on}} our ongoing project to use TCPA to {{transform}} a desktop Linux machine into a virtual secure coprocessor: more powerful but less secure than higher-end devices. We use TCPA hardware and modified boot loaders to protect fairly static components, {{such as a}} trusted kernel; we use an enforcer module—configured as Linux Security Module—to protected more dynamic system components; we use an encrypted <b>loopback</b> filesystem <b>to</b> protect highly dynamic components. All our code is open source and available under GPL fro...|$|R
40|$|This {{application}} note describes a 3 X-oversampling reference design {{that provides a}} 200 Mb/s to 1000 Mb/s serial interface using the Virtex™-II Pro RocketIO ™ multi-gigabit transceiver (MGT). The reference design implements a 3 X-oversampling circuit at {{the back end of}} the MGT and is targeted for the Fibre Channel rate of 1. 0625 Gb/s. Implements PCS features, such as comma detection/alignment, 8 B/ 10 B encoding/decoding, and clock correction. Provides single-port instantiation with a 2 -byte user interface and clock correction to accommodate frequency differences between TX and RX user clocks. Supports far-end <b>loopback</b> mode <b>to</b> loop back data recovered at the user interface after comma alignment, 8 B/ 10 B decoding, and clock correction...|$|R
5000|$|Through the WPAD file, the {{attacker}} can point users' browsers {{to their own}} proxies and intercept and modify all of WWW traffic. Although a simplistic fix for Windows WPAD handling was applied in 2005, it only fixed {{the problem for the}} [...]com domain. A presentation at Kiwicon showed {{that the rest of the}} world was still critically vulnerable to this security hole, with a sample domain registered in New Zealand for testing purposes receiving proxy requests from all over the country at the rate of several a second. Several of the wpad.tld domain names (including COM, NET, ORG, and US) now point <b>to</b> the client <b>loopback</b> address <b>to</b> help protect against this vulnerability, though some names are still registered (wpad.co.uk).|$|R
40|$|Abstract — Loopback {{tests for}} a {{differential}} mixed-signal Device Under Test (DUT) have rarely been attempted, since any imbalance introduced by a Design for Test (DfT) circuitry on differential signaling delivers an imperfect sinusoidal wave to the DUT input, thereby degrading the DUT performance. In addition, this methodology inherently suffers from fault masking. These problems result in low test accuracy and serious yield loss. This paper presents a novel methodology for efficient prediction of individual DUT dynamic performance parameters with a Radio-Frequency (RF) transformer in <b>loopback</b> mode <b>to</b> overcome the imbalance problem of DfT circuitry. Cascaded RF transformer in loopback mode produces differently weighted loopback responses, {{which are used}} to characterize the DUT dynamic performance. Hardware measurement results show that this approach can be effectively used to predict the specifications of a DUT. I...|$|R
40|$|The System Console {{facilitates}} visibility {{into your}} system to enable faster debugging, and faster {{time to market}} for your FPGA. You can access the hardware modules instantiated in your FPGA. System Console andQsys provide the framework and baseline functionality {{that you need to}} compose your own sophisticated instrumentation and verification solution. You can use the System Console for the following tasks: • To start, stop, or step a Nios II or SoC processor. • To read or write Avalon Memory-Mapped slaves using special masters. • To sample the Qsys system clock and system reset signals. • <b>To</b> run JTAG <b>loopback</b> tests <b>to</b> analyze board noise problems. • To shift arbitrary instruction register and data register values to instantiated system level debug (SLD) nodes. • To write or source Tcl macros to deploy your verification solutions efficiently. • To create test platforms for streaming peripherals. • To perform low level tasks such as board bring-up and device driver debugging. Related Information System Console Online Trainin...|$|R
50|$|In {{order to}} meet the {{requirements}} of speed generally demanded by a computer game, files are indexed in a hash table using a quick, low-collision hashing algorithm. The index of a specific file within the hash table is the hash of the lowercased filename modulo the size of the hash table, allowing for quick verification of a file's existence within the archive. If multiple files within the archive have the same hash, colliding entries will follow each other in increasing index order (forming a colliding hash cluster). In order to identify the exact entry for the requested file within a colliding hash cluster, each hash table entry stores 2 additional hashes of the lowercased filename, each using the same hashing algorithm but with a different seed value, as well as a locale code and platform code. The end of a colliding hash cluster is detected either by encountering an empty hash table entry or by traversing the entire hash table (including the modulo <b>loopback)</b> back <b>to</b> the initial hash table index.|$|R
40|$|Security is a {{critical}} issue in full duplex (FD) communication systems due to the broadcast nature of wireless channels. In this paper, joint design of information and artificial noise beamforming vectors is proposed for the FD simultaneous wireless information and power transferring (FD-SWIPT) systems with <b>loopback</b> self-interference cancellation. <b>To</b> guarantee high security and energy harvesting performance of the FD-SWIPT system, the proposed design is formulated as a secrecy rate maximization problem under energy transfer rate constraints. Although the secrecy rate maximization problem is non-convex, we solve it via semidefinite relaxation and a two-dimensional search. We prove the optimality of our proposed algorithm and demonstrate its performance via simulations. Comment: Accepted in ICC 201...|$|R
30|$|In this example, the {{transition}} t 3 has two output arcs. Output arc ε _ 9 was {{generated by the}} input arc’s relationship, and output arc ε _ 8 is a <b>loopback</b> arc <b>to</b> the control rods. This loopback arc shows that the control rods need to regulate the reactor after the system produces steam with the steam generator. Since an IRL value was already determined, the IRL value for ε _ 8 stays the same. The IRL value for ε _ 8 was originally determined independently from the input IRL values, but the PNSRL model shows that this integration should {{be affected by the}} maturity of the ε _ 6 and ε _ 7. The PNSRL model offered in this article only distinguishes a basic level of integration relationship, seen as the average of all input arcs’ IRL values. Relationships between integrations have the potential of being more complex. Project managers and system engineers should take into account different types of relationships and distinguish the maturity of integrations according to their system. The PNSRL model offers a basic way to determine IRL values for indeterminate integration relationships.|$|R
40|$|Abstract—The {{augmentation}} {{of commercial}} wireless hardware with time-of-arrival (ToA) estimation enables pervasive wireless networks to serve additionally as positioning systems. ToAaugmented wireless links offer {{the ability to}} provide accurate localization in environments not served by global navigation satellite systems (GNSS) with greater accuracy than inertial sensing systems and wireless fingerprinting. In this paper we propose the augmentation of IEEE 802. 11 commercial hardware with ToA through an add-on hardware module. Two processing architectures are introduced, loopback and <b>loopback</b> with probing, <b>to</b> leverage the ToA module. The calibration of local device clocks due to unstable frequency references is also presented. Finally, a discussion of positioning algorithms with simulations demonstrates {{the efficacy of the}} proposed ToA module to provide high-precision, low-cost positioning without the addition of significant system infrastructure. I...|$|R
40|$|Abstract—Net {{compression}} {{technologies are}} widely researched {{to avoid the}} problem of state explosion. Current researches of transition refinement and subnet abstraction mainly paid attention to preserve different attributes during the transformation, usually led to very strict conditions for the subnet, so that the application of these technologies was limited. Aiming to provide the same service and interface after transformation as original module while less restricts are given, a kind of transition subnet is put forward to model complex manufacturing system. The concept “standardized interface ” is presented; transition subnets are classified into different types, the idea of “normalized subnet ” is presented; Engineering Subnet is defined and a live and normalized subnet with finite live <b>loopbacks</b> is proved <b>to</b> be an Engineering Subnet. Because of live loopbacks owned by Engineering Subnets, the same interface and service as the original module are reserved after the transformation between an Engineering Subnet and the corresponding transition, mean while fewer preconditions are required for the Engineering Subnet compared with current researches. Index Terms—Petri nets, subnet, transition, interface, loopback I...|$|R
40|$|We {{adapt the}} L-Galaxies semi-analytic model {{to follow the}} star-formation {{histories}} (SFH) of galaxies [...] by which we mean {{a record of the}} formation time and metallicities of the stars that are present in each galaxy at a given time. We use these to construct stellar spectra in post-processing, which offers large efficiency savings and allows user-defined spectral bands and dust models to be applied to data stored in the Millennium data repository. We contrast model SFHs from the Millennium Simulation with observed ones from the VESPA algorithm as applied to the SDSS- 7 catalogue. The overall agreement is good, with both simulated and SDSS galaxies showing a steeper SFH with increased stellar mass. The SFHs of blue and red galaxies, however, show poor agreement between data and simulations, which may indicate that the termination of star formation is too abrupt in the models. The mean star-formation rate (SFR) of model galaxies is well-defined and is accurately modelled by a double power law at all redshifts: SFR proportional to 1 /(x^- 1. 39 +x^ 1. 33), where x=(t_a-t) / 3. 0 Gyr, t is the age of the stars and t_a is the <b>loopback</b> time <b>to</b> the onset of galaxy formation; above a redshift of unity, this is well approximated by a gamma function: SFR proportional to x^ 1. 5 e^-x, where x=(t_a-t) / 2. 0 Gyr. Individual galaxies, however, show a wide dispersion about this mean. When split by mass, the SFR peaks earlier for high-mass galaxies than for lower-mass ones, and we interpret this downsizing as a mass-dependence {{in the evolution of the}} quenched fraction: the SFHs of star-forming galaxies show only a weak mass dependence. Comment: Accepted version of the paper, to appear in MNRAS. Compared to the original version, contains more detail on the post-processing of magnitudes, including a table of rms magnitude errors. SFHs available on Millennium database [URL]...|$|R
40|$|We {{consider}} the full-duplex (FD) two-way amplify-and-forward relay system with imperfect cancelation of loopback self-interference (SI) and investigate joint design of relay and receive beamforming for minimizing the {{mean square error}} under a relay transmit power constraint. Due <b>to</b> <b>loopback</b> channel estimation error and limitation of analog-to-digital converter, the loopback SI cannot be completely canceled. Multiple antennas at the relay can help loopback SI suppression but beamforming is required to balance between the residual SI suppression and the desired signal transmission. Moreover, the relay beamforming matrix should be updated every time slot because the residual SI in the previous time slot is amplified by the current beamforming matrix and added to the received signals from the two sources in the current time slot. We derive the optimally balanced relay beamforming and receive beamforming matrices in closed form based on minimum mean square error, {{taking into account the}} propagation of the residual loopback SI from the first to the current time slot. We also propose beamforming design using only the channels of the m latest time slots, not from the first time slot. Based on our numerical results, we also identify when FD is beneficial and propose selection between FD and half-duplex according to signal-to-noise ratio and interference-to-noise ratio. Comment: 30 pages, 15 figure...|$|R
40|$|Active {{networking}} adds programmability to {{the network}} infrastructure to promote service introduction. One approach involves active packets that carry programs rather than standard passive headers. To date, no one has proposed an active packet system that is truly practical: providing added flexibility over passive packet schemes without sacrificing either safety or efficiency. In this work, we propose a new system, SNAP (Safe and Nimble Active Packets), that strikes a useful balance. ^ First, SNAP is safe. We {{use a combination of}} language design (limited expressiveness) and safe interpretation techniques that allow us to show that SNAP exhibits robustness (resistance to malicious or buggy code), isolation (non-interference with other packets), and resource predictability. In particular, we prove that each execution of a packet program consumes at most an amount of CPU and memory resources that are linearly proportional to the program 2 ̆ 7 s length; we also show the total number of packet executions that can be caused by a packet or its descendents is bounded. ^ Second, SNAP is efficient. We designed the SNAP packet format to minimize memory overhead: most packets can be executed in-place in kernel network buffers. We show experimentally that SNAP latency and bandwidth microbenchmarks perform within a few percent of their IP-family counterparts in software routers connected by 100 Mb/s Ethernet links. SNAP incurs extremely low overhead: IP-like functionality is available at IP-like performance. ^ Finally, SNAP is flexible, despite {{the fact that we have}} limited its expressiveness. We briefly describe a compiler that translates PLAN (an earlier active packet language) into SNAP using a combination of function inlining and sending copies of the current packet over a node 2 ̆ 7 s <b>loopback</b> interface <b>to</b> emulate backward branches. Since this loopback technique consumes one unit of resource bound, we find that the resource bound field of the packet is a convenient knob for trading off tight bounds on global resource usage for increased flexibility (in terms of the amount of looping available to the packet). We also describe two new native SNAP applications: distributed denial-of-service attack detection and active video-on-demand. ...|$|R

