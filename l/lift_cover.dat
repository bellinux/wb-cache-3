2|162|Public
50|$|Millat Tractors was {{initially}} incorporated as Rana Tractors and Equipment Limited to import and market Massey Ferguson Tractors. In 1965, facilities {{were created in}} Karachi to assemble tractors from semi knocked down kits. In 1967, operations were shifted from Karachi to Lahore and in 1972, under the Economic Reforms Order, the company was nationalized and started assembling and marketing tractors {{on behalf of the}} Pakistan Tractor Corporation (PTC). In 1980, the Government decided on indigenization of the tractors and entrusted this task to Pakistan Tractor Corporation. Pakistan Tractor Corporation transferred this role of indigenization in 1981 to Millat Tractors Limited. In just one year, the company took a giant step towards self-sufficiency by setting up the first engine assembly plant in Pakistan. In 1984, sophisticated manufacturing facilities for the machining of intricate components were set up. These were previously not available in Pakistan. Currently, critical components like the engine block, sump, transmission case, axle housing, hydraulic <b>lift</b> <b>cover,</b> front axle support and center housing are all being machined successfully in-house at Millat Tractors from locally sourced castings. In 1992, the company was privatized, and Millat Tractors plant started its in house production. The establishment of this modern plant not only increased production capacity to 16,000 tractors per year on a single-shift basis. In the 2007-2008 financial year, production shot up to 27,260 tractors, the highest sales of tractors ever in Pakistan for any company at the time.|$|E
40|$|We {{present a}} {{polyhedral}} {{study of the}} complementarity knapsack problem. Traditionally, complementarity constraints are modeled by introducing auxiliary binary variables and additional constraints, and the model is Lightened by introducing strong inequalities valid for the resulting MIP. We use an alternative approach, in which we keep in the model only the continuous variables, and we tighten the model by introducing inequalities that define facets of the convex hull of the set of feasible solutions {{in the space of}} the continuous variables. To obtain the facet-defining inequalities, we extend the concepts of cover and cover inequality, commonly used in 0 - 1 programming, for this problem, and we show how to sequentially <b>lift</b> <b>cover</b> inequalities. We obtain tight bounds for the lifting coefficients, and we present two families of facet-defining inequalities that can be derived by lifting cover inequalities. We show that unlike 0 - 1 knapsack polytopes, in which different facet-defining inequalities can be derived by fixing variables at 0 or 1, and then sequentially lifting cover inequalities valid for the projected polytope, any sequentially lifted cover inequality for the complementarity, knapsack polytope can be obtained by fixing variables at 0...|$|E
40|$|AbstractCover inequalities are {{commonly}} used cutting planes for the 0 – 1 knapsack problem. This paper describes a linear-time algorithm (assuming the knapsack is sorted) to simultaneously lift a set of variables into a cover inequality. Conditions for this process to result in valid and facet-defining inequalities are presented. In many instances, the resulting simultaneously <b>lifted</b> <b>cover</b> inequality cannot be obtained by sequentially <b>lifting</b> over any <b>cover</b> inequality. Some computational results demonstrate that simultaneously <b>lifted</b> <b>cover</b> inequalities are plentiful, easy to find and can be computationally beneficial...|$|R
40|$|We {{consider}} {{the family of}} facets of the binary knapsack polytope from minimal covers. We study previous results on sequential lifting in a unifying framework and explore a class of most violated fractional <b>lifted</b> <b>cover</b> inequalities, defined by Balas and Zemel, which are more general than traditional simple <b>lifted</b> <b>cover</b> inequalities. We investigate some theoretical properties of these inequalities, propose two separation algorithms and illustrate these using several examples...|$|R
40|$|We {{investigate}} the algorithmic and implementation {{issues related to}} the e ective and e cient use of <b>lifted</b> <b>cover</b> inequalities and <b>lifted</b> GUB <b>cover</b> inequalities in a branch-and-cut algorithm for 0 - 1 integer programming. We have tried various strategies on several test problems and we identify the best ones for use in practice...|$|R
50|$|Bellows {{are widely}} used in {{industrial}} and mechanical applications such as rod boots, machinery way <b>covers,</b> <b>lift</b> <b>covers</b> and rail covers to protect rods, bearings and sealings from dirt.|$|R
40|$|We {{investigate}} the algorithmic and implementation {{issues related to}} the effective and efficient use of <b>lifted</b> <b>cover</b> inequalities and <b>lifted</b> GUB <b>cover</b> inequalities in a branch-and-cut algorithm for 0 - 1 integer programming. We have tried various strategies on several test problems and we identify the best ones for use in practice. Keywords: 0 - 1 integer programming, branch-and-cut, <b>cover</b> inequality, <b>lifting</b> October 1994 Revised August 1995 Revised October 1996 Revised October 1997 Branch-and-cut, with <b>lifted</b> <b>cover</b> inequalities as cuts, has been used successfully (CPLEX [4], OSL, see IBM [15], MINTO, see Nemhauser, Savelsbergh, and Sigismondi [18]) to solve general 0 - 1 integer programs of the form maxfcx : Ax b; x 2 B n g; where A is an integer matrix that contains knapsack rows, i. e., rows with some coefficients not equal to 0, 1,- 1, and B n is the set of n-dimensional 0 - 1 vectors. Branch-and-cut, introduced by Grotschel, Junger, and Reinelt [7] and Padberg and Rinaldi [22], is enh [...] ...|$|R
5000|$|Another large alm {{forms the}} {{relatively}} gently sloping northern ridge, {{known as the}} Unterberg. A cable car runs between this ridge and the Unterbergalm (...) , whilst the alm hut is served by a good road and ski <b>lifts</b> <b>cover</b> the entire north slope.|$|R
40|$|AbstractWe {{consider}} {{a class of}} random knapsack instances described by Chvátal, who showed that with probability going to 1, such instances require an exponential number of branch-and-bound nodes. We show that even {{with the use of}} simple <b>lifted</b> <b>cover</b> inequalities, an exponential number of nodes is required with probability going to 1...|$|R
6000|$|The <b>lifted</b> <b>cover</b> {{revealed}} two compartments {{within the}} box. [...] In {{one was a}} mechanism which resembled the works of a small clock. There also was a little battery of two dry cells. A wire ran from the clockwork {{to one of the}} poles of the battery, and from the other pole through the partition into the other compartment, a second wire returning directly to the clockwork.|$|R
40|$|We {{investigate}} several complexity {{issues related}} to branch-and-cut algorithms for 0 - 1 integer programming based on <b>lifted</b> <b>cover</b> inequalities (LCIs). We showthat given a fractional point, determining a violated LCI over all minimal covers is NPhard. The main result is that there exists a class of 0 - 1 knapsack instances for which any branch-and-cut algorithm based on LCIs has to evaluate an exponential number of nodes to prove optimality...|$|R
5000|$|D. Haran and M. Jarden, Regular <b>lifting</b> of <b>covers</b> over ample fields, Albanian Journal of Mathematics 1 (2007), 215-224.|$|R
50|$|In 2013, the old {{yard was}} <b>lifted</b> and <b>covered</b> with grass. The station {{building}} was then operated by radio station Lime FM.|$|R
6000|$|... "Mother {{sent you}} this," [...] she said, <b>lifting</b> the <b>cover</b> and {{displaying}} a nicely carved and jointed chicken to Anne's greatful eyes.|$|R
40|$|We {{consider}} {{a class of}} random knapsack instances described by Chvátal, who showed that with probability going to 1, such instances require an exponential number of branch-and-bound nodes. We show that even {{with the use of}} simple <b>lifted</b> <b>cover</b> inequalities, an exponential number of nodes is required with probability going to 1. It is not surprising that there exist integer programming (IP) instances for which solution by branch-and-bound requires an exponential number of nodes, since integer programming is an NP-complete problem while the linear programs solved at each branch-and-bound node are polynomially solvable. Examples of such instances were given by Jeroslow [5], who presented a set of simple instances of the knapsack problem which require an exponential number of branch-andbound nodes when branching on variables, and by Chvátal [1], who considered a class of random instances of the knapsack problem and showed that with probability converging to 1, such a random instance requires exponentially many branch-and-bound nodes to solve. Most modern IP solvers use branch-and-cut algorithms, which combine branchand-bound with the use of cutting planes. Gu, Nemhauser, and Savelsbergh [4] considered solving the knapsack problem with branch-and-cut. They presented a set of instances that require an exponential number of branch-and-bound nodes even with the addition of simple <b>lifted</b> <b>cover</b> inequalities. More recent work in proving exponential worst-case bounds in the presence of various cutting planes has been done by Dash [2], who proved worst-case exponential bounds in the presence of lift-and-project cuts, Chvátal-Gomory inequalities, and matrix cuts as described by Lovász and Schrijver. The work of Gu et al. and Dash is similar to Jeroslow’s work in that specific “worst-case ” examples are presented. In this paper we build on Chvátal’s results, which are concerned with average-case performance over a class of random instances. We add all simple <b>lifted</b> <b>cover</b> inequalities to his formulation and show that an exponential number of branch-and-bound nodes is required with probability converging to 1. This result is not suggested by the NP-hardness of binary knapsack problems, because cover inequality separation for these problems is NP-hard [6]. ...|$|R
40|$|A {{cardinality}} constrained {{knapsack problem}} is a continuous knapsack problem in which {{no more than a}} specified number of nonnegative variables are allowed to be positive. This structure occurs, for example, in areas as finance, location, and scheduling. Traditionally, cardinality constraints are modeled by introducing auxiliary 0 - 1 variables and additional constraints that relate the continuous and the 0 - 1 variables. We use an alternative approach, in which we keep in the model only the continuous variables, and we enforce the cardinality constraint through a specialized branching scheme and the use of strong inequalities valid for the convex hull of the feasible set in the space of the continuous variables. To derive the valid inequalities, we extend the concepts of cover and cover inequality, commonly used in 0 - 1 programming, to this class of problems, and we show how cover inequalities can be lifted to derive facet-defining inequalities. We present three families of non-trivial facet-defining inequalities that are <b>lifted</b> <b>cover</b> inequalities. Finally, we report computational results that demonstrate the effectiveness of <b>lifted</b> <b>cover</b> inequalities and the superiority of the approach of not introducing auxiliary 0 - 1 variables over the traditional MIP approach for this class of problems...|$|R
40|$|The 0 - 1 Multidimensional Knapsack Problem (0 - 1 MKP) is a well- known (and {{strongly}} N P -hard) {{combinatorial optimization}} problem with many applications. Up to now, the ma jority of upper bounding techniques for the 0 - 1 MKP {{have been based}} on Lagrangian or surro- gate relaxation. We show that good upper bounds can be obtained by a cutting plane method based on <b>lifted</b> <b>cover</b> inequalities (LCIs). As well as using traditional LCIs, we use some new ‘global’ LCIs, which take the whole constraint matrix into account...|$|R
50|$|Under {{the tower}} is the baptistery with a font. The font {{is made from}} Thessaly marble, and has a <b>lifting</b> oak <b>cover</b> {{decorated}} with the carvings of eight saints.|$|R
6000|$|... "Gently does it, old gentleman," [...] he repeated, <b>lifting</b> the <b>covers</b> {{from the}} dishes, and looking under them {{one after the}} other all round the table. [...] "Gently does it!" ...|$|R
6000|$|... 'Pearls,' said Jesper; 'I'm {{going to}} the palace to win the princess with them.' And in case she might not believe him, he <b>lifted</b> the <b>cover</b> and let her see them.|$|R
40|$|Valid inequalities for 0 - 1 {{knapsack}} polytopes often {{prove useful}} when tackling hard 0 - 1 Linear Programming problems. To generate such inequalities, one needs separation algorithms for them, i. e., rou- tines for detecting {{when they are}} violated. We present new exact and heuristic separation algorithms for several classes of inequalities, namely <b>lifted</b> <b>cover,</b> extended <b>cover,</b> weight and <b>lifted</b> pack inequalities. Moreover, we show how to improve a recent separation algorithm for the 0 - 1 knapsack polytope itself. Extensive computational results, on MIPLIB and OR Library instances, show the strengths and limitations of the inequalities and algorithms considered...|$|R
60|$|I <b>lifted</b> {{the breakfast}} <b>cover,</b> and saw before me a damnatory red herring.|$|R
60|$|Margery {{seized the}} idea in a moment. She pressed through the rift into the tree, <b>lifted</b> the <b>cover</b> of the box, and, behold, there was {{disclosed}} within a lovely white apparition in a somewhat flattened state. It was the ball-dress.|$|R
6000|$|... "These are feathers; <b>lift</b> the <b>covers</b> {{carefully}} or you'll be half smothered, {{they fly}} about so," [...] said Mrs. Brown, {{as the men}} came to some casks of cartridges and flints, which she had artfully ripped up several pillows to conceal.|$|R
60|$|Trotty {{was going}} to <b>lift</b> up the <b>cover</b> at once, in a great hurry, when she gaily {{interposed}} her hand.|$|R
60|$|Instantly he {{knew that}} he was the victim of a plot, and that far from rescuing his son he had himself fallen into the hands of his enemies. Though he {{immediately}} endeavoured to reach the hatch and <b>lift</b> the <b>cover,</b> he was unable to do so.|$|R
40|$|Dissertação (mestrado) - Universidade Federal de Santa Catarina, Centro Tecnológico, Programa de Pós-Graduação em Engenharia de Automação e SistemasThe lift-gas {{allocation}} {{problem with}} well-separator routing constraints is a mixed-integer nonlinear program of considerable complexity. To this end, a mixed-integer linear formulation (compact) is obtained by piecewise-linearizing the nonlinear curves, using binary variables {{to express the}} linearization and routing decisions. A new formulation (integrated) combining the decisions on linearization and routing is developed by using a single type of binary variable. The structures of both formulations are explored to generate <b>lifted</b> <b>cover</b> cuts. Numerical tests show {{that the use of}} cutting planes in a cut-and-branch scheme accelerates the resolution time. The solution of the integrated formulation using cutting-plane generation is faster in spite of having more variables than the compact formulatio...|$|R
40|$|Valid inequalities for 0 - 1 {{knapsack}} polytopes often {{prove useful}} when tackling hard 0 - 1 Linear Programming problems. To use such inequalities effectively, one needs separation algorithms for them, i. e., routines for detecting {{when they are}} violated. We show that the separation problems for the so-called extended cover and weight inequalities can be solved exactly in O(nb) time and O((n + amax) b) time, respectively, where n {{is the number of}} items, b is the knapsack capacity and amax is the largest item weight. We also present fast and effective separation heuristics for the extended <b>cover</b> and <b>lifted</b> <b>cover</b> inequalities. Finally, we present a new exact separation algorithm for the 0 - 1 knapsack polytope itself, which is faster than existing methods. Extensive computational results are also given...|$|R
5000|$|In 1584 Reginald Scot wrote [...] "The Discoverie of Witchcraft", {{within which}} he {{describes}} tricks with balls. He recommends using candlesticks with a hollow underneath, or bowls, or salt cellars covers to cover the balls. He describes the routine with 3 or 4 balls, and as many covers. He describes placing a ball under each <b>cover,</b> <b>lifting</b> the <b>covers</b> to show the balls vanished, and then having the balls all re-appear under one cover. Although Scot describes a method, as a non-magician himself it cannot be trusted to be accurate, and is considered by magicians to be unlikely {{as some of the}} moves described would be impossible to perform invisibly.|$|R
50|$|It opens {{a little}} later than other ski resorts, with an {{operating}} season from mid-July to mid-October. The <b>lifted</b> area <b>covers</b> an elevation range of 1540 to 1768 metres, and it caters primarily for skiers of intermediate ability, citing a distribution of 25% beginner, 55% intermediate and 20% advanced level.|$|R
60|$|At a {{few minutes}} after nine, the {{following}} morning, the Marquis entered the room where breakfast was usually served. The Duchess, in travelling clothes and a hat, was <b>lifting</b> the <b>covers</b> from the silver dishes upon the sideboard, with a fork in her hand. She welcomed him a little shortly.|$|R
60|$|And {{the willing}} {{creature}} <b>lifted</b> off the <b>cover</b> by erecting {{the upper half}} of his head till the snout of him smote the ceiling.|$|R
2500|$|Three {{cable cars}} {{run to the}} top of the Zugspitze. The first, the Tyrolean Zugspitze Cable Car, was built in 1926 by the German company Adolf Bleichert & Co [...] and {{terminated}} on an arête below the summit at 2.805 m.a.s.l, the so-called Kammstation, before the terminus was moved to the actual summit at 2.951 m.a.s.l. in 1991. A rack railway, the Bavarian Zugspitze Railway, runs inside the northern flank of the mountain and ends on the Zugspitzplatt, from where a second cable car takes passengers to the top. The rack railway and the Eibsee Cable Car, the third cableway, transport an average of 500,000 people to the summit each year. In winter, nine ski <b>lifts</b> <b>cover</b> the ski area on the Zugspitzplatt. The weather station, opened in 1900, and the research station in the Schneefernerhaus are mainly used to conduct climate research.|$|R
40|$|The Generalized Assignment Problem (GAP) {{consists}} {{of finding a}} maximal profit assignment of n tasks over m capacity constrained agents, whereby each task has to be processed by only one agent. An improved implementation of the standard procedure for generating <b>lifted</b> <b>cover</b> inequalities describing an approximation to the convex hull of the knapsack constraints in the GAP polytope is developed. This improvement yields a good upper bound and closes the gap by an additional 15 % on average. Based on this result, 2 heuristics are proposed for finding close-to-optimal solutions, giving a tight lower bound. Computational results {{on a set of}} 60 representative and highly capacitated problems indicate that these solutions lie within 0. 06 % of the optimum. After applying some pre-processing techniques and using the obtained bounds, the generated instances are solved to optimality by Branch-and-Bound within reasonable computing timestatus: publishe...|$|R
50|$|In December 2014, {{designs for}} the major {{transformation}} were released, including three <b>lifts,</b> a <b>covered</b> walkway and bike parking facilities. Subject to community feedback, planning approval and contract award, work will start {{in the first half}} of 2015. In May 2015 it was announced that the plans had been approved and that tenders were being assessed.|$|R
6000|$|As {{she spoke}} Christie <b>lifted</b> the <b>cover</b> {{of the box}} old Hester had just brought in, and {{displayed}} a cashmere wrapper, creamy-white, silk-lined, down-trimmed, and delicately relieved by rosy knots, like holly berries lying upon snow. Helen looked at it without a word for several minutes, then gathering up the ribbons, with a strange smile, she said: ...|$|R
