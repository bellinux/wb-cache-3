19|227|Public
5|$|Different tactics {{have been}} used on iOS devices, such as {{exploiting}} iCloud accounts and using the Find My iPhone system to <b>lock</b> <b>access</b> to the device. On iOS 10.3, Apple patched a bug in the handling of JavaScript pop-up windows in Safari that had been exploited by ransomware websites.|$|E
5|$|Netham Lock is {{the point}} at Netham in Bristol at which boats from the River Avon, gain access to Bristol's Floating Harbour. Construction started in 1804 to build the tidal New Cut, where it is joined by the River Malago, and divert the Avon along the Feeder Canal to the harbour; a system {{designed}} and built by William Jessop and later improved by Isambard Kingdom Brunel. A weir carries the river into the New Cut and boats use the adjacent <b>lock.</b> <b>Access</b> to the harbour is only possible during {{the day when the}} lock keeper will open the gates unless the water level in the river between Netham and Hanham is above or below the level of the harbour. Netham Lock and the weir form part of Bristol's flood defence mechanisms and it was announced in December 2008 that they would be upgraded as part of the £11 million City Docks Capital Project.|$|E
25|$|A mooring used {{to secure}} a Narrowboat (capable of {{traversing}} narrow UK canals and narrow locks) overnight, during off boat excursions or prolonged queuing for canal <b>lock</b> <b>access.</b> Water height with minimal exceptions, remain constant (not-tidal); there is water height variance {{in close proximity to}} locks.|$|E
5000|$|... 1853: Book Cover Portrait of James Reid (1780-1865), Rector of Trinity Church in {{the village}} of Frelighsburg, Quebec, Canada, adapted from {{portrait}} by F. W. <b>Lock.</b> <b>Accessed</b> 2016-02-13 ...|$|R
50|$|A tidal <b>lock</b> {{provides}} <b>access</b> {{for boats}} through the Eider Barrage. The fishing port of Tönning lies 11 km upstream of the barrier, while Friedrichstadt is 15 km further upstream. At Friedrichstadt a <b>lock</b> gives <b>access</b> to the River Treene.|$|R
50|$|The site is kept <b>locked</b> and <b>access</b> is {{restricted}} to HMWT members.|$|R
25|$|Locks can {{be applied}} on {{different}} levels of granularity—on entire tables, pages, or even on a per-row basis on tables. For indexes, it can either be on the entire index or on index leaves. The level of granularity to be used is defined on a per-database basis by the database administrator. While a fine-grained locking system allows more users to use the table or index simultaneously, it requires more resources, so it does not automatically yield higher performance. SQL Server also includes two more lightweight mutual exclusion solutions—latches and spinlocks—which are less robust than locks but are less resource intensive. SQL Server uses them for DMVs and other resources that are usually not busy. SQL Server also monitors all worker threads that acquire locks {{to ensure that they}} do not end up in deadlocks—in case they do, SQL Server takes remedial measures, which in many cases are to kill one of the threads entangled in a deadlock and roll back the transaction it started. To implement locking, SQL Server contains the Lock Manager. The Lock Manager maintains an in-memory table that manages the database objects and locks, if any, on them along with other metadata about the <b>lock.</b> <b>Access</b> to any shared object is mediated by the lock manager, which either grants access to the resource or blocks it.|$|E
2500|$|The next {{development}} was at Ellesmere Port, where the Manchester Ship Canal {{cut off the}} Port from the River Mersey. From 16 July 1891, all traffic from the port had to pass along the canal, and entered the river through Eastham <b>Lock.</b> <b>Access</b> to the river had previously been by a tidal basin, but this was fitted with double gates where it connected to the ship canal. The Shropshire Union spent £37,850 constructing a new quay next to the gates, [...] long, and suitable for ships up to 4,000 tons. While the ship canal was under construction, the Shropshire Union investigated the cost of upgrading their line from Ellesmere Port to Autherley to take larger barges. Jebb estimated that it would cost around £13,500 per mile (£8,400 per km), so the total cost would have been £891,475. In the autumn of 1890, they were discussing plans for a large canal from the Mersey to Birmingham via the Potteries with the North Staffordshire Railway. Neither scheme came to fruition, but the Shropshire Union spent {{large amounts of money}} on building better wharves and warehouses at many of the Pottery towns.|$|E
50|$|A mooring used {{to secure}} a Narrowboat (capable of {{traversing}} narrow UK canals and narrow locks) overnight, during off boat excursions or prolonged queuing for canal <b>lock</b> <b>access.</b> Water height with minimal exceptions, remain constant (not-tidal); there is water height variance {{in close proximity to}} locks.|$|E
50|$|However, {{programs}} that use multithreading {{need to take}} extra care of objects shared between threads, <b>locking</b> <b>access</b> to shared methods or blocks when they are used {{by one of the}} threads. Locking a block or an object is a time-consuming operation {{due to the nature of}} the underlying operating system-level operation involved (see concurrency control and lock granularity).|$|R
50|$|The cave is <b>locked</b> and <b>access</b> is {{controlled}} by the Charterhouse Caving Company.|$|R
5000|$|Physical {{security}} describes {{security measures}} {{that are designed}} to deny unauthorized access to facilities, equipment and resources and to protect personnel and property from damage or harm (such as espionage, theft, or terrorist attacks). Physical security involves the use of multiple layers of interdependent systems which include CCTV surveillance, security guards, protective barriers, <b>locks,</b> <b>access</b> control protocols, and many other techniques.|$|R
50|$|Different tactics {{have been}} used on iOS devices, such as {{exploiting}} iCloud accounts and using the Find My iPhone system to <b>lock</b> <b>access</b> to the device. On iOS 10.3, Apple patched a bug in the handling of JavaScript pop-up windows in Safari that had been exploited by ransomware websites.|$|E
50|$|Mooring {{bollards}} {{are seldom}} exactly cylindrical, but typically {{have a larger}} diameter near the top to discourage mooring warps (docklines) from coming loose. Single bollards sometimes include a cross rod to allow the mooring lines to be bent into a figure eight. Small mushroom-bollards are found on lock approaches for advancing boats waiting for <b>lock</b> <b>access.</b>|$|E
50|$|After the New Dock was opened, the Old Dock and its {{cumbersome}} <b>lock</b> <b>access</b> to {{the canal}} was used less and less. From 1908 the old entrance was abandoned and the Old Dock became used for ship repair. After age, storm and tide damage {{led to the}} gates being removed and sealed permanently in the 1990s, the dock water level was raised {{to that of the}} canal and the locks could also be abandoned.|$|E
50|$|The {{reserve is}} kept <b>locked</b> and <b>access</b> can be {{arranged}} with the Wildlife Trust warden.|$|R
50|$|The {{entrance}} to the cave is kept <b>locked,</b> and <b>access</b> {{is controlled by the}} Charterhouse Caving Company.|$|R
40|$|This report {{includes}} a history and profile of Bldg. 7025 {{before and after}} completion of deactivation. It also discusses turnover items, such as the Postdeactivation Surveillance & Maintenance Plan, remaining hazardous materials, radiological controls, Safeguards and Security, quality assurance, facility operations, and supporting documentation in the EM- 60 Turnover package. Other than minimal S&M activities, the building will be unoccupied and the exterior doors <b>locked</b> (<b>access</b> only for the required S&M) ...|$|R
50|$|XCHG {{may not be}} as {{efficient}} as one may think. For example, in x86 processors, XCHG will implicitly <b>lock</b> <b>access</b> to any operands in memory to keep the operation atomic, and so may not be efficient when swapping memory. Such locking is important when it is used to implement thread-safe synchronization, as in mutexes. However, an XCHG is usually the fastest way to swap two machine-size words residing in registers. Register renaming may also be used to swap registers efficiently.|$|E
50|$|On December 9, 2015, Croma Security Solutions Group PLC {{formally}} {{announced its}} acquisition of Access Locksmiths Ltd t/a Access Key & <b>Lock.</b> <b>Access</b> Key & Lock was founded and owned by former County Locksmiths employee Mark Whettingsteel, who will now join The Board as an Executive Director, {{and act as}} Managing Director for the newly formed 'Croma Locksmiths & Security Solutions' Division. In the financial year prior to the acquisition, Access' turnover was GBP2.4 million, with gross profits of GBP300,000. All 38 staff will join the 500+ strong team already employed by the company.|$|E
50|$|Netham Lock is {{the point}} at Netham in Bristol at which boats from the River Avon, gain access to Bristol's Floating Harbour. Construction started in 1804 to build the tidal New Cut, where it is joined by the River Malago, and divert the Avon along the Feeder Canal to the harbour; a system {{designed}} and built by William Jessop and later improved by Isambard Kingdom Brunel. A weir carries the river into the New Cut and boats use the adjacent <b>lock.</b> <b>Access</b> to the harbour is only possible during {{the day when the}} lock keeper will open the gates unless the water level in the river between Netham and Hanham is above or below the level of the harbour. Netham Lock and the weir form part of Bristol's flood defence mechanisms and it was announced in December 2008 that they would be upgraded as part of the £11 million City Docks Capital Project.|$|E
50|$|Costruzioni Italiane Serrature e Affini, {{also known}} by the acronym CISA, is an Italian {{manufacturer}} of <b>locking</b> and <b>access</b> control systems.|$|R
50|$|The Berendrecht Lock is the world's {{second largest}} <b>lock,</b> giving <b>access</b> to the right-bank docks of the Port of Antwerp in Belgium.|$|R
50|$|At Strasen, at {{the eastern}} end of the lake, a canal and <b>lock</b> gives <b>access</b> to the Ellbogensee and the navigable River Havel.|$|R
50|$|Locks can {{be applied}} on {{different}} levels of granularity—on entire tables, pages, or even on a per-row basis on tables. For indexes, it can either be on the entire index or on index leaves. The level of granularity to be used is defined on a per-database basis by the database administrator. While a fine-grained locking system allows more users to use the table or index simultaneously, it requires more resources, so it does not automatically yield higher performance. SQL Server also includes two more lightweight mutual exclusion solutions—latches and spinlocks—which are less robust than locks but are less resource intensive. SQL Server uses them for DMVs and other resources that are usually not busy. SQL Server also monitors all worker threads that acquire locks {{to ensure that they}} do not end up in deadlocks—in case they do, SQL Server takes remedial measures, which in many cases are to kill one of the threads entangled in a deadlock and roll back the transaction it started. To implement locking, SQL Server contains the Lock Manager. The Lock Manager maintains an in-memory table that manages the database objects and locks, if any, on them along with other metadata about the <b>lock.</b> <b>Access</b> to any shared object is mediated by the lock manager, which either grants access to the resource or blocks it.|$|E
40|$|Physical keys {{made from}} metal or woods {{have been used}} for centuries to operate locks. The {{routines}} for operating a lock did not change significantly by the time. Keys have been carried, stored, lost, searched, lent, and copied. The main intent of locking is making sure that the belongings are kept safe. Hence, security has always been main consideration. Although mechanical <b>Lock</b> <b>Access</b> Control Systems are easy and cost effective to implement, they are insecure and expensive to maintain. Traditional Digital <b>Lock</b> <b>Access</b> Control systems may decrease the problems of mechanical <b>lock</b> <b>access</b> control systems. However, they are still vulnerable to attacks and the costs are usually high. Smart <b>Lock</b> <b>Access</b> Control Systems decrease the security risks and costs caused by fetching, storing, and carrying the physical keys. They also enable distribution of access rights and monitoring activities online. Smart lock solutions are cost effective to implement since they use existing wireless Internet structure (such as home WiFi) and electric locks. A typical Smart <b>Lock</b> <b>Access</b> Control System includes three components: a lock controller which is a microcontroller for operating the electric lock, cloud servers for granting access to the users and monitor activities, and finally a mobile phone which is used as a gateway between the cloud servers and lock controller. This thesis work designs and implements an Android Library for smart phones which will be included in mobile applications to communicate with the lock controller and cloud servers of the system...|$|E
40|$|For {{datacenter}} {{applications that}} require tight synchronization, transactions are commonly employed for achieving concurrency while preserving correctness. Unfortunately, distributed transactions {{are hard to}} scale due to the decentralized lock acquisition and coordination protocols they employ. In this paper, we show {{that it is possible}} to achieve scalability for distributed transactions by using a lock broker architecture, and present the design and development of such a framework, called PANOPTICON. Panopticon achieves scalability by divorcing locks from the data items and striving to improve <b>lock</b> <b>access</b> locality. A lock can be hosted at the lock broker or at a different server than the server that hosts the corresponding data item. The lock broker mediates the access to data shared across servers by migrating the associated locks like tokens, and in the process gets to learn about the access patterns of transactions. We show that the broker can drastically improve the <b>lock</b> <b>access</b> locality and, hence, the performance of distributed transactions by employing simple rules. Our experiments show that Panopticon performed significantly better than distributed transactions as the the number of data items and number of servers involved in transactions increase. Moreover, as the history locality (the probability of using the same objects in consecutive transactions) increase, Panopticon’s lock migration strategies improved lock-access locality and resulted in significantly better performance. ...|$|E
50|$|An {{upgraded}} kernel with optimized kernel resource <b>locking</b> and <b>access</b> control lists, {{and with}} support for 64-bit userland address spaces on machines with 64-bit processors.|$|R
50|$|It {{lies on the}} A4 {{road and}} River Avon, to which the Saltford and Kelston <b>locks</b> provide <b>access.</b> The low-lying area is prone to flooding.|$|R
5000|$|Anton's Gowt {{is at the}} {{junction}} of the River Witham and the Frith Bank Drain (part of the Witham Navigable Drains) [...] - [...] Anton's Gowt <b>Lock</b> provides <b>access</b> between these two waterways.|$|R
40|$|With the use {{of short}} range {{contactless}} technology - NFC (Near Field Com- munication) a system, which contains an electronic lock with microcontroller, a mobile application and a web service, was developed. The system enables us to unlock an electronic lock with a smartphone, to give temporary access to other people and to log the date {{and the location of}} <b>lock</b> <b>access.</b> To prevent illegitimate access, the system implements security mechanisms with the help of symmetric and asymmetric cryptography and hashing. In the thesis, TI series MSP 430 microcontroller and TI RF 430 semi-passive NFC tag are used. Web service runs on GlassFish application server and mobile application runs on Android operating system. AES, RSA and SHA cryptographic algorithms are implemented to ensure security...|$|E
40|$|Software {{transactional}} memory (STM) is {{a promising}} programming paradigm for shared memory multithreaded programs. In order for STMs {{to be adopted}} widely for performance critical software, understanding and improving the cache performance of applications running on STM becomes increasingly crucial, as the performance gap between processor and memory continues to grow. In this paper, we present the most detailed experimental evaluation to date, of the cache behavior of STM applications and quantify {{the impact of the}} different STM factors on the cache misses experienced by the applications. We find that STMs are not cache friendly, with the data cache stall cycles contributing to more than 50 % of the execution cycles in a majority of the benchmarks. We find that on an average, misses occurring inside the STM account for 62 % of total data cache miss latency cycles experienced by the applications and the cache performance is impacted adversely due to certain inherent characteristics of the STM itself. The above observations motivate us to propose a set of specific compiler transformations targeted at making the STMs cache friendly. We find that STM's fine grained and application unaware locking is a major contributor to its poor cache behavior. Hence we propose selective Lock Data co-location (LDC) and Redundant <b>Lock</b> <b>Access</b> Removal (RLAR) to address the <b>lock</b> <b>access</b> misses. We find that even transactions that are completely disjoint access parallel, suffer from costly coherence misses caused by the centralized global time stamp updates and hence we propose the Selective Per-Partition Time Stamp (SPTS) transformation to address this. We show that our transformations are effective in improving the cache behavior of STM applications by reducing the data cache miss latency by 20. 15 % to 37. 14 % and improving execution time by 18. 32 % to 33. 12 % in five of the 8 STAMP applications...|$|E
40|$|Shared memory {{programs}} {{guarantee the}} correctness of concurrent accesses to shared data using interprocessor synchronization operations. The most common synchronization operators are locks, which are traditionally implemented via {{a mix of}} shared memory accesses and hardware synchronization primitives like test-and-set. In this paper, we argue that synchronization operations implemented using fast message passing and kernelembedded lock managers are an attractive alternative to dedicated synchronization hardware. We propose three message passing lock (MP-LOCK) algorithms (centralized, distributed, and reactive) and provide implementation guidelines. MP-LOCKs reduce the design complexity and runtime occupancy of DSM controllers and can exploit software's inherent flexibility to adapt to differing applications <b>lock</b> <b>access</b> patterns. We compared the performance of MP-LOCKs with two common shared memory lock algorithms: test-and-test-and-set and MCS locks and found that MP-LOCKs scale better [...] ...|$|E
5000|$|Lemos, Robert. February 10, 2012. Got remote <b>access?</b> <b>Lock</b> it down. InfoWorld.|$|R
50|$|Saul {{starts to}} {{question}} Allison {{as to what}} happened at the university but is interrupted when a doctor arrives to drain her wound. Bibi's team enters the train station. Posing as employees, they start closing and <b>locking</b> <b>access</b> gates. Referencing a photo she took from the apartment, Carrie spots Qasim. While attempting to get a text message to Saul, she loses track of Qasim's whereabouts. When some bystanders tell her that a man jumped down to the subway tracks, Carrie ventures into the tunnel with gun drawn. Saul receives Carrie's text and rushes back to Allison's hospital room only to discover that she is gone.|$|R
50|$|Special duct loading {{conditions}} may occur outside of dead, live, dust and temperature conditions. Ductwork associated with coal mills, coke grinding facilities, {{and to some}} extent grain processing facilities, may be subject to explosive dusts. Ductwork designed for explosive dust is typically designed for 50 psi internal pressure, and will typically have one explosion relief one vent per duct section. the likelihood of a dust explosion on an indirect coal mill system is 100%, over time. This can generate a plum of fire 5 ft. to 15 ft. in diameter, and 20 ft. to 30 ft. long. Therefore access to areas surrounding explosion vents shall limit personal <b>access</b> with <b>locked</b> <b>access.</b>|$|R
