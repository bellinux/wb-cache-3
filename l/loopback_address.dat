16|11|Public
50|$|On most {{computer}} systems, localhost resolves to the IP address 127.0.0.1, {{which is}} the most commonly used IPv4 <b>loopback</b> <b>address,</b> and to the IPv6 <b>loopback</b> <b>address</b> ::1.|$|E
50|$|The <b>loopback</b> <b>address,</b> 0000:0000:0000:0000:0000:0000:0000:0001, may be {{abbreviated}} to ::1 by using both rules.|$|E
50|$|The {{localhost}} (<b>loopback)</b> <b>address,</b> 0:0:0:0:0:0:0:1, and the IPv6 unspecified address, 0:0:0:0:0:0:0:0, {{are reduced}} to ::1and ::, respectively.|$|E
50|$|The IPv4 <b>loopback</b> <b>addresses</b> are {{reserved}} within the IPv4 namespace by the IETF Special Use IPv4 Addresses standard (RFC 5735). The reservation {{can be traced}} back to the November, 1986 Assigned Numbers standard (RFC 990).|$|R
5000|$|When a name {{resolver}} {{receives an}} address (A or AAAA) query for localhost, it should return the appropriate <b>loopback</b> <b>addresses,</b> and negative responses {{for any other}} requested record types. Queries for localhost should not be sent to caching name servers.|$|R
50|$|Various Internet Engineering Task Force (IETF) {{standards}} {{reserve the}} IPv4 address block 127.0.0.0/8, in CIDR notation and the IPv6 address ::1 for this purpose. The most common IPv4 address used is 127.0.0.1. Commonly these <b>loopback</b> <b>addresses</b> are mapped to the hostnames, localhost or loopback.|$|R
5000|$|... ::1/128 {{represents}} the IPv6 <b>loopback</b> <b>address.</b> Its prefix size is 128, {{the size of}} the address itself.|$|E
5000|$|Applications may {{resolve the}} name to a <b>loopback</b> <b>address</b> themselves, or pass it to the local name {{resolver}} mechanisms.|$|E
5000|$|An IPv4 or IPv6 address query for {{the name}} {{localhost}} must always resolve to the respective <b>loopback</b> <b>address,</b> which is specified in a separate standard.|$|E
50|$|This {{example only}} {{contains}} entries for the <b>loopback</b> <b>addresses</b> {{of the system}} and their host names, a typical default content of the hosts file. The example illustrates that an IP address may have multiple host names (localhost and loopback), and that a host name may be mapped to both IPv4 and IPv6 IP addresses, as shown on the first and second lines respectively.|$|R
5000|$|The name {{localhost}} is {{a commonly}} defined hostname for the loopback interface in most TCP/IP systems, resolving to the IP addresses [...] in IPv4 and [...] for IPv6. As a top-level domain, the name {{has traditionally been}} defined statically in host DNS implementations with address records (A and AAAA) pointing to the same <b>loopback</b> <b>addresses.</b> Any other use conflicts with widely deployed algorithms relying on this convention.|$|R
2500|$|If {{two or more}} routers {{tie with}} the highest {{priority}} setting, the router sending the Hello with the highest RID (Router ID) wins. NOTE: a RID is the highest logical (<b>loopback)</b> IP <b>address</b> configured on a router, if no logical/loopback IP address is set then the Router uses the highest IP address configured on its active interfaces. [...] (e.g. 192.168.0.1 would be higher than 10.1.1.2).|$|R
50|$|However, it {{may also}} be {{resolved}} with the Domain Name System (DNS).Localhost may be mapped to other IPv4 loopback addresses, and additional names may be assigned to any <b>loopback</b> <b>address.</b>|$|E
50|$|Null routes are {{typically}} configured {{with a special}} route flag, but can also be implemented by forwarding packets to an illegal IP address such as 0.0.0.0, or the <b>loopback</b> <b>address.</b>|$|E
5000|$|... ::1/128 — The <b>loopback</b> <b>address</b> is a unicast {{localhost}} address. If {{an application}} {{in a host}} sends packets to this address, the IPv6 stack will loop these packets back on the same virtual interface (corresponding to 127.0.0.1/8 in IPv4).|$|E
40|$|Issues with Private IP Addressing in the Internet The {{purpose of}} this {{document}} {{is to provide a}} discussion of the potential problems of using private, RFC 1918, or non-globally routable addressing within the core of a Service Provider (SP) network. The discussion focuses on link addresses and, to a small extent, <b>loopback</b> <b>addresses.</b> While many of the issues are well recognised within the ISP community, {{there appears to be no}} document that collectively describes the issues. Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741. Information about the current status of this document, any errata, and how to provide feedback on it may be obtained a...|$|R
50|$|Implementations of the Internet Protocol Suite {{include a}} virtual network {{interface}} through which network applications can communicate when executing {{on the same}} machine. It is implemented entirely within the operating system's networking software and passes no packets to any network interface controller. Any traffic that a computer program sends to a <b>loopback</b> IP <b>address</b> is simply and immediately passed back up the network software stack {{as if it had}} been received from another device.|$|R
50|$|There is an {{informal}} protocol for the addresses returned by DNSBL queries which match. Most DNSBLs return an {{address in the}} 127.0.0.0/8 IP <b>loopback</b> network. The <b>address</b> 127.0.0.2 indicates a generic listing. Other addresses in this block may indicate something specific about the listing—that it indicates an open relay, proxy, spammer-owned host, etc. For details see RFC 5782.|$|R
50|$|The {{processing}} of any packets {{sent to a}} <b>loopback</b> <b>address</b> is implemented in the link layer of the TCP/IP stack. Such packets are never delivered to any network interface controller (NIC) or device driver, which permits testing of software {{in the absence of}} any hardware network interfaces.|$|E
50|$|Link-local {{addresses}} and the <b>loopback</b> <b>address</b> have link-local scope, {{which means they}} can only be used on a single directly attached network (link). All other addresses (including Unique local addresses) have global (or universal) scope, which means they are (or could be) globally routable, {{and can be used}} to connect to addresses with global scope anywhere, or to addresses with link-local scope on the directly attached network.|$|E
50|$|The {{releases}} of the MySQL database {{differentiate between the}} use of the hostname localhost {{and the use of the}} addresses 127.0.0.1 and ::1. When using localhost as the destination in a client connector interface of an application, the MySQL application programming interface connects to the database using a Unix domain socket, while a TCP connection via the <b>loopback</b> <b>address</b> requires the direct use of the explicit address.|$|E
40|$|This {{document}} {{describes a}} control-plane network design for general scalable GMPLS net-works. We use the Circuit-Switched High-speed End-to-End ArcHitecture (CHEETAH) network {{as an example}} to illustrate how we implemented our design. The CHEETAH network is a Syn-chronous Optical NETwork (SONET) based network that uses Sycamore SN 16000 switches. While some of the specifics related to this switch may not be applicable to other switches, in gen-eral, most of the concepts presented here will apply to any GMPLS network. Our control-plane network design uses the Internet to create out-of-band channels between end hosts and GMPLS switches {{as well as between}} neighboring switches. First, we consider the question of what type of IP addresses, static or dynamic, public or private, to assign to control-plane interfaces on switches and end hosts. Our conclusion is that we require static public IP addresses if the goal is to create scalable GMPLS networks. Given the shortage of such IPv 4 addresses, we recommend the use of IPv 6. Second, we note that the Router ID/Switch IP <b>loopback</b> interface <b>addresses</b> assigned to GMPLS switches should be advertised through routing protocols, allowing them to be reachable through at least one interface on the Internet. Third, to secure the control-plane channels, we describe the use of IPsec tunnels. Using open-source Linux software called Openswan on the end hosts and Juniper NS- 5 XT devices to protect control ports of switches, we use host based authen-tication and encryption of RSVP-TE and OSPF-TE messages. Finally, we propose a mechanism to handle IP and MAC addressing on the data-plane in GMPLS networks. When an end-to-end circuit/VC is established, conventional IP networking dictates that the two ends of the Ethernet connection should be in the same IP subnet. But this leads to an unscalable solution requiring the data-plane interfaces of all hosts on a GMPLS network to be assigned addresses within one sub-net. Our solution is to assign IP addresses to these interfaces in different subnets, based on th...|$|R
50|$|Any IP {{datagram}} with {{a source}} or destination address set to a <b>loopback</b> <b>address</b> must not appear {{outside of a}} computing system, or be routed by any routing device. Packets received on an interface with a loopback destination address must be dropped. Such packets are {{sometimes referred to as}} Martian packets. As with other bogus packets, they may be malicious and any problems they might cause can be avoided by applying bogon filtering.|$|E
50|$|In contrast, the IETF IP Version 6 Addressing Architecture {{standard}} (RFC 4291) reserves {{the single}} IPv6 <b>loopback</b> <b>address</b> ::1 within the IPv6 namespace. The standard precludes {{the assignment of}} that address to any physical interface, {{as well as its}} use as the source or destination address in any packet sent to remote hosts. Any such packet that is erroneously transmitted is not supposed to be routed, and should be dropped by all hosts that receive it.|$|E
50|$|Using a DNS {{sinkhole}} {{by manipulating}} the hosts file exploits {{the fact that}} most operating systems store a file with IP address, domain name pairs which is consulted by most browsers before using a DNS server to look up a domain name. By assigning the <b>loopback</b> <b>address</b> to each known ad server, the user directs traffic intended to reach each ad server to the local machine or to a virtual black hole of /dev/null or bit bucket.|$|E
5000|$|Through the WPAD file, the {{attacker}} can point users' browsers {{to their own}} proxies and intercept and modify all of WWW traffic. Although a simplistic fix for Windows WPAD handling was applied in 2005, it only fixed {{the problem for the}} [...]com domain. A presentation at Kiwicon showed {{that the rest of the}} world was still critically vulnerable to this security hole, with a sample domain registered in New Zealand for testing purposes receiving proxy requests from all over the country at the rate of several a second. Several of the wpad.tld domain names (including COM, NET, ORG, and US) now point to the client <b>loopback</b> <b>address</b> to help protect against this vulnerability, though some names are still registered (wpad.co.uk).|$|E

