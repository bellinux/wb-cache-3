80|299|Public
2500|$|While the Stasi {{had only}} 4,000 members in 1953, it grew {{considerably}} {{over the years}} to 52,707 in 1973. [...] Its ranks swelled much more quickly after Eastern Bloc countries signed the 1975 Helsinki accords, which Erich Honecker viewed as a grave threat to his regime because they contained <b>language</b> <b>binding</b> signatories to respect [...] "human and basic rights, [...] including freedom of thought, conscience, religion, and conviction. [...] Stasi size was immediately increased by 10,000. Mielke was accorded new, wide-ranging powers while the Stasi became the leadership's instrument of power to an extent not seen in the Eastern Bloc since Stalin's death, {{with the possible exception of}} the Securitate in Romania under Nicolae Ceaușescu. [...] The Stasi then set up 24 internment camps throughout East Germany to house six categories of persons to be arrested.|$|E
50|$|In WinRT terminology, a <b>{{language}}</b> <b>binding</b> is {{termed a}} language projection.|$|E
5000|$|Part 23 - C++ <b>language</b> <b>binding</b> of the {{standard}} data access interface ...|$|E
5000|$|GObject introspection is a {{middleware}} layer between C libraries (using GObject) and <b>language</b> <b>bindings,</b> cf. List of <b>language</b> <b>bindings</b> for GTK+.|$|R
5000|$|Third-party {{programming}} <b>language</b> <b>bindings</b> {{available for}} RocksDB, include: ...|$|R
5000|$|SQL/OLB Object <b>Language</b> <b>Bindings</b> (SQL:1999 part 10) ISO/IEC 9075-10:2000 ...|$|R
50|$|ODMG 3.0 was {{published}} in book form in 2000. By 2001, {{most of the major}} object database and object-relational mapping vendors claimed conformance to the ODMG Java <b>Language</b> <b>Binding.</b> Compliance to the other components of the specification was mixed. In 2001, the ODMG Java <b>Language</b> <b>Binding</b> was submitted to the Java Community Process as a basis for the Java Data Objects specification. The ODMG member companies then decided to concentrate their efforts on the Java Data Objects specification. As a result, the ODMG disbanded in 2001.|$|E
50|$|Bison {{can only}} {{generate}} code for C, C++ and Java. For using the Bison generated parser from other languages a <b>language</b> <b>binding</b> tool such as SWIG can be used.|$|E
50|$|Flex {{can only}} {{generate}} code for C and C++. To use the scanner code generated by flex from other languages a <b>language</b> <b>binding</b> tool such as SWIG can be used.|$|E
25|$|<b>Language</b> <b>bindings</b> for C#, PHP, Python, Perl, Ruby, and Java.|$|R
5000|$|ISO/IEC 9075-10:2000, Information technology—Database languages—SQL—Part 10: Object <b>Language</b> <b>Bindings</b> (SQL/OLB) ...|$|R
5000|$|... java-gnome {{is a set}} of <b>language</b> <b>bindings</b> for the Java {{programming}} language for use in the GNOME desktop environment. It is part of the official GNOME <b>language</b> <b>bindings</b> suite and provides a set of libraries allowing developers to write computer programs for GNOME using the Java {{programming language}} and the GTK+ cross-platform widget toolkit.|$|R
5000|$|... mod_python is an Apache HTTP Server module that {{integrates}} the Python {{programming language}} with the server. It {{is intended to}} provide a Python <b>language</b> <b>binding</b> for the Apache HTTP Server.|$|E
50|$|Java <b>Language</b> <b>Binding.</b> This {{defined the}} binding between the ODMG ODL and the Java {{programming}} language {{as defined by}} the Java 2 Platform. The Java binding also provided a mechanism to invoke OQL.|$|E
50|$|LIS's are language-agnostic; they {{mitigate}} {{the risk that}} a certain <b>language</b> <b>binding</b> might reduce compatibility with other languages. An ideal LIS allows the language bindings {{to take advantage of}} features of a programming language uncompromisingly.|$|E
5000|$|ISO/IEC 18024-4:2006(E) Information {{technology}} - SEDRIS <b>language</b> <b>bindings</b> - Part 4: C ...|$|R
50|$|All SAGA {{specifications}} {{are defined}} in (a flavor of) IDL, and thus object oriented, but language neutral. Different <b>language</b> <b>bindings</b> exist (Java, C++, Python), but are, at this point, not standardised. Nevertheless, different implementations of these <b>language</b> <b>bindings</b> {{have a relatively}} coherent API definition (in particular, the different Java implementations share the same abstract API interface classes).|$|R
50|$|GTK+ {{is mainly}} written in C. A number of <b>language</b> <b>bindings</b> are available.|$|R
50|$|Smalltalk <b>Language</b> <b>Binding.</b> This {{defined the}} mapping between the ODMG ODL and Smalltalk, {{which was based}} on the OMG Smalltalk binding for the OMG Interface Definition Language (IDL). The Smalltalk binding also {{provided}} a mechanism to invoke OQL.|$|E
50|$|DDS for Lightweight CCM (dds4ccm) {{offers an}} {{architectural}} pattern {{that separates the}} business logic from the non-functional properties. A 2012 extension added support for streams.A Java 5 Language PSM for DDS defined a Java 5 <b>language</b> <b>binding,</b> {{referred to as a}} Platform Specific Model (PSM) for DDS. It specified only the Data-Centric Publish-Subscribe (DCPS) portion of the DDS specification; Additionally, it encompasses the DDS APIs introduced by DDS-XTypes and DDS-CCM.DDS-PSM-Cxx defines the ISO/IEC C++ PSM <b>language</b> <b>binding,</b> referred to as a Platform Specific Model (PSM) for DDS. It provides a new C++ API for programming DDS that is more natural to a C++ programmer.The specification provides mappings for the application programming interface (API) specified in DDS-XTypes, and accessing quality of service (QoS) profiles specified in DDS-CCM.|$|E
50|$|The Object Data Management Group was a {{consortium}} of object database and object-relational mapping vendors, members of the academic community, and interested parties. Its goal {{was to create a}} set of specifications that would allow for portable applications that store objects in database management systems. It published several versions of its specification. The last release was ODMG 3.0. By 2001, most of the major object database and object-relational mapping vendors claimed conformance to the ODMG Java <b>Language</b> <b>Binding.</b> Compliance to the other components of the specification was mixed. In 2001, the ODMG Java <b>Language</b> <b>Binding</b> was submitted to the Java Community Process as a basis for the Java Data Objects specification. The ODMG member companies then decided to concentrate their efforts on the Java Data Objects specification. As a result, the ODMG disbanded in 2001.|$|E
5000|$|SQLJ part 0: ANSI X3.135.10-1998, [...] "Database Language SQL—Part 10: Object <b>Language</b> <b>Bindings</b> (SQL/OLB)" ...|$|R
5000|$|ISO/IEC 18042-4:2006(E) Information {{technology}} - Spatial Reference Model (SRM) <b>language</b> <b>bindings</b> - Part 4: C ...|$|R
50|$|Other <b>language</b> <b>bindings</b> can be {{generated}} easily from SWIG, which was first used by the Perl binding.|$|R
50|$|The MAL {{adapters}} and the MAL <b>language</b> <b>binding</b> specifications must {{be maintained}} as the underlying middleware standards for the plug-ins evolve. However, {{the use of the}} MAL removes any direct dependence of the application on the protocol technologies and therefore it is possible to isolate any evolution to lower adapter layers.|$|E
5000|$|Users can {{implement}} {{or access}} UNO components from any programming language {{for which a}} <b>language</b> <b>binding</b> exists. Complete UNO language bindings exist for C++ (compiler-dependent), Java, Object REXX, Python, and Tcl. Bindings allowing access, but not writing, to components exist for StarOffice Basic, OLE Automation and the [...]NET Common Language Infrastructure.|$|E
50|$|Language {{bindings}} {{are also}} APIs. By mapping the features and capabilities of one language to an interface implemented in another language, a <b>language</b> <b>binding</b> allows a library or service written in one language {{to be used}} when developing in another language.Tools such as SWIG and F2PY, a Fortran-to-Python interface generator, facilitate the creation of such interfaces.|$|E
50|$|Several {{programming}} <b>language</b> <b>bindings</b> for D-Bus {{have been}} developed, {{such as those}} for Java, C# and Ruby.|$|R
5000|$|The {{development}} of <b>language</b> <b>bindings</b> for FORTRAN and the {{interface definition language}} (IDL) of CORBA were canceled.|$|R
5000|$|Redland <b>Language</b> <b>Bindings</b> for APIs to Redland in C#, Java, Objective-C, Perl, PHP, Python, Ruby and Tcl ...|$|R
50|$|PyGTK will {{be phased}} out with the {{transition}} to GTK+ version 3 and be replaced with PyGObject, which uses GObject Introspection to generate bindings for Python and other languages on the fly. This is expected to eliminate the delay between GTK updates and corresponding <b>language</b> <b>binding</b> updates, as well as reduce maintenance burden on the developers.|$|E
50|$|Up until version 2.0, java-gnome {{was written}} by a project team, the current version 4.0 was {{originally}} an internal project of Operational Dynamics, a change management consultancy group. This new version is a complete re-write of java-gnome and was originally written for creating business tools to the company's clients, but eventually grew into a full replacement Java <b>language</b> <b>binding</b> for GNOME.|$|E
5000|$|... a {{point-to-point}} communications library that implements the D-Bus wire protocol {{in order}} to exchange messages between two processes. In the reference implementation this library is [...] In other implementations [...] may be wrapped by another higher-level library, <b>language</b> <b>binding,</b> or entirely replaced by a different standalone implementation that serves the same purpose. This library only supports one-to-one communications between two processes.|$|E
5000|$|While FANN was {{originally}} written in C, the following <b>language</b> <b>bindings</b> {{have been created}} by FANN contributors: ...|$|R
25|$|GNOME {{is mainly}} written in C, C++, Vala, Python and JavaScript. A number of <b>language</b> <b>bindings</b> are available.|$|R
5000|$|ISO 8651-2:1988 Information {{processing}} systems - Computer graphics - Graphical Kernel System (GKS) <b>language</b> <b>bindings</b> - Part 2: Pascal ...|$|R
