209|583|Public
25|$|Sequent {{calculus}} {{can be seen}} as a {{tool for}} proving formulas in propositional logic, similar to the method of analytic tableaux. It gives a series of steps which allows one to reduce the problem of proving a <b>logical</b> <b>formula</b> to simpler and simpler formulas until one arrives at trivial ones.|$|E
25|$|This can {{be shown}} as follows: Every proof in propositional {{calculus}} uses only axioms and the inference rules. Each use of an axiom scheme yields a true <b>logical</b> <b>formula,</b> and can thus be proven in sequent calculus; examples for these are shown below. The only inference rule in the systems mentioned above is modus ponens, which is implemented by the cut rule.|$|E
2500|$|Harrop formula – A kind of {{constructive}} <b>logical</b> <b>formula</b> {{such that}} proofs are lambda terms ...|$|E
40|$|This {{paper is}} {{concerned}} with the type analysis of logic programs where, by type, we mean a property closed under instantiation. We de ne a chain of abstractions from Herbrand constraints to <b>logical</b> <b>formulas</b> via the set of their solutions. Every step of the chain is an instance of abstract interpretation. The use of <b>logical</b> <b>formulas</b> for type analysis is a generalisation of the traditional Boolean domains Def and Pos for groundness analysis. In this context, implication is the logical counterpart of the use of linear re nement. While <b>logical</b> <b>formulas</b> can sometime be used for an actual implementation of our domains, in the general case they are in nite objects. Therefore, we apply a nal abstraction from possibly in nite <b>logical</b> <b>formulas</b> to (nite) logic programs. Thus, logic programs are themselves used for the type analysis of logic programs...|$|R
50|$|Reasoning {{can be done}} by {{translating}} graphs into <b>logical</b> <b>formulas,</b> then {{applying a}} logical inference engine.|$|R
25|$|Another {{direction}} for extending Courcelle's theorem concerns <b>logical</b> <b>formulas</b> that include predicates for counting {{the size of}} the test.|$|R
2500|$|The above rules can {{be divided}} into two major groups: logical and {{structural}} ones. Each of the logical rules introduces a new <b>logical</b> <b>formula</b> either on the left or on the right of the turnstile [...] In contrast, the structural rules operate on the structure of the sequents, ignoring the exact shape of the formulae. The two exceptions to this general scheme are the axiom of identity (I) and the rule of (Cut).|$|E
2500|$|In proof theory, the {{semantic}} tableau ( [...] ; plural: tableaux, also called 'truth tree'), {{is a decision}} procedure for sentential and related logics, and a proof procedure for formulae of first-order logic. An analytic tableau is a tree structure computed for a <b>logical</b> <b>formula,</b> having at each node a subformula of the original formula to be proved or refuted. [...] Computation constructs this tree and uses it to prove or refute the whole formula. [...] The tableau method can also determine the satisfiability of finite sets of formulas of various logics. It {{is the most popular}} proof procedure for modal logics (Girle 2000).|$|E
60|$|The assertion, therefore, which, {{according}} to Hobbes, {{is the only}} one made in any proposition, really is made in every proposition: and his analysis has consequently one of the requisites for being the true one. We may go a step further; it is the only analysis that is rigorously true of all propositions without exception. What he gives as the meaning of propositions, is part of the meaning of all propositions, and the whole meaning of some. This, however, only shows what an extremely minute fragment of meaning it is quite possible to include within the <b>logical</b> <b>formula</b> of a proposition. It does not show that no proposition means more. To warrant us in putting together two words with a copula between them, it is really enough that the thing or things denoted by one of the names should be capable, without violation of usage, of being called by the other name also. If, then, this be all the meaning necessarily implied in the form of discourse called a Proposition, why do I object to it as the scientific definition of what a proposition means? Because, though the mere collocation which makes the proposition a proposition, conveys no more than this scanty amount of meaning, that same collocation combined with other circumstances, that form combined with other matter, does convey more, and the proposition in those other circumstances does assert more, than merely that relation between the two names.|$|E
40|$|Our {{main goal}} is the {{integration}} of theorem proving techniques. <b>Logical</b> <b>formulae</b> may be ordered by logical implication. Program specifications are <b>logical</b> <b>formulae</b> and may be in various languages such as conceptual graphs. Languages form a hierarchy ordered by generality of their <b>logical</b> connectives. Classifying <b>formulae</b> requires subsumption methods such as theorem provers. Theorem provers are sensitive to formulation of statements. An architecture that chooses subsumption methods according to the languages of the formulae to be compared would be useful. This requires an investigation into existing subsumption methods...|$|R
5000|$|In the event-based {{approach}} <b>logical</b> <b>formulas</b> {{are done}} away with completely, while the logic-based approach uses the system of modal logic.|$|R
5000|$|Satisfiability modulo {{theories}} for solvers of <b>logical</b> <b>formulas</b> {{with respect}} to combinations of background theories expressed in classical first-order logic with equality.|$|R
60|$|But if Eratosthenes had hold {{of eternal}} fact and law on one point, {{there was a}} {{contemporary}} who had hold of it in more than one. I mean Archimedes; of whom, as I have said, we must speak as of an Alexandrian. It was as a mechanician, {{rather than as an}} astronomer, that he gained his reputation. The stories of his Hydraulic Screw, the Great Ship which he built for Hiero, and launched by means of machinery, his crane, his war-engines, above all his somewhat mythical arrangement of mirrors, by which he set fire to ships in the harbour--all these, like the story of his detecting the alloy in Hiero's crown, while he himself was in the bath, and running home undressed shouting [Greek text: eureeka]--all these are schoolboys' tales. To the thoughtful person it is the method of the man which constitutes his real greatness, that power of insight by which he solved the two great problems {{of the nature of the}} lever and of hydrostatic pressure, which form the basis of all static and hydrostatic science to this day. And yet on that very question of the lever the great mind of Aristotle babbles--neither sees the thing itself, nor the way towards seeing it. But since Archimedes spoke, the thing seems self-evident to every schoolboy. There is something to me very solemn in such a fact as this. It brings us down to some of the very deepest questions of metaphysic. This mental insight of which we boast so much, what is it? Is it altogether a process of our own brain and will? If it be, why have so few the power, even among men of power, and they so seldom? If brain alone were what was wanted, what could not Aristotle have discovered? Or is it that no man can see a thing unless God shows it him? Is it that in each separate act of induction, that mysterious and transcendental process which cannot, let logicians try as they will, be expressed by any merely <b>logical</b> <b>formula,</b> Aristotelian or other--is it I say, that in each separate act of induction we do not find the law, but the law is shown to us, by Him who made the law? Bacon thought so. Of that you may find clear proof in his writings. May not Bacon be right? May it not be true that God does in science, as well as in ethics, hide things from the wise and prudent, from the proud, complete, self-contained systematiser like Aristotle, who must needs explain all things in heaven and earth by his own formulae, and his entelechies and energies, and the rest of the notions which he has made for himself out of his own brain, and then pack each thing away in its proper niche in his great cloud-universe of conceptions? Is it that God hides things from such men many a time, and reveals them to babes, to gentle, affectionate, simple-hearted men, such as we know Archimedes to have been, who do not try to give an explanation for a fact, but feel how awful and divine it is, and wrestle reverently and stedfastly with it, as Jacob with the Angel, and will not let it go, until it bless them? Sure I am, from what I have seen of scientific men, that there is an intimate connection between the health of the moral faculties and the health of the inductive ones; and that the proud, self-conceited, and passionate man will see nothing: perhaps because nothing will be shown him.|$|E
5000|$|Harrop formula - A kind of {{constructive}} <b>logical</b> <b>formula</b> {{such that}} proofs are lambda terms ...|$|E
5000|$|Infix notation, {{the common}} {{arithmetic}} and <b>logical</b> <b>formula</b> notation, such as [...] "a + b − c".|$|E
25|$|<b>Logical</b> <b>formulas</b> are {{discrete}} structures, as are proofs, {{which form}} finite trees or, more generally, {{directed acyclic graph}} structures (with each inference step combining one or more premise branches to give a single conclusion). The truth values of <b>logical</b> <b>formulas</b> usually form a finite set, generally restricted to two values: true and false, but logic can also be continuous-valued, e.g., fuzzy logic. Concepts such as infinite proof trees or infinite derivation trees have also been studied, e.g. infinitary logic.|$|R
3000|$|In {{this paper}} {{we focus on}} {{flexible}} query answering for conjunctive queries expressed as <b>logical</b> <b>formulas.</b> That is, we assume a logical language [...]...|$|R
5000|$|Theorems {{are those}} <b>logical</b> <b>formulas</b> [...] where [...] is the {{conclusion}} of a valid proof, while the equivalent semantic consequence [...] indicates a tautology.|$|R
50|$|Thanks to the Curry-Howard correspondence, a typed {{expression}} whose type {{corresponds to}} a <b>logical</b> <b>formula</b> is analogous to a proof of that formula. Here are examples.|$|E
50|$|In the first-order {{logic of}} graphs, a graph {{property}} is {{expressed as a}} quantified <b>logical</b> <b>formula</b> whose variables represent graph vertices, with predicates for equality and adjacency testing.|$|E
50|$|The {{proposed}} technique {{works on}} lightweight ontologies, namely, tree structures where each node is labeled by a natural language sentence, {{for example in}} English. These sentences are translated into a formal <b>logical</b> <b>formula</b> (according to an unambiguous, artificial language). The formula codifies {{the meaning of the}} node, accounting for its position in the graph. For example, in case the folder “car” is under another folder “red” we can say that the meaning of the folder “car” is “red car” in this case. This is translated into the <b>logical</b> <b>formula</b> “red AND car”.|$|E
40|$|Abstract. Multimodal systems must process several input streams {{efficiently}} {{and represent the}} input {{in a way that}} allows the establishment of connections between modalities. This paper describes a multimodal system that uses Combinatory Categorial Grammars to parse several input streams and translate them into <b>logical</b> <b>formulas.</b> These <b>logical</b> <b>formulas</b> are expressed in Hybrid Logic, which is very suitable for multimodal integration because it can represent temporal relationships between modes in an abstract way. This level of abstraction makes it possible to define rules for multimodal processing in a straightforward way. ...|$|R
40|$|To {{investigate}} {{more reasonable}} fuzzy reasoning model in expert systems {{as well as}} more effective logical circuit in fuzzy control, a (,, N) fuzzy logic is proposed in this paper by using -norm, -norm and pseudo-complement N as the logical connectives. Two aspects are discussed: (1) some concepts of (,, N) fuzzy logic are introduced and some properties of (,, N) fuzzy <b>logical</b> <b>formulae</b> are discussed. (2) G-fuzzy truth (falsity) of (,, N) fuzzy <b>logical</b> <b>formulae</b> are investigated and also the relation between the Boolean truth (falsity) of -normal forms (-normal forms) and the G-fuzzy truth (falsity) of them are analyzed. ...|$|R
50|$|Infix {{notation}} is {{the notation}} {{commonly used in}} arithmetical and <b>logical</b> <b>formulae</b> and statements. It {{is characterized by the}} placement of operators between operands—"infixed operators"—such as the plus sign in 2 + 2.|$|R
50|$|In {{the recent}} years {{many of them}} have been offered. S-Match {{is an example of a}} {{semantic}} matching operator. It works on lightweight ontologies, namely graph structures where each node is labeled by a natural language sentence, for example in English. These sentences are translated into a formal <b>logical</b> <b>formula</b> (according to an artificial unambiguous language) codifying the meaning of the node taking into account its position in the graph. For example, in case the folder “car” is under another folder “red” we can say that the meaning of the folder “car” is “red car” in this case. This is translated into the <b>logical</b> <b>formula</b> “red AND car”.|$|E
50|$|In {{first order}} logic, {{conjunctive normal form}} can be taken further to yield the clausal normal form of a <b>logical</b> <b>formula,</b> which can be then used to perform first-order resolution.In resolution-based {{automated}} theorem-proving, a CNF formula See below for an example.|$|E
5000|$|All logical {{formulas}} can {{be converted}} into an equivalent disjunctive normal form.However, in some cases conversion to DNF can lead to an exponential explosion of the formula. For example, the DNF of a <b>logical</b> <b>formula</b> of the following form has 2n terms: ...|$|E
5000|$|In Boolean algebra, the {{algebraic}} {{normal form}} (ANF), ring sum normal form (RSNF or RNF), Zhegalkin normal form, or Reed-Muller expansion {{is a way}} of writing <b>logical</b> <b>formulas</b> in one of three subforms: ...|$|R
40|$|In {{this paper}} we {{consider}} the problem of determining lower and upper bounds on probabilities of atomic propositions in sets of <b>logical</b> <b>formulas</b> represented by digraphs. We establish a sharp upper bound, {{as well as a}} lower bound that is not in general sharp. We show further that under a certain condition the lower bound is sharp. In that case we obtain a closed form solution for the possible probabilities of the atomic propositions. 1 Introduction In Andersen [1] a class of <b>logical</b> <b>formulas</b> representable by digraphs were described. Suppose a digraph has n nodes. Then an atomic proposition is assigned to every node and it is possible to construct a set of n <b>logical</b> <b>formulas</b> using those n atomic propositions. This construction will be considered in more detail in section 3. Andersen considers in [1] the problem of characterizing the probability assignments that can consistently be made The second author is partially supported by ONR grant N 00014 - 92 -J- 1028 and AFOSR grant 91 - 0287. to [...] ...|$|R
50|$|But even non-truth-valuational logics can {{associate}} {{values with}} <b>logical</b> <b>formulae,</b> as {{is done in}} algebraic semantics. The algebraic semantics of intuitionistic logic is given in terms of Heyting algebras, compared to Boolean algebra semantics of classical propositional calculus.|$|R
5000|$|Denying the {{ultimate}} reality {{of space and}} time in his book Tertium Organum, he also negates Aristotle's <b>Logical</b> <b>Formula</b> of Identification of [...] "A is A" [...] and finally concludes in his [...] "higher logic" [...] that A is both A and not-A.|$|E
50|$|In {{mathematical}} logic and logic programming, a Horn clause is a <b>logical</b> <b>formula</b> {{of a particular}} rule-like form which gives it useful properties for use in logic programming, formal specification, and model theory. Horn clauses are named for the logician Alfred Horn, who first pointed out their significance in 1951.|$|E
50|$|Sequent {{calculus}} {{can be seen}} as a {{tool for}} proving formulas in propositional logic, similar to the method of analytic tableaux. It gives a series of steps which allows one to reduce the problem of proving a <b>logical</b> <b>formula</b> to simpler and simpler formulas until one arrives at trivial ones.|$|E
50|$|Almost every modern {{mathematical}} theory {{starts from}} a given set of non-logical axioms, {{and it was}} thought that in principle every theory could be axiomatized in this way and formalized down to the bare language of <b>logical</b> <b>formulas.</b>|$|R
50|$|The work of both Church and Turing {{was heavily}} {{influenced}} by Kurt Gödel's earlier work on his incompleteness theorem, especially by the method of assigning numbers (a Gödel numbering) to <b>logical</b> <b>formulas</b> {{in order to reduce}} logic to arithmetic.|$|R
5000|$|A default {{theory is}} a pair [...] [...] {{is a set of}} <b>logical</b> <b>formulae,</b> called the {{background}} theory, that formalize the facts that are known for sure. [...] is a set of default rules, each one being of the form: ...|$|R
