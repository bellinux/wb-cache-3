106|373|Public
50|$|The machine {{running an}} Internet <b>Location</b> <b>Server</b> {{must have a}} public IP address.If the network running an Internet <b>Location</b> <b>Server</b> has a firewall, it is usually {{necessary}} to run the server in the demilitarized zone of the network.|$|E
5000|$|Generic <b>Location</b> <b>Server</b> & Generic Location Setup Server, {{representing}} {{location information}} of an element, either global (Lat/Lon) or local ...|$|E
50|$|This {{service is}} {{initiated}} by network when MS initiates or releases emergency call. Report is generated and sent from <b>Location</b> <b>Server</b> to predefined LCS client.|$|E
40|$|Managing {{location}} information of mobile nodes {{is an important}} issue in mobile computing systems. There is a trade-off between location update effort (when a node moves) and node finding effort. In this paper we present a dynamic location management strategy that has the following features: (i) all <b>location</b> <b>servers</b> need not maintain {{location information}} about every mobile node, (ii) a coterie based approach is adopted for location update and find, (iii) every node move does not result in location updates, (iv) location updates are done at a subset of <b>location</b> <b>servers,</b> (v) a subset of <b>location</b> <b>servers</b> are queried when a mobile node is to be located, (vi) the set of <b>location</b> <b>servers,</b> corresponding to a mobile node, for location update and find operations is dynamic, (vii) the dynamic nature of these sets helps alleviate situations of heavy burden on some <b>location</b> <b>servers,</b> when a large number of mobile nodes are concentrated in a small geographical area. Thus, location management is done e [...] ...|$|R
40|$|Location {{management}} {{is a fundamental}} problem in mobile computing systems. Existing industry standards employ centralized location management schemes. Centralized schemes are not highly scalable. This paper presents a new, distributed location management strategy for mobile systems. Its salient features are fast location update and query, load balancing among <b>location</b> <b>servers,</b> and scalability. The strategy employs dynamic hashing techniques and quorums to manage location update and query operations. Location information of a mobile host is replicated at a subset of <b>location</b> <b>servers.</b> The set of <b>location</b> <b>servers</b> associated with a mobile host changes with time, depending on the location of mobile hosts and load on the servers. This dynamism prevents situations of heavy load (location update and query messages) on some <b>location</b> <b>servers</b> when the mobile hosts are not uniformly distributed in space, or when some mobile hosts have their location updated or queried more often than others. New lo [...] ...|$|R
40|$|In ad-hoc networks, {{geographical}} {{routing protocols}} {{take advantage of}} location information so that stateless and efficient routing is feasible. However, such routing protocols are heavily dependent {{on the existence of}} scalable location management services. In this paper, we present a novel scheme to perform scalable location management. With any location management schemes, a specific node, A, in the network trusts a small subset of nodes, namely its <b>location</b> <b>servers,</b> and periodically updates them with its location. Our approach adopts a similar strategy, but a different and original approach to select such <b>location</b> <b>servers.</b> The main contributions of the paper are: First, we present a selection algorithm used to designate <b>location</b> <b>servers</b> of a node by its identifier. Second, we propose a hierarchical addressing model for mobile ad-hoc networks, where node locations could be represented at different accuracy levels. With this approach, different <b>location</b> <b>servers</b> may carry <b>location</b> information of different levels of accuracy and only a small set of <b>location</b> <b>servers</b> needs to be updated when the node moves. Through rigorous theoretical analysis, we are able to show that the control message overhead is bounded under our scheme. Finally, simulation results are presented to demonstrate the performance of our location management scheme...|$|R
5000|$|Microsoft Windows {{includes}} an Internet <b>Location</b> <b>Server.</b> It {{can be installed}} in the Control Panel using Add/Remove Windows Components, under [...] "Networking Services" [...] (Site Server ILS Services).|$|E
50|$|The MLP {{serves as}} the {{interface}} between a <b>Location</b> <b>Server</b> and a location-based application. Basic MLP Services are based on location services defined by 3GPP. The Mobile Location Protocol (MLP) is described in LIF TS 101 Specification.|$|E
50|$|The MLP {{can be used}} by a location-based {{application}} to request mobile station location information from a <b>location</b> <b>server</b> (GMLC/MPC or other entity in the wireless network). This protocol has been prepared by Location Interoperability Forum (LIF: Open Mobile Alliance in nowadays) to provide a simple and secure API (Application Programmerâ€™s Interface), but also could be used for other kinds of location servers and entities in the wireless network.|$|E
40|$|This paper {{presents}} a new distributed location management strategy for cellular mobile systems. Its salient features are fast location update and query, load balancing among <b>location</b> <b>servers,</b> and scalability. The strategy employs dynamic hashing techniques and quorums to manage location update and query operations. The proposed strategy {{does not require}} a home location register (HLR) to be associated with each mobile node. Location updates and queries for a mobile node are multicast to subsets of <b>location</b> <b>servers,</b> which change with time depending on the location of mobile node/querying node and load on the servers. Simulation experiments demonstrate that such dynamism prevents situations of heavy load on some <b>location</b> <b>servers</b> when mobile nodes are not uniformly distributed in space, or when some mobile nodes have their location updated or queried more often than others. Also, queries return the latest location information of a mobile node with a very high probability. The proposed scheme requires at most one unicast and two rounds of message multicasting for location update and query operations. All multicast messages have a small payload and are restricted to the high bandwidth wired part of the mobile network resulting in low communication overhead. Moreover, if a quorum of <b>location</b> <b>servers</b> gets overloaded, part of its load can be transferred to another lightly loaded quorum using dynamic hashing techniques...|$|R
40|$|Today, location-based {{applications}} and {{services such as}} friend finders and geo-social networks are very popular. However, storing private position information on third-party <b>location</b> <b>servers</b> leads to privacy problems. In our previous work, we proposed a position sharing approach for secure management of positions on non-trusted servers, which distributes position shares of limited precision among servers of several providers. In this paper, we propose two novel contributions to improve the original approach. First, we optimize the placement of shares among servers by taking their trustworthiness into account. Second, we optimize the location update protocols to minimize the number of messages between mobile device and <b>location</b> <b>servers.</b> Comment: 26 pages, 11 figure...|$|R
40|$|Wireless sensor {{networks}} (WSNs) {{have been}} deployed for environment monitoring and surveillance. A message delivery service {{is one of the}} most fundamental services for WSNs, thus making its efficiency and effectiveness important. A widely-adopted protocol for message delivery in WSNs is a geographic forward routing (GFR), in which messages are greedily forwarded to their destinations. In this thesis, we develop network services complementary to the existing GFR for efficient and secure message delivery in WSNs. We first develop a distributed location service protocol (DLSP) for message delivery to mobile nodes. Since GFR represents destinations of messages with destinations' geographic locations, the knowledge of location of mobile nodes is necessary to ensure correct message delivery. In DLSP, mobile nodes select some sensor nodes as their <b>location</b> <b>servers,</b> and publish the mobiles' location information to the <b>location</b> <b>servers.</b> Sensor nodes contact those <b>location</b> <b>servers</b> to retrieve the current location of mobile nodes when needed. DLSP provides systematic methods for mobile nodes to select <b>location</b> <b>servers</b> and publish their <b>location</b> to those <b>servers,</b> and for sensor nodes to query mobiles' location. We then design an algorithm called Traverse for hole boundary detection and geographic forward routing with hole avoidance (GFRHA) for efficient message routing. Traverse identifies boundaries of holes, i. e., areas without any functioning sensor node. GFRHA then utilizes the identified hole information to route messages around holes while being forwarded before they encounter holes. This way, the message path lengths, and subsequently the message delay and energy consumption, can be significantly reduced, depending on hole shapes and source and destination locations. We also develop attack-resilient collaborative message authentication (ARCMA) for message delivery. ARCMA is designed to tolerate node-capture attacks, in which attackers obtain valid keys by compromising physically-exposed sensor nodes, and use the keys to generate forged messages. To defend against such attacks, in ARCMA, messages are collaboratively authenticated by a set of sensor nodes rather than by one node. The security of ARCMA does not degrade unless attackers simultaneously compromise more than a certain number of sensor nodes...|$|R
5000|$|The Internet <b>Location</b> <b>Server</b> (ILS) {{included}} in Microsoft Windows 2000 offers service on port 1002, while {{the latest version}} of NetMeeting requests service from port 389. The choice of 1002 was to avoid conflict with Windows 2000's domain controllers, which use LDAP and Active Directory on port 389, as well as Microsoft Exchange Server 2000, which uses port 389. If the server is running neither Active Directory nor Microsoft Exchange Server, the Internet Location Server's port can be changed to 389 using the following command at a command prompt: ...|$|E
50|$|Cisco Systems has {{released}} a mobile application called Graffiti patented by | Cisco Systems, Inc. {{to allow people}} to place messages of varying size, color, length of time visible, and viewing distance (say visible from 20 feet away) on a physical location, say a building, an office, a cubicle, or a specific location using their augmented reality mobile application. This message alerts other visitors approaching the message coordinates by playing the Cisco chime and the mobile user's country origin filter when the app was installed. It is like a virtual yellow stickie note, that can be delivered to an individual when they arrive at a message location. Digital Graffiti leverages the Cisco MSE <b>location</b> <b>server</b> (which tracks users mobile devices and provides x,y coordinates of the mobile devices over WiFi).|$|E
40|$|Location privacy {{has been}} a great concern to users who need the {{location}} based service on networked devices such as mobile phones and personal computers. Location based service usually relies on a <b>location</b> <b>server,</b> which is commonly regarded as semi-trusted or honestbut- curious. To protect user privacy their location information must be protected against the <b>location</b> <b>server.</b> We propose a protocol which captures user location privacy, while the user can still receive the requested service from a service provider, and does not reveal the user 2 Ì† 7 s exact location to the <b>location</b> <b>server.</b> Our approach offers the applicability to real-world applications...|$|E
40|$|Sensor {{networks}} {{are a major}} new area of research. Some sensor applications, such as video surveillance, {{will need to be}} tethered for reasons of bandwidth and power requirements. To support ad hoc, economical installation of video cameras {{there is a need for}} new shared-medium protocols. IEEE 1394 b FireWire is investigated as a near-future candidate for a shared-medium wired sensor network (WSN). Simulation results show that FireWire can transport packetized video with low delay. In the future, WSN nodes will be capable of store-and-forward and of acting as routers and caches for arbitrary topologies. New routing protocols for attribute and location routing will be needed. We investigate a new hybrid routing scheme that uses distributed <b>location</b> <b>servers</b> to minimize broadcasting. Source routing is used as the packet forwarding mechanism. The distributed <b>location</b> <b>servers</b> contain knowledge of sensor locations and source routes between sensors and other nodes. 1...|$|R
40|$|Heterogeneous {{wireless}} {{networks are}} capable of providing customers with better services while service providers can offer more applications to more customers with lower costs. To provide services, some applications rely on existing servers in the network. In a vehicular ad-hoc network (VANET) some mobile nodes may function as servers. Due to high mobility of nodes and short lifetime of links, server-to-client and server-to-server communications become challenging. In this paper we propose to enhance the performance of server selection by taking link reliability into consideration in the server selection mechanism, thereby avoiding extra client-to-server hand-offs and reducing the need of server-to-server synchronization. As a case study we focus on location management service in a heterogeneous VANET. We provide a routing algorithm for transactions between <b>location</b> <b>servers</b> and mobile nodes. We assume that <b>location</b> <b>servers</b> are vehicles equipped {{with at least one}} long- range and one short-range radio interfaces, whereas regular nodes (clients) are only equipped with a short-range radio interface. The primary goal of our design is to minimize hand-offs between <b>location</b> <b>servers</b> while limiting the delays of location updates. Taking advantage of vehicle mobility patterns, we propose a mobility-aware server selection scheme and show that it can reduce the number of hand-offs and yet avoid large delays during location updates. We present simulation results to show that proposed scheme significantly lowers the costs of signaling and rate of server hand-offs by increasing the connection lifetimes between clients and servers...|$|R
40|$|Abstract â€” In partially-trusted system environments {{like the}} WWW, the {{management}} of private user positions is a great challenge. On the one hand, location-based services of different partially-trusted providers have to be provided with position information. On the other hand, <b>location</b> <b>servers,</b> which are responsible for {{the management of}} user positions, might as well be operated by only partially-trusted providers. Therefore, in order to protect his privacy, a user might only want to store position information of limited precision on <b>location</b> <b>servers,</b> and also provide location-based services with position information of limited precision. In this position paper, we sketch a novel position sharing approach that enables the user to tightly control the precision of position information stored on servers and provided to location-based services. This approach is based on the idea of distributing position information among a set of servers of different providers such that a compromised server only reveals information of strictly limited precision. I...|$|R
30|$|The average query {{execution}} time uses the average <b>location</b> <b>server</b> to query an anonymous location time. It {{is used to}} measure the position of the server query execution cost and query time spent. If the server query execution cost is lower, the performance of algorithm will be improved. The <b>location</b> <b>server</b> simulation experiment, the hidden subgraph for a Kmm query, tests the performance of the proposed algorithm.|$|E
30|$|The {{average size}} of the {{candidate}} refers to the <b>location</b> <b>server</b> for an anonymous location query. The average candidate results returned to the <b>location</b> <b>server</b> size. It is {{used to measure the}} cost of communication between the server and the position of the anonymous system. The average number of candidate results is fewer if communication cost is lower, and the performance of the algorithm is improved.|$|E
40|$|Previous {{research}} has illustrated that location-based routing protocols improve {{the effectiveness of}} mobile ad hoc network (MANET) routing. The goal of a <b>location</b> <b>server,</b> which {{may be used in}} conjunction with a location-based routing protocol, is to provide accurate location information on the mobile nodes in the network. In this paper, we propose to implement a <b>location</b> <b>server</b> for a MANET with a mobile agent...|$|E
40|$|In this paper, {{we propose}} a group-based {{location}} service (GrLS) for mobile ad hoc networks (MANETs). The novelty of GrLS {{is in its}} exploitation of group mobility to improve the protocol efficiency. As an important mobility scenario, group mobility has many popular applications. GrLS provides different location management strategies for individual nodes and groups of nodes. An individual node recruits its own <b>location</b> <b>servers</b> and updates its location to them. On the other hand, {{in a set of}} nodes with group mobility, only the group leader recruits <b>location</b> <b>servers</b> and updates its location to a specific home region called group home region. Other members of the group are waived from performing network-wide location updates. Since the location update cost normally dominates other costs for all practical purposes, the overhead of location service is significantly reduced. Simulation results also show that GrLS can achieve higher location query success ratio with much lower overhead than existing protocols that do not consider group mobility. Department of ComputingRefereed conference pape...|$|R
40|$|Large-scale {{wireless}} ad-hoc {{networks are}} formed automatically and allow nodes to communicate over greater distances. Every node {{acts as a}} router forming a complex network, which is simplified {{by the use of}} geodesic routing. However, a method to discover a node. s location is needed for geodesic routing. In this paper we propose two algorithms which could support <b>location</b> <b>servers</b> in ad-hoc networks and examine their performance...|$|R
40|$|Location Based Services (LBS) {{played a}} key role ever since their evolution, since they are an {{interface}} between users and their <b>location</b> information <b>servers.</b> <b>Location</b> based services {{are one of the most}} promising and innovative directions of convergence technologies resulting of emergence of several fields including database systems, mobile communication, Interne...|$|R
40|$|Projecte realitzat en col. laboraciÃ³ amb el centre Czech Technical University (Prague) This project {{carries out}} {{a part of}} a new {{location}} application. This service consists of Location Based Application that connects with a <b>Location</b> <b>Server.</b> That server provides the necessary location information to run the service. The goal of this project is to develop an interface between the Location Based Application and the <b>Location</b> <b>Server...</b>|$|E
40|$|This project {{carries out}} {{a part of}} a new {{location}} application. This service consists of location-based application that connects with a <b>location</b> <b>server.</b> That server provides the necessary location information to run the service. Then an interface between the location-based application and the <b>location</b> <b>server</b> is needed. That interface could be a Location Application Programming Interface (LAPI), and the development of one LAPI is the goal of this project...|$|E
30|$|The {{positioning}} system is primarily {{divided into three}} parts: The nodes (Anchor and Tag), the <b>location</b> <b>server,</b> and the location engine. The location nodes in our system were designed with a ranging module based on the CSS technology produced by Nanotron Company; the <b>location</b> <b>server</b> collects the TDOA measurements and transmits them to the location engine. The server must effectively manage the configurations of Tags, Anchors, and location engines, such as by specifying {{the parameters of the}} location algorithms, initializing the coordinate values of the Anchors, and selecting the necessary algorithm. To simplify the system, our <b>location</b> <b>server</b> was divided into two parts: MClient (interface management client) and Data Server. The Data Server was designed as an information processing center, while the MClient was designed as an information management center able to access the database directly.|$|E
40|$|There {{are many}} {{essential}} applications for quorum systems in ad-hoc networks, {{such as that}} of <b>location</b> <b>servers</b> in large-scale networks. Existing research proposes many approaches to the problems, many of which are incomplete, cumbersome, or incur significant cost. We describe and analyse a self-organising quorum system that creates an emergent intelligence to minimise overhead and maximise survivability. We compare our quorum system with ones proposed in the literature in terms of delivery success and find that it performs favourably...|$|R
40|$|In this paper, {{we propose}} a global {{tracking}} service for mobile agents, which is scalable to the Internet and accounts for security {{issues as well}} as the particularities of mobile agents (frequent changes in locations). The protocols we propose address agent impersonation, malicious location updates, as well as security issues that arise from profiling <b>location</b> <b>servers,</b> and threaten the privacy of agent owners. We also describe the general framework of our tracking service, and some evaluation results of the reference implementation we made...|$|R
50|$|Internet <b>Location</b> <b>Servers</b> do {{not address}} two other issues with using NetMeeting behind a firewall. First, {{although}} a participant can join the directory from an external IP address, the participant cannot join a meeting unless the internal host manually adds the participant to the meeting from the directory. Second, while this approach is fine for data conferencing, audio or video conferencing requires opening {{of a wide range}} of ports on the firewall. In this case, it may be desirable to use a gateway.|$|R
40|$|International audiencePosition-based routing {{protocols}} {{take advantage of}} location information to perform a stateless and efficient routing. To enable position-based routing, a node {{must be able to}} discover the location of the messages' destination node. This task is typically accomplished by a location service. Recently, several location service protocols have been developed for ad hoc networks. In this paper we propose a novel location service called PHLS: Predictive Hierarchical Location Service. In PHLS, the entire network is partitioned into a hierarchy of smaller and smaller regions. For each node, one node in each-level region of the hierarchy is chosen as its local <b>location</b> <b>server.</b> When the network initializes or when a node attaches the network, nodes contact their local <b>location</b> <b>server</b> with their current location information (ie. position and velocity). Then, they only need to update their <b>location</b> <b>server</b> when they move away from their current region. Finally, nodes query their location servers and get the exact or predicted location of destination node...|$|E
40|$|Enforcing {{security}} in location based services is very crucial {{in the current}} mobile world. Past literature has examined both location and identity obfuscation techniques in order to optimally tradeoff security/privacy with utility âˆ’ this primarily addresses the â€˜how to enforce location security problemâ€™; however, it {{does not address the}} â€˜where to enforce location security problemâ€™. This paper examines the â€˜whereâ€™ problem and in particular, examines tradeoffs between enforcing location security at a device vs. enforcing location security at an edge <b>location</b> <b>server.</b> This paper also sketches an implementation of location security solutions at both the device and the edge <b>location</b> <b>server</b> and presents detailed experiments using real mobility and user profile data sets collected from various data sources (taxicabs, Smartphones). Our results show that while device-based solutions do not require trust in the edge <b>location</b> <b>server,</b> they either suffer from high false positive rate (about 25 % probability of not meeting the desired security requirement) or low utility (about 600 meters higher error in obfuscated location data) ...|$|E
30|$|The latter kind of {{interaction}} (i.e., push requests) is possible because the <b>Location</b> <b>Server</b> produces two location events: i)Aarrived at place P, and ii)A left place P, A being {{a person or}} an object.|$|E
40|$|Abstract. In this paper, {{we propose}} a global {{tracking}} service for mobile agents, which is scalable to the Internet and accounts for security {{issues as well}} as the particularities of mobile agents (frequent changes in locations). The protocols we propose address agent impersonation, malicious location updates, as well as security issues that arise from profiling <b>location</b> <b>servers,</b> and threaten the privacy of agent owners. We also describe the general framework of our tracking service, and some evaluation results of the reference implementation we made...|$|R
40|$|In this paper, {{we propose}} a group-based {{location}} service protocol named GrLS for Mobile Ad hoc NETworks (MANETs). The novelty of GrLS {{is in its}} exploitation of group mobility to improve {{the efficiency of the}} location service. GrLS uses different location management strategies for single nodes and for groups of nodes. A single node is responsible for recruiting its own <b>location</b> <b>servers</b> and performing <b>location</b> update. On the other hand, in a group of nodes, only the group leader recruits the <b>location</b> <b>servers</b> and updates its location to a specific home region called group home region. Since the location update cost normally dominates the location service cost for all practical purposes, the overhead of the location service protocol is significantly reduced. Furthermore, when the nodes join or leave groups, GrLS can provide seamless location service handoff. To the best of our knowledge, GrLS is the first location service protocol in MANETs that has explored group mobility and developed group location management for mobile nodes. Both theoretical analysis and simulation results show that GrLS can achieve a higher success ratio of location query and better load balance with much lower overhead than the existing protocols without considering group mobility. Department of Computin...|$|R
40|$|Mobile {{communications}} network architecture is changing rapidly, leading {{to changes in}} end-user access, core and positioning network elements. For example, cellular network carriers may be increasingly constrained to providing transmission carriage pipes. This means that mobile <b>location</b> based <b>server</b> technologies will need to evolve. The scalable Open Source GNSS Reference Server (OSGRS) is an implementation of a continuously operating <b>location</b> based reference <b>server</b> operating at the University of New Sout...|$|R
