5|1529|Public
5000|$|Programs {{were entered}} into the command {{interpreter}} starting with line numbers, integers from 1 to 32767. Lines could be continued onto multiple lines by using a <b>line</b> <b>feed</b> <b>character.</b> For ease of external editing of the source file, later versions of BASIC-PLUS also allowed the & character as a line-continuation character. Multiple statements could be placed on a single line using [...] as the statement separator.|$|E
50|$|Record {{separator}} delimited JSON streaming allows JSON text sequences to be delimited {{without the}} requirement that the JSON formatter exclude whitespace. Since JSON text sequences cannot contain control characters, a record separator character {{can be used to}} delimit the sequences. In addition, it is suggested that each JSON text sequence be followed by a <b>line</b> <b>feed</b> <b>character</b> to allow proper handling of top-level JSON objects that are not self delimiting (numbers, true, false, and null).|$|E
50|$|A {{typewriter}} or electromechanical printer {{can print}} characters on paper, and execute operations such as move the carriage {{back to the}} left margin of the same line (carriage return), advance to the same column of the next line (line feed), and so on. Commands to control non-printing operations were transmitted {{in exactly the same}} way as printable characters by sending control characters with defined functions (e.g., the <b>line</b> <b>feed</b> <b>character</b> forced the carriage to move to the same position on the next line) to teleprinters. In modern computing and communications a few control characters, such as carriage return and line feed, have retained their original functions (although they are often implemented in software rather than activating electromechanical mechanisms to move a physical printer carriage) but many others are no longer required and are used for other purposes.|$|E
50|$|As {{early as}} 1901, Baudot code {{contained}} separate carriage return and <b>line</b> <b>feed</b> <b>characters.</b>|$|R
5000|$|The RIS {{file format}} [...] - [...] two letters, two spaces and a hyphen [...] - [...] is a tagged format for expressing bibliographic citations. According to the specifications, the lines must {{end with the}} ASCII {{carriage}} return and <b>line</b> <b>feed</b> <b>characters.</b> Note {{that this is the}} convention on Microsoft Windows, while in other contemporary operating systems, particularly Unix, the end of line is typically marked by <b>line</b> <b>feed</b> only.|$|R
5000|$|... fold is a Unix command {{used for}} making a file with long lines more {{readable}} on a limited width terminal. Most Unix terminals have a default screen width of 80, and therefore reading files with long lines could get annoying. The fold command puts a <b>line</b> <b>feed</b> every X <b>characters</b> {{if it does not}} reach a new line before that point. If the [...] argument is set, the fold command allows the user to set the maximum length of a line.|$|R
50|$|Printing control {{characters}} were first {{used to control}} the physical mechanism of printers, the earliest output device. An early implementation of this idea was the out-of-band ASA carriage control characters. Later, control {{characters were}} integrated into the stream of data to be printed.The carriage return character (CR), when sent to such a device, causes it to put the character {{at the edge of}} the paper at which writing begins (it may, or may not, also move the printing position to the next line).The <b>line</b> <b>feed</b> <b>character</b> (LF/NL) causes the device to put the printing position on the next line. It may (or may not), depending on the device and its configuration, also move the printing position to the start of the next line (whichever direction is first—left in Western languages and right in Hebrew and Arabic). The vertical and horizontal tab characters (VT and HT/TAB) cause the output device to move the printing position to the next tab stop in the direction of reading. The form feed character (FF/NP) starts a new sheet of paper, and may or may not move to the start of the first line. The backspace character (BS) moves the printing position one character space backwards. On printers, this is most often used so the printer can overprint characters to make other, not normally available, characters. On terminals and other electronic output devices, there are often software (or hardware) configuration choices which will allow a destruct backspace (i.e., a BS, SP, BS sequence) which erases, or a non-destructive one which does not. The shift in and shift out characters (SO and SI) selected alternate character sets, fonts, underlining or other printing modes. Escape sequences were often used to do the same thing.|$|E
40|$|This {{document}} {{describes the}} JavaScript Object Notation (JSON) text sequence format and associated media type "application/json-seq". A JSON text sequence consists of {{any number of}} JSON texts, all encoded in UTF- 8, each prefixed by an ASCII Record Separator (0 x 1 E), and each ending with an ASCII <b>Line</b> <b>Feed</b> <b>character</b> (0 x 0 A). Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741. Information about the current status of this document, any errata, and how to provide feedback on it may be obtained a...|$|E
50|$|The form <b>feed</b> <b>character</b> is {{sometimes}} used in plain text files of source code as a delimiter for a page break, or as marker for sections of code. Some editors, in particular emacs and vi, have built-in commands to page up/down {{on the form}} <b>feed</b> <b>character.</b> This convention is predominantly used in Lisp code, and is also seen in C and Python source code.|$|R
25|$|Construction {{began in}} mid-1960, with the {{official}} opening on November 1, 1963. As the primary dish is spherical, its focus is along a line rather than at one point, as {{would be the case}} for a parabolic reflector. As a result, complex <b>line</b> <b>feeds</b> were implemented to carry out observations. Each <b>line</b> <b>feed</b> covered a narrow frequency band: 2–5% of the center frequency of the band. A limited number of <b>line</b> <b>feeds</b> could be used at any one time, limiting the telescope's flexibility.|$|R
5000|$|Form feed is a page-breaking ASCII control character. It {{forces the}} printer to eject the current page and to {{continue}} printing {{at the top of}} another. Often, it will also cause a carriage return. The form <b>feed</b> <b>character</b> code is defined as 12 (0xC in hexadecimal), and may be represented as control+L or ^L. In a related use, control+L can be used to clear the screen in Unix shells such as bash. In the C programming language (and other languages derived from C), the form <b>feed</b> <b>character</b> is represented as [...] Unicode also provides the character [...] as a printable symbol for a form feed (not as the form feed itself).The form <b>feed</b> <b>character</b> is considered whitespace by the C character classification function [...]|$|R
40|$|Nowadays, {{assembly}} {{systems are}} used for the assembly of an increasing amount of models, which are often mass-customized to meet customers’ demands. This results in a rising number of parts used for assembly and, consequently, space scarcity at the line. There-fore, parts must not only be fed to the line cost-efficiently, but also meet space constraints (Limère et al., 2015). The assembly <b>line</b> <b>feeding</b> problem (ALFP) deals with the assignment of parts to <b>line</b> <b>feeding</b> policies {{in order to reduce}} costs and obtain a feasible solution. Within this paper, we examine all distinct <b>line</b> <b>feeding</b> policies at the same time, namely line stocking, kanban, sequencing and kitting (stationary and traveling kits). There is, {{to the best of our}} knowledge, no research conducted, including more than three <b>line</b> <b>feeding</b> policies in a single model (cf. Sali and Sahin, 2016). Furthermore, we assume space at the border of line (BoL) being variable. For this reason, space is not constrained per individual station, but we assume one overall space constraint for the entire line (Hua and Johnson, 2010). The main focus of this work is on accurately modeling the problem. This includes a rep-resentation of all <b>line</b> <b>feeding</b> processes, being storage, preparation, transportation, line side presentation and usage. By incorporating the variable space constraints at the BoL, we pro-vide a decision model reducing the overall costs for <b>line</b> <b>feeding</b> in assembly systems, since rigid space constraints at the BoL usually lead to more expensive <b>line</b> <b>feeding</b> policies. In contrast, variable space constraints enable balancing unequal space usage of different sta-tions, allowing cheaper <b>line</b> <b>feeding</b> policies to be selected. Some preliminary results on the cost impact of variable versus fixed space constraints will be discussed...|$|R
5000|$|... 0x0A, Hexadecimal octet {{corresponding}} to ASCII <b>line</b> <b>feed</b> control character; see Newline ...|$|R
5000|$|... #Caption: Fuel <b>line</b> <b>feeding</b> the {{auxiliary}} power unit of an Airbus A340.|$|R
5000|$|The {{carriage}} return and <b>line</b> <b>feed</b> functions were split for practical reasons: ...|$|R
5000|$|All {{whitespace}} {{in character}} content is retained (excluding <b>characters</b> removed during <b>line</b> <b>feed</b> normalization) ...|$|R
2500|$|On September 21, 2017, {{high winds}} {{associated}} with Hurricane Maria caused the 430 MHz <b>line</b> <b>feed</b> to break and fall onto the primary dish, damaging about 30 out of 38,000 aluminum panels. [...] Most Arecibo observations {{do not use}} the <b>line</b> <b>feed</b> but instead rely on the feeds and receivers located in the dome. [...] Overall, the damage inflicted by Maria was minimal.|$|R
5000|$|... unix2dos (sometimes named todos or u2d) {{is a tool}} {{to convert}} line breaks in a text file from Unix format (<b>Line</b> <b>feed)</b> to DOS format (carriage return + <b>Line</b> <b>feed)</b> and vice versa. When invoked as unix2dos the program will convert a Unix text file to DOS format, when invoked as dos2unix it will convert a DOS text file to UNIX format.|$|R
2500|$|... (followed {{by a new}} line, in {{the form}} of a {{carriage}} return followed by a <b>line</b> <b>feed).</b>|$|R
5000|$|... 10 (<b>line</b> <b>feed,</b> , , [...] ), {{used as the}} end of {{line marker}} in most UNIX systems and variants.|$|R
40|$|In practice, kitting, {{sequencing}} and downsizing {{are already}} {{found in a}} lot of production organizations. Nevertheless, considerable uncertainty still exists concerning {{the costs and benefits of}} these supply methods. The purpose of this research is to uncover the advantages and disadvantages of the different <b>line</b> <b>feeding</b> alternatives and quantify them. The complete flow of components, starting from the supplier to the supply at the final assembly line will be considered. Different methods of <b>line</b> <b>feeding</b> have an impact on material handling costs, operator efficiency, storage space requirement and flexibility. A cost model is developed that captures all these impacts and that quantifies the costs for different <b>line</b> <b>feeding</b> alternatives. This model is tested with data and some conclusions are drawn...|$|R
2500|$|U+0009 (Horizontal Tab), U+000A (<b>Line</b> <b>Feed),</b> U+000D (Carriage Return): {{these are}} the only C0 {{controls}} accepted in XML 1.0; ...|$|R
50|$|Note {{the absence}} of control characters, {{especially}} carriage return and <b>line</b> <b>feed.</b> These were encoded by the record structure.|$|R
5000|$|U+0009 (Horizontal Tab), U+000A (<b>Line</b> <b>Feed),</b> U+000D (Carriage Return): {{these are}} the only C0 {{controls}} accepted in XML 1.0; ...|$|R
5000|$|Many {{computer}} programs use the carriage return character, {{alone or with}} a <b>line</b> <b>feed,</b> to signal {{the end of a}} line of text, but other characters are also used for this function (see newline); others use it only for a paragraph break (a [...] "hard return"). Some standards which introduce their own representations for line and paragraph control (for example HTML) and many programming languages treat carriage return and <b>line</b> <b>feed</b> as whitespace.|$|R
50|$|It has a {{standard}} gauge railway <b>line</b> <b>feeding</b> bauxite from the mine at Sangarédi to the port. Population 88,222 (2008 est).|$|R
50|$|The station's metro <b>lines</b> <b>feed</b> {{into a large}} shed {{with direct}} rail {{connections}} to the adjacent Siemens train and tram factory.|$|R
5000|$|GET /dir/index.html HTTP/1.0 Host: localhost(followed {{by a new}} line, in {{the form}} of a {{carriage}} return followed by a <b>line</b> <b>feed).</b>|$|R
5000|$|The space bar, dash/underscore, index, {{backspace}} and <b>line</b> <b>feed</b> repeated when continually held down. This feature {{was referred}} to as [...] "Typamatic." ...|$|R
5000|$|Stereo capability, {{either by}} using two {{parallel}} ports or one port with switching using strobe (pin #1) and <b>line</b> <b>feed</b> (pin #14) signals.|$|R
50|$|The Green Line {{was five}} {{streetcar}} <b>lines</b> <b>feeding</b> into the Tremont Street Subway, named by their western terminals or the streets they ran along.|$|R
5000|$|... <b>line</b> <b>feed</b> (LF), {{also called}} [...] "newline" [...] - moving the cursor {{to the next}} {{on-screen}} line of text in a word processor document.|$|R
5000|$|To {{improve the}} {{keyboard}} for non-English-speakers, the symbol ↵ (U+21B5, HTML entity [...] ) {{was introduced to}} communicate the combined carriage return and <b>line</b> <b>feed</b> action.|$|R
25|$|As the headers only include {{printable}} ASCII <b>characters</b> and <b>line</b> <b>feeds,</b> {{an archive}} containing only text files therefore still {{appears to be}} a text file itself.|$|R
50|$|Actual <b>line</b> <b>feeds</b> in {{data items}} are encoded as a {{backslash}} {{followed by the}} letter n or N (the bytes 5C 6E or 5C 4E in UTF-8).|$|R
5000|$|... "Cylindrical, {{tapering}} at the anal end; finely white-dotted, {{with a lower}} lateral white <b>line.</b> <b>Feeds</b> on Capparis." [...] (Thwaites) Seems {{to prefer}} only Capparis zeylanica in Pune." ...|$|R
