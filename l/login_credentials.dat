141|16|Public
5|$|In 2015, Mejdal {{was one of}} the team's {{advisers}} whose <b>login</b> <b>credentials</b> {{were believed}} to have been used to hack into the team's database.|$|E
25|$|According to the SOA Bylaws, Fellows and Associates {{who have}} been members of the Society for 5 years or more are {{entitled}} {{to vote in the}} Board of Directors' election. According to the Section Bylaws, all members of a Section are entitled to vote in the Section Council election. This includes ASAs, FSAs, and members of co–sponsoring organizations who are also members of a Section. SOA members with valid e–mail addresses in the SOA database are sent <b>login</b> <b>credentials</b> to vote online. Members without valid email addresses, or who notify the SOA of their request, receive paper ballots.|$|E
25|$|Another cross-site {{vulnerability}} is cross-site request forgery (CSRF). In CSRF, code on an attacker's site tricks the victim's browser {{into taking}} actions the user didn't intend at a target site (like transferring {{money at a}} bank). It works because, if the target site relies only on cookies to authenticate requests, then requests initiated by code on the attacker's site will carry the same legitimate <b>login</b> <b>credentials</b> as requests initiated by the user. In general, the solution to CSRF is to require an authentication value in a hidden form field, and {{not only in the}} cookies, to authenticate any request that might have lasting effects. Checking the HTTP Referrer header can also help.|$|E
50|$|After {{discovering}} {{the location of}} a market, a user must register on the site, sometimes with a referral link, after which they can browse listings. A further PIN may be required to perform transactions, better protecting users against <b>login</b> <b>credential</b> compromise.|$|R
40|$|Computer {{security}} is undergoing tremendous research and development. Single Sign-On {{is a solution}} to simplify the authentication and authorization mechanisms in an organizational Intranet environment and a global Internet environment. Simply put, Single Sign-On is a capacity for a user to log in once, using a single <b>login</b> <b>credential,</b> to get accessing to all services that the user is authorized to use [1]. The project is to apply the techniques and methodologies acquired from CS 746 t...|$|R
5000|$|Rather than {{deleting}} user accounts, it removes private {{content and}} friendships. To start the suicide process, the user has {{to provide their}} <b>login</b> <b>credential</b> for the social network from which {{they want to be}} deleted, and then [...] "watch your life passing by and reflect upon your real & virtual friends", while private content and friend relationships are removed. In the end the user is included in a memorial album of all the suicides, with their profile picture, their name and their [...] "last words".|$|R
500|$|Observers, {{including}} series director David Petrarca and Time Warner CEO Jeff Bewkes, {{said that}} illegal downloads did not hurt the series' prospects; it benefited from [...] "buzz" [...] and social commentary, {{and the high}} piracy rate did not significantly translate to lost subscriptions. According to Polygon, HBO's relaxed attitude towards piracy and the sharing of <b>login</b> <b>credentials</b> amounted to a premium-television [...] "free-to-play" [...] model. At a 2015 Oxford Union debate, series co-creator David Benioff {{said that he was}} just glad that people watched the show; illegally downloaded copies of the show sometimes interested viewers enough to buy a copy of the show, especially in countries where the show was not televised. Co-creator D. B. Weiss had mixed feelings, saying that the show was expensive to produce and [...] "if it doesn't make the money back, then it ceases to exist". However, he was pleased that so many people [...] "enjoy the show so much they can't wait {{to get their hands on}} it." [...] In 2015, Guinness World Records called Game of Thrones the most-pirated television program.|$|E
2500|$|The only {{versions}} of MS-DOS currently recognized as stand-alone OSs and supported as such by Microsoft are MS-DOS 6.0 and 6.22, {{both of which}} remain available for download via their MSDN, volume license, and OEM license partner websites, for customers with valid <b>login</b> <b>credentials.</b> [...] MS-DOS is still used in embedded x86 systems due to its simple architecture and minimal memory and processor requirements, though some current products have switched to the still-maintained open-source alternative FreeDOS.|$|E
2500|$|Anti-spyware {{applications}} {{are able to}} detect many keyloggers and cleanse them. Responsible vendors of monitoring software support detection by anti-spyware programs, thus preventing abuse of the software. Enabling a firewall does not stop keyloggers per se, but can possibly prevent transmission of the logged material over the net if properly configured. Network monitors (also known as reverse-firewalls) {{can be used to}} alert the user whenever an application attempts to make a network connection. This gives the user the chance to prevent the keylogger from [...] "phoning home" [...] with his or her typed information. Automatic form-filling programs can prevent keylogging entirely by not using the keyboard at all. Most keyloggers can be fooled by alternating between typing the <b>login</b> <b>credentials</b> and typing characters somewhere else in the focus window.|$|E
30|$|User <b>login</b> and {{authentication}} <b>credentials</b> are not {{revealed to}} the cloud and bank servers.|$|R
40|$|Computer {{security}} {{is an ongoing}} issue and attacks are growing more sophisit- cated. One category of attack utilizes cross-site scripting (XSS) to extract confiden- tial data such as a user’s <b>login</b> <b>credential’s</b> without the knowledge of either the user nor the web server by utilizing vulnerabilities on web pages and internet browsers. Many people develop their own web applications without learning about or having good coding practices or security in mind. Web application firewalls are able to help but can be enhanced {{to be more effective}} than they currently are at detecting re- flected XSS attacks by analyzing the request and response data sent between the web application by a user’s browser to more quickly determine if a reflected XSS attack is being attempted. Spartan Web Application Firewall is designed to do this efficiently without being limited to requiring users to be using a specific web browser or web browser plug-in...|$|R
50|$|A Wireless Supplicant is {{a program}} that runs on a {{computer}} and is responsible for making login requests to a wireless network. It handles passing the <b>login</b> and encryption <b>credentials</b> to the authentication server. It also handles roaming from one wireless access point to another, {{in order to maintain}} connectivity.|$|R
5000|$|Microsoft Windows AD domain {{authentication}} - <b>login</b> <b>credentials</b> ...|$|E
50|$|Locks and <b>login</b> <b>credentials</b> are two {{analogous}} {{mechanisms of}} access control.|$|E
5000|$|Coin Thief - It stole bitcoin <b>login</b> <b>credentials</b> through cracked AngryBird {{applications}} ...|$|E
40|$|Wireless data {{networking}} {{is becoming more}} and more popular, and network operators of various kinds (cellular providers, wireless Internet Service Providers, etc.) are beginning to deploy public Wireless Local Area Network (WLAN) hotspots around the world. However, broad adoption of these hotspots may be inhibited by technical obstacles such as ease of use, security, and the inability of users to roam across hotspots as they can with cell phones today. The latter problem in particular highlights the need for a common hotspot architecture that is based on open standards and is acceptable to different service provider communities. Such an architecture must also be flexible to accommodate users with a variety of mobile device form factors and <b>login</b> <b>credential</b> types, as well as different billing models. We begin with a brief survey of the state and deployment of hotspots today and go on to describe a unified public hotspot architecture that addresses the technical obstacles mentioned above. A major theme of the paper is the transition from the insecure Universal Access Method (UAM) to more robust authentication and link security based on Wi-Fi ∗ Protected Access (WPA*). While much of the discussion centers on authentication and authorization for internet access, we also touch upon issues that need to be addressed to enable more advanced services to be deployed and accessed from such hotspots in the future...|$|R
40|$|Abstract:In {{this paper}} we are proposing {{a simple and}} {{efficient}} secure mechanism to authenticate the user and secure navigation to authenticated user through multi login detection, to prevent the user if any other user <b>logins</b> with same <b>credentials</b> and forwards a message to authorized user through Mail and mobile SMS. Virtual keyboard to prevent from the key loggers. Page Session expiry implementation, if users idle for some specific amount of time on page and to improve authentication levels we are implementing capcha code after authenticated login. I...|$|R
3000|$|We {{evaluated}} our proposed authentication protocol using {{series of}} experiments with combination of 150 UID’s and PWD’s, and four fingerprint databases each contains 150 finger images and 12 in-depth samples per finger (i.e., 150 (UID and PWD)[*]×[*] 12 (samples per finger)[*]=[*] 1800 credential records in each database). We set a time window bound in minutes for validating user <b>login</b> and authentication <b>credentials</b> in terms of False Negative Rate (FNR) and False Positive Rate (FPR). FNR means the rate of input credentials matched correctly and calculated as t [...]...|$|R
50|$|Similar to Zeus it {{was focused}} on {{stealing}} banking <b>login</b> <b>credentials</b> from browser sessions.|$|E
50|$|HSTS {{can also}} help to prevent having one's cookie-based website <b>login</b> <b>credentials</b> stolen by widely {{available}} tools such as Firesheep.|$|E
50|$|Firefox and Mozilla Thunderbird use Triple DES in CBC mode {{to encrypt}} website {{authentication}} <b>login</b> <b>credentials</b> when using a master password.|$|E
40|$|Computers and {{services}} such as eBanks and WebMails that identify users only at <b>login</b> via <b>credentials</b> are vulnerable to Identity Theft. Hackers perpetrate fraudulent activity under stolen identities by using credentials, such as passwords and smartcards, unlawfully obtained from legitimate users or by using logged-on computers that are left unattended. User verification methods provide an additional security layer by continuously confirming the identity of logged-on users based on their physiological and behavioral characteristics. We introduce a novel method that continuously verifies users according to characteristics of their interaction with the pointing device of the computer e. g. mouse, touch pad and stylus. The contribution of this work is three-fold: first, user verification is derived by combining the classification results of each individual mouse action, {{in contrast to the}} histogram approach in [2] in which verification is based on aggregations of mouse actions. Second, we propose a hierarchy of mouse actions from which the features are extracted. Third, we introduce new features to characterize the mouse activity which are used in conjunction with features proposed in previous work. The proposed algorithm outperforms current state-of-the-art methods by achieving higher verification accuracy while reducing the response time of the system. 1...|$|R
40|$|The NSTS blog is the NRC’s primary {{method of}} {{communication}} with licensees about the NSTS. The blog provides information such as Web site updates, notifications of upcoming events (e. g., NSTS training or industry meetings), and information on using the NSTS online. Stay up-to-date on all NSTS-related activities by subscribing to the NSTS blog. NSTS Help Desk The NRC maintains a Help Desk to assist users by answering questions and resolv-ing issues related to <b>credentialing,</b> <b>login</b> procedures, system use, transaction reporting, and any other problems encountered while using the NSTS. Users may also contact the Help Desk to submit system change requests (to remedy defects or enhance functionality). The NRC logs and tracks each inquiry for future reference. Help Desk availability is as follows...|$|R
5000|$|Many multi-factor {{authentication}} products require {{users to}} deploy client software to make multi-factor authentication systems work. Some vendors have created separate installation packages for network <b>login,</b> Web access <b>credentials</b> and VPN connection credentials. For such products, {{there may be}} four or five different software packages to push down to the client PC {{in order to make}} use of the token or smart card. This translates to four or five packages on which version control has to be performed, and four or five packages to check for conflicts with business applications. If access can be operated using web pages, it is possible to limit the overheads outlined above to a single application. With other multi-factor authentication solutions, such as [...] "virtual" [...] tokens and some hardware token products, no software must be installed by end users.|$|R
50|$|Tonido stores all user {{information}} including <b>login</b> <b>credentials</b> locally, enabling login into Tonido software without {{the requirement of}} an internet connection.|$|E
50|$|In 2015, Mejdal {{was one of}} the team's {{advisers}} whose <b>login</b> <b>credentials</b> {{were believed}} to have been used to hack into the team's database.|$|E
50|$|In January 2012, Seculert {{discovered}} that Ramnit started targeting Facebook accounts with considerable success, stealing over 45,000 Facebook <b>login</b> <b>credentials</b> worldwide, mostly {{from people in}} the UK and France.|$|E
50|$|One of Fancy Bear's {{preferred}} targets is {{web-based email}} services. A typical compromise {{will consist of}} web-based email users receiving an email urgently requesting that they change their passwords to avoid being hacked. The email will contain a link to a spoof website {{that is designed to}} mimic a real webmail interface, users will attempt to <b>login</b> and their <b>credentials</b> will be stolen. The URL is often obscured as a shortened bit.ly link in order to get past spam filters. Fancy Bear sends these phishing emails primarily on Mondays and Fridays. They also send emails purportedly containing links to news items, but instead linking to malware drop sites that install toolkits onto the target's computer. Fancy Bear also registers domains that resemble legitimate websites, then create a spoof of the site to steal credentials from their victims. Fancy Bear has been known to relay its command traffic through proxy networks of victims that it has previously compromised.|$|R
40|$|Abstract. In {{this paper}} we {{describe}} {{a service that}} allows users one-time password access to any web account, without any change to the server, without changing anything on the client, and without storing user credentials in-the-cloud. The user pre-encrypts his password using an assigned set of keys and these encryptions are sent as one-time passwords to his cell phone or carried. To login he merely enters one of the encryptions as prompted, and the URRSA service decrypts before forwarding to the <b>login</b> server. Since <b>credentials</b> are not stored (the service merely decrypts and forwards) it has no need to authenticate users. Thus, while the user must trust the service, there are no additional passwords or secrets to remember. Since our system requires no server changes {{it can be used}} on a trust-appropriate basis: the user can login normally from trusted machines, but when roaming use one-time passwords. No installation of any software or alteration of any settings is required at the untrusted machine: the user merely requires access to a browser address bar...|$|R
40|$|Enhanced {{authentication}} {{mechanisms are}} currently needed in several situations. Mainly {{due to the}} widespread use of the Internet, data exposure became a source of growing concern. Commonly used <b>login</b> and password <b>credentials</b> may not provide enough security in this scenario, as they may be easily stolen or guessed in some cases. The use of biometrics is a prominent alternative for user authentication, such as by the use of keystroke dynamics. This biometric technology allows the recognition of users by their typing rhythm, which can be performed using data provided by a common keyboard. However, recent work has shown that typing rhythm changes over time. As a result, a static biometric model can become outdated, decreasing the predictive performance of the system. In light of this fact, {{there is a need for}} new techniques able to dynamically adapt user models over time. This paper evaluates, in a data stream context, algorithms proposed in the literature for user authentication based on keystroke dynamics. Modifications to these algorithms are also proposed and evaluated. A study of the behaviour of the algorithms over time under several aspects is also performed. According to our experiments, adaptive methods can improve predictive performance of user recognition by keystroke dynamics. Coordenação de Aperfeiçoamento de Pessoal de Nível Superior (CAPES) Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) Fundação de Amparo à Pesquisa do Estado de São Paulo (FAPESP...|$|R
5000|$|In Quickbooks, the Control Key {{is used to}} {{validate}} <b>login</b> <b>credentials</b> during OLSU 1016 and OLSU 1013 errors. Keeping it depressed while sending information to the Quickbooks servers fixes the errors.|$|E
5000|$|... “transmitted user <b>login</b> <b>credentials</b> in clear, {{readable}} text {{over the}} Internet, despite {{the existence of}} free software, publicly available since at least 2008, that would have enabled respondent to secure such transmissions; ...|$|E
50|$|CloudMounter {{does not}} store <b>login</b> <b>credentials</b> of the added connections. Passwords {{are kept in}} macOS Keychain. They are sent {{directly}} to the servers only when required. Logging into the cloud accounts is performed through their standard APIs.|$|E
40|$|This release {{requires}} an update to the config file in PEcAn web interface. Without this change the web interface will not work. See config. php changes Following {{are the major}} new features of this release. Besides these new features many bugs have been fixed, see milestone 1. 4. 5 list of issues or complete list of commits. New Models This release now adds support for the PRELES model. PRELES Add some text here about PRELES models, {{where it comes from}} etc. New Met Data This release adds support for CRUNCEP CRUNCEP Add some text here about CRUNCEP, where it comes from etc. Web Interface The web interface now allows the user to <b>login</b> using their <b>credentials,</b> event if the flag authorization required is not set. Any run started when logged in will be recorded as belonging to the logged in user. Only users logged in can now delete workflows. Users can now filter the history page, by their own runs, those that are available locally, succeeded and by textual search (in notes, model, site). Notes are no longer an advanced feature, but can now be added during the input section. config. php changes A major change has been done to the web interface configuration files. Please make sure to update your config. php, without these changes your web interface will not allow you to do any runs! The variables $hostlist, $qsuboptions and $qsublist have been merged into a single variable called $hostlist. This list has a list of all hosts that are shown in the host pull down list, as well as any options for qsub. This now also allows you to specify a folder on the remote system to use. All runs will use this remote folder! Please see the example. config. php The following variables are no longer used : $qsuboptions, $qsublist, $ed_soil, $ed_inputs and can be safely removed from you config. php (after fixing the above). Additional changes PEcAn now leverages of Travis CI for continuous integration. To use this in your own branches and forks of PEcAn make sure you have merged in the master branch from PEcAn and created an account on Travis CI. Once that is done {{you should be able to}} flip the switch for PEcAn and it will start to build automatically anytime you push changes to your branches/fork. Downloads The latest version of the VM can be downloaded from NCS...|$|R
5000|$|Impersonating trusted {{organizations}} in emails, SMS text messages, phone calls {{or other forms}} of communication in order to dupe victims into disclosing their personal information or <b>login</b> <b>credentials,</b> typically on a fake corporate website or data collection form (phishing) ...|$|E
50|$|Asiasoft {{introduced}} {{the concept of}} Playpark accounts, which players can login to all of Asiasoft published games' accounts with only one set of <b>login</b> <b>credentials.</b> This service is not offered to MMORPG titles such as MapleStory, where players can possess multiple game accounts.|$|E
