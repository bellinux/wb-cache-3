12|4046|Public
50|$|<b>Logical</b> <b>Unit</b> <b>Number</b> Masking or LUN masking is an {{authorization}} {{process that}} makes a <b>Logical</b> <b>Unit</b> <b>Number</b> available to some hosts and unavailable to other hosts.|$|E
50|$|The term <b>logical</b> <b>unit</b> <b>number</b> {{also applies}} to an input/output access channel within certain {{programming}} languages.|$|E
5000|$|Allows {{access by}} {{multiple}} ESXi servers {{at the same}} time by implementing per-file locking. SCSI reservations are only implemented when <b>logical</b> <b>unit</b> <b>number</b> (LUN) metadata is updated (e.g. file name change, file size change, etc.) ...|$|E
5000|$|A SCSI target {{consists}} {{of one or}} more <b>logical</b> <b>units</b> (LUNs), which are identified by <b>logical</b> <b>unit</b> <b>numbers.</b>|$|R
50|$|In {{computer}} data storage, a SCSI initiator is the endpoint that initiates a SCSI session, that is, sends a SCSI command. The initiator {{usually does}} not provide any <b>Logical</b> <b>Unit</b> <b>Numbers</b> (LUNs).|$|R
50|$|In {{redundant}} {{array of}} independent disks (RAID) devices and storage area networks (SANs) and where <b>logical</b> drives (<b>logical</b> <b>unit</b> <b>numbers,</b> LUNs) are composed via LUN virtualization and aggregation, LBA addressing of individual disk should be translated by a software layer to provide uniform LBA addressing {{for the entire}} storage device.|$|R
5000|$|In {{computer}} storage, a <b>logical</b> <b>unit</b> <b>number,</b> or LUN, is {{a number}} used to identify a logical unit, which is a device addressed by the SCSI protocol or Storage Area Network protocols which encapsulate SCSI, such as Fibre Channel or iSCSI.|$|E
50|$|Each {{device on}} the SCSI bus is {{assigned}} a unique SCSI identification number or ID. Devices may encompass multiple logical units, which are addressed by <b>logical</b> <b>unit</b> <b>number</b> (LUN). Simple devices {{have just one}} LUN, more complex devices may have multiple LUNs.|$|E
5000|$|Storage Agent {{configure}}s {{and manages}} local and remote storage. The ability to enumerate (discover) and configure local storage devices is built-in. As of December 2013, remote storage devices can be configured, with no {{support for their}} discovery or provisioning. Thus, remote storage must be already provisioned using other approaches, and the resulting <b>logical</b> <b>unit</b> <b>number</b> (LUN) made available to this agent. Support for provisioning of remote storage is planned for future releases.|$|E
5000|$|Historically, {{data centers}} first created [...] "islands" [...] of SCSI disk arrays as direct-attached storage (DAS), each {{dedicated}} to an application, often visible {{as a number}} of [...] "virtual hard drives" [...] addressed as <b>Logical</b> <b>Unit</b> <b>Numbers</b> (LUNs). Essentially, a SAN consolidates such storage islands together using a high-speed network.|$|R
50|$|VM-aware storage (VAS) is {{computer}} {{data storage}} {{designed specifically for}} managing storage for virtual machines (VMs) within a data center. The goal is to provide storage that is simpler to use with functionality better suited for VMs compared with general-purpose storage. VM-aware storage allows storage to be managed as an integrated part of managing VMs rather than as <b>logical</b> <b>unit</b> <b>numbers</b> (LUNs) or volumes that are separately configured and managed.|$|R
50|$|Most volume-manager {{implementations}} {{share the}} same basic design. They start with physical volumes (PVs), which can be either hard disks, hard disk partitions, or <b>Logical</b> <b>Unit</b> <b>Numbers</b> (LUNs) of an external storage device. Volume management treats each PV as being composed of a sequence of chunks called physical extents (PEs). Some volume managers (such as that in HP-UX and Linux) have PEs of a uniform size; others (such as that in Veritas) have variably-sized PEs that can be split and merged at will.|$|R
5000|$|It is {{possible}} to have multiple layers of virtualization or mapping. It is then possible that the output of one layer of virtualization can then {{be used as the}} input for a higher layer of virtualization. Virtualization maps space between back-end resources, to front-end resources. In this instance, [...] "back-end" [...] refers to a <b>logical</b> <b>unit</b> <b>number</b> (LUN) that is not presented to a computer, or host system for direct use. A [...] "front-end" [...] LUN or volume is presented to a host or computer system for use.|$|E
5000|$|Note that a SCSI {{target device}} (which {{can be called}} a [...] "physical unit") is often divided into smaller [...] "logical units". For example, a {{high-end}} disk subsystem may be a single SCSI device but contain dozens of individual disk drives, {{each of which is}} a logical unit. Further, a RAID array may be a single SCSI device, but may contain many logical units, each of which is a [...] "virtual" [...] disk—a stripe set or mirror set constructed from portions of real disk drives. The SCSI ID, WWN, etc. in this case identifies the whole subsystem, and a second number, the <b>logical</b> <b>unit</b> <b>number</b> (LUN) identifies a disk device (real or virtual) within the subsystem.|$|E
5000|$|The drive number {{identifies}} a {{drive mechanism}} {{attached to a}} disk unit's controller and is analogous to a <b>logical</b> <b>unit</b> <b>number</b> in a SCSI controller {{that is capable of}} controlling multiple mechanisms (e.g., the OMTI SASI controllers that were developed to work with ST-412/ST-506 hard drives in the 1980s). In floppy disk units, the first mechanism is drive 0: and the second is 1:. It is fairly common practice to omit the drive number when communicating with a single drive floppy unit, as 0: is the default in such units, but since omitting the number can trigger a few obscure bugs in the DOS it is not a recommended practice (a colon alone is equivalent to 0: and is enough to avoid those bugs). An exception to this convention is with the Lt. Kernal hard disk subsystem, in which the drive number refers to [...] "logical units" [...] (virtual drives created on a single physical drive), which made syntax such as 4: or 10: necessary if a file to be opened was not on logical unit zero (equivalent to drive mechanism zero in a dual floppy unit).|$|E
50|$|In SCSI terminology, LUN {{stands for}} <b>logical</b> <b>unit,</b> which are {{specified}} by unique <b>logical</b> <b>unit</b> <b>numbers.</b> A LUN represents an individually addressable (logical) SCSI device {{that is part}} of a physical SCSI device (target). In an iSCSI environment, LUNs are essentially numbered disk drives. An initiator negotiates with a target to establish connectivity to a LUN; the result is an iSCSI connection that emulates a connection to a SCSI hard disk. Initiators treat iSCSI LUNs the same way as they would a raw SCSI or IDE hard drive; for instance, rather than mounting remote directories as would be done in NFS or CIFS environments, iSCSI systems format and directly manage filesystems on iSCSI LUNs.|$|R
50|$|In computing, Linux-IO (LIO) Target is an {{open-source}} {{implementation of}} the SCSI target {{that has become the}} standard one included in the Linux kernel. Internally, LIO does not initiate sessions, but instead provides one or more <b>Logical</b> <b>Unit</b> <b>Numbers</b> (LUNs), waits for SCSI commands from a SCSI initiator, and performs required input/output data transfers. LIO supports common storage fabrics, including FCoE, Fibre Channel, IEEE 1394, iSCSI, iSCSI Extensions for RDMA (iSER), SCSI RDMA Protocol (SRP) and USB. It is included in most Linux distributions; native support for LIO in QEMU/KVM, libvirt, and OpenStack makes LIO also a storage option for cloud deployments.|$|R
5000|$|RecoverPoint {{continuous}} data protection (CDP) tracks changes to data at a block level and journals these changes. Every write is tracked and stored as a different snapshot. Alternatively, groups of writes can be aggregated according to configuration {{in order to}} reduce storage space and network traffic.The journal then allows rolling data to a previous [...] "Point-In-Time" [...] in order to view the drive contents as they were before a certain data corruption. CDP can journal each write individually, hence enabling any-point-in-time snapshots, or it can be configured to combine consecutive writes {{in order to reduce}} journal space and improve bandwidth. CDP works only over a storage area network - the RecoverPoint appliances need to be configured for the replica and the journal <b>Logical</b> <b>Unit</b> <b>Numbers</b> (LUNs).|$|R
30|$|Right part of Figure 6 {{illustrates}} the SAN devices UML class diagram. Typically, a “SAN” device consists {{of more than}} one (usually two) “PSU” and “Fan” for redundancy purposes, several fiber channel (FC) and Ethernet Network Interface Cards (“FiberchannelNIC” and “EthernetNIC” classes) and a set of “Storage Unit”s. Furthermore, “Storage Unit”s are logically consolidated through “Logical Unit”s abstraction such that a “Storage Unit” is a member of one and only one “Logical Unit”. “Server”s access a “Logical Unit” through a unique <b>logical</b> <b>unit</b> <b>number</b> reference (“LUN” class).|$|E
40|$|The {{thermal model}} {{correlation}} process begins when measured thermocouple data {{is available from}} the orbital flight tests of the shuttle. For this effort, it is necessary to convert some of the system improved numerical differencing analyzer (SINDA) diffusion or arithmetic nodes to boundary nodes and then drive these boundary nodes to the temperature profile of a flight measurement. An efficient way to provide this capability within the SINDA and OFT software systems is to provide a new SINDA routine, D 1 FLTD, for use in VARIABLES 1 of SINDA, to access the processed (word-addressable) orbital data reduction center flight data and store the appropriate measurement temperature in the desired SINDA temperature location. The ODRC flight data that is to be used for driving the boundary nodes must be assigned a <b>logical</b> <b>unit</b> <b>number</b> and must reside on a word-addressable file. The user must also provide two SINDA constants for the word positions of the first and last words of the temperature record for each measurement identifier (MID), i. e. each call to D 1 FLTD, used in the model. D 1 FLTD is then called from the VARIABLES 1 block to obtain the SINDA boundary node temperature for any MID on the file at any time point...|$|E
40|$|The IDENTIFY DEVICE command {{includes}} an optional World Wide Name field containing an IEEE NAA Registered identifier in words 108 - 111. Serial Attached SCSI HBAs may {{use this to}} identify that the drive is the same even if it changes locations in the SCSI domain (the SAS address given to a drive {{is based on the}} expander phy to which it is attached). e 05178 r 0 proposes the field be upgraded to mandatory. The IDENTIFY PACKET DEVICE command does not currently define that field. It would be helpful if it were optionally available, and if implemented by an ATAPI device supporting SCSI commands, matched the SCSI target device name returned in the SCSI INQUIRY command Device Identification VPD page (83 h). The other SCSI names/identifiers it could be each have problems: a) It cannot serve as the SCSI target port name, because if the SATA device is behind a SATA port selector, the same name appears in two different domains. b) It cannot serve as the SCSI target port identifier, because the value is not actually used for addressing within any domains. In SAS, the expander to which the SATA device is attached assigns it a SAS address. An advanced expander could send IDENTIFY PACKET DEVICE to retrieve the World Wide Name and use that as the SAS address, but this is not required in SAS- 1. 1. c) It cannot serve as the logical unit name, because the PACKET command payload might include a SCSI- 2 compatible <b>LOGICAL</b> <b>UNIT</b> <b>NUMBER</b> field in the CDB (byte 1 bits 7 : 5), and each logical unit name must be unique. For IDENTIFY PACKET DEVICE, the World Wide Name needs to be optional, because ATAPI DVD drives, which are the most common packet devices, have little need. ATAPI tape drives are more likely to implement it...|$|E
50|$|LUN vs. SCSI Device ID: The LUN is not {{the only}} way to {{identify}} a <b>logical</b> <b>unit.</b> There is also the SCSI Device ID, which identifies a <b>logical</b> <b>unit</b> uniquely in the world. Labels or serial numbers stored in a <b>logical</b> <b>unit's</b> storage volume often serve to identify the <b>logical</b> <b>unit.</b> However, the LUN is the only way for an initiator to address a command to a particular <b>logical</b> <b>unit,</b> so initiators often create, via a discovery process, a mapping table of LUN to other identifiers.|$|R
5000|$|Sync Point manager {{coordinates}} <b>logical</b> <b>units</b> of work {{in multiple}} DDM servers. Two-phase commitment protocols ensure coordinated resource recovery when any <b>logical</b> <b>unit</b> of work fails.|$|R
5000|$|From the T10 working group, [...] "The EXTENDED COPY command {{provides}} a means to copy data from one set of <b>logical</b> <b>units</b> to another set of <b>logical</b> <b>units</b> or to {{the same set of}} <b>logical</b> <b>units.</b> The entity within a SCSI device that receives and performs the EXTENDED COPY command is called the copy manager. The copy manager is responsible for copying data from the source devices to the destination devices. The copy source and destination devices are <b>logical</b> <b>units</b> that may reside in different SCSI devices or the same SCSI device." ...|$|R
50|$|Many SCSI targets contain {{only one}} <b>logical</b> <b>unit</b> (so its LUN is {{necessarily}} zero). Others {{have a small}} <b>number</b> of <b>logical</b> <b>units</b> that correspond to separate physical devices and have fixed LUNs. A large storage system may have up to thousands of <b>logical</b> <b>units,</b> defined logically, by administrative command, and the administrator may choose the LUN or the system may choose it.|$|R
50|$|Similar to 08h Busy status, this {{status code}} is {{returned}} when the <b>logical</b> <b>unit</b> lacks {{the resources to}} accept a received task from an I_T nexus. This status code implies that the <b>logical</b> <b>unit</b> already {{has at least one}} task from that I_T nexus, where the 08h Busy status code implies that the <b>logical</b> <b>unit</b> currently has no tasks from that I_T nexus.|$|R
50|$|In another example: {{a single}} disk-drive has one {{physical}} SCSI port. It usually provides {{just a single}} target, which in turn usually provides just a single <b>logical</b> <b>unit</b> whose LUN is zero. This <b>logical</b> <b>unit</b> represents the entire storage of the disk drive.|$|R
5000|$|SNA defines {{several kinds}} of devices, called <b>Logical</b> <b>Unit</b> types: ...|$|R
40|$|The work is {{concerned}} with the procedures of calculation organization in the ariphmetic and <b>logical</b> <b>units</b> of the microprocessors. The aim is to develop the principles for construction of the modular reconstructed ariphmetic and <b>logical</b> <b>unit</b> with increased efficiency of using computer resource. The method for synthesis of the modular reconstructed ariphmetic and <b>logical</b> <b>unit,</b> 12 procedures for union of the computer sections in reconstructed ariphmetic and <b>logical</b> <b>unit</b> and also three criteria of the computer section stealing have been proposed. The efficiency of using computer resource in ALU of the microprocessors 80286 / 80287 of firm "Intel" has been increased; the procedures for union of the computer sections in reconstructed ALU provide the microprocessor power increase; the software "Object-oriented simulation system" and "Object-oriented data base" have developedAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
50|$|To {{provide a}} {{practical}} example, a typical multi-disk drive has multiple physical SCSI ports, each with one SCSI target address assigned. An administrator may format the disk array as a RAID and then partition this RAID into several separate storage-volumes. To represent each volume, a SCSI target is configured {{to provide a}} <b>logical</b> <b>unit.</b> Each SCSI target may provide multiple <b>logical</b> <b>units</b> and thus represent multiple volumes, {{but this does not}} mean that those volumes are concatenated. The computer that accesses a volume on the disk array identifies which volume to read or write with the LUN of the associated <b>logical</b> <b>unit.</b>|$|R
5000|$|... a <b>Logical</b> <b>Unit</b> {{acts as the}} {{intermediary}} {{between the}} user and the network.|$|R
5000|$|APPC {{is linked}} with the term LU 6.2 ( [...] <b>Logical</b> <b>unit</b> type 6.2 [...] ) ...|$|R
5000|$|One or more datafiles form a <b>logical</b> <b>unit</b> of {{database}} storage {{called a}} tablespace.|$|R
5000|$|Function: Structuring Event-B {{developments}} into <b>logical</b> <b>units</b> of modelling, called modules; Model composition; Model reuse ...|$|R
50|$|How {{to select}} a LUN: In the early {{versions}} of SCSI, an initiator delivers a Command Descriptor Block (CDB) to a target (physical unit) and within the CDB is a 3-bit LUN field to identify the <b>logical</b> <b>unit</b> within the target. In current SCSI, the initiator delivers the CDB to a particular <b>logical</b> <b>unit,</b> so the LUN appears in the transport layer data structures {{and not in the}} CDB.|$|R
50|$|<b>Logical</b> <b>Unit</b> 6.2 is an IBM-originated {{communications}} protocol specification dating from 1974, and {{is part of}} IBM's Systems Network Architecture.|$|R
