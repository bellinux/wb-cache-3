0|10|Public
40|$|This paper {{discusses}} {{the use of}} the bayesian network model for a classification problem related to the document image understanding field. Our application is focused on logical labeling in documents, which consists in assigning logical labels to text blocks. The objective is to map a set of <b>logical</b> <b>tags,</b> composing the document logical structure, to the physical text components. We build a bayesian network model that allows this mapping using supervised learning, and without imposing a priori constraints on the document structure. The learning strategy is based partly on genetic programming tools. A prototype has been implemented, and tested on tables of contents found in periodicals and magazines. ...|$|R
40|$|International audienceDifferent {{approaches}} {{have been used}} to represent textual documents, based on boolean model, vector space model or probabilistic models. In text min- ing as in information retrieval (IR), these models have shown good results about textual documents modeling. They nevertheless do not take into account docu- ments structure. In many applications however, documents are inherently struc- tured (e. g. XML documents). In this article 1, we propose an extended probabilistic representation of docu- ments in order to take into account a certain kind of structural information: <b>logical</b> <b>tags</b> that represent the different parts of the document and formatting tags used to emphasized text. Our approach includes a learning step that estimates the weight of each tag. This weight is related to the probability for a given tag to distinguish the relevant terms...|$|R
30|$|An {{approach}} that achieves multiple table creation for a tenant is proposed and successfully implemented.Figure 5 shows the proposed approach where extension table {{consists of a}} Tenant_id, a Record_id, an XML attribute and a Table_id. Tenant_id and Record_id uniquely identify a particular record. A Record_id is used to associate each transaction with a unique record number. XML object contains the data for an entire row of a Tenants <b>logical</b> table. <b>Tags</b> in a single XML object refers to {{the name of a}} particular field in the corresponding table. Table_id field represents the id of the table in which a particular record is inserted for the specified tenant. The tenant specifies the name of the table and our proposed system generates unique id for that table for that tenant.|$|R
40|$|International audienceThis paper {{gives an}} Abstract Categorial Grammar (ACG) account of (Kallmeyer and Kuhlmann, 2012) 's process of {{transformation}} of the derivation trees of Tree Adjoining Grammar (TAG) into dependency trees. We make explicit how the requirement of keeping a direct interpretation of dependency trees into strings results into lexical ambiguity. Since the ACG framework has already been used to provide a <b>logical</b> semantics from <b>TAG</b> derivation trees, we have a unified picture where derivation trees and dependency trees are related but independent equivalent ways {{to account for the}} same surface [...] meaning relation...|$|R
50|$|A join is {{a common}} {{operation}} on a normalized table design, where logically related data is brought back together for use in an application. Joins can be expensive operations because many data accesses {{may be needed to}} bring related data into memory. This effort can be optimized in some cases by defining a single base table that contains data for two or more logical tables. The column set of the base table is the union of the column sets of these <b>logical</b> tables. <b>Tagged</b> columns make this possible because of their good handling of both multi-valued and sparse valued data. Since related data is stored together in the same record, it is accessed together thereby minimizing the number of disk accesses to perform the join. This process can be extended to a large number of logical tables as ESE can support up to 64,993 tagged columns. Since indexes can be defined over multi-valued columns, it is still possible to index ‘interior’ tables. However, some limitations exist and applications should consider pre-joining carefully before employing this technique.|$|R
40|$|A text parsing {{component}} {{designed to}} be part of a system that assists students in academic reading an writing is presented. The parser can automatically add a relational discourse structure annotation to a scientific article that a user wants to explore. The discourse structure employed is defined in an XML format and is based the Rhetorical Structure Theory. The architecture of the parser comprises preprocessing components which provide an input text with XML annotations on different linguistic and structural layers. In the first version these are syntactic tagging, lexical discourse marker <b>tagging,</b> <b>logical</b> document structure, and segmentation into elementary discourse segments. The algorithm is based on the shift-reduce parser by Marcu (2000) and is controlled by reduce operations that are constrained by linguistic conditions derived from an XML-encoded discourse marker lexicon. The constraints are formulated over multiple annotation layers of the same text...|$|R
40|$|Introduction First {{introduced}} by [Ret 93], pomset linear logic {{can deal with}} linguistic aspects by inducing a partial order on words. [LR 95] uses this property: it defines modules (or partial proof-nets) which consist in entries for words, describing both the category of the word and its behavior when interacting with other words. Then the natural question of comparing the generative power of such grammars with Tree Adjoining Grammars [JLT 75], as [JK 96] pointed some links out, arises. To answer this question, we propose a <b>logical</b> formalization of <b>TAGs</b> {{in the framework of}} linear logic proof-nets. We aim to model trees and operations on these trees with a restricted part of proof-nets (included in the intuitionistic ones), and we show how this kind of proof-nets expresses equivalently TAG-trees. The first section presents all the definitions. Then, in the second section, we propose a fragment of proof-nets allowing the tree encoding and the third section defines the way we mod...|$|R
40|$|MMASS) {{has been}} {{proposed}} as a general framework to build multiagent systems in which agents are situated in an environment whose characterization can be multifaceted (each facet of the environment is named a layer, hence {{the name of this}} framework). Agents in the MMASS can be purely reactive and computationally lightweight, or deliberative and employ highly sophisticated reasoning mechanisms. As a consequence, the MMASS has proven to be useful to build massively multi-agent systems (in which typically each agent is computationally simple) as well as systems comprised by complex agents (in which typically we have few agents interacting {{with each other and with}} the environment). In the present article we combine a simplified version of MMASS with a specific logical system, which we suggest that can be particularly suitable to solve problems based on simulations. The proposed logical system is a variation of classical FOPL, in which <b>logical</b> statements are <b>tagged</b> with probability values so that one can reason probabilistically as opposed of reasoning with probabilities or reasoning about probabilities. ...|$|R
40|$|Everything {{needs to}} change, so {{everything}} can stay the same, From “The Leopard” by Giuseppe Tomasi di Lampedusa] Internet {{in recent years}} has become a huge set of channels for content distribution. And this has highlighted limits and inefficiencies of the current protocol suite originally designed for host-to-host communication. This paper joins the research efforts addressed by the new Internet challenges by proposing LogNet, a conservative extension of the current TCP/IP hourglass Internet architecture, that provides a new network aware Content Discovery Service. Contents are referred via the new notion of HyperNames (HN), whose rich syntax allow to specify, hosts, pki, fingerprint and a large list of optional <b>logical</b> attributes (<b>tags)</b> attached to the content name, such as mutable vs immutable contents, digital signatures, ownership, availability, price, etc. HyperNames are in part human-readable and in part machine-readable and only in the latter case self-certifying. Publication and discovery of HN is achieved using the new distributed service Content Name System (CNS) with related protocol, whose behavior and architecture is, partly, inspired by the DNS, and whose “routing logic” uses the BGP inter domain routing information. The core of CNS is the HyperName Lookup Algorithm (HLA) which “tunes” content discovery of being network aware, by exploiting the Autonomous System (AS) relationships. In partic- ular, the HLA starts the content discovery process in the local AS (i. e., where the query starts), and in case of negative answer, propagate the query by accounting for the AS-to-AS relationships (i. e., peering, provider-to-customer, customer-to-provider). After discovered the owner(s) or the purveyor(s) of the content we are looking for, the latter can be retrieved using common transfer protocols (centralized or distributed), since the actors of this transfer are chosen in a network aware fashion (i. e., as close as possible one to each other) ...|$|R
40|$|Some of {{the current}} {{applications}} using proprietary end-to-end protection method would like to convert to using the protection defined in the SBC and SPC standards. However, the methods used require a larger application tag field than is currently defined. They also imbed information that performs a similar function to the reference tag field. As a result {{they would like to}} have the option to expand the application tag field to include the reference tag field. The following proposal requests the RTO_EN bit be expanded to a 3 bit field to allow different usages of the reference tag field (e. g., setting the RTO_EN field to 010 b would have the effect of preventing the device server from modifying the reference tag). A bit is also added to Extended INQUIRY Data VPD page to inform the application client if this option is supported. With this proposal the meaning of a logical unit that is formatted with RTO_EN set to one changes from failing all non- 32 -byte command except legacy for legacy operations (i. e., those with RDPROTECT, WRPROTECT, and VRPROTECT set to zero) to allowing all commands to execute. Because the 32 -byte commands now have two different ways to define the content of the reference tag so a bit is added to the CDB that indicates if the EXPECTED INITIAL <b>LOGICAL</b> BLOCK REFERENCE <b>TAG</b> is to used or not. Changes to SPC- 4 1. 0. 1 Extended INQUIRY Data VPD page The Extended INQUIRY Data VPD page (see table 1) provides the application client with a means to obtain information about the logical unit...|$|R

