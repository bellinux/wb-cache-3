0|972|Public
40|$|<b>Language</b> <b>engineering</b> is {{software}} engineering concerned with computer <b>languages.</b> Agile <b>language</b> <b>engineering</b> {{is the result}} of adapting agile principles to <b>language</b> <b>engineering.</b> An agile <b>language</b> <b>engineering</b> process is geared to ever changing requirements and fosters higher language quality, software quality, and developer productivity. It provides short iteration cycles, intensive user integration, control over frequent changes, and continuous delivery of valuable language tools. In this paper, we point out technological premises for agile language engineering; and we sketch how they are met by well-known as well as upcoming techniques and tools from <b>language</b> <b>engineering...</b>|$|R
50|$|Despite the {{appearance}} that Malleable was poised for long term successes, {{this was not}} guaranteed. There were many stove manufactures that did not survive the coming decades. The 1918 <b>Engineering</b> <b>Directory</b> has eight pages listing approximately 400 manufactures of stoves in the United States.|$|R
40|$|What is Applied Linguistics? What are {{its mission}} and scope? This paper will outline {{theoretical}} approach to defining these concepts, along with presenting three new concepts: <b>Language</b> Resources, <b>Language</b> <b>Engineering</b> and the Science of <b>Language</b> <b>Engineering.</b> Also, {{in the area}} of <b>Language</b> <b>Engineering,</b> four theoretical suppositions will be reviewed...|$|R
40|$|This paper reports our {{experience}} in exploiting the metamodelling approach of model-driven <b>language</b> <b>engineering</b> State Machines (ASMs) formal method, {{and develop a}} general framework (ASMETA) for a wide interoperability of ASM tools in a model-driven development context. We describe the requirements to fulfill and the design/implementation/validation/tools development steps necessary to support such a <b>language</b> <b>engineering</b> life cycle. We finally discuss the benefits/limits of a model-driven <b>language</b> <b>engineering</b> approach with respect to traditional techniques primarily used for the same goal...|$|R
40|$|General and {{reusable}} {{software for}} <b>language</b> <b>engineering</b> is desirable for several reasons, {{first and foremost}} for shortening the way from idea to prototype and for reducing the effort needed in building <b>language</b> <b>engineering</b> systems utilising existing components, thus allowing the system's developer {{to focus on what}} is specific to the task at hand. When attempting to create such general and reusable <b>language</b> <b>engineering</b> software, {{there are a number of}} challenges that need to be tackled, varying along several dimensions such as the language and the domain to model, the characteristics of the task to be solved, and the type of users for which the system is intended. Some of the important challenges a developer of <b>language</b> <b>engineering</b> software face are how to: cope with differences between languages and between dierent subparts within a language; cope with time bounded variations within registers (sublanguages); understand users, their situations and tasks; and evaluate <b>language</b> <b>engineering</b> systems...|$|R
40|$|<b>Language</b> <b>engineering</b> is a new, practical, {{branch of}} NLP and Computational Linguistics. We {{describe}} two <b>language</b> <b>engineering</b> systems: GATE (General Architecture for Text Engineering), an architecture {{to aid in}} the production and delivery of <b>language</b> <b>engineering</b> systems which significantly reduces development time and ease of reuse. We also describe a sense tagger which we implemented within the GATE architecture, and which achieves high accuracy (93 % of all words in text to a broad semantic level). The implementation of the sense tagger was used as a practical task on which to evaluate the usefulness of the GATE architecture and identify its strengths and weaknesses. 1 Introduction Within the last few years a new area has emerged from the fields of Computational Linguistics and Natural <b>Language</b> Processing: <b>Language</b> <b>Engineering.</b> This has been defined in various ways by different authors [2, 11], however the basic principal is that <b>Language</b> <b>Engineering</b> is the discipline or act of engin [...] ...|$|R
40|$|Ellogon is a multi-lingual, cross-platform, {{general-purpose}} <b>language</b> <b>engineering</b> environment, {{developed in}} order to aid both researchers who are doing research in computational linguistics, as well as companies who produce and deliver <b>language</b> <b>engineering</b> systems. Ellogon as a <b>language</b> <b>engineering</b> platform offers an extensive set of facilities, including tools for processing and visualising textual/HTML/XML data and associated linguistic information, support for lexical resources (like creating and embedding lexicons), tools for creating annotated corpora, accessing databases, comparing annotated data, or transforming linguistic information into vectors for use with various machine learning algorithms...|$|R
25|$|GATE: {{a natural}} {{language}} processing and <b>language</b> <b>engineering</b> tool.|$|R
40|$|This {{dissertation}} presents {{research on}} techniques, methods, and tool support for domain-specific <b>language</b> <b>engineering.</b> Domain-specific <b>language</b> <b>engineering</b> is {{the discipline of}} designing, developing, and maintaining domain-specific programming languages. The focus of this thesis is the architecture of language workbenches their underlying technologies. Language workbenches are tools that make <b>language</b> <b>engineering</b> more efficient by providing an integrated development environment for <b>language</b> <b>engineering</b> tasks. In particular, we introduce the Spoofax language workbench, and describe its techniques for high-level, portable language definitions, language composition, interactive support for defining languages, and language testing. Our research focuses on three main themes: applying domain-specific languages for declarative specification of languages and IDEs; supporting declarative syntax definition for generating a parser-based, interactive development environment; and providing interactive meta-tooling support, exploring the application of modern IDE technology to DSL engineering. Software TechnologyElectrical Engineering, Mathematics and Computer Scienc...|$|R
40|$|Abstract. In domain-specific {{development}} model-driven development environ-ments play {{an important}} role. Most of these environments only provide support for <b>language</b> <b>engineering,</b> but do not consider the second dimension which is con-cerned with domain engineering. In this paper we join the concerns of <b>language</b> <b>engineering</b> and domain engineering towards a new comprehensive approach of domain-specific development. It allows domain designers to build domain mod-els containing both, types and instances, and it allows language designers for defining language metamodels. Furthermore, based on the integrated description logics the environment provides services for productive modeling in domain and <b>language</b> <b>engineering.</b> ...|$|R
40|$|Research in {{comparable}} corpora {{has been}} motivated by two main reasons in the <b>language</b> <b>engineering</b> and the linguistics communities. In <b>language</b> <b>engineering,</b> it is chiefly {{motivated by the}} need to use comparable corpora as training data for statistical NLP applications such as statistical machine translation or cross-language information retrieval. In linguistics, on the other hand, comparable corpora are o...|$|R
5000|$|... {{applications}} of terminology and other language resources in <b>language</b> <b>engineering</b> and content management ...|$|R
40|$|The second {{international}} {{workshop on}} Open and Original Problems in Software <b>Language</b> <b>Engineering</b> (OOP-SLE' 14) follows {{the first one}} held at WCRE 2013 in Koblenz. It {{is meant to be}} a discussion-oriented and collaborative forum for formulating and addressing with open, unsolved and unsolvable problems in software <b>language</b> <b>engineering</b> (SLE), which is a research domain of systematic, disciplined and measurable approaches of development, evolution and maintenance of artificial languages used in software development. OOPSLE aims to serve as a think tank for identifying and formulating challenges in the software <b>language</b> <b>engineering</b> field - these challenges could be addressed later at venues like SLE, MODELS, CSMR, WCRE, ICSM and others...|$|R
40|$|The aim of {{this book}} is to {{introduce}} the language XMF. This is done by defining the language, providing some examples of applications that can be written directly in the XOCL language that comes with XMF, and then by showing how XMF {{can be used for}} <b>language</b> <b>engineering.</b> The main focus of this book is on <b>language</b> <b>engineering</b> by example...|$|R
5000|$|... "A {{test of the}} leaf-ancestor metric for parse accuracy" [...] Natural <b>Language</b> <b>Engineering</b> 9 (2003): xx-xx. Anna Babarczy ...|$|R
40|$|Main thesis: “Finite-State Machines {{applied to}} Text-to-Speech Synthesis. Non-Uniform Units Selection and Spell checking. ” Additional thesis: “In a quality {{education}} system, {{the use of interactive}} computer tools will facilitate and improve the learner’s continuous evaluation. ” M. Res., <b>Language</b> <b>Engineering</b> (1999 – 2000) University of Paris-Est Marne-la-Vallée, Paris, France. Magna cum laude, top in the year. M. Sc., <b>Language</b> <b>Engineering</b> (1998 – 1999) Catholic university of Louvain, Louvain-la-Neuve, Belgium...|$|R
40|$|We {{are pleased}} to present the {{proceedings}} of the Second International Conference on Software <b>Language</b> <b>Engineering</b> (SLE 2009). The conference was held in Denver, Colorado (USA) during October 5 – 6, 2009 and was co-located with the 12 th IEEE/ACM International Conference on Model-Driven <b>Engineering</b> <b>Languages</b> and Systems (MODELS 2009) and the 8 th ACM International Conference on Generative Programming and Component Engineering (GPCE 2009). The SLE conference series is devoted {{to a wide range of}} topics related to artificial <b>languages</b> in software <b>engineering.</b> SLE is an international research forum that brings together researchers and practitioners from both industry and academia to expand the frontiers of software <b>language</b> <b>engineering...</b>|$|R
40|$|<b>Language</b> <b>Engineering</b> aims at {{providing}} advanced {{techniques to}} design, implement and maintain languages or metalanguages. The Meta-Modeling Framework provides a method applying Object-Oriented modeling {{to the definition}} of languages, as well as a powerful meta-circular Meta-Modeling Language based on OCL, allowing language engineers to define high-quality languages at low cost. In order to per-form a better reusability, <b>Language</b> <b>Engineering</b> also provides <b>language</b> composition mechanisms, as composition of model elements, inspired by Software Engineering. ...|$|R
40|$|<b>Language</b> <b>engineering</b> {{implements}} {{functions of}} a language and information via computers. The need for <b>language</b> <b>engineering</b> platforms has been generally recognized and several researches are being undertaken around the world. Our goal is to establish Korean information platform of linguistic resources and tools lot Korcau la,guagc and intbrnmtion commnnitics. The platform will support researchers and engineers with well developed aml standardized resources and application tools thereby avoiding duplicate activities from scratch a. nd pliying overall effort on the domain...|$|R
50|$|The Expert Advisory Group on <b>Language</b> <b>Engineering</b> Standards (EAGLES) is an {{initiative}} of the European Commission, within DG XIII Linguistic Research and Engineering programme. Numerous well-known companies, research centres, universities and professional bodies across the European Union collaborate {{under the aegis of}} EC DGXIII to produce the EAGLES Guidelines, which set out recommendations for de facto standards and for good practice in the above areas of <b>language</b> <b>engineering.</b> The EAGLES initiative is coordinated by Consorzio Pisa Ricerche, Pisa, Italy.|$|R
40|$|Low density {{languages}} are typically viewed {{as those for}} which few language resources are available. Work relating to low density languages is becoming a focus of increasing attention within <b>language</b> <b>engineering</b> (e. g. Charoenporn, 1997, Hall and Hudson, 1997, Somers, 1997, Nirenberg and Raskin, 1998, Somers, 1998). However, much work related to low density languages {{is still in its}} infancy, or worse, work is blocked because the resources needed by language engineers are not available. In response to this situation, the MILLE (Minority <b>Language</b> <b>Engineering)</b> project was established by the Engineering and Physical Sciences Research Council in the UK to discover what language corpora should be built to enable <b>language</b> <b>engineering</b> work on non-indigenous minority languages in the UK, most of which are typically low- density languages. This paper summarises some of the major findings of the MILLE project...|$|R
50|$|Vetulani is {{an author}} of over 100 {{publications}} (including six books), which cover such subjects as computational linguistics, <b>language</b> <b>engineering,</b> artificial intelligence and mathematical logic.|$|R
5000|$|... "Definitional, personal, and {{mechanical}} constraints {{on part of}} speech annotation performance". Natural <b>Language</b> <b>Engineering</b> 12 (2006): xx-xx. Anna Babarczy and John Carroll (not John M Carroll) ...|$|R
25|$|<b>Language</b> <b>engineering</b> {{involves}} {{the creation of}} natural language processing systems, whose cost and outputs are measurable and predictable, as well as establishment of language regulators, such as formal or informal agencies, committees, societies or academies as language regulators, to design or develop new structures to meet contemporary needs. It is a distinct field contrasted to natural language processing and computational linguistics. A recent trend of <b>language</b> <b>engineering</b> {{is the use of}} Semantic Web technologies for the creation, archiving, processing, and retrieval of machine processable language data.|$|R
40|$|Much {{progress}} has been made in the provision of reusable data resources for Natural <b>Language</b> <b>Engineering,</b> such as grammars, lexicons, thesauruses. Although a number of projects have addressed the provision of reusable algorithmic resources (or `tools'), takeup of these resources has been relatively slow. This paper describes GATE, a General Architecture for Text Engineering, which is a freely-available system designed to help alleviate the problem. 1 Resource Reuse and Natural <b>Language</b> <b>Engineering</b> Car designers don't reinvent the wheel each time they plan a new model, but software engineers often find themselves repetitively producing roughly the same piece of software in slightly different form. The reasons for this inefficency have been extensively studied, and a number of solutions are now available (Prieto-Diaz and Freeman, 1987; Prieto-Diaz, 1993). Similarly, the Natural <b>Language</b> <b>Engineering</b> (NLE 1) community has identified the potential benefits of reducing repetition, and w [...] ...|$|R
40|$|This paper {{gives an}} {{overview}} of <b>language</b> <b>engineering</b> public domain and freely available software. The focus is on lingware tools that are available via the World Wide Web for the Unix platform and concerned with corpora production. Discussed is the relation of tools to standards, in particular SGML, and the benefits and disadvantages of using public domain tools. Given is {{an overview of}} a number of generic string processing and corpus conversion tools of statistically based annotations systems and computational linguistic software. Some on-going initiatives on production, standardisation and availability of language tools are mentioned and a number of Web sites, related to the discussed topics are listed. Keywords: public domain tools, <b>language</b> <b>engineering,</b> corpus development, standards, SGML, Unix, World Wide Web 1 Introduction This paper gives an introduction to <b>language</b> <b>engineering</b> software, especially as it relates to computerised textual corpora. The focus of the pape [...] ...|$|R
40|$|This {{paper is}} about the {{experience}} of using HPSG for the <b>Language</b> <b>Engineering</b> (LE) project LS-GRAM, which aims at the creation of large-scale grammatical resources for practical NLPapplications. Such resources have to show specific properties in order to serve their purpose. Among these properties are: large coverage, efficient performance, applicability to real texts. The platform used for LS-GRAM is the Advanced <b>Language</b> <b>Engineering</b> Platform (ALEP) which provides an efficient `lean' formalism (defined in [Alsh 91]) {{as one of its}} main characteristics. LS-GRAM (though being an LE project) intended to create linguistically felicitous resources, i. e. resources based on a sound linguistic theory. The most prominent near-to-standard theory currently is HPSG. On this background, the question arose whether the two basic dimensions of the LS-GRAM enterprise [...] doing <b>language</b> <b>engineering</b> (LE) {{on the basis of the}} ALEP platform while following the HPSG paradigm [...] are reconcilable or even mutually productiv...|$|R
5000|$|Journal of Natural <b>Language</b> <b>Engineering,</b> Cambridge University Press (to {{appear in}} Spring 2015): Aida Khemakhem, Bilel Gargouri, Abdelmajid Ben Hamadou, Gil Francopoulo: ISO Standard Modeling {{of a large}} Arabic Dictionary.|$|R
40|$|The EMILLE Project (Enabling Minority <b>Language</b> <b>Engineering)</b> was {{established}} to construct a 67 million word corpus of South Asian languages. In addition, the project has had to address {{a number of issues}} related to establishing a <b>language</b> <b>engineering</b> (LE) environment for South Asian language processing, such as translating 8 -bit language data into Unicode and producing a number of basic LE tools. This paper will focus on the corpus construction undertaken on the project and will outline the rationale behind data collection. In doing so a number of issues for South Asian corpus building will be highlighted. ...|$|R
5000|$|Guzmán led a {{research}} group called IGRAL, which investigated <b>language</b> <b>engineering.</b> The group began more {{work on the}} Atamiri system in 2001 and created Qopuchawi, a multilingual messaging service with translations into 30 different languages.|$|R
25|$|After the {{creation}} of Interlingua, {{there were no more}} successful attempts in international <b>language</b> <b>engineering</b> that would attract a significant number of supporters, thus the enthusiasm about constructed languages gradually decreased in the years between 1960–1990.|$|R
40|$|Software <b>Language</b> <b>Engineering</b> (SLE) {{has emerged}} as a field in {{computer}} science research and software engineering, but it has yet to become entrenched as part of the standard curriculum at universities. Many places have a compiler construction (CC) course and a programming languages (PL) course, but these are not aimed at training students in typical SLE matters such as DSL design and implementation, language workbenches, generalised parsers, and meta-tools. We describe our experiences with developing and teaching software <b>language</b> <b>engineering</b> courses at the Universities of Bergen and Koblenz-Landau. We reflect on lecture topics, assignments, development of course material, and other aspects and variation points in course design...|$|R
40|$|The {{benefits}} of Model-Driven Software Development (MDSD) and Domain-Specific Languages (DSLs) wrt. efficiency and quality in software engineering increase {{the demand for}} custom languages {{and the need for}} efficient methods for <b>language</b> <b>engineering.</b> This motivated the introduction of language families that aim at further reducing the development costs and the maintenance effort for custom languages. The basic idea is to exploit the commonalities and provide means to enable systematic variation among a set of related languages. 	 Current techniques and methodologies for <b>language</b> <b>engineering</b> are not prepared to deal with the particular challenges of language families. First, <b>language</b> <b>engineering</b> processes lack means for a systematic analysis, specification and management of variability as found in language families. Second, technical approaches for a modular specification and realisation of languages suffer from insufficient modularity properties. They lack means for information hiding, for explicit module interfaces, for loose coupling, and for flexible module integration. Our first contribution, Feature-Oriented <b>Language</b> Family <b>Engineering</b> (LFE), adapts methods from Software Product Line Engineering to the domain of <b>language</b> <b>engineering.</b> It extends Feature-Oriented Software Development to support metamodelling approaches used for <b>language</b> <b>engineering</b> and replaces state-of-the-art processes by a variability- and reuse-oriented LFE process. Feature-oriented techniques are used as means for systematic variability analysis, variability management, language variant specification, and the automatic derivation of custom language variants. 	 Our second contribution, Integrative Role-Based Language Composition, extends existing metamodelling approaches with roles. Role models introduce enhanced modularity for object-oriented specifications like abstract syntax metamodels. We introduce a role-based language for the specification of language components, a role-based composition language, and an extensible composition system to evaluate role-based language composition programs. The composition system introduces integrative, grey-box composition techniques for language syntax and semantics that realise the statics and dynamics of role composition, respectively. To evaluate the introduced approaches and to show their applicability, we apply them in three major case studies. First, we use feature-oriented LFE to implement a language family for the ontology language OWL. Second, we employ role-based language composition to realise a component-based version of the language OCL. Third, we apply both approaches in combination for the development of SumUp, a family of languages for mathematical equations...|$|R
50|$|The {{academic}} under-graduate courses include: Economics, Accounting, Business Administration, Law, Education, Modern <b>Languages,</b> <b>Engineering</b> (Chemical, Mechanic, Systems, Electrical, Civil & Production), Psychology and in 2003, {{it became}} the first University in Venezuela to offer the Liberal Studies course.|$|R
40|$|Language {{is key to}} culture. It is {{a direct}} {{cultural}} medium {{as well as a}} means of recording and providing access to non-lingual elements of culture. Language is also fundamental to a sense of cultural identity. For this reason, it is vital, in a changing Europe, that we preserve the multi-lingual character of our society in order to move successfully towards closer co-operation at a political, economic, and social level. <b>Language</b> <b>engineering</b> is the application of knowledge of language to the development of computer software which can recognise, understand, interpret, and generate human language in all its forms. The paper provides a high level view of the ‘state of the art’ in <b>language</b> <b>engineering</b> and indicates ways in which it will have a profound impact on our culture in the future. It shows how advances in <b>language</b> <b>engineering</b> are an important aid in maintaining cultural diversity in a multi-lingual European society, while enabling the development of social cohesion across cultural and national divides. It addresses issues raised by the prospect of the Multi-lingual Information Society, including education, human communication with technology and information management, as well as aspects of digital cities such as tele-presence in digital libraries, virtual art galleries and electronic museums. The paper raises the issue of language as a factor in cultural domination, showing the contribution that <b>language</b> <b>engineering</b> can make towards countering it. The paper also raises a number of controversial issues concerning the likely benefits arising from the ways in which language is likely to influence the culture of Europe. ...|$|R
40|$|We {{study the}} use of megamodels (models of {{linguistic}} architecture) for presenting software <b>language</b> <b>engineering</b> scenarios. Megamodels and techniques similar to them are frequently found in situations when a linguistic architecture needs to be understood without the implicit knowledge that was originally present, and in situations when such knowledge needs to be propagated. In this paper we specifically address {{the possibility of using}} one megamodel to tell several related stories — that is, to renarrate it. Various renarrations can address different aspects of the megamodel, without cluttering the reader’s view with irrelevant details. The renarration method is presented with the case study of a software <b>language</b> <b>engineering</b> technique of guided grammar convergence, and MegaL as a metamegamodel...|$|R
