17|628|Public
25|$|Thalamotomy, {{involving}} {{the creation of}} lesions in the brain region called the thalamus, is quite effective in treating patients with essential, cerebellar, or Parkinsonian tremor. This in-hospital procedure is performed under local anesthesia, with the patient awake. After the patient’s head is secured in a metal frame, the surgeon maps the patient’s brain to locate the thalamus. A small hole is drilled through the skull and a temperature-controlled electrode is inserted into the thalamus. A low-frequency current is passed through the electrode to activate the tremor and to confirm proper placement. Once the site has been confirmed, the electrode is heated to create a temporary lesion. Testing is done to examine speech, <b>language,</b> <b>coordination,</b> and tremor activation, if any. If no problems occur, the probe is again heated to create a 3-mm permanent lesion. The probe, when cooled to body temperature, is withdrawn and the skull hole is covered. The lesion causes the tremor to permanently disappear without disrupting sensory or motor control.|$|E
50|$|<b>Language</b> <b>coordination</b> {{refers to}} the {{tendency}} of people to mimic the language of others. The coordination can occur when one person responds to another using similar vocabulary, or word or sentence structure. <b>Language</b> <b>coordination</b> can also be applied to individuals who linguistically coordinate to a group. As suggested by the Communication Accommodation Theory, this is often used {{as a way to}} reduce social distance (convergence) <b>Language</b> <b>coordination</b> can also often occur unconsciously.|$|E
50|$|Thalamotomy, {{involving}} {{the creation of}} lesions in the brain region called the thalamus, is quite effective in treating patients with essential, cerebellar, or Parkinsonian tremor. This in-hospital procedure is performed under local anesthesia, with the patient awake. After the patient’s head is secured in a metal frame, the surgeon maps the patient’s brain to locate the thalamus. A small hole is drilled through the skull and a temperature-controlled electrode is inserted into the thalamus. A low-frequency current is passed through the electrode to activate the tremor and to confirm proper placement. Once the site has been confirmed, the electrode is heated to create a temporary lesion. Testing is done to examine speech, <b>language,</b> <b>coordination,</b> and tremor activation, if any. If no problems occur, the probe is again heated to create a 3-mm permanent lesion. The probe, when cooled to body temperature, is withdrawn and the skull hole is covered. The lesion causes the tremor to permanently disappear without disrupting sensory or motor control.|$|E
40|$|Abstract- This paper {{discusses}} various coordination {{models and}} <b>coordination</b> <b>languages.</b> Difference between various coordination models is specified here. The <b>coordination</b> <b>language</b> Linda, TSpace and Javaspace are studied as <b>coordination</b> <b>languages.</b> Linda is having some limitation as <b>coordination</b> <b>language.</b> So javaspace is good option for implementation of distributed application. But javaspace language is having limited primitives compared with another {{language and the}} primitives which are not present in javaspace are implemented as J 2 space...|$|R
50|$|The IFIP International Conference on Formal Techniques for Distributed Objects, Components and Systems (FORTE) {{is part of}} the federated conference event DisCoTec (Distributed Computing Techniques) {{which also}} {{includes}} the International Conference on <b>Coordination</b> Models and <b>Languages</b> (<b>COORDINATION)</b> and the IFIP International Conference on Distributed Applications and Interoperable Systems (DAIS).|$|R
40|$|Abstract. A rather recent {{approach}} in programming parallel and distributed systems {{is that of}} <b>coordination</b> models and <b>languages.</b> <b>Coordination</b> programming enjoys a number of advantages {{such as the ability}} to express different software architectures and abstract interaction protocols, supporting multilinguality, reusability and programming-in-the-large, etc. In this paper we show the potential of control- or event-driven <b>coordination</b> <b>languages</b> to be used as languages for expressing dynamically reconfigurable software architectures. We argue that control-driven coordination has similar goals and aims with reconfigurable environments and we illustrate how the former can achieve the functionality required by the latter...|$|R
40|$|Humans {{learn to}} {{communicate}} with each other by engaging in <b>language</b> <b>coordination</b> during dialogue. In this position paper, we present the main ideas behind the challenge of <b>language</b> <b>coordination</b> in human-machine interaction. We review relevant empirical evidence and current approaches to learning conversational agents, and identify some of the problems that must be overcome for realising this challenge. ...|$|E
40|$|Peirce grammar {{provides}} a first-order, relational semantics for extensional fragments of natural language. Proposals {{in the literature}} to model natural <b>language</b> <b>coordination</b> by boolean operations in Peirce grammar lead to inadaequate results. We propose to equip Peirce grammar with an additional sort of finite trees and to admit recursion on trees for defining the evaluation of expressions. We demonstrate how {{this leads to a}} better treatment of coordination and other recursive constructions, such as the inverse linking of quantifiers in nested noun phrases...|$|E
40|$|This L ATEX 2 ε package {{provides}} a command to typeset letters with the ogonek diacritic mark; {{they are used}} in Polish and Lithuanian. The command is named įn accordance with {{the recommendation of the}} Technical Working Group on Multiple <b>Language</b> <b>Coordination</b> of the TEX Users Group. The principal purpose of the command is to provide the high quality ogonek with CM fonts, although for Polish the best results are obtained with the special Polish PL fonts; the command can be also used with DC fonts. ...|$|E
50|$|ASSIST is a {{programming}} environment which provides programmers with a structured <b>coordination</b> <b>language.</b> The <b>coordination</b> <b>language</b> can express parallel programs as an arbitrary graph of software modules. The module graph describes how {{a set of}} modules {{interact with each other}} using a set of typed data streams. The modules can be sequential or parallel. Sequential modules can be written in C, C++, or Fortran; and parallel modules are programmed with a special ASSIST parallel module (parmod).|$|R
40|$|AbstractWe {{study the}} expressiveness {{of the most}} {{prominent}} representatives of the family of shared dataspace <b>coordination</b> <b>languages,</b> namely Linda, Gamma and Concurrent Constraint Programming. The investigation is carried out by exploiting and integrating three different comparison techniques: weak and strong modular embedding and property–preserving encodings. We obtain a hierarchy of <b>coordination</b> <b>languages</b> that provides useful insights for both the design and the use of <b>coordination</b> <b>languages...</b>|$|R
5000|$|Programming {{language}} is the interface with which programmers interact to code their skeleton applications. These languages are diverse, encompassing paradigms such as: functional <b>languages,</b> <b>coordination</b> <b>languages,</b> markup languages, imperative languages, object oriented languages, and even graphical user interfaces. Inside the programming language, skeletons {{have been provided}} either as language constructs or libraries. Providing skeletons as language construct implies {{the development of a}} custom domain specific language and its compiler. This was clearly the stronger trend at the beginning of skeleton research. The more recent trend is to provide skeletons as libraries, in particular with object oriented languages such as C++ and Java.|$|R
40|$|Scholars have {{proposed}} many different models to describe coordination of verbal dependents. We give a brief {{presentation of the}} most common ways to deal with this construction from a general point of view. Then, we evaluate the adequacy of the models using data from Old French. In this particular <b>language,</b> <b>coordination</b> is a more elaborated form of juxtaposition and apposition, which differs only at the semantic level. For this reason, the coordinating conjunction has to be considered as a dependent of the following conjunct...|$|E
40|$|A {{key feature}} of many {{biological}} distributed systems {{is that they}} have the capacity to behave in highly coordinated ways. In the domain of <b>language,</b> <b>coordination</b> dynamics have been studied within the framework of language games. As yet however, a fundamental understanding that goes beyond the simplest cases is still missing. In this paper, a novel approach is proposed for investigating coordination problems. The approach is illustrated for a simple but well studied case called the naming game. It is also argued that the proposed approach provides a good starting point for tackling more complex coordination problems as well. © 2011 Springer-Verlag. SCOPUS: cp. kinfo:eu-repo/semantics/publishe...|$|E
40|$|Abstract. We {{explore the}} {{suitability}} of Intensional Programming Paradigm for providing a programming model for coordinated problem solving in a multi-agent systems. We extend our previous work on Lucx, an Intensional Programming Language extended with context as first class object, to support coordination activities in a distributed network of agents. We study coordination constructs which {{can be applied to}} sequential programs and distributed transactions. We give formal syntax and semantics for coordination constructs. The semantics for transaction expressions is given on top of the existing operational semantics in Lucx. The extended Lucx can be used for internet-based agent applications. Keywords: Multi-agent systems, coordinated transactions, Intensional Programming <b>Language,</b> <b>coordination</b> constructs...|$|E
40|$|The {{notion of}} role is {{ubiquitous}} in many fields of computer science, like programming <b>languages,</b> software engineering, <b>coordination</b> <b>languages,</b> databases, multiagent systems, knowledge representation, formal ontology, computational linguistics, security, and conceptual modelling, and also outside compute...|$|R
40|$|This volume {{contains}} {{the proceedings of}} DAIS 2008, the 8 th IFIP International Conference on Distributed Applications and Interoperable Systems. The conference was held in Oslo, Norway during June 4 - 6, 2008 {{as part of the}} DisCoTec (Distributed Object Techniques) federated conference, in conjunction with the 10 th International Conference on <b>Coordination</b> Models and <b>Languages</b> (<b>COORDINATION)</b> and the 10 th IFIP International Conference on Formal Methods for Open Object-Based Distributed Systems (FMOODS). The conference was sponsored by IFIP (International Federation for Information Processing) and was organized by the IFIP Working Group 6. 1...|$|R
40|$|One of {{the most}} {{promising}} approaches in developing component-based (possibly distributed) systems is that of <b>coordination</b> models and <b>languages.</b> <b>Coordination</b> programming enjoys a number of advantages such as the ability to express different software architectures and abstract interaction protocols, support for multilinguality, reusability and programming-in-the-large, etc. Configuration programming is another promising approach in developing large scale, component-based systems, with the increasing need for supporting the dynamic evolution of components. In this paper we explore and exploit the relationship between the notions of coordination and (dynamic) configuration and we illustrate the potential of control- or eventdriven <b>coordination</b> <b>languages</b> to be used as languages for expressing dynamically reconfigurable software architectures. We argue that control-driven coordination has similar goals and aims with the notion of dynamic configuration and we illustrate how the former can ach [...] ...|$|R
40|$|This paper {{introduces}} a formal {{view of the}} semantics and pragmatics of corrective feedback in dialogues between adults and children. The goal {{of this research is}} to give a formal account of <b>language</b> <b>coordination</b> in dialogue, and semantic coordination in particular. Accounting for semantic coordination requires (1) a semantics, i. e. an architecture allowing for dynamic meanings and meaning updates as results of dialogue moves, and (2) a pragmatics, describing the dialogue moves involved in semantic coordination. We illustrate the general approach by applying it to some examples from the literature on corrective feedback, and provide a fairly detailed discussion of one example using TTR (Type Theory with Records) to formalize concepts. TTR provides an analysis of linguistic content which is structured in order to allow modification and similarity metrics, and a framework for describing dialogue moves and resulting updates to linguistic resources. ...|$|E
40|$|We have {{developed}} language {{support for the}} expression of multiobject coordination. In our <b>language,</b> <b>coordination</b> patterns can be specified abstractly, independent of the protocols needed to implement them. Coordination patterns are expressed in the form of constraints that restrict invocation of a group of objects. Constraints are defined in terms of the interface of the objects being invoked rather than their internal representation. Invocation constraints enforce properties, such as temporal ordering and atomicity, that hold when invoking objects in a group. A constraint can permanently control access to a group of objects, thereby expressing an inherent access restriction associated with the group. Furthermore, a constraint can temporarily enforce access restrictions during the activity of individual clients. In that way, constraints can express specialized access schemes required by a group of clients. 1 Motivation Coordination of activities is a fundamental aspect of programm [...] ...|$|E
40|$|Abstract In complex open multi-agent systems (MAS), {{where there}} is no {{centralised}} con-trol and individuals have equal authority, ensuring cooperative and coordinated behaviour is challenging. Norms and conventions are useful means of supporting cooperation in an emergent decentralised manner, however it takes time for effective norms and conventions to emerge. Identifying influential individuals enables the targeted seeding of desirable norms and conventions, which can reduce the establishment time and increase efficacy. Existing research is limited with respect to considering (i) how to identify influential agents, (ii) the extent to which network location imbues influence on an agent, and (iii) the extent to which different network structures affect influence. In this paper, we propose a methodology for learning a model for predicting the network value of an agent, in terms {{of the extent to which}} it can influence the rest of the population. Applying our methodology, we show that exploit-ing knowledge of the network structure can significantly increase the ability of individuals to influence which convention emerges. We evaluate our methodology in the context of two agent-interaction models, namely, the <b>language</b> <b>coordination</b> domain used by Salazar et al. (AI Communications 23 (4) : 357 – 372, 2010) and a coordination game of the form used b...|$|E
40|$|Oliver Krone and Marc Aguilar Institut d'Informatique, Universit'e de Fribourg, Chemin du Mus'ee 3 CH- 1700 Fribourg, Suisse T'el. + 41 / 37 / 298478, FAX + 41 / 37 / 299731 e-mail: Oliver. Krone@unifr. ch Abstract In {{this paper}} {{we focus on}} {{coordination}} for massively parallel systems. We propose a generic distributed coordination model consisting of coordination spaces which serve as an environment for active entities allowing interoperability at coordination level. The new coordination concepts will be sketched in an informal overview 1. 1 Introduction Coordination has recently become a scientific discipline for its own and is described for example as "managing dependencies among independent entities " [Cro 94]. This can be realized using a <b>coordination</b> <b>language</b> [CG 92] to express and describe {{the relationships between the}} active entities running in parallel. But how can we characterize a <b>coordination</b> <b>language</b> ? "A <b>coordination</b> <b>language</b> is the linguistic embodiment of a coordination model" [CG [...] ...|$|R
40|$|Abstract. The paper {{presents}} {{the implementation of}} a railway control system, as a means of assessing the potential of <b>coordination</b> <b>languages</b> to be used for modelling software architectures for complex control systems using a components-based approach. Moreover, with this case study we assess and understand the issues of real time, fault tolerance, scalability, extensibility, distributed execution and adaptive behaviour, while modelling software architectures. We concentrate our study on the so-called control- or eventdriven <b>coordination</b> <b>languages,</b> and more to the point we use the language Manifold. In the process, we develop a methodology for modelling software architectures within the framework of control-oriented <b>coordination</b> <b>languages...</b>|$|R
50|$|SkIE (Skeleton-based Integrated Environment) {{is quite}} similar to P3L, as it is also based on a <b>coordination</b> <b>language,</b> but {{provides}} advanced features such as debugging tools, performance analysis, visualization and graphical user interface. Instead of directly using the <b>coordination</b> <b>language,</b> programmers interact with a graphical tool, where parallel modules based on skeletons can be composed.|$|R
40|$|Present {{diagnostic}} criteria for autism spectrum conditions (ASC) include social communication and interaction difficulties, repetitive behavior and movement, and atypical sensory responsivity. Few studies have explored {{the influence of}} motor coordination and sensory responsivity on severity of ASC symptoms. In the current study, we explore whether sensory responsivity and motor coordination differences can account for the severity of autistic behaviors in children with ASC. Thirty-six children participated: 18 (13 male, 5 female) with ASC (ages 7 – 16 : mean age = 9. 93 years) and 18 (7 male, 11 female) typically developing (TD) children (ages 6 – 12; mean age = 9. 16 years). Both groups completed a battery of assessments that included motor coordination, sensory responsivity, receptive language, non-verbal reasoning and social communication measures. Children with ASC also completed the Autism Diagnostic Observation Schedule (ADOS) and Autism Diagnostic Interview—Revised (ADI-R). Results showed that children with ASC scored significantly lower on receptive <b>language,</b> <b>coordination,</b> sensory responsivity and a sensorimotor subscale, Modulation of Activity (MoA) compared to the TD group. In the ASC group, MoA significantly predicted ASC severity across all ASC measures; receptive language and sensory responsivity significantly predicted parental reported autism measures; and coordination significantly predicted examiner observed reported scores. Additionally, specific associations {{were found between the}} somatosensory perceptive modalities and ASC severity. The results show that sensorimotor skills are associated with severity of ASC symptoms; furthering the need to research sensorimotor integration in ASC and also implying that diagnosis of ASC should also include the assessment of both coordination deficit and atypical sensory responsivity...|$|E
40|$|Coordination in open multi-agent systems (MAS) {{can reduce}} costs to agents {{associated}} with conflicting goals and actions, allowing artificial societies to attain {{higher levels of}} aggregate utility. Techniques for increasing coordination typically involve incorporating notions of conventions, namely socially adopted standards of behaviour, at either an agent or system level. As system designers cannot necessarily create high quality conventions a priori, we require {{an understanding of how}} agents can dynamically generate, adopt and adapt conventions during their normal interaction processes. Many open MAS domains, such as peer-to-peer and mobile ad-hoc networks, exhibit properties that restrict the application of the mechanisms that are often used, especially those requiring the incorporation of additional components at an agent or society level. In this paper, we use Influencer Agents (IAs) to manipulate convention emergence, which we define as agents with strategies and goals chosen to aid the emergence of high quality conventions in domains characterised by heterogeneous ownership and uniform levels of agent authority. Using the <b>language</b> <b>coordination</b> problem (Steels in Artif Life 2 (3) : 319 – 392, 1995), we evaluate the effect of IAs on convention emergence in a population. We show that relatively low proportions of IAs can (i) effectively manipulate the emergence of high-quality conventions, and (ii) increase convention adoption and quality. We make no assumptions involving agent mechanism design or internal architecture beyond the usual assumption of rationality. Our results demonstrate the fragility of convention emergence in the presence of malicious or faulty agents that attempt to propagate low quality conventions, and confirm the importance of social network structure in convention adoption...|$|E
40|$|In complex open multi-agent systems (MAS), {{where there}} is no {{centralised}} control and individuals have equal authority, ensuring cooperative and coordinated behaviour is challenging. Norms and conventions are useful means of supporting cooperation in an emergent decentralised manner, however it takes time for effective norms and conventions to emerge. Identifying influential individuals enables the targeted seeding of desirable norms and conventions, which can reduce the establishment time and increase efficacy. Existing research is limited with respect to considering (i) how to identify influential agents, (ii) the extent to which network location imbues influence on an agent, and (iii) the extent to which different network structures affect influence. In this paper, we propose a methodology for learning a model for predicting the network value of an agent, in terms {{of the extent to which}} it can influence the rest of the population. Applying our methodology, we show that exploiting knowledge of the network structure can significantly increase the ability of individuals to influence which convention emerges. We evaluate our methodology in the context of two agent-interaction models, namely, the <b>language</b> <b>coordination</b> domain used by Salazar et al. (AI Communications 23 (4) : 357 – 372, 2010) and a coordination game of the form used by Sen and Airiau (in: Proceedings of the 20 th International Joint Conference on Artificial Intelligence, 2007) with heterogeneous agent learning mechanisms, and on a variety of synthetic and real-world networks. We further show that (i) the models resulting from our methodology are effective in predicting influential network locations, (ii) there are very few locations that can be classified as influential in typical networks, (iii) four single metrics are robustly indicative of influence across a range of network structures, and (iv) our methodology learns which single metric or combined measure is the best predictor of influence in a given network...|$|E
40|$|The {{purpose of}} this study is to apply the denotational {{semantics}} of the <b>coordination</b> <b>language</b> to the safety analysis of parallel programs. In this paper, the denotational semantics of a simple <b>coordination</b> <b>language</b> is defined by relational strings, which are strings of binary relations, and the concatenation of relational strings is a timed-composition of binary relations...|$|R
40|$|New {{computing}} paradigms for network-aware applications need specification languages able to {{deal with}} the features of mobile code based systems. A <b>coordination</b> <b>language</b> provides a formal framework in which the interaction of active entities can be expressed. A <b>coordination</b> <b>language</b> deals with the creation and destruction of code or complex agents, their communication activities, as well as their distribution and mobility in space...|$|R
40|$|Conversations {{are a new}} {{programming}} abstraction {{created for}} capturing knowledge about the interactions among agents. In this paper we review a conversational <b>coordination</b> <b>language</b> we have designed and {{used in the past}} few years, to characterize its main assumptions, strengths and limitations. Based on this analysis we discuss a number of major new features and extensions for our next generation conversational <b>coordination</b> <b>language...</b>|$|R
40|$|Context. Global {{software}} development (GSD) gained huge recognition in today’s business world. Most {{of the software}} companies day by day are striving hard to evolve globally where software is developed {{in the context of}} different environmental settings that are distanced on various factors like geography, timezone, culture and <b>language.</b> <b>Coordination</b> is the factor that plays one of the prominent roles in such a setting for effective teamwork and project success. Although numerous efforts has been done in this research area, there has been no proper evidence from industry about the impact of these coordination challenges on the overall quality of the software when being developed in a distributed setting. Objectives. The {{purpose of this study is}} to examine and identify the coordination challenges and risks faced in global {{software development}} projects that has a negative impact on the quality of software from practitioner’s perspective. It also identify the tools, methods, and techniques that are used in industry to overcome these challenges and maintain quality standards. Methods. The aims and objectives of our study are fulfilled by conducting survey among practitioners working in GSD projects all around the globe. Further, 10 interviews are conducted with practitioners working in different companies and geographical locations in order to gain a detailed understanding of the impact of identified coordination challenges on the quality of software in GSD projects. Results. A total of 50 survey responses are recorded, out of which 48 respondents specify that coordination challenges has a negative impact on software quality in GSD context. By the ratings given by the participants, we identified the challenges and risks that had a major impact. Mixed results are obtained during interviews where most of them prioritized coordination as a major problem in GSD projects. It also included that use of some tools, methods and processes help them in overcoming this issue. The quality attributes that are mostly affected due to the challenges in GSD projects are also identified. Conclusions. After the analysis of survey results, the coordination challenges and associated risks in GSD projects are identified. They were found to havemostly negative impact on software quality. After thematic analysis of interview results, we observed that though the impact of coordination challenges is negative, its extent of implication is moderate in most cases...|$|E
40|$|Many online human {{activities}} leave digital traces that are recorded in natural-language format. The exploitation of this unprecedented resource under a computational framework {{can bring a}} phase transition {{in our understanding of}} human social behavior and shape the future of social media systems. This thesis describes a computational approach to an intriguing aspect of conversational behavior, linguistic style coordination: conversational participants tend to immediately and unconsciously adapt to each other's language styles; a speaker will even adjust the number of articles and other function words in their next utterance in response to the number in their partner's immediately preceding utterance. We develop a probabilistic framework that can model and quantify this phenomenon and apply it to four different conversational settings: Twitter conversations, discussions between Wikipedia editors, oral arguments in the U. S. Supreme Court and movie script dialogs. We are able to examine linguistic style coordination in large scale settings for the first time, and by doing so, to reveal important properties that were never observed in previous studies, which were conducted mainly in small and controlled environments. The resulting new understanding of conversational behavior bears practical importance in the task of uncovering key properties of social relations. We present an analysis framework based on linguistic coordination {{that can be used to}} shed light on power relationships and that works consistently across multiple types of power - including a more "static" form of power based on status differences, and a more "situational" form of power in which one individual experiences a type of dependence on another. Finally, our computational framework can be employed to gain insight into the causal mechanism behind coordination behavior. It was previously hypothesized in the psycho-linguistic literature that coordination has arisen as a way to achieve social goals, such as gaining approval or emphasizing difference in status. But has the adaptation mechanism become so deeply embedded in the language-generation process as to become a reflex? We argue that fictional dialogs offer a way to study this question, since authors create the conversations but don't receive the social benefits (rather, the imagined characters do). Indeed, we find significant coordination across many families of function words in our large movie-script corpus. We thereby provide evidence that <b>language</b> <b>coordination</b> is so implanted within our conception of conversational behavior that, even if such coordination is socially motivated, it is exhibited even when the person generating the language in question is not receiving any of the presumed social advantages...|$|E
40|$|Process algebra {{provides}} {{abstract and}} rigorous means for studying communicating concurrent systems. <b>Coordination</b> <b>languages</b> also provide abstract {{means for the}} specifying and programming communication of components. Hence, the two fields seem to have very much in common and the link between these two research areas have been established formally by means of several translations, mainly from <b>coordination</b> <b>languages</b> to process algebras. There have also been proposals of process algebras whose communication policy is inspired by the one underlying <b>coordination</b> <b>languages.</b> The aim of this workshop was to push {{the state of the}} art in the study of the connections between process algebra and <b>coordination</b> <b>languages</b> by bringing together experts as well as young researchers from the two fields to communicate their ideas and findings. It includes both contributed and invited papers that have been presented during the one day meeting on Process Algebra and Coordination (PACO 2011) which took place on June 9, 2011 in Reykjavik, Iceland...|$|R
40|$|Aldwych is {{proposed}} {{as the foundation}} of a general purpose language for parallel applications. It has aspects variously of concurrent, functional, logic and object-oriented languages, and may also interface with existing systems like a <b>coordination</b> <b>language,</b> yet it forms an integrated whole. It is intended to be applicable both for small-scale parallel programming, and for large-scale open systems Keywords: Concurrency, actors, multi-paradigm <b>languages,</b> <b>coordination,</b> open systems. 1. Introduction The language Linda [Gele 85] was launched as the underdog, competing against sophisticated approaches to parallel programming [Ca & Ge 89], but has triumphed over those approaches it then saw as its competitors, {{to the point where it}} is now seen as the generic model for "co-ordination languages" [Ci & Ha 96]. As its authors note [Ge & Ca 92] one of the main reasons for this is that Linda provided a simple "glue" that could be used to combine systems written in languages with which ord [...] ...|$|R
40|$|We {{present the}} design of S-NET, a <b>coordination</b> <b>language</b> and {{component}} technology based on stream processing. S-NET achieves a near-complete separation between application code, written in a conventional programming <b>language,</b> and <b>coordination</b> code, written in S-NET itself. S-NET boxes integrate existing sequential code as stream-processing components into streaming networks, whose construction is based on algebraic formulae built out of four network combinators. Subtyping {{on the level of}} boxes and networks and a tailor-made inheritance mechanism achieve flexible software reuse. ?? 2008 World Scientific Publishing Company...|$|R
5000|$|Zhang, N. 2006. On the Configuration Issue of <b>Coordination.</b> <b>Language</b> and Linguistics 7 (1): 175-223.|$|R
