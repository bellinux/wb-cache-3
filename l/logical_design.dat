373|360|Public
5|$|Required {{to tender}} {{by the end}} of April 1947, work began on receipt of Specification B.35/46 at Avro, led by {{technical}} director Roy Chadwick and chief designer Stuart Davies; the type designation was Avro 698. It was obvious to the design team that conventional aircraft could not satisfy the specification; knowing little about high-speed flight and unable to glean much from the Royal Aircraft Establishment or the US, they investigated German Second World War swept wing research. The team estimated that an otherwise conventional aircraft, with a swept wing of 45°, would have doubled the weight requirement. Realising that swept wings increase longitudinal stability, the team deleted the tail (empennage) and the supporting fuselage, it thus became a swept-back flying wing with only a rudimentary forward fuselage and a fin (vertical stabilizer) at each wingtip. The estimated weight was now only 50% over the requirement; a delta shape resulted from reducing the wingspan and maintaining the wing area by filling in the space between the wingtips, which enabled the specification to be met. Though Alexander Lippisch is generally credited as the pioneer of the delta wing, Chadwick's team had followed its own <b>logical</b> <b>design</b> process. The initial design submission had four large turbojets stacked in pairs buried in the wing either side of the centreline. Outboard of the engines were two bomb-bays.|$|E
25|$|Early designs {{including}} Siemens, Westinghouse, and Combustion Engineering had {{a mostly}} can-like shape built with reinforced concrete. As concrete {{has a very}} good compression strength compared to tensile, this is a <b>logical</b> <b>design</b> for the building materials since the extremely heavy top part of containment exerts a large downward force that prevents some tensile stress if containment pressure were to suddenly go up. As reactor designs have evolved, many nearly spherical containment designs for PWRs have also been constructed. Depending on the material used, this is the most apparently <b>logical</b> <b>design</b> because a sphere is the best structure for simply containing a large pressure. Most current PWR designs involve some combination of the two, with a cylindrical lower part and a half-spherical top.|$|E
25|$|Designing {{the visual}} {{composition}} and temporal {{behavior of a}} GUI {{is an important part}} of software application programming in the area of human–computer interaction. Its goal is to enhance the efficiency and ease of use for the underlying <b>logical</b> <b>design</b> of a stored program, a design discipline named usability. Methods of user-centered design are used to ensure that the visual language introduced in the design is well-tailored to the tasks.|$|E
50|$|A Security Technical Implementation Guide (STIG) is a {{cybersecurity}} {{methodology for}} standardizing security protocols within networks, servers, computers, and <b>logical</b> <b>designs</b> to enhance overall security. These guides, when implemented, enhance security for software, hardware, physical and logical architectures to further reduce vulnerabilities.|$|R
40|$|A {{methodology}} {{for the design}} of a physical database schema in the network model environment is presented. The methodology is integrated with the conceptual and <b>logical</b> <b>designs</b> as presented inter alia in the earlier reports (Maciaszek, 1986; Maciaszek et ai., 1986 a). As the physical design problem has the potential of being untractable in polynomial time; we have reduced its complexity in two orthogonal ways: (1) by applying a theory of separability on user views, and (2) by imposing strict ordering on design steps (with feedback). The methodology adheres to the latest standardization efforts for the network model and is consistent with the currently most recognized network Database Management Systems. The methodology is meant to serve as an initial and preliminary specification for a computer-assisted design tool, which - when integrated with other interactive tools for conceptual and <b>logical</b> <b>designs</b> - will be a component of the Intelligent Database Design Kit (IDDK). The IDDK is being developed for network and relational systems and is partly operational...|$|R
50|$|Design Gateway: Platform for <b>logical</b> circuit <b>design</b> and {{verification}} of single and multi-board system-level electronic designs.|$|R
2500|$|Arthur W. (Arthur Walter) Burks, Herman Heine Goldstine, John Von Neumann; Preliminary Discussion of the <b>Logical</b> <b>Design</b> of an Electronic Computer Instrument; (Institute for Advanced Study, January 1, 1946) ASIN B0007HW8WE ...|$|E
2500|$|Arthur Burks, Herman Goldstine, John von Neumann (1946), Preliminary {{discussion}} of the <b>logical</b> <b>design</b> of an electronic computing instrument, reprinted pp.92ff in Gordon Bell and Allen Newell (1971), Computer Structures: Readings and Examples, mcGraw-Hill Book Company, New York[...]|$|E
2500|$|Trimberger joined VLSI Technology in 1982 where, as {{a member}} of the {{original}} Design Technology group, he developed a variety of computer-aided design software including interactive tools, simulation, physical design automation and <b>logical</b> <b>design</b> automation. [...] During this time, he wrote An Introduction to CAD for VLSI, collecting and explaining the fundamental algorithms and techniques used in the early days of the CAE industry.|$|E
50|$|Devils are fiendish {{natives of}} the Nine Hells of Baator, in 4th edition, they are Evil in alignment, while in earlier editions they are Lawful Evil. The most {{prominent}} group of devils are the Baatezu, who were first introduced {{as a group}} in 2nd edition. Though less immediately destructive than the Tanar'ri, the Baatezu's blood-chilling yet <b>logical</b> <b>designs</b> reach across the planes and their ranks are perfectly organized.|$|R
40|$|The Warnier method, {{a highly}} {{prescriptive}} program design approach for file-oriented solutions, {{has been criticized}} for its lack of a database design component. This paper addresses this weakness by incorporating a <b>logical</b> database <b>design</b> step in Warnier method. Specifically, the paper presents rules for transforming the information in a Warnier diagram into a set of relations. With this extension the Wamier method complements the entity-relationship approach for data analysis and <b>logical</b> database <b>design...</b>|$|R
40|$|Abstract-Given {{a static}} traffic condition, the {{motivation}} of for <b>logical</b> topologic <b>design</b> problem in WDM networks have <b>logical</b> topology <b>design</b> in IP over WDM networks is to optimize been proposed in our previous researches. In this paper, our the network resource utilization and improve network research motivation {{is to find a}} feasible meta-heuristic performance. The objectives of the optimization can be to minimize network congestion or to reduce packet delay in the algoriln networks. The <b>logical</b> topology <b>design</b> for IP overWDM networks networks. can be decomposed into several subproblems, some of those A tabu search (TS) method to resolve the logical topology subproblems have been proven to be NP-hard problems, and design problem without wavelength conversion in the network many heuristic algorithms have been proposed to find the near is proposed. We compare our new proposed TS algorithm with optimal solutions. Our research effort has been put into the previous SA [1] approaches. Our motivation is to compare investigation of different heuristic algorithms for the logical different meta-heuristics to find a feasible algorithm of <b>logical</b> topology <b>design</b> problem. Using an indirect neighbour discovery method to change the logical topology of the network, several topology design fornetwork operatorsto optimizethe network. simulated annealing and genetic algorithms for logical topologic The rest parts of this paper are organized as follows: Section II design problem in WDM networks have been proposed in our describes the <b>logical</b> topology <b>design</b> problem; Section II...|$|R
6000|$|The truth is, we {{are apt to}} deify men of genius, {{exactly as}} we deify the {{creative}} force of the universe, by attributing to <b>logical</b> <b>design</b> what {{is the result of}} blind instinct. What Wagner meant by [...] "true Art" [...] is the operation of the artist's instinct, which is just as blind as any other instinct. Mozart, asked for an explanation of his works, said frankly [...] "How do I know?" [...] Wagner, being a philosopher and critic as well as a composer, was always looking for moral explanations of what he had created and he hit on several very striking ones, all different. In the same way one can conceive Henry the Eighth speculating very brilliantly about the circulation of his own blood without getting as near the truth as Harvey did long after his death.|$|E
50|$|Switching {{circuits}} and <b>logical</b> <b>design,</b> Wiley, 1958.|$|E
50|$|The <b>logical</b> <b>design</b> of {{a system}} {{pertains}} to an abstract representation of the data flows, inputs and outputs of the system. This is often conducted via modelling, using an over-abstract (and sometimes graphical) model of the actual system. In the context of systems, designs are included. <b>Logical</b> <b>design</b> includes entity-relationship diagrams (ER diagrams).|$|E
40|$|The {{sequence}} {{design is}} a crucial problem in DNA based computation. We present results about tests carried on sets of DNA strands proposed in DNA computing papers since 1994. Our goal is to direct attention on {{the necessity of a}} middle-process between <b>logical</b> <b>designing</b> of input and practical computation in laboratory. The analysis shows that many input sets should not be used for a real DNA computation because they lead to a high probability of incurring in biological faults which result to be very unsafe for a reliable computation...|$|R
40|$|In {{this paper}} we {{investigate}} <b>logical</b> topology <b>design</b> algorithms using local optimization technique. Since {{the problem of}} the optimal <b>logical</b> topology <b>design</b> for all traffic demands is NP-complete, we <b>design</b> a <b>logical</b> topology by sequentially constructing the shortest path for one source-destination pair at a time. The path is a locally optimized path in the sense that there are no other paths with less hop count that may be constructed from existing links and newly created links. For this we define an Estimated Logical Hop Count (ELH), which is the shortest logical hop count for a given source and destination when it is applied. Also, we propose two heuristic <b>logical</b> topology <b>design</b> algorithms making use of ELH: ELH with Maximum Traffic Demands (MTD) and with Resource Efficiency Factor (REF). Finally, we evaluate the performance of the proposed algorithms by GLASS/SSF simulator. The simulation results show that ELH with REF outperforms other well-known algorithms in terms of the weighted hop count and network throughput...|$|R
3000|$|In this section, we {{describe}} how we formulate the <b>logical</b> topology <b>design,</b> contiguous spectrum block assignment, and routing as a joint optimization problem. We {{will use the}} letter like [...]...|$|R
5000|$|The {{product of}} {{this stage is}} the <b>logical</b> <b>design</b> which is made up of: ...|$|E
5000|$|... 1981. Analysis of {{dynamics}} of the <b>logical</b> <b>design</b> of information systems. University of Michigan.|$|E
5000|$|... 2001. Information Modeling and Relational Databases: From Conceptual Analysis to <b>Logical</b> <b>Design.</b> Morgan Kaufmann[...]|$|E
40|$|Abstract—The {{sequence}} {{design is}} a crucial problem in DNA based computation. We present results about tests carried on sets of DNA strands proposed in DNA computing papers since 1994. Our goal is to direct attention on {{the necessity of a}} middle-process between <b>logical</b> <b>designing</b> of input and practical computation in laboratory. The analysis shows that many input sets should not be used for a real DNA computation because they lead to a high probability of incurring in biological faults which result to be very unsafe for a reliable computation. Index Terms—DNA Computing, in-vitro computations, sequence design. I...|$|R
40|$|Abstract—The <b>design</b> of <b>logical</b> topologies in wave-length-routing {{multihop}} optical networks is a well-studied problem. In this paper, {{we consider}} <b>logical</b> topology (LT) <b>design</b> over the popular ring and linear topologies. Our objective is the minimization {{of the electronic}} processing delay for the worst case traffic flow. For uniform traffic between nodes, this delay minimization corresponds to minimizing the number of hops on a shortest path between the farthest two nodes in the logical topology (the diameter of the logical topology). The simple structure of the physical topologies enables us to present a rigorous analysis of the problem. We present lower bounds for the achievable diameter wherever possible and propose practical <b>logical</b> topology <b>design</b> algorithms and corresponding upper bounds. We also present an application of the LT designs in the linear topology to the survivability of ring networks. Index Terms—Diameter, linear topology, <b>logical</b> topology <b>design,</b> ring topology, survivability, wavelength-routing network. I...|$|R
40|$|If IP is {{implemented}} over a reconfigurable WDM network, the logical links between routers {{can be changed}} in response to changes in traffic demands Traffic engineering in an MPLS/WDM network requires both <b>logical</b> topology <b>design</b> and LSP routing and provisioning – can be formulated as Mixed Integer Linear Program (MILP) (NP-complete) Standard approach – use heuristic for <b>logical</b> topology <b>design</b> – apply routing algorithm to map traffic demands onto logical topology New approach: Integrate LSP routing and provisioning into logical topology designLogical Topology <b>Design</b> <b>Logical</b> link between a pair of routers is formed by creating a lightpath between the nodes – Consists of sequence of fiber links together with selection of a wavelength in each fiber (RWA problem) – If no wavelength conversion, then RWA problem is subject to wavelength continuity constraint 2 Assume each router has 2 pairs of interfaces Assume at least 2 wavelengths per fibe...|$|R
50|$|In Proceedings of the Sixth Annual Symposium on Switching Circuit Theory and <b>Logical</b> <b>Design,</b> pages 203-220. IEEE, 1965.|$|E
50|$|<b>Logical</b> <b>Design</b> Works, Inc. is a {{now defunct}} US-based video game {{developer}} that developed games between 1986 and 1991.|$|E
50|$|Frankel, S P, “The <b>Logical</b> <b>Design</b> of a Simple General Purpose Computer,” IRE Transactions on Electronic Computers, March 1957, p 5-14.|$|E
40|$|During his studies, {{he spent}} 3 {{years in the}} IAM GmbH for work {{experience}} and diploma (VHLS-Design of an Error Correction Code Unit). He was then employed by this company as a design-engineer for ASICs with additional responsibility for a computer-network. Besides this, he started a business of his own, specialising in verifying <b>logical</b> <b>designs</b> and maintaining computernetworks. He then took over a research project in the German Aerospace Center (DLR) for developing a system to determine interferences harmfull to navigation systems, caused by multipath in aerodrome areas. Currently employed as a Marketing Manager for Navigation Systems at the Avionik Zentrum Braunschweig, one of his responsibilities is the Multipat...|$|R
5000|$|IEEE Fellow for “contributions to {{automated}} <b>logical</b> {{and physical}} <b>design</b> of electronic circuits”, 2007.|$|R
40|$|The {{methods that}} provide a {{structured}} approach to user interface design, often more or less ignores the aspects of display design. The structured display design approaches that exist, seems to have problems coping with conceptually complex interfaces. Building {{on the relationship between}} the system data model and the display design, this article proposes a structured approach to display design. The design is divided into three steps: conceptual <b>design,</b> <b>logical</b> window <b>design</b> and physical window design. This structure seems to be a way of coping with the design of conceptually complex user interfaces...|$|R
5000|$|Arthur W. (Arthur Walter) Burks, Herman Heine Goldstine, John Von Neumann; Preliminary Discussion of the <b>Logical</b> <b>Design</b> of an Electronic Computer Instrument; (Institute for Advanced Study, January 1, 1946) ASIN B0007HW8WE ...|$|E
50|$|Roger Rutman of A. C. Sparkplug {{developed}} and implemented LOGIK, a language for <b>logical</b> <b>design</b> simulation, on the IBM 7090 in January 1964. This compiler used an algorithm that produced efficient code for Boolean expressions.|$|E
5000|$|Though the {{previous}} level specifies {{details of the}} implementation, the outputs of this stage are implementation-independent and concentrate on the requirements for the human computer interface. The <b>logical</b> <b>design</b> specifies the main methods of interaction in terms of menu structures and command structures.|$|E
50|$|The accessible, {{free and}} {{objective}} {{nature of the}} website allow students to gain <b>logical</b> and <b>design</b> experience based on previous successes. However, the system doesn't evaluate code quality, documentation or other more subjective characteristics which {{may be more important}} for real world applications.|$|R
40|$|Abstract: We {{propose the}} Multi-Period Power-Aware <b>Logical</b> Topology <b>Design.</b> We {{compared}} two different heuristics {{and show that}} exploiting the day-night fluctuations of the traffic can lead to significant power savings at a low reconfiguration cost. OCIS codes: (060. 4510) Optical communications, (060. 4250) Networks 1...|$|R
40|$|In {{this paper}} {{we present a}} level-controlled fuzzy memory element based on a {{generalization}} of the classical two-valued R-S flip-flop. Our memory element is small, simple and hazardless and thus suitable for a hardware implementation. We show that the circuit is stable with respect to small errors of input signals {{as well as to}} small errors of the gates; we show that this stability is conditioned by restricting the set of fuzzy values to a finite subset of the interval [0, 1]. Keywords: Many-valued logic, fuzzy logic, hardware <b>design,</b> <b>logical</b> circuit <b>design,</b> sequential logic, memory element, latch, flip-flop...|$|R
