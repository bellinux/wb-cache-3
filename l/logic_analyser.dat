17|5|Public
2500|$|A mixed-signal {{oscilloscope}} (or MSO) has {{two kinds}} of inputs, {{a small number of}} analog channels (typically two or four), and a larger number of digital channels(typically sixteen). [...] It provides the ability to accurately time-correlate analog and digital channels, thus offering a distinct advantage over a separate oscilloscope and <b>logic</b> <b>analyser.</b> Typically, digital channels may be grouped and displayed as a bus with each bus value displayed {{at the bottom of the}} display in hex or binary. [...] On most MSOs, the trigger can be set across both analog and digital channels.|$|E
50|$|Additionally, a 500 kHz three-channel <b>logic</b> <b>analyser</b> and a UART tool {{are built}} into the PICkit 2. These {{features}} are missing from the PICkit 3.|$|E
5000|$|The 2650 {{was also}} used in some large items of {{equipment}} such as the Tektronix 8540, a microprocessor software development system which supported various in-circuit emulator, trace memory and <b>logic</b> <b>analyser</b> cards for real-time debugging of microprocessor systems, as practiced in the 1980s. The 2650 provided the base operating system functions, data transfer, and interface to a host computer or serial computer terminal.|$|E
50|$|The company {{produced}} electronic {{test and}} measurement equipment and systems, including automatic test equipment. It {{was known for}} its extensive range of signal generators, from audio up to microwave frequencies. It also made oscilloscopes, voltmeters, spectrum analysers, frequency counters, function generators, component (LCR) bridges, impedance analysers, power supplies, distortion analysers, moisture meters and <b>logic</b> <b>analysers.</b> The company operated an approved calibration and metrology laboratory for the electronics industry.|$|R
40|$|The {{detection}} {{of the reason}} for an incorrect behaviour of an integrated circuit in its real-time environment is a very time consuming task. Using <b>logic</b> <b>analysers</b> in combination with an extensive logic simulation is the today's only way to isolate possible errors. In this paper, we introduce a hardware debugger to perform the debugging process in a more efficient way. Goal of the hardware debugger is detecting a failure of an integrated circuit in real-time processing and the supply of data for the determination of the cause of the failure...|$|R
40|$|Use of a <b>logic</b> state <b>analyser</b> as a {{hardware}} monitoring tool is described. The interrupt handling routines of the UNIX* operating system, {{running on a}} Perkin-Elmer 7 / 32, were measured before and after major code modification. CLock handling is used as an example. Performance improvements included {{a reduction in the}} execution time of the common interrupt handler from 654 to 55 microseconds and a consequent reduction in cLock handling time from 842 to 347 micro-seconds. Measurement methods and performance enhancements are discussed...|$|R
50|$|A mixed-signal {{oscilloscope}} (or MSO) has {{two kinds}} of inputs, {{a small number of}} analog channels (typically two or four), and a larger number of digital channels(typically sixteen). It provides the ability to accurately time-correlate analog and digital channels, thus offering a distinct advantage over a separate oscilloscope and <b>logic</b> <b>analyser.</b> Typically, digital channels may be grouped and displayed as a bus with each bus value displayed {{at the bottom of the}} display in hex or binary. On most MSOs, the trigger can be set across both analog and digital channels.|$|E
40|$|The SIU Extender (SIUEXT) card is {{a passive}} component, {{providing}} a mechanical {{extension of the}} SIU bus. It has a standard plug and a standard receptacle FEE-SIU interface connector, so the SIUEXT can be inserted between the SIU (or the SIMU) and the FEE. It provides a connection to a <b>logic</b> <b>analyser</b> (LA), having 5 LA connnectors. The <b>Logic</b> <b>Analyser</b> {{can be used for}} monitoring of the transactions on the FEE-SIU interface...|$|E
40|$|Abstract − The paper {{presents}} a remote laboratory {{system that allows}} performing experiments controlled across the Internet via web interface as well as locally in the classroom. The system has been developed for courses of advanced digital design and signal processing using complex Field Programmable Gate Array (FPGA) platforms. It allows students full access to laboratory equipments, advanced software licenses, and FPGA platforms remotely using any common web browser and standard remote desktop interface. The system consists of Altera development FPGA kits and suitable instrumentations (<b>Logic</b> <b>Analyser,</b> Digital Oscilloscope, and Vector Signal Generator) or low cost alternative (DAQ board as a Virtual <b>Logic</b> <b>Analyser,</b> Oscilloscope and Vector Signal Generator). Both solutions use PC running an interactive LabVIEW based software including a Graphica...|$|E
40|$|Abstract]: The {{dielectric}} constant, ε′, dielectric loss, ε″, {{and loss}} tangent, tan δ, of some commonly used thermoplastics have been measured at various temperatures and frequencies. They do give some {{clues to the}} suitability of microwave processing of certain fibre-reinforced thermoplastic (FRTP) composites but cannot provide definite answers to the problems. Few measurements, if any, of the ε or the tan δ of FRTP composites {{have been reported in}} the literature. This paper describes a convenient laboratory based method designed to obtain ε′, ε″ and hence tan δ. The method employs an automatic <b>logic</b> network <b>analyser</b> and is called the waveguide transmission technique or transmission line method and is chosen because it provides the widest possible frequency range with high accuracy and utilised available the hardware and software. The required data were collected at a range of elevated temperatures and over a band of frequencies. The relationship between ε′ and ε″, or the tan δ of the composites and their weldability by microwave energy is also studied and discussed. ...|$|R
40|$|Summary form only given, as follows. Large {{electronic}} experiments using distributed processors for parallel readout {{and data}} reduction need to analyse the data acquisition components status and monitor dead time constants of each active readout module and processor. For the UA 1 experiment, a microprocessor-based CAMAC <b>logic</b> status <b>analyser</b> (CLSA) {{has been developed}} in order to implement these functions autonomously. CLSA is a single unit CAMAC module, able to record, up to 256 times, the logic status of 32 TTL inputs gated by a common clock, internal or external, with a maximum frequency of 2 MHz. The data stored in the internal CLSA memory can be read directly via CAMAC function or preprocessed by CLSA 6800 microprocessor. The 6800 resident firmware (4 Kbyte) expands the module features to include an interactive monitor, data recording control, data reduction and histogram accumulation with statistics parameter evaluation. The microprocessor memory and the resident firmware can be externally extended using standard Motorola cards. In this microcomputer configurations CLSA can run the BAMBI software with the CAVIAR graphics library {{under the control of}} a terminal or the CAMAC dataway. (0 refs) ...|$|R
40|$|Microprocessor-based {{systems are}} usually {{debugged}} {{with the help}} of in-circuit emulators and logic analysers. However, these traditional debug tools cannot be used when the microprocessor is an embedded core. To overcome this problem we propose the use of an embedded debug and test infrastructure and the IEEE 1149. 1 compliance-enable mode to implement the basic functionality provided by an In-circuit emulator and a <b>logic</b> <b>analyser.</b> N/...|$|E
40|$|Abstract SCI {{is a high}} {{performance}} interconnect standard. An SCI cluster consists {{of a series of}} nodes connected by a high speed bus. To analyse the performance of a SCI cluster the messages passing between the nodes must be sampled. A <b>logic</b> <b>analyser</b> can be used to collect this data but it has two significant drawbacks. Firstly, logic analysers are extremely expensive. Secondly, to provide meaningful results extremely large traces are required. Logic analysers do not provide a very deep trace...|$|E
40|$|Abstract — This paper {{presents}} {{the design and}} realisation of a hybrid, high-accuracy, automated measurement framework. A hybrid measurement system is introduced that has been successfully used to carry out high-accuracy measurements in distributed automation environments. The application of the hybrid measurement system {{is not limited to}} such envi-ronments, though. It is characterised by monitoring distributed events with low interference and by the usage of global timestamps based on the high-resolution clock of a <b>logic</b> <b>analyser.</b> Furthermore, it exhibits an extensively automated ex-periment control and data analysis framework. Measurement results gained with the approach are presented as well. ...|$|E
40|$|Microcontroller based {{applications}} are usually debugged {{with the assistance}} of In-circuit emulators and logic analysers. However, these traditional debug tools represent a huge investment for use in classes with several groups of students working at the same time. The development of a new low-cost debug tool that uses the Boundary Scan Test infrastructure to implement the basic functionality provided by an In-circuit emulator and a <b>logic</b> <b>analyser</b> is a possible solution to overcome this economical problem. To reduce costs the Boundary Scan Test infrastructure is controlled through the parallel port of a normal Personal Computer, now widely available in classrooms. info:eu-repo/semantics/publishedVersio...|$|E
40|$|This paper {{presents}} a Field Programmable Gate Array (FPGA) based <b>logic</b> <b>analyser</b> controller. The controller circuit {{is capable of}} performing data acquisition and signal display on a 600 x 480 VGA monitor. The controller was designed using a Very High Speed Integrated Circuit Hardware Description Language (VHDL) coding and schematic capture. For validation, behavioural simulations are carried out using Xilinx ISE simulator. The synthesis {{and implementation of the}} controller onto Xilinx Spartan XC 3 S 200 - 4 FT 256 FPGA chip are also presented. The motivation of this project is to explore the capability of designing a complete digital system in a single FPGA chip...|$|E
40|$|The paper {{describes}} {{the use of}} APL (a programming language) for the specification of a hardware architecture, the description of an initial implementation algorithm, its verification and controlled transformation to a logic design. Because of its power of expression, APL can be used effectively {{in each of these}} design domains. The APL interpreter turns any description into an executable prototype. Such a prototype is a powerful tool in the management and execution of a design; it clarifies design choices and assures the logical correctness of the product. This computer-aided-design process, which is illustrated by the design of the front end of a <b>logic</b> <b>analyser,</b> is useful for a variety of design situations, such as LSI/VLSI and computer design...|$|E
40|$|The hybrid {{intelligent}} systems are gaining popularity due to extensive {{success of these}} systems in many real world complex problems. In this paper, {{the implementation of the}} complex fuzzy logic modules have been undertaken with VLSI design approach. Complex fuzzy logic is a generalization of traditional fuzzy logic based on complex fuzzy sets. The general scheme of Complex Fuzzy Logic Systems(CFLS) is also discussed here. The various stages of computation of fuzzy inferences is discussed alongwith their implementation. The design of various modules of a complex fuzzy processor like Intersection detector module, Execution module, Rule detection module, Defuzzification module have been carried out and the results are evaluated with <b>logic</b> <b>analyser.</b> Key words...|$|E
40|$|We {{propose a}} {{scalable}} and fexible hardware architecture for {{the extraction of}} image features, {{used in conjunction with}} an attentional cascade classifier for appearance-based object detection. Individual feature processors calculate feature-values in parallel, using parameter-sets and image data that is distributed via BRAM buffers. This approach can provide high utilization- and throughput-rates for a cascade classifier. Unlike previous hardware implementations, we are able to flexibly assign feature processors to either work on a single- or multiple image windows in parallel, depending on the complexity of the current cascade stage. The core of the architecture was implemented {{in the form of a}} streaming based FPGA design, and validated in simulation, synthesis, as well as via the use of a <b>Logic</b> <b>Analyser</b> for the verification of the on-chip functionality. For the given implementation, we focused on the design of Haar-like feature processors, but feature processors for a variety of heterogenous feature types, such as Gabor-like features, can also be accomodated by the proposed hardware architecture...|$|E
40|$|With {{the growing}} {{imbalance}} between processor and memory performance {{it becomes more}} and more important to optimize the memory controller features to obtain the maximum possible performance out of the memory subsystem. As system bandwidths continue to increase, memory technologies have been optimized for higher speeds and performance. Improvements in memory latency and bandwidth have not kept pace with reductions in execution time of the instruction. Caches have been used extensively to compensate this mismatch, but some applications do not use caches effectively. As a result, the memory access time has been a hurdle which limits the performance of the system. The problem can be handled by designing a Memory Controller. This paper revolves around implementing and testing the Advanced Microcontroller Bus Architecture (AMBA) compliant Memory Controller as an Advanced High-performance Bus (AHB) slave. The whole design is captured using Verilog, configured to a FPGA target device belonging to the Spartan 3 A and Spartan 3 AN family using Xilinx compiler, and simulated with ModelSim. The resulting bit file after compiling is then downloaded to a TKB 3 S board. The FPGA board is connected to the ADM’s LG 320 /LGLITE Integrated <b>Logic</b> <b>Analyser</b> and Pattern Generator for testing and verifying the design...|$|E
40|$|Abstract—The aim of {{this study}} was to design and {{simulate}} a particular type of Asynchronous State Machine (ASM), namely a ‘traffic light controller ’ (TLC), operated at a frequency of 0. 5 Hz. The design task involved two main stages: firstly, designing a 4 -bit binary counter using J-K flip flops as the timing signal and, subsequently, attaining the digital logic by deploying ASM design process. The TLC was designed such that it showed a sequence of three different colours, i. e. red, yellow and green, corresponding to set thresholds by deploying the least number of AND, OR and NOT gates possible. The software Multisim was deployed to design such circuit and simulate it for circuit troubleshooting in order for it to display the output sequence of the three different colours on the traffic light in the correct order. A clock signal, an asynchronous 4 -bit binary counter that was designed through the use of J-K flip flops along with an ASM were used to complete this sequence, which was programmed to be repeated indefinitely. Eventually, the circuit was debugged and optimized, thus displaying the correct waveforms of the three outputs through the <b>logic</b> <b>analyser.</b> However, hazards occurred when the frequency was increased to 10 MHz. This was attributed to delays in the feedback being too high...|$|E
40|$|This {{dissertation}} {{introduces a}} logic-based, computer assisted framework for validating legal compliance of enterprise governance models. This framework {{is intended to}} help checking whether governance systems {{are consistent with the}} law. The framework proposes legal and enterprise models, a governance analysis method - called GAM -, in addition to a governance analysis language - called GAL -, and an implemented governance analysis tool - called GAT. The method consists in extracting requirements into GAL statements by using patterns and translating them into a logic model for consistency checking. The models, language, and tool proposed in this thesis evolved {{as a result of their}} application to governance laws (privacy and financial). The method's main processes were validated through application to Canadian and US laws (mainly PIPEDA and Sarbanes-Oxley) combined with various examples taken from enterprise systems. From these evaluations it was concluded that the method is formal, and repeatable for the purposes of partially extracting requirements from laws and enterprises, directly mapping these combined requirements into logic models, and checking results. The extraction process uses patterns to match legal and enterprise requirements. The representation process maps extracted requirements to GAL statements. The generation process takes as input GAL statements to generate a logic model. The Alloy <b>logic</b> <b>analyser</b> is then used to check legal consistency. Three legal-compliance validation techniques are proposed: model, ontology, and scenario checks. Model-checks validate the combined legal and enterprise requirements for logical consistency. Ontology-checks validate the enterprise structure and process. Scenario-checks validate enterprise scenarios. The techniques are shown to be useful for identifying conflicts and extracting counterexamples...|$|E

