5|4859|Public
50|$|In Frame Relay <b>Local</b> <b>Management</b> <b>Interface</b> (LMI) {{messages}} are {{carried in a}} variant of LAPF frames.|$|E
50|$|<b>Local</b> <b>Management</b> <b>Interface</b> (LMI) is a {{term for}} some {{signaling}} standards used in networks, namely frame relay and Carrier Ethernet.|$|E
50|$|Ethernet <b>Local</b> <b>Management</b> <b>Interface</b> (E-LMI) is an Ethernet layer operation, administration, and {{management}} (OAM) protocol {{defined by the}} Metro Ethernet Forum (MEF) for Carrier Ethernet networks. It provides information that enables auto configuration of customer edge (CE) devices.|$|E
50|$|Programs {{running on}} network-connected {{computers}} (such as the AS/400) can use <b>local</b> data <b>management</b> <b>interfaces</b> to transparently create, manage, and access VSAM record-oriented files by using client-server products implemented according to Distributed Data Management Architecture (DDM). DDM {{is also the}} base architecture for the MVS DB2 server that implements Distributed Relational Database Architecture (DRDA).|$|R
40|$|T he secure {{embedded}} <b>management</b> <b>interface</b> {{project is}} being {{conducted at the}} Stanford Security Lab. Its objective is to assess {{the state of the}} art of embedded <b>management</b> <b>interfaces</b> and develop more secure solutions. This white paper summarizes the result of the first part of our project: the assessment of the security of current embedded <b>management</b> <b>interfaces.</b> Its results will be used in the second part of the project as a foundation to build more secure <b>management</b> <b>interfaces...</b>|$|R
50|$|The PRIME <b>Management</b> Plane {{specifies}} <b>interfaces</b> for <b>local</b> {{and remote}} <b>management</b> of nodes and for firmware upgrade.|$|R
50|$|Initial {{proposals}} for Frame Relay {{were presented to}} the Consultative Committee on International Telephone and Telegraph (CCITT) in 1984. Lack of interoperability and standardization, prevented any significant Frame Relay deployment until 1990 when Cisco, Digital Equipment Corporation (DEC), Northern Telecom, and StrataCom formed a consortium to focus on its development. They produced a protocol that provided additional capabilities for complex inter-networking environments. These Frame Relay extensions {{are referred to as}} the <b>local</b> <b>management</b> <b>interface</b> (LMI).|$|E
40|$|Frame relay {{networks}} {{reduce the}} cost of transmission lines and equipment and improve network performance and response time. Designed for transmission lines with a low error rate, frame relay networks provide minimal internal checking, and consequently, error detection and recovery is implemented in the attached user systems. The Frame Relay Bearer Service was developed specifically as a data service to handle highvolume, bursty traffic by means of high-speed packet transmission, minimal network delay, and efficient use of network bandwidth. The frame protocol supports the data transfer phase of the Service; the frame relay header and the <b>local</b> <b>management</b> <b>interface</b> are sources of congestion avoidance mechanisms. Current implementations include the StrataCom IPX FastPacket digital networking system, which provides the frame relay network, and Digital's DECNIS 500 / 600 and DEC WANrouter 100 / 500 software for attaching user equipment. Today's communications networks are built using high-speed digital trunks that inherently provide high throughput, minimal delay, and a very low error rate. Such transmission networks supply highly reliable service without the overhead of error control functions. Frame relay is a packet-mode transmission network service that exploits these network characteristics by minimizing the amount of error detection and recovery performed inside the network. This paper explains the nature of the Frame Relay Bearer Service (FRBS) and provides details of the interface defined for attaching user equipment. The implications for higher-layer protocols in the user equipment are also considered. Following this tutorial, the paper introduces some current implementations. As an example of equipment used to construct a frame relay network, the technology deployed by the StrataCom integrated packet exchange (IPX) FastPacket range of equipment is described. Access to a frame relay network is typically via a router, as is illustrated in the discussion of two Digital products...|$|E
30|$|Hyperic provide <b>management</b> <b>interfaces</b> of {{middleware}} software products, {{which is}} based on the agents (the Agent element) deployed on each managed node. Due to the large number of <b>management</b> <b>interfaces,</b> the model of Hyperic in this case only contains the main <b>management</b> <b>interfaces</b> of Apache, JOnAS and MySQL, as shown in Figure  7. The attributes of Apache, JOnAS and MySQL elements represent the metrics and configurations of middleware platforms.|$|R
50|$|The {{protocol}} layers {{are designed}} to integrate with any application layer, but {{the presence of a}} <b>management</b> <b>interface</b> suggests a design targeted to DLMS/COSEM, a widely used EU standard for the application layer of meters and SCADA. DLMS/COSEM requires a <b>management</b> <b>interface.</b>|$|R
5000|$|<b>Management</b> <b>interface</b> M1000e (an {{implementation}} for Dell blade-enclosure) ...|$|R
5000|$|Window manager {{provides}} a rudimentary process <b>management</b> <b>interface</b> ...|$|R
50|$|Web <b>interface</b> - <b>Management</b> <b>interface</b> {{to manage}} it all.|$|R
5000|$|... #Caption: An <b>management</b> <b>interface</b> {{from the}} AlphaBay darknet market ...|$|R
50|$|Oracle Appliance Kit (OAK) {{software}} {{offers a}} built-in <b>management</b> <b>interface.</b>|$|R
5000|$|Cloud Infrastructure <b>Management</b> <b>Interface</b> (CIMI) Model and RESTful HTTP-based Protocol ...|$|R
5000|$|Intelligent Platform <b>Management</b> <b>Interface</b> (a server {{out-of-band}} management standard protocol) ...|$|R
5000|$|ISO/IEC 17826:2012, Information {{technology}} — Cloud Data <b>Management</b> <b>Interface</b> (CDMI) ...|$|R
5000|$|... {{standard}} Windows <b>Management</b> <b>Interface</b> performance counters {{for performance}} monitoring; and ...|$|R
50|$|Photos has two <b>interfaces,</b> a <b>management</b> <b>interface</b> and a viewing interface.|$|R
50|$|Photos' <b>management</b> <b>interface</b> only {{allows a}} single window to be open.|$|R
5000|$|Ecclus: Next-generation {{application}} performance <b>management</b> <b>interface</b> {{based on}} 3D rendering technology ...|$|R
5000|$|Most SONET NEs have {{a limited}} number of <b>management</b> <b>interfaces</b> defined: ...|$|R
30|$|The MessageSbbclass {{has also}} been {{equipped}} with a <b>management</b> <b>interface</b> {{by means of a}} Management Bean (MBean) class called MessageSbbConfigurator (Figure 6). Through the <b>management</b> <b>interface,</b> an administrator can change configuration parameters of the MBS service at runtime without stopping or even pausing the JSLEE server. The MBean exploits the Java <b>Management</b> eXtension (JMX) <b>interface</b> provided by JBoss, thus the parameters are easily accessible through a simple JMX web interface.|$|R
50|$|Hitachi Command Suite also {{supports}} <b>management</b> <b>interfaces</b> such as SNMP and SMI-S.|$|R
50|$|An {{open source}} <b>management</b> <b>interface</b> was made {{available}} for Linux in 2009.|$|R
50|$|Open Standards <b>management</b> <b>interfaces</b> such as SNMP and SMI-S {{are also}} supported.|$|R
5000|$|Portal [...] - [...] System <b>management</b> <b>interface</b> via web. Current modules include: ...|$|R
50|$|Pervasive PSQL {{interfaces}} {{fall into}} two categories: <b>management</b> <b>interfaces</b> and data manipulation interfaces.|$|R
5000|$|A web-based GUI for system {{management}} (making {{use of a}} generic, XML <b>management</b> <b>interface)</b> ...|$|R
50|$|Cloud Infrastructure <b>Management</b> <b>Interface</b> (CIMI) {{is an open}} {{standard}} API specification {{for managing}} cloud infrastructure.|$|R
5000|$|Produce a usable {{configuration}} and <b>management</b> <b>interface,</b> {{similar in}} scope to traditional BBS WFC tools.|$|R
40|$|In open systems, {{independent}} services {{exist in}} administrative domains outside {{that of the}} consumers of those services. Current standards exist to create <b>management</b> <b>interfaces</b> to allow operational management of services while keeping the services basic functionality fixed. These standards lack the ability to facilitate the establishment of agreements between services across administrative domains or with a divergent level of autonomy and adaptability. In this {{paper we propose a}} multi-faceted <b>management</b> <b>interface</b> capable of both operational and contractual operations. This allows relationships to be established between services with varying levels of capability. We then apply this <b>management</b> <b>interface</b> to an existing architectural framework that explicitly represents agreements as contracts between services and manages the interferences between those contracts...|$|R
50|$|Enterprise-level Cisco routers are {{configurable}} {{using the}} Cisco IOS command line, {{rather than a}} web <b>management</b> <b>interface.</b>|$|R
50|$|Integrated Operation Feature : A feature {{which can}} show several {{operational}} <b>management</b> <b>interfaces</b> (perspectives) in one screen.|$|R
50|$|Semantics is {{supported}} by the Ontology (information science) <b>management</b> <b>interface</b> and by exposing OData and Schema.org Microdata.|$|R
