79|208|Public
25|$|Computers {{participating}} in a network such as the Internet each {{have at least one}} <b>logical</b> <b>address.</b> Usually this address is unique to each device and can either be configured automatically with the Dynamic Host Configuration Protocol (DHCP) by a network server, manually by an administrator, or automatically by stateless address autoconfiguration.|$|E
2500|$|The MMU {{consisted}} of a context register, a segment map and a page map. [...] Virtual addresses from the CPU were translated into intermediate addresses by the segment map, which in turn were translated into physical addresses by the page map. [...] The page size was [...] and the segment size was [...] which gave 16 pages per segment. [...] Up to 16 contexts could be mapped concurrently. [...] The maximum <b>logical</b> <b>address</b> space for a context was [...] or [...] The maximum physical address that could be mapped simultaneously was also ...|$|E
5000|$|In {{real mode}} each <b>logical</b> <b>address</b> points {{directly}} into physical memory location, every <b>logical</b> <b>address</b> {{consists of two}} 16 bit parts: The segment part of the <b>logical</b> <b>address</b> contains the base address of a segment with a granularity of 16 bytes, i.e. a segments may start at physical address 0, 16, 32, ..., 220-16. The offset part of the <b>logical</b> <b>address</b> contains an offset inside the segment, i.e. the physical address can be calculated as [...] (if the address line A20 is enabled), respectively (segment_part × 16 + offset) mod 220 (if A20 is off) Every segment has a size of 216 bytes.|$|E
5000|$|Can have 126 <b>logical</b> <b>addresses</b> (<b>logical</b> devices) - {{not related}} to {{physical}} location on the network ...|$|R
50|$|Mapping <b>logical</b> <b>addresses</b> to {{physical}} and virtual memory also adds several levels of indirection; see below.|$|R
50|$|The {{physical}} address of computer memory banks may be mapped to different <b>logical</b> <b>addresses</b> for various purposes.|$|R
5000|$|With {{interleaved}} memory, {{memory addresses}} are allocated to each memory bank in turn. For example, in an interleaved system with two memory banks (assuming word-addressable memory), if <b>logical</b> <b>address</b> 32 belongs to bank 0, then <b>logical</b> <b>address</b> 33 would belong to bank 1, <b>logical</b> <b>address</b> 34 would belong to bank 0, and so on. An interleaved memory {{is said to}} be n-way interleaved when there are [...] banks and memory location [...] resides in bank [...]|$|E
50|$|In {{a system}} {{supporting}} virtual memory, there may actually {{not be any}} physical memory mapped to a <b>logical</b> <b>address</b> until an access is attempted. The access triggers special functions of the operating system which reprogram the MMU to map the address to some physical memory, perhaps writing the old contents of that memory to disk and reading back from disk what the memory should contain at the new <b>logical</b> <b>address.</b> In this case, the <b>logical</b> <b>address</b> may {{be referred to as}} a virtual address.|$|E
5000|$|For example, the <b>logical</b> <b>address</b> 7522:F139 {{yields the}} 20-bit {{physical}} address: ...|$|E
50|$|Resources are {{identified}} by <b>logical</b> <b>addresses</b> (typically a URI) and processing is defined using compositions and sequences of resource requests.|$|R
5000|$|<b>Logical</b> <b>addresses</b> can be {{explicitly}} {{specified in}} x86 assembly language, e.g. (AT&T syntax): movl $42, %fs:(%eax) Equivalent to Mfs:eax<-42) in RTL ...|$|R
5000|$|DSAP (Destination SAP) is an 8-bit long {{field that}} {{represents}} the <b>logical</b> <b>addresses</b> of the network layer entity intended to receive the message.|$|R
5000|$|SSAP (Source SAP) is an 8-bit long {{field that}} {{represents}} the <b>logical</b> <b>address</b> of the network layer entity that has created the message.|$|E
5000|$|The HuC6280 has a 64 KB <b>logical</b> <b>address</b> {{space and}} a 2 MB {{physical}} address space. To access this entire memory space, the HuC6280 uses an MMU (Memory Management Unit) that splits the memory space into segments of 8 KB. The <b>logical</b> <b>address</b> space is split as follows: page 0 -> $0000-$1FFF page 1 -> $2000-$3FFF page 2 -> $4000-$5FFF page 3 -> $6000-$7FFF page 4 -> $8000-$9FFF page 5 -> $A000-$BFFF page 6 -> $C000-$DFFF page 7 -> $E000-$FFFF ...|$|E
50|$|HyperCast {{introduces}} {{the concept of}} overlay sockets as endpoints of communication, i.e. a node, in an overlay network. A HyperCast overlay network is simply viewed {{as a collection of}} overlay sockets. Each overlay socket has a <b>logical</b> <b>address</b> and a physical address. The <b>logical</b> <b>address</b> is a unique address that identiﬁes the node in the overlay network as well as to route overlay messages among overlay sockets. The physical address of the overlay socket speciﬁes an address in the underlying network where an overlay socket can send and receive messages.|$|E
40|$|At the November 2002 SSC- 2 {{working group}} meeting when {{responding}} to Letter Ballot comments, {{it was noted}} that the <b>Logical</b> File <b>Address</b> and <b>Logical</b> Set <b>Address</b> portions of the Locate(16) command was not clearly specified. Since IBM was the company that requested this capability, I was asked to see if it could be removed. If it can not be removed I was given an action to clearly define <b>Logical</b> File <b>Address</b> and <b>Logical</b> Set <b>Address.</b> I was also given the action to cleary specify this in the Locate (16) command. This document is the response to this action item...|$|R
50|$|A {{computer}} program uses memory addresses to execute machine code, store and retrieve data. In early computers <b>logical</b> and physical <b>addresses</b> corresponded, {{but since the}} introduction of virtual memory most application programs {{do not have a}} knowledge of physical addresses. Rather, they <b>address</b> <b>logical</b> <b>addresses,</b> or virtual addresses, using the computer's memory management unit and operating system memory mapping; see below.|$|R
50|$|Most {{high-end}} microprocessors (in desktop, laptop, server computers) have {{a memory}} management unit, translating <b>logical</b> <b>addresses</b> into physical RAM addresses, providing memory protection and paging abilities, useful for virtual memory. Simpler processors, especially microcontrollers, usually don't include an MMU.|$|R
50|$|In computing, a <b>logical</b> <b>address</b> is {{the address}} at which an item (memory cell, storage element, network host) appears to reside from the {{perspective}} of an executing application program.|$|E
50|$|A {{destination}} address (DA) in 16 bits, {{which may be}} subdivided into an RT address in 7 bits and subaddress in 8 bits or may contain a 15-bit <b>logical</b> <b>address.</b>|$|E
5000|$|The article PDP-11 {{describes}} how the 16-bit <b>logical</b> <b>address</b> space became an insurmountable limitation. During {{the life of the}} PDP-11, the following techniques were used to work around the limitation: ...|$|E
3000|$|... si - {{a sector}} that is written on an ith sector of VBDc. i {{represents}} a <b>Logical</b> Block <b>Address</b> on VBDc. A <b>Logical</b> Block <b>Address</b> (LBA) {{is the value}} used to reference a logical sector of HDDs or SSDs [45].|$|R
5000|$|In CHS {{addressing}} the sector numbers always start at 1, {{there is no}} sector 0, {{which can lead to}} confusion since <b>logical</b> sector <b>addressing</b> schemes (e.g., with <b>logical</b> block <b>addressing</b> (LBA), or with [...] "relative sector addressing" [...] in DOS) typically start counting with 0.|$|R
50|$|Each packet {{traveling}} through a SpaceWire network can use path addressing (source routing) or <b>logical</b> <b>addressing</b> or some combination.The router examines the first data {{character of the}} packet; when it indicates some specific port of the router, the router discards that routing character and sends {{the rest of the}} packet out that port.|$|R
5000|$|The gateway address (or default gateway) is {{a router}} {{interface}} {{connected to the}} local network that sends packets out of the local network. The gateway has a physical and a <b>logical</b> <b>address.</b>|$|E
50|$|The {{invention}} of the page table let the processor operate on arbitrary pages anywhere in RAM as a seemingly contiguous <b>logical</b> <b>address</b> space. These pages became the units exchanged between disk and RAM.|$|E
5000|$|When {{attempting}} {{address translation}} {{of a given}} <b>logical</b> <b>address,</b> the processor reads the 64-bit segment descriptor structure from either the Global Descriptor Table when TI=0 or the Local Descriptor Table when TI=1. It then performs the privilege check: ...|$|E
50|$|According to Microsoft, {{the basic}} data {{partition}} {{is the equivalent}} to master boot record (MBR) partition types 0x06 (FAT16B), 0x07 (NTFS or exFAT), and 0x0B (FAT32). In practice, it is equivalent to 0x01 (FAT12), 0x04 (FAT16), 0x0C (FAT32 with <b>logical</b> block <b>addressing),</b> and 0x0E (FAT16 with <b>logical</b> block <b>addressing)</b> types as well.|$|R
50|$|As a platform, {{it is an}} {{implementation}} of the resource-oriented computing (ROC) abstraction. ROC is a logical computing model that resides on top of but is completely isolated from the physical realm of code and objects. In ROC, information and services are identified by <b>logical</b> <b>addresses</b> which are resolved to physical endpoints {{for the duration of}} a request and then released. <b>Logical</b> indirect <b>addressing</b> results in flexible systems that can be changed while the system is in operation. In NetKernel, the boundary between the logical and physical layers is intermediated by an operation-system caliber microkernel that can perform various transparent optimization.|$|R
5000|$|... #Caption: Illustration of {{translation}} from <b>logical</b> block <b>addressing</b> to physical geometry ...|$|R
50|$|A {{broadcast}} address is a <b>logical</b> <b>address</b> at which all devices {{connected to a}} multiple-access communications network are enabled to receive datagrams. A message sent to a {{broadcast address}} is typically received by all network-attached hosts, rather than by a specific host.|$|E
50|$|Block {{devices are}} divided into chunks of 256 MB or more. Chunks may be {{mirrored}} or striped across multiple devices. The mirroring/striping arrangement is transparent {{to the rest of}} the file system, which simply sees the single, <b>logical</b> <b>address</b> space that chunks are mapped into.|$|E
50|$|Devices can {{sometimes}} recover from medium errors, either by retrying or by managing {{to reconcile the}} data with the checksum. If the medium has incurred permanent damage, the device might remap the <b>logical</b> <b>address</b> where the error occurred to a different, undamaged physical location.|$|E
50|$|A 2900 Series {{machine was}} {{constructed}} {{from a number}} of functional modules, each contained in a separate cabinet. Peripheral devices were connected using ICL's Primitive Interface (Socket/Plug and cable set) to a Port Adapter on the SMAC. <b>Logical</b> <b>addressing</b> was employed and used a group scheme to identify system components in terms of Ports, Trunks and Streams.|$|R
40|$|Group {{communications}} {{are more}} and more frequently used on the Internet. But until now, they had been considered an exception, compared to point-to-point communications. The use of mobile hosts is also becoming more and more widespread. We propose a <b>Logical</b> <b>Addressing</b> and Routing architecture (LAR) to deal in a uniform way with point-to-point and multicast communications for mobile or fixed hosts. We compare our architecture with the IETF model for mobile host's multicast communications. Then, after a brief summary of the newer IPv 6 internetwork protocol, we describe how to implement the LAR architecture simply as options in IPv 6 extension headers. Keywords: Mobile hosts, IPv 6, <b>Logical</b> <b>addressing</b> and routing, Network layer, Multicasting 1. Introduction The concept of mobility over the Internet is quite recent. Until now, mobility has often been thought like the use of portable computers. But this use is more based on autoconfiguration protocols such as DHCP rather than a real util [...] ...|$|R
50|$|Supported EIDE <b>addressing</b> schemes include <b>logical</b> block <b>addressing</b> (LBA), ONTrack Disk Manager, EZDrive, and {{extended}} cylinder-head-sector (ECHS).|$|R
