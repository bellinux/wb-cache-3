139|95|Public
25|$|Neural {{oscillations}} {{are observed}} throughout {{the central nervous}} system at all levels, and include spike trains, local field potentials and large-scale oscillations which can be measured by electroencephalography (EEG). In general, oscillations can be characterized by their frequency, amplitude and phase. These signal properties can be extracted from neural recordings using time-frequency analysis. In large-scale oscillations, amplitude changes are considered to result from changes in synchronization within a neural ensemble, also referred to as <b>local</b> <b>synchronization.</b> In addition to <b>local</b> <b>synchronization,</b> oscillatory activity of distant neural structures (single neurons or neural ensembles) can synchronize. Neural oscillations and synchronization have been linked to many cognitive functions such as information transfer, perception, motor control and memory.|$|E
50|$|Novel {{structures}} are currently under development to ameliorate {{these issues and}} provide effective solutions. Important areas of research include resonant clocking techniques, on-chip optical interconnect, and <b>local</b> <b>synchronization</b> methodologies.|$|E
50|$|Neural {{oscillations}} {{are observed}} throughout {{the central nervous}} system at all levels, and include spike trains, local field potentials and large-scale oscillations which can be measured by electroencephalography (EEG). In general, oscillations can be characterized by their frequency, amplitude and phase. These signal properties can be extracted from neural recordings using time-frequency analysis. In large-scale oscillations, amplitude changes are considered to result from changes in synchronization within a neural ensemble, also referred to as <b>local</b> <b>synchronization.</b> In addition to <b>local</b> <b>synchronization,</b> oscillatory activity of distant neural structures (single neurons or neural ensembles) can synchronize. Neural oscillations and synchronization have been linked to many cognitive functions such as information transfer, perception, motor control and memory.|$|E
40|$|We {{consider}} {{networks of}} square input–output systems that interact via linear, time-delayed coupling functions. For given system dynamics, we give {{conditions for the}} construction of a (<b>local,</b> global) <b>synchronization</b> diagram. We show that a condition for (<b>local,</b> global) <b>synchronization</b> is that the coupling strength and time-delay are contained in the intersection of scaled copies of the (<b>local,</b> global) <b>synchronization</b> diagram, where the scaling factors are the nonzero eigenvalues of the symmetric Laplacian matrix...|$|R
40|$|In {{this paper}} we propose and analyze three {{randomized}} algorithms to implement <b>local</b> <b>synchronizations</b> in an asynchronous anonymous graph. In particular, we de ne and study a measure to evaluate the eciency of these algorithms. It {{is defined as the}} ratio between the expected number of simultaneous operations authorized by the algorithm in a round and the total number of operations realizable by an idealistic algorithm (not necessarily a distributed one) ...|$|R
5000|$|Remote and <b>local</b> (peer-to-peer) <b>synchronization</b> of calendar, contacts, {{notes and}} to-do list via Bluetooth technology, IR, or USB {{connectivity}} cable ...|$|R
50|$|ActorFoundry is a Java-based {{library for}} Actor programming. It enables writing actor {{programs}} in the usual Java syntax. It support safe (by-copy) as well as efficient (zero-copy) messaging, actor mobility, and message ordering using <b>local</b> <b>synchronization</b> constraints. The run-time provides location-independence and fairness in scheduling.|$|E
5000|$|The SugarSync program {{automatically}} refreshes its sync by constantly monitoring {{changes to}} files—additions, deletions, edits—and syncs these changes with the SugarSync servers. Any other linked devices then also {{sync with the}} SugarSync servers. Deleted files are archived in a [...] "Deleted Files" [...] folder. In the event the local sync folder is stored on a device which later becomes unavailable (secondary hard drive failure, etc.) the SugarSync program will interpret this event as if the user had purposely deleted the entire synchronization folder, resulting in deletion of all files from the user's storage account. Due to this limitation, {{it is best to}} only store the <b>local</b> <b>synchronization</b> folder on the boot drive. Files deleted by the user are not actually removed from SugarSync servers until the user does so manually; however, recovery of a larger nested folder structure may be difficult.|$|E
5000|$|In the [...] "Tron" [...] rule, the {{transition}} function leaves each block unchanged except when {{all four of}} its cells have the same state, in which case their states are all reversed. Running this rule from initial conditions {{in the form of}} a rectangle of live cells, or from similar simple straight-edged shapes, leads to complex rectilinear patterns. Toffoli and Margolus also suggest that this rule can be used to implement a <b>local</b> <b>synchronization</b> rule that allows any Margolus-neighborhood block cellular automaton to be simulated using an asynchronous cellular automaton. In this simulation, each cell of an asynchronous automaton stores both a state for the simulated automaton and a second bit representing the parity of a timestamp for that cell; therefore, the resulting asynchronous automaton has twice as many states as the automaton it simulates. The timestamps are constrained to differ by at most one between adjacent cells, and any block of four cells whose timestamps all have the correct parity may be updated according to the block rule being simulated. When an update of this type is performed, the timestamp parities should also be updated according to the Tron rule, which necessarily preserves the constraint on adjacent timestamps. By performing local updates in this way, the evolution of each cell in the asynchronous automaton is identical to its evolution in the synchronous block automaton being simulated.|$|E
40|$|Synchronization of discrete-time {{dynamical}} networks with time-varying couplings. (English summary) SIAM J. Math. Anal. 39 (2007 / 08), no. 4, 1231 – 1259. The paper {{deals with}} the problem of <b>local</b> complete <b>synchronization</b> in a network of discretetime dynamical systems with (possibly stochastically) time-varying coupling structure, which is generally described b...|$|R
40|$|This paper {{proposes a}} new {{algorithmic}} paradigm – k-level asynchronous (KLA) – that bridges level-synchronous and asynchronous paradigms for processing graphs. The KLA paradigm enables {{the level of}} asynchrony in parallel graph algorithms to be parametrically varied from none (level-synchronous) to full (asynchronous). The motivation is to improve execution times through an appropriate trade-off {{between the use of}} fewer, but more expensive global syn-chronizations, as in level-synchronous algorithms, and more, but less expensive <b>local</b> <b>synchronizations</b> (and perhaps also redundant work), as in asynchronous algorithms. We show how common patterns in graph algorithms can be expressed in the KLA pardigm and provide techniques for determining k, the number of asynchronous steps allowed between global synchronizations. Results of an implementation of KLA in the stapl Graph Library show excellent scalability on up to 96 K cores and improvements of 10 x or more over level-synchronous and asynchronous versions for graph algorithms such as breadth-first search, PageRank, k-core decomposi-tion and others on certain classes of real-world graphs...|$|R
40|$|The {{problem of}} <b>local</b> clock <b>synchronization</b> is {{studied in the}} context of media access control (MAC) protocols, such as time {{division}} multiple access (TDMA), for dynamic and wireless ad hoc networks. In the context of TDMA, <b>local</b> pulse <b>synchronization</b> mechanisms let neighboring nodes align the timing of their packet transmissions, and by that avoid transmission interferences between consecutive timeslots. Existing implementations for Vehicular Ad-Hoc Networks (VANETs) assume the availability of common (external) sources of time, such as base-stations or geographical positioning systems (GPS). This work is the first to consider autonomic design criteria, which are imperative when no common time sources are available, or preferred not to be used, due to their cost and signal loss. We present self-. pulse synchronization strategies. Their implementing algorithms consider the effects of communication delays and transmission interferences. We demonstrate the algorithms via extensive simulations in different settings including node mobility. We also validate these simulations in the MicaZ platform, whose native clocks are driven by inexpensive crystal oscillators. The results imply that the studied algorithms can facilitate autonomous TDMA protocols for VANETs...|$|R
40|$|Abstract—This paper {{introduces}} a novel complex network model {{to evaluate the}} reputation of virtual organizations. By using the Lyapunov function and linear matrix inequality approaches, the <b>local</b> <b>synchronization</b> of the proposed model is further inves-tigated. Here, the <b>local</b> <b>synchronization</b> {{is defined by the}} inner synchronization within a group which does not mean the synchro-nization between different groups. Moreover, several sufficient conditions are derived to ensure the <b>local</b> <b>synchronization</b> of the proposed network model. Finally, several representative examples are given to show the effectiveness of the proposed methods and theories. Index Terms—Complex network, linear matrix inequality, <b>local</b> <b>synchronization,</b> Lyapunov functional, reputation computation, trust, virtual organization. I...|$|E
40|$|This paper {{introduces}} a novel complex network model {{to evaluate the}} reputation of virtual organizations. By using the Lyapunov function and linear matrix inequality approaches, the <b>local</b> <b>synchronization</b> of the proposed model is further investigated. Here, the <b>local</b> <b>synchronization</b> {{is defined by the}} inner synchronization within a group which does not mean the synchronization between different groups. Moreover, several sufficient conditions are derived to ensure the <b>local</b> <b>synchronization</b> of the proposed network model. Finally, several representative examples are given to show the effectiveness of the proposed methods and theories...|$|E
40|$|Summary. Spiking neural P systems (SN P systems, for short) are a {{class of}} {{distributed}} parallel computing devices inspired from the way neurons communicate by means of spikes. Asynchronous SN P systems are non-synchronized systems, where the use of spiking rules (even if they are enabled by the contents of neurons) is not obligatory. In this paper, with a biological inspiration (in order to achieve some specific biological functioning, neurons from the same functioning motif or community work synchronously to cooperate with each other), we introduce the notion of <b>local</b> <b>synchronization</b> into asynchronous SN P systems. The computation power of asynchronous SN P systems with <b>local</b> <b>synchronization</b> is investigated. Such systems consisting of general neurons (resp. unbounded neurons) and using standard spiking rules are proved to be universal. Asynchronous SN P systems with <b>local</b> <b>synchronization</b> consisting of bounded neurons and using standard spiking rules characterize the semilinear sets of natural numbers. These {{results show that the}} <b>local</b> <b>synchronization</b> is useful, it provides some “programming capacity ” useful for achieving a desired computational power. ...|$|E
5000|$|Local mode: It {{will not}} work {{efficiently}} with multiple access because in the multiple access through <b>Local</b> mode the <b>synchronization</b> of changes may create a serious issue. The Local mode is weaker than Remote mode in respect of the security.|$|R
40|$|Asynchronous {{algorithms}} {{have been}} demonstrated to improve scalability {{of a variety of}} applications in parallel environments. Their distributed adaptations have received relatively less attention, particularly in the context of conventional execution environments and associated overheads. One such framework,MapReduce,hasemergedasacommonlyusedprogramming framework for large-scale distributed environments. While the MapReduce programming model has proved to be effective for data-parallel applications, significant questions relating to its performance and application scope remain unresolved. Thestrictsynchronizationbetweenmapandreduce phases limits expression of asynchrony and hence, does not readily support asynchronous algorithms. This paper investigates the notion of partial synchronizations in iterative MapReduce applications to overcome global synchronization overheads. The proposed approach applies a locality-enhancing partition on the computation. Map tasks execute local computations with (relatively) frequent <b>local</b> <b>synchronizations,</b> with less frequent global synchronizations. This approach yields significant performance gains in distributed environments, even though their serial operation counts are higher. We demonstrate these performance gains on asynchronous algorithms for diverse applications, including PageRank, Shortest Path, and K-Means. We make the following specific contributions in the paper — (i) we motivate the need to extend MapReduce with constructs for asynchrony, (ii) we propose an API to facilitate partial synchronizations combined with eager scheduling and locality enhancing techniques, and (iii) demonstrate performance improvements from our proposed extensions through a variety of applications from different domains. I...|$|R
40|$|Abstract: We {{investigate}} synchronization in {{a system}} of globally, uniformly and lin-early coupled Hindmarsh and Rose oscillators. These oscillators are physiologically realistic models of neural dynamics at the level of a single cell. Aplying a recently developed framework for the analysis of synchronization phenomena, passivity-based approach (A. Pogromsky, H. Nijmeijer), we derive sufficient conditions for global and <b>local</b> asymptotic <b>synchronization</b> in the system. Apart from showing the possibility of synchronization, we concentrate on estimating the least possible values for the coupling connections that are sufficient for convergence of the trajectories to the synchronization manifold...|$|R
40|$|Spiking neural P systems (SN P systems, for short) are a {{class of}} {{distributed}} parallel computing devices inspired from the way neurons communicate by means of spikes. Asynchronous SN P systems are non-synchronized systems, where the use of spik- ing rules (even if they are enabled by the contents of neurons) is not obligatory. In this paper, with a biological inspiration (in order to achieve some speci c biological func- tioning, neurons from the same functioning motif or community work synchronously to cooperate with each other), we introduce the notion of <b>local</b> <b>synchronization</b> into asyn- chronous SN P systems. The computation power of asynchronous SN P systems with <b>local</b> <b>synchronization</b> is investigated. Such systems consisting of general neurons (resp. unbounded neurons) and using standard spiking rules are proved to be universal. Asyn- chronous SN P systems with <b>local</b> <b>synchronization</b> consisting of bounded neurons and using standard spiking rules characterize the semilinear sets of natural numbers. These {{results show that the}} <b>local</b> <b>synchronization</b> is useful, it provides some capacity" useful for achieving a desired computational power. Junta de Andalucía P 08 – TIC 0420...|$|E
40|$|Abstract. In this paper, <b>local</b> <b>synchronization</b> {{problem of}} complex {{networks}} is theoretically and numerically studied. Base on the Lyapunov stability theory, a sufficient criterion for <b>local</b> <b>synchronization</b> of complex network {{which have the}} time-varying connection topologies is derived via designed decentralized linear controllers. And a numerical example of typical the Rössler network system with time-varying linear coupling {{has been used to}} demonstrate and verify the proposed. And, the simulation results show the effectiveness of proposed synchronization approaches...|$|E
40|$|Neuronal {{synchronization}} {{occurs when}} {{two or more}} neuronal events are coordinated across time. <b>Local</b> <b>synchronization</b> produces field potentials. Long-range synchronization between distant brain sites contributes to the electroencephalogram. Neuronal synchronization depends on synaptic (chemical/electrical), ephaptic, and extracellular interactions. For an expanded treatmen...|$|E
40|$|International audienceToday, our digital society exchanges data flows {{that are}} {{incredibly}} large {{and the future}} promises us a data explosion due to the communications between our technological equipment, robots, etc. Indeed, we are close to widely {{open the door of}} the Internet of Things (IoT). This data orgy will waste a lot of energy and will contribute to a non-ecological approach of our digital life. Indeed, the Internet and the new technologies consume about 10 % of the electrical power produced in the world. Considering that we are only {{at the beginning of the}} IoT, it is urgent to enhance the energetic performances of the electronic circuits and systems. The design paradigm based on synchronizing digital circuit communication with a clock is source of useless activity and of complicated design techniques. The digital circuit design based on <b>local</b> <b>synchronizations,</b> also called asynchronous circuits, is a way to mitigate the power consumption in electronics by only activating the circuitry when an event appears. In addition, another way to reduce energy is to rethink the sampling techniques and digital processing chains. Indeed, by using the Shannon theory, we produce more data than necessary. Indeed, useless data produce more computation, more storage, more communications and also more power consumption. If we go beyond the Shannon theory, we can discover new sampling schemes and new processing techniques able to take advantage of event-based design. Drastically reducing the useless data and activity is maybe the Grail of low-power computing...|$|R
40|$|ISBN 978 - 3 - 642 - 24153 - 6 International audienceSelf-timed {{circuits}} are slope sensitive: {{when the}} voltage of one input or internal node changes too slowly, the interconnected logical blocks might loose their <b>local</b> one-to-one <b>synchronization.</b> This phenomenon {{often leads to}} unwanted global dead-locks of the entire circuit. The deep-submicronic manufacturing process mismatches might create such situations where one logical block is significantly slower than the others. We applied two known solutions for ensuring the correct C-element behavior whatever the slopes are: the transistors are resized and the supply voltage is reduced in order to guarantee the overall chip correctness {{taking into account the}} process variations...|$|R
40|$|We {{consider}} complete synchronization {{of identical}} maps coupled through a general interaction function {{and in a}} general network topology where the edges may be directed and may carry {{both positive and negative}} weights. We define mixed transverse exponents and derive sufficient conditions for <b>local</b> complete <b>synchronization.</b> The general non-diffusive coupling scheme can lead to new synchronous behavior, in networks of identical units, that cannot be produced by single units in isolation. In particular, we show that synchronous chaos can emerge in networks of simple units. Conversely, in networks of chaotic units simple synchronous dynamics can emerge; that is, chaos can be suppressed through synchrony...|$|R
40|$|Resting-state {{functional}} {{magnetic resonance}} imaging (RS-fMRI) has been widely used to investigate temporally correlated fluctuations between distributed brain areas, as well as to characterize <b>local</b> <b>synchronization</b> of low frequency (, 0. 1 Hz) spontaneous fMRI signal. Regional homogeneity (ReHo) was proposed as a voxel-wise measure of the synchronization of the timecourses of neighboring voxels and has been used in many studies of brain disorders. However, the interpretation of ReHo remains challenging because the effect of high frequency task on ReHo is still not clear. In order to investigate the effect of a high-frequency task on the modulation of <b>local</b> <b>synchronization</b> of resting-state activity, we employed three right-finger movement scanning sessions: slow-event related (‘Slow’), fast-event related (‘Fast’), and continuous finger pressure (‘Tonic’), from 21 healthy participants and compared the ReHo of the three task states with that of resting-state (‘Rest’). In the contralateral sensorimotor cortex, ‘Slow ’ task state showed greater ReHo than ‘Rest ’ in low frequency band (0 – 0. 08 Hz) fMRI signal, but lower ReHo in high frequency band (0. 08 – 1. 67 Hz); ‘Fast ’ task state showed lower ReHo than ‘Rest ’ in both the low and high frequency band; ‘Tonic ’ state did not show any significant difference compared to ‘Rest’. The results in the contralateral sensorimotor cortex suggest that <b>local</b> <b>synchronization</b> of BOLD signal varies with different finger tapping speed. In the ipsilateral sensorimotor cortex, all the three task states had lower ReHo than the ‘Rest ’ state both in the low and high frequency, suggesting a similar effect of fast and slow finger tapping frequencies on <b>local</b> <b>synchronization</b> of BOL...|$|E
40|$|We {{consider}} {{networks of}} time-delayed diffusively coupled systems and relate conditions for synchronization {{of the systems}} in the network to the topology of the network. First we present sufficient conditions for the solutions of the time-delayed coupled systems to be bounded. Next we give conditions for <b>local</b> <b>synchronization</b> and we show that {{the values of the}} coupling strength and time-delay for which there is <b>local</b> <b>synchronization</b> in any network can be determined from these conditions. In addition we present results on global synchronization in relation to the network topology for networks of a class of nonlinear systems. We illustrate our results with examples of synchronization in networks with FitzHugh-Nagumo model neurons and Hindmarsh-Rose neurons. © 2014 Elsevier B. V. All rights reserved...|$|E
40|$|Recently, it {{has been}} {{determined}} that many real-world networks show community structure. In this Letter, we propose a growth model to create a scale-free network with a tunable strength (noted by Q) of community structure and investigate {{the influence of the}} community structure upon the SIRS epidemiological process. We focus on the global and <b>local</b> <b>synchronization</b> of the system which is characterized by the order parameter σ. The numerical results have showed that, a transition occurs as Q suns from 1 to 0 for the global synchronization, and the <b>local</b> <b>synchronization</b> behaves very differently. The results {{may be related to the}} patterns observed in real epidemics. In addition, we study the impact of mean degree upon the synchronization on scale-free networks and find that plays an important role...|$|E
40|$|To observe {{electronic}} {{dynamics in}} atoms, molecules, and condensed matter {{taking place on}} an attosecond time scale, next-generation photon science facilities like X-ray free-electronlasers and intense laser beamlines require system-wide attosecondlevel synchronization of dozens of optical andmicrowave signals up to kilometer distances. Here, we present {{for the first time}} a timing synchronization system that can meet the strict timing requirements of such large-scale facilities. We discuss some key enabling technologies including master-laser jitter characterization, <b>local</b> timing <b>synchronization,</b> new designs of attosecond-precision timing/phase detectors, and analyze fundamental noise contributions in nonlinear pulse propagation in fiber links. Finally, a complete 4. 7 -km laser-microwave network with 950 -as timing jitter is realized over tens of hours of continuous operation...|$|R
40|$|This paper investigates {{generalized}} synchronization {{of three}} typical classes of complex dynamical networks: scale-free networks, small-world networks, and interpolating networks. The proposed synchronization {{strategy is to}} adjust adaptively a node's coupling strength based on the node's <b>local</b> generalized <b>synchronization</b> information. By taking the auxiliary-system approach and using the Lyapunov function method, we prove that for any given initial coupling strengths, the generalized synchronization can take place in complex networks consisting of nonidentical dynamical systems. It is demonstrated that the coupling strengths are affected by topologies of the networks. Furthermore, {{it is found that}} there are hierarchical features in the processes of generalized synchronization in scale-free networks because of their highly heterogeneous distributions of connection degree. Finally, we discuss in detail how a network's degree of heterogeneity affects its generalization synchronization behavior. ...|$|R
40|$|International audienceSynchronized {{oscillations}} are {{of critical}} functional importance in many biological systems. We show that such oscillations can arise without centralized coordination in a disordered system of electrically coupled excitable and passive cells. Increasing the coupling strength results in waves {{that lead to}} coherent periodic activity, exhibiting cluster, <b>local</b> and global <b>synchronization</b> under different conditions. Our results may explain the self-organized transition in a pregnant uterus from transient, localized activity initially to system-wide coherent excitations just before delivery...|$|R
40|$|Abstract. In these lecture notes, we give an {{overview}} of concurrent, distributed, and mobile programming using JoCaml. JoCaml {{is an extension of}} the Objective Caml language. It extends OCaml with support for concurrency and synchronization, the distributed execution of programs, and the dynamic relocation of active program fragments during execution. The programming model of JoCaml is based on the join calculus. This model is characterized by an explicit notion of locality, a strict adherence to <b>local</b> <b>synchronization,</b> and a natural embedding of functional programming à la ML. <b>Local</b> <b>synchronization</b> means that messages always travel to a set destination, and can interact only after they reach that destination; this is required for an efficient asynchronous implementation. Specifically, the join calculus uses ML’s function bindings and pattern-matching on messages to express local synchronizations. The lectures and lab sessions illustrate how to use JoCaml to progra...|$|E
40|$|Oscillator lattices with random {{frequency}} distribution are numerically studied. We measured the <b>local</b> <b>synchronization</b> rate R in various oscillator lattices {{and found that}} on the lattices with more connections the oscillators are not always easier to synchronize. We also found strange behavior in which R is decreased as the coupling strength K is increased...|$|E
3000|$|We assume time is slotted. Each {{time slot}} {{is assumed to}} be of {{sufficient}} duration to transmit or receive a broadcast message. To this end, the network is locally synchronized at the slot level. As shown in [25], this can be achieved by <b>local</b> <b>synchronization</b> techniques, such as FTSP [26], which can yield an accuracy of 2.24 μ [...]...|$|E
40|$|Clusters of {{inferior}} olive neurons (IONs) in the olive-cerebellar system play {{an important}} role in providing synchronized motor control signals for the activation of large number of muscles. However, the dynamics of IONs are highly nonlinear and the system parameters are assumed to be unknowm. The IONs evolving from arbitrary initial conditions are not synchronized. However the application of IONs for control of BAUV 2 ̆ 7 s requires that IONs oscillate in unison. The objective is to design control laws such that the controlled ION tracks the trajectories of the reference ION. The two control laws are derived based on tuning functions adaptive method for <b>local</b> and global <b>synchronization.</b> Furthermore, based on L 1 adaptive control theory for <b>local</b> and global <b>synchronization</b> is designed. They are completed in two steps of a back stepping design process. Using Lyapunov analysis, it is shown that in the closed-loop system, the controlled ION asymptotically tracks the trajectories of the reference ION. Phase control for the synchronization of IONs based on tuning functions and L 1 adaptive control method has been studied. Simulation results are presented to evaluate the performance of each control system designed...|$|R
40|$|We {{consider}} a model where {{a population of}} diffusively coupled limit-cycle oscillators, described by the complex Ginzburg-Landau equation, interacts nonlocally via an inertial field. For sufficiently high intensity of nonlocal inertial coupling, the system exhibits birhythmicity with two oscillation modes at largely different frequencies. Stability of uniform oscillations in the birhythmic region is analyzed {{by means of the}} phase dynamics approximation. Numerical simulations show that, depending on its parameters, the system has irregular intermittent regimes with <b>local</b> bursts of <b>synchronization</b> or desynchronization. ...|$|R
40|$|Synchronized {{oscillations}} are {{of critical}} functional importance in many biological systems. We show that such oscillations can arise without centralized coordination in a disordered system of electrically coupled excitable and passive cells. Increasing the coupling strength results in waves {{that lead to}} coherent periodic activity, exhibiting cluster, <b>local</b> and global <b>synchronization</b> under different conditions. Our results may explain the self-organized transition in a pregnant uterus from transient, localized activity initially to system-wide coherent excitations just before delivery. Comment: 5 pages, 4 figure...|$|R
