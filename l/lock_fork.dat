0|11|Public
5000|$|The salient part of {{the bike}} is the <b>Fork</b> <b>Lock</b> which {{can be adapted to}} {{different}} types of bicycles, including motorized bicycle. A cheap, light and sturdy bicycle is proposed, meant to reduce servicing and vandalism: ...|$|R
40|$|ROADRUNNER is {{a dynamic}} {{analysis}} framework designed to facilitate rapid prototyping and experimentation with dynamic analyses for concurrent Java programs. It provides a clean API for communicating an event stream to back-end analyses, where each event describes some operation of interest performed by the target program, such as accessing memory, synchronizing on a <b>lock,</b> <b>forking</b> a new thread, and so on. This API enables the developer {{to focus on the}} essential algorithmic issues of the dynamic analysis, rather than on orthogonal infrastructure complexities. Each back-end analysis tool is expressed as a filter over the event stream, allowing easy composition of analyses into tool chains. This tool-chain architecture permits complex analyses to be described and implemented as a sequence of more simple, modular steps, and it facilitates experimentation with different tool compositions. Moreover, the ability to insert various monitoring tools into the tool chain facilitates debugging and performance tuning. Despite ROADRUNNER’s flexibility, careful implementation and optimization choices enable ROADRUNNER-based analyses to offer comparable performance to traditional, monolithic analysis prototypes, while being up to an order of magnitude smaller in code size. We have used ROADRUNNER to develop several dozen tools and have successfully applied them to programs as large as the Eclipse programming environment...|$|R
5000|$|The Strike One uses a Bergmann System {{introduced}} in the Bergmann-Bayard pistol. Unlike the Browning system, the barrel does not tilt. It is locked with a Y shaped part that during the recoil locks the barrel and bolt and halfway through it drops, releasing the barrel. The barrel stops its motion, the bolt continues back, ejecting the spent cartridge case and loading fresh cartridge and on its way back the Y shaped <b>locking</b> <b>fork</b> reengages and the barrel and bolt move together forward. Instead of tilting the barrel only moves in a straight line, thus increasing the accuracy. The Strike one is rated for +P+ ammunition and specifically set up to fire Russian 9×19mm ammunition 7N21 and 7N31 which are close to [...]357 SIG in their performance. The pistol will be available in: 9×19mm Parabellum, 9×21mm IMI, [...]357 SIG, and [...]40 S&W. There is no discussion for 10mm Auto or [...]45 ACP versions, although a [...]38 Super version is being considered due to this cartridge's popularity in Italy in particular (Italian laws forbid civilians to have weapons in the same caliber as military and police). A fully automatic version of the Strike One has been offered for the Russian Armed Forces. Longer barreled version (300mm) is also available.|$|R
50|$|The {{total height}} {{difference}} between Zutphen and Enschede is 21 metres. To bridge this difference, the Twentekanaal has three locks. The lock at Eefde bridges approximately 6 meters, {{depending on the}} water level in the IJssel. The lock at Delden also bridges 6 meters and the lock at Hengelo 9 meters. There are no <b>locks</b> in the <b>fork</b> to Almelo.|$|R
50|$|The Suzuki RG250 Gamma was a {{two-cylinder}} parallel, water-cooled 250 cc two-stroke motorcycle {{produced by}} Suzuki from 1983 to 1987. One {{of the major}} features of the RG250 Gamma was its large power-to-weight ratio. Able to produce up to 45+ BHP at 8,500 RPM and 38.4 Nm torque at 8,000 RPM, weighing in at roughly 130 kg. The RG250 Gamma was the first mass-produced motorcycle to have a lightweight aluminum frame and racing type aerodynamic fairing. The Gamma also had a very advanced 'full floater' suspension system for its time, with the first Mk1s having 'anti-dive' front <b>forks</b> (which <b>locked</b> the <b>forks</b> under hard braking to stop them diving). Due to this, the bike was dubbed the first street legal racer.|$|R
40|$|Abstract. In {{this paper}} we discuss a {{verification}} method for concur-rent Java programs based on the concept of dynamic frames. We build on our earlier work that proposes a new, symbolic permission system for concurrent reasoning and we provide the following new contributions. First, we describe our approach for proving program specifications to be self-framed w. r. t. permissions, which is a necessary condition to main-tain soundness in concurrent reasoning. Second, we show how we use predicates to provide modular and reusable specifications for program synchronisation points, like <b>locks</b> or <b>forked</b> threads. Our work primarily targets the KeY verification system with its specification language JML∗ and symbolic execution proving method. Hence, we also give the current status of the work on implementation and we discuss some examples that are verifiable with KeY. ...|$|R
50|$|Other {{advances}} in design include adjustable travel allowing riders {{to adapt the}} fork's travel to the specific terrain profile. Typically, less suspension travel is needed for uphill or flat terrain than for downhill terrain. Advanced designs also often feature the ability to <b>lock</b> out the <b>fork</b> to eliminate or drastically reduce the fork's travel for more efficient riding over smooth sections of terrain. This lockout can sometimes be activated remotely by a cable and lever on the handlebars.|$|R
40|$|In {{this paper}} we discuss a {{verification}} method for concurrent Java programs based on the concept of dynamic frames. We build on our earlier work that proposes a new, symbolic permission system for concurrent reasoning and we provide the following new contributions. First, we describe our approach for proving program specifications to be self-framed w. r. t. permissions, which is a necessary condition to maintain soundness in concurrent reasoning. Second, we show how we use predicates to provide modular and reusable specifications for program synchronisation points, like <b>locks</b> or <b>forked</b> threads. Our work primarily targets the KeY verification system with its specification language JML* and symbolic execution proving method. Hence, we also give the current status of the work on implementation and we discuss some examples that are verifiable with KeY. © Springer International Publishing Switzerland 2016 This work is supported by ERC grant 258405 for the VerCors project and by the Swedish Knowledge Foundation grant for the AUTO-CAAS project. VerCorsAUTO-CAA...|$|R
50|$|When {{the river}} levels are normal, {{travelling}} along the canal is a pleasant experience, as the route passes through areas of beautiful countryside {{and other areas}} with interesting industrial archaeology. After 8.5 mi and 14 <b>locks,</b> the channel <b>forks.</b> The Calder and Hebble proceeds straight ahead through Cooper Bridge flood gates to reach the Aire and Calder at Wakefield. That route {{is part of the}} North Pennine Ring, which uses the Leeds and Liverpool Canal to re-cross the Pennines. The South Pennine Ring takes a left turn onto the Huddersfield Broad Canal. Care is needed as there is a large weir beside the entrance to the first lock.|$|R
40|$|We {{define a}} Concurrent Separation Logic with {{first-class}} locks and threads for the C language, and prove its soundness in Coq with re-spect to a compilable operataional semantics. We define the language Concurrent C minor, {{an extension of}} the C minor language of Leroy. C minor was designed as the highest-level intermediate language in the CompCert certified ANSI C compiler, and we add to it <b>lock,</b> unlock, and <b>fork</b> statements to make Concurrent C minor, giving it a standard Pthreads style of concurrency. We define a Concurrent Separation Logic for Concurrent C minor, which extends the original Concurrent Separation Logic of O’Hearn to handle first-class locks and threads. We then prove the soundness of the logic with respect to the opera-tional semantics of the language. First, we define an erased concurrent operational semantics for Concurrent C minor that is a reasonable ab...|$|R
50|$|During the Roman {{times it}} is easy to know how the {{emperors}} wore their hair. For example, one constant feature of Augustus's portraits is his hairstyle, with its distinctive <b>forked</b> <b>locks</b> of hair on his forehead. The emperor was most often looked at as the trendsetter during these times. This is shown by the emperor Nero (54-68 CE) who adopted elaborate hairstyleswith curls and even had sideburns. Men began to curl their hair more and Nero started the trend. Following in the Flavian period most men have hair trimmed short on the crown and lacking strong plasticity.During the next few decades a straight hair cut with forehead bangs is popular with Trajanic men. Another trend that was started by another emperor was the Emperor Hadrian (117-138 CE). Hadrian was the first emperor to wear a beard andafter him many of the emperors would continue the trend. This has usually been seen as a mark of his devotion to Greece and Greek culture. Furthermore, one literary source, the Historia Augusta, claims that Hadrian wore a beard to hide blemishes on his face.|$|R

