0|1367|Public
30|$|After finding {{influential}} people, theÂ process of requirement engineering {{would be}} performed. <b>Requirements</b> <b>gathering</b> from the influential {{people of the}} society or that specific social domain would be performed. After <b>requirements</b> <b>gathering,</b> <b>requirements</b> would be analyzed.|$|R
40|$|We {{present a}} novel method for {{conducting}} <b>requirements</b> <b>gathering</b> with adolescent populations. Called videographic <b>requirements</b> <b>gathering,</b> this technique {{makes use of}} mobile phone data capture and participant creation of media images. The videographic <b>requirements</b> <b>gathering</b> method can help researchers and designers gain intimate insight into adolescent lives while simultaneously reducing power imbalances. We provide rationale for this approach, pragmatics of using the method, and advice on overcoming common challenges facing researchers and designers relying on this technique...|$|R
5000|$|UKCDR's <b>requirements</b> <b>gathering</b> was {{condensed}} into {{a series}} of core processes.|$|R
30|$|Requirement {{engineering}} is a four step process, which includes feasibility study, <b>requirement</b> <b>gathering,</b> <b>requirement</b> specification, and requirement validation. Each stage has its specific tasks and outputs.|$|R
40|$|Software {{development}} includes {{gathering information}} about tasks, work practices and design options from users. Traditionally <b>requirements</b> <b>gathering</b> takes two forms. Interviews and Participatory Design (PD) practices gather rich {{information about the}} task and the domain but require face-to-face communication between the software engineers and the users. When such communication is not possible traditional software engineering frequently relies on questionnaires and other paper-based methods. Unfortunately, questionnaires often fail to capture implicit aspects of user tasks that may be identified through oneon -one interactions. This project investigates a method of <b>gathering</b> <b>requirements</b> whereby users, working independent of software engineers, construct rough interfaces augmented with textual argumentation. Our initial study has compared the use of GRC with questionnaire-based <b>requirements</b> <b>gathering.</b> <b>Requirements</b> Gathering from End Users <b>Requirements</b> <b>gathering</b> {{is a prerequisite for}} [...] ...|$|R
5000|$|... #Subtitle level 3: UBL 2.3 <b>requirements</b> <b>gathering</b> - per {{governance}} rules at http://docs.oasis-open.org/ubl/UBL-Governance/v1.0/cn01/UBL-Governance-v1.0-cn01.html ...|$|R
40|$|Incorrect {{requirements}} {{have long}} been considered {{to be one of}} the biggest reasons for failed IT projects. Insufficient requirements are also one of the most expensive sources of error. This is especially problematic within small enterprises, which in nature are time and cost sensitive. The purpose of this experimental case study is to identify efficient <b>requirements</b> <b>gathering</b> activities and by extension an efficient <b>requirements</b> <b>gatherings</b> process for small enterprises by utilizing their unique prerequisites. We gathered data through the execution of five user-centered <b>requirements</b> <b>gathering</b> activities on a small organization. The result of these activities, our observations and a survey were analyzed in order to draw conclusions regarding the success and efficiency of the activities and process as a whole. The results show that by utilizing the prerequisites of small organizations through the use of user-centered activities an efficient <b>requirements</b> <b>gathering</b> process can be accomplished. The results also show that the prerequisites of small organizations combined with the impact of external consultants with the purpose of problematizing the operational procedures contributes to other organizational benefits than the requirements documentation. ...|$|R
40|$|Large-scale, organization-wide {{groupware}} {{systems are}} high risk development efforts. <b>Requirements</b> <b>gathering</b> and early evaluation are {{constrained by the}} need to attain a critical mass of users and content. One approach to mitigate this risk is to employ Wizard of Oz style system simulations during the <b>requirements</b> <b>gathering</b> phase. While this method has historically been used to test quasifunctional system prototypes, we have found it to be a useful method for assessing organizational feasibility...|$|R
5000|$|Rome Laboratory, the {{developer}} of REE, intended that {{to support their}} internal <b>requirements</b> <b>gathering</b> methodology. Their method has three main parts: ...|$|R
40|$|This study {{presents}} {{insights from}} using <b>requirements</b> <b>gathering</b> techniques for country-specific customization of smart phones in two emerging markets, Iran and Turkey. In each country, {{a group of}} users participated in <b>requirements</b> <b>gathering</b> sessions that were aimed at developing design ideas for overcoming country-specific usability problems. Using qualitative content analysis, {{it was found that}} in each country some specific interaction activities were considered more when participants generated design ideas for country-specific usability problems. It was also found that even for similar usability problems, participants suggested country-specific solutions. Therefore, it is suggested that participation of local users in the design process should not be limited to identification of usability problems, but should also include the problem-solving phase that is usually a phase in design and development processes in which <b>requirements</b> <b>gathering</b> techniques are being used...|$|R
40|$|This paper investigates commonalities and {{differences}} between Agile and Documentation-driven approaches in managing uncertainty in <b>requirement</b> <b>gathering.</b> The research method is a survey collected interviewing sixteen project managers of Italian software companies, 8 using Agile Methods, and 8 using Documentation-driven methods. The results show that Agile and Document-driven companies consider {{in a different way}} the problem of changing requirements and the related uncertainty; thus, they manage differently <b>requirements</b> <b>gathering</b> and the relationship with the customer. 1...|$|R
50|$|Eliciting requirements:(e.g. {{the project}} charter or definition), {{business}} process documentation, and stakeholder interviews. This is sometimes also called <b>requirements</b> <b>gathering</b> or <b>requirements</b> discovery.|$|R
50|$|The Tizen Association {{was formed}} to guide the {{industry}} role of Tizen, including <b>requirements</b> <b>gathering,</b> identifying and facilitating service models, and overall industry marketing and education.|$|R
50|$|Typical Examples are:1. Customer {{communication}} (a process activity).2. Analysis (an action).3. <b>Requirements</b> <b>gathering</b> (a process task).4. Reviewing a {{work product}} (a process task).5. Design model (a work product).|$|R
5000|$|Functionality <b>requirements</b> <b>gathering</b> - {{assembling}} {{a list of}} the functionality required by the system to accomplish the goals of the project and the potential needs of the users.|$|R
40|$|This paper {{discusses}} shortfalls {{in relation}} to the <b>requirements</b> <b>gathering</b> phases of simulation. While many developments have taken place around supporting the model coding task of simulation, there are few tools available to assist in the <b>requirements</b> <b>gathering</b> phase. This is surprising as it has been reported by several researchers that the requirements phase can absorb twice as much resources as the coding phase. There are numerous process modeling tools available (over 100) that can and have been used to support the requirements phase of simulation. This paper provides a selective review {{of some of the most}} important {{in relation to}} simulation. A conclusion from this review is that none of the tools available adequately supports the <b>requirements</b> <b>gathering</b> phase of simulation. It is proposed that a process modeling tool be developed specifically to support simulation <b>requirements</b> <b>gathering.</b> The design objectives in the development of the tool are: (1) it should be capable of capturing a detailed description of a discrete event system; (2) it should have a low modeling burden and therefore be capable of being used by non-specialists; (3) it should present modeling information at a high semantic level so that manufacturing personnel can rationalize with it; (4) it should have good visualization capabilities; (5) it should support project teamwork. Based on these design objectives a proposed simulation process modeling tool called simulation activity diagrams (SAD) is presented...|$|R
40|$|We {{report on}} the {{software}} development tech-niques used in the New Zealand software indus-try, paying particular attention to <b>requirements</b> <b>gathering.</b> We surveyed a selection of software companies with a general questionnaire and then conducted in-depth interviews with four companies. Our results show a wide variety {{in the kinds of}} companies undertaking software development, employing a wide range of soft-ware development techniques. Although our data are not sufficiently detailed to draw statis-tically significant conclusions, it appears that larger software development groups typically have more well-defined software development processes, spend proportionally more time on <b>requirements</b> <b>gathering,</b> and follow more rig-orous testing regimes. ...|$|R
50|$|His main {{research}} {{theme is}} elicitation methods - techniques for eliciting information from people, for purposes such as market research and <b>requirements</b> <b>gathering</b> for software development. His main {{work in this}} field includes the following.|$|R
30|$|All the listed authors made {{substantive}} intellectual {{contributions to}} the research and manuscript. Specific details are as follows: MM: Led the work on <b>requirements</b> <b>gathering</b> and analysis, design, development and evaluation of the Resource Manager. Carried out the analysis of related work. Wrote {{the main part of}} the paper based on his PhD thesis. Contributed to the editing and preparation of the paper as well as the overall architecture of the Ï-Box. SG: FlexCloud project lead. Responsible for the overall technical approach and architecture, editing and preparation of the paper. Contributed to <b>requirements</b> <b>gathering</b> for the Resource Manager. AS: Principal investigator of the FlexCloud project. All authors read and approved the final manuscript.|$|R
40|$|Thisstudy {{addresses}} the factors responsible for cloud computing adoption in implementing cloud computing for any organization. Service Level Agreements {{play a major}} role for cloud consumer as well as for cloud provider. SLA depends on the requirements gathered by the cloud providers and they vary with the type of organizations for which process is being performed such as education, retail, IT industry etc. SLAs for cloud computing involves technical as well as business requirements which makes the <b>gathering</b> of <b>requirements</b> from stakeholders point of view the heterogeneous process. This research work proposes a 360 degree <b>requirement</b> <b>gathering</b> framework, which reduces the complexitiesduring the process of <b>requirement</b> <b>gathering</b> by cloud service providersas well as SLAs more reliant. ...|$|R
40|$|This chapter {{address the}} {{question}} of why <b>requirements</b> <b>gathering</b> for CSCW systems is substantially different (harder) than other types of computer system, by considering (i) that single user systems often are only useful because users are so flexible; (ii) that we donât really understand how collaboration works, and hence whether collaborative activities are as flexible; and (iii) that field studies of work activities may tell us much about how that work is arranged, but give us virtually no ideal about how the activities will change as a result of introduction of computer support. The chapter then sketches out a framework for understanding the dynamics of change in work activities, based (loosely) on the role of coordination mechanisms in development and breakdown of shared understanding. This framework is applicable to both the <b>requirements</b> <b>gathering</b> for and user evaluation of CSCW systems. For <b>requirements</b> <b>gathering,</b> it provides a checklist of coordination mechanisms to guide the study of existing work practices. For evaluation of CSCW it uses the key notion of a &quot;coordination breakdown &quot; as an observable phenomenon in use of CSCW systems, with the framework providing a way of diagnosing problems that lead to such breakdowns. 1...|$|R
40|$|<b>Requirements</b> <b>gathering</b> and {{analysis}} {{is the most}} important phase of software development. If done properly it reduces future maintenance costs. It can also stop projects that are unlikely to succeed before costs have become excessive. Different software systems require different approaches to requirements engineering. A mature requirements process can be based on a generic requirements process from which specialized processes can be adapted. We discuss such a generic process. The aim is to achieve for requirements engineering a capability level that is comparable to Level 3 of the Capability Maturity Model of SEI for the software process in general. We survey in some detail the parts of the process that deal with project purpose and feasibility, the techniques of <b>requirements</b> <b>gathering,</b> and the representation of requirements. ...|$|R
40|$|In this paper, we {{describe}} the early <b>requirements</b> <b>gathering</b> stage of an EU FP 6 project 1 using a distributed scenario-based method. Through the collaborative development of scenarios among project partners in nine different countries, enabling the derivation of requirements for the overall architecture for the system...|$|R
40|$|This work {{documents}} the <b>requirements</b> <b>gathering</b> {{process for the}} design of a Readiness Assurance Test (RAT) tool to be used in online Team Based Learning (TBL) classrooms. Gathering requirements {{is the first step in}} the User-Centered Design (UCD) process. After <b>gathering</b> <b>requirements</b> for the tool, a preliminary design would be created, implemented, and evaluated. The process would then start again with <b>requirements</b> <b>gathering</b> for the next design iteration. Team Based Learning has been shown to provide positive learning outcomes in face to face classrooms. Because of these positive outcomes, there has been interest in using the technique in online environments. This study determines student and faculty attitudes toward TBL and RATs (in current face-to-face classrooms and potential online classrooms), challenges associated with the RATs (both in face to face and potential online environments), and features needed by both faculty and students in an online RAT tool. This investigation was composed of three parts: student surveys, faculty surveys, and faculty interviews...|$|R
30|$|To {{facilitate}} the taxonomyâs usage, {{the authors also}} designed a visual notation, which was later on used to describe a real GSD project from the video gaming domain. They report that the taxonomy help to identify problems in advance regarding the management of documents and the <b>requirements</b> <b>gathering</b> process.|$|R
40|$|This paper {{explores the}} {{question}} of, and suggests some specific methods for, building security into an application software system, {{starting from the}} <b>requirements</b> <b>gathering</b> phase and continuing on {{with each of the}} subsequent phases of the software development life cycle: requirement analysis and specification, design, development, testing, and implementation...|$|R
40|$|This paper {{presents}} a technique, Simulation Activity Diagrams (SAD), developed {{to lessen the}} modelling burden during the initial <b>requirements</b> <b>gathering</b> phases of a simulation project. The technique also allows the capture and visual communication of detailed information, to manufacturing personnel, which may otherwise be lost in detailed programming code...|$|R
40|$|Part 2 : Usability and User ExperienceInternational audienceThis {{chapter is}} {{bridging}} the gap of Human Computer Interaction (HCI) and Requirement Engineering (RE) where the intended users or appropriators of the technology or service are children and young people. The research draws theory and practices from several disciplines: Human Computer Interaction (HCI) and Interaction Design (IXD) but also from psychology, educational technology and games. Research into children and young peopleâs requirement needs as Player, Learner and User (PLU) is a main theme in Interaction Design for Children (IDC). This chapter focuses on the challenges and issues that arise when conducting <b>requirement</b> <b>gathering</b> with children and young people; it looks at common methods, approaches and methodological innovation in the current research while treating children as research partners in the <b>requirements</b> <b>gathering</b> proces...|$|R
40|$|Abstract- We cannot freeze {{requirements}} at the <b>requirement</b> <b>gathering</b> phase. <b>Requirement</b> changes {{after the}} <b>requirement</b> <b>gathering</b> phase because of various factors like business change, technology change, internal {{changes in the}} organization and {{better understanding of the}} problem. Managing Changing Requirements are very crucial for success of any software development and its organization. We have to manage the requirement so that we can achieve project objective as well as business objective. In this research paper, we will give a complete strategy that will work on the issues related to Managing Changing Requirements and will provide a solution to manage the Changing requirements. We will also give some precaution steps which can be used before implementing the strategy so that we can achieve requirement management in a more effective way...|$|R
40|$|Abstract: Software {{development}} cycle {{is based on}} the software requirements. Requirement elicitation is first and most important activity in the requirement engineering. If the requirements are efficiently elicited and managed then the stakeholders application can be accomplished within time and budget. If the requirements are not complete, consistent and correct then projects fail because they not meet the user needs. Requirement is define as the needs of customer. Requirement elicitation techniques and tools are used for correct and complete <b>requirement</b> <b>gathering.</b> Many <b>requirement</b> elicitation techniques and tools are available. This study based on the understanding of <b>requirement</b> <b>gathering</b> techniques and tools. The paper also summarizes the comparison of the requirement elicitation techniques and software requirement tools. Comparison of requirement elicitation techniques and tools are based on the various parameters...|$|R
50|$|Key project {{challenges}} include {{integration of}} changing requirements (primarily telecommunications and force protection upgrades), tenant <b>requirements</b> <b>gathering,</b> and coordination of project turnover/tenant relocations. The September 11, 2001 terrorist attack caused the Renovation Program to reassess and upgrade project design criteria in many areas. Identification {{and implementation of}} the new criteria has been extremely challenging because design and construction had to proceed while studies were in development {{in order to meet the}} overall accelerated program schedule. Tenant <b>requirements</b> <b>gathering</b> has historically been a challenge for the Renovation Program and continues to be a challenge for Wedges 2-5, particularly for nontypical tenant spaces. Project turnover and tenant relocation to newly completed space is a complex effort. It must be carefully orchestrated to ensure a smooth transition for tenant missions and timely release of new areas for renovation.|$|R
40|$|Requirement {{elicitation}} is {{a critical}} activity in the requirement development process and it explores the requirements of stakeholders. The {{success or failure of}} this process is based on identifying the relevant stakeholders and discovering their needs as well as the quality of requirements. The quality of the requirements is greatly influenced by methods applied during requirements elicitation process. Only complete and structured requirements make these projects more reliable. The common challenges that analysts face during elicitation process are to ensure effective communication between stakeholders as well as the acquisition of tacit knowledge. Mostly errors in the systems are due to poor communication between user and analyst, and these errors require more resources (time and money) to correct them. The understandability problems during elicitation process of large web projects can <b>lead</b> to <b>requirements</b> ambiguous, inconsistent, incorrect and unusable. Different methods (Conversational, Observational, Analytical and Synthetic) are available to deal with the problems during requirement elicitation process. The challenge for analysts is to select an appropriate method or set of methods and apply them for the clear, consistent and correct <b>requirement</b> <b>gathering.</b> This study {{based on the results of}} interviews conducted to the professionals, who have industrial experience in development of web systems. The elicitation problems that are identified in literature and interview along with applicability of elicitation methods for <b>requirement</b> <b>gathering</b> in large web projects development are documented in this report. Umar Sajjad Charhoi, Kotli, Azad Kashmir, Pakistan Muhammad Qaisar Hanif Bhimber, Azad Kashmir, Pakista...|$|R
40|$|In {{this paper}} we {{describe}} {{a process of}} consultation and data gathering with key stakeholders conduced by the Digital Repository of Ireland (DRI) in 2011 / 2013. This paper will examine {{the contributions of the}} interview process to policy development and <b>requirements</b> <b>gathering</b> with a particular focus on access, reuse and community engagement...|$|R
40|$|There {{have been}} {{proposed}} methods of structuring of customerâs requirements in Agile projects in IT. The processes of <b>requirements</b> <b>gathering</b> and productâs characteristics defining in requirement management with quality function deployment were considered. The conclusion was made {{about the effectiveness of}} use of quality function deployment method in Agile projects in IT sphere...|$|R
50|$|The term {{elicitation}} is used {{in books}} and research to raise the fact that good requirements cannot just be collected from the customer, as would be indicated by the name <b>requirements</b> <b>gathering.</b> <b>Requirements</b> elicitation is non-trivial because {{you can never be}} sure you get all requirements from the user and customer by just asking them what the system should do OR NOT do (for Safety and Reliability). Requirements elicitation practices include interviews, questionnaires, user observation, workshops, brainstorming, use cases, role playing and prototyping.|$|R
40|$|Software {{engineering}} is continuously gaining success day by day. In last decades {{a lot of}} growth has been observed in the software industry. Various new software development methodologies are introduced such as agile software development with increasing demand of software industry. In all these development methodologies, user requirements {{play an important role}} for completion of the successful project. If requirements are not clear it can be the reason of project failure. Now a dayâs some industries are not aware about the right way to collect and fulfill the requirements. This survey based study focused on the analysis of user <b>requirements</b> <b>gathering</b> practices in agile and non-agile software development teams. Main {{purpose of this study is}} to analyze the factors involved in <b>requirements</b> <b>gathering</b> practices and rate of maximum agility in tri-city (Mohali, Chandigarh and Panchkula) on the basis of different work experiences...|$|R
