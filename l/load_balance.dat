1477|10000|Public
25|$|Application Request Routing: Provides a proxy-based routing module that {{forwards}} HTTP {{requests to}} content servers based on HTTP headers, server variables, and <b>load</b> <b>balance</b> algorithms.|$|E
25|$|Wholesale {{transactions}} (bids and offers) {{in electricity}} are typically cleared and settled {{by the market}} operator or a special-purpose independent entity charged exclusively with that function. Market operators do not clear trades but often require knowledge of the trade {{in order to maintain}} generation and <b>load</b> <b>balance.</b>|$|E
25|$|PHEVs {{and fully}} {{electric}} cars may allow for more {{efficient use of}} existing electric production capacity, much of which sits idle as operating reserve most of the time. This assumes that vehicles are charged primarily during off peak periods (i.e., at night), or equipped with technology known as charge control to shut off charging during periods of peak demand. Another advantage of a plug-in vehicle is their potential ability to <b>load</b> <b>balance</b> or help the grid during peak loads. This is accomplished with vehicle-to-grid technology. By using excess battery capacity to send power back into the grid and then recharge during off peak times using cheaper power, such vehicles are actually advantageous to utilities {{as well as their}} owners. Even if such vehicles just led to an increase in the use of nighttime electricity they would even out electricity demand which is typically higher in the daytime, and provide a greater return on capital for electricity infrastructure.|$|E
50|$|Cloud <b>load</b> <b>balancing</b> {{is a type}} of <b>load</b> <b>balancing</b> that is {{performed}} in cloud computing. Cloud <b>load</b> <b>balancing</b> is the process of distributing workloads across multiple computing resources. Cloud <b>load</b> <b>balancing</b> reduces costs associated with document management systems and maximizes availability of resources. It {{is a type of}} <b>load</b> <b>balancing</b> and {{not to be confused with}} Domain Name System (DNS) <b>load</b> <b>balancing.</b> While DNS <b>load</b> <b>balancing</b> uses software or hardware to perform the function, cloud <b>load</b> <b>balancing</b> uses services offered by various computer network companies.|$|R
40|$|<b>Load</b> <b>balancing</b> {{middleware}} is {{used extensively}} to improve scalability and overall system throughput in distributed systems. Many <b>load</b> <b>balancing</b> middleware services are simplistic, however, {{since they are}} geared only for specific usecases and environments. These limitations {{make it hard to}} use the same <b>load</b> <b>balancing</b> service for anything other than the distributed application it was designed for originally. This lack of generality forces continuous re-development of application-specific <b>load</b> <b>balancing</b> services. Not only does re-development increase deployment costs of distributed applications, but it also increases the potential of producing nonoptimal <b>load</b> <b>balancing</b> implementations since proven <b>load</b> <b>balancing</b> service optimizations cannot be reused directly. This paper presents a set of <b>load</b> <b>balancing</b> service features that address many existing middleware <b>load</b> <b>balancing</b> service inadequacies, such as lack of server-side transparency, centralized <b>load</b> <b>balancing,</b> sole support for stateless replication, fixed load monitoring granularities, lack of fault tolerant <b>load</b> <b>balancing,</b> non-extensible <b>load</b> <b>balancing</b> algorithms, and simplistic replica management. All the capabilities described in this paper are currently under development {{for the next generation of}} middleware-based <b>load</b> <b>balancing</b> service distributed with our CORBA-compliant ORB (TAO). Keywords: Middleware, patterns, scalability, CORBA, <b>load</b> <b>balancing.</b> ...|$|R
40|$|This paper {{presents}} a <b>load</b> <b>balancing</b> model {{to investigate the}} effect of non-uniform traffic distributions on <b>load</b> <b>balancing</b> in CDMA system. Applying two traffic models on non-uniform traffic distributions, the impact of traffic non-uniformity on system <b>load</b> <b>balancing</b> is compared with uniform distributions. To evaluate the model, we define both <b>load</b> <b>balancing</b> factor (LBF) and <b>load</b> <b>balancing</b> coefficient (LBC). Results indicate that the more offered traffic is easier to achieving <b>load</b> <b>balancing</b> than the less offered traffic. 1...|$|R
2500|$|Tanker drivers (in {{truck driver}} slang tanker yankers [...] "tankies") haul liquids, such as {{gasoline}} (petrol), diesel fuel, milk, & crude oil, and dry bulk materials, such as plastics, sugar, flour, & cement in tanks. Liquid tanker drivers need special driving skills {{due to the}} <b>load</b> <b>balance</b> changing from the liquid movement. [...] This {{is especially true for}} food grade tankers, which do not contain any baffles and are a single compartment (due to sanitation requirements). Also fuel oil/petroleum drivers require special certifications.|$|E
5000|$|... can <b>load</b> <b>balance</b> from IPv6 {{clients to}} IPv4 servers {{and vice versa}} ...|$|E
5000|$|Hoisting ropes {{attached}} to upper ends of car chassis, supplemented by a compensating rope system to <b>load</b> <b>balance</b> for car position on track ...|$|E
40|$|This paper {{presents}} {{the process of}} <b>load</b> <b>balancing</b> in simulation system Triad. Net, the architecture of <b>load</b> <b>balancing</b> subsystem. The main features of static and dynamic <b>load</b> <b>balancing</b> are discussed and new approach, controlled dynamic <b>load</b> <b>balancing,</b> needed for regular mapping of simulation model on the network of computers is proposed. The paper considers linguistic constructions of Triad language for different <b>load</b> <b>balancing</b> algorithms description...|$|R
40|$|The <b>load</b> <b>balancing</b> {{architecture}} {{is the most}} popular method to improve the performance of the server. The selection of the <b>load</b> <b>balancing</b> algorithms {{is one of the most}} important issues. In this paper, we use NetFlow to collect traffic for six <b>load</b> <b>balancing</b> algorithms, including least connections, round robin, minimum misses, hash, response time, and bandwidth. We compared their flow counts and packet counts separately. Both the WAN link <b>load</b> <b>balancing</b> and server <b>load</b> <b>balancing</b> are implemented. In addition, we also collected the burst traffic for server <b>load</b> <b>balancing.</b> The results for the performance of the algorithms are analyzed and compared. Key words: NetFlow, <b>load</b> <b>balancing,</b> cluste...|$|R
40|$|This paper aims {{to conduct}} an {{experiment}} on using some popular algorithms say Particle Swarm Optimization <b>Load</b> <b>Balancing</b> Algorithm(PSO), Cat Swarm Optimization <b>Load</b> <b>Balancing</b> Algorithm(CSO) and Genetic <b>Load</b> <b>Balancing</b> Algorithm (GA) in dynamic cloud computing environment {{in order to achieve}} low over heads during <b>load</b> <b>balancing...</b>|$|R
5000|$|Application Request Routing: Provides a proxy-based routing module that {{forwards}} HTTP {{requests to}} content servers based on HTTP headers, server variables, and <b>load</b> <b>balance</b> algorithms.|$|E
50|$|The nodes (each {{a trusted}} connection) {{automatically}} determine the lowest latency route for traffic and, in doing so, <b>load</b> <b>balance.</b> This also improves privacy, because packets often take different routes.|$|E
50|$|The Oracle iPlanet Web Proxy Server, is {{a popular}} HTTP/1.1 Proxy server {{software}} developed by Sun Microsystems. OiWPS 4.0 is widely used for proxying, caching, and filtering web content, boosting network security and performance, {{as well as to}} protect and secure, and <b>load</b> <b>balance</b> across, content servers.|$|E
40|$|Abstract: <b>Load</b> <b>balancing</b> is a {{technique}} in which workload is distributed across multiple computers or other resources to get optimal resource utilization, minimum time delay, maximize throughput and avoid overload. Mainly in operation of parallel and distributed computing systems, <b>load</b> <b>balancing</b> problem arises. <b>Load</b> <b>balancing</b> scheme can be characterized as: static and dynamic <b>load</b> <b>balancing.</b> This paper represents a senderinitiated <b>load</b> <b>balancing</b> scheme, which {{is a part of}} dynamic <b>load</b> <b>balancing</b> scheme, with the help of genetic algorithm (GA), as due to easily adaptable search technique and robust, immense popularity have gained by genetic algorithms...|$|R
40|$|Flow-based <b>load</b> <b>balancing</b> {{algorithms}} for multipath Internet routing {{are often}} used for traffic engineering. However, the target load distribution and the <b>load</b> <b>balanced</b> result agree only on average, {{and there is a}} significant inaccuracy over time due to stochastic effects. Dynamic <b>load</b> <b>balancing</b> reduces this inaccuracy by relocating flows to other paths in regular time intervals. This causes packet reordering. Therefore, the flow reassignment rate should be kept low. In this paper we consider <b>load</b> <b>balancing</b> in networks. It differs from <b>load</b> <b>balancing</b> at a single node by the fact that several <b>load</b> <b>balancing</b> steps may be performed at consecutive nodes in series. This affects the flow reassignment rate and the <b>load</b> <b>balancing</b> accuracy due to interdependencies and polarization effects. We quantify the impact by simulation results, explain the observed phenomena, and give recommendations for <b>load</b> <b>balancing</b> in practice...|$|R
40|$|Abstract: In <b>load</b> <b>balancing,</b> each {{processor}} {{is assigned}} work proportional to its performance so that execution {{time of the}} program can be minimized. The gap between lightly loaded processor and heavily loaded processor is filled by <b>load</b> <b>balancing.</b> Static <b>load</b> <b>balancing</b> and dynamic <b>load</b> <b>balancing</b> {{are two types of}} <b>load</b> <b>balancing.</b> For decreasing unnecessary request messages and for increasing acceptance rate, genetic algorithm is used with <b>load</b> <b>balancing.</b> Population of solutions are maintained iteratively by genetic algorithm in which each solution represents a chromosome. Basic operation of genetic algorithm here is to determine a destination processor that can receive a task...|$|R
5000|$|Opportunistic Load Balancing (OLB) is the {{algorithm}} that assigns workloads to nodes in free order. It is simple {{but does not}} consider the expected execution time of each node. <b>Load</b> <b>balance</b> Min-Min (LBMM) assigns sub-tasks to the node which requires minimum execution time. The pseudo-code is following: ...|$|E
50|$|Distributed Multi-Link Trunking (DMLT) or Distributed MLT is a {{proprietary}} computer networking protocol designed by Nortel Networks, and {{now owned by}} Avaya, used to <b>load</b> <b>balance</b> the network traffic across connections and also across multiple switches or modules in a chassis. The protocol is an enhancement to the Multi-Link Trunking (MLT) protocol.|$|E
50|$|All {{versions}} of IAS support multi domain setups. Only Windows Server 2003 supports cross forest. While NT4 version includes a Radius Proxy, Windows 2000 didn't {{have such a}} feature. Windows Server 2003 reintroduced the feature and is capable of intelligently proxy, <b>load</b> <b>balance,</b> and tolerate faults from faulty or unreachable back-end servers.|$|E
40|$|Abstract- This paper {{introduces}} a new mechanism for <b>load</b> <b>balancing</b> in a network. <b>Load</b> <b>balancing</b> {{is a computer}} networking method for distributing workload across multiple computing resources such as computers, a computer cluster network links,central processing units or disk drives. <b>Load</b> <b>Balancing</b> is usually provided by dedicated software or hardware, such as a multilayer switch or Domain Name System Sever Process. There are various algorithms to perform <b>load</b> <b>balancing.</b> In this paper we will discuss how to perform <b>load</b> <b>balancing</b> using heaps and discuss the advantage and disadvantages of using this method to perform <b>load</b> <b>balancing...</b>|$|R
40|$|Abstract. In {{this paper}} the {{classification}} {{and development of}} server <b>load</b> <b>balancing</b> technology are briefly described and the <b>load</b> <b>balancing</b> algorithms based on server cluster are compared. A server <b>load</b> <b>balancing</b> technology and algorithm based on multiple parameters are proposed. Finally, the <b>load</b> <b>balancing</b> algorithm is tested. Testing {{results show that the}} method is feasible...|$|R
40|$|Cloud {{computing}} {{requires more}} reliable, efficient and scalable <b>load</b> <b>balancing</b> algorithm to survive. As {{one of the}} main challenges in cloud computing, <b>load</b> <b>balancing</b> facilitate dynamic workload across multiple nodes ensuring that no single node get overloaded. With proper <b>load</b> <b>balancing,</b> resource consumption is maintained at minimum level, enabling scalability, avoiding bottleneck and overprovisioning etc. In this paper, systematic review on existing <b>load</b> <b>balancing</b> techniques currently prevalent in cloud computing was carried out. <b>Load</b> <b>balancing</b> metrics; Response time...|$|R
50|$|CPU based {{solutions}} {{are known to}} be much more flexible, particularly when encoding must be done concurrently in multiple formats, multiple bit rates and resolutions (multi-screen video), and possibly with additional features on container format support, advanced integrated advertising features, etc. CPU based software solution generally makes it much easier to <b>load</b> <b>balance</b> multiple concurrent encoding sessions within the same CPU.|$|E
5000|$|Submaximal {{performance}} testing {{is a way}} of estimating either VO2 max or [...] "aerobic fitness" [...] in sports medicine. The test protocols do not reach the maximum of the respiratory and cardiovascular systems. Submaximal tests are used because maximal tests can be dangerous in individuals who are not considered normal healthy subjects and for elite athletes maximal tests would disrupt training <b>load</b> <b>balance.</b>|$|E
50|$|The current-hogging {{effect can}} be reduced by {{carefully}} matching the characteristics of each paralleled device, or by using other design techniques to balance the electrical load. However, maintaining <b>load</b> <b>balance</b> under extreme conditions may not be straightforward. Devices with an intrinsic positive temperature coefficient (PTC) of electrical resistance are less prone to current hogging, but thermal runaway can still occur because of poor heat sinking or other problems.|$|E
40|$|This paper {{presents}} thorough {{survey of}} work addressing on <b>load</b> <b>balancing</b> in recent computing trends. There are many issues whose solutions {{lead to the}} need for <b>load</b> <b>balancing.</b> The objective of <b>load</b> <b>balancing</b> is to increase the performance of parallel and distributed system by distributing the load among the processors. <b>Load</b> <b>balancing</b> is a major factor for achieving high performance. It affects the execution time significantly by expediting it. Load imbalance is a well-known problem in the areas involving parallelism. However, offering <b>load</b> <b>balancing</b> is a difficult and challenging task. Various algorithms have been proposed for <b>load</b> <b>balancing.</b> These algorithms have distinguished features and each uses different mechanisms. Various <b>Load</b> <b>balancing</b> algorithms like biased sampling, honey bee, active clustering, and join idle queue have been studied...|$|R
40|$|Abstract: Distributed {{processing}} can be {{used for}} solving large computation intensive problems. A distributed system may include parallel supercomputers, networked workstations and PCs. This paper discusses <b>load</b> <b>balancing</b> of a parallel job in a distributed computation environment. The information necessary for <b>load</b> <b>balancing</b> is studied. The software tools that automatically collect the information and perform <b>load</b> <b>balancing</b> is described. Parallel computational fluid dynamics examples are used to demonstrate the effectiveness of the <b>load</b> <b>balancing</b> method. Key-Words: distributed computing, dynamic <b>load</b> <b>balancing.</b> 1...|$|R
5000|$|Gateway <b>Load</b> <b>Balancing</b> Protocol - Cisco {{proprietary}} router redundancy solution providing <b>load</b> <b>balancing</b> ...|$|R
5000|$|The Komprise {{architecture}} {{was built}} from the ground-up to handle today’s scale of data, which {{can easily be}} millions to billions of files across unlimited file servers totaling up to thousands of petabytes. Komprise is a patent-pending distributed fault-tolerant scale-out grid architecture that runs as one or more virtual machines in an environment. The virtual machines <b>load</b> <b>balance</b> and provide redundancy to one another, and scale out on-demand. There are no central bottlenecks or controllers to limit scaling.|$|E
50|$|Prepay phone {{subscribers}} can top-up airtime balances via electronic reloading stations. Reloading Stations or retailers uses a Retailer SIM card in {{topping up}} prepay credits to a subscriber's mobile phone. The functions of this SIM is also {{identical to the}} prepay SIM cards offered commercially but with added reloading/top up functionality. It uses a click-and-browse SIM technology to perform hassle-free transactions. A retailer enters {{the number of the}} mobile phone to be reloaded and then chooses either the denomination of airtime balance or a pre-subscribed prepay offer (e.g. Smart Communications AllText10, AllText20 & some of their prepay broadband offer topups such as FlexiTime, a time-based per minute charging internet offerThe airtime balance reloaded will then be deducted from the retailer's commercial load credits which can also be reloaded from a network's wireless centers (but in some cases in the Philippines, SMART Communications Wireless Shops doesn't cater to such method of reload in favour of Machine Topup or Scratch Cards locally called Prepay Vouchers). The commercial load is the prepay airtime balance used in reloading a prepay SIM card and is a separate <b>load</b> <b>balance</b> from the personal <b>load</b> <b>balance</b> of the retailer.|$|E
50|$|SMTP proxies often {{serve as}} the initial, network-facing layer in an email system, {{processing}} SMTP connections from clients before forwarding data to a second layer of mail servers. SMTP Proxies often implement the first and/or only layer of defence in an inbound anti-spam filtering system, where they can analyze messages using a spam content filter or antivirus program, block or rate limit connections using DNS blacklists and reputation system, and <b>load</b> <b>balance</b> SMTP connections to prevent overloading of mail servers.|$|E
40|$|In {{communication}} networks servers are duplicated for dependability reasons. To utilize them efficiently a controller distributes {{the load}} {{between them in}} a best possible way. In this paper we study dynamic <b>load</b> <b>balancing</b> based on {{the states of the}} servers {{at the start of the}} <b>load</b> <b>balancing</b> interval. The servers are modeled as M/M/ 1 /n queuing systems. The transient loss of this system is found using renewal type of argument. This result is used for dynamic <b>load</b> <b>balancing</b> to minimize the sum of lost tasks over the <b>load</b> <b>balancing</b> interval. The result is compared with ideal <b>load</b> <b>balancing</b> and weighted <b>load</b> <b>balancing</b> of tasks to the two servers. 1...|$|R
40|$|We {{examine the}} {{stability}} of two interfering processors with service rates depending {{on the number of}} users present of each of the classes and subject to static or dynamic <b>load</b> <b>balancing.</b> Such models arise in several contexts, especially in wireless networks, or multiprocessing. In case of static <b>load</b> <b>balancing,</b> we extend existing stability results by deriving Lyapunov functions that are connected to the solutions of one dimensional Poisson equation. We then characterize the optimal static <b>load</b> <b>balancing.</b> The Lyapunov function found for the static <b>load</b> <b>balancing</b> is used to derive the exact stability condition of an interesting class of dynamic <b>load</b> <b>balancing</b> policies. We show that for certain properties of the state-dependent service rates, simple dynamic <b>load</b> <b>balancing</b> schemes improve the stability condition. Keywords: Stability, Dynamic <b>load</b> <b>balancing,</b> State-dependent service rates, Lyapunov functions...|$|R
40|$|Abstract—In {{this paper}} the {{classification}} {{and development of}} server <b>load</b> <b>balancing</b> technology are briefly described and the <b>load</b> <b>balancing</b> algorithms based on server cluster are compared. A server <b>load</b> <b>balancing</b> technology and algorithm based on multiple parameters are proposed. Finally, the <b>load</b> <b>balancing</b> algorithm is tested. Testing {{results show that the}} method is feasible. Keywords- server; load balancing; algorithm; schedule I...|$|R
