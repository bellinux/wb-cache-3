118|159|Public
5|$|Some {{non-standard}} USB devices use the 5V {{power supply}} without {{participating in a}} proper USB network, which negotiates power draw with the host interface. These are usually called USB decorations. Examples include USB-powered keyboard lights, fans, mug coolers and heaters, battery chargers, miniature vacuum cleaners, and even miniature lava lamps. In most cases, these items contain no digital circuitry, and thus are not standard-compliant USB devices. This may cause problems with some computers, such as drawing too much current and damaging circuitry. Prior to the USB Battery Charging Specification, the USB specification required that devices connect in a <b>low-power</b> <b>mode</b> (100mA maximum) and communicate their current requirements to the host, which then permits the device to switch into high-power mode.|$|E
25|$|The later {{evolution}} of the 68000 focused on more modern embedded control applications and on-chip peripherals. The 68EC000 chip and SCM68000 core expanded the address bus to 32 bits, removed the M6800 peripheral bus, and excluded the MOVE from SR instruction from user mode programs. In 1996, Motorola updated the standalone core with fully static circuitry, drawing only 2µW in <b>low-power</b> <b>mode,</b> calling it the MC68SEC000.|$|E
50|$|The status {{register}} contains 4 arithmetic status bits, a global interrupt enable, and 4 bits that disable various clocks to enter <b>low-power</b> <b>mode.</b> When handling an interrupt, the processor saves the {{status register}} on the stack and clears the low-power bits. If the interrupt handler does not modify the saved status register, {{returning from the}} interrupt will then resume the original <b>low-power</b> <b>mode.</b>|$|E
50|$|The D-PHY also {{supports}} a Low-Power Data Transmission (LPDT) mode {{and various other}} <b>low-power</b> <b>modes</b> for use when no data needs to be sent.|$|R
5000|$|DevSleep enables lower power {{consumption}} for always-on devices {{while they are}} in <b>low-power</b> <b>modes</b> such as InstantGo (which {{used to be known}} as Connected Standby).|$|R
40|$|This paper {{proposes a}} {{methodology}} for characterising power {{consumption of the}} fine-grain fabric in reconfigurable architectures. It covers active and inactive power as well as advanced <b>low-power</b> <b>modes.</b> A method based on random number generators is adopted for comparing activity modes. We illustrate our approach using four field-programmable gate arrays (FPGAs) that span a range of process technologies: Virtex-II Pro, Spartan- 3 E, Spartan- 3 AN, and Virtex- 5. We find that, despite improvements through process technology and <b>low-power</b> <b>modes,</b> current devices need further improvements to be sufficiently power efficient for mobile applications. 1...|$|R
5000|$|A few {{miscellaneous}} zero-operand instructions, such as {{return from}} subroutine, and [...] to enter <b>low-power</b> <b>mode.</b>|$|E
50|$|DMR-800D - A satellite-only {{transceiver}} with {{two-way communication}} capabilities and <b>low-power</b> <b>mode</b> that allows use in remote unmanned locations.|$|E
5000|$|Version 2.1 allows {{various other}} improvements, {{including}} [...] "Extended inquiry response" [...] (EIR), which provides more information during the inquiry procedure to allow better filtering of devices before connection; and sniff subrating, which reduces the power consumption in <b>low-power</b> <b>mode.</b>|$|E
50|$|The BOR circuit detects low supply {{voltages}} and resets {{the device}} by triggering a power-on reset (POR) signal when power is applied or removed. The MSP430 MCU’s zero-power BOR circuit is continuously turned on, including in all <b>low-power</b> <b>modes.</b>|$|R
5000|$|One {{to three}} USARTs, one I²C, {{one or two}} SPI, one analog comparator, four {{interrupt}} timers, state configurable timer, wake-up timer, windowed watchdog timer, 6 to 18 single-cycle GPIOs, cyclic redundancy check (CRC) engine, pin switch matrix, four <b>low-power</b> <b>modes,</b> brownout detect.|$|R
40|$|This paper {{proposes a}} {{benchmarking}} methodology for characterising the power {{consumption of the}} fine-grain fabric in reconfigurable architectures. This methodology {{is part of the}} GroundHog 2009 power benchmarking suite. It covers active and inactive power as well as advanced <b>low-power</b> <b>modes.</b> A method based on random number generators is adopted for comparing activity modes. We illustrate our approach using five field-programmable gate arrays (FPGAs) that span a range of process technologies: Xilinx Virtex-II Pro, Spartan- 3 E, Spartan- 3 AN, Virtex- 5, and Silicon Blue iCE 65. We find that, despite improvements through process technology and <b>low-power</b> <b>modes,</b> current devices need further improvements to be sufficiently power efficient for mobile applications. The Silicon Blue device demonstrates that performance can be traded off to achieve lower leakage...|$|R
50|$|The LCD_E {{controller}} {{comes with}} the newer MSP430FR4xxx series microcontrollers and directly drives LCDs up to 448 segments. Supports static, 2-mux, 3-mux, 4-mux, 5-mux, 6-mux, 7-mux, 8-mux (1/3 bias) LCDs. Segment and Common pins may be reprogrammed to available LCD drive pins. This peripheral may be driven in LPM3.5 (RTC running+Main CPU core shutdown <b>low-power</b> <b>mode).</b>|$|E
50|$|The later {{evolution}} of the 68000 focused on more modern embedded control applications and on-chip peripherals. The 68EC000 chip and SCM68000 core expanded the address bus to 32 bits, removed the M6800 peripheral bus, and excluded the MOVE from SR instruction from user mode programs. In 1996, Motorola updated the standalone core with fully static circuitry, drawing only 2 µW in <b>low-power</b> <b>mode,</b> calling it the MC68SEC000.|$|E
50|$|While ASPM {{brings a}} {{reduction}} in power consumption, it can also result in increased latency as the serial bus needs to be 'woken up' from <b>low-power</b> <b>mode,</b> possibly reconfigured and the host-to-device link re-established. This is known as ASPM exit latency and takes up valuable time which can be annoying to the end user if it is too obvious when it occurs. This may be acceptable for mobile computing, however, when battery life is critical.|$|E
50|$|UniPro and its {{underlying}} physical layer {{were designed to}} support low power operation needed for battery-operated systems. These features range from power-efficient high-speed operation to added <b>low-power</b> <b>modes</b> during idle or low bandwidth periods on the network. Actual power behavior is, however, highly dependent on system design choices and interface implementation.|$|R
40|$|The aim of {{this work}} is design the {{software}} for operating panel of data concentrator. The work shows serial communication between human-machine interface and data concentrator. There are designed the communications protocol and graphical interface for device. Consequently is shown design of algorithm of control application. The algorithm is designed in view of battery supply by using of <b>Low-power</b> <b>modes...</b>|$|R
40|$|An {{architectural}} solution to reducing memory energy consumption is {{to adopt a}} multi-bank memory system instead of a monolithic (single-bank) memory system. Some recent multi-bank memory architectures help reduce memory energy by allowing an unused bank to be placed into a <b>low-power</b> operating <b>mode.</b> This paper describes an automatic data migration strategy which dynamically places the arrays with temporal affinity into {{the same set of}} banks. This strategy increases the number of banks which can be put into <b>low-power</b> <b>modes</b> and allows the use of more aggressive energysaving modes. Experiments using several array-dominated applications show the usefulness of data migration and indicate that large energy savings can be achieved with low overhead...|$|R
50|$|This wasted {{power is}} often {{incorrectly}} called standby power, which actually {{refers to the}} power consumed by a power adapter when a device such as a TV, DVD recorder or audio system is in a <b>low-power</b> <b>mode.</b> The power consumed in standby mode is used to maintain system functions such as responding to remote control, or a digital clock, whereas true no-load energy as consumed in a power charger does nothing of use.|$|E
5000|$|The Galaxy S5, {{launched}} in Feb 2014, has a 5inch Super AMOLED screen. The unique {{feature is the}} GS5 also has a new software feature - when the battery is low (10%), it switches to an ultra power-saving mode which changes the screen to monochrome, lowers the brightness and closes all [...] "non essential" [...] features. In this <b>low-power</b> <b>mode,</b> the GS5 can last up to 24 hours in standby on that 10% battery.|$|E
50|$|Many Contiki {{systems are}} {{severely}} power-constrained. Battery operated wireless sensors {{may need to}} provide years of unattended operation and with little means to recharge or replace batteries. Contiki provides a set of mechanisms to reduce the power consumption of systems on which it runs. The default mechanism for attaining low-power operation of the radio is called ContikiMAC. With ContikiMAC, nodes can be running in <b>low-power</b> <b>mode</b> and {{still be able to}} receive and relay radio messages.|$|E
40|$|<b>Low-power</b> <b>modes</b> {{in modern}} {{microprocessors}} rely on low frequencies and low voltages {{to reduce the}} energy budget. Nevertheless, manufacturing induced parameter variations can make SRAM cells unreliable producing hard errors at supply voltages below Vccmin. Recent proposals provide a rather low fault-coverage due to the fault coverage/overhead trade-off. We propose a new fault- tolerant L 1 cache, which combines SRAM and eDRAM cells in L 1 data caches to provide 100...|$|R
50|$|In {{traditional}} <b>low-power</b> <b>modes,</b> SATA link {{still needs}} to remain powered on to allow the device to receive a wake-up command. With DevSlp, rarely used 3.3 V pins of the SATA power plug {{will be used for}} the DevSlp signal instead of providing 3.3 V power. This signal can wake up the drive, and it will allow SATA link to be shut down, reducing further the power consumption.|$|R
5000|$|... dual clock {{inputs and}} on-line clock {{switching}} by selecting different gear values (frequency divider), thus allowing either <b>low-power</b> low-frequency <b>modes</b> or high-performance high-frequency modes ...|$|R
50|$|The WIMM One has a {{transflective}} bi-modal screen. In {{high power}} mode it can reproduce colour images with an 18-bit colour depth (OS limited to 16-bit). In <b>low-power</b> <b>mode</b> it can reproduce 4-bit grayscale images. The WIMM One's screen is {{on all the}} time the device is powered on. This allows information to be readily available to the user without them having to interact with the device. When the device is in low power mode the screen is updated once per minute. When the device is woken into high-power mode the screen refreshes at 60 fps and fully interactive apps can be run.|$|E
50|$|As serial-based PCIe bus devices, such as IEEE1394 (FireWire), {{become less}} active, it is {{possible}} for the computer's power management system to take the opportunity to reduce overall power consumption by placing the link PHY into a <b>low-power</b> <b>mode</b> and instructing other devices on the link to follow suit. This is usually managed by the operating system's power management software or through the BIOS, thus different settings can be configured for laptop battery mode versus running from the battery charger. Low power mode is often achieved by reducing or even stopping the serial bus clock as well as possibly powering down the PHY device itself.|$|E
50|$|In Star Wars: The Force Awakens, set {{approximately}} 30 {{years after}} Return of the Jedi, R2-D2 is {{revealed to be}} kept in storage at the Resistance base on the planet D'Qar, having put himself in a <b>low-power</b> <b>mode</b> after Luke Skywalker's disappearance. He later awakens and reveals Luke's location by combining map data stored in his memory with that of the droid BB-8. He then travels with Rey and Chewbacca to the planet highlighted on the map, where they find Luke in self-imposed exile. In the credits, Kenny Baker was credited as 'R2-D2 consultant,' while Jimmy Vee provided an uncredited portrayal in some scenes.|$|E
40|$|Limiting {{the energy}} {{consumption}} of computers, especially portables, {{is becoming increasingly}} important. Thus, new energy-saving computer components and architectures have been {{and continue to be}} developed. Many architectural features have both high performance and low power modes, with the mode selection under software control. The problem is to minimize energy consumption while not significantly impacting the effective performance. We group the software control issues as follows: transition, load-change, and adaptation. The transition problem is deciding when to switch to <b>low-power,</b> reduced-functionality <b>modes.</b> The loadchange problem is determining how to modify the load on a component so that it can make further use of its <b>low-power</b> <b>modes.</b> The adaptation problem is how to create software that allows components to be used in novel, power-saving ways. We survey implemented and proposed solutions to software energy management issues created by existing and suggested hardware innovation [...] ...|$|R
40|$|Main {{memories}} can {{consume a}} significant portion of overall energy in many data-intensive embedded applications. One way of reducing this energy consumption is banking, that is, dividing available memory space into multiple banks and placing unused (idle) memory banks into <b>low-power</b> operating <b>modes.</b> Prior work investigated code-restructuring- and data-layout-reorganization-based approaches for increasing the energy benefits that could be obtained from a banked memory architecture. This article explores different techniques that can potentially coexist within the same optimization framework for maximizing benefits of <b>low-power</b> operating <b>modes.</b> These techniques include employing nonuniform bank sizes, data migration, data compression, and data replication. By using these techniques, we try to increase the chances for utilizing <b>low-power</b> operating <b>modes</b> in a more effective manner, and achieve further energy savings over what could be achieved by exploiting <b>low-power</b> <b>modes</b> alone. Specifically, nonuniform banking tries to match bank sizes with application-data access patterns. The goal of data migration is to cluster data with similar access patterns in the same set of banks. Data compression reduces the size of the data used by an application, and thus helps reduce the number of memory banks occupied by data. Finally, data replication increases bank idleness by duplicating select read-only data blocks across banks. We formulate each of these techniques as an ILP (integer linear programming) problem, and solve them using a commercial solver. Our experimental analysis using several benchmarks indicates that all the techniques presented in this framework are successful in reducing memory energy consumption. Based on our experience with these techniques, we recommend to compiler writers for banked memories to consider data compression, replication, and migration. © 2008 ACM...|$|R
2500|$|Some SD45 and SD45-2 {{units have}} been {{modified}} by replacing their 20-cylinder engine with the 16-cylinder removed from scrapped SD40-2 units; this was common on Union Pacific and possibly other railroads. In many cases these are {{identified by the}} owner as SD40-3, SD40M-2 or some such. Confusingly, {{what appears to be}} an SD45 is labeled as an SD40-2. [...] Older SD40-2 units used in <b>low-power</b> <b>modes</b> such as yard switching or hump service have been de-turbocharged, resulting in the mechanical equivalent of a SD38-2. Units so modified {{may or may not be}} re-labeled.|$|R
50|$|The WirelessHD {{specification}} {{is based}} on a 7 GHz channel in the 60 GHz Extremely High Frequency radio band. It allows either lightly compressed (proprietary wireless link-aware codec) or uncompressed digital transmission of high-definition video and audio and data signals, essentially making it equivalent of a wireless HDMI. First-generation implementation achieves data rates from 4 Gbit/s, but the core technology allows theoretical data rates as high as 25 Gbit/s (compared to 10.2 Gbit/s for HDMI 1.3 and 21.6 Gbit/s for DisplayPort 1.2), permitting WirelessHD to scale to higher resolutions, color depth, and range. The 1.1 version of the specification increases the maximum data rate to 28 Gbit/s, supports common 3D formats, 4K resolution, WPAN data, <b>low-power</b> <b>mode</b> for portable devices, and HDCP 2.0 content protection.|$|E
50|$|Some {{non-standard}} USB devices use the 5 V {{power supply}} without {{participating in a}} proper USB network, which negotiates power draw with the host interface. These are usually called USB decorations. Examples include USB-powered keyboard lights, fans, mug coolers and heaters, battery chargers, miniature vacuum cleaners, and even miniature lava lamps. In most cases, these items contain no digital circuitry, and thus are not standard compliant USB devices. This may cause problems with some computers, such as drawing too much current and damaging circuitry. Prior to the Battery Charging Specification, the USB specification required that devices connect in a <b>low-power</b> <b>mode</b> (100 mA maximum) and communicate their current requirements to the host, which then permits the device to switch into high-power mode.|$|E
50|$|To handle an {{external}} signal promptly on the Propeller, {{any one of}} the 32 I/O lines is configured as an input. A cog is then configured to wait for a transition (either positive or negative edge) on that input using one of the two counter circuits available to each cog. While waiting for the signal, the cog operates in <b>low-power</b> <b>mode,</b> essentially sleeping. Extending this technique, a Propeller can be set up to respond to eight independent interrupt lines with essentially zero handling delay. Alternately, one line can be used to signal the interrupt, and then additional input lines can be read to determine the nature of the event. The code running in the other cores is not affected by the interrupt handling cog. Unlike a traditional multitasking single-processor interrupt architecture, the signal response timing remains predictable, and indeed using the term interrupt in this context can cause confusion, since this function can be more properly thought of as polling with a zero loop time.|$|E
40|$|Bluetooth enables {{wireless}} communication via ad hoc networks. The basic topology (piconet) {{is a collection}} of slaves controlled by a master. A scatternet is a multihop network of piconets. We anticipate that most scatternets will be composed of only a few piconets. However, even in small scatternets, efficient data flow requires the design of interpiconet scheduling algorithms. Thus, this article presents and evaluates a load adaptive scheduling algorithm tailored for smallscale scatternets. The main advantage of this algorithm is the use of the Bluetooth <b>low-power</b> hold <b>mode,</b> which allows greater flexibility than other <b>low-power</b> <b>modes.</b> A simulation model has been developed in order to evaluate the performance of the algorithm. We show that the results obtained by the model are very close to the analytic results. Then we evaluate the performance of various intrapiconet scheduling algorithms. Finally, we present simulation results regarding interpiconet scheduling, and compare the proposed algorithm to algorithms using the sniff mode...|$|R
30|$|The global {{clock is}} used to {{generate}} synchronous rounds on all nodes. Rounds comprise an on time, when the radio is turned on and communication takes place, and an off time, when the radio is turned off and all system activity is suspended. Although only radio power management is handled, turning the radio off can (depending on the platform) allow the system to enter <b>low-power</b> <b>modes,</b> further reducing energy consumption. For that to happen, the applications must also be synchronized and suspend their activities during off times, {{which is why we}} allow applications to subscribe to round generation events.|$|R
40|$|Our {{increasing}} {{reliance on}} the cloud {{has led to the}} emergence of scale-out workloads. These scale-out workloads are latency-sensitive as they are user driven. In order to meet strict latency constraints, they require massive computing infrastructure, which consume significant amount of energy and contribute to operational costs. This cost is further aggravated by the lack of energy proportionality in servers. As Internet services become even more ubiquitous, scale-out workloads will need increasingly larger cluster installations. As such, we desire an investigation into the energy proportionality and the mechanisms to improve the power consumption of scale-out workloads. Therefore, in this paper, we study the energy proportionality and power consumption of clusters in the context of scale-out workloads. Towards this end, we evaluate the potential of power and resource provisioning to improve the energy proportionality for this class of workloads. Using data serving, web searching and data caching as our representative workloads, we first analyze the component-level power distribution on a cluster. Second, we characterize how these workloads utilize the cluster. Third, we analyze the potential of power provisioning techniques (i. e., active low-power, turbo and idle <b>low-power</b> <b>modes)</b> to improve the energy proportionality of scale-out workloads. We then describe the ability of active <b>low-power</b> <b>modes</b> to provide trade-offs in power and latency. Finally, we compare and contrast power provisioning and resource provisioning techniques. Our study reveals various insights which will help improve the energy proportionality and power consumption of scale-out workloads...|$|R
