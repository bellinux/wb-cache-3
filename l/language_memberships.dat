0|119|Public
50|$|The lemmas {{show that}} <b>language</b> <b>membership</b> of a <b>language</b> in BPP can be {{expressed}} as a Σ2 expression, as follows.|$|R
5000|$|Second is {{that the}} <b>language</b> <b>membership</b> nodes of the BIA+ model do not affect the {{activation}} levels of the word identification system, whereas they play an inhibitory role in the BIA model.|$|R
40|$|This study investigates how bilinguals use sublexical <b>language</b> <b>membership</b> {{information}} {{to speed up}} their word recognition process in different task situations. Norwegian-English bilinguals performed a Norwegian-English language decision task, a mixed English lexical decision task, or a mixed Norwegian lexical decision task. The mixed lexical decision experiments included words from the nontarget language that required a "no" response. The language specificity of the Bokmal (a Norwegian written norm) and English (non) words was varied by including language-specific letters ("smor", "hawk") or bigrams ("dusj", "veal"). Bilinguals were found to use both types of sublexical markedness to facilitate their decisions, language-specific letters leading to larger effects than language-specific bigrams. A cross-experimental comparison indicates {{that the use of}} sublexical language information was strategically dependent on the task at hand and that decisions were based on <b>language</b> <b>membership</b> information derived directly from sublexical (bigram) stimulus characteristics instead of indirectly via their lexical representations. Available models for bilingual word recognition fail to handle the observed marker effects, because all consider <b>language</b> <b>membership</b> as a lexical property only...|$|R
50|$|The {{most widely}} used {{subclass}} of the ω-languages is the set of &omega;-regular languages, which enjoy the useful property of being recognizable by Büchi automata; thus the decision problem of ω-regular <b>language</b> <b>membership</b> is decidable and fairly straightforward to compute.|$|R
2500|$|A German <b>Language</b> <b>Membership</b> Regional Organizing Committee (GLAMROC) {{was founded}} in December 2006 in Cologne. It {{encompasses}} the German-language area of Germany, Luxembourg, Austria, and Switzerland with branches or contacts in 16 cities. In 2015, the GLAMROC is reported as having 200 members in good standing ...|$|R
50|$|The Hellenic New Zealand Congress {{was formed}} in 1994 with the aim to foster better understanding, {{goodwill}} and friendly relations between the Hellenic communities and all New Zealanders through the support and promotion of Greek culture, traditions, history and <b>language.</b> <b>Membership</b> is welcomed from all Greeks and New Zealanders.|$|R
40|$|Introduction The {{concept of}} an {{interactive}} proof protocol for deciding <b>language</b> <b>membership</b> providing zero knowledge to the proof verier was introduced by Goldwasser, Micali and Racko [4]. Informally, an interactive proof protocol is zero-knowledge if interacting with the prover does not provide any additional knowledge to the verier (apart possibly from {{the validity of the}} <b>language</b> <b>membership</b> assertion being proven), regardless of the strategy used by the verier in interacting with the prover. In other words, the zero-knowledge property of an interactive proof system is a property of the prover 1 that is measured against all " verier strategies aimed at extracting additional knowledge from the interaction. The hard task in presenting a formal denition for zero-knowledge is quantifying what constitutes an in knowledge" resulting from an interaction. In the model of Goldwasser, Micali and Racko,...|$|R
5000|$|Historically the IWW {{started to}} organise in Germany during the German revolution.A German <b>Language</b> <b>Membership</b> Regional Organizing Committee (GLAMROC) {{was founded in}} December 2006 in Cologne. It {{encompasses}} the German-language area of Germany, Luxembourg, Austria, and Switzerland with branches or contacts in 16 cities. In 2015, the GLAMROC is reported as having 200 members in good standing ...|$|R
50|$|Under {{the view}} on mild context-sensitivity as a {{property}} of classes of languages, polynomial parsing {{refers to the}} <b>language</b> <b>membership</b> problem.This is the problem to decide, for a fixed language L, whether a given string w belongs to L.The time complexity of this problem is {{measured in terms of}} the length of w; it ignores the question how L is specified.|$|R
40|$|Abstract. This paper mainly {{deals with}} the work of Gilles Pesant on the stretch {{constraint}} and its reformulation as a regular <b>language</b> <b>membership</b> constraint. Some definitions and examples should introduce and explain the notion of a stretch, the stretch constraint and the regular constraint. The consistency algorithm for the regular constraint is explained and illustrated with an additional example. Some comparative remarks on the stretch constraint and the regular constraint are included as well. ...|$|R
40|$|Abstract. We {{describe}} the semantics of CLP(H) : constraint logic programming over hedges. Hedges are finite sequences of unranked terms, built over variadic function symbols and {{three kinds of}} variables: for terms, for hedges, and for function symbols. Constraints involve equations between unranked terms and atoms for regular hedge <b>language</b> <b>membership.</b> We give algebraic semantics of CLP(H) programs, define a sound, terminating, and incomplete constraint solver, and describe some fragments of constraints for which the solver returns {{a complete set of}} solutions. ...|$|R
50|$|Membership was {{organised}} {{as national}} clubs offering evening lectures, libraries, magazines and <b>language</b> courses. <b>Membership</b> in one country's club automatically conferred {{membership of the}} worldwide organisation.|$|R
40|$|We study dynamic {{membership}} {{problems for}} the Dyck languages, the class of strings of properly balanced parentheses. We also study the Dynamic Word problem for the free group. We present deterministic algorithms and data structures which maintain a string under replacements of symbols, insertions, and deletions of symbols, and <b>language</b> <b>membership</b> queries. Updates and queries are handled in polylogarithmic time. We also give both Las Vegas- and Monte Carlo-type randomised algorithms to achieve better running times, and present lower bounds on the complexity for variants of the problems...|$|R
40|$|We present {{several new}} and fairly {{practical}} public-key encryption schemes and prove them secure against adaptive chosen ciphertext attack. One scheme {{is based on}} Paillier’s Decision Composite Residuosity assumption, while another is based in the classical Quadratic Residuosity assumption. The analysis is in the standard cryptographic model, i. e., the security of our schemes does not rely on the Random Oracle model. Moreover, we introduce a general framework that allows one to construct secure encryption schemes in a generic fashion from <b>language</b> <b>membership</b> problems that satisfy certain technical requirements. Our new schemes fit into this framework, as does the Cramer-Shoup scheme based on the Decision Diffie-Hellman assumption...|$|R
40|$|CLP(H) is an {{instantiation}} of {{the general}} constraint logic programming scheme with the constraint domain of hedges. Hedges are finite sequences of unranked terms, built over variadic function symbols and three kinds of variables: for terms, for hedges, and for function symbols. Constraints involve equations between unranked terms and atoms for regular hedge <b>language</b> <b>membership.</b> We study algebraic semantics of CLP(H) programs, define a sound, terminating, and incomplete constraint solver, investigate two fragments of constraints for which the solver returns {{a complete set of}} solutions, and describe classes of programs that generate such constraints. Comment: To appear in Theory and Practice of Logic Programming (TPLP...|$|R
40|$|Abstract. SPKI is a certificate-based {{framework}} for authorisation in distributed systems. The SPKI framework is extended by an iteration construct, essentially Kleene star, to express constraints on delegation chains. Other possible applications, not explored in the paper, include multidomain network routing path constraints. The main decision {{problems for the}} extended language are shown to correspond to regular <b>language</b> <b>membership</b> and containment respectively. To support an efficient decision algorithm in both cases we give a sound and complete inference system for a fragment of the language which is decidable in polynomial time. We finally show {{how to use the}} extended syntax to represent constrained delegation in SPKI. ...|$|R
40|$|In {{this paper}} we {{consider}} the problem of deciding <b>membership</b> in Dyck <b>languages,</b> a fundamental family of context-free languages, comprised of well-balanced strings of parentheses. In this problem we are given a string of length n in the alphabet of parentheses of m types and must decide if it is well-balanced. We consider this problem in the property testing setting, where one {{would like to make}} the decision while querying as few characters of the input as possible. Property testing of strings for Dyck <b>language</b> <b>membership</b> for m= 1, with a number of queries independent of the input size n, was provided in [Alon, Krivelevich, Newman and Szegedy, SICOMP 2001]. Property testing of strings for Dyck <b>language</b> <b>membership</b> for m > 2 was first investigated in [Parnas, Ron and Rubinfeld, RSA 2003]. They showed an upper bound and a lower bound for distinguishing strings belonging to the language from strings that are far (in terms of the Hamming distance) from the language, which are respectively (up to polylogarithmic factors) the 2 / 3 power and the 1 / 11 power of the input size n. Here we improve the power of n in both bounds. For the upper bound, we introduce a recursion technique, that together with a refinement of the methods in the original work provides a test for any power of n larger than 2 / 5. For the lower bound, we introduce a new problem called Truestring Equivalence, which is easily reducible to the 2 -type Dyck language property testing problem. For this new problem, we show a lower bound of n to the power of 1 / 5...|$|R
40|$|Most {{dictionaries}} define homograph {{in terms}} of words taken from the same language, saying nothing about words from two different languages involving partially overlapping alphabets (e. g., the English Latin alphabet and the Russian Cyrillic alphabet). For example, in their Dictionary or Linguistics (Littlefield and Adams, 1969), Mario Pei and Frank Gaynor define homograph as 2 ̆ 2 a word identical in written form with another given word of the same language, but entirely different in origin, sound, and meaning 2 ̆ 2. In contrast, this paper, in considered conformance with the etymology of the word from the Greek, defines an interlingual homograph {{to be one of}} two or more words which are identically written regardless of their meanings, derivation, pronunciation, <b>language</b> <b>membership</b> or alphabet constituency...|$|R
40|$|SPKI is a certificate-based {{framework}} for authorisation in distributed systems. The SPKI framework is extended by an iteration construct, essentially Kleene star, to express constraints on delegation chains. Other possible applications, not explored in the paper, include multidomain network routing path constraints. The main decision {{problems for the}} extended language are shown to correspond to regular <b>language</b> <b>membership</b> and containment respectively. To support an efficient decision algorithm in both cases we give a sound and complete inference system for a fragment of the language which is decidable in polynomial time. We finally show {{how to use the}} extended syntax to represent constrained delegation in SPKI. Revised Selected Papers. Lecture Notes in Computer Science 3364 Springer 2005. ISBN 3 - 540 - 28389 - 7 </p...|$|R
40|$|Part 2 : Parallel and Multi-Core TechnologiesInternational audienceNowadays {{general-purpose}} computing on graphics processing units (GPGPUs) performs computations {{what were}} formerly {{handled by the}} CPU using hundreds of cores on GPUs. It often improves the performance of sequential computation when the running program is well-structured and formulated for massive threading. The CYK algorithm is a well-known algorithm for the context-free <b>language</b> <b>membership</b> test and {{has been used in}} many applications including grammar inferences, compilers and natural language processing. We revisit the CYK algorithm and its structural properties suitable for parallelization. Based on the discovered properties, we then parallelize the algorithm using different combinations of memory types and data allocation schemes using a GPU. We evaluate the algorithm based on real-world data and herein demonstrate the performance improvement compared with CPU-based computations...|$|R
50|$|While {{users are}} not {{required}} to give names, their postal code, profession, education, gender, age, <b>language,</b> and <b>membership</b> in certain groups is requested. This is more than enough information to identify a specific person from the data they submit; deanonymization has been demonstrated using only gender, age, and postal code.|$|R
40|$|We {{survey the}} {{complexity}} {{issues related to}} several algorithmic problems for compressed one- and two-dimensional texts without explicit decompression: pattern-matching, equality-testing, computation of regularities, subsegment extraction, <b>language</b> <b>membership,</b> and solvability of word equations. Our basic problem is one- and two-dimensional pattern-matching together with its variations. For some types of compression the pattern-matching problems are infeasible (NP-hard), for other types they are solvable in polynomial time and we discuss how to reduce the degree of corresponding polynomials. 1 Introduction In the last decade a new stream of research related to data compression has emerged: algorithms on compressed objects. It has been caused by {{the increase in the}} volume of data and the need to store and transmit masses of information in compressed form. The compressed information has to be quickly accessed and processed without explicit decompression. In this paper we consider severa [...] ...|$|R
40|$|How do bilinguals {{recognize}} interlingual homophones? In a gating study, word {{identification and}} <b>language</b> <b>membership</b> decisions by Dutch-English bilinguals were delayed for interlingual homophones relative to monolingual controls. At the same time, participant judgments were sensitive to subphonemic cues. These {{findings suggest that}} auditory lexical access is language nonselective but is sensitive to language-specific characteristics of the input. In 2 cross-modal priming experiments, visual lexical decision times were shortest for monolingual controls preceded by their auditory equivalents. Response times to interlingual homophones accompanied by their corresponding auditory English or Dutch counterparts were also shorter than in unrelated conditions. However, they were longer than in the related monolingual control conditions, providing evidence for online competition of the 2 near-homophonic representations. Experiment 3 suggested that participants used sublexical cues to differentiate the 2 versions of a homophone after language nonselective access...|$|R
50|$|The Greek Byzantine Catholic Church (Greek: Ελληνόρρυθμη Καθολική Εκκλησία, Ellinórrythmi Katholikí Ekklisía) is a sui iuris Eastern Catholic {{particular}} {{church of}} the Catholic Church which uses the Byzantine liturgical rite in the Koine Greek and modern Greek <b>languages.</b> Its <b>membership</b> includes inhabitants of Greece and Turkey, {{as well as the}} Griko people of southern Italy.|$|R
40|$|The {{purpose of}} the present study was to {{determine}} whether <b>language</b> <b>membership</b> could potentially be cued by the acoustic-phonetic detail of word-initial stops and retained all the way through the process of lexical access to aid in language identification. Of particular interest were language-specific differences in CE and CF word-initial stops. Experiment 1 consisted of an interlingual homophone production task. The purpose of this study was to examine how word-initial stop consonants differ in terms of acoustic properties in Canadian English (CE) and Canadian French (CF) interlingual homophones. The analyses from the bilingual speakers in Experiment 1 indicate that bilinguals do produce language-specific differences in CE and CF word-initial stops, and that closure duration, voice onset time, and burst spectral SD may provide cues to language identity in CE and CF stops. Experiment 2 consisted of a Phoneme and Language Categorization task. The purpose of this study was to examine how stop identity cues, such as VOT and closure duration, influence a listener to identify word-initial stop consonants as belonging to Canadian English (CE) or Canadian French (CF). The RTs from the bilingual listeners in this study indicate that bilinguals do perceive language-specific differences in CE and CF word-initial stops, and that voice onset time may provide cues to phoneme and <b>language</b> <b>membership</b> in CE and CF stops. Experiment 3 consisted of a Phonological-Semantic priming task. The purpose of this study was to examine how subphonetic variations, such as changes in the VOT, affect lexical access. The results of Experiment 3 suggest that language-specific cues, such as VOT, affects the composition of the bilingual cohort and that the extent to which English and/or French words are activated is dependent on the language-specific cues present in a word. The findings of this study enhanced our theoretical understanding of lexical structure and lexical access in bilingual speakers. In addition, this study provides further insight on cross-language effects at the subphonetic level...|$|R
40|$|We {{show that}} the trace of an {{exhaustive}} DPLL search {{can be viewed as}} a compilation of the propositional theory. With different constraints imposed or lifted on the DPLL algorithm, this compilation will belong to the language of d-DNNF, FBDD, and OBDD, respectively. These languages are decreasingly succinct, yet increasingly tractable, supporting such polynomial-time queries as model counting and equivalence testing. Our contribution is thus twofold. First, we provide a uniform framework, supported by empirical evaluations, for compiling knowledge into various languages of interest. Second, we show that given a particular variant of DPLL, by identifying the <b>language</b> <b>membership</b> of its traces, one gains a fundamental understanding of the intrinsic complexity and computational power of the search algorithm itself. As interesting examples, we unveil the “hidden power ” of several recent model counters, point to one of their potential limitations, and identify a key limitation of DPLLbased procedures in general. ...|$|R
40|$|Abstract. This paper {{presents}} several {{advances in}} the understanding of dynamic data structures in the bit-probe model: – We improve the lower bound record for dynamic <b>language</b> <b>membership</b> lg n problems to Ω((lg lg n) 2). Surpassing Ω(lg n) was listed as the first open problem in a survey by Miltersen. lg n – We prove a bound of Ω() for maintaining partial sums in Z/ 2 Z. lg lg lg n In the course of the proof, we show how to use the chronogram technique to obtain logarithmic bounds in the cell-probe model. This is an important methodological progress, even though such bounds were obtained recently through a different technique. lg n – We prove a surprising and tight upper bound of O () for prede-lg lg n cessor problems. We use this to obtain the same upper bound for dynamic word and prefix problems in group-free monoids. ...|$|R
40|$|Abstract. We {{prove that}} the quantifier-free {{fragment}} {{of the theory of}} character strings with regular <b>language</b> <b>membership</b> constraints and lin-ear integer constraints over string lengths is decidable. We do that by describing a sound, complete and terminating tableaux calculus for that fragment which uses as oracles a decision procedure for linear integer arithmetic and a number of computable functions over regular expres-sions. A distinguishing feature of this calculus is that it provides a com-pletely algebraic method for solving membership constraints which can be easily integrated into multi-theory SMT solvers. Another is that {{it can be used to}} generate symbolic solutions for such constraints, that is, solved forms that provide simple and compact representations of entire sets of complete solutions. The calculus is part of a larger one providing the theoretical foundations of a high performance theory solver for string constraints implemented in the SMT solver CVC 4. ...|$|R
40|$|This thesis {{considers}} {{the area of}} constraint programming, more specifically, knowledge compilation for the use in decision support. In particular decision support for configuration problems is considered. The main contributions of the thesis are the following: Decision support on unbounded string domains A technique is presented that offers decision support for CSPs that contain variables on unbounded string domains and constraints with regular <b>language</b> <b>membership</b> tests on the string variables. The technique has been implemented and it is empirically shown that the technique can support a real-time response on real-world instances. Comparing decision diagrams We compare acyclic DFAs and MDDs and conclude {{that the difference between}} the two in structure as well as in size is negligible. We compare direct-encoded BDDs with log-encoded BDDs and empirically show that a direct encoded BDD is orders of magnitudes larger than a corresponding log-encoded BDD. Further the use of ZBDD...|$|R
40|$|We study dynamic membershipproblems for the Dyck languages, {{the class}} of strings of {{properly}} balanced parentheses. We also study the Dynamic Word problem for the free group. We present deterministic algorithms and data structures which maintain a string under replacements of symbols, insertions, and deletions of symbols, and <b>language</b> <b>membership</b> queries. Updates and queries are handled in polylogarithmic time. We also give both Las Vegas- and Monte Carlo-type randomised algorithms to achieve better running times, and present lower bounds on the complexity for variants of the problems. Basic Research in Computer Science, Centre of the Danish National Research Foundation. This work was partially supported by the ESPRIT II Basic Research Actions Program of the EC under contract no. 7141 (project ALCOM II). Gudmund Frandsen was partially supported by CCI-Europe. Peter Bro Miltersen was partially supportedby {{a grant from the}} Danish Natural Science Research Council, part of his res [...] ...|$|R
30|$|This {{model is}} {{estimated}} using OLS regression analysis. A higher GDP and population in country j {{were expected to}} lead to greater demand and, consequently. to higher passenger car exports from country i to country j. A higher GDP and population in country i were expected to increase the production capacity. Similarly, a higher quality of logistics in the importing country can also {{be expected to be}} positively related to trade volumes. With respect to the dummy variables, the adjacency of trading nations, a common <b>language,</b> <b>membership</b> of the EEA and direct access to the sea would all also be expected to facilitate trade. Hence, the variables GDPj; POPj; GDPCAPj; LOGISj; CAij; LCij; EEAj and SEAj were all expected to be positively correlated to export quantities. On the other hand, increasing physical distance between trade partners, as well as higher tariffs, were both expected to have a depressing effect on trade quantities. Hence, the variables Dij and Tariffij were expected to be negatively correlated to trade volumes.|$|R
50|$|At first, this {{consisted}} of 70 day guards (Torguud or tunghaut) and 80 night guards (khevtuul). During {{the reign of}} Genghis, {{it seems to have}} been divided into four groups, commanded by the four generals Mukhulai, Chormaqan, Bogorchu and Borokhula. Members of the kheshig outranked almost any other military officers in the Mongol Empire. As it was extremely well paid, the vocation was a popular one, and the numbers of Kheshig grew rapidly, {{to the extent that they}} were only normally on duty for three days in succession. In light of this, the word kheshig refers favor or blessing in the Mongolian <b>language.</b> <b>Membership</b> in the kheshig was regarded as a supreme honor and was an alternative to the necessity of hostage taking for noblemen. In the early days the guard was composed of 1,000 men. By the middle of Genghis Khan's reign, they had expanded to a tumen (10,000 men) commanded by Nayagha, an uncle of Bayan of the Baarin.|$|R
40|$|International audienceFrench-English bilinguals {{performed}} a generalized lexical decision experiment with mixed lists of French and English words and pseudo-words. In Experiment 1, each word/pseudo-word was superimposed {{on the picture}} of the French or UK flag, and flag-word congruency was manipulated. The flag was not informative with respect to either the lexical decision response or the language of the word. Nevertheless, lexical decisions to word stimuli were faster following the congruent flag compared with the incongruent flag, but only for French (L 1) words. Experiment 2 replicated this flag-language congruency effect in a priming paradigm, where the word and pseudo-word targets followed the brief presentation of the flag prime, and this time effects were seen in both languages. We take these findings as evidence for a mechanism that automatically processes linguistic and non-linguistic information concerning the presence or not of a given <b>language.</b> <b>Language</b> <b>membership</b> information can then modulate lexical processing, in line with the architecture of the BIA model, but not the BIA + model...|$|R
40|$|We study Dynamic Membership {{problems}} for the Dyck languages, the class of strings of properly balanced parentheses. We also study the Dynamic Word problem for the free group. We present deterministic algorithms and data structures which maintain a string under replacements of symbols, insertions, and deletions of symbols, and <b>language</b> <b>membership</b> queries. Updates and queries are handled in polylogarithmic time. We also give both Las Vegas- and Monte Carlo-type randomised algorithms to achieve better running times, and present lower bounds on the complexity for variants of the problems. 1 Introduction 1. 1 Dyck Languages The language of properly balanced parentheses contains strings like () and () (()) but not)). The notion of balancedness also makes sense if we add more types of parentheses: ([]) () balances but [) does not. More formally, let A = {a 1,..., a k } and A = {a 1,..., a k } be two disjoint sets of opening and closing symbols, respectively. For exa [...] ...|$|R
40|$|We {{present a}} new string SMT solver, Z 3 str 3, that is faster than its {{competitors}} Z 3 str 2, Norn, CVC 4, S 3, and S 3 P over {{a majority of}} three industrial-strength benchmarks, namely Kaluza, PISA, and IBM AppScan. Z 3 str 3 supports string equations, linear arithmetic over length function, and regular <b>language</b> <b>membership</b> predicate. The key algorithmic innovation behind the efficiency of Z 3 str 3 is a technique we call theory-aware branching, wherein we modify Z 3 's branching heuristic {{to take into account}} the structure of theory literals to compute branching activities. In the traditional DPLL(T) architecture, the structure of theory literals is hidden from the DPLL(T) SAT solver because of the Boolean abstraction constructed over the input theory formula. By contrast, the theory-aware technique presented in this paper exposes the structure of theory literals to the DPLL(T) SAT solver's branching heuristic, thus enabling it to make much smarter decisions during its search than otherwise. As a consequence, Z 3 str 3 has better performance than its competitors. Comment: 8 pages, 2 figures, 3 table...|$|R
40|$|Dutch-English {{participants}} named {{words and}} nonwords having a between-language phonologically inconsistent rime, e. g., GREED and PREED, and control words with a language-typical rime, e. g., GROAN, in a monolingual stimulus list or in a mixed list containing Dutch words. Inconsistent items had longer latencies and more errors than typical {{items in the}} mixed lists {{but not in the}} pure list. The consistency effect depended on word frequency, but not on <b>language</b> <b>membership,</b> lexicality, or instruction. Instruction did affect the relative speed and number of errors in the two languages. The consistency effect is the consequence of the simultaneous activation of two sublexical codes in the bilinguals’ two languages and its size depends on the activation speed of the associated lexical representations (high frequency words versus low frequency words and nonwords) and on the decision criteria which monitor the response conflict at the decision level: The timing for responding (time criterion) in each language depends on the composition of the stimulus list and the likelihood of responses in either language...|$|R
