84|353|Public
50|$|In October 2012, Apple {{announced}} {{the launch of}} the iPhone 5 and iPad Mini, the refresh of the iPod and Mac lines, and the upcoming release of iTunes 11. Slated for release by the end of October, the launch was pushed back to November 29, 2012. This version included tighter integration with iCloud, and a new user interface. Users' libraries now include all media they have stored in their iCloud account, along with any media unique to the device they are using. Media files stored in the cloud don't need to be downloaded before playing, allowing a larger collection to be accessible without increased disk usage. The new user interface includes a refreshed grid view, which replaces Cover Flow as the default <b>layout</b> <b>method.</b> With this change, Cover Flow is no longer available within the application. With the release of this software, the iTunes Store was redesigned to remain consistent with the new interface, and the stores available on iOS devices. The social element Ping was also removed and replaced by increased Twitter and Facebook integration. Other minor changes included disabling the sidebar by default, and slightly altering the icon to match that of the Mac App Store better.|$|E
40|$|We {{propose to}} apply Magnetic Spring Model for {{arranging}} object diagrams of OMT. The main characteristics of our automatic <b>layout</b> <b>method</b> are: efficient space utilization; arranging connected classes nearer to each other; {{and keeping the}} meaning of relationships in the diagram. We carried out experiments to compare the new method and the existing ones. In our <b>layout</b> <b>method,</b> most of the nodes are arranged at the position where users expect to, and users' thinking time of our method is shorter than the existing methods. Our <b>layout</b> <b>method</b> is useful to draw object diagrams by the graphical editor of OMT CASE tools. Keywords graph layout, CASE tool, OMT INTRODUCTION Object-oriented software development by OMT(Object Modeling Technique) [1] has received much attention {{and a number of}} OMT CASE tools have been developed. Most of these CASE tools have graphical editors for drawing diagrams. In these editors, the layout of diagrams had to be arranged by users. Among the various OMT diagrams, th [...] ...|$|E
40|$|An {{interactive}} and iterative {{control panel}} <b>layout</b> <b>method</b> {{based on the}} constraint satisfaction problem (CSP) technique was developed to generate an ergonomically sound panel design. This control panel <b>layout</b> <b>method</b> attempts to incorporate a variety of relevant ergonomic principles and design constraints, and generate an optimal or, at least, a 'satisfactory ' solution through an efficient search algorithm. The problem of seeking an ergonomically sound panel design {{should be viewed as}} a multi-criteria problem, and most of the design objectives should be understood as constraints. Hence, a CSP technique was employed in this study for dealing with the multi-constraints layout problem. The efficient search algorithm using 'preprocess ' and 'Iook [...] ahead ' procedures was developed to handle the vast amount of computational effort. In order to apply the CSP technique to the panel layout procedure, the ergonomic principles such as spatial compatibility, frequency-of-use, importance, functional grouping, and sequence-of-use were formalized as CSP terms. The effectiveness of the proposed panel <b>layout</b> <b>method</b> was evaluated by example problems, and the results clearly showed that the generated layouts properly considered various ergonomic design principles. 1...|$|E
25|$|Many {{different}} quality {{measures have}} been defined for graph drawings, {{in an attempt to}} find objective means of evaluating their aesthetics and usability. In addition to guiding the choice between different <b>layout</b> <b>methods</b> for the same graph, some <b>layout</b> <b>methods</b> attempt to directly optimize these measures.|$|R
40|$|Abstract. The graphael system {{implements}} several classic force-directed <b>layout</b> <b>methods,</b> as well {{as several}} novel <b>layout</b> <b>methods</b> for non-Euclidean geometries, including hyperbolic and spherical. The system can handle large graphs, using multi-scale variations of the force-directed methods. Finally, the system can layout and visualize graphs that evolve though time, using static views, animation, and morphing. The system is written in Java and is available as a downloadable program or as an applet a...|$|R
25|$|Spectral <b>layout</b> <b>methods</b> use as {{coordinates}} the eigenvectors of {{a matrix}} {{such as the}} Laplacian derived from the adjacency matrix of the graph.|$|R
40|$|System Timing. ROM/PROM/EPROM. SRAM. Embedded Memory. Flash Memories. Dynamic Random Access Memory. Low-Power Memory Circuits. Timing and Signal Integrity Analysis. Microprocessor Design Verification. Microprocessor <b>Layout</b> <b>Method.</b> Architecture. ASIC Design. Logic Synthesis for Field Programmable Gate Array (EPGA) Technology. Testability Concepts and DFT. ATPG and BIST. CAD Tools for BIST/DFT and Delay Faults...|$|E
40|$|In this paper, we {{describe}} dierent methods for three dimensional embedding of graphs, {{as well as}} a two dimensional <b>layout</b> <b>method,</b> namely barycentric embedding. In addition, we present a program for automatic recognition of graphs. We finally describe servers for graph drawing routines that can be called from C or C++ programs and applications such as Mosaic...|$|E
40|$|Abstract Performance of {{interactive}} graphics walkthrough systems {{depends on the}} time taken to fetch the required data from the secondary storage to main memory. It has been earlier established that a large frac-tion of this fetch time is spent on seeking the data on the hard disk. In order to reduce this seek time, redun-dant data storage has been proposed in the literature, but the redundancy factors of those layouts are pro-hibitively high. In this paper, we develop a cost model for the seek time of a layout. Based on this cost model, we propose an elegant algorithm that computes a re-dundant data layout with the redundancy factor that is within the user specified bounds, while maximizing {{the performance of the}} system. Unlike most existing methods, our data <b>layout</b> <b>method</b> can work with mod-els with textures. The interactive rendering speed of the walkthrough system was improved by a factor of 2 - 4 by using our data <b>layout</b> <b>method</b> when compared to existing methods with or without redundancy...|$|E
40|$|The {{development}} {{of information systems}} such as Web browsers based on open standards {{is becoming more and}} more important. To clearly formalize and appropriately implement document <b>layout</b> <b>methods</b> for Web browsers, researchers have proposed an approach that uses constraint programming and solving. However, it is still difficult for existing standard constraint solving techniques to handle Web document <b>layout</b> <b>methods.</b> To tackle this problem, we propose a new algorithm called DuPlex that solves hybrid systems of linear constraints and one-way constraints...|$|R
40|$|The graphael system {{implements}} several traditional force-directed <b>layout</b> <b>methods,</b> as well {{as several}} novel <b>layout</b> <b>methods</b> for non-Euclidean geometries, including hyperbolic and spherical. The system can handle large graphs, using multi-scale variations of the force-directed methods. Moreover, graphael can layout and visualize graphs that evolve though time, using static views, animation, and morphing. The implementation includes a powerful interface that allows the user to put together existing algorithms and visualization techniques, and to easily add new ones. The system is written in Java and is available as a downloadable program or as an applet at [URL] graphael. cs. arizona. edu. This work is supported in part by the NSF under grant ACR- 0222920 and ITCDI under grant 003297...|$|R
50|$|Romanization may be {{employed}} to represent Ukrainian text or pronunciation for non-Ukrainian readers, on computer systems that cannot reproduce Cyrillic characters, or for typists who {{are not familiar with}} the Ukrainian keyboard <b>layout.</b> <b>Methods</b> of romanization include transliteration, representing written text, and transcription, representing the spoken word.|$|R
40|$|We {{present a}} system for drawing metro map style {{schematics}} using a gesture-based interface. This work brings together techniques in gesture recognition on touch-sensitive devices with research in schematic layout of networks. The software allows users to create and edit schematic networks, and provides an automated <b>layout</b> <b>method</b> for improving {{the appearance of the}} schematic. A case study using the metro map metaphor to visualize social networks and web site structure is described...|$|E
40|$|Abstract: We {{present a}} method for the layout of {{compound}} directed graphs {{that is based on}} the hierarchical layer <b>layout</b> <b>method.</b> Our method has similarities with the method of Sugiyama and Misue [7] but gives di erent results: It uses a global partitioning into layers and tries to produce placements of nodes such that border rectangles can be drawn around the nodes of each subgraph. The method is implemented in the VCG tool. 1...|$|E
40|$|In {{this paper}} we {{consider}} the three-dimensional layout of hypercube networks. Namely, we study the problem of laying hypercube networks out on the three-dimensional grid with the properties that all nodes are represented as rectangular slices and lie on two {{opposite sides of the}} bounding box of the layout volume. We present both a lower bound and a <b>layout</b> <b>method</b> providing an upper bound on the layout volume of the hypercube network...|$|E
25|$|Symmetry {{display is}} the problem of finding {{symmetry}} groups within a given graph, and finding a drawing that displays as much of the symmetry as possible. Some <b>layout</b> <b>methods</b> automatically lead to symmetric drawings; alternatively, some drawing methods start by finding symmetries in the input graph and using them to construct a drawing.|$|R
25|$|Orthogonal <b>layout</b> <b>methods,</b> {{which allow}} {{the edges of}} the graph to run {{horizontally}} or vertically, parallel to the coordinate axes of the <b>layout.</b> These <b>methods</b> were originally designed for VLSI and PCB layout problems but they have also been adapted for graph drawing. They typically involve a multiphase approach in which an input graph is planarized by replacing crossing points by vertices, a topological embedding of the planarized graph is found, edge orientations are chosen to minimize bends, vertices are placed consistently with these orientations, and finally a layout compaction stage reduces the area of the drawing.|$|R
40|$|Abstract. Graph {{drawing is}} {{increasingly}} considering the embedding and drawing of multivariate or highly attributed graphs. The direct application of classical <b>layout</b> <b>methods</b> is difficult due to limited space and encoding options {{as the number}} of attributes (dimensions) related to nodes of information increases. Data from domains including bioinformatics (metabolic networks, protein-protein interaction) and social science (social networks, phone-call networks, disease transmission networks) consists of relational data which also possess a large number of individual attributes. Here we present our visualisation method featuring a combination of a graph drawing coupled with an adapted parallel coordinates visualisation. This technique makes the relations between multivariate data explicit, while preserving the expressiveness of existing techniques. These <b>layout</b> <b>methods</b> are implemented in an interactive Java-based visualisation tool. Examples of the use of this technique are shown with their application to interactive visual data analysis of a social network data set. ...|$|R
40|$|Abstract. In {{this paper}} we {{consider}} the three-dimensional layout of hypercube networks. Namely, we study the problem of laying hypercube networks out on the three-dimensional grid with the properties that all nodes are represented as rectangular slices and lie on two {{opposite sides of the}} bounding box of the layout volume. We present both a lower bound and a <b>layout</b> <b>method</b> providing an upper bound on the layout volume and the maximum wire-length of the hypercube network...|$|E
40|$|We {{describe}} {{different methods}} for three dimensional embedding of graphs, {{as well as}} a two dimensional <b>layout</b> <b>method,</b> namely barycentric embedding. In addition, we present a program for automatic recognition of graphs. Finally, we describe servers for graph drawing routines that can be called from C or C++ programs and Mosaic. We also describe some of the capabilities of GraphPack, the system that we developed here at Rensselaer. We show several drawings of graphs and digraphs using GraphPack...|$|E
40|$|Abstract—During {{manufacture}} of wire bonding in packaged IC products, {{the breaking of}} bond wires and the peeling of bond pads occur frequently. The result is open-circuit failure in IC products. There were several prior methods reported {{to overcome these problems}} by using additional process flows or special materials. In this paper, a <b>layout</b> <b>method</b> is proposed to improve the bond wire reliability in general CMOS processes. By changing the layout patterns of bond pads, the reliability of bond wires on bond pads can be improved. A set of different layout patterns of bond pads has been drawn and fabricated in a 0. 6 - m single-poly triple-metal CMOS process for investigation by the bond wire reliability tests, the ball shear test and the wire pull test. By im-plementing effective layout patterns on bond pads in packaged IC products, not only the bond wire reliability can be improved, but also the bond pad capacitance can be reduced for high frequency application. The proposed <b>layout</b> <b>method</b> for bond pad design is fully process-compatible to general CMOS processes. Index Terms—Ball shear test, bond pad, bond wire, layout, reli-ability, TAB, wire pull test. I...|$|E
40|$|Graduation date: 1998 Presentation date: 1997 - 12 - 16 Many high-elevation {{stands of}} noble fir in the {{northern}} Oregon Cascades are being actively managed. Forest managers are investigating different activities that will control stand impacts and the subsequent spread of Heterobasidion annosum a rot pathogen on the Warm Springs Indian Reservation. The {{purpose of this study}} was to quantify the relationship of logging production and costs with associated residual stand damage during a commercial thinning operation. Investigated in the study were four ground-based harvesting systems and two different harvest unit <b>layout</b> <b>methods.</b> The harvest systems encompassed a variety of equipment and mechanization levels ranging from mechanized felling and bunching with grapple skidders to manual felling, limbing, and bucking using a rubber-tired skidder equipped with a winch line. In addition, each harvest system was compared using two <b>layout</b> <b>methods.</b> The first method was conventional or logger's choice and the second was a designated method incorporating proven methods for reducing stand damage. Log lengths varied from whole-tree to log-length depending on the harvest system employed. Logging production and costs were determined for the harvesting systems using a combination of detailed and shift level time studies. A stand damage survey conducted simultaneously with production studies determined percent residual stand damage, specific equipment causing damage, and individual scar characteristics. Harvesting costs for the four different systems and <b>layout</b> <b>methods</b> ranged from 67. 77 /MBF- 92. 68 /MBF, with residual stand damage of 20. 12 - 62. 62...|$|R
25|$|Circular <b>layout</b> <b>methods</b> {{place the}} {{vertices}} of the graph on a circle, choosing carefully the ordering of the vertices {{around the circle}} to reduce crossings and place adjacent vertices close to each other. Edges may be drawn either as chords of the circle or as arcs inside or outside of the circle. In some cases, multiple circles may be used.|$|R
40|$|This paper details {{our work}} on {{providing}} 3 -D visualization of program information. We have a project currently underway {{that attempts to}} use 3 -D workstations to provide insight into programs, their structure and their execution, {{through the use of}} a variety of user-definable displays. We provide a variety of different presentation styles and utilize a variety of different <b>layout</b> <b>methods</b> and heuristics...|$|R
40|$|We {{present a}} method for the layout of {{compound}} directed graphs {{that is based on}} the hierarchical layer <b>layout</b> <b>method.</b> Our method has similarities with the method of Sugiyama and Misue (IEEE Trans. Sys., Man, Cybernetics, 21 (4), pp. 876 - 892, 1991) but gives different results: It uses a global partitioning into layers and tries to produce placements of nodes such that border rectangles can be drawn around the nodes of each subgraph. The method is implemented in the VCG tool...|$|E
40|$|Abstract. This paper discribes {{the problem}} of cast-in-situ {{concrete}} hollow slab with tube fillers allocated by single-way, according to the arrangement principle of tube fillers in the cast-in-situ concrete two-way hollow slab with two-way fillers, using nonlinear finite element analysis method, through the research on mechanical behavior influence of the hollow ratio to hollow slab, and gives the corresponding design recommendations. Lastly, this paper summarizes the <b>layout</b> <b>method</b> of tube fillers and reasonable requst of the hollow ratio for guiding design...|$|E
40|$|This thesis explores {{techniques}} for the automated production of schematic dia-grams, in particular {{those in the}} style of metro maps. Metro map style schemat-ics are used across the world, typically to depict public transport networks, and therefore benefit from an innate level of user familiarity not found with most other data visualisation styles. Currently, this style of schematic is used infre-quently due to the difficulties involved with creating an effective layout – there are no software tools to aid with the positioning of nodes and other features, resulting in schematics being produced by hand at great expense of time and effort. Automated schematic layout has been an active area of research for the past decade, and part of our work extends upon an effective current technique – multi-criteria hill climbing. We have implemented additional layout criteria and clustering techniques, as well as performance optimisations to improve the final results. Additionally, we ran a series of layouts whilst varying algorithm parameters in an attempt to identify patterns specific to map characteristics. This layout algorithm has been implemented into a custom-written piece of software running on the Android operating system. The software is targeted at tablet devices, using their touch-sensitive screens with a gesture recognition system to allow users to construct complex schematics using sequences of sim-ple gestures. Following on from this, we present our work on a modified force-directed <b>layout</b> <b>method</b> capable of producing fast, high-quality, angular schematic lay-outs. Our method produces superior results to the previous octilinear force-directed <b>layout</b> <b>method,</b> and is capable of producing results comparable to many of the much slower current approaches. Using our force-directed <b>layout</b> <b>method</b> ii we then implemented a novel mental map preservation technique which aims to preserve node proximity relations during optimisation; we believe this ap-proach provides a number of benefits over the the more common method of preserving absolute node positions. Finally, we performed a user study on our method to test the effect of varying levels of mental map preservation on dia-gram comprehension. ii...|$|E
40|$|We have {{a project}} {{currently}} underway {{that attempts to}} use 3 D workstations to provide insight into programs, their structure and their execution, {{through the use of}} a variety of user-defin-able displays. We offer a variety of different presentation styles and utilize a variety of different <b>layout</b> <b>methods</b> and heuristics. This paper describes the underlying engine that we have devel-oped to support this range of presentations. 1...|$|R
5000|$|Database bits {{are laid}} out in storage in data {{structures}} and groupings that {{can take advantage of}} both known effective algorithms to retrieve and manipulate them and the [...] properties. Typically the storage itself is designed to meet requirements of various areas that extensively utilize storage, including databases. A DBMS in operation always simultaneously utilizes several storage types (e.g., memory, and external storage), with respective <b>layout</b> <b>methods.</b>|$|R
50|$|The same <b>layout</b> and <b>methods</b> can be {{used for}} any {{traditional}} measurements and non-decimal currencies such as the old British £sd system.|$|R
40|$|Our {{visualisation}} of the IEEE InfoVis {{citation network}} {{is based on}} 3 D graph visualisation techniques. To make effective use of the third dimension we use a layered approach, constraining nodes to lie on parallel planes depending on parameters such as year of publication or link degree. Within the parallel planes nodes are arranged using a fast force-directed <b>layout</b> <b>method.</b> A number of clusters representing different research areas were identified using a self organising map approach. Keywords: map infovis contest, graph visualization, self organizing...|$|E
40|$|This paper {{introduces}} a force-directed <b>layout</b> <b>method</b> for creating origin-destination flow maps. Design principles derived from manual cartography and automated graph drawing to increase readability of flow maps and graph layouts {{are taken into}} account. The origin-destination flow maps produced with our algorithm show flows with quadratic Bézier curves that reduce flow-on-flow and flow-on-node overlaps, and avoid sharp or irregular bends in flow lines. A survey of expert cartographers found that flow maps created with our automated method are similar in quality to manually produced flow maps...|$|E
40|$|The {{sustained}} miniaturization of VLSI {{feature size}} presents great challenges to sub-wavelength photolithography and requests usage of many Resolution Enhancement Techniques (RET). The difficulty and feasibility of deploying the RET such as Alternating Phase Shifting Mask (Alt-PSM) depend heavily on circuit layout. In this paper, we propose a Boolean satisfiability (SAT) based library cell <b>layout</b> <b>method</b> that can achieve Alt-PSM compliance and composability in a constructive manner. Compared to previously reported post processing approach, our method {{often leads to}} further cell area efficiency improvement. I...|$|E
40|$|Abstract. We explore various {{techniques}} to incorporate grid-like layout conventions into a force-directed, constraint-based graph layout frame-work. In doing {{so we are}} able to provide high-quality layout—with pre-dominantly axis-aligned edges—that is more flexible than previous grid-like <b>layout</b> <b>methods</b> and which can capture layout conventions in nota-tions such as SBGN (Systems Biology Graphical Notation). Furthermore, the layout is easily able to respect user-defined constraints and adapt to interaction in online systems and diagram editors such as Dunnart...|$|R
40|$|Abstract. SLP {{method is}} {{one kind of}} {{rational}} <b>layout</b> <b>methods</b> with strongly logicality and it stresses that logistics analysis is closely combined with the relationship of functional zones. Through repeated modifications and adjustments {{in the process of}} applying the method, the result has a strong practicality. Combining with the particularity of fresh products logistics, this paper improved the traditional SLP method including basic logistics elements analysis and calculating the area,and proved the new method through a case...|$|R
40|$|This thesis {{focuses on}} the {{optimization}} methods for standard cell layouts. Standard cells are the most fundamental components of VLSI, and provide the building blocks for creating large complex functions in both application-specific and semi-custom domains. Therefore, their performance has significant effects on the final performance of the synthesized VLSI. We propose a minimum-width transistor placement and an intra-cell routing via Boolean satisfiability to optimize {{the area of the}} cell layouts. We also propose a comprehensive cell <b>layout</b> synthesis <b>method</b> and a cell <b>layout</b> de-compaction <b>method</b> for yield optimization. Chapter 2 proposes a minimum-width <b>layout</b> synthesis <b>method</b> for dual CMOS cells via Boolean Satisfiability (SAT). Cell layout synthesis problems, i. e., the transistor placement and the intra-cell routing problems are first transformed into SAT problems by this formulation. The proposed method guarantees to generate minimum-width cell layouts with routability under our <b>layout</b> styles. This <b>method</b> places complementary P and N type transistors individually during transistor placement, and can generate smaller width layout compared with the case of pairing the complementary P and N type transistors. The experimental result...|$|R
