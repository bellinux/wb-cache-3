191|124|Public
25|$|ZetaLisp, also termed <b>Lisp</b> <b>Machine</b> Lisp – {{used on the}} Lisp machines, direct {{descendant}} of Maclisp. ZetaLisp had a big influence on Common Lisp.|$|E
25|$|Common Lisp is a {{successor}} to MacLisp. The primary influences were <b>Lisp</b> <b>Machine</b> Lisp, MacLisp, NIL, S-1 Lisp, Spice Lisp, and Scheme. It has many {{of the features of}} <b>Lisp</b> <b>Machine</b> Lisp (a large Lisp dialect used to program Lisp Machines), but was designed to be efficiently implementable on any personal computer or workstation. Common Lisp has a large language standard including many built-in data types, functions, macros and other language elements, as well as an object system (Common Lisp Object System). Common Lisp also borrowed certain features from Scheme such as lexical scoping and lexical closures.|$|E
25|$|In {{the early}} 1980s, AI {{research}} was revived by the commercial success of expert systems, {{a form of}} AI program that simulated the knowledge and analytical skills of human experts. By 1985 the market for AI had reached over a billion dollars. At the same time, Japan's fifth generation computer project inspired the U.S and British governments to restore funding for academic research. However, beginning {{with the collapse of}} the <b>Lisp</b> <b>Machine</b> market in 1987, AI once again fell into disrepute, and a second, longer-lasting hiatus began.|$|E
50|$|The Bitsavers' PDF Document Archive has PDF {{versions}} of the extensive documentation for the Symbolics <b>Lisp</b> <b>Machines,</b> the TI Explorer and MicroExplorer <b>Lisp</b> <b>Machines</b> and the Xerox Interlisp-D <b>Lisp</b> <b>Machines.</b>|$|R
50|$|<b>Lisp</b> <b>Machines,</b> Inc. was {{a company}} formed in 1979 by Richard Greenblatt of MIT's Artificial Intelligence Laboratory to build <b>Lisp</b> <b>machines.</b> It {{was based in}} Cambridge, Massachusetts.|$|R
50|$|Symbolics was a spinoff {{from the}} MIT AI Lab, {{one of two}} {{companies}} to be founded by AI Lab staffers and associated hackers {{for the purpose of}} manufacturing <b>Lisp</b> <b>machines.</b> The other was <b>Lisp</b> <b>Machines,</b> Inc., although Symbolics attracted most of the hackers, and more funding.|$|R
25|$|As {{a hacker}} in MIT's AI laboratory, Stallman worked on {{software}} {{projects such as}} TECO, Emacs for ITS, and the <b>Lisp</b> <b>machine</b> operating system (the CONS of 1974–1976 and the CADR of 1977–1979—this latter unit was commercialized by Symbolics and LMI starting around 1980). He would become an ardent critic of restricted computer access in the lab, which {{at that time was}} funded primarily by the Defense Advanced Research Projects Agency. When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20% of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.|$|E
5000|$|<b>Lisp</b> <b>Machine</b> Lisp [...] - [...] MIT <b>Lisp</b> <b>machine</b> lisp {{developed}} in a joint venture Racal-Norsk (ZetaLisp).|$|E
50|$|The {{most popular}} {{application}} {{program for the}} Symbolics <b>Lisp</b> <b>Machine</b> was the ICAD computer-aided engineering system. One of the first networked multi-player video games, a version of Spacewar, was developed for the Symbolics <b>Lisp</b> <b>Machine</b> in 1983. Electronic CAD software on the Symbolics <b>Lisp</b> <b>Machine</b> was used to develop the first implementation of the Hewlett-Packard Precision Architecture.|$|E
5000|$|Richard Greenblatt: Programmer {{and early}} {{designer}} of <b>LISP</b> <b>machines</b> ...|$|R
5000|$|... #Subtitle level 3: Developments of <b>Lisp</b> <b>machines</b> {{outside the}} US ...|$|R
50|$|The <b>Lisp</b> <b>machines</b> {{developed}} at MIT {{in the early}} 1970s pioneered some {{of the principles of}} the workstation computer, as they were high-performance, networked, single-user systems intended for heavily interactive use. <b>Lisp</b> <b>Machines</b> were commercialized beginning 1980 by companies like Symbolics, <b>Lisp</b> <b>Machines,</b> Texas Instruments (the TI Explorer) and Xerox (the Interlisp-D workstations). The first computer designed for single-users, with high-resolution graphics facilities (and so a workstation in the modern sense of the term) was the Xerox Alto {{developed at}} Xerox PARC in 1973. Other early workstations include the Terak 8510/a (1977), Three Rivers PERQ (1979) and the later Xerox Star (1981).|$|R
5000|$|All the {{subsequent}} computers built at Xerox PARC followed a general blueprint called [...] "Wildflower", written by Lampson, and this included the D-Series Machines, the [...] "Dolphin" [...] (used in the Xerox 1100 <b>LISP</b> <b>machine),</b> [...] "Dandelion" [...] (used in the Xerox 8010 {{model of the}} Xerox Star and Xerox 1108 <b>LISP</b> <b>machine),</b> [...] "Dandetiger" [...] (used in the Xerox 1109 <b>LISP</b> <b>machine),</b> [...] "Dorado" [...] (used in the Xerox 1132 <b>LISP</b> <b>machine),</b> [...] "Daybreak" [...] Xerox 6085, and [...] "Dragon" [...] (a 4-processor 6085 {{with one of the}} first snoopy caches, though never released to production).|$|E
50|$|Mike McMahon {{designed}} and implemented the New Window System for the MIT <b>Lisp</b> <b>Machine</b> in 1980 together with Howard Cannon. The window system was implemented using the Flavors object-oriented extension to <b>Lisp</b> <b>Machine</b> Lisp.|$|E
50|$|In 1974, Knight {{designed}} and implemented the prototype {{version of the}} MIT <b>Lisp</b> <b>Machine</b> processor, with the production version following in 1976. The <b>Lisp</b> <b>Machine</b> was a microprogrammed machine, tuned for high-performance emulation of other instruction sets. The design of the <b>Lisp</b> <b>Machine</b> was directly implemented by both Symbolics and LMI and was the basis of all of their computers. Texas Instruments implemented surface mount and single-chip versions of the architecture in 1983 and 1987, respectively.|$|E
5000|$|Genera only runs on Symbolics <b>Lisp</b> <b>Machines</b> or the Open Genera emulator.|$|R
50|$|<b>Lisp</b> <b>machines</b> (1970s and 1980s) were a {{well-known}} and influential group of HLLCAs.|$|R
50|$|In the mid-1980s, Integrated Inference Machines (IIM) built prototypes of <b>Lisp</b> <b>machines</b> named Inferstar.|$|R
50|$|Symbolics' initial product, the LM-2 (introduced in 1981), was a repackaged {{version of}} the MIT CADR <b>Lisp</b> <b>machine</b> design. The {{operating}} system and software development environment, over 500,000 lines, was written in Lisp from the microcode up, based on MIT's <b>Lisp</b> <b>Machine</b> Lisp.|$|E
5000|$|... #Subtitle level 3: Commercializing MIT <b>Lisp</b> <b>machine</b> {{technology}} ...|$|E
50|$|Zmacs also {{supports}} buffers and modes. Zmacs also uses the window {{system of the}} <b>Lisp</b> <b>Machine</b> with support for mouse and windows. Zmacs supports unlimited backup of files, since the file system of the <b>Lisp</b> <b>Machine</b> supports file versions. It is not compatible with GNU Emacs and its Emacs Lisp.|$|E
5000|$|In 1987, {{three years}} after Minsky and Schank's prediction, the market for {{specialized}} AI hardware collapsed. Workstations by companies like Sun Microsystems offered a powerful alternative to <b>LISP</b> <b>machines</b> and companies like Lucid offered a LISP environment for this new class of workstations. The performance of these general workstations became an increasingly difficult challenge for <b>LISP</b> <b>Machines.</b> Companies like Lucid and Franz Lisp offered increasingly more powerful versions of LISP. For example, benchmarks were published showing workstations maintaining a performance advantage over <b>LISP</b> <b>machines.</b> [...] Later desktop computers built by Apple and IBM would also offer a simpler and more popular architecture to run LISP applications on. By 1987 they had become {{more powerful than the}} more expensive <b>Lisp</b> <b>machines.</b> The desktop computers had rule-based engines such as CLIPS available. These alternatives left consumers with no reason to buy an expensive machine specialized for running LISP. An entire industry worth half a billion dollars was replaced in a single year.|$|R
2500|$|ObjectLisp or Object Lisp, used by <b>Lisp</b> <b>Machines</b> Incorporated {{and early}} {{versions}} of Macintosh Common Lisp ...|$|R
5000|$|The user {{interface}} {{can be used}} locally (on <b>Lisp</b> <b>Machines</b> and MacIvories) and remotely (using X11) ...|$|R
5000|$|The Texas Instruments Explorer is {{a family}} of <b>Lisp</b> <b>Machine</b> {{computers}}. These computers were sold by Texas Instruments in the 1980s. The Explorer {{is based on a}} design from Lisp Machines Incorporated, which is based on the MIT <b>Lisp</b> <b>Machine.</b> The Explorer was used for development and deployment of artificial-intelligence software ...|$|E
50|$|<b>Lisp</b> <b>Machine</b> Lisp itself {{branched}} {{into three}} dialects. Symbolics named their variant ZetaLisp. Lisp Machines, Inc. and later Texas Instruments (with the TI Explorer) would {{share a common}} code base, but their dialect of <b>Lisp</b> <b>Machine</b> Lisp would differ from the version maintained at the MIT AI Lab by Richard Stallman and others.|$|E
50|$|Several {{attempts}} to write open-source emulators for various Lisp Machines have been made: CADR Emulation, Symbolics L <b>Lisp</b> <b>Machine</b> Emulation, the E3 Project (TI Explorer II Emulation), Meroko (TI Explorer I), and Nevermore (TI Explorer I). On 3 October 2005, the MIT released the CADR <b>Lisp</b> <b>Machine</b> source code as open source.|$|E
50|$|A machine {{translation}} system {{developed at the}} University of Texas and at Siemens which ran on <b>Lisp</b> <b>Machines.</b>|$|R
50|$|He is one one {{founders of}} Symbolics Inc., a company {{developing}} and selling <b>Lisp</b> <b>Machines</b> in the 1980s and 1990s.|$|R
50|$|Symbolics, a {{maker of}} the <b>Lisp</b> <b>machines,</b> {{licensed}} the MIT Chaosnet hardware and software implementation from the CADR computer design.|$|R
50|$|Moon {{was one of}} the {{original}} members of Greenblatt's project to develop the MIT <b>Lisp</b> <b>Machine,</b> beginning in 1974. In 1976, with Steele, he wrote the first (TECO-based) version of the Emacs text editor, and in 1978 with Daniel Weinreb he coauthored the manual for the <b>Lisp</b> <b>Machine,</b> known as the chine nual. With Howard Cannon, he developed Flavors, a system for doing object-oriented programming with multiple inheritance on the Lisp Machine.As part of the <b>Lisp</b> <b>Machine</b> project, he also invented ephemeral garbage collection, an advance that led to the widespread use of continuously-operating garbage collection systems in Lisp more generally.|$|E
50|$|The {{fall of the}} <b>Lisp</b> <b>machine</b> {{market and}} the failure of the fifth {{generation}} computers were cases of expensive advanced products being overtaken by simpler and cheaper alternatives. This fits the definition of a low-end disruptive technology, with the <b>Lisp</b> <b>machine</b> makers being marginalized. Expert systems were carried over to the new desktop computers by for instance CLIPS, so the fall of the <b>Lisp</b> <b>machine</b> market and the fall of expert systems are strictly speaking two separate events. Still, the failure to adapt to such a change in the outside computing milieu is cited as one reason for the 1980s AI winter.|$|E
5000|$|... an {{interpreter}} and a native code compiler for <b>Lisp</b> <b>Machine</b> Lisp ...|$|E
50|$|Genera is a {{commercial}} operating system and development environment for <b>Lisp</b> <b>machines</b> developed by Symbolics. It {{is essentially a}} fork of an earlier operating system originating on the MIT AI Lab's <b>Lisp</b> <b>machines</b> which Symbolics had used in common with LMI and Texas Instruments. Genera is also sold by Symbolics as Open Genera, which runs Genera on computers based on an Alpha processor using Tru64 UNIX. It is available as proprietary software.|$|R
50|$|EINE and ZWEI are two {{discontinued}} Emacs-like text editors {{developed by}} Daniel Weinreb and Mike McMahon for <b>Lisp</b> <b>machines</b> in the 1970s and 1980s.|$|R
50|$|Symbolics Inc's {{operating}} systems, Genera and OpenGenera, {{were twice}} orphaned, {{as they were}} ported from <b>LISP</b> <b>machines</b> to computers using the Alpha 64-bit CPU.|$|R
