846|1496|Public
5000|$|A {{multilayered}} architecture can {{be considered}} to be a systematic mechanism for implementing the Law of Demeter in a software system.In a <b>layered</b> <b>architecture,</b> code within each layer can only make calls to code within the layer and code within the next layer down."Layer skipping" [...] would violate the <b>layered</b> <b>architecture.</b>|$|E
50|$|Bluetooth Mesh has a <b>layered</b> <b>architecture,</b> with {{multiple}} layers as below.|$|E
50|$|The onboard mission {{computer}} was a Gespac-based MC68030 processor running Proteus, a proprietary real-time kernel. The mission-specific application software {{was written in}} C++ with a <b>layered</b> <b>architecture</b> and subsumption, cooperation, and supervision hierarchy.|$|E
40|$|The {{performance}} of a multilayer artificial neural network is very much depends on {{the architecture of the}} hidden layers. Therefore, modeling of hidden <b>layer</b> <b>architecture</b> has become a research challenge. At present most of the models of hidden <b>layer</b> <b>architecture</b> have been confined to neural networks with one hidden layer. However, this approach {{may not be the most}} appropriate solution for the given task. In this research we have come up with an approach to model hidden <b>layer</b> <b>architecture</b> with arbitrary number of layers and neurons. An approach has been presented to trim the hidden <b>layer</b> <b>architecture</b> during the training cycle while meets the pre-defined error rate. The experiments show that new theory can train artificial neural networks with lesser training time through a simpler architecture that maintains the same error rate as the Back propagation...|$|R
40|$|Abstract- In {{this paper}} we {{described}} four <b>layer</b> <b>architecture</b> of Grid Computing System, analyzes security requirements and problems existing in Grid Computing System. This paper presents a new approch of five <b>layer</b> security <b>architecture</b> of Grid Computing System, defines {{a new set}} of security policies & gives the representation...|$|R
40|$|Mobile adhoc {{networks}} (MANETs) {{are prone}} to many security attacks and risks due to its characteristics such as mobility, lack of infrastructure and dynamic topology changes. The <b>layered</b> <b>architectures</b> {{are not in a}} position to adjust with the dynamics of the current wireless generation networks. Cross <b>layer</b> <b>architecture</b> will provide efficient solutions by providing interactions between different layers. In MANETs the cross layer techniques provide better solutions. In this paper, we try to study the existing cross layer techniques and propose a new cross layer based security in Mobile ad hoc networks...|$|R
50|$|While these {{approaches}} sound positive, lasagna code is often rather derogatory term, applied for unnecessary excessive, insufficiently documented or otherwise poorly designed <b>layered</b> <b>architecture.</b> For instance, having mostly one implementation per interface {{may indicate that}} interfaces are used the wrong way.|$|E
50|$|Package {{diagrams}} can use {{packages that}} represent the different layers of a software system to illustrate the <b>layered</b> <b>architecture</b> of a software system. The dependencies between these packages can be adorned with labels / stereotypes to indicate the communication mechanism between the layers.|$|E
50|$|<b>Layered</b> <b>architecture</b> {{partitions}} {{the concerns}} of the application into stacked groups (layers).It is a technique used in designing computer software, hardware, and communications in which system or network components are isolated in layers so that changes can be made in one layer without affecting the others.|$|E
40|$|Abstract—Ensuring network {{security}} in Wireless Sensor Networks (WSNs) indeed is critical. Due to the data-centric multi-hop communication in WSNs, an essential {{consideration in the}} security solutions for WSNs is to ensure security features at the link layer. The link layer security can be implemented in hardware or in software. The existing software based link <b>layer</b> security <b>architectures</b> do not offer configurable security. In this paper, we propose a novel design of link <b>layer</b> security <b>architecture</b> for WSNs. The principal characteristics of the design we propose, is the flexible and configurable architecture, {{with respect to the}} actual security attributes demanded by the application. Our design is {{based on the premise that}} when the link <b>layer</b> <b>architecture</b> is implemented in software, flexibility and seamless integration of the application code become the prime advantages. We also emphasize that with the increasing computational, storage and bandwidth resources of the sensor nodes, we can get good performance and efficiency from software implementation of link <b>layer</b> <b>architecture</b> also...|$|R
40|$|This paper {{describes}} {{the development of}} 3 buffer <b>layer</b> <b>architectures</b> with good biaxial textures on rolled-Ni substrates using vacuum processing techniques. The techniques include pulsed laser ablation, e-beam evaporation, dc and rf magnetron sputtering. The first buffer <b>layer</b> <b>architecture</b> consists of an epitaxial laminate of Ag/Pd(Pt) /Ni. The second buffer layer consists of an epitaxial laminate of CeO{sub 2 }/Pd/Ni. The third alternative buffer <b>layer</b> <b>architecture</b> consists of an epitaxial laminate of YSZ/CeO{sub 2 }/Ni. The cube (100) texture in the Ni was produced by cold rolling followed by recrystallization. Crystallographic orientations of the Pd, Ag, CeO{sub 2 }, and YSZ films grown were all (100). We recently demonstrated a critical- current density of 0. 73 x 10 {sup 6 } A/cm{sup 2 } at 77 K and zero field on 1. 4 {mu}m thick YBa{sub 2 }Cu{sub 3 }O{sub 7 -y} (YBCO) film. This film was deposited by pulsed laser ablation on a YBCO/YSZ/CeO{sub 2 }/Ni substrate...|$|R
50|$|<b>Layered</b> <b>architectures</b> - {{in which}} {{decision}} making is realized via various software layers, {{each of which is}} more or less explicitly reasoning about the environment at different levels of abstraction.|$|R
50|$|UniPro's <b>layered</b> <b>architecture</b> {{also allows}} it to support {{multiple}} physical layer (L1, PHY) technologies even within a single network. This is analogous to TCP/IP which can run {{on a wide range}} of lower-layer technologies. In the case of UniPro, two PHY technologies are supported for off-chip use.|$|E
50|$|IFS {{focuses on}} four core {{strategic}} processes: service & asset management, manufacturing, supply chain and projects. IFS develops, supplies, and implements IFS Applications™, a component-based extended enterprise software suite built on SOA technology and <b>layered</b> <b>architecture.</b> IFS provides software solutions that primarily focus on manufacturing, project-based and asset-intensive industries.|$|E
50|$|The Open Semantic Framework (OSF) is an {{integrated}} software stack using semantic technologies for knowledge management. It has a <b>layered</b> <b>architecture</b> that combines existing {{open source software}} with additional open source components developed specifically to provide a complete Web application framework. OSF is made available under the Apache 2 license.|$|E
40|$|Traditional <b>layered</b> <b>architectures</b> {{used for}} {{wireless}} networks pose drawbacks {{in terms of}} performance and efficiency. The constrained resources of wireless sensor nodes such as memory, computational power, and energy motivate to modify traditional <b>layered</b> <b>architectures.</b> In this paper we present a cross layer management plane for low power wireless sensor networks which enables sensor nodes to exploit cross layer information for efficient resource utilization. A set of potential well known parameters {{to be used to}} benefit from the synergy across layers is presented. The feasibility of the concept and the advantages drawn from using cross layer information is shown by simulation...|$|R
40|$|Abstract. <b>Layered</b> <b>architectures</b> are {{a proven}} {{principle}} {{for the design}} of software systems and components. The paper introduces a <b>layered</b> reference <b>architecture</b> for software agents which assigns each agent property to select layers. It demonstrates how the same reference architecture provides a framework for a dependability model that locates the sources of failures and the ensuing error handling with a specific layer, thus integrating dependability directly into the design of agents. ...|$|R
40|$|Nowadays, most {{information}} systems are developing based on <b>layered</b> <b>architectures.</b> Connecting to database {{is the most}} important part of <b>layered</b> <b>architectures</b> and there are many connections to database. So, the performance of {{information systems}} can be improved by reducing the number of such connections. For this purpose, new patterns have proposed; also solution domain and structure of provided patterns have been explained by practical examples. Finally, reusability and performance of provided patterns have been examined and the results approve the productivity of provided patterns in comparison with previous methods. As a future work, a standard and reusable category of patterns will be reached by developing and categorizing other new patterns...|$|R
50|$|CYCLADES used a <b>layered</b> <b>architecture,</b> {{as did the}} Internet. The basic packet {{transmission}} like function, named CIGALE, was novel; however, it provided an unreliable datagram service (the word was coined by Louis Pouzin by combining data and telegram). Since the packet switches {{no longer had to}} ensure correct delivery of data, this greatly simplified their design.|$|E
50|$|In {{computer}} networking, {{the transport}} layer is a conceptual division of methods in the <b>layered</b> <b>architecture</b> of protocols {{in the network}} stack in the Internet Protocol Suite and the Open Systems Interconnection (OSI). The protocols of the layer provide host-to-host communication services for applications. It provides services such as connection-oriented data stream support, reliability, flow control, and multiplexing.|$|E
5000|$|Charles William Bachman III (December 11, 1924 [...] - [...] July 13, 2017) was an American {{computer}} scientist, {{who spent}} his entire career as an industrial researcher, developer, and manager rather than in academia. He was particularly known {{for his work in}} the early development of database management systems.His techniques of <b>layered</b> <b>architecture</b> include his namesake Bachman diagrams.|$|E
50|$|Phase IV {{implemented}} an 8 <b>layer</b> <b>architecture</b> {{similar to}} the OSI (7 layer) model especially at the lower levels. Since the OSI standards were not yet fully developed at the time, many of the Phase IV protocols remained proprietary.|$|R
2500|$|K. Saleem, N. Fisal, M. A. Baharudin, A. A. Ahmed, S. Hafizah and S. Kamilah, [...] "Ant colony {{inspired}} self-optimized {{routing protocol}} based on cross <b>layer</b> <b>architecture</b> for wireless sensor networks", WSEAS Trans. Commun., vol. 9, no. 10, pp.669–678, 2010.|$|R
40|$|Abstract — Due to {{the need}} of {{compatibility}} between software and hardware modules of a LCD TV system, we propose a software design with <b>layer</b> <b>architecture</b> for a LCD TV system. With the <b>layer</b> <b>architecture,</b> we need only modify the device driver layer for the different chip sets and the user interface layer for the different operating systems. With this advantage we can shorten the product design cycle for the different chip sets by the reusing most of the previous software modules. To reduce the design complexity of the LCD TV system, we adopt the mechanism of the state/event matrix and message queue instead of the complicated state machine design to control the TV system operation. ...|$|R
50|$|Transitions enable {{communication}} systems {{to adapt to}} changing conditions during runtime. This change in conditions can, for example, be a rapid increase in the load on a certain service that may be caused, e.g., by large gatherings of people with mobile devices. A transition often impacts multiple mechanisms at different communication layers of a <b>layered</b> <b>architecture.</b>|$|E
50|$|Empress {{supports}} many application programming interfaces {{in several}} programming languages. The C programming language {{has the most}} APIs including the low-level kernel MR Routines, Embedded SQL, MSCALL and ODBC. There are also APIs for C++ and JAVA. The <b>layered</b> <b>architecture</b> design provides levels of system optimization for application development. Applications developed using these APIs may be run in standalone and/or server modes.|$|E
50|$|The main {{difference}} between the available multi-model databases is related to their architectures. Multi-model databases can support different models either within the engine or via different layers {{on top of the}} engine. Some products may provide an engine which supports documents and graphs while others provide layers on top of a key-key store. With a <b>layered</b> <b>architecture,</b> each data model is provided via its own component.|$|E
40|$|International audienceTo improve Proton Exchange Membrane Fuel Cells (PEMFC), it is {{necessary}} to understand the phenomena occurring in operating conditions. The objective {{of this study is to}} determine how carbon support architecture can impact PEMFC performances, particularly diffusive limitations. In this context, as they have a controllable texture, carbon aerogels were used as catalyst supports in PEM fuel cell cathodes. Three carbon aerogels with different morphologies were synthesized. Fuel cell measurements show that the carbon support architecture has a significant impact on diffusive limitations. Moreover, they confirm that Nafion® loading must be optimized in order to preserve the catalytic <b>layers</b> <b>architecture.</b> This work finally highlights the impact of the catalytic <b>layers</b> <b>architecture</b> on the PEMFC performances...|$|R
40|$|Openness in {{telecommunication}} networks {{is a major}} challenge the telecom industry is experiencing. <b>Layered</b> <b>architectures,</b> the introduction of Intelligent Networks both in fixed and mobile networks, standardisation of protocols for interfaces, programmable networks, open network APIs are some approaches in this direction...|$|R
40|$|Abstract. In this study, the {{implementation}} of a previously proposed robotic replanning framework is presented. The proposed framework integrates a high level replanning paradigm into a three <b>layer</b> robotic <b>architecture.</b> There has {{been a great deal of}} studies on managing unexpected events at lower two levels of three <b>layer</b> <b>architectures</b> but doing replanning at highest level still needs investigation. Supporting replanning with real-time vision feedback from working environment and integrating a learning mechanism as a basis increases the success ratio. ...|$|R
50|$|While in {{operating}} systems layers are a convenience - {{a way to}} achieve modularity - in networks layers are a necessity, since in networks there is distributed shared state of different scopes. Layers are the tool for isolating distributed shared state of different scopes, nothing else is required. The current Internet architecture uses a <b>layered</b> <b>architecture</b> with a ﬁxed number of layers, every layer having the responsibility of a different function, as depicted in Figure 4 (functional layering).|$|E
5000|$|Smart {{objects are}} small {{computers}} (microcontrollers) with a sensor or actuator and a communication device, embedded in {{objects such as}} thermostats, car engines, light switches, and industrial machinery. Smart objects enable {{a wide range of}} applications in areas such as home automation, building automation, factory monitoring, smart cities, structural health management systems, smart grid and energy management, and transportation.The IPSO Alliance promotes the “Internet of Things”. The <b>layered</b> <b>architecture</b> of IP provides a high level of flexibility, innovation and accelerates the adoption of network-connected devices, {{often referred to as the}} “Internet of Things.” ...|$|E
5000|$|OLE and OLE Automation {{are more}} {{advanced}} than DDE, but {{have proven to be}} bulky and difficult to code. OLE is far more sophisticated and capable than DDE because it is built on top of Microsoft's Component Object Model, but also suffers from COM's problems of a higher performance penalty and a much steeper learning curve. COM that works between networked machines is known as DCOM (Distributed COM)[...]NET Remoting provides a <b>layered</b> <b>architecture</b> for interprocess communication in the [...]NET Framework. However, legacy DDE is still used in several places inside Windows, e.g. for Shell file associations and for the copy, cut and paste functions.|$|E
40|$|Organizing a {{software}} <b>architecture</b> into <b>layers</b> {{has been one}} of the earliest architectural styles ever used. Even today layered structure is a very common architectural style used in various industrial systems. However, we have observed that the usage of layered architectural style varies greatly in different contexts. This paper aims to compare the notion of software <b>architecture</b> <b>layers</b> in research literature as well as in industrial practice. Firstly, we performed a systematic literature review of research articles on layered software architectures; we also reviewed selected books of software architecture. Secondly, to understand the practice, we investigated a number different recent architecture documents to cover the current usage of <b>layered</b> <b>architectures.</b> Our results indicate that there is very little actual research done on <b>layered</b> <b>architectures.</b> The current usage of layered structures seems to be more complex than reported before. This gap between the research and practice needs to be bridged by researchers. ...|$|R
30|$|In <b>layered</b> <b>architectures,</b> each network <b>layer</b> {{requires}} overprovisioning of its provided buffers {{to ensure}} that all packets can be stored. Using a shared queue approach, this overprovisioning is required only once. As a result, network services are simpler and have a small memory footprint.|$|R
40|$|Employment of multi-element antenna arrays at both tranmit {{and receive}} sites {{is capable of}} {{enormous}} theoretical capacity over wireless communication systems. In this paper different decoding strategies for space-time coded systems and <b>layered</b> <b>architectures</b> are analysed from a performance and complexity point of view...|$|R
