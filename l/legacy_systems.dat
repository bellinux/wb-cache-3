1984|1392|Public
25|$|The {{surviving}} <b>legacy</b> <b>systems</b> using PCC streetcars {{have since}} replaced their PCC cars with modern light rail vehicles, although restored vintage PCC cars {{are still in}} regular operation on Boston's Ashmont-Mattapan High Speed Line, and {{as well as on}} San Francisco's restored F Market heritage line. New Orleans' streetcar system also continues to operate a few surviving Perley Thomas cars (along with replica cars). All of the other <b>legacy</b> <b>systems</b> have received new equipment and most have upgraded to modern light rail vehicles, though Toronto's CLRV vehicles are still largely based on the PCC design.|$|E
25|$|The Java {{platform}} {{has matured}} into an Enterprise Integration role in which <b>legacy</b> <b>systems</b> are unlocked {{to the outside}} world through bridges built on the Java platform. This trend has been supported for Java platform support for EAI standards like messaging and Web services and has fueled the inclusion of the Java platform as a development basis in such standards as SCA, XAM and others.|$|E
25|$|David Kirkpatrick, {{author of}} The Facebook Effect (2010), {{wrote in an}} article called Tech Targets the Third World {{projects}} that technological advancements in education and health care, mobile computing and broadband will empower the poor and provide economic opportunities {{that they would not}} otherwise have access. These technologies are relatively easy and cost-effective to implement because of technological advancements that have driven down the costs and because developing countries do not have expensive and outdated <b>legacy</b> <b>systems</b> to manage emerging technology.|$|E
40|$|In {{order to}} migrate the {{enterprise}} <b>legacy</b> <b>system</b> to the web, a multi-agent based <b>legacy</b> <b>system</b> encapsula-tion model is proposed. Firstly, {{the characteristics of}} <b>legacy</b> <b>system</b> are analyzed, and then the data and functions {{that need to be}} published are confirmed. Secondly the <b>legacy</b> <b>system</b> is wrapped into web com-ponents with common interface, and these components are managed by the application server. Thirdly, the clients can send requests to the application server, and receive the return result from the application server. Due to adoption of wrapping technology for <b>legacy</b> <b>system,</b> original security and stability of <b>legacy</b> <b>system</b> are guaranteed in the web components. Finally, the validity and practicability of the migra-tion technology are verified through the application in the encapsulation of Matlab as web components...|$|R
40|$|Successful {{reengineering}} effort requires {{identifying and}} measuring impact of various risk components of <b>legacy</b> <b>system.</b> Risk identification and measurement process involve {{a clear understanding}} of various <b>legacy</b> <b>system</b> segments in accordance with requirements of target system. In this paper we pay attention to infrastructure and stakeholder segment of <b>legacy</b> <b>system.</b> We identify and measure impact of different risk components related to infrastructure and stakeholder segment of <b>legacy</b> <b>system.</b> In infrastructure segment we cover risk components and affecting factors associated with system development & deployment process of organization and its available resources. In the stakeholder’s segment we addresses risk components and affecting factors related to personal and professional attributes of stakeholders involve in reengineering process of <b>legacy</b> <b>system.</b> Finally, we contribute to analyze the cause-effect relationship between the reengineering process and existing state of <b>legacy</b> <b>system</b> in accordance with requirements of target system...|$|R
40|$|This paper {{describes}} {{a process of}} gradual reengineering of the procedural components of a <b>legacy</b> <b>system.</b> The process is integrated and completed by the data reengineering process analyzed in a previous paper by the same authors. The proposed method enables the <b>legacy</b> <b>system</b> to be gradually emptied into the reengineered system, without needing to either duplicate the <b>legacy</b> <b>system</b> or freeze it. The process consists of evolving the <b>legacy</b> <b>system</b> components toward firstly a restored system and then toward the reengineered <b>system.</b> Meanwhile, the <b>legacy</b> <b>system</b> can coexist with both the restored and the reengineered parts. By {{the end of the}} process, a single system will be in existence: the reengineered one. The method has been applied to reengineer a real system and demonstrated its ability to: support gradual reengineering, maintain the system at work during the process, minimize the need to freeze maintenance requests, renew the operative environment of the reengineered system with respect to the <b>legacy</b> <b>system</b> and, finally, eliminate all the system's aging symptoms...|$|R
25|$|The AN/BQQ-5 {{system was}} {{replaced}} by the AN/BQQ-10 system. Acoustic Rapid Commercial Off-The-Shelf Insertion (A-RCI), designated AN/BQQ-10, is a four-phase program for transforming existing submarine sonar systems (AN/BSY-1, AN/BQQ-5, and AN/BQQ-6) from <b>legacy</b> <b>systems</b> to a more capable and flexible COTS/Open System Architecture (OSA) and also provide the submarine force with a common sonar system. A single A-RCI Multi-Purpose Processor (MPP) has as much computing power as the entire Los Angeles (SSN-688/688I) submarine fleet combined and will allow the development and use of complex algorithms previously beyond the reach of legacy processors. The use of COTS/OSA technologies and systems will enable rapid periodic updates to both software and hardware. COTS-based processors will allow computer power growth at a rate commensurate with the commercial industry.|$|E
2500|$|Several very {{different}} approaches {{were used to}} solve the Year 2000 problem in <b>legacy</b> <b>systems.</b> Three of them follow: ...|$|E
2500|$|Under Cameron Clyne's leadership, NAB {{began to}} upgrade its core banking {{platform}} {{in a project}} dubbed [...] "NextGen". The project involves the replacement of its <b>legacy</b> <b>systems</b> which are up to 40 years old with an Oracle-based solution. UBank {{was reported to be}} the first beneficiary of this project. In total, the project was expected to be completed in 2014 and cost $1 billion.|$|E
40|$|Reengineering a COBOL <b>legacy</b> <b>system</b> is a {{difficult}} multi-step process, particularly when the COBOL <b>legacy</b> <b>system</b> is a sequential procedural-driven system which is being reengineered into an object oriented, event-driven system. In this scenario, {{it is necessary to}} analyse the <b>legacy</b> <b>system</b> in order to identify possible objects with their attributes and methods within the code and to determine how the <b>legacy</b> <b>system’s</b> variables and procedures interrelate in order to model pseudo-events from strictly sequential code. The focus of reengineering is too often based on theory rather than based on experience gained from real-world examples. This paper hopes to address this imbalance by providing a practical application of reengineering to an actual <b>legacy</b> telecommunications <b>system...</b>|$|R
40|$|<b>Legacy</b> {{information}} <b>systems</b> typically {{form the}} backbone of the information flow within an organisation and are the main vehicle for consolidating information about the business. These systems also pose considerable problems - brittleness, inflexibility, isolation, nonextensibility, lack of openness etc -, the so called <b>legacy</b> <b>system</b> problem which opens up a new research topic, <b>legacy</b> <b>system</b> migration. This paper provides a brief review of the main issues involved in <b>legacy</b> information <b>systems</b> migration...|$|R
40|$|This study {{proposed}} {{a solution of}} hierarchical architecture reused model to realize <b>legacy</b> <b>system</b> reengineering for the secondary development process of endowment insurance based on the third-version core platform of China Social Insurance Management System of golden insurance project. In the model, every legacy function component is wrapped in the unified interface standard of SOA to realize <b>legacy</b> <b>system</b> reengineering application based on component reuse. The development of illustration system and components shows that the solution provides a good mechanism of realization and safeguard for <b>legacy</b> <b>system</b> reengineering and the solution can also provide more beneficial reference and help for <b>legacy</b> <b>system</b> reengineering during software development and integration in cloud computing platform...|$|R
2500|$|An {{interesting}} and relatively recent development relating coarse WDM {{is the creation}} of GBIC and small form factor pluggable (SFP) transceivers utilizing standardized CWDM wavelengths. GBIC and SFP optics allow for something very close to a seamless upgrade in even <b>legacy</b> <b>systems</b> that support SFP interfaces. Thus, a legacy switch system can be easily [...] "converted" [...] to allow wavelength multiplexed transport over a fiber simply by judicious choice of transceiver wavelengths, combined with an inexpensive passive optical multiplexing device.|$|E
2500|$|Two-digit {{years were}} retained, and {{programs}} determined the century value only when needed for particular functions, such as date comparisons and calculations. (The century [...] "window" [...] {{refers to the}} 100-year period to which a date belongs). This technique, which required installing small patches of code into programs, was simpler to test and implement than date expansion, thus much less costly. While not a permanent solution, windowing fixes were usually designed to work for several decades. This was thought acceptable, as older <b>legacy</b> <b>systems</b> tend to eventually get replaced by newer technology.|$|E
2500|$|On 13 November 2013, Air Force Chief of Staff General Mark Welsh {{revealed}} that the service {{was interested in the}} SR-72's hypersonic capabilities, but had not spoken with Lockheed about the aircraft. [...] Its high speed appeals to the service to reduce the time an adversary would have to react to an operation. [...] They are pursuing hypersonic technology, but don't yet have the material ability to construct a full-size plane like the unmanned SR-72. [...] The SR-72 was unveiled in the midst of sequestration budget cuts that have forced the Air Force to prioritize acquisition projects and sacrifice mission readiness. [...] By the mid-2020s, it is believed that foreign countries will produce and export advanced aerial technologies that could end up in battlespaces against the United States. [...] This drives the Air Force to further develop new systems, including hypersonic, to replace <b>legacy</b> <b>systems</b> that would be outclassed in those situations.|$|E
40|$|Abstract Reengineering a COBOL <b>legacy</b> <b>system</b> is a {{difficult}} multi-step process, particularly when the COBOL <b>legacy</b> <b>system</b> is a sequential procedural-driven system which is being reengineered into an object oriented, event-driven system. In this scenario, {{it is necessary to}} analyse the <b>legacy</b> <b>system</b> in order to identify which tasks can be executed independently and which tasks must be executed sequentially. The focus of reengineering is too often based on theory rather than based on experience gained from real-world examples. This paper hopes to address this imbalance by providing a practical application of reengineering to an actual <b>legacy</b> telecommunications <b>system...</b>|$|R
40|$|In this thesis, {{numerous}} Machine Learning (ML) {{applications for}} Cognitive Radios Networks (CRNs) are developed and presented which facilitate the e cient spectral coexistence of a <b>legacy</b> <b>system,</b> the Primary Users (PUs), and a CRN, the Secondary Users (SUs). One way to better exploit {{the capacity of}} the <b>legacy</b> <b>system</b> frequency band is to consider a coexistence scenario using underlay Cognitive Radio (CR) techniques, where SUs may transmit in the frequency band of the PU system as long as the induced to the PU interference is under a certain limit and thus does not harmfully a ect the <b>legacy</b> <b>system</b> operability...|$|R
5000|$|Organizations {{can have}} {{compelling}} reasons for keeping a <b>legacy</b> <b>system,</b> such as: ...|$|R
5000|$|Current <b>legacy</b> <b>systems</b> and {{any future}} plans of {{decommissioning}} such <b>legacy</b> <b>systems.</b>|$|E
5000|$|Primary {{issues with}} a legacy system include very old systems with lack of documentation, lack of SMEs/ {{knowledge}} on the <b>legacy</b> <b>systems</b> and dearth of technology skills {{in which the}} <b>legacy</b> <b>systems</b> have been implemented. Typical <b>legacy</b> <b>systems</b> have been in existence {{for more than two}} decades. Migrating is fraught with challenges: ...|$|E
50|$|<b>Legacy</b> <b>systems</b> & {{services}} need to {{be modified}} {{in order to be}} tested on cloud. Usage of robust interfaces with these <b>legacy</b> <b>systems</b> may solve this problem. Also like any other cloud services, cloud testing is vulnerable to security issues.|$|E
40|$|Society of Semendo tribe follows matrilineal kinship <b>system</b> within major <b>legacy.</b> It {{means that}} the elder {{daughter}} is the only heir in legacy practice which is called Tunggu Tubang. It is a significant case for studies on Islamic law, especially the <b>legacy</b> law <b>system</b> of Islam. In Islamic <b>legacy</b> <b>system,</b> the distribution always sets out justice principle, equivalence, and prosperity in its implementation. Therefore, {{the focus of this}} study is the analysis of Islamic law toward the legacy in society of Semendo at West Lampung in contemporary era. This research is field research by using qualitative approach. The finding shows that philosophically the <b>legacy</b> <b>system</b> of Semendo tradition in perspective of Islamic law (the legacy law of Islam) is not in contradictory with the basics of prosperity and ushul fiqh of “urf” (tradition). Furthermore, in the contemporary era at West Lampung regency, it indicates displacement of existing values in Semendo society. The major <b>legacy</b> <b>system</b> gradually changes into individual <b>legacy</b> <b>system</b> that is parental as an effect of modernization and wider society network...|$|R
50|$|In 2006, TMCC was {{phased out}} when Lionel {{unveiled}} their new <b>Legacy</b> <b>system.</b>|$|R
5000|$|... $54.9 {{billion in}} {{book-entry}} marketable issues {{held in a}} <b>legacy</b> <b>system</b> by 278,000 customers ...|$|R
50|$|The {{re-examination}} {{of attitudes}} toward <b>legacy</b> <b>systems</b> is also inviting more reflection on what makes <b>legacy</b> <b>systems</b> as durable as they are. Technologists are relearning that sound architecture, practiced up front, helps businesses avoid costly and risky rewrites in the first place. The most common <b>legacy</b> <b>systems</b> tend to be those which embraced well-known IT architectural principles, with careful planning and strict methodology during implementation. Poorly designed systems often don't last, both because they wear out and because their reliability or usability are low enough {{that no one is}} inclined to make an effort to extend their term of service when replacement is an option. Thus, many organizations are rediscovering the value of both their <b>legacy</b> <b>systems</b> themselves and those systems' philosophical underpinnings.|$|E
5000|$|It is {{relatively}} easy to implement for complex <b>legacy</b> <b>systems.</b>|$|E
5000|$|Minimize {{the effort}} {{required}} to maintain or extend <b>legacy</b> <b>systems</b> ...|$|E
40|$|A <b>legacy</b> <b>system</b> is {{a system}} that is built using old technologies, but it is still {{beneficial}} to an organization. However, today it is facing a great challenge {{to meet the demands of}} current applications. Organizations are coming under great pressure to decide on the fate of the <b>legacy</b> <b>system</b> as they try to cope with the changing scenario. Among the alternatives offered are: discarding the <b>legacy</b> <b>system</b> and replacing it with a totally new system, allowing the system to deteriorate until the organization is out of business, redeveloping the system, or reengineering the system. Reengineering seems to offer the best solution to the challenge. This paper focuses on transformation, which is one of the reengneering technologies for migrating a <b>legacy</b> <b>system</b> toward an evolvable <b>system.</b> A few <b>legacy</b> software transformation approaches are discussed. A framework for legacy software migration that combines the strengths of each of the described approaches is proposed...|$|R
40|$|Competitive {{business}} environment wants to modernize existing <b>legacy</b> <b>system</b> in to self-adaptive ones. Avariety of options {{are available to}} renovate <b>legacy</b> <b>system</b> in to more contemporary system. Recently thephenomenon of “software reengineering “, a methodology to allow old ways of thinking to be replacedwith new, fresh approaches to increase productivity and quality of system, has been reported. Howeverevolving <b>legacy</b> <b>system</b> through reengineering is a risky and error –prone task due to extensive changes itrequires {{in the majority of}} cases. Therefore cost effective reengineering requires identifying and measuringimpact of system, managerial and technical risk. We present a technical domain framework TechRisk toidentify and measure quality and functional dimensions of <b>legacy</b> <b>system.</b> The objective is to identify thoserisk factors of technical domain which are {{critical to the success of}} reengineering. Proposed decisiondriven framework TechRisk provide support to identify and eliminate the highest impact risks in thesoftware reengineering process and help to create a successful reengineering solution...|$|R
40|$|During {{its life}} a <b>legacy</b> <b>system</b> is {{subjected}} to many maintenance activities, which cause degradation {{of the quality of}} the system: when this degradation exceeds a critical threshold the <b>legacy</b> <b>system</b> needs to be reengineered. In order to preserve the asset represented by the <b>legacy</b> <b>system,</b> the familiarity with it gained by the system’s maintainers and users, and the continuity of execution of current operations during the reengineering process, the system needs to be reengineered gradually. Moreover, each program needs to be reengineered within a short period of time. The paper proposes a reengineering process model, which is applied to an in-use <b>legacy</b> <b>system</b> to confirm that the process satisfies previous requirements and to measure its effectiveness. The reengineered <b>system</b> replaced the <b>legacy</b> one to the satisfaction of all the stakeholders; the reengineering process also had a satisfactory impact on the quality of the system. Finally, this paper contributes to validate the cause-effect relationship between the reengineering process and overcoming the aging symptoms of a software system...|$|R
5000|$|... b) verify {{historic}} {{data from}} <b>legacy</b> <b>systems</b> or other Blockchains ...|$|E
5000|$|... #Subtitle level 3: Integration to most EHRs and <b>Legacy</b> <b>systems</b> ...|$|E
5000|$|Software {{designers}} that knit together <b>legacy</b> <b>systems</b> with internet-based technologies; and ...|$|E
40|$|Reengineering of {{operational}} <b>legacy</b> <b>system</b> {{is a novel}} {{technique for}} software rejuvenation. Reengineering is used specifically to satisfy and even delight modern customers and market with the value of our software products and services to gain their loyalty and repeat business. However, it incurs some overhead in terms of risk. The basic necessity for the successful implementation of reengineering strategy is to measure the overall impact of different reengineering risk components that arises from system, managerial and technical domain of <b>legacy</b> <b>system.</b> Quantifiable risk measures are necessary for the measurement of reengineering risk to take decision about when the evolution of <b>legacy</b> <b>system</b> through reengineering is successful. We present a quantifiable measurement model to measure comprehensive impact of different reengineering risk arises from quality perspective of <b>legacy</b> <b>system.</b> The model consists of five reengineering risk component, including Maintainability risk, Project complexity risk, Software architecture risk, Training Risk and Security risk component. Proposed measurement model offers better performance in terms of risk measurement to support the decision-making process...|$|R
40|$|The {{widespread}} use of computer technology over several decades has resulted in some large, complex systems that have evolved to a state where they significantly resist further modification and evolution. Although these <b>Legacy</b> Information <b>Systems</b> pose considerable problems (brittleness, inflexibility, isolation, non-extensibility, lack of openness, etc.), {{they may also be}} mission-critical: if one of these systems stops working the business may grind to a halt. Thus for many organisations, decommissioning is not an option. An alternative solution is <b>Legacy</b> <b>System</b> Migration that has recently become an important research and practical issue. <b>Legacy</b> <b>System</b> Migration is a relatively new field of research and few comprehensive methods or practical experiences have been reported. This paper provides a brief overview of existing research and practise when dealing with <b>Legacy</b> Information <b>Systems,</b> and in particular of the area of <b>Legacy</b> Information <b>System</b> Migration...|$|R
5000|$|... 1970s - National Distress <b>System</b> (<b>legacy</b> <b>system)</b> is {{installed}} to receive {{and respond to}} VHF distress calls.|$|R
