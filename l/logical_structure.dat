1737|709|Public
5|$|The {{book has}} a tightly <b>logical</b> <b>structure,</b> and {{presents}} a bold argument. Illustrations {{are used as}} an integral part of the argument, with numerous detailed charts and one large world map marked in colour showing all reefs known at that time. A brief introduction sets out the aims of the book.|$|E
5|$|A level-number of 66 is used {{to declare}} a re-grouping of {{previously}} defined items, irrespective of how those items are structured. This data level, also referred to by the associated , is rarely used and, circa 1988, was usually found in old programs. Its ability to ignore the hierarchical and <b>logical</b> <b>structure</b> data meant its use was not recommended and many installations forbade its use.|$|E
5|$|In the yeshiva world, the {{brightest}} students are highly desirable as chavrusas. However, there are {{pros and cons}} to learning with chavrusas who are stronger, weaker, or equal in knowledge and ability to the student. A stronger chavrusa will correct and fill in the student's knowledge and help him improve his learning techniques, acting more like a teacher. With a chavrusa who is equal in knowledge and ability, the student is forced to prove his point with logic rather than by right of seniority, which improves his ability to think logically, analyze other people's opinions objectively, and accept criticism. With a weaker chavrusa, who often worries over and questions each step, the student is forced to understand the material thoroughly, refine and organize his thoughts in a <b>logical</b> <b>structure,</b> present his viewpoint clearly, {{and be ready to}} justify each and every point. The stronger chavrusa helps the student acquire a great deal of information, but the weaker chavrusa helps the student learn how to learn. Yeshiva students are usually advised to have one of each of these three types of chavrusas in order to develop on all three levels.|$|E
40|$|General purpose rich-text editors, such as MS Word {{are often}} used to author {{software}} requirements specifications. These requirements specifications contain many different <b>logical</b> <b>structures,</b> such as use cases, business rules and functional requirements. Automated recognition and extraction of these <b>logical</b> <b>structures</b> is necessary to provide useful automated requirements management features, such as automated traceability, template conformance checking, guided editing and interoperability with sophisticated requirements management tools like Requisite Pro. The variability among instances of these <b>logical</b> <b>structures</b> and their attributes poses many challenges for their accurate recognition and extraction. The thesis provides a framework for the extraction of <b>logical</b> <b>structures</b> from software requirements documents. The framework models information about style, structure, and attributes of the <b>logical</b> <b>structures</b> and uses the defined meta-model to extract instances of <b>logical</b> <b>structures.</b> A meta-model also incorporates information about the variability present in the instances. The framework includes an extraction tool, ET, that reads the meta-model and extracts instances of modelled <b>logical</b> <b>structures</b> from the documents. The framework is evaluated on a collection of real-world software requirements documents. Using the framework, different <b>logical</b> <b>structures</b> can be extracted with high precision and recall, each close to 100 %. The performance of the extraction tool is acceptable for fast extraction of <b>logical</b> <b>structures</b> from documents with extraction times ranging from a few milliseconds to a few seconds...|$|R
5000|$|... {{languages}} for document <b>logical</b> <b>structures</b> {{and their}} support facilities ...|$|R
40|$|<b>Logical</b> <b>structures</b> {{and case}} marking systems in Japanese are {{investigated}} {{in the framework}} of Role and Reference Grammar. Section one summarizes theoretical backgrounds. In section two, transitive, ditransitive, inversion, possessor-raising, causative, direct passive, and indirect passive constructions are discussed. Based on the observations of those structures and synactic behaviors, it is concluded that case marking systems in Japanese are accounted for by referring to <b>logical</b> <b>structures</b> and the notion of ‘pragmatic peak’. Instead of grammatical relations,the combination of semantic argument status in <b>logical</b> <b>structures,</b> syntactic argument/adjunct status, and pragmatics are appropriate to describe case marking systems and syntactic behaviors in Japanese...|$|R
25|$|J.D. Sneed, The <b>Logical</b> <b>Structure</b> of Mathematical Physics. Reidel, Dordrecht, 1971 (revised edition 1979).|$|E
25|$|This {{alternative}} {{approach to the}} definition of quantity of energy transferred as heat differs in <b>logical</b> <b>structure</b> from that of Carathéodory, recounted just above.|$|E
25|$|Beginning {{with his}} Syntactic Structures (1957), a {{distillation}} of his <b>Logical</b> <b>Structure</b> of Linguistic Theory (1955), Chomsky challenges structural linguistics and introduces transformational grammar.|$|E
5000|$|Support of <b>logical</b> <b>structures</b> (such as conditions, loops, or {{iterating over}} arrays) ...|$|R
40|$|Text {{documents}} generally contain {{two forms}} of <b>structures,</b> <b>logical</b> <b>structures</b> and physical <b>structures.</b> Loosely speaking, <b>logical</b> <b>structures</b> are sections of text that are both visually and semantically distinct. For example, a document may have an "introduction", a "body", and a "conclusion" as its <b>logical</b> <b>structures.</b> These structures are so named because each section has a distinct purpose in conveying the document's logical arguments or intentions. Perfect machine recognition of <b>logical</b> <b>structures</b> in large collections of documents is an unsolved problem in computational linguistics. This thesis presents evidence that a new family of functions on text segments carries information that is useful for differentiating document <b>logical</b> <b>structures.</b> For any given text segment, a function of this form {{is referred to as}} the cadence, and it is based on a new interpretation of the vector space representation that Gerard Salton introduced in 1975. Cadence also differs from the original Salton representation in that it relies on three heuristic transformations based on authorship, location, and term coherence. To test the hypothesis that the cadence of a text segment carries information helpful to differentiating <b>logical</b> <b>structures,</b> a corpus was built containing 2800 documents with manually-annotated <b>logical</b> <b>structures.</b> Structures representing abstracts, introductions, bodies, and conclusions from this corpus were clustered with a k-means algorithm using cadence data. Precision and recall performances were computed for the results, and a chi-squared cross-tabulation test was used to determine the statistical significance of the clustering results. Precision and recall were highest for abstracts (P = 0. 931 [plus-minus] 0. 025, R = 0. 992 (cont.) [plus-minus] 0. 026), followed by introductions (P = 0. 747 [plus-minus] 0. 025, R = 0. 802 [plus-minus] 0. 026) and conclusions (P = 0. 737 [plus-minus] 0. 025, R = 0. 813 [plus-minus] 0. 026), and lowest for bodies (P = 0. 876 [plus-minus] 0. 03, R = 0. 663 [plus-minus] 0. 026). These results suggest that cadence may have substantial promise for finding <b>logical</b> <b>structures</b> in un-annotated documents. by Ngon D. Dao. Thesis (Ph. D.) [...] Harvard-MIT Division of Health Sciences and Technology, 2004. Includes bibliographical references (p. 49 - 51) ...|$|R
50|$|<b>Logical</b> <b>Structures</b> of Ockham's Theory of Supposition. Franciscan Studies 38(1978) 161-83. With J. Swiniarski.|$|R
25|$|In {{addition}} to the Elements, at least five works of Euclid have survived to the present day. They follow the same <b>logical</b> <b>structure</b> as Elements, with definitions and proved propositions.|$|E
25|$|In 1926 Schlick and Hahn {{arranged}} to bring Rudolf Carnap to the University of Vienna as a Privatdozent (private lecturer). Carnap‘s <b>Logical</b> <b>Structure</b> of the World was intensely {{discussed in the}} Circle.|$|E
25|$|Rule 6 The {{composite}} or {{integration of}} all cell models in one row constitutes a complete model {{from the perspective}} of that row : For the same reason as for not adding rows and columns, changing the names may change the fundamental <b>logical</b> <b>structure</b> of the Framework.|$|E
5000|$|The YAML {{specification}} identifies {{an instance}} document as a [...] "Presentation" [...] or [...] "character stream". The primary <b>logical</b> <b>structures</b> in a YAML instance document are scalar, sequence, and mapping. The YAML specification also indicates some basic constraints {{that apply to}} these primary <b>logical</b> <b>structures.</b> For example, according to the specification, mapping keys {{do not have an}} order. In every case where node order is significant, a sequence must be used.|$|R
40|$|This paper {{analyzes}} the verbs prefixed with ma- in Amis, a Formosan Austronesian language spoken {{in the east}} coast of Taiwan. This marker is notorious for its semantic complexity, which is manifested in its dual or even multiple presences in verb classes and voice marking. In this paper, I try to elucidate this complexity within the framework of Role and Reference Grammar (Van Valin and LaPolla 1997). In addition to the earlier verb classifying criteria such as argument structure and derivational process, ma- verbs are categorized primarily classified into activity verbs, state verbs, and active accomplishment verbs based on their properties of lexical aspect, and each class is represented with <b>logical</b> <b>structures.</b> The case marking patterns of ma- will fall out from their respective <b>logical</b> <b>structures.</b> For ma- verbs that have BECOME in the <b>logical</b> <b>structures,</b> they will follow the genitive-nominative pattern, while the nominative-dative pattern is found with maverbs lacking BECOME in their <b>logical</b> <b>structures.</b> The RRG analysis can thus help resolve the complexity of ma- without resorting the confusing “voice ” (or focus) status of this affix. 1...|$|R
40|$|Kyushu University 21 st Century COE Program Development of Dynamic Mathematics with High Functionality九州大学 21 世紀COEプログラム「機能数理学の構築と展開」We {{propose a}} {{mathematical}} knowledge browser which helps people to read mathematical text. In the browser existing printed materials can be scanned and recognized by OCR (Optical Character Recognition). One of technologies {{needed to make}} the browser ideal is a method to extract automatically the <b>logical</b> <b>structures</b> and links like definitions, assertions, equations, proofs, citations from documents after OCR. In view of future development towards this goal, this paper discusses the method to extract the <b>logical</b> <b>structures</b> and links...|$|R
25|$|By far {{the best}} known {{commentary}} on the Babylonian Talmud is that of Rashi (Rabbi Solomon ben Isaac, 1040–1105). The commentary is comprehensive, covering almost the entire Talmud. Written as a running commentary, it provides a full explanation of the words, and explains the <b>logical</b> <b>structure</b> of each Talmudic passage. It is considered indispensable to students of the Talmud.|$|E
25|$|A newer schema language, {{described}} by the W3C as the successor of DTDs, is XML Schema, often referred to by the initialism for XML Schema instances, XSD (XML Schema Definition). XSDs are far more powerful than DTDs in describing XML languages. They use a rich datatyping system and allow for more detailed constraints on an XML document's <b>logical</b> <b>structure.</b> XSDs also use an XML-based format, which {{makes it possible to}} use ordinary XML tools to help process them.|$|E
25|$|The {{framework}} is a <b>logical</b> <b>structure</b> for classifying and organizing the descriptive representations of an enterprise. It is significant {{to both the}} management of the enterprise, and the actors involved in the development of enterprise systems. While there is no order of priority for the columns of the Framework, the top-down order of the rows is significant to the alignment of business concepts and the actual physical enterprise. The level of detail in the Framework is a function of each cell (and not the rows). When done by IT the lower level of focus is on information technology, however it can apply equally to physical material (ball valves, piping, transformers, fuse boxes for example) and the associated physical processes, roles, locations etc. related to those items.|$|E
30|$|In the {{following}} section, we describe how the <b>logical</b> <b>structures</b> of PDF and SWF files are processed {{for use by}} learning algorithms and describe the system design of Hidost.|$|R
40|$|Abstract—Software {{requirements}} documents (SRDs) {{are often}} authored in general-purpose rich-text editors, such as MS Word. SRDs contain instances of <b>logical</b> <b>structures,</b> such as use case, business rule, and functional requirement. Automated recognition and extraction of these instances enables advanced requirements management features, such as automated traceability, template conformance checking, guided editing, and interoperability with requirements management {{tools such as}} RequisitePro. The variability in content and physical representation of these instances poses challenges to their accurate recognition and extraction. To address these challenges, we present a framework allowing 1) the specification of <b>logical</b> <b>structures</b> {{in terms of their}} content, textual rendering, and variability and 2) the extraction of instances of such structures from rich-text documents. Our evaluation involves 36 different <b>logical</b> <b>structures</b> identified in 43 SRDs and shows that the intended content, style, and variability of these structures can be specified in the framework such that their instances can be extracted from the documents with high precision and recall, both close to 100 %...|$|R
40|$|This paper {{presents}} {{the basics of}} quantum dot cellular automata along with the QCA logic devices such as the QCA wire, inverter and the majority gate. The four phases of the clocking have been discussed and also the implementations of the complex gate have been done using the QCADesigner tool. The <b>logical</b> <b>structures</b> such as AND and OR gates using a quantum dot cellular automata 3 -input majority gate have been discussed based on which the five-input complex gate have been designed and can be configured into <b>logical</b> <b>structures</b> such as four input AND and OR...|$|R
25|$|African American Vernacular English (AAVE) is {{a variety}} (dialect, ethnolect, and sociolect) of the American English {{language}} {{closely associated with}} the speech of, but not exclusive to, African Americans. While AAVE is academically considered a legitimate dialect because of its <b>logical</b> <b>structure,</b> some of both whites and African Americans consider it slang or the result of a poor command of Standard American English. Many African Americans who were born outside the American South still speak with hints of AAVE or southern dialect. Inner-city African-American children who are isolated by speaking only AAVE sometimes have more difficulty with standardized testing and, after school, moving to the mainstream world for work. It is common for many speakers of AAVE to code switch between AAVE and Standard American English depending on the setting.|$|E
25|$|Nagai {{and another}} playwright, Hisashi Inoue, have {{similarities}} in their approaches because they both aim {{to write about}} ordinary people going through extraordinary situations. Both playwrights also write differently compared to other playwrights in their own generation — such as Toshiki Okada and Oriza Hirata. The clear and <b>logical</b> <b>structure</b> of Nagai's plays makes it naturalistic The characters are caught in some predicament and the motor for the play's theatricality is how the characters are liberated from the predicament. Nagai's plays are easily accessible to Western audiences because her works are both traditionally Japanese while also being very universal at the same time. Another playwright, Yōji Sakate, also resembles Nagai because the motivation behind his dramas is his social conscience. Sakate and Nagai both combine elements of Shingeki and Angura.|$|E
25|$|The Chomsky hierarchy, {{sometimes}} referred to as the Chomsky-Schützenberger hierarchy, is a containment hierarchy of classes of formal grammars. The hierarchy imposes a <b>logical</b> <b>structure</b> across different language classes and provides a basis for understanding the relationship between grammars (devices that enumerate the valid sentences within languages). In order of increasing expressive power it includes regular (or Type-3) grammars, context-free (or Type-2) grammars, context-sensitive (or Type-1) grammars, and recursively enumerable (or Type-0) grammars. Each class is a strict subset of the class above it, i.e., each successive class can generate a broader set of formal languages (infinite sets of strings composed from finite sets of symbols, or alphabets) than the one below. In addition to being important in linguistics, the Chomsky hierarchy is also relevant in theoretical computer science, especially in programming language theory, compiler construction, and automata theory.|$|E
40|$|Preserving {{access to}} file content {{requires}} preserving not just bits but also meaningful <b>logical</b> <b>structures.</b> The ongoing development of the Data Format Description Language (DFDL) is a completely general standard that addresses this need. The Defuddle parser is a generic parser that can use DFDL-style format descriptions to extract <b>logical</b> <b>structures</b> from ASCII or binary files written in those formats. DFDL and Defuddle provide a preservation capability that has minimal format-specific software and cleanly separates issues related to bits, formats, and logical content. Such a system {{has the potential to}} greatly reduce overall system development and maintenance costs as well as the per-file-format costs for long term preservation...|$|R
40|$|Abstract: The figure-ground {{division}} plays {{a fundamental}} {{role in all}} image perceptions. Although {{there are a lot of}} studies about extraction of a figure such as detection of edges or grouping of texture, there are few discussions about a relationship between obtained figure and ground. We focused on double image illusions having two complementary relationships be-tween figure and ground and analyzed them. We divided the double image illusions according to two different interpretations and using these divisions we extracted and analyzed their <b>logical</b> <b>structures</b> by lattices derived from rough sets that we had developed. As a result we discovered unusual <b>logical</b> <b>structures</b> in double image illusions...|$|R
40|$|Abstract. This paper {{discusses}} multimedia and hypermedia modeling, authoring and formatting tools, {{presenting the}} pro-posals of the HyperProp system and comparing them to re-lated work. It also highlights several research challenges that {{still need to}} be addressed. Moreover, it stresses the impor-tance of document <b>logical</b> <b>structuring</b> and considers the use of compositions in order to represent context relations, syn-chronization relations, derivation relations and task relations in hypermedia systems. It discusses temporal and spatial syn-chronization among multimedia objects and briefly presents the HyperProp graphical authoring and formatting tools. In-tegration between the proposed system and the WWW is also addressed. Key words: Nested context model – HyperProp system – Multimedia/hypermedia formatting – Document <b>logical</b> <b>structuring</b> – Spatio-temporal synchronization...|$|R
25|$|The Lorenz {{messages}} were codenamed Tunny at Bletchley Park. They were only sent in quantity from mid-1942. The Tunny networks {{were used for}} high-level messages between German High Command and field commanders. With the help of German operator errors, the cryptanalysts in the Testery (named after Ralph Tester, its head) worked out the <b>logical</b> <b>structure</b> of the machine despite not knowing its physical form. They devised automatic machinery to help with decryption, which culminated in Colossus, the world's first programmable digital electronic computer. This was designed and built by Tommy Flowers and his team at the Post Office Research Station at Dollis Hill. The prototype first worked in December 1943, was delivered to Bletchley Park in January and first worked operationally on 5 February 1944. Enhancements were developed for the Mark 2 Colossus, {{the first of which}} was working at Bletchley Park on the morning of 1 June in time for D-day. Flowers then produced one Colossus a month {{for the rest of the}} war, making a total of ten with an eleventh part-built. The machines were operated mainly by Wrens in a section named the Newmanry after its head Max Newman.|$|E
500|$|An {{intuitive}} {{feeling for}} the <b>logical</b> <b>structure</b> of any new mathematical theory; ...|$|E
500|$|After Rejewski {{had worked}} out the {{military}} Enigma's <b>logical</b> <b>structure,</b> the Polish Cipher Bureau commissioned the AVA Radio Company, co-owned by Antoni Palluth, to build replicas ("doubles") of the Enigma to Rejewski's specifications. His method of decrypting Enigma messages exploited two weaknesses of the German operating procedures. It used what Rejewski called [...] "characteristics" [...] that were independent of the plugboard connections. This involved compiling a card catalog of certain features of the set of indicator settings.|$|E
3000|$|Data {{services}} provide data {{represented in}} <b>logical</b> <b>structures</b> like tables or views. These are data structures without any procedural interface {{to the underlying}} database. The Data Service Layer can be mapped to the Non-Procedural and Algebraic Access level in the architecture by Härder and Reuter [62, 65].|$|R
5000|$|Severe {{criticism}} {{is put on}} the claim that these tools can solve [...] "real-life" [...] problems.In fact, only the terms used in the example suggest that the input to the programs comes from a concrete situation.The <b>logical</b> <b>structures</b> don't actually imply any meaning for the term.|$|R
40|$|We {{provide a}} {{construction}} which co-freely adds elementary structure to a primary doctrine {{in the sense}} of Lawvere. We show that the construction preserves all the first order <b>logical</b> <b>structures</b> that the starting doctrine may have. Moreover it forces the Principle of Propositional Extensionality when applied to triposes...|$|R
