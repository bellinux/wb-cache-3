61|36|Public
25|$|The {{equations}} of {{a linear}} system are independent {{if none of}} the equations can be derived algebraically from the others. When the equations are independent, each equation contains new information about the variables, and removing any of the equations increases {{the size of the}} solution set. For linear equations, <b>logical</b> <b>independence</b> is the same as linear independence.|$|E
25|$|Schopenhauer's realist {{views on}} {{mathematics}} {{are evident in}} his criticism of the contemporary attempts to prove the parallel postulate in Euclidean geometry. Writing shortly before the discovery of hyperbolic geometry demonstrated the <b>logical</b> <b>independence</b> of the axiom—and long before {{the general theory of}} relativity revealed that it does not necessarily express a property of physical space—Schopenhauer criticized mathematicians for trying to use indirect concepts to prove what he held to be directly evident from perception.|$|E
2500|$|... 1870– Felix Klein {{constructs}} an analytic geometry for Lobachevski's geometry thereby establishing its self-consistency and the <b>logical</b> <b>independence</b> of Euclid's fifth postulate.|$|E
50|$|<b>Logical</b> data <b>independence</b> is more {{difficult}} to achieve than physical data independence, since application programs are heavily dependent on the logical structure of the data that they access.|$|R
50|$|The {{ability to}} modify schema {{definition}} in one level without affecting schema definition {{in the next}} higher level is called data independence. There are two levels of data independence, they are Physical data <b>independence</b> and <b>Logical</b> data <b>independence.</b>|$|R
5000|$|<b>Logical</b> data <b>independence</b> is {{the ability}} to modify the logical schema without causing {{application}} program to be rewritten. Modifications at the logical level are necessary whenever the logical structure of the database is altered (for example, when money-market accounts are added to banking system). <b>Logical</b> Data <b>independence</b> means if we add some new columns or remove some columns from table then the user view and programs should not change. For example: consider two users A & B. Both are selecting the fields [...] "EmployeeNumber" [...] and [...] "EmployeeName". If user B adds a new column (e.g. salary) to his table, it will not effect the external view for user A, though the internal schema of the database has been changed for both users A & B.|$|R
5000|$|... #Subtitle level 2: <b>Logical</b> <b>independence</b> and quantum {{randomness}} ...|$|E
50|$|Since 2000, <b>logical</b> <b>independence</b> {{has become}} {{understood}} as having crucial {{significance in the}} foundations of physics.|$|E
50|$|The book then {{proceeds}} {{to describe the}} method of forcing. Through exercises, the reader learns to apply the method to prove <b>logical</b> <b>independence</b> results in set theory.|$|E
50|$|The ANSI-SPARC model however {{never became}} a formal standard. No {{mainstream}} DBMS systems are fully based on it (they {{tend not to}} exhibit full physical independence or to prevent direct user access to the conceptual level), {{but the idea of}} <b>logical</b> data <b>independence</b> is widely adopted.|$|R
5000|$|Logical data independence: The {{ability to}} change the logical (conceptual) schema without {{changing}} the External schema (User View) is called <b>logical</b> data <b>independence.</b> For example, the addition or removal of new entities, attributes, or relationships to the conceptual schema sternal schemas or having to rewrite existing application programs.|$|R
40|$|Computer {{supported}} cooperative work (CSCW) involving business-to-business transactions depends {{more and}} more upon database interoperability. The design of interbusiness CSCW when the businesses are already operating independent systems depends either upon effective reverse engineering (to properly discover the semantics underlying each organisation's systems and through that to develop appropriate matches for interbusiness software), or upon sufficiently rich semantic models and good database management system support for <b>logical</b> data <b>independence</b> (to allow database updating through a logical view). This paper takes the second approach presenting a rich semantic data model that the authors have been developing and have used successfully {{in a number of}} major consultancies, and a new approach to <b>logical</b> data <b>independence</b> and view updatability based on that model. We show how these approaches support database interoperability for business-to-business transactions, and, for CSCW within an organisation, how they support federated databases...|$|R
50|$|<b>Logical</b> <b>independence</b> is a {{well-known}} phenomenon in Mathematical Logic. It refers to the null logical connectivity that exists between mathematical propositions (in the same language) that neither prove nor disprove one another.|$|E
50|$|In 2008, Tomasz Paterek et al. {{provided}} an explanation in mathematical information. They published ingenious work, proving that quantum randomness is, exclusively, {{the output of}} measurement experiments whose input settings introduce <b>logical</b> <b>independence</b> into quantum systems.|$|E
50|$|In {{the work}} of Paterek et al., the {{researchers}} demonstrate a link connecting quantum randomness and <b>logical</b> <b>independence</b> in a formal system of Boolean propositions. In experiments measuring photon polarisation, Paterek et al. demonstrate statistics correlating predictable outcomes with logically dependent mathematical propositions, and random outcomes with propositions that are logically independent.|$|E
40|$|INTRODUCTION The Universal Relation (UR) {{model has}} played {{one of the}} central roles in {{relational}} database theory [4, 7, 8, 10]. While the relational model [9, 13] provides the database with physical data independence it does not provide the database with <b>logical</b> data <b>independence.</b> Thus, navigation amongst the relations in a given database is left to the user. To solve this problem the UR model achieves <b>logical</b> data <b>independence</b> by providing the database with an interface, which allows the user to view the database as if it were composed of a single relation. A widely used approach to the UR model is afforded by the concept of weak instances [7, 8, 10], which provide the UR model with a sound theoretical basis. In the weak instance approach the representative instance [4, 7, 8, 10] is defined to contain the maximum information that can be deduced at any given moment from a database, given a set o...|$|R
40|$|Testing {{is one of}} {{the most}} {{expensive}} and time consuming activities in the software development cycle. In order to reduce the cost and the time to market, many approa ches to automate certain testing tasks have been devised. Nevertheless, a great deal of testing is still carried out manually. This paper gives an overview of different testing scenarios and shows how database techniques (e. g., declarative specifications and <b>logical</b> data <b>independence)</b> can help to optimize the generation of test databases. Department of Computin...|$|R
40|$|Object-oriented {{views are}} {{important}} mechanisms {{that not only}} provide <b>logical</b> data <b>independence,</b> data hiding and security, but also are means of data integration, and simulating schema changes. Although several approaches to object-oriented views were proposed in scientific publications only a few commercial objectoriented databases support thel These approaches differ in functionality offered by views. In this paper we present an overview of different approaches to objectoriented views and compare them {{with regard to their}} basic features that comprise: view definition, integration and consistency, updateability through views, support for data hiding and security, and materialisation...|$|R
50|$|The {{equations}} of {{a linear}} system are independent {{if none of}} the equations can be derived algebraically from the others. When the equations are independent, each equation contains new information about the variables, and removing any of the equations increases {{the size of the}} solution set. For linear equations, <b>logical</b> <b>independence</b> is the same as linear independence.|$|E
50|$|Schopenhauer's realist {{views on}} {{mathematics}} {{are evident in}} his criticism of the contemporary attempts to prove the parallel postulate in Euclidean geometry. Writing shortly before the discovery of hyperbolic geometry demonstrated the <b>logical</b> <b>independence</b> of the axiom—and long before {{the general theory of}} relativity revealed that it does not necessarily express a property of physical space—Schopenhauer criticized mathematicians for trying to use indirect concepts to prove what he held to be directly evident from perception.|$|E
40|$|We {{propose a}} link between <b>logical</b> <b>independence</b> and quantum physics. We {{demonstrate}} that quantum systems in the eigenstates of Pauli group operators are capable of encoding mathematical axioms and show that Pauli group quantum measurements are capable of revealing {{whether or not a}} given proposition is logically dependent on the axiomatic system. Whenever a mathematical proposition is logically independent of the axioms encoded in the measured state, the measurement associated with the proposition gives random outcomes. This allows for an experimental test of <b>logical</b> <b>independence.</b> Conversely, it also allows for an explanation of the probabilities of random outcomes observed in Pauli group measurements from <b>logical</b> <b>independence</b> without invoking quantum theory. The axiomatic systems we study can be completed and are therefore not subject to Goedel's incompleteness theorem. Comment: 9 pages, 4 figures, published version plus additional experimental appendi...|$|E
50|$|The {{final stage}} of {{database}} design {{is to make the}} decisions that affect performance, scalability, recovery, security, and the like. This is often called physical database design. A key goal during this stage is data independence, meaning that the decisions made for performance optimization purposes should be invisible to end-users and applications. There are two types of data independence: Physical data <b>independence</b> and <b>logical</b> data <b>independence.</b> Physical design is driven mainly by performance requirements, and requires a good knowledge of the expected workload and access patterns, and a deep understanding of the features offered by the chosen DBMS.|$|R
40|$|We {{present a}} {{methodology}} and database mediator tool for integrating modern knowledge-based systems, {{such as the}} Stanford EON architecture for automated guideline-based decision-support, with legacy databases, such as the Veterans Health Information Systems & Technology Architecture (VISTA) systems, which are used nation-wide. Specifically, we discuss designs for database integration in ATHENA, a system for hypertension care based on EON, at the VA Palo Alto Health Care System. We describe a new database mediator that affords the EON system both physical and <b>logical</b> data <b>independence</b> from the legacy VA database. We found that to achieve our design goals, the mediator requires two separate mapping levels and must itself involve a knowledge-based component...|$|R
40|$|We {{present a}} concept to {{introduce}} external models in object-oriented databases {{to regain the}} traditional three level architecture of database systems consisting of an internal, a conceptual and several external models. In contrast to other approaches our concept takes into account all traditional features of external models - such as submodeling, interfacing application programs and databases, <b>logical</b> data <b>independence,</b> canned queries, and individualized access and security management. A unique advantage of this concept is the clear separation of the type and class hierarchies of the external models {{from those of the}} conceptual model allowing better and cleaner modularization of information systems built on top of object-oriented databases. 1...|$|R
40|$|Three {{definitions}} of <b>logical</b> <b>independence</b> of two von Neumann lattices P(M 1); P(M 2) of two sub-von Neumann algebras M 1; M 2 of a von Neumann algebra M are given and {{the relations of}} the definitions clarified. It is shown that under weak assumptions the following notion, called "logical independence" is the strongest: A^B 6 = 0 for any 0 6 = A 2 P(M 1); 0 6 = B 2 P(M 2). Propositions relating <b>logical</b> <b>independence</b> of P(M 1); P(M 2) to C -independence, W -independence and strict of locality of M 1; M 2 are presented...|$|E
40|$|In {{this paper}} a {{conditional}} logic is defined and studied. This conditional logic, Deterministic Bayesian Logic, is constructed as a deterministic counterpart to the (probabilistic) Bayesian conditional. The logic is unrestricted, {{so that any}} logical operations are allowed. This logic is shown to be non-trivial and is not reduced to classical propositions. The Bayesian conditional of DBL implies a definition of <b>logical</b> <b>independence.</b> Interesting results are derived about the interactions between the <b>logical</b> <b>independence</b> and the proofs. A model is constructed for the logic. Completeness results are proved. It is shown that any unconditioned probability can be extended to the whole logic DBL. The Bayesian conditional is then recovered from the probabilistic DBL. At last, it is shown why DBL is compliant with Lewis triviality. Comment: Fourth version. A sequent formalism is use...|$|E
40|$|AbstractWe {{prove the}} <b>logical</b> <b>independence</b> of a complexity-theoretic and a {{statistical}} randomness property of sequences over a finite field. The two properties {{relate to the}} linear complexity profile and to the ∞-distribution of sequences, respectively. The proofs are given by constructing counterexamples to the presumed logical implications between these two properties...|$|E
40|$|AbstractWe {{examine the}} {{representation}} of judgements of stochastic independence in probabilistic logics. We focus on a relational logic where (i) judgements of stochastic independence are encoded by directed acyclic graphs, and (ii) probabilistic assessments are flexible {{in the sense that}} they are not required to specify a single probability measure. We discuss issues of knowledge representation and inference that arise from our particular combination of graphs, stochastic <b>independence,</b> <b>logical</b> formulas and probabilistic assessments...|$|R
40|$|We {{present a}} concept of type {{derivation}} in order to introduce external models in object oriented database systems. This leads to the traditional three level DBMS architecture, consisting of an internal, a conceptual and several external models. In contrast to other approaches, our concept takes into account all traditional features of external models - such as submodeling, interfacing application programs and databases, <b>logical</b> data <b>independence,</b> canned queries, and individualized access and security management. We provide a clear separation of the type and class hierarchies of the external schema {{from those of the}} conceptual schema. This approach allows for better and cleaner modularization of information systems built on top of object-oriented databases. In this paper, we concentrate on the mechanisms to separate and connect the external and conceptual type hierarchies. 1...|$|R
40|$|We {{introduced}} a new approach, termed schema coordination, {{as an alternative to}} the wellknown schema integration approach for processing cooperative queries in federated database systems. The schema coordination approach is based on the attribute correspondence matrix that links similar attributes in all component databases. In this paper, we compare the schema coordination approach with the schema integration approach for both metadata management and cooperative query processing. We demonstrate that schema coordination offers a much simpler methodology that enables <b>logical</b> data <b>independence</b> and is especially better suited for database federations consisting of many competing databases with ever-evolving metadata. Key words: federated database systems, metadata management, multi-organizational information systems, query translation, schema coordination, schema integration, universal relation An earlier version of the work was presented at the Workshop on Information Technology and Sys [...] ...|$|R
40|$|We {{investigate}} {{the relation between}} monotonicity and the no-show paradox in voting rules. Although the literature has established their <b>logical</b> <b>independence,</b> we show, by presenting logical dependency results, that the two conditions are closer than a general logical independency result would suggest. Our analysis is made both under variable and fixed-size electorates...|$|E
40|$|During {{the last}} 35 years, data {{management}} principles such as physical and <b>logical</b> <b>independence,</b> declarative querying and cost-based optimization {{have led to}} profound pervasiveness of relational databases {{in any kind of}} organization. More importantly, these technical advances have enabled the first round of business intelligence applications and laid the foundation for managing and analyzing Big Data today...|$|E
40|$|According to Hugh Mellor in Real Time II (1998, Ch. 12), {{assuming}} the <b>logical</b> <b>independence</b> of causal {{facts and the}} 2 ̆ 7 law of large numbers 2 ̆ 7, causal loops are impossible because if they were possible they would produce inconsistent sets of frequencies. I clarify the argument, and argue {{that it would be}} preferable to abandon the relevant independence assumption in the case of causal loops...|$|E
40|$|Probabilistic {{graphical}} {{models are}} an elegant framework which combines uncertainty (probabilities) and <b>logical</b> structure (<b>independence</b> constraints) to compactly represent complex, real-world phenomena. The framework is quite general in {{that many of}} the commonly proposed statistical models (Kalman filters, hidden Markov models, Ising models) can be described as graphical models. Graphical models have enjoyed a surge of interest in the last two decades, due both to the flexibility and power of the representation and to the increased ability to effectively learn and perform inference in large networks. Graphicalmodels[11, 3, 5, 9, 7]havebecome an extremely popular tool for modeling uncertainty. They provide a principled approach to dealing with uncertainty through the use of probability theory, and an effective approach to coping with complexity through the use of graph theory. The two most common types of graphica...|$|R
40|$|Many {{datasets}} in {{the physical}} sciences, especially the results of simulations, are defined over a topological grid structure. Applications in these domains would benefit from a principled interface to gridded datasets via a specialized data model. Traditionally, benefits of a data model are realized only after data is ensconced within a managed database environment. However, massive bulk-loading and reloading operations in large-scale data repositories are prohibitively expensive. Instead, we superimpose a specialized data model over native data repositories stored on directly on OS filesystems rather than managed by a database system. Views in a specialized data model can be defined via references to native directory structures and file content, providing physical and <b>logical</b> data <b>independence.</b> This non-intrusive approach appears to reduce space requirements, speed development, and cooperate with legacy applications. ...|$|R
40|$|Abstract- We {{present a}} concept of type {{derivation}} in order to introduce external models in object oriented database systems. This leads to the traditional three level DBMS architecture, consisting of an internal, a conceptual and several external models. In contrast to other approaches, our concept takes into account all traditional features of external models- such as submodeling, interfacing application programs and databases, <b>logical</b> data <b>independence,</b> canned queries, and individualized access and security management. We provide a clear separation of the type and class hierarchies of the external schema {{from those of the}} conceptual schema. This approach allows for better and cleaner modularization of information systems built on top of object-oriented databases. In this paper, we concentrate on the mechanisms to separate and connect the external and conceptual type hierarchies. 1...|$|R
