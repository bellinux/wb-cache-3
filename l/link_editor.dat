14|38|Public
2500|$|The archiver, {{also known}} simply as ar, is a Unix utility that {{maintains}} groups of files as a single archive file. Today, ar is generally used only to create and update static library files that the <b>link</b> <b>editor</b> or linker uses and for generating [...]deb packages for the Debian family; {{it can be used}} to create archives for any purpose, but has been largely replaced by tar for purposes other than static libraries. [...] An implementation of ar is included as one of the GNU Binutils.|$|E
5000|$|Charles Berlitz's The Bermuda Triangle (1979) (credited as John <b>Link),</b> <b>editor</b> ...|$|E
50|$|A <b>link</b> <b>editor</b> and {{extended}} debugging facilities are provided to further support program development.|$|E
5000|$|... 2006: Zielinski, Siegfried and David <b>Link</b> (<b>Editors).</b> Variantology 2 - On Deep Time Relations Of Arts, Sciences and Technologies (Cologne: Verlag der Buchhandlung König)[...]|$|R
5000|$|Chosen Survivors (1974) (credited as John F. <b>Link</b> II), <b>editor</b> ...|$|R
5000|$|Handle with Care (1977) (credited as John F. <b>Link</b> II), <b>editor</b> ...|$|R
5000|$|The Real Woodrow Wilson: An Interview with Arthur S. <b>Link,</b> <b>editor</b> of the Wilson Papers, by James Robert Carroll. 1st ed. (Bennington, Vt.: Images {{from the}} Past, 2001).|$|E
50|$|In computing, {{a linker}} or <b>link</b> <b>editor</b> is a {{computer}} program that takes one or more object files generated by a compiler and combines them into a single executable file, library file, or another object file.|$|E
50|$|The Fortran {{version was}} also {{included}} in the distribution media for some Data General operating systems. It was used as an acceptance test to verify that the OS had been correctly installed. Being able to compile, link, and run the program demonstrated that all of the run-time libraries, compiler, and <b>link</b> <b>editor</b> were installed in the correct locations.|$|E
5000|$|Electra Glide in Blue (1973) (credited as John F. <b>Link</b> II), <b>editor</b> ...|$|R
5000|$|The King of Marvin Gardens (1972) (credited as John F. <b>Link</b> II), <b>editor</b> ...|$|R
5000|$|Footprints on the Moon - Apollo 11 (1969) (credited as John F. <b>Link</b> Jr.), <b>editor</b> ...|$|R
50|$|Systems {{without an}} {{operating}} system were intended for users needing dedicated applications {{that did not}} require the full capabilities of either OS. Applications were built using a set of standalone programs, called the Base Program Preparation Facilities, consisting of a macro assembler, a <b>link</b> <b>editor</b> and some basic utilities. A set of modules, called Control Program Support (CPS), was linked with the application to provide task management, data processing input/output support and initial program loading for both disks and diskettes.|$|E
5000|$|The archiver, {{also known}} simply as ar, is a Unix utility that {{maintains}} groups of files as a single archive file. Today, ar is generally used only to create and update static library files that the <b>link</b> <b>editor</b> or linker uses and for generating [...]deb packages for the Debian family; {{it can be used}} to create archives for any purpose, but has been largely replaced by tar for purposes other than static libraries. [...] An implementation of ar is included as one of the GNU Binutils.|$|E
50|$|Program {{translation}} {{has been}} {{divided into four}} subproblems: compiler, assembler, <b>link</b> <b>editor,</b> and loader. As a result, the translation software is layered as well, allowing the software layers to be designed independently. Noting that the ways to conquer the complexity of program translation could readily be applied to protocols because of the analogy between programming languages and protocols, the designers of the TCP/IP protocol suite were keen on imposing the same layering on the software framework. This {{can be seen in}} the TCP/IP layering by considering the translation of a pascal program (message) that is compiled (function of the application layer) into an assembler program that is assembled (function of the transport layer) to object code (pieces) that is linked (function of the Internet layer) together with library object code (routing table) by the <b>link</b> <b>editor,</b> producing relocatable machine code (datagram) that is passed to the loader which fills in the memory locations (ethernet addresses) to produce executable code (network frame) to be loaded (function of the network interface layer) into physical memory (transmission medium). To show just how closely the analogy fits, the terms between parentheses in the previous sentence denote the relevant analogs and the terms written cursively denote data representations. Program translation forms a linear sequence, because each layer's output is passed as input to the next layer. Furthermore, the translation process involves multiple data representations. We see the same thing happening in protocol software where multiple protocols define the data representations of the data passed between the software modules.|$|E
5000|$|Ziegler's Catalogue of Conodonts. Schweizerbart science {{publishers}} (<b>link</b> to <b>editor</b> website, retrieved 07 May 2016) ...|$|R
50|$|ALA Notable Children's Book(2003); Book <b>Links</b> <b>Editor’s</b> Best of 2003; 3)Chicago Public Library Best Books for Children and Teens; Parenting Magazine Book of the Year, 2004; Kansas 2005 Picture Book Award; Oppenheim Toy Portfolio Gold Award.; Philadelphia Children’s Please Touch Museum Book of the Year, 2007; New York Public Library 100 Best Books for Reading and Sharing, 2008; Children's Literature Association of Utah's Beehive Book Award, 2011.|$|R
5000|$|Print Email <b>link</b> Contact <b>editor</b> Report error Post comment Share: Share on Facebook Share on Twitter Share on Pinterest ...|$|R
50|$|In {{addition}} to multiterminal applications, DNOS provides support for advancedprogram development.Users communicate with DNOS by entering commands at a terminal or by providinga file of commands.The System Command Interpreter (SCI) processes those commands and directs theoperating system {{to initiate the}} action specified by a command.A text editor allows the user to enter source programs or data into the system.A Macro Assembler is provided for assembly language programs.Several high level languages, including Fortran, COBOL, BASIC, RPG II, andPascal, are supported.A <b>link</b> <b>editor</b> and extended debugging facilities are also provided.A variety of utility programs and productivity tools support access to andmanagement of information contained in a data base, design of specific formson the screen of a video display terminal (VDT), and word processing.|$|E
40|$|This {{report is}} a {{reference}} manual describing the capabilities, limitations, and {{usage of the}} University of Colorado Evaluation Net Simulation System. This software package implements a simulation programming language which is composed of a control flow graph model integrated with {{the text of the}} program. The implementation is composed of four subsystems: a graphic net editor, a compiler, a <b>link</b> <b>editor,</b> and an interpreter...|$|E
40|$|The {{design and}} {{implementation}} of a shared libraries facility for Sun's implementation of the UNIX+ operating system (SunOS) is described. Shared libraries extend the resource utilitization benefits obtained from sharing code between processes running the same program to processes running different programs by sharing the libraries common to them. In this design, shared libraries are viewed {{as the result of}} the application of several more basic system mechanisms, specifically # kernel-supplied facilities for file-mapping and "copy-on-write" sharing; # a revised <b>link</b> <b>editor</b> supporting dynamic binding; and # compiler and assembler changes to generate position-independent code. The use of these mechanisms is transparent to applications code and build procedures, and also to library source code written in higher-level languages. Details of the use and operation of the mechanism are provided, together with the policies by which they are applied to create a system with shared libraries. Ea [...] ...|$|E
5000|$|Mackenna's Gold (1969) (credited as John F. <b>Link</b> Jr.), {{associate}} <b>editor</b> ...|$|R
40|$|Linked Data {{builds a}} machine-processable Web of Data {{based on a}} large and growing number of RDF {{datasets}} and typed links among them. For the human user, Web-based interfaces were developed to enable browsing and editing Linked Data that is stored as native RDF. However, the majority of data on the current Web is stored in Relational Databases (RDB). This is a challenge for Linked Data browsers and especially for <b>Linked</b> Data <b>editors.</b> In this paper, we present UpLink which is {{to the best of}} our knowledge the first <b>Linked</b> Data <b>editor</b> for RDB-to-RDF data, i. e., RDF data that is mapped on demand from a RDB. We further present usage scenarios to demonstrate that UpLink supports the basic CRUD operations for editing Linked Data...|$|R
5000|$|Also in 2008, Sports Illustrated {{published}} a <b>link</b> to Managing <b>Editor</b> John McKay's story, titled [...] "Flint, Michigan football fans go blue over tickets." ...|$|R
40|$|Rights to {{individual}} papers {{remain with the}} author or the author's employer. Permission is granted for noncommercial reproduction of the work for educational or research purposes. This copyright notice must {{be included in the}} reproduced paper. USENIX acknowledges all trademarks herein. Library Interface Versioning in Solaris and Linux Shared libraries in Solaris and Linux use a versioning technique which allows the <b>link</b> <b>editor</b> to record an application’s dependency on a particular release level of the library. The versioning mechanism operates {{at the level of the}} library’s GLOBAL symbol names—a finer granularity than simply associating a version number with the library itself. In Solaris, this mechanism has also been used to provide a means for the system-supplied shared libraries to define their application interface: to declare specifically which of their symbols are intended for application use (and are stable from one release to the next), and which are internal to the system’s implementation (and hence subject to incompatible change). This paper describes the library symbol-versioning technology in Linux and Solaris, the ways in which it is used to support upward compatibility for existing compiled applications from one release of Solaris to the next, and the potential for similar mechanisms to be applied in Linux versioned shared libraries. ...|$|E
40|$|As {{more and}} more {{documents}} become available in electronic format, the use of hypertext systems is becoming more common {{as a way to}} organise information. However as the size of a hypertext database grows, the ‘lost in hyperspace’ problem may limit efficient and meaningful usage of hypertext systems. In order to increase local coherence at net level, authors should limit 2 ̆ 7 the fragmentation characteristics of hypertext’. These characteristics seem to be endemic to hyperdocuments and result from the segmentation of information into disjointed nodes. Fragmentation may result in a lack of interpretative context and thus lead to the impression that the hyper-document is an aggregation of loosely linked pieces of information rather then a coherent whole. In an attempt to understand a new node, readers try to extract information and relate it in context to other nodes that they have viewed. In this thesis we describe an application which incorporates an apprentice <b>link</b> <b>editor</b> to suggest candidate information/hypertext links for the hypertext author to validate. These ‘suggestions’ use node-to-node comparison and metrics to present the author with the most appropriate choices in adding a new node to the hypertext they are authoring. Although this project is intended to provide a hypertext author with the tools needed to enhance the construction of a large hypertext, the assumption of trusting the author, and the notion that the best quality control tool is a skilled author is never forgotten...|$|E
50|$|The website {{has hosted}} an {{internet}} forum since 1996 {{that serves as}} a <b>link</b> between <b>editors</b> and readers of the magazine. The site also encourages feedback about game reviews through a comments section while is also linked to a Twitter feed and Facebook page. Latest information on industry events, games development programmes and competitions is also linked to the site (Hyper 2010).|$|R
40|$|Abstract. SPARQL SAHA is a <b>linked</b> data <b>editor</b> and browser {{that can}} be used as a service, {{targeting}} any available SPARQL endpoint. Besides being available as a web service, the primary differentiating features of the tool are its configurability to match the underlying data, and the fact that the usability of its user interface has been verified by dozens of non-experts using the tool in multiple multi-year projects. ...|$|R
50|$|In July 2015, Strava {{switched}} to MapBox maps and imagery, based on OpenStreetMap data. Strava {{allows users to}} report issues with the maps, which are <b>linked</b> the OpenStreetMap <b>editor</b> so that users can contribute improvements to the map.|$|R
50|$|How {{and when}} Traits are linked is {{definitely}} open to interpretation. The Quickstart Preview only says that “Linked Traits should make sense {{in how they}} are <b>Linked</b> together. The <b>Editor</b> has the final say on whether the Links are applicable” (CC&VF Quickstart, pg. 4).|$|R
40|$|This report gives {{detailed}} information about the Topology Editor use and implementation. Topology Editor is under {{the scope of the}} DSP tool. DSP tool is a simulator that has, as main goal, the simulation and testing of the theoretical distributed algorithms in Distributed Computing area. In a simulation the user has to describe the network topology, the special software and hardware characteristics of all nodes and <b>links.</b> Topology <b>Editor</b> is the graphical tool of DSP to make easy the topology management. Postprint (published version...|$|R
40|$|In 2005 Wikipedia {{implemented}} a category {{system for the}} purposes of facilitating navigation throughout the site. Since then, it has grown to 1. 5 million categories covering over four million articles. Currently, all categorization of arti-cles on Wikipedia is done by human editors—a task which involves an enormous amount of repetitive work. This paper details the results of building an automated system that suggests missing category-article <b>links</b> to <b>editors</b> through a browser-based user-interface. This system utilizes the existing corpus of human-categorized articles, as well as available metadata, to provide a ranked list of suggested cate-gorizations. All suggested categorizations are subject to final approval or rejection by a human editor. 1...|$|R
50|$|The Edinburgh Gazette {{was first}} {{published}} in 1699 by James Watson (34 years after the first edition of The London Gazette). It ran for 41 issues, the last being on 17 July 1699, after which the <b>link</b> between the <b>editor,</b> Captain Donaldson, and the printer was broken. It reappeared sporadically, but did not begin an unbroken and continuous publication run until 1793.|$|R
5000|$|In 2010 Delingpole won the Bastiat Prize for Online Journalism for his Telegraph blog, a $3,000 prize {{awarded by}} the free-market International Policy Network for [...] "work that {{promotes}} {{the principles and}} institutions of the free society"; Damian Thompson, the Telegraphs blog <b>editor,</b> <b>linked</b> receipt of the award {{to the impact of}} Delingpoles posts on the Climatic Research Unit email controversy.|$|R
50|$|Alfred Horsley Hinton (1863 - 25 February 1908) was an English {{landscape}} photographer, {{best known}} for his work in the pictorialist movement in the 1890s and early 1900s. As an original member of the <b>Linked</b> Ring and <b>editor</b> of The Amateur Photographer, {{he was one of the}} movement's staunchest advocates. Hinton wrote nearly a dozen books on photographic technique, and his photographs were exhibited at expositions throughout Europe and North America.|$|R
40|$|Abstract. Despite {{considerable}} research {{dedicated to}} Semantic Web Services (SWS), structured semantics {{are still not}} used significantly to annotate Web services and APIs. This {{is due to the}} complexity of comprehensive SWS models and has led to {{the emergence of a new}} approach dubbed Linked Services. Linked Services adopt Linked Data principles to produce simplified, RDF-based service descriptions that are easier to create and interpret. However, current <b>Linked</b> Services <b>editors</b> assume the existence of services documentation in the form of HTML or WSDL files. Therefore, we introduce SmartLink, a Web-based editor and search environment for Linked Services. Based on an easy-to-use Web form and a REST-ful API, SmartLink allows both humans as well as machines to produce light-weight service descriptions from scratch...|$|R
